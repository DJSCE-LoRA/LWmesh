

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 05 15:42:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=4,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=4,class=CODE,delta=1
   150                           	psect	text127,global,reloc=4,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=4,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   162  0000                     
   163                           ; Version 2.10
   164                           ; Generated 31/07/2019 GMT
   165                           ; 
   166                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   167                           ; All rights reserved.
   168                           ; 
   169                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   170                           ; 
   171                           ; Redistribution and use in source and binary forms, with or without modification, are
   172                           ; permitted provided that the following conditions are met:
   173                           ; 
   174                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   175                           ;        conditions and the following disclaimer.
   176                           ; 
   177                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   178                           ;        of conditions and the following disclaimer in the documentation and/or other
   179                           ;        materials provided with the distribution.
   180                           ; 
   181                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   182                           ;        software without specific prior written permission.
   183                           ; 
   184                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   185                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   186                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   187                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   188                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   189                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   190                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   191                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   192                           ; 
   193                           ; 
   194                           ; Code-generator required, PIC18F26K42 Definitions
   195                           ; 
   196                           ; SFR Addresses
   197  0000                     
   198 ;; Function _appDataConf is unused but had its address taken
   199  0000                     
   200                           	psect	idataCOMRAM
   201  00512A                     __pidataCOMRAM:
   202                           	opt callstack 0
   203                           
   204                           ;initializer for _test_timer
   205  00512A  1388               	dw	5000
   206                           
   207                           	psect	idataBANK0
   208  00510E                     __pidataBANK0:
   209                           	opt callstack 0
   210                           
   211                           ;initializer for _RSSITarget
   212  00510E  B0                 	db	176
   213                           
   214                           ;initializer for _message
   215  00510F  74                 	db	116
   216  005110  65                 	db	101
   217  005111  73                 	db	115
   218  005112  74                 	db	116
   219  005113  00                 	db	0
   220                           
   221                           	psect	idataBANK1
   222  0050E8                     __pidataBANK1:
   223                           	opt callstack 0
   224                           
   225                           ;initializer for _syncList
   226  0050E8  12                 	db	18
   227  0050E9  23                 	db	35
   228  0050EA  45                 	db	69
   229  0050EB  56                 	db	86
   230  0050EC  67                 	db	103
   231  0050ED  78                 	db	120
   232  0050EE  89                 	db	137
   233  0050EF  9A                 	db	154
   234  0050F0  AB                 	db	171
   235  0050F1  BC                 	db	188
   236                           
   237                           	psect	mediumconst
   238  00FEF4                     __pmediumconst:
   239                           	opt callstack 0
   240  00FEF4  00                 	db	0
   241  00FEF5                     _fhssList:
   242                           	opt callstack 0
   243  00FEF5  7680               	dw	30336
   244  00FEF7  3600               	dw	13824
   245  00FEF9  FB00               	dw	64256
   246  00FEFB  361E               	dw	13854
   247  00FEFD  7F80               	dw	32640
   248  00FEFF  363D               	dw	13885
   249  00FF01  0400               	dw	1024
   250  00FF03  365C               	dw	13916
   251  00FF05  8880               	dw	34944
   252  00FF07  367A               	dw	13946
   253  00FF09  0D00               	dw	3328
   254  00FF0B  3699               	dw	13977
   255  00FF0D  9180               	dw	37248
   256  00FF0F  36B7               	dw	14007
   257  00FF11  1600               	dw	5632
   258  00FF13  36D6               	dw	14038
   259  00FF15  9A80               	dw	39552
   260  00FF17  36F4               	dw	14068
   261  00FF19  1F00               	dw	7936
   262  00FF1B  3713               	dw	14099
   263  00FF1D  DCC0               	dw	56512
   264  00FF1F  3703               	dw	14083
   265  00FF21  5840               	dw	22592
   266  00FF23  36E5               	dw	14053
   267  00FF25  D3C0               	dw	54208
   268  00FF27  36C6               	dw	14022
   269  00FF29  4F40               	dw	20288
   270  00FF2B  36A8               	dw	13992
   271  00FF2D  CAC0               	dw	51904
   272  00FF2F  3689               	dw	13961
   273  00FF31  4640               	dw	17984
   274  00FF33  366B               	dw	13931
   275  00FF35  C1C0               	dw	49600
   276  00FF37  364C               	dw	13900
   277  00FF39  3D40               	dw	15680
   278  00FF3B  362E               	dw	13870
   279  00FF3D  B8C0               	dw	47296
   280  00FF3F  360F               	dw	13839
   281  00FF41  3440               	dw	13376
   282  00FF43  35F1               	dw	13809
   283  00FF45  AFC0               	dw	44992
   284  00FF47  35D2               	dw	13778
   285  00FF49  D560               	dw	54624
   286  00FF4B  35F8               	dw	13816
   287  00FF4D  59E0               	dw	23008
   288  00FF4F  3617               	dw	13847
   289  00FF51  DE60               	dw	56928
   290  00FF53  3635               	dw	13877
   291  00FF55  6BE0               	dw	27616
   292  00FF57  3691               	dw	13969
   293  00FF59  F060               	dw	61536
   294  00FF5B  36AF               	dw	13999
   295  00FF5D  74E0               	dw	29920
   296  00FF5F  36CE               	dw	14030
   297  00FF61  F960               	dw	63840
   298  00FF63  36EC               	dw	14060
   299  00FF65  7DE0               	dw	32224
   300  00FF67  370B               	dw	14091
   301  00FF69  C020               	dw	49184
   302  00FF6B  371A               	dw	14106
   303  00FF6D  4710               	dw	18192
   304  00FF6F  3604               	dw	13828
   305  00FF71  6CB0               	dw	27824
   306  00FF73  362A               	dw	13866
   307  00FF75  5010               	dw	20496
   308  00FF77  3641               	dw	13889
   309  00FF79  75B0               	dw	30128
   310  00FF7B  3667               	dw	13927
   311  00FF7D  5910               	dw	22800
   312  00FF7F  367E               	dw	13950
   313  00FF81  7EB0               	dw	32432
   314  00FF83  36A4               	dw	13988
   315  00FF85  6210               	dw	25104
   316  00FF87  36BB               	dw	14011
   317  00FF89  87B0               	dw	34736
   318  00FF8B  36E1               	dw	14049
   319  00FF8D  6B10               	dw	27408
   320  00FF8F  36F8               	dw	14072
   321  00FF91  90B0               	dw	37040
   322  00FF93  371E               	dw	14110
   323  00FF95  AD50               	dw	44368
   324  00FF97  3707               	dw	14087
   325  00FF99  28D0               	dw	10448
   326  00FF9B  36E9               	dw	14057
   327  00FF9D  A450               	dw	42064
   328  00FF9F  36CA               	dw	14026
   329  00FFA1  C0F0               	dw	49392
   330  00FFA3  36B3               	dw	14003
   331  00FFA5  9B50               	dw	39760
   332  00FFA7  368D               	dw	13965
   333  00FFA9  B7F0               	dw	47088
   334  00FFAB  3676               	dw	13942
   335  00FFAD  9250               	dw	37456
   336  00FFAF  3650               	dw	13904
   337  00FFB1  AEF0               	dw	44784
   338  00FFB3  3639               	dw	13881
   339  00FFB5  8950               	dw	35152
   340  00FFB7  3613               	dw	13843
   341  00FFB9  A5F0               	dw	42480
   342  00FFBB  35FC               	dw	13820
   343  00FFBD  50E0               	dw	20704
   344  00FFBF  35DA               	dw	13786
   345  00FFC1  04D0               	dw	1232
   346  00FFC3  35F5               	dw	13813
   347  00FFC5  2A70               	dw	10864
   348  00FFC7  361B               	dw	13851
   349  00FFC9  0DD0               	dw	3536
   350  00FFCB  3632               	dw	13874
   351  00FFCD  3C70               	dw	15472
   352  00FFCF  3695               	dw	13973
   353  00FFD1  1FD0               	dw	8144
   354  00FFD3  36AC               	dw	13996
   355  00FFD5  4570               	dw	17776
   356  00FFD7  36D2               	dw	14034
   357  00FFD9  28D0               	dw	10448
   358  00FFDB  36E9               	dw	14057
   359  00FFDD  4E70               	dw	20080
   360  00FFDF  370F               	dw	14095
   361  00FFE1  0E40               	dw	3648
   362  00FFE3  371B               	dw	14107
   363  00FFE5  A5F0               	dw	42480
   364  00FFE7  35FC               	dw	13820
   365  00FFE9  F130               	dw	61744
   366  00FFEB  3648               	dw	13896
   367  00FFED  75B0               	dw	30128
   368  00FFEF  3667               	dw	13927
   369  00FFF1                     __end_of_fhssList:
   370                           	opt callstack 0
   371  00FFF1  03                 	db	3
   372  00FFF2  08                 	db	8
   373  00FFF3  1A                 	db	26
   374  00FFF4  40                 	db	64
   375  00FFF5  80                 	db	128
   376  00FFF6  BE                 	db	190
   377  00FFF7  E6                 	db	230
   378  00FFF8  F7                 	db	247
   379  00FFF9  FC                 	db	252
   380  00FFFA                     __end_ofNWK_LinearizeLqi@val:
   381                           	opt callstack 0
   382  00FFFA                     _spi1_configuration:
   383                           	opt callstack 0
   384  00FFFA  82                 	db	130
   385  00FFFB  C0                 	db	192
   386  00FFFC  03                 	db	3
   387  00FFFD  03                 	db	3
   388  00FFFE  00                 	db	0
   389  00FFFF                     __end_of_spi1_configuration:
   390                           	opt callstack 0
   391  00FFFF  00                 	db	0	; dummy byte at the end
   392  0000                     
   393                           	psect	nvCOMRAM
   394  00005B                     __pnvCOMRAM:
   395                           	opt callstack 0
   396  00005B                     _timer0ReloadVal16bit:
   397                           	opt callstack 0
   398  00005B                     	ds	2
   399                           
   400                           	psect	nvBANK0
   401  0000E9                     __pnvBANK0:
   402                           	opt callstack 0
   403  0000E9                     _UART1_ErrorHandler:
   404                           	opt callstack 0
   405  0000E9                     	ds	2
   406  0000EB                     _UART1_OverrunErrorHandler:
   407                           	opt callstack 0
   408  0000EB                     	ds	2
   409  0000ED                     _UART1_FramingErrorHandler:
   410                           	opt callstack 0
   411  0000ED                     	ds	2
   412  0000EF                     _TMR0_InterruptHandler:
   413                           	opt callstack 0
   414  0000EF                     	ds	2
   415  0000F1                     _UART1_TxInterruptHandler:
   416                           	opt callstack 0
   417  0000F1                     	ds	2
   418  0000F3                     _UART1_RxInterruptHandler:
   419                           	opt callstack 0
   420  0000F3                     	ds	2
   421  0000F5                     _uart1TxBufferRemaining:
   422                           	opt callstack 0
   423  0000F5                     	ds	1
   424  0000                     _SCANCON0bits	set	14716
   425  0000                     _CRCDATH	set	14689
   426  0000                     _CRCDATL	set	14688
   427  0000                     _CRCCON0bits	set	14696
   428  0000                     _CRCCON1bits	set	14697
   429  0000                     _CRCXORL	set	14694
   430  0000                     _CRCXORH	set	14695
   431  0000                     _SCANTRIG	set	14717
   432  0000                     _SCANHADRL	set	14713
   433  0000                     _SCANHADRH	set	14714
   434  0000                     _SCANHADRU	set	14715
   435  0000                     _SCANLADRL	set	14710
   436  0000                     _SCANLADRH	set	14711
   437  0000                     _SCANLADRU	set	14712
   438  0000                     _SCANCON0	set	14716
   439  0000                     _CRCACCH	set	14691
   440  0000                     _CRCACCL	set	14690
   441  0000                     _CRCCON1	set	14697
   442  0000                     _CRCCON0	set	14696
   443  0000                     _PMD7	set	14791
   444  0000                     _PMD6	set	14790
   445  0000                     _PMD5	set	14789
   446  0000                     _PMD4	set	14788
   447  0000                     _PMD3	set	14787
   448  0000                     _PMD2	set	14786
   449  0000                     _PMD1	set	14785
   450  0000                     _PMD0	set	14784
   451  0000                     _OSCTUNE	set	14814
   452  0000                     _OSCFRQ	set	14815
   453  0000                     _OSCEN	set	14813
   454  0000                     _OSCCON3	set	14811
   455  0000                     _OSCCON1	set	14809
   456  0000                     _IPR3bits	set	14723
   457  0000                     _PIR0bits	set	14752
   458  0000                     _NVMCON2	set	14822
   459  0000                     _NVMDAT	set	14819
   460  0000                     _NVMADRL	set	14816
   461  0000                     _NVMADRH	set	14817
   462  0000                     _NVMCON1bits	set	14821
   463  0000                     _PIR3bits	set	14755
   464  0000                     _PIR2bits	set	14754
   465  0000                     _PIE3bits	set	14739
   466  0000                     _SPI1SDIPPS	set	15071
   467  0000                     _RC7PPS	set	14871
   468  0000                     _U1RXPPS	set	15077
   469  0000                     _RB0PPS	set	14856
   470  0000                     _SPI1SSPPS	set	15072
   471  0000                     _SPI1SCKPPS	set	15070
   472  0000                     _RC0PPS	set	14864
   473  0000                     _INLVLE	set	14980
   474  0000                     _INLVLC	set	14948
   475  0000                     _INLVLB	set	14932
   476  0000                     _INLVLA	set	14916
   477  0000                     _SLRCONC	set	14947
   478  0000                     _SLRCONB	set	14931
   479  0000                     _SLRCONA	set	14915
   480  0000                     _ODCONC	set	14946
   481  0000                     _ODCONB	set	14930
   482  0000                     _ODCONA	set	14914
   483  0000                     _RC4I2C	set	14955
   484  0000                     _RC3I2C	set	14954
   485  0000                     _RB2I2C	set	14939
   486  0000                     _RB1I2C	set	14938
   487  0000                     _WPUC	set	14945
   488  0000                     _WPUA	set	14913
   489  0000                     _WPUB	set	14929
   490  0000                     _WPUE	set	14977
   491  0000                     _ANSELA	set	14912
   492  0000                     _ANSELB	set	14928
   493  0000                     _ANSELC	set	14944
   494  0000                     _U1RXB	set	15848
   495  0000                     _U1TXB	set	15850
   496  0000                     _U1ERRIRbits	set	15865
   497  0000                     _U1ERRIE	set	15866
   498  0000                     _U1ERRIR	set	15865
   499  0000                     _U1UIR	set	15864
   500  0000                     _U1FIFO	set	15863
   501  0000                     _U1BRGH	set	15862
   502  0000                     _U1BRGL	set	15861
   503  0000                     _U1CON2	set	15860
   504  0000                     _U1CON1	set	15859
   505  0000                     _U1CON0	set	15858
   506  0000                     _U1P3H	set	15857
   507  0000                     _U1P3L	set	15856
   508  0000                     _U1P2H	set	15855
   509  0000                     _U1P2L	set	15854
   510  0000                     _U1P1H	set	15853
   511  0000                     _U1P1L	set	15852
   512  0000                     _SPI1RXB	set	15632
   513  0000                     _SPI1TXB	set	15633
   514  0000                     _SPI1TCNTL	set	15634
   515  0000                     _SPI1CON0bits	set	15636
   516  0000                     _SPI1BAUD	set	15641
   517  0000                     _SPI1CLK	set	15644
   518  0000                     _SPI1CON2	set	15638
   519  0000                     _SPI1CON1	set	15637
   520  0000                     _SPI1CON0	set	15636
   521  0000                     _LATAbits	set	16314
   522  0000                     _PORTBbits	set	16331
   523  0000                     _LATCbits	set	16316
   524  0000                     _TRISC	set	16324
   525  0000                     _TRISB	set	16323
   526  0000                     _TRISA	set	16322
   527  0000                     _LATC	set	16316
   528  0000                     _LATB	set	16315
   529  0000                     _LATA	set	16314
   530  0000                     _IVTBASEL	set	16341
   531  0000                     _IVTBASEH	set	16342
   532  0000                     _IVTBASEU	set	16343
   533  0000                     _IVTLOCKbits	set	16340
   534  0000                     _IVTLOCK	set	16340
   535  0000                     _INTCON0bits	set	16338
   536  0000                     _TABLAT	set	16373
   537  0000                     _TBLPTRL	set	16374
   538  0000                     _TBLPTRH	set	16375
   539  0000                     _TBLPTRU	set	16376
   540  0000                     _T0CON0bits	set	16312
   541  0000                     _T0CON0	set	16312
   542  0000                     _TMR0L	set	16310
   543  0000                     _TMR0H	set	16311
   544  0000                     _T0CON1	set	16313
   545  0000                     _TRISCbits	set	16324
   546  0000                     _GIE	set	130711
   547                           
   548                           ; #config settings
   549  0000                     
   550                           	psect	cinit
   551  0036B4                     __pcinit:
   552                           	opt callstack 0
   553  0036B4                     start_initialization:
   554                           	opt callstack 0
   555  0036B4                     __initialization:
   556                           	opt callstack 0
   557                           
   558                           ; Initialize objects allocated to BANK1 (10 bytes)
   559                           ; load TBLPTR registers with __pidataBANK1
   560  0036B4  0EE8               	movlw	low __pidataBANK1
   561  0036B6  6EF6               	movwf	tblptrl,c
   562  0036B8  0E50               	movlw	high __pidataBANK1
   563  0036BA  6EF7               	movwf	tblptrh,c
   564  0036BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   565  0036BE  6EF8               	movwf	tblptru,c
   566  0036C0  EE00  F1B8         	lfsr	0,__pdataBANK1
   567  0036C4  EE10 F00A          	lfsr	1,10
   568  0036C8                     copy_data0:
   569  0036C8  0009               	tblrd		*+
   570  0036CA  006F FFD7 FFEE     	movff	tablat,postinc0
   571  0036D0  50E5               	movf	postdec1,w,c
   572  0036D2  50E1               	movf	fsr1l,w,c
   573  0036D4  E1F9               	bnz	copy_data0
   574                           
   575                           ; Initialize objects allocated to BANK0 (6 bytes)
   576                           ; load TBLPTR registers with __pidataBANK0
   577  0036D6  0E0E               	movlw	low __pidataBANK0
   578  0036D8  6EF6               	movwf	tblptrl,c
   579  0036DA  0E51               	movlw	high __pidataBANK0
   580  0036DC  6EF7               	movwf	tblptrh,c
   581  0036DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   582  0036E0  6EF8               	movwf	tblptru,c
   583  0036E2  EE00  F0F6         	lfsr	0,__pdataBANK0
   584  0036E6  EE10 F006          	lfsr	1,6
   585  0036EA                     copy_data1:
   586  0036EA  0009               	tblrd		*+
   587  0036EC  006F FFD7 FFEE     	movff	tablat,postinc0
   588  0036F2  50E5               	movf	postdec1,w,c
   589  0036F4  50E1               	movf	fsr1l,w,c
   590  0036F6  E1F9               	bnz	copy_data1
   591                           
   592                           ; Initialize objects allocated to COMRAM (2 bytes)
   593                           ; load TBLPTR registers with __pidataCOMRAM
   594  0036F8  0E2A               	movlw	low __pidataCOMRAM
   595  0036FA  6EF6               	movwf	tblptrl,c
   596  0036FC  0E51               	movlw	high __pidataCOMRAM
   597  0036FE  6EF7               	movwf	tblptrh,c
   598  003700  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   599  003702  6EF8               	movwf	tblptru,c
   600  003704  0009               	tblrd		*+	;fetch initializer
   601  003706  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
   602  00370C  0009               	tblrd		*+	;fetch initializer
   603  00370E  006F FFD4  F05E    	movff	tablat,__pdataCOMRAM+1
   604                           
   605                           ; Clear objects allocated to BIGRAM (685 bytes)
   606  003714  EE00  F3BD         	lfsr	0,__pbssBIGRAM
   607  003718  EE10 F2AD          	lfsr	1,685
   608  00371C                     clear_0:
   609  00371C  6AEE               	clrf	postinc0,c
   610  00371E  50E5               	movf	postdec1,w,c
   611  003720  50E1               	movf	fsr1l,w,c
   612  003722  E1FC               	bnz	clear_0
   613  003724  50E2               	movf	fsr1h,w,c
   614  003726  E1FA               	bnz	clear_0
   615                           
   616                           ; Clear objects allocated to BANK3 (189 bytes)
   617  003728  EE00  F300         	lfsr	0,__pbssBANK3
   618  00372C  0EBD               	movlw	189
   619  00372E                     clear_1:
   620  00372E  6AEE               	clrf	postinc0,c
   621  003730  06E8               	decf	wreg,f,c
   622  003732  E1FD               	bnz	clear_1
   623                           
   624                           ; Clear objects allocated to BANK2 (256 bytes)
   625  003734  EE00  F200         	lfsr	0,__pbssBANK2
   626  003738  EE10 F100          	lfsr	1,256
   627  00373C                     clear_2:
   628  00373C  6AEE               	clrf	postinc0,c
   629  00373E  50E5               	movf	postdec1,w,c
   630  003740  50E1               	movf	fsr1l,w,c
   631  003742  E1FC               	bnz	clear_2
   632  003744  50E2               	movf	fsr1h,w,c
   633  003746  E1FA               	bnz	clear_2
   634                           
   635                           ; Clear objects allocated to BANK1 (184 bytes)
   636  003748  EE00  F100         	lfsr	0,__pbssBANK1
   637  00374C  0EB8               	movlw	184
   638  00374E                     clear_3:
   639  00374E  6AEE               	clrf	postinc0,c
   640  003750  06E8               	decf	wreg,f,c
   641  003752  E1FD               	bnz	clear_3
   642                           
   643                           ; Clear objects allocated to BANK0 (137 bytes)
   644  003754  EE00  F060         	lfsr	0,__pbssBANK0
   645  003758  0E89               	movlw	137
   646  00375A                     clear_4:
   647  00375A  6AEE               	clrf	postinc0,c
   648  00375C  06E8               	decf	wreg,f,c
   649  00375E  E1FD               	bnz	clear_4
   650                           
   651                           ; Clear objects allocated to COMRAM (32 bytes)
   652  003760  EE00  F03B         	lfsr	0,__pbssCOMRAM
   653  003764  0E20               	movlw	32
   654  003766                     clear_5:
   655  003766  6AEE               	clrf	postinc0,c
   656  003768  06E8               	decf	wreg,f,c
   657  00376A  E1FD               	bnz	clear_5
   658                           
   659                           ;
   660                           ; Setup IVTBASE
   661                           ;
   662  00376C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   663  00376E  6ED5               	movwf	213,c
   664  003770  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   665  003772  6ED6               	movwf	214,c
   666  003774  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   667  003776  6ED7               	movwf	215,c
   668  003778                     end_of_initialization:
   669                           	opt callstack 0
   670  003778                     __end_of__initialization:
   671                           	opt callstack 0
   672  003778  0100               	movlb	0
   673  00377A  EFC7  F023         	goto	_main	;jump to C main() function
   674                           
   675                           	psect	bssCOMRAM
   676  00003B                     __pbssCOMRAM:
   677                           	opt callstack 0
   678  00003B                     _timers:
   679                           	opt callstack 0
   680  00003B                     	ds	2
   681  00003D                     _nwkTxPhyActiveFrame:
   682                           	opt callstack 0
   683  00003D                     	ds	2
   684  00003F                     _nwkDataReqQueue:
   685                           	opt callstack 0
   686  00003F                     	ds	2
   687  000041                     _halTimerIrqCount:
   688                           	opt callstack 0
   689  000041                     	ds	2
   690  000043                     _nwkRxAckControl:
   691                           	opt callstack 0
   692  000043                     	ds	1
   693  000044                     _uart1RxCount:
   694                           	opt callstack 0
   695  000044                     	ds	1
   696  000045                     _uart1RxTail:
   697                           	opt callstack 0
   698  000045                     	ds	1
   699  000046                     _uart1RxHead:
   700                           	opt callstack 0
   701  000046                     	ds	1
   702  000047                     _uart1TxTail:
   703                           	opt callstack 0
   704  000047                     	ds	1
   705  000048                     _uart1TxHead:
   706                           	opt callstack 0
   707  000048                     	ds	1
   708  000049                     _radio_state_var:
   709                           	opt callstack 0
   710  000049                     	ds	1
   711  00004A                     _fhssdebug:
   712                           	opt callstack 0
   713  00004A                     	ds	1
   714  00004B                     _channel:
   715                           	opt callstack 0
   716  00004B                     	ds	1
   717  00004C                     _current_sf:
   718                           	opt callstack 0
   719  00004C                     	ds	1
   720  00004D                     _SNR:
   721                           	opt callstack 0
   722  00004D                     	ds	1
   723  00004E                     _packetRSSI:
   724                           	opt callstack 0
   725  00004E                     	ds	1
   726  00004F                     _RSSI:
   727                           	opt callstack 0
   728  00004F                     	ds	1
   729  000050                     _need_radio_reset:
   730                           	opt callstack 0
   731  000050                     	ds	1
   732  000051                     _cadCounter:
   733                           	opt callstack 0
   734  000051                     	ds	1
   735  000052                     _cadDone:
   736                           	opt callstack 0
   737  000052                     	ds	1
   738  000053                     __packetIndex:
   739                           	opt callstack 0
   740  000053                     	ds	1
   741  000054                     __implicitHeaderMode:
   742                           	opt callstack 0
   743  000054                     	ds	1
   744  000055                     _txTimeOut:
   745                           	opt callstack 0
   746  000055                     	ds	2
   747  000057                     _cadTimeOut:
   748                           	opt callstack 0
   749  000057                     	ds	2
   750  000059                     __cadBackoffTimer:
   751                           	opt callstack 0
   752  000059                     	ds	2
   753                           
   754                           	psect	dataCOMRAM
   755  00005D                     __pdataCOMRAM:
   756                           	opt callstack 0
   757  00005D                     _test_timer:
   758                           	opt callstack 0
   759  00005D                     	ds	2
   760                           
   761                           	psect	bssBANK0
   762  000060                     __pbssBANK0:
   763                           	opt callstack 0
   764  000060                     _nwkIb:
   765                           	opt callstack 0
   766  000060                     	ds	40
   767  000088                     _nwkGroups:
   768                           	opt callstack 0
   769  000088                     	ds	20
   770  00009C                     _symbolDuration:
   771                           	opt callstack 0
   772  00009C                     	ds	4
   773  0000A0                     _test_send_ctl:
   774                           	opt callstack 0
   775  0000A0                     	ds	1
   776  0000A1                     _uart1RxLastError:
   777                           	opt callstack 0
   778  0000A1                     	ds	1
   779  0000A2                     _dwellTimer:
   780                           	opt callstack 0
   781  0000A2                     	ds	1
   782  0000A3                     _TXPower:
   783                           	opt callstack 0
   784  0000A3                     	ds	1
   785  0000A4                     _nwkDataReq:
   786                           	opt callstack 0
   787  0000A4                     	ds	19
   788  0000B7                     _nwkTxDelayTimer:
   789                           	opt callstack 0
   790  0000B7                     	ds	13
   791  0000C4                     _nwkTxAckWaitTimer:
   792                           	opt callstack 0
   793  0000C4                     	ds	13
   794  0000D1                     _nwkRxDuplicateRejectionTimer:
   795                           	opt callstack 0
   796  0000D1                     	ds	13
   797  0000DE                     _seed:
   798                           	opt callstack 0
   799  0000DE                     	ds	8
   800  0000E6                     _crcObj:
   801                           	opt callstack 0
   802  0000E6                     	ds	3
   803                           
   804                           	psect	dataBANK0
   805  0000F6                     __pdataBANK0:
   806                           	opt callstack 0
   807  0000F6                     _RSSITarget:
   808                           	opt callstack 0
   809  0000F6                     	ds	1
   810  0000F7                     _message:
   811                           	opt callstack 0
   812  0000F7                     	ds	5
   813                           
   814                           	psect	bssBANK1
   815  000100                     __pbssBANK1:
   816                           	opt callstack 0
   817  000100                     _uart1RxStatusBuffer:
   818                           	opt callstack 0
   819  000100                     	ds	64
   820  000140                     _nwkRouteTable:
   821                           	opt callstack 0
   822  000140                     	ds	70
   823  000186                     _nwkRxDuplicateRejectionTable:
   824                           	opt callstack 0
   825  000186                     	ds	50
   826                           
   827                           	psect	dataBANK1
   828  0001B8                     __pdataBANK1:
   829                           	opt callstack 0
   830  0001B8                     _syncList:
   831                           	opt callstack 0
   832  0001B8                     	ds	10
   833                           
   834                           	psect	bssBANK2
   835  000200                     __pbssBANK2:
   836                           	opt callstack 0
   837  000200                     _uart1RxBuffer:
   838                           	opt callstack 0
   839  000200                     	ds	64
   840  000240                     _uart1TxBuffer:
   841                           	opt callstack 0
   842  000240                     	ds	64
   843  000280                     _phyRxBuffer:
   844                           	opt callstack 0
   845  000280                     	ds	128
   846                           
   847                           	psect	bssBANK3
   848  000300                     __pbssBANK3:
   849                           	opt callstack 0
   850  000300                     _fhssReg:
   851                           	opt callstack 0
   852  000300                     	ds	189
   853                           
   854                           	psect	bssBIGRAM
   855  0003BD                     __pbssBIGRAM:
   856                           	opt callstack 0
   857  0003BD                     _nwkFrameFrames:
   858                           	opt callstack 0
   859  0003BD                     	ds	685
   860                           
   861                           	psect	cstackBANK0
   862  0000FC                     __pcstackBANK0:
   863                           	opt callstack 0
   864  0000FC                     ??_radio_engine:
   865                           
   866                           ; 1 bytes @ 0x0
   867  0000FC                     	ds	2
   868                           
   869                           	psect	cstackCOMRAM
   870  000001                     __pcstackCOMRAM:
   871                           	opt callstack 0
   872  000001                     ??_TMR0_ISR:
   873  000001                     
   874                           ; 1 bytes @ 0x0
   875  000001                     	ds	1
   876  000002                     ??_CRC_Initialize:
   877  000002                     ??_nwkRouteNormalizeRanks:
   878  000002                     ??_nwkTxConvertPhyStatus:
   879  000002                     ?_nwkFrameNext:
   880                           	opt callstack 0
   881  000002                     ?_NWK_RouteFindEntry:
   882                           	opt callstack 0
   883  000002                     ?_NWK_RouteNewEntry:
   884                           	opt callstack 0
   885  000002                     ?_get_timer0base:
   886                           	opt callstack 0
   887  000002                     ?___llmod:
   888                           	opt callstack 0
   889  000002                     ?___xxtofl:
   890                           	opt callstack 0
   891  000002                     ?___omul:
   892                           	opt callstack 0
   893  000002                     SPI1_ExchangeByte@data:
   894                           	opt callstack 0
   895  000002                     INTERRUPT_Initialize@state:
   896                           	opt callstack 0
   897  000002                     nwkFrameInit@i:
   898                           	opt callstack 0
   899  000002                     nwkGroupInit@i:
   900                           	opt callstack 0
   901  000002                     nwkRouteInit@i:
   902                           	opt callstack 0
   903  000002                     get_timer0base@timer:
   904                           	opt callstack 0
   905  000002                     set_timer0base@timer:
   906                           	opt callstack 0
   907  000002                     TMR0_SetInterruptHandler@InterruptHandler:
   908                           	opt callstack 0
   909  000002                     UART1_SetFramingErrorHandler@interruptHandler:
   910                           	opt callstack 0
   911  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
   912                           	opt callstack 0
   913  000002                     UART1_SetErrorHandler@interruptHandler:
   914                           	opt callstack 0
   915  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
   916                           	opt callstack 0
   917  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
   918                           	opt callstack 0
   919  000002                     NWK_OpenEndpoint@handler:
   920                           	opt callstack 0
   921  000002                     NWK_DataReq@req:
   922                           	opt callstack 0
   923  000002                     nwkDataReqConfirm@req:
   924                           	opt callstack 0
   925  000002                     nwkFrameFree@frame:
   926                           	opt callstack 0
   927  000002                     nwkFrameNext@frame:
   928                           	opt callstack 0
   929  000002                     nwkFrameCommandInit@frame:
   930                           	opt callstack 0
   931  000002                     NWK_GroupIsMember@group:
   932                           	opt callstack 0
   933  000002                     NWK_RouteFindEntry@dst:
   934                           	opt callstack 0
   935  000002                     NWK_RouteFreeEntry@entry:
   936                           	opt callstack 0
   937  000002                     nwkFrame@nwkFramePayloadSize@frame_3186:
   938                           	opt callstack 0
   939  000002                     nwkTxConfirm@frame:
   940                           	opt callstack 0
   941  000002                     PHY_SetPanId@panId:
   942                           	opt callstack 0
   943  000002                     PHY_SetShortAddr@addr:
   944                           	opt callstack 0
   945  000002                     SYS_TimerStarted@timer:
   946                           	opt callstack 0
   947  000002                     placeTimer@timer:
   948                           	opt callstack 0
   949  000002                     memcpy@d1:
   950                           	opt callstack 0
   951  000002                     memset@dest:
   952                           	opt callstack 0
   953  000002                     srand@s:
   954                           	opt callstack 0
   955  000002                     ___llmod@dividend:
   956                           	opt callstack 0
   957  000002                     ___xxtofl@val:
   958                           	opt callstack 0
   959  000002                     ___omul@multiplier:
   960                           	opt callstack 0
   961                           
   962                           ; 8 bytes @ 0x1
   963  000002                     	ds	1
   964  000003                     nwkRouteNormalizeRanks@i:
   965                           	opt callstack 0
   966  000003                     SPI1_WriteBlock@block:
   967                           	opt callstack 0
   968  000003                     SPI1_ReadBlock@block:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x2
   972  000003                     	ds	1
   973  000004                     ??_nwkFrameNext:
   974  000004                     ??_srand:
   975  000004                     ??_TMR0_Initialize:
   976  000004                     ??_nwkDataReqConfirm:
   977  000004                     ??rand@nwkFrame@nwkFramePayloadSize:
   978  000004                     NWK_OpenEndpoint@id:
   979                           	opt callstack 0
   980  000004                     NWK_RouteFindEntry@multicast:
   981                           	opt callstack 0
   982  000004                     nwkTxConfirm@status:
   983                           	opt callstack 0
   984  000004                     nwkTxConvertPhyStatus@status:
   985                           	opt callstack 0
   986  000004                     get_timer0base@tval:
   987                           	opt callstack 0
   988  000004                     set_timer0base@tval:
   989                           	opt callstack 0
   990  000004                     NWK_SetAddr@addr:
   991                           	opt callstack 0
   992  000004                     NWK_SetPanId@panId:
   993                           	opt callstack 0
   994  000004                     nwkDataReqTxConf@frame:
   995                           	opt callstack 0
   996  000004                     SYS_TimerStarted@t:
   997                           	opt callstack 0
   998  000004                     memcpy@s1:
   999                           	opt callstack 0
  1000  000004                     memset@c:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x3
  1004  000004                     	ds	1
  1005  000005                     nwkRxInit@i:
  1006                           	opt callstack 0
  1007  000005                     PHY_DataConf@status:
  1008                           	opt callstack 0
  1009  000005                     SPI1_WriteBlock@blockSize:
  1010                           	opt callstack 0
  1011  000005                     SPI1_ReadBlock@blockSize:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x4
  1015  000005                     	ds	1
  1016  000006                     ??___xxtofl:
  1017  000006                     NWK_Init@i:
  1018                           	opt callstack 0
  1019  000006                     NWK_GroupIsMember@i:
  1020                           	opt callstack 0
  1021  000006                     NWK_RouteNewEntry@i:
  1022                           	opt callstack 0
  1023  000006                     nwkDataReqConfirm@prev:
  1024                           	opt callstack 0
  1025  000006                     memcpy@n:
  1026                           	opt callstack 0
  1027  000006                     memset@n:
  1028                           	opt callstack 0
  1029  000006                     ___llmod@divisor:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 4 bytes @ 0x5
  1033  000006                     	ds	1
  1034  000007                     NWK_RouteFindEntry@i:
  1035                           	opt callstack 0
  1036  000007                     SPI1_WriteBlock@data:
  1037                           	opt callstack 0
  1038  000007                     SPI1_ReadBlock@data:
  1039                           	opt callstack 0
  1040  000007                     NWK_RouteNewEntry@iter:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x6
  1044  000007                     	ds	1
  1045  000008                     ??_memset:
  1046  000008                     ?_NWK_RouteNextHop:
  1047                           	opt callstack 0
  1048  000008                     nwkDataReqTxConf@req:
  1049                           	opt callstack 0
  1050  000008                     NWK_RouteNextHop@dst:
  1051                           	opt callstack 0
  1052  000008                     nwkRouteRemove@dst:
  1053                           	opt callstack 0
  1054  000008                     nwkRouteFrameSent@frame:
  1055                           	opt callstack 0
  1056  000008                     nwkTxAckReceived@ind:
  1057                           	opt callstack 0
  1058  000008                     memcpy@d:
  1059                           	opt callstack 0
  1060  000008                     placeTimer@timeout:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 4 bytes @ 0x7
  1064  000008                     	ds	1
  1065  000009                     NWK_RouteNewEntry@entry:
  1066                           	opt callstack 0
  1067  000009                     SX1276ReadBuffer@buffer:
  1068                           	opt callstack 0
  1069  000009                     SX1276WriteBuffer@buffer:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x8
  1073  000009                     	ds	1
  1074  00000A                     ??_nwkRouteFrameSent:
  1075  00000A                     NWK_RouteNextHop@multicast:
  1076                           	opt callstack 0
  1077  00000A                     nwkRouteRemove@multicast:
  1078                           	opt callstack 0
  1079  00000A                     ___llmod@counter:
  1080                           	opt callstack 0
  1081  00000A                     ___xxtofl@sign:
  1082                           	opt callstack 0
  1083  00000A                     memcpy@s:
  1084                           	opt callstack 0
  1085  00000A                     memset@k:
  1086                           	opt callstack 0
  1087  00000A                     ___omul@multiplicand:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 8 bytes @ 0x9
  1091  00000A                     	ds	1
  1092  00000B                     SX1276ReadBuffer@size:
  1093                           	opt callstack 0
  1094  00000B                     SX1276WriteBuffer@size:
  1095                           	opt callstack 0
  1096  00000B                     ___xxtofl@exp:
  1097                           	opt callstack 0
  1098  00000B                     NWK_RouteNextHop@entry:
  1099                           	opt callstack 0
  1100  00000B                     nwkRouteRemove@entry:
  1101                           	opt callstack 0
  1102  00000B                     nwkRouteFrameReceived@frame:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 2 bytes @ 0xA
  1106  00000B                     	ds	1
  1107  00000C                     SX1276ReadBuffer@addr:
  1108                           	opt callstack 0
  1109  00000C                     SX1276WriteBuffer@addr:
  1110                           	opt callstack 0
  1111  00000C                     memcpy@tmp:
  1112                           	opt callstack 0
  1113  00000C                     nwkRouteFrameSent@entry:
  1114                           	opt callstack 0
  1115  00000C                     nwkTxAckReceived@command:
  1116                           	opt callstack 0
  1117  00000C                     placeTimer@prev:
  1118                           	opt callstack 0
  1119  00000C                     memset@s:
  1120                           	opt callstack 0
  1121  00000C                     ___xxtofl@arg:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 4 bytes @ 0xB
  1125  00000C                     	ds	1
  1126  00000D                     ??_nwkRouteFrameReceived:
  1127  00000D                     SX1276Read@addr:
  1128                           	opt callstack 0
  1129  00000D                     nwkRoutePrepareTx@frame:
  1130                           	opt callstack 0
  1131  00000D                     nwkRouteErrorReceived@ind:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 2 bytes @ 0xC
  1135  00000D                     	ds	1
  1136  00000E                     ?_nwkFrameAlloc:
  1137                           	opt callstack 0
  1138  00000E                     SX1276Read@data:
  1139                           	opt callstack 0
  1140  00000E                     nwkTxAckReceived@frame:
  1141                           	opt callstack 0
  1142  00000E                     placeTimer@t:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0xD
  1146  00000E                     	ds	1
  1147  00000F                     ?_getSignalBandwidth:
  1148                           	opt callstack 0
  1149  00000F                     ?_getSpreadingFactor:
  1150                           	opt callstack 0
  1151  00000F                     SX1276Write@data:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 1 bytes @ 0xE
  1155  00000F                     	ds	1
  1156  000010                     ??_nwkFrameAlloc:
  1157  000010                     SX1276Write@addr:
  1158                           	opt callstack 0
  1159  000010                     nwkRouteErrorReceived@command:
  1160                           	opt callstack 0
  1161  000010                     SYS_TimerStart@timer:
  1162                           	opt callstack 0
  1163  000010                     ___flge@ff1:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 4 bytes @ 0xF
  1167  000010                     	ds	1
  1168  000011                     ??_setCodingRate4:
  1169  000011                     ??_cad:
  1170  000011                     nwkRouteFrameReceived@discovery:
  1171                           	opt callstack 0
  1172  000011                     setTxPower@power:
  1173                           	opt callstack 0
  1174  000011                     receive@size:
  1175                           	opt callstack 0
  1176  000011                     nwkRoutePrepareTx@header:
  1177                           	opt callstack 0
  1178  000011                     setPreambleLength@length:
  1179                           	opt callstack 0
  1180  000011                     PHY_DataReq@data:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x10
  1184  000011                     	ds	1
  1185  000012                     nwkFrameAlloc@i:
  1186                           	opt callstack 0
  1187  000012                     _nwkRouteFrameReceived$2600:
  1188                           	opt callstack 0
  1189  000012                     setCodingRate4@cr:
  1190                           	opt callstack 0
  1191  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  1192                           	opt callstack 0
  1193  000012                     nwkRxRejectDuplicate@header:
  1194                           	opt callstack 0
  1195  000012                     nwkRxServiceDataInd@ind:
  1196                           	opt callstack 0
  1197  000012                     nwkTxAckWaitTimerHandler@timer:
  1198                           	opt callstack 0
  1199  000012                     nwkTxDelayTimerHandler@timer:
  1200                           	opt callstack 0
  1201  000012                     cad@RSSI:
  1202                           	opt callstack 0
  1203  000012                     appDataInd@ind:
  1204                           	opt callstack 0
  1205  000012                     ___omul@product:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 8 bytes @ 0x11
  1209  000012                     	ds	1
  1210  000013                     ??_getSignalBandwidth:
  1211  000013                     ??_getSpreadingFactor:
  1212  000013                     setCodingRate4@denominator:
  1213                           	opt callstack 0
  1214  000013                     PHY_DataReq@size:
  1215                           	opt callstack 0
  1216  000013                     nwkRouteFrameReceived@entry:
  1217                           	opt callstack 0
  1218  000013                     PHY_DataInd@ind:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x12
  1222  000013                     	ds	1
  1223  000014                     ??_nwkTxTaskHandler:
  1224  000014                     ??_nwkRxServiceDataInd:
  1225  000014                     ??_nwkRxRejectDuplicate:
  1226  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  1227                           	opt callstack 0
  1228  000014                     cad@temp:
  1229                           	opt callstack 0
  1230  000014                     ___flge@ff2:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 4 bytes @ 0x13
  1234  000014                     	ds	1
  1235  000015                     ??_PHY_DataInd:
  1236  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  1237                           	opt callstack 0
  1238  000015                     getSignalBandwidth@bw:
  1239                           	opt callstack 0
  1240  000015                     nwkRouteFrameReceived@header:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x14
  1244  000015                     	ds	1
  1245  000016                     ?___lldiv:
  1246                           	opt callstack 0
  1247  000016                     nwkTxAckWaitTimerHandler@restart:
  1248                           	opt callstack 0
  1249  000016                     nwkTxDelayTimerHandler@restart:
  1250                           	opt callstack 0
  1251  000016                     nwkTxTaskHandler@frame:
  1252                           	opt callstack 0
  1253  000016                     ___lldiv@dividend:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x15
  1257  000016                     	ds	1
  1258  000017                     nwkTxAckWaitTimerHandler@frame:
  1259                           	opt callstack 0
  1260  000017                     nwkTxDelayTimerHandler@frame:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x16
  1264  000017                     	ds	1
  1265  000018                     ??___flge:
  1266  000018                     nwkRxRejectDuplicate@shift:
  1267                           	opt callstack 0
  1268  000018                     PHY_DataInd@frame:
  1269                           	opt callstack 0
  1270  000018                     nwkRxIndicateFrame@frame:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x17
  1274  000018                     	ds	1
  1275  000019                     ??_SYS_TimerTaskHandler:
  1276  000019                     nwkRxRejectDuplicate@i:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 1 bytes @ 0x18
  1280  000019                     	ds	1
  1281  00001A                     ??_nwkRxIndicateFrame:
  1282  00001A                     ?_rand:
  1283                           	opt callstack 0
  1284  00001A                     nwkRxRejectDuplicate@diff:
  1285                           	opt callstack 0
  1286  00001A                     DIO0_Receive_ISR@packetLength:
  1287                           	opt callstack 0
  1288  00001A                     ___lldiv@divisor:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 4 bytes @ 0x19
  1292  00001A                     	ds	1
  1293  00001B                     DIO0_Receive_ISR@irqFlags:
  1294                           	opt callstack 0
  1295  00001B                     nwkRxRejectDuplicate@freeEntry:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x1A
  1299  00001B                     	ds	1
  1300  00001C                     ??_rand:
  1301  00001C                     DIO0_Receive_ISR@ind:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 5 bytes @ 0x1B
  1305  00001C                     	ds	1
  1306  00001D                     SYS_TimerTaskHandler@cnt:
  1307                           	opt callstack 0
  1308  00001D                     nwkRxRejectDuplicate@entry:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x1C
  1312  00001D                     	ds	1
  1313  00001E                     _nwkRxIndicateFrame$3634:
  1314                           	opt callstack 0
  1315  00001E                     SYS_TimerTaskHandler@elapsed:
  1316                           	opt callstack 0
  1317  00001E                     ___lldiv@quotient:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 4 bytes @ 0x1D
  1321  00001E                     	ds	1
  1322  00001F                     _nwkRxIndicateFrame$3635:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 1 bytes @ 0x1E
  1326  00001F                     	ds	1
  1327  000020                     _nwkRxIndicateFrame$3636:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x1F
  1331  000020                     	ds	1
  1332  000021                     _nwkRxIndicateFrame$3637:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 1 bytes @ 0x20
  1336  000021                     	ds	1
  1337  000022                     _nwkRxIndicateFrame$3638:
  1338                           	opt callstack 0
  1339  000022                     ___lldiv@counter:
  1340                           	opt callstack 0
  1341  000022                     SYS_TimerTaskHandler@timer:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x21
  1345  000022                     	ds	1
  1346  000023                     ??_setSpreadingFactor:
  1347  000023                     _nwkRxIndicateFrame$3639:
  1348                           	opt callstack 0
  1349  000023                     setFrequency@frequency:
  1350                           	opt callstack 0
  1351  000023                     setSignalBandwidth@sbw:
  1352                           	opt callstack 0
  1353  000023                     computeFRF@frequency:
  1354                           	opt callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x22
  1357  000023                     	ds	1
  1358  000024                     nwkRxIndicateFrame@header:
  1359                           	opt callstack 0
  1360  000024                     nwkTxFrame@frame:
  1361                           	opt callstack 0
  1362  000024                     nwkTxBroadcastFrame@frame:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x23
  1366  000024                     	ds	2
  1367  000026                     ??_nwkTxBroadcastFrame:
  1368  000026                     nwkRxIndicateFrame@ind:
  1369                           	opt callstack 0
  1370                           
  1371                           ; 12 bytes @ 0x25
  1372  000026                     	ds	1
  1373  000027                     ??_setSignalBandwidth:
  1374  000027                     nwkTxBroadcastFrame@newFrame:
  1375                           	opt callstack 0
  1376  000027                     setFrequency@num_mod:
  1377                           	opt callstack 0
  1378  000027                     computeFRF@num_mod:
  1379                           	opt callstack 0
  1380  000027                     _setSpreadingFactor$6798:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x26
  1384  000027                     	ds	1
  1385  000028                     nwkTxFrame@header:
  1386                           	opt callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x27
  1389  000028                     	ds	1
  1390  000029                     nwkRxHandleReceivedFrame@frame:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 2 bytes @ 0x28
  1394  000029                     	ds	1
  1395  00002A                     nwkDataReqSendFrame@req:
  1396                           	opt callstack 0
  1397  00002A                     nwkRouteSendRouteError@src:
  1398                           	opt callstack 0
  1399  00002A                     nwkRxSendAck@frame:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x29
  1403  00002A                     	ds	1
  1404  00002B                     ??_nwkRxHandleReceivedFrame:
  1405  00002B                     setSpreadingFactor@sf:
  1406                           	opt callstack 0
  1407  00002B                     setFrequency@num:
  1408                           	opt callstack 0
  1409  00002B                     computeFRF@num:
  1410                           	opt callstack 0
  1411  00002B                     _setSignalBandwidth$6799:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 4 bytes @ 0x2A
  1415  00002B                     	ds	1
  1416  00002C                     ??_nwkDataReqSendFrame:
  1417  00002C                     nwkRouteSendRouteError@dst:
  1418                           	opt callstack 0
  1419  00002C                     nwkRxSendAck@command:
  1420                           	opt callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x2B
  1423  00002C                     	ds	1
  1424  00002D                     nwkRxHandleReceivedFrame@broadcast:
  1425                           	opt callstack 0
  1426  00002D                     nwkDataReqSendFrame@mcHeader:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x2C
  1430  00002D                     	ds	1
  1431  00002E                     nwkRouteSendRouteError@multicast:
  1432                           	opt callstack 0
  1433  00002E                     nwkRxHandleReceivedFrame@member:
  1434                           	opt callstack 0
  1435  00002E                     nwkRxSendAck@ack:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x2D
  1439  00002E                     	ds	1
  1440  00002F                     computeFRF@i:
  1441                           	opt callstack 0
  1442  00002F                     PHY_SetChannel@channel:
  1443                           	opt callstack 0
  1444  00002F                     nwkDataReqSendFrame@frame:
  1445                           	opt callstack 0
  1446  00002F                     nwkRouteSendRouteError@command:
  1447                           	opt callstack 0
  1448  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  1449                           	opt callstack 0
  1450  00002F                     setSignalBandwidth@bw:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x2E
  1454  00002F                     	ds	1
  1455  000030                     
  1456                           ; 1 bytes @ 0x2F
  1457  000030                     	ds	1
  1458  000031                     ??_nwkDataReqTaskHandler:
  1459  000031                     nwkRouteSendRouteError@frame:
  1460                           	opt callstack 0
  1461  000031                     nwkRxHandleReceivedFrame@header:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x30
  1465  000031                     	ds	1
  1466  000032                     nwkRxHandleIndication@frame:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x31
  1470  000032                     	ds	1
  1471  000033                     ??_initRadio:
  1472  000033                     nwkDataReqTaskHandler@req:
  1473                           	opt callstack 0
  1474  000033                     nwkRouteFrame@frame:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x32
  1478  000033                     	ds	1
  1479  000034                     
  1480                           ; 1 bytes @ 0x33
  1481  000034                     	ds	1
  1482  000035                     nwkRouteFrame@header:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x34
  1486  000035                     	ds	1
  1487  000036                     nwkRxHandleIndication@ack:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x35
  1491  000036                     	ds	1
  1492  000037                     ??_nwkRxTaskHandler:
  1493  000037                     initRadio@version:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 1 bytes @ 0x36
  1497  000037                     	ds	1
  1498  000038                     initRadio@wideRSSI:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x37
  1502  000038                     	ds	1
  1503  000039                     nwkRxTaskHandler@frame:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x38
  1507  000039                     	ds	1
  1508  00003A                     
  1509                           ; 1 bytes @ 0x39
  1510  00003A                     	ds	1
  1511  00003B                     
  1512                           ; 1 bytes @ 0x3A
  1513 ;;
  1514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1515 ;;
  1516 ;; *************** function _main *****************
  1517 ;; Defined at:
  1518 ;;		line 51 in file "main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels required when called:   17
  1538 ;; This function calls:
  1539 ;;		_SYSTEM_Initialize
  1540 ;;		_SYS_Init
  1541 ;;		_SYS_TaskHandler
  1542 ;;		_TMR0_SetInterruptHandler
  1543 ;;		_test_init
  1544 ;;		_test_send
  1545 ;; This function is called by:
  1546 ;;		Startup code after reset
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text0
  1551  00478E                     __ptext0:
  1552                           	opt callstack 0
  1553  00478E                     _main:
  1554                           	opt callstack 14
  1555  00478E                     
  1556                           ;main.c: 54:     SYSTEM_Initialize();
  1557  00478E  EC52  F027         	call	_SYSTEM_Initialize	;wreg free
  1558  004792                     
  1559                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  1560  004792  8ED2               	bsf	210,7,c	;volatile
  1561  004794                     
  1562                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  1563  004794  8CD2               	bsf	210,6,c	;volatile
  1564                           
  1565                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  1566  004796  0EE0               	movlw	low _Timer0Handler
  1567  004798  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1568  00479A  0E4B               	movlw	high _Timer0Handler
  1569  00479C  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1570  00479E  EC67  F028         	call	_TMR0_SetInterruptHandler	;wreg free
  1571  0047A2                     
  1572                           ;main.c: 72:     SYS_Init();
  1573  0047A2  EC3D  F028         	call	_SYS_Init	;wreg free
  1574  0047A6                     
  1575                           ;main.c: 73:     test_init();
  1576  0047A6  EC0B  F026         	call	_test_init	;wreg free
  1577  0047AA  96BA               	bcf	186,3,c	;volatile
  1578  0047AC                     l8014:
  1579                           
  1580                           ;main.c: 76:     {;main.c: 77:         SYS_TaskHandler();
  1581  0047AC  EC2F  F028         	call	_SYS_TaskHandler	;wreg free
  1582  0047B0                     
  1583                           ;main.c: 78:         if(!test_timer){
  1584  0047B0  505D               	movf	_test_timer^0,w,c	;volatile
  1585  0047B2  105E               	iorwf	(_test_timer+1)^0,w,c	;volatile
  1586  0047B4  A4D8               	btfss	status,2,c
  1587  0047B6  EFDF  F023         	goto	u5931
  1588  0047BA  EFE1  F023         	goto	u5930
  1589  0047BE                     u5931:
  1590  0047BE  EFD6  F023         	goto	l8014
  1591  0047C2                     u5930:
  1592  0047C2                     
  1593                           ;main.c: 79:             test_timer = 5000;
  1594  0047C2  0E13               	movlw	19
  1595  0047C4  6E5E               	movwf	(_test_timer+1)^0,c	;volatile
  1596  0047C6  0E88               	movlw	136
  1597  0047C8  6E5D               	movwf	_test_timer^0,c	;volatile
  1598  0047CA                     
  1599                           ;main.c: 80:             test_send();
  1600  0047CA  EC9C  F025         	call	_test_send	;wreg free
  1601  0047CE  EFD6  F023         	goto	l8014
  1602  0047D2  EF57  F000         	goto	start
  1603  0047D6                     __end_of_main:
  1604                           	opt callstack 0
  1605                           
  1606 ;; *************** function _test_send *****************
  1607 ;; Defined at:
  1608 ;;		line 37 in file "test.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    8
  1629 ;; This function calls:
  1630 ;;		_NWK_DataReq
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text1
  1637  004B38                     __ptext1:
  1638                           	opt callstack 0
  1639  004B38                     _test_send:
  1640                           	opt callstack 22
  1641  004B38                     
  1642                           ;test.c: 38:     nwkDataReq.dstAddr = 0x8002;
  1643  004B38  0E80               	movlw	128
  1644  004B3A  0100               	movlb	0	; () banked
  1645  004B3C  6FAA               	movwf	(_nwkDataReq+6)& (0+255),b
  1646  004B3E  0E02               	movlw	2
  1647  004B40  6FA9               	movwf	(_nwkDataReq+5)& (0+255),b
  1648                           
  1649                           ;test.c: 39:     nwkDataReq.dstEndpoint = 1;
  1650  004B42  0E01               	movlw	1
  1651  004B44  6FAB               	movwf	(_nwkDataReq+7)& (0+255),b
  1652                           
  1653                           ;test.c: 40:     nwkDataReq.srcEndpoint = 1;
  1654  004B46  0E01               	movlw	1
  1655  004B48  6FAC               	movwf	(_nwkDataReq+8)& (0+255),b
  1656                           
  1657                           ;test.c: 41:     nwkDataReq.options = NWK_OPT_ACK_REQUEST;
  1658  004B4A  0E01               	movlw	1
  1659  004B4C  6FAD               	movwf	(_nwkDataReq+9)& (0+255),b
  1660  004B4E                     
  1661                           ; BSR set to: 0
  1662                           ;test.c: 42:     nwkDataReq.data = &message;
  1663  004B4E  0EF7               	movlw	low _message
  1664  004B50  6FB0               	movwf	(_nwkDataReq+12)& (0+255),b
  1665  004B52  0E00               	movlw	high _message
  1666  004B54  6FB1               	movwf	(_nwkDataReq+13)& (0+255),b
  1667  004B56                     
  1668                           ; BSR set to: 0
  1669                           ;test.c: 43:     nwkDataReq.size = sizeof(message);
  1670  004B56  0E05               	movlw	5
  1671  004B58  6FB2               	movwf	(_nwkDataReq+14)& (0+255),b
  1672                           
  1673                           ;test.c: 44:     nwkDataReq.confirm = &appDataConf;
  1674  004B5A  0E00               	movlw	0
  1675  004B5C  6FB3               	movwf	(_nwkDataReq+15)& (0+255),b
  1676  004B5E  0E00               	movlw	0
  1677  004B60  6FB4               	movwf	(_nwkDataReq+16)& (0+255),b
  1678  004B62                     
  1679                           ; BSR set to: 0
  1680                           ;test.c: 45:     NWK_DataReq(&nwkDataReq);
  1681  004B62  0EA4               	movlw	low _nwkDataReq
  1682  004B64  6E02               	movwf	NWK_DataReq@req^0,c
  1683  004B66  0E00               	movlw	high _nwkDataReq
  1684  004B68  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  1685  004B6A  ECEF  F020         	call	_NWK_DataReq	;wreg free
  1686  004B6E  0012               	return		;funcret
  1687  004B70                     __end_of_test_send:
  1688                           	opt callstack 0
  1689                           
  1690 ;; *************** function _NWK_DataReq *****************
  1691 ;; Defined at:
  1692 ;;		line 87 in file "nwk/nwk_src/nwkDataReq.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
  1695 ;;		 -> nwkDataReq(19), 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;Total ram usage:        2 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    7
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_test_send
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text2
  1722  0041DE                     __ptext2:
  1723                           	opt callstack 0
  1724  0041DE                     _NWK_DataReq:
  1725                           	opt callstack 22
  1726  0041DE                     
  1727                           ;nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);nwk/nwk_src/nwkDataR
      +                          eq.c: 88: {;nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INITIAL;
  1728  0041DE  EE20 F004          	lfsr	2,4
  1729  0041E2  5002               	movf	NWK_DataReq@req^0,w,c
  1730  0041E4  26D9               	addwf	fsr2l,f,c
  1731  0041E6  5003               	movf	(NWK_DataReq@req+1)^0,w,c
  1732  0041E8  22DA               	addwfc	fsr2h,f,c
  1733  0041EA  0E00               	movlw	0
  1734  0041EC  6EDF               	movwf	indf2,c
  1735                           
  1736                           ;nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
  1737  0041EE  EE20 F011          	lfsr	2,17
  1738  0041F2  5002               	movf	NWK_DataReq@req^0,w,c
  1739  0041F4  26D9               	addwf	fsr2l,f,c
  1740  0041F6  5003               	movf	(NWK_DataReq@req+1)^0,w,c
  1741  0041F8  22DA               	addwfc	fsr2h,f,c
  1742  0041FA  0E00               	movlw	0
  1743  0041FC  6EDF               	movwf	indf2,c
  1744                           
  1745                           ;nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
  1746  0041FE  EE20 F002          	lfsr	2,2
  1747  004202  5002               	movf	NWK_DataReq@req^0,w,c
  1748  004204  26D9               	addwf	fsr2l,f,c
  1749  004206  5003               	movf	(NWK_DataReq@req+1)^0,w,c
  1750  004208  22DA               	addwfc	fsr2h,f,c
  1751  00420A  0E00               	movlw	0
  1752  00420C  6EDE               	movwf	postinc2,c
  1753  00420E  0E00               	movlw	0
  1754  004210  6EDD               	movwf	postdec2,c
  1755  004212                     
  1756                           ;nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
  1757  004212  0100               	movlb	0	; () banked
  1758  004214  4B86               	infsnz	(_nwkIb+38)& (0+255),f,b
  1759  004216  2B87               	incf	(_nwkIb+39)& (0+255),f,b
  1760  004218                     
  1761                           ; BSR set to: 0
  1762                           ;nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
  1763  004218  503F               	movf	_nwkDataReqQueue^0,w,c
  1764  00421A  1040               	iorwf	(_nwkDataReqQueue+1)^0,w,c
  1765  00421C  A4D8               	btfss	status,2,c
  1766  00421E  EF13  F021         	goto	u5381
  1767  004222  EF15  F021         	goto	u5380
  1768  004226                     u5381:
  1769  004226  EF27  F021         	goto	l7420
  1770  00422A                     u5380:
  1771  00422A                     
  1772                           ; BSR set to: 0
  1773                           ;nwk/nwk_src/nwkDataReq.c: 96:   {;nwk/nwk_src/nwkDataReq.c: 97:     req->next = ((void*
      +                          )0);
  1774  00422A  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
  1775  004230  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
  1776  004236  0E00               	movlw	0
  1777  004238  6EDE               	movwf	postinc2,c
  1778  00423A  0E00               	movlw	0
  1779  00423C  6EDD               	movwf	postdec2,c
  1780  00423E                     l7418:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
  1784  00423E  0060  F008  F03F   	movff	NWK_DataReq@req,_nwkDataReqQueue
  1785  004244  0060  F00C  F040   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
  1786                           
  1787                           ;nwk/nwk_src/nwkDataReq.c: 99:   }
  1788  00424A  EF35  F021         	goto	l823
  1789  00424E                     l7420:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;nwk/nwk_src/nwkDataReq.c: 101:   {;nwk/nwk_src/nwkDataReq.c: 102:     req->next = nwkDa
      +                          taReqQueue;
  1793  00424E  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
  1794  004254  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
  1795  00425A  0060  F0FF  FFDE   	movff	_nwkDataReqQueue,postinc2
  1796  004260  0060  F103  FFDD   	movff	_nwkDataReqQueue+1,postdec2
  1797  004266  EF1F  F021         	goto	l7418
  1798  00426A                     l823:
  1799                           
  1800                           ; BSR set to: 0
  1801  00426A  0012               	return		;funcret
  1802  00426C                     __end_of_NWK_DataReq:
  1803                           	opt callstack 0
  1804                           
  1805 ;; *************** function _test_init *****************
  1806 ;; Defined at:
  1807 ;;		line 29 in file "test.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;Total ram usage:        0 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:   14
  1828 ;; This function calls:
  1829 ;;		_NWK_OpenEndpoint
  1830 ;;		_NWK_SetAddr
  1831 ;;		_NWK_SetPanId
  1832 ;;		_PHY_SetChannel
  1833 ;;		_PHY_SetRxState
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text3
  1840  004C16                     __ptext3:
  1841                           	opt callstack 0
  1842  004C16                     _test_init:
  1843                           	opt callstack 16
  1844  004C16                     
  1845                           ;test.c: 30:     NWK_SetAddr(0x8001);
  1846  004C16  0E80               	movlw	128
  1847  004C18  6E05               	movwf	(NWK_SetAddr@addr+1)^0,c
  1848  004C1A  0E01               	movlw	1
  1849  004C1C  6E04               	movwf	NWK_SetAddr@addr^0,c
  1850  004C1E  ECA3  F027         	call	_NWK_SetAddr	;wreg free
  1851                           
  1852                           ;test.c: 31:     NWK_SetPanId(0x1234);
  1853  004C22  0E12               	movlw	18
  1854  004C24  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
  1855  004C26  0E34               	movlw	52
  1856  004C28  6E04               	movwf	NWK_SetPanId@panId^0,c
  1857  004C2A  EC94  F027         	call	_NWK_SetPanId	;wreg free
  1858  004C2E                     
  1859                           ;test.c: 32:     PHY_SetChannel(0x00);
  1860  004C2E  0E00               	movlw	0
  1861  004C30  EC3F  F025         	call	_PHY_SetChannel
  1862  004C34                     
  1863                           ;test.c: 33:     PHY_SetRxState(1);
  1864  004C34  0E01               	movlw	1
  1865  004C36  EC83  F028         	call	_PHY_SetRxState
  1866  004C3A                     
  1867                           ;test.c: 34:     NWK_OpenEndpoint(1, appDataInd);
  1868  004C3A  0E26               	movlw	low _appDataInd
  1869  004C3C  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
  1870  004C3E  0E51               	movlw	high _appDataInd
  1871  004C40  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
  1872  004C42  0E01               	movlw	1
  1873  004C44  EC73  F027         	call	_NWK_OpenEndpoint
  1874  004C48  0012               	return		;funcret
  1875  004C4A                     __end_of_test_init:
  1876                           	opt callstack 0
  1877                           
  1878 ;; *************** function _PHY_SetRxState *****************
  1879 ;; Defined at:
  1880 ;;		line 834 in file "phy/sx1216/phy_src/phy.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  rx              1    wreg     _Bool 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  rx              1    0[COMRAM] _Bool 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:   13
  1901 ;; This function calls:
  1902 ;;		_receive
  1903 ;; This function is called by:
  1904 ;;		_test_init
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text4
  1909  005106                     __ptext4:
  1910                           	opt callstack 0
  1911  005106                     _PHY_SetRxState:
  1912                           	opt callstack 16
  1913  005106                     
  1914                           ;phy/sx1216/phy_src/phy.c: 835:     receive(0);
  1915  005106  0E00               	movlw	0
  1916  005108  ECA2  F023         	call	_receive
  1917  00510C  0012               	return		;funcret
  1918  00510E                     __end_of_PHY_SetRxState:
  1919                           	opt callstack 0
  1920                           
  1921 ;; *************** function _PHY_SetChannel *****************
  1922 ;; Defined at:
  1923 ;;		line 838 in file "phy/sx1216/phy_src/phy.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  channel         1    wreg     unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  channel         1   46[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;Total ram usage:        1 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:   12
  1944 ;; This function calls:
  1945 ;;		_setFrequency
  1946 ;; This function is called by:
  1947 ;;		_test_init
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text5
  1952  004A7E                     __ptext5:
  1953                           	opt callstack 0
  1954  004A7E                     _PHY_SetChannel:
  1955                           	opt callstack 17
  1956                           
  1957                           ;incstack = 0
  1958                           ;PHY_SetChannel@channel stored from wreg
  1959  004A7E  6E2F               	movwf	PHY_SetChannel@channel^0,c
  1960  004A80                     
  1961                           ;phy/sx1216/phy_src/phy.c: 839:     setFrequency(fhssList[channel]);
  1962  004A80  502F               	movf	PHY_SetChannel@channel^0,w,c
  1963  004A82  0D04               	mullw	4
  1964  004A84  0EF5               	movlw	low _fhssList
  1965  004A86  24F3               	addwf	243,w,c
  1966  004A88  6EF6               	movwf	tblptrl,c
  1967  004A8A  0EFE               	movlw	high _fhssList
  1968  004A8C  20F4               	addwfc	244,w,c
  1969  004A8E  6EF7               	movwf	tblptrh,c
  1970  004A90                     	if	1	;There are 3 active tblptr bytes
  1971  004A90  6AF8               	clrf	tblptru,c
  1972  004A92  0E00               	movlw	low (__mediumconst shr (0+16))
  1973  004A94  22F8               	addwfc	tblptru,f,c
  1974  004A96                     	endif
  1975  004A96  0009               	tblrd		*+
  1976  004A98  006F FFD4  F023    	movff	tablat,setFrequency@frequency
  1977  004A9E  0009               	tblrd		*+
  1978  004AA0  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
  1979  004AA6  0009               	tblrd		*+
  1980  004AA8  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
  1981  004AAE  000A               	tblrd		*-
  1982  004AB0  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
  1983  004AB6  EC50  F015         	call	_setFrequency	;wreg free
  1984  004ABA  0012               	return		;funcret
  1985  004ABC                     __end_of_PHY_SetChannel:
  1986                           	opt callstack 0
  1987                           
  1988 ;; *************** function _NWK_SetPanId *****************
  1989 ;; Defined at:
  1990 ;;		line 116 in file "nwk/nwk_src/nwk.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  panId           2    3[COMRAM] unsigned short 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;Total ram usage:        2 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    8
  2011 ;; This function calls:
  2012 ;;		_PHY_SetPanId
  2013 ;; This function is called by:
  2014 ;;		_test_init
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text6
  2019  004F28                     __ptext6:
  2020                           	opt callstack 0
  2021  004F28                     _NWK_SetPanId:
  2022                           	opt callstack 21
  2023  004F28                     
  2024                           ;nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);nwk/nwk_src/nwk.c: 117: {;nwk
      +                          /nwk_src/nwk.c: 118:   nwkIb.panId = panId;
  2025  004F28  0060  F010  F062   	movff	NWK_SetPanId@panId,_nwkIb+2
  2026  004F2E  0060  F014  F063   	movff	NWK_SetPanId@panId+1,_nwkIb+3
  2027  004F34                     
  2028                           ;nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
  2029  004F34  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
  2030  004F3A  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
  2031  004F40  EC96  F028         	call	_PHY_SetPanId	;wreg free
  2032  004F44  0012               	return		;funcret
  2033  004F46                     __end_of_NWK_SetPanId:
  2034                           	opt callstack 0
  2035                           
  2036 ;; *************** function _PHY_SetPanId *****************
  2037 ;; Defined at:
  2038 ;;		line 842 in file "phy/sx1216/phy_src/phy.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  panId           2    1[COMRAM] unsigned short 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		None
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;Total ram usage:        2 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    7
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_NWK_SetPanId
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text7
  2067  00512C                     __ptext7:
  2068                           	opt callstack 0
  2069  00512C                     _PHY_SetPanId:
  2070                           	opt callstack 21
  2071  00512C  0012               	return		;funcret
  2072  00512E                     __end_of_PHY_SetPanId:
  2073                           	opt callstack 0
  2074                           
  2075 ;; *************** function _NWK_SetAddr *****************
  2076 ;; Defined at:
  2077 ;;		line 106 in file "nwk/nwk_src/nwk.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  addr            2    3[COMRAM] unsigned short 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;Total ram usage:        2 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    8
  2098 ;; This function calls:
  2099 ;;		_PHY_SetShortAddr
  2100 ;; This function is called by:
  2101 ;;		_test_init
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text8
  2106  004F46                     __ptext8:
  2107                           	opt callstack 0
  2108  004F46                     _NWK_SetAddr:
  2109                           	opt callstack 21
  2110  004F46                     
  2111                           ;nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);nwk/nwk_src/nwk.c: 107: {;nwk/n
      +                          wk_src/nwk.c: 108:   nwkIb.addr = addr;
  2112  004F46  0060  F010  F060   	movff	NWK_SetAddr@addr,_nwkIb
  2113  004F4C  0060  F014  F061   	movff	NWK_SetAddr@addr+1,_nwkIb+1
  2114  004F52                     
  2115                           ;nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
  2116  004F52  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
  2117  004F58  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
  2118  004F5E  EC97  F028         	call	_PHY_SetShortAddr	;wreg free
  2119  004F62  0012               	return		;funcret
  2120  004F64                     __end_of_NWK_SetAddr:
  2121                           	opt callstack 0
  2122                           
  2123 ;; *************** function _PHY_SetShortAddr *****************
  2124 ;; Defined at:
  2125 ;;		line 846 in file "phy/sx1216/phy_src/phy.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  addr            2    1[COMRAM] unsigned short 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		None
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:        2 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    7
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_NWK_SetAddr
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text9
  2154  00512E                     __ptext9:
  2155                           	opt callstack 0
  2156  00512E                     _PHY_SetShortAddr:
  2157                           	opt callstack 21
  2158  00512E  0012               	return		;funcret
  2159  005130                     __end_of_PHY_SetShortAddr:
  2160                           	opt callstack 0
  2161                           
  2162 ;; *************** function _SYS_TaskHandler *****************
  2163 ;; Defined at:
  2164 ;;		line 67 in file "sys/sys_src/sys.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:   16
  2185 ;; This function calls:
  2186 ;;		_NWK_TaskHandler
  2187 ;;		_PHY_TaskHandler
  2188 ;;		_SYS_TimerTaskHandler
  2189 ;; This function is called by:
  2190 ;;		_main
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text10
  2195  00505E                     __ptext10:
  2196                           	opt callstack 0
  2197  00505E                     _SYS_TaskHandler:
  2198                           	opt callstack 14
  2199  00505E                     
  2200                           ;sys/sys_src/sys.c: 69:   PHY_TaskHandler();
  2201  00505E  EC8A  F028         	call	_PHY_TaskHandler	;wreg free
  2202  005062                     
  2203                           ;sys/sys_src/sys.c: 70:   NWK_TaskHandler();
  2204  005062  EC36  F028         	call	_NWK_TaskHandler	;wreg free
  2205  005066                     
  2206                           ;sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
  2207  005066  EC73  F013         	call	_SYS_TimerTaskHandler	;wreg free
  2208  00506A  0012               	return		;funcret
  2209  00506C                     __end_of_SYS_TaskHandler:
  2210                           	opt callstack 0
  2211                           
  2212 ;; *************** function _SYS_TimerTaskHandler *****************
  2213 ;; Defined at:
  2214 ;;		line 112 in file "sys/sys_src/sysTimer.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
  2219 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  2220 ;;  elapsed         4   29[COMRAM] unsigned long 
  2221 ;;  cnt             1   28[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;Total ram usage:       11 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:   10
  2238 ;; This function calls:
  2239 ;;		_nwkRxDuplicateRejectionTimerHandler
  2240 ;;		_nwkTxAckWaitTimerHandler
  2241 ;;		_nwkTxDelayTimerHandler
  2242 ;;		_placeTimer
  2243 ;; This function is called by:
  2244 ;;		_SYS_TaskHandler
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text11
  2249  0026E6                     __ptext11:
  2250                           	opt callstack 0
  2251  0026E6                     _SYS_TimerTaskHandler:
  2252                           	opt callstack 19
  2253  0026E6                     
  2254                           ;sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;sys/sys_src/sysTimer.c: 115:     uin
      +                          t8_t cnt;;sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
  2255  0026E6  5041               	movf	_halTimerIrqCount^0,w,c	;volatile
  2256  0026E8  1042               	iorwf	(_halTimerIrqCount+1)^0,w,c	;volatile
  2257  0026EA  A4D8               	btfss	status,2,c
  2258  0026EC  EF7A  F013         	goto	u5391
  2259  0026F0  EF7C  F013         	goto	u5390
  2260  0026F4                     u5391:
  2261  0026F4  EF7E  F013         	goto	l1917
  2262  0026F8                     u5390:
  2263  0026F8  EF18  F014         	goto	l1918
  2264  0026FC                     l1917:
  2265                           
  2266                           ;sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
  2267  0026FC  0139               	movlb	57	; () banked
  2268  0026FE  9F93               	bcf	147,7,b	;volatile
  2269                           
  2270                           ;sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
  2271  002700  0060  F104  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
  2272  002706                     
  2273                           ; BSR set to: 57
  2274                           ;sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
  2275  002706  0E00               	movlw	0
  2276  002708  6E42               	movwf	(_halTimerIrqCount+1)^0,c	;volatile
  2277  00270A  0E00               	movlw	0
  2278  00270C  6E41               	movwf	_halTimerIrqCount^0,c	;volatile
  2279  00270E                     
  2280                           ; BSR set to: 57
  2281                           ;sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
  2282  00270E  8F93               	bsf	147,7,b	;volatile
  2283                           
  2284                           ;sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
  2285  002710  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
  2286  002712  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
  2287  002714  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
  2288  002716  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
  2289  002718  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
  2290                           
  2291                           ;sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
  2292  00271A  EFE3  F013         	goto	l7450
  2293  00271E                     l7440:
  2294                           
  2295                           ;sys/sys_src/sysTimer.c: 129:     {;sys/sys_src/sysTimer.c: 130:         SYS_Timer_t *ti
      +                          mer = timers;
  2296  00271E  0060  F0EC  F022   	movff	_timers,SYS_TimerTaskHandler@timer
  2297  002724  0060  F0F0  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
  2298  00272A                     
  2299                           ;sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
  2300  00272A  EE20 F002          	lfsr	2,2
  2301  00272E  503B               	movf	_timers^0,w,c
  2302  002730  26D9               	addwf	fsr2l,f,c
  2303  002732  503C               	movf	(_timers+1)^0,w,c
  2304  002734  22DA               	addwfc	fsr2h,f,c
  2305  002736  50DE               	movf	postinc2,w,c
  2306  002738  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
  2307  00273A  50DE               	movf	postinc2,w,c
  2308  00273C  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
  2309  00273E  50DE               	movf	postinc2,w,c
  2310  002740  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
  2311  002742  50DD               	movf	postdec2,w,c
  2312  002744  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
  2313                           
  2314                           ;sys/sys_src/sysTimer.c: 133:         timers = timers->next;
  2315  002746  0060  F0EF  FFD9   	movff	_timers,fsr2l
  2316  00274C  0060  F0F3  FFDA   	movff	_timers+1,fsr2h
  2317  002752  006F FF78  F03B    	movff	postinc2,_timers
  2318  002758  006F FF74  F03C    	movff	postdec2,_timers+1
  2319  00275E                     
  2320                           ;sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
  2321  00275E  EE20 F00A          	lfsr	2,10
  2322  002762  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
  2323  002764  26D9               	addwf	fsr2l,f,c
  2324  002766  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
  2325  002768  22DA               	addwfc	fsr2h,f,c
  2326  00276A  04DE               	decf	postinc2,w,c
  2327  00276C  A4D8               	btfss	status,2,c
  2328  00276E  EFBB  F013         	goto	u5401
  2329  002772  EFBD  F013         	goto	u5400
  2330  002776                     u5401:
  2331  002776  EFC5  F013         	goto	l7448
  2332  00277A                     u5400:
  2333  00277A                     
  2334                           ;sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
  2335  00277A  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
  2336  002780  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
  2337  002786  EC77  F00C         	call	_placeTimer	;wreg free
  2338  00278A                     l7448:
  2339                           
  2340                           ;sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
  2341  00278A  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
  2342  002790  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
  2343  002796  EE20 F00B          	lfsr	2,11
  2344  00279A  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
  2345  00279C  26D9               	addwf	fsr2l,f,c
  2346  00279E  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
  2347  0027A0  22DA               	addwfc	fsr2h,f,c
  2348  0027A2  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
  2349  0027A8  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
  2350  0027AE  D802               	call	u5418
  2351  0027B0  EFE3  F013         	goto	u5419
  2352  0027B4                     u5418:
  2353  0027B4  0005               	push	
  2354  0027B6  6EFA               	movwf	pclath,c
  2355  0027B8  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
  2356  0027BA  6EFD               	movwf	tosl,c
  2357  0027BC  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
  2358  0027BE  6EFE               	movwf	tosh,c
  2359  0027C0  6AFF               	clrf	tosu,c
  2360  0027C2  50FA               	movf	pclath,w,c
  2361  0027C4  0012               	return		;indir
  2362  0027C6                     u5419:
  2363  0027C6                     l7450:
  2364                           
  2365                           ;sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
  2366  0027C6  503B               	movf	_timers^0,w,c
  2367  0027C8  103C               	iorwf	(_timers+1)^0,w,c
  2368  0027CA  B4D8               	btfsc	status,2,c
  2369  0027CC  EFEA  F013         	goto	u5421
  2370  0027D0  EFEC  F013         	goto	u5420
  2371  0027D4                     u5421:
  2372  0027D4  EF01  F014         	goto	l7454
  2373  0027D8                     u5420:
  2374  0027D8  EE20 F002          	lfsr	2,2
  2375  0027DC  503B               	movf	_timers^0,w,c
  2376  0027DE  26D9               	addwf	fsr2l,f,c
  2377  0027E0  503C               	movf	(_timers+1)^0,w,c
  2378  0027E2  22DA               	addwfc	fsr2h,f,c
  2379  0027E4  50DE               	movf	postinc2,w,c
  2380  0027E6  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
  2381  0027E8  50DE               	movf	postinc2,w,c
  2382  0027EA  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
  2383  0027EC  50DE               	movf	postinc2,w,c
  2384  0027EE  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
  2385  0027F0  50DE               	movf	postinc2,w,c
  2386  0027F2  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
  2387  0027F4  B0D8               	btfsc	status,0,c
  2388  0027F6  EFFF  F013         	goto	u5431
  2389  0027FA  EF01  F014         	goto	u5430
  2390  0027FE                     u5431:
  2391  0027FE  EF8F  F013         	goto	l7440
  2392  002802                     u5430:
  2393  002802                     l7454:
  2394                           
  2395                           ;sys/sys_src/sysTimer.c: 139:     if (timers){
  2396  002802  503B               	movf	_timers^0,w,c
  2397  002804  103C               	iorwf	(_timers+1)^0,w,c
  2398  002806  B4D8               	btfsc	status,2,c
  2399  002808  EF08  F014         	goto	u5441
  2400  00280C  EF0A  F014         	goto	u5440
  2401  002810                     u5441:
  2402  002810  EF18  F014         	goto	l1918
  2403  002814                     u5440:
  2404  002814                     
  2405                           ;sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
  2406  002814  EE20 F002          	lfsr	2,2
  2407  002818  503B               	movf	_timers^0,w,c
  2408  00281A  26D9               	addwf	fsr2l,f,c
  2409  00281C  503C               	movf	(_timers+1)^0,w,c
  2410  00281E  22DA               	addwfc	fsr2h,f,c
  2411  002820  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
  2412  002822  5EDE               	subwf	postinc2,f,c
  2413  002824  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
  2414  002826  5ADE               	subwfb	postinc2,f,c
  2415  002828  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
  2416  00282A  5ADE               	subwfb	postinc2,f,c
  2417  00282C  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
  2418  00282E  5ADE               	subwfb	postinc2,f,c
  2419  002830                     l1918:
  2420  002830  0012               	return		;funcret
  2421  002832                     __end_of_SYS_TimerTaskHandler:
  2422                           	opt callstack 0
  2423                           
  2424 ;; *************** function _nwkTxAckWaitTimerHandler *****************
  2425 ;; Defined at:
  2426 ;;		line 205 in file "nwk/nwk_src/nwkTx.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
  2429 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
  2432 ;;		 -> nwkFrameFrames(685), NULL(0), 
  2433 ;;  restart         1   21[COMRAM] _Bool 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;Total ram usage:        7 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    9
  2450 ;; This function calls:
  2451 ;;		_SYS_TimerStart
  2452 ;;		_nwkFrameNext
  2453 ;;		_nwkTxConfirm
  2454 ;; This function is called by:
  2455 ;;		_nwkTxInit
  2456 ;;		_SYS_TimerTaskHandler
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text12
  2461  003C12                     __ptext12:
  2462                           	opt callstack 0
  2463  003C12                     _nwkTxAckWaitTimerHandler:
  2464                           	opt callstack 19
  2465  003C12                     
  2466                           ;nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);nwk/
      +                          nwk_src/nwkTx.c: 206: {;nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*)0);
  2467  003C12  0E00               	movlw	0
  2468  003C14  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
  2469  003C16  0E00               	movlw	0
  2470  003C18  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
  2471  003C1A                     
  2472                           ;nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
  2473  003C1A  0E00               	movlw	0
  2474  003C1C  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
  2475                           
  2476                           ;nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  2477  003C1E  EF3E  F01E         	goto	l1366
  2478  003C22                     l7202:
  2479                           
  2480                           ;nwk/nwk_src/nwkTx.c: 211:   {;nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT_ACK =
      +                          = frame->state)
  2481  003C22  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
  2482  003C28  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
  2483  003C2E  0E16               	movlw	22
  2484  003C30  18DE               	xorwf	postinc2,w,c
  2485  003C32  A4D8               	btfss	status,2,c
  2486  003C34  EF1E  F01E         	goto	u5191
  2487  003C38  EF20  F01E         	goto	u5190
  2488  003C3C                     u5191:
  2489  003C3C  EF3E  F01E         	goto	l1366
  2490  003C40                     u5190:
  2491  003C40                     
  2492                           ;nwk/nwk_src/nwkTx.c: 213:     {;nwk/nwk_src/nwkTx.c: 214:       restart = 1;
  2493  003C40  0E01               	movlw	1
  2494  003C42  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
  2495  003C44                     
  2496                           ;nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
  2497  003C44  EE20 F084          	lfsr	2,132
  2498  003C48  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
  2499  003C4A  26D9               	addwf	fsr2l,f,c
  2500  003C4C  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
  2501  003C4E  22DA               	addwfc	fsr2h,f,c
  2502  003C50  06DE               	decf	postinc2,f,c
  2503  003C52  0E00               	movlw	0
  2504  003C54  5ADD               	subwfb	postdec2,f,c
  2505  003C56  50DE               	movf	postinc2,w,c
  2506  003C58  10DE               	iorwf	postinc2,w,c
  2507  003C5A  A4D8               	btfss	status,2,c
  2508  003C5C  EF32  F01E         	goto	u5201
  2509  003C60  EF34  F01E         	goto	u5200
  2510  003C64                     u5201:
  2511  003C64  EF3E  F01E         	goto	l1366
  2512  003C68                     u5200:
  2513  003C68                     
  2514                           ;nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
  2515  003C68  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
  2516  003C6E  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
  2517  003C74  0E10               	movlw	16
  2518  003C76  6E04               	movwf	nwkTxConfirm@status^0,c
  2519  003C78  EC1C  F027         	call	_nwkTxConfirm	;wreg free
  2520  003C7C                     l1366:
  2521                           
  2522                           ;nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  2523  003C7C  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
  2524  003C82  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
  2525  003C88  EC87  F01C         	call	_nwkFrameNext	;wreg free
  2526  003C8C  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
  2527  003C92  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
  2528  003C98  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
  2529  003C9A  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
  2530  003C9C  A4D8               	btfss	status,2,c
  2531  003C9E  EF53  F01E         	goto	u5211
  2532  003CA2  EF55  F01E         	goto	u5210
  2533  003CA6                     u5211:
  2534  003CA6  EF11  F01E         	goto	l7202
  2535  003CAA                     u5210:
  2536  003CAA                     
  2537                           ;nwk/nwk_src/nwkTx.c: 221:   if (restart)
  2538  003CAA  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
  2539  003CAC  B4D8               	btfsc	status,2,c
  2540  003CAE  EF5B  F01E         	goto	u5221
  2541  003CB2  EF5D  F01E         	goto	u5220
  2542  003CB6                     u5221:
  2543  003CB6  EF65  F01E         	goto	l1372
  2544  003CBA                     u5220:
  2545  003CBA                     
  2546                           ;nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
  2547  003CBA  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
  2548  003CC0  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
  2549  003CC6  EC25  F026         	call	_SYS_TimerStart	;wreg free
  2550  003CCA                     l1372:
  2551  003CCA  0012               	return		;funcret
  2552  003CCC                     __end_of_nwkTxAckWaitTimerHandler:
  2553                           	opt callstack 0
  2554                           
  2555 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
  2556 ;; Defined at:
  2557 ;;		line 181 in file "nwk/nwk_src/nwkRx.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
  2560 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  i               1   20[COMRAM] unsigned char 
  2563 ;;  restart         1   19[COMRAM] _Bool 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;Total ram usage:        4 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    9
  2580 ;; This function calls:
  2581 ;;		_SYS_TimerStart
  2582 ;; This function is called by:
  2583 ;;		_nwkRxInit
  2584 ;;		_SYS_TimerTaskHandler
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text13
  2589  0042EC                     __ptext13:
  2590                           	opt callstack 0
  2591  0042EC                     _nwkRxDuplicateRejectionTimerHandler:
  2592                           	opt callstack 19
  2593  0042EC                     
  2594                           ;nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *
      +                          timer);nwk/nwk_src/nwkRx.c: 182: {;nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 0;
  2595  0042EC  0E00               	movlw	0
  2596  0042EE  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
  2597                           
  2598                           ;nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
  2599  0042F0  0E00               	movlw	0
  2600  0042F2  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
  2601  0042F4                     l7184:
  2602                           
  2603                           ;nwk/nwk_src/nwkRx.c: 186:   {;nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRejection
      +                          Table[i].ttl)
  2604  0042F4  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
  2605  0042F6  0D05               	mullw	5
  2606  0042F8  0E8A               	movlw	low (_nwkRxDuplicateRejectionTable+4)
  2607  0042FA  24F3               	addwf	243,w,c
  2608  0042FC  6ED9               	movwf	fsr2l,c
  2609  0042FE  0E01               	movlw	high (_nwkRxDuplicateRejectionTable+4)
  2610  004300  20F4               	addwfc	prodh,w,c
  2611  004302  6EDA               	movwf	fsr2h,c
  2612  004304  50DF               	movf	indf2,w,c
  2613  004306  B4D8               	btfsc	status,2,c
  2614  004308  EF88  F021         	goto	u5161
  2615  00430C  EF8A  F021         	goto	u5160
  2616  004310                     u5161:
  2617  004310  EF95  F021         	goto	l7190
  2618  004314                     u5160:
  2619  004314                     
  2620                           ;nwk/nwk_src/nwkRx.c: 188:     {;nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRejection
      +                          Table[i].ttl--;
  2621  004314  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
  2622  004316  0D05               	mullw	5
  2623  004318  0E8A               	movlw	low (_nwkRxDuplicateRejectionTable+4)
  2624  00431A  24F3               	addwf	243,w,c
  2625  00431C  6ED9               	movwf	fsr2l,c
  2626  00431E  0E01               	movlw	high (_nwkRxDuplicateRejectionTable+4)
  2627  004320  20F4               	addwfc	prodh,w,c
  2628  004322  6EDA               	movwf	fsr2h,c
  2629  004324  06DF               	decf	indf2,f,c
  2630  004326                     
  2631                           ;nwk/nwk_src/nwkRx.c: 190:       restart = 1;
  2632  004326  0E01               	movlw	1
  2633  004328  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
  2634  00432A                     l7190:
  2635                           
  2636                           ;nwk/nwk_src/nwkRx.c: 192:   }
  2637  00432A  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
  2638  00432C  0E09               	movlw	9
  2639  00432E  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
  2640  004330  EF9C  F021         	goto	u5171
  2641  004334  EF9E  F021         	goto	u5170
  2642  004338                     u5171:
  2643  004338  EF7A  F021         	goto	l7184
  2644  00433C                     u5170:
  2645  00433C                     
  2646                           ;nwk/nwk_src/nwkRx.c: 194:   if (restart)
  2647  00433C  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
  2648  00433E  B4D8               	btfsc	status,2,c
  2649  004340  EFA4  F021         	goto	u5181
  2650  004344  EFA6  F021         	goto	u5180
  2651  004348                     u5181:
  2652  004348  EFAE  F021         	goto	l1154
  2653  00434C                     u5180:
  2654  00434C                     
  2655                           ;nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
  2656  00434C  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
  2657  004352  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
  2658  004358  EC25  F026         	call	_SYS_TimerStart	;wreg free
  2659  00435C                     l1154:
  2660  00435C  0012               	return		;funcret
  2661  00435E                     __end_of_nwkRxDuplicateRejectionTimerHandler:
  2662                           	opt callstack 0
  2663                           
  2664 ;; *************** function _nwkTxDelayTimerHandler *****************
  2665 ;; Defined at:
  2666 ;;		line 244 in file "nwk/nwk_src/nwkTx.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
  2669 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
  2672 ;;		 -> nwkFrameFrames(685), NULL(0), 
  2673 ;;  restart         1   21[COMRAM] _Bool 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        7 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    9
  2690 ;; This function calls:
  2691 ;;		_SYS_TimerStart
  2692 ;;		_nwkFrameNext
  2693 ;; This function is called by:
  2694 ;;		_nwkTxInit
  2695 ;;		_SYS_TimerTaskHandler
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text14
  2700  003CCC                     __ptext14:
  2701                           	opt callstack 0
  2702  003CCC                     _nwkTxDelayTimerHandler:
  2703                           	opt callstack 19
  2704  003CCC                     
  2705                           ;nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);nwk/nw
      +                          k_src/nwkTx.c: 245: {;nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0);
  2706  003CCC  0E00               	movlw	0
  2707  003CCE  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
  2708  003CD0  0E00               	movlw	0
  2709  003CD2  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
  2710  003CD4                     
  2711                           ;nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
  2712  003CD4  0E00               	movlw	0
  2713  003CD6  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
  2714                           
  2715                           ;nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  2716  003CD8  EF99  F01E         	goto	l7226
  2717  003CDC                     l7218:
  2718                           
  2719                           ;nwk/nwk_src/nwkTx.c: 250:   {;nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT_DELAY
      +                           == frame->state)
  2720  003CDC  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
  2721  003CE2  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
  2722  003CE8  0E11               	movlw	17
  2723  003CEA  18DE               	xorwf	postinc2,w,c
  2724  003CEC  A4D8               	btfss	status,2,c
  2725  003CEE  EF7B  F01E         	goto	u5231
  2726  003CF2  EF7D  F01E         	goto	u5230
  2727  003CF6                     u5231:
  2728  003CF6  EF99  F01E         	goto	l7226
  2729  003CFA                     u5230:
  2730  003CFA                     
  2731                           ;nwk/nwk_src/nwkTx.c: 252:     {;nwk/nwk_src/nwkTx.c: 253:       restart = 1;
  2732  003CFA  0E01               	movlw	1
  2733  003CFC  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
  2734  003CFE                     
  2735                           ;nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
  2736  003CFE  EE20 F084          	lfsr	2,132
  2737  003D02  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
  2738  003D04  26D9               	addwf	fsr2l,f,c
  2739  003D06  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
  2740  003D08  22DA               	addwfc	fsr2h,f,c
  2741  003D0A  06DE               	decf	postinc2,f,c
  2742  003D0C  0E00               	movlw	0
  2743  003D0E  5ADD               	subwfb	postdec2,f,c
  2744  003D10  50DE               	movf	postinc2,w,c
  2745  003D12  10DE               	iorwf	postinc2,w,c
  2746  003D14  A4D8               	btfss	status,2,c
  2747  003D16  EF8F  F01E         	goto	u5241
  2748  003D1A  EF91  F01E         	goto	u5240
  2749  003D1E                     u5241:
  2750  003D1E  EF99  F01E         	goto	l7226
  2751  003D22                     u5240:
  2752  003D22                     
  2753                           ;nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
  2754  003D22  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
  2755  003D28  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
  2756  003D2E  0E13               	movlw	19
  2757  003D30  6EDF               	movwf	indf2,c
  2758  003D32                     l7226:
  2759                           
  2760                           ;nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  2761  003D32  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
  2762  003D38  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
  2763  003D3E  EC87  F01C         	call	_nwkFrameNext	;wreg free
  2764  003D42  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
  2765  003D48  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
  2766  003D4E  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
  2767  003D50  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
  2768  003D52  A4D8               	btfss	status,2,c
  2769  003D54  EFAE  F01E         	goto	u5251
  2770  003D58  EFB0  F01E         	goto	u5250
  2771  003D5C                     u5251:
  2772  003D5C  EF6E  F01E         	goto	l7218
  2773  003D60                     u5250:
  2774  003D60                     
  2775                           ;nwk/nwk_src/nwkTx.c: 260:   if (restart)
  2776  003D60  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
  2777  003D62  B4D8               	btfsc	status,2,c
  2778  003D64  EFB6  F01E         	goto	u5261
  2779  003D68  EFB8  F01E         	goto	u5260
  2780  003D6C                     u5261:
  2781  003D6C  EFC0  F01E         	goto	l1384
  2782  003D70                     u5260:
  2783  003D70                     
  2784                           ;nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
  2785  003D70  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
  2786  003D76  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
  2787  003D7C  EC25  F026         	call	_SYS_TimerStart	;wreg free
  2788  003D80                     l1384:
  2789  003D80  0012               	return		;funcret
  2790  003D82                     __end_of_nwkTxDelayTimerHandler:
  2791                           	opt callstack 0
  2792                           
  2793 ;; *************** function _nwkTxConfirm *****************
  2794 ;; Defined at:
  2795 ;;		line 227 in file "nwk/nwk_src/nwkTx.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
  2798 ;;		 -> nwkFrameFrames(685), NULL(0), 
  2799 ;;  status          1    3[COMRAM] unsigned char 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2811 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;Total ram usage:        3 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    7
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_nwkTxAckWaitTimerHandler
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text15
  2826  004E38                     __ptext15:
  2827                           	opt callstack 0
  2828  004E38                     _nwkTxConfirm:
  2829                           	opt callstack 20
  2830  004E38                     
  2831                           ;nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);nwk/nwk_
      +                          src/nwkTx.c: 228: {;nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CONFIRM;
  2832  004E38  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
  2833  004E3E  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
  2834  004E44  0E17               	movlw	23
  2835  004E46  6EDF               	movwf	indf2,c
  2836  004E48                     
  2837                           ;nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
  2838  004E48  EE20 F083          	lfsr	2,131
  2839  004E4C  5002               	movf	nwkTxConfirm@frame^0,w,c
  2840  004E4E  26D9               	addwf	fsr2l,f,c
  2841  004E50  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
  2842  004E52  22DA               	addwfc	fsr2h,f,c
  2843  004E54  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
  2844  004E5A  0012               	return		;funcret
  2845  004E5C                     __end_of_nwkTxConfirm:
  2846                           	opt callstack 0
  2847                           
  2848 ;; *************** function _PHY_TaskHandler *****************
  2849 ;; Defined at:
  2850 ;;		line 879 in file "phy/sx1216/phy_src/phy.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:   15
  2871 ;; This function calls:
  2872 ;;		_radio_engine
  2873 ;; This function is called by:
  2874 ;;		_SYS_TaskHandler
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text16
  2879  005114                     __ptext16:
  2880                           	opt callstack 0
  2881  005114                     _PHY_TaskHandler:
  2882                           	opt callstack 14
  2883  005114                     
  2884                           ;phy/sx1216/phy_src/phy.c: 880:     radio_engine();
  2885  005114  EC46  F00E         	call	_radio_engine	;wreg free
  2886  005118  0012               	return		;funcret
  2887  00511A                     __end_of_PHY_TaskHandler:
  2888                           	opt callstack 0
  2889                           
  2890 ;; *************** function _radio_engine *****************
  2891 ;; Defined at:
  2892 ;;		line 762 in file "phy/sx1216/phy_src/phy.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;Total ram usage:        2 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:   14
  2913 ;; This function calls:
  2914 ;;		_DIO0_Receive_ISR
  2915 ;;		_PHY_DataConf
  2916 ;;		_SX1276Read
  2917 ;;		_cad
  2918 ;;		_get_timer0base
  2919 ;;		_initRadio
  2920 ;;		_receive
  2921 ;;		_set_timer0base
  2922 ;; This function is called by:
  2923 ;;		_PHY_TaskHandler
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text17
  2928  001C8C                     __ptext17:
  2929                           	opt callstack 0
  2930  001C8C                     _radio_engine:
  2931                           	opt callstack 14
  2932  001C8C                     
  2933                           ;phy/sx1216/phy_src/phy.c: 763:     switch(radio_state_var){
  2934  001C8C  EFEC  F00E         	goto	l7986
  2935  001C90                     l7932:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;phy/sx1216/phy_src/phy.c: 765:             initRadio();
  2939  001C90  EC70  F011         	call	_initRadio	;wreg free
  2940  001C94                     
  2941                           ;phy/sx1216/phy_src/phy.c: 766:             radio_state_var = START_RX;
  2942  001C94  0E01               	movlw	1
  2943  001C96  6E49               	movwf	_radio_state_var^0,c
  2944  001C98                     
  2945                           ;phy/sx1216/phy_src/phy.c: 767:             need_radio_reset = 0;
  2946  001C98  0E00               	movlw	0
  2947  001C9A  6E50               	movwf	_need_radio_reset^0,c
  2948                           
  2949                           ;phy/sx1216/phy_src/phy.c: 768:             break;
  2950  001C9C  EF16  F00F         	goto	l1718
  2951  001CA0                     l7938:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;phy/sx1216/phy_src/phy.c: 770:             if(need_radio_reset){
  2955  001CA0  5050               	movf	_need_radio_reset^0,w,c
  2956  001CA2  B4D8               	btfsc	status,2,c
  2957  001CA4  EF56  F00E         	goto	u5851
  2958  001CA8  EF58  F00E         	goto	u5850
  2959  001CAC                     u5851:
  2960  001CAC  EF5C  F00E         	goto	l7942
  2961  001CB0                     u5850:
  2962  001CB0                     l7940:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;phy/sx1216/phy_src/phy.c: 771:                 radio_state_var = INIT_RADIO;
  2966  001CB0  0E00               	movlw	0
  2967  001CB2  6E49               	movwf	_radio_state_var^0,c
  2968                           
  2969                           ;phy/sx1216/phy_src/phy.c: 772:                 break;
  2970  001CB4  EF16  F00F         	goto	l1718
  2971  001CB8                     l7942:
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;phy/sx1216/phy_src/phy.c: 774:             receive(0);
  2975  001CB8  0E00               	movlw	0
  2976  001CBA  ECA2  F023         	call	_receive
  2977  001CBE                     
  2978                           ;phy/sx1216/phy_src/phy.c: 775:             radio_state_var = WAIT_FOR_RX;
  2979  001CBE  0E02               	movlw	2
  2980  001CC0  6E49               	movwf	_radio_state_var^0,c
  2981                           
  2982                           ;phy/sx1216/phy_src/phy.c: 776:             break;
  2983  001CC2  EF16  F00F         	goto	l1718
  2984  001CC6                     l1701:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;phy/sx1216/phy_src/phy.c: 778:             if(PORTBbits.RB4){
  2988  001CC6  A8CB               	btfss	203,4,c	;volatile
  2989  001CC8  EF68  F00E         	goto	u5861
  2990  001CCC  EF6A  F00E         	goto	u5860
  2991  001CD0                     u5861:
  2992  001CD0  EF16  F00F         	goto	l1718
  2993  001CD4                     u5860:
  2994  001CD4                     
  2995                           ; BSR set to: 0
  2996                           ;phy/sx1216/phy_src/phy.c: 779:                 radio_state_var = RX_MESSAGE;
  2997  001CD4  0E03               	movlw	3
  2998  001CD6  6E49               	movwf	_radio_state_var^0,c
  2999  001CD8  EF16  F00F         	goto	l1718
  3000  001CDC                     l7948:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;phy/sx1216/phy_src/phy.c: 783:             DIO0_Receive_ISR();
  3004  001CDC  ECAB  F01D         	call	_DIO0_Receive_ISR	;wreg free
  3005  001CE0                     l7950:
  3006                           
  3007                           ;phy/sx1216/phy_src/phy.c: 784:             radio_state_var = START_RX;
  3008  001CE0  0E01               	movlw	1
  3009  001CE2  6E49               	movwf	_radio_state_var^0,c
  3010                           
  3011                           ;phy/sx1216/phy_src/phy.c: 785:             break;
  3012  001CE4  EF16  F00F         	goto	l1718
  3013  001CE8                     l7952:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;phy/sx1216/phy_src/phy.c: 787:             if(!get_timer0base(&_cadBackoffTimer)){
  3017  001CE8  0E59               	movlw	low __cadBackoffTimer
  3018  001CEA  6E02               	movwf	get_timer0base@timer^0,c
  3019  001CEC  0E00               	movlw	high __cadBackoffTimer
  3020  001CEE  6E03               	movwf	(get_timer0base@timer+1)^0,c
  3021  001CF0  EC9D  F026         	call	_get_timer0base	;wreg free
  3022  001CF4  5002               	movf	?_get_timer0base^0,w,c
  3023  001CF6  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3024  001CF8  A4D8               	btfss	status,2,c
  3025  001CFA  EF81  F00E         	goto	u5871
  3026  001CFE  EF83  F00E         	goto	u5870
  3027  001D02                     u5871:
  3028  001D02  EF70  F00E         	goto	l7950
  3029  001D06                     u5870:
  3030  001D06                     
  3031                           ;phy/sx1216/phy_src/phy.c: 788:                 if(cad()){
  3032  001D06  ECFD  F016         	call	_cad	;wreg free
  3033  001D0A  0900               	iorlw	0
  3034  001D0C  B4D8               	btfsc	status,2,c
  3035  001D0E  EF8B  F00E         	goto	u5881
  3036  001D12  EF8D  F00E         	goto	u5880
  3037  001D16                     u5881:
  3038  001D16  EFA4  F00E         	goto	l7964
  3039  001D1A                     u5880:
  3040  001D1A                     
  3041                           ;phy/sx1216/phy_src/phy.c: 790:                     set_timer0base(&_cadBackoffTimer, 20
      +                          00);
  3042  001D1A  0E59               	movlw	low __cadBackoffTimer
  3043  001D1C  6E02               	movwf	set_timer0base@timer^0,c
  3044  001D1E  0E00               	movlw	high __cadBackoffTimer
  3045  001D20  6E03               	movwf	(set_timer0base@timer+1)^0,c
  3046  001D22  0E07               	movlw	7
  3047  001D24  6E05               	movwf	(set_timer0base@tval+1)^0,c
  3048  001D26  0ED0               	movlw	208
  3049  001D28  6E04               	movwf	set_timer0base@tval^0,c
  3050  001D2A  EC63  F027         	call	_set_timer0base	;wreg free
  3051  001D2E                     
  3052                           ;phy/sx1216/phy_src/phy.c: 792:                     radio_state_var = START_RX;
  3053  001D2E  0E01               	movlw	1
  3054  001D30  6E49               	movwf	_radio_state_var^0,c
  3055  001D32                     
  3056                           ;phy/sx1216/phy_src/phy.c: 793:                     if(cadCounter < 10)
  3057  001D32  0E0A               	movlw	10
  3058  001D34  6051               	cpfslt	_cadCounter^0,c
  3059  001D36  EF9F  F00E         	goto	u5891
  3060  001D3A  EFA1  F00E         	goto	u5890
  3061  001D3E                     u5891:
  3062  001D3E  EF16  F00F         	goto	l1718
  3063  001D42                     u5890:
  3064  001D42                     
  3065                           ;phy/sx1216/phy_src/phy.c: 794:                     {;phy/sx1216/phy_src/phy.c: 795:    
      +                                               cadCounter++;
  3066  001D42  2A51               	incf	_cadCounter^0,f,c
  3067  001D44  EF16  F00F         	goto	l1718
  3068  001D48                     l7964:
  3069                           
  3070                           ;phy/sx1216/phy_src/phy.c: 800:                 radio_state_var = START_TX;
  3071  001D48  0E06               	movlw	6
  3072  001D4A  6E49               	movwf	_radio_state_var^0,c
  3073  001D4C  EF16  F00F         	goto	l1718
  3074  001D50                     l7968:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;phy/sx1216/phy_src/phy.c: 809:             set_timer0base(&txTimeOut, 1000);
  3078  001D50  0E55               	movlw	low _txTimeOut
  3079  001D52  6E02               	movwf	set_timer0base@timer^0,c
  3080  001D54  0E00               	movlw	high _txTimeOut
  3081  001D56  6E03               	movwf	(set_timer0base@timer+1)^0,c
  3082  001D58  0E03               	movlw	3
  3083  001D5A  6E05               	movwf	(set_timer0base@tval+1)^0,c
  3084  001D5C  0EE8               	movlw	232
  3085  001D5E  6E04               	movwf	set_timer0base@tval^0,c
  3086  001D60  EC63  F027         	call	_set_timer0base	;wreg free
  3087  001D64                     
  3088                           ;phy/sx1216/phy_src/phy.c: 810:             radio_state_var = WAIT_FOR_TX;
  3089  001D64  0E07               	movlw	7
  3090  001D66  6E49               	movwf	_radio_state_var^0,c
  3091                           
  3092                           ;phy/sx1216/phy_src/phy.c: 811:             break;
  3093  001D68  EF16  F00F         	goto	l1718
  3094  001D6C                     l7972:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;phy/sx1216/phy_src/phy.c: 813:             if((!get_timer0base(&txTimeOut)) || ((SX1276
      +                          Read(0x12) & 0x08))){
  3098  001D6C  0E55               	movlw	low _txTimeOut
  3099  001D6E  6E02               	movwf	get_timer0base@timer^0,c
  3100  001D70  0E00               	movlw	high _txTimeOut
  3101  001D72  6E03               	movwf	(get_timer0base@timer+1)^0,c
  3102  001D74  EC9D  F026         	call	_get_timer0base	;wreg free
  3103  001D78  5002               	movf	?_get_timer0base^0,w,c
  3104  001D7A  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3105  001D7C  B4D8               	btfsc	status,2,c
  3106  001D7E  EFC3  F00E         	goto	u5901
  3107  001D82  EFC5  F00E         	goto	u5900
  3108  001D86                     u5901:
  3109  001D86  EFD1  F00E         	goto	l7976
  3110  001D8A                     u5900:
  3111  001D8A  0E12               	movlw	18
  3112  001D8C  ECE5  F027         	call	_SX1276Read
  3113  001D90  0100               	movlb	0	; () banked
  3114  001D92  6FFC               	movwf	??_radio_engine& (0+255),b
  3115  001D94  A7FC               	btfss	??_radio_engine& (0+255),3,b
  3116  001D96  EFCF  F00E         	goto	u5911
  3117  001D9A  EFD1  F00E         	goto	u5910
  3118  001D9E                     u5911:
  3119  001D9E  EF16  F00F         	goto	l1718
  3120  001DA2                     u5910:
  3121  001DA2                     l7976:
  3122                           
  3123                           ;phy/sx1216/phy_src/phy.c: 814:                 radio_state_var = START_RX;
  3124  001DA2  0E01               	movlw	1
  3125  001DA4  6E49               	movwf	_radio_state_var^0,c
  3126  001DA6                     
  3127                           ;phy/sx1216/phy_src/phy.c: 815:                 if(get_timer0base(&txTimeOut)){
  3128  001DA6  0E55               	movlw	low _txTimeOut
  3129  001DA8  6E02               	movwf	get_timer0base@timer^0,c
  3130  001DAA  0E00               	movlw	high _txTimeOut
  3131  001DAC  6E03               	movwf	(get_timer0base@timer+1)^0,c
  3132  001DAE  EC9D  F026         	call	_get_timer0base	;wreg free
  3133  001DB2  5002               	movf	?_get_timer0base^0,w,c
  3134  001DB4  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3135  001DB6  B4D8               	btfsc	status,2,c
  3136  001DB8  EFE0  F00E         	goto	u5921
  3137  001DBC  EFE2  F00E         	goto	u5920
  3138  001DC0                     u5921:
  3139  001DC0  EFE7  F00E         	goto	l7982
  3140  001DC4                     u5920:
  3141  001DC4                     
  3142                           ;phy/sx1216/phy_src/phy.c: 816:                     PHY_DataConf(PHY_STATUS_SUCCESS);
  3143  001DC4  0E00               	movlw	0
  3144  001DC6  ECB8  F025         	call	_PHY_DataConf
  3145                           
  3146                           ;phy/sx1216/phy_src/phy.c: 817:                 }
  3147  001DCA  EF16  F00F         	goto	l1718
  3148  001DCE                     l7982:
  3149                           
  3150                           ;phy/sx1216/phy_src/phy.c: 819:                     PHY_DataConf(PHY_STATUS_NO_ACK);
  3151  001DCE  0E02               	movlw	2
  3152  001DD0  ECB8  F025         	call	_PHY_DataConf
  3153  001DD4  EF16  F00F         	goto	l1718
  3154  001DD8                     l7986:
  3155  001DD8  5049               	movf	_radio_state_var^0,w,c
  3156  001DDA  0100               	movlb	0	; () banked
  3157  001DDC  6FFC               	movwf	??_radio_engine& (0+255),b
  3158  001DDE  6BFD               	clrf	(??_radio_engine+1)& (0+255),b
  3159                           
  3160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3161                           ; Switch size 1, requested type "simple"
  3162                           ; Number of cases is 1, Range of values is 0 to 0
  3163                           ; switch strategies available:
  3164                           ; Name         Instructions Cycles
  3165                           ; simple_byte            4     3 (average)
  3166                           ;	Chosen strategy is simple_byte
  3167  001DE0  51FD               	movf	(??_radio_engine+1)& (0+255),w,b
  3168  001DE2  0A00               	xorlw	0	; case 0
  3169  001DE4  B4D8               	btfsc	status,2,c
  3170  001DE6  EFF7  F00E         	goto	l8172
  3171  001DEA  EF58  F00E         	goto	l7940
  3172  001DEE                     l8172:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ; Switch size 1, requested type "simple"
  3176                           ; Number of cases is 7, Range of values is 0 to 7
  3177                           ; switch strategies available:
  3178                           ; Name         Instructions Cycles
  3179                           ; simple_byte           22    12 (average)
  3180                           ;	Chosen strategy is simple_byte
  3181  001DEE  51FC               	movf	??_radio_engine& (0+255),w,b
  3182  001DF0  0A00               	xorlw	0	; case 0
  3183  001DF2  B4D8               	btfsc	status,2,c
  3184  001DF4  EF48  F00E         	goto	l7932
  3185  001DF8  0A01               	xorlw	1	; case 1
  3186  001DFA  B4D8               	btfsc	status,2,c
  3187  001DFC  EF50  F00E         	goto	l7938
  3188  001E00  0A03               	xorlw	3	; case 2
  3189  001E02  B4D8               	btfsc	status,2,c
  3190  001E04  EF63  F00E         	goto	l1701
  3191  001E08  0A01               	xorlw	1	; case 3
  3192  001E0A  B4D8               	btfsc	status,2,c
  3193  001E0C  EF6E  F00E         	goto	l7948
  3194  001E10  0A07               	xorlw	7	; case 4
  3195  001E12  B4D8               	btfsc	status,2,c
  3196  001E14  EF74  F00E         	goto	l7952
  3197  001E18  0A02               	xorlw	2	; case 6
  3198  001E1A  B4D8               	btfsc	status,2,c
  3199  001E1C  EFA8  F00E         	goto	l7968
  3200  001E20  0A01               	xorlw	1	; case 7
  3201  001E22  B4D8               	btfsc	status,2,c
  3202  001E24  EFB6  F00E         	goto	l7972
  3203  001E28  EF58  F00E         	goto	l7940
  3204  001E2C                     l1718:
  3205  001E2C  0012               	return		;funcret
  3206  001E2E                     __end_of_radio_engine:
  3207                           	opt callstack 0
  3208                           
  3209 ;; *************** function _cad *****************
  3210 ;; Defined at:
  3211 ;;		line 556 in file "phy/sx1216/phy_src/phy.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  RSSI            2   17[COMRAM] short 
  3216 ;;  temp            1   19[COMRAM] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      unsigned char 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;Total ram usage:        4 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:   13
  3233 ;; This function calls:
  3234 ;;		_SX1276Read
  3235 ;;		_SX1276Write
  3236 ;;		_get_timer0base
  3237 ;;		_set_timer0base
  3238 ;;		_start_radio_cad
  3239 ;; This function is called by:
  3240 ;;		_radio_engine
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text18
  3245  002DFA                     __ptext18:
  3246                           	opt callstack 0
  3247  002DFA                     _cad:
  3248                           	opt callstack 14
  3249  002DFA                     
  3250                           ;phy/sx1216/phy_src/phy.c: 558:     uint8_t temp;;phy/sx1216/phy_src/phy.c: 560:     tem
      +                          p = SX1276Read(0x18);
  3251  002DFA  0E18               	movlw	24
  3252  002DFC  ECE5  F027         	call	_SX1276Read
  3253  002E00  6E14               	movwf	cad@temp^0,c
  3254  002E02                     
  3255                           ;phy/sx1216/phy_src/phy.c: 561:     if((temp & 0x01) | (temp & 0x02))
  3256  002E02  0060  F050  F011   	movff	cad@temp,??_cad
  3257  002E08  0E02               	movlw	2
  3258  002E0A  1611               	andwf	??_cad^0,f,c
  3259  002E0C  5014               	movf	cad@temp^0,w,c
  3260  002E0E  0B01               	andlw	1
  3261  002E10  1011               	iorwf	??_cad^0,w,c
  3262  002E12  0900               	iorlw	0
  3263  002E14  B4D8               	btfsc	status,2,c
  3264  002E16  EF0F  F017         	goto	u4911
  3265  002E1A  EF11  F017         	goto	u4910
  3266  002E1E                     u4911:
  3267  002E1E  EF14  F017         	goto	l6924
  3268  002E22                     u4910:
  3269  002E22                     l6920:
  3270                           
  3271                           ;phy/sx1216/phy_src/phy.c: 562:     {;phy/sx1216/phy_src/phy.c: 563:         return 1;
  3272  002E22  0E01               	movlw	1
  3273  002E24  EF83  F017         	goto	l1657
  3274  002E28                     l6924:
  3275                           
  3276                           ;phy/sx1216/phy_src/phy.c: 565:     start_radio_cad();
  3277  002E28  EC27  F028         	call	_start_radio_cad	;wreg free
  3278  002E2C                     
  3279                           ;phy/sx1216/phy_src/phy.c: 566:     cadDone = 0;
  3280  002E2C  0E00               	movlw	0
  3281  002E2E  6E52               	movwf	_cadDone^0,c
  3282  002E30                     
  3283                           ;phy/sx1216/phy_src/phy.c: 567:     set_timer0base(&cadTimeOut, 2000);
  3284  002E30  0E57               	movlw	low _cadTimeOut
  3285  002E32  6E02               	movwf	set_timer0base@timer^0,c
  3286  002E34  0E00               	movlw	high _cadTimeOut
  3287  002E36  6E03               	movwf	(set_timer0base@timer+1)^0,c
  3288  002E38  0E07               	movlw	7
  3289  002E3A  6E05               	movwf	(set_timer0base@tval+1)^0,c
  3290  002E3C  0ED0               	movlw	208
  3291  002E3E  6E04               	movwf	set_timer0base@tval^0,c
  3292  002E40  EC63  F027         	call	_set_timer0base	;wreg free
  3293                           
  3294                           ;phy/sx1216/phy_src/phy.c: 569:     while((cadDone == 0) && (get_timer0base(&cadTimeOut)
      +                          ))
  3295  002E44  EF5B  F017         	goto	l6958
  3296  002E48                     l6930:
  3297                           
  3298                           ;phy/sx1216/phy_src/phy.c: 570:     {;phy/sx1216/phy_src/phy.c: 571:         temp = SX12
      +                          76Read(0x12);
  3299  002E48  0E12               	movlw	18
  3300  002E4A  ECE5  F027         	call	_SX1276Read
  3301  002E4E  6E14               	movwf	cad@temp^0,c
  3302                           
  3303                           ;phy/sx1216/phy_src/phy.c: 572:         SX1276Write(0x12,temp);
  3304  002E50  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
  3305  002E56  0E12               	movlw	18
  3306  002E58  EC13  F028         	call	_SX1276Write
  3307  002E5C                     
  3308                           ;phy/sx1216/phy_src/phy.c: 573:         if(temp & 0x04)
  3309  002E5C  A414               	btfss	cad@temp^0,2,c
  3310  002E5E  EF33  F017         	goto	u4921
  3311  002E62  EF35  F017         	goto	u4920
  3312  002E66                     u4921:
  3313  002E66  EF5B  F017         	goto	l6958
  3314  002E6A                     u4920:
  3315  002E6A                     
  3316                           ;phy/sx1216/phy_src/phy.c: 574:         {;phy/sx1216/phy_src/phy.c: 575:             cad
      +                          Done = 1;
  3317  002E6A  0E01               	movlw	1
  3318  002E6C  6E52               	movwf	_cadDone^0,c
  3319  002E6E                     
  3320                           ;phy/sx1216/phy_src/phy.c: 576:             if(temp & 0x01)
  3321  002E6E  A014               	btfss	cad@temp^0,0,c
  3322  002E70  EF3C  F017         	goto	u4931
  3323  002E74  EF3E  F017         	goto	u4930
  3324  002E78                     u4931:
  3325  002E78  EF40  F017         	goto	l6944
  3326  002E7C                     u4930:
  3327  002E7C  EF11  F017         	goto	l6920
  3328  002E80                     l6944:
  3329                           
  3330                           ;phy/sx1216/phy_src/phy.c: 581:             {;phy/sx1216/phy_src/phy.c: 582:            
      +                               int16_t RSSI;;phy/sx1216/phy_src/phy.c: 583:                 RSSI = -157 + SX1276Re
      +                          ad(0x1B);
  3331  002E80  0E1B               	movlw	27
  3332  002E82  ECE5  F027         	call	_SX1276Read
  3333  002E86  6E11               	movwf	??_cad^0,c
  3334  002E88  0E63               	movlw	99
  3335  002E8A  2411               	addwf	??_cad^0,w,c
  3336  002E8C  6E12               	movwf	cad@RSSI^0,c
  3337  002E8E  6A13               	clrf	(cad@RSSI+1)^0,c
  3338  002E90  0EFF               	movlw	255
  3339  002E92  2213               	addwfc	(cad@RSSI+1)^0,f,c
  3340  002E94  AE13               	btfss	(cad@RSSI+1)^0,7,c
  3341  002E96  EF56  F017         	goto	u4941
  3342  002E9A  0EB0               	movlw	176
  3343  002E9C  5C12               	subwf	cad@RSSI^0,w,c
  3344  002E9E  0EFF               	movlw	255
  3345  002EA0  5813               	subwfb	(cad@RSSI+1)^0,w,c
  3346  002EA2  B0D8               	btfsc	status,0,c
  3347  002EA4  EF56  F017         	goto	u4941
  3348  002EA8  EF58  F017         	goto	u4940
  3349  002EAC                     u4941:
  3350  002EAC  EF11  F017         	goto	l6920
  3351  002EB0                     u4940:
  3352  002EB0                     
  3353                           ;phy/sx1216/phy_src/phy.c: 586:                 {;phy/sx1216/phy_src/phy.c: 587:        
      +                                       return 0;
  3354  002EB0  0E00               	movlw	0
  3355  002EB2  EF83  F017         	goto	l1657
  3356  002EB6                     l6958:
  3357                           
  3358                           ;phy/sx1216/phy_src/phy.c: 569:     while((cadDone == 0) && (get_timer0base(&cadTimeOut)
      +                          ))
  3359  002EB6  5052               	movf	_cadDone^0,w,c
  3360  002EB8  A4D8               	btfss	status,2,c
  3361  002EBA  EF61  F017         	goto	u4951
  3362  002EBE  EF63  F017         	goto	u4950
  3363  002EC2                     u4951:
  3364  002EC2  EF72  F017         	goto	l6962
  3365  002EC6                     u4950:
  3366  002EC6  0E57               	movlw	low _cadTimeOut
  3367  002EC8  6E02               	movwf	get_timer0base@timer^0,c
  3368  002ECA  0E00               	movlw	high _cadTimeOut
  3369  002ECC  6E03               	movwf	(get_timer0base@timer+1)^0,c
  3370  002ECE  EC9D  F026         	call	_get_timer0base	;wreg free
  3371  002ED2  5002               	movf	?_get_timer0base^0,w,c
  3372  002ED4  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3373  002ED6  A4D8               	btfss	status,2,c
  3374  002ED8  EF70  F017         	goto	u4961
  3375  002EDC  EF72  F017         	goto	u4960
  3376  002EE0                     u4961:
  3377  002EE0  EF24  F017         	goto	l6930
  3378  002EE4                     u4960:
  3379  002EE4                     l6962:
  3380                           
  3381                           ;phy/sx1216/phy_src/phy.c: 596:     if(!get_timer0base(&cadTimeOut))
  3382  002EE4  0E57               	movlw	low _cadTimeOut
  3383  002EE6  6E02               	movwf	get_timer0base@timer^0,c
  3384  002EE8  0E00               	movlw	high _cadTimeOut
  3385  002EEA  6E03               	movwf	(get_timer0base@timer+1)^0,c
  3386  002EEC  EC9D  F026         	call	_get_timer0base	;wreg free
  3387  002EF0  5002               	movf	?_get_timer0base^0,w,c
  3388  002EF2  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3389  002EF4  A4D8               	btfss	status,2,c
  3390  002EF6  EF7F  F017         	goto	u4971
  3391  002EFA  EF81  F017         	goto	u4970
  3392  002EFE                     u4971:
  3393  002EFE  EF83  F017         	goto	l1657
  3394  002F02                     u4970:
  3395  002F02  EF11  F017         	goto	l6920
  3396  002F06                     l1657:
  3397  002F06  0012               	return		;funcret
  3398  002F08                     __end_of_cad:
  3399                           	opt callstack 0
  3400                           
  3401 ;; *************** function _start_radio_cad *****************
  3402 ;; Defined at:
  3403 ;;		line 609 in file "phy/sx1216/phy_src/phy.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:   12
  3424 ;; This function calls:
  3425 ;;		_SX1276Write
  3426 ;;		_idle
  3427 ;; This function is called by:
  3428 ;;		_cad
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text19
  3433  00504E                     __ptext19:
  3434                           	opt callstack 0
  3435  00504E                     _start_radio_cad:
  3436                           	opt callstack 14
  3437  00504E                     
  3438                           ;phy/sx1216/phy_src/phy.c: 611:     idle();
  3439  00504E  EC6E  F028         	call	_idle	;wreg free
  3440                           
  3441                           ;phy/sx1216/phy_src/phy.c: 612:     SX1276Write(0x01,0x80 | 0x07);
  3442  005052  0E87               	movlw	135
  3443  005054  6E0F               	movwf	SX1276Write@data^0,c
  3444  005056  0E01               	movlw	1
  3445  005058  EC13  F028         	call	_SX1276Write
  3446  00505C  0012               	return		;funcret
  3447  00505E                     __end_of_start_radio_cad:
  3448                           	opt callstack 0
  3449                           
  3450 ;; *************** function _set_timer0base *****************
  3451 ;; Defined at:
  3452 ;;		line 32 in file "hal/hal_src/Timers.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  timer           2    1[COMRAM] PTR unsigned short 
  3455 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), 
  3456 ;;  tval            2    3[COMRAM] unsigned short 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		fsr2l, fsr2h
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;Total ram usage:        4 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    7
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_cad
  3479 ;;		_radio_engine
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text20
  3484  004EC6                     __ptext20:
  3485                           	opt callstack 0
  3486  004EC6                     _set_timer0base:
  3487                           	opt callstack 20
  3488  004EC6                     
  3489                           ;hal/hal_src/Timers.c: 33:     PIE3bits.TMR0IE = 0;;
  3490  004EC6  0139               	movlb	57	; () banked
  3491  004EC8  9F93               	bcf	147,7,b	;volatile
  3492  004ECA                     
  3493                           ; BSR set to: 57
  3494                           ;hal/hal_src/Timers.c: 34:     *timer = tval;
  3495  004ECA  0060  F00B  FFD9   	movff	set_timer0base@timer,fsr2l
  3496  004ED0  0060  F00F  FFDA   	movff	set_timer0base@timer+1,fsr2h
  3497  004ED6  0060  F013  FFDE   	movff	set_timer0base@tval,postinc2
  3498  004EDC  0060  F017  FFDD   	movff	set_timer0base@tval+1,postdec2
  3499  004EE2                     
  3500                           ; BSR set to: 57
  3501                           ;hal/hal_src/Timers.c: 35:     PIE3bits.TMR0IE = 1;;
  3502  004EE2  8F93               	bsf	147,7,b	;volatile
  3503  004EE4                     
  3504                           ; BSR set to: 57
  3505  004EE4  0012               	return		;funcret
  3506  004EE6                     __end_of_set_timer0base:
  3507                           	opt callstack 0
  3508                           
  3509 ;; *************** function _get_timer0base *****************
  3510 ;; Defined at:
  3511 ;;		line 24 in file "hal/hal_src/Timers.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  timer           2    1[COMRAM] PTR unsigned short 
  3514 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  tval            2    3[COMRAM] unsigned short 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2    1[COMRAM] unsigned short 
  3519 ;; Registers used:
  3520 ;;		fsr2l, fsr2h
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;Total ram usage:        4 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    7
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_cad
  3537 ;;		_radio_engine
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text21
  3542  004D3A                     __ptext21:
  3543                           	opt callstack 0
  3544  004D3A                     _get_timer0base:
  3545                           	opt callstack 20
  3546  004D3A                     
  3547                           ;hal/hal_src/Timers.c: 25:     uint16_t tval;;hal/hal_src/Timers.c: 26:     PIE3bits.TMR
      +                          0IE = 0;;
  3548  004D3A  0139               	movlb	57	; () banked
  3549  004D3C  9F93               	bcf	147,7,b	;volatile
  3550  004D3E                     
  3551                           ; BSR set to: 57
  3552                           ;hal/hal_src/Timers.c: 27:     tval = *timer;
  3553  004D3E  0060  F00B  FFD9   	movff	get_timer0base@timer,fsr2l
  3554  004D44  0060  F00F  FFDA   	movff	get_timer0base@timer+1,fsr2h
  3555  004D4A  006F FF78  F004    	movff	postinc2,get_timer0base@tval
  3556  004D50  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
  3557  004D56                     
  3558                           ; BSR set to: 57
  3559                           ;hal/hal_src/Timers.c: 28:     PIE3bits.TMR0IE = 1;;
  3560  004D56  8F93               	bsf	147,7,b	;volatile
  3561  004D58                     
  3562                           ; BSR set to: 57
  3563                           ;hal/hal_src/Timers.c: 29:     return tval;
  3564  004D58  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
  3565  004D5E  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
  3566  004D64                     
  3567                           ; BSR set to: 57
  3568  004D64  0012               	return		;funcret
  3569  004D66                     __end_of_get_timer0base:
  3570                           	opt callstack 0
  3571                           
  3572 ;; *************** function _PHY_DataConf *****************
  3573 ;; Defined at:
  3574 ;;		line 286 in file "nwk/nwk_src/nwkTx.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  status          1    wreg     unsigned char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  status          1    4[COMRAM] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;Total ram usage:        1 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    8
  3595 ;; This function calls:
  3596 ;;		_nwkTxConvertPhyStatus
  3597 ;; This function is called by:
  3598 ;;		_radio_engine
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text22
  3603  004B70                     __ptext22:
  3604                           	opt callstack 0
  3605  004B70                     _PHY_DataConf:
  3606                           	opt callstack 19
  3607                           
  3608                           ; BSR set to: 57
  3609                           ;incstack = 0
  3610                           ;PHY_DataConf@status stored from wreg
  3611  004B70  6E05               	movwf	PHY_DataConf@status^0,c
  3612  004B72                     
  3613                           ;nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);nwk/nwk_src/nwkTx.c: 287: {
      +                          ;nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhyStatus(stat
      +                          us);
  3614  004B72  EE20 F083          	lfsr	2,131
  3615  004B76  503D               	movf	_nwkTxPhyActiveFrame^0,w,c
  3616  004B78  26D9               	addwf	fsr2l,f,c
  3617  004B7A  503E               	movf	(_nwkTxPhyActiveFrame+1)^0,w,c
  3618  004B7C  22DA               	addwfc	fsr2h,f,c
  3619  004B7E  5005               	movf	PHY_DataConf@status^0,w,c
  3620  004B80  EC52  F023         	call	_nwkTxConvertPhyStatus
  3621  004B84  6EDF               	movwf	indf2,c
  3622  004B86                     
  3623                           ;nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
  3624  004B86  0060  F0F7  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
  3625  004B8C  0060  F0FB  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
  3626  004B92  0E15               	movlw	21
  3627  004B94  6EDF               	movwf	indf2,c
  3628  004B96                     
  3629                           ;nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
  3630  004B96  0E00               	movlw	0
  3631  004B98  6E3D               	movwf	_nwkTxPhyActiveFrame^0,c
  3632  004B9A  0E00               	movlw	0
  3633  004B9C  6E3E               	movwf	(_nwkTxPhyActiveFrame+1)^0,c
  3634  004B9E                     
  3635                           ;nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
  3636  004B9E  0100               	movlb	0	; () banked
  3637  004BA0  0786               	decf	(_nwkIb+38)& (0+255),f,b
  3638  004BA2  A0D8               	btfss	status,0,c
  3639  004BA4  0787               	decf	(_nwkIb+39)& (0+255),f,b
  3640  004BA6                     
  3641                           ; BSR set to: 0
  3642  004BA6  0012               	return		;funcret
  3643  004BA8                     __end_of_PHY_DataConf:
  3644                           	opt callstack 0
  3645                           
  3646 ;; *************** function _nwkTxConvertPhyStatus *****************
  3647 ;; Defined at:
  3648 ;;		line 266 in file "nwk/nwk_src/nwkTx.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  status          1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  status          1    3[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      unsigned char 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;Total ram usage:        3 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    7
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_PHY_DataConf
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text23
  3677  0046A4                     __ptext23:
  3678                           	opt callstack 0
  3679  0046A4                     _nwkTxConvertPhyStatus:
  3680                           	opt callstack 19
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;incstack = 0
  3684                           ;nwkTxConvertPhyStatus@status stored from wreg
  3685  0046A4  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
  3686  0046A6                     
  3687                           ;nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);nwk/nwk_
      +                          src/nwkTx.c: 267: {;nwk/nwk_src/nwkTx.c: 268:   switch (status)
  3688  0046A6  EF61  F023         	goto	l6470
  3689  0046AA                     l6452:
  3690                           
  3691                           ;nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
  3692  0046AA  0E00               	movlw	0
  3693  0046AC  EF7A  F023         	goto	l1389
  3694  0046B0                     l6456:
  3695                           
  3696                           ;nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
  3697  0046B0  0E20               	movlw	32
  3698  0046B2  EF7A  F023         	goto	l1389
  3699  0046B6                     l6460:
  3700                           
  3701                           ;nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
  3702  0046B6  0E21               	movlw	33
  3703  0046B8  EF7A  F023         	goto	l1389
  3704  0046BC                     l6464:
  3705                           
  3706                           ;nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
  3707  0046BC  0E01               	movlw	1
  3708  0046BE  EF7A  F023         	goto	l1389
  3709  0046C2                     l6470:
  3710  0046C2  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
  3711  0046C4  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
  3712  0046C6  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
  3713                           
  3714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3715                           ; Switch size 1, requested type "simple"
  3716                           ; Number of cases is 1, Range of values is 0 to 0
  3717                           ; switch strategies available:
  3718                           ; Name         Instructions Cycles
  3719                           ; simple_byte            4     3 (average)
  3720                           ;	Chosen strategy is simple_byte
  3721  0046C8  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
  3722  0046CA  0A00               	xorlw	0	; case 0
  3723  0046CC  B4D8               	btfsc	status,2,c
  3724  0046CE  EF6B  F023         	goto	l8174
  3725  0046D2  EF5E  F023         	goto	l6464
  3726  0046D6                     l8174:
  3727                           
  3728                           ; Switch size 1, requested type "simple"
  3729                           ; Number of cases is 3, Range of values is 0 to 2
  3730                           ; switch strategies available:
  3731                           ; Name         Instructions Cycles
  3732                           ; simple_byte           10     6 (average)
  3733                           ;	Chosen strategy is simple_byte
  3734  0046D6  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
  3735  0046D8  0A00               	xorlw	0	; case 0
  3736  0046DA  B4D8               	btfsc	status,2,c
  3737  0046DC  EF55  F023         	goto	l6452
  3738  0046E0  0A01               	xorlw	1	; case 1
  3739  0046E2  B4D8               	btfsc	status,2,c
  3740  0046E4  EF58  F023         	goto	l6456
  3741  0046E8  0A03               	xorlw	3	; case 2
  3742  0046EA  B4D8               	btfsc	status,2,c
  3743  0046EC  EF5B  F023         	goto	l6460
  3744  0046F0  EF5E  F023         	goto	l6464
  3745  0046F4                     l1389:
  3746  0046F4  0012               	return		;funcret
  3747  0046F6                     __end_of_nwkTxConvertPhyStatus:
  3748                           	opt callstack 0
  3749                           
  3750 ;; *************** function _DIO0_Receive_ISR *****************
  3751 ;; Defined at:
  3752 ;;		line 662 in file "phy/sx1216/phy_src/phy.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  ind             5   27[COMRAM] struct PHY_DataInd_t
  3757 ;;  packetLength    1   25[COMRAM] unsigned char 
  3758 ;;  irqFlags        1   26[COMRAM] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;Total ram usage:        7 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:   13
  3775 ;; This function calls:
  3776 ;;		_PHY_DataInd
  3777 ;;		_SX1276Read
  3778 ;;		_SX1276ReadBuffer
  3779 ;;		_SX1276Write
  3780 ;;		_receive
  3781 ;; This function is called by:
  3782 ;;		_radio_engine
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text24
  3787  003B56                     __ptext24:
  3788                           	opt callstack 0
  3789  003B56                     _DIO0_Receive_ISR:
  3790                           	opt callstack 14
  3791  003B56                     
  3792                           ;phy/sx1216/phy_src/phy.c: 664:     uint8_t irqFlags = SX1276Read(0x12);
  3793  003B56  0E12               	movlw	18
  3794  003B58  ECE5  F027         	call	_SX1276Read
  3795  003B5C  6E1B               	movwf	DIO0_Receive_ISR@irqFlags^0,c
  3796                           
  3797                           ;phy/sx1216/phy_src/phy.c: 667:     SX1276Write(0x12, irqFlags);
  3798  003B5E  0060  F06C  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
  3799  003B64  0E12               	movlw	18
  3800  003B66  EC13  F028         	call	_SX1276Write
  3801                           
  3802                           ;phy/sx1216/phy_src/phy.c: 668:     SX1276Write(0x12, irqFlags);
  3803  003B6A  0060  F06C  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
  3804  003B70  0E12               	movlw	18
  3805  003B72  EC13  F028         	call	_SX1276Write
  3806  003B76                     
  3807                           ;phy/sx1216/phy_src/phy.c: 670:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40) &&
      +                           ((irqFlags & 0x80) == 0))
  3808  003B76  BA1B               	btfsc	DIO0_Receive_ISR@irqFlags^0,5,c
  3809  003B78  EFC0  F01D         	goto	u4981
  3810  003B7C  EFC2  F01D         	goto	u4980
  3811  003B80                     u4981:
  3812  003B80  EF05  F01E         	goto	l6988
  3813  003B84                     u4980:
  3814  003B84  AC1B               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
  3815  003B86  EFC7  F01D         	goto	u4991
  3816  003B8A  EFC9  F01D         	goto	u4990
  3817  003B8E                     u4991:
  3818  003B8E  EF05  F01E         	goto	l6988
  3819  003B92                     u4990:
  3820  003B92  BE1B               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
  3821  003B94  EFCE  F01D         	goto	u5001
  3822  003B98  EFD0  F01D         	goto	u5000
  3823  003B9C                     u5001:
  3824  003B9C  EF05  F01E         	goto	l6988
  3825  003BA0                     u5000:
  3826  003BA0                     
  3827                           ;phy/sx1216/phy_src/phy.c: 671:     {;phy/sx1216/phy_src/phy.c: 672:         PHY_DataInd
      +                          _t ind;;phy/sx1216/phy_src/phy.c: 673:         uint8_t packetLength;;phy/sx1216/phy_src/
      +                          phy.c: 676:         packetLength = SX1276Read(0x13);
  3828  003BA0  0E13               	movlw	19
  3829  003BA2  ECE5  F027         	call	_SX1276Read
  3830  003BA6  6E1A               	movwf	DIO0_Receive_ISR@packetLength^0,c
  3831                           
  3832                           ;phy/sx1216/phy_src/phy.c: 679:         SX1276Write(0x0D, SX1276Read(0x10));
  3833  003BA8  0E10               	movlw	16
  3834  003BAA  ECE5  F027         	call	_SX1276Read
  3835  003BAE  6E0F               	movwf	SX1276Write@data^0,c
  3836  003BB0  0E0D               	movlw	13
  3837  003BB2  EC13  F028         	call	_SX1276Write
  3838                           
  3839                           ;phy/sx1216/phy_src/phy.c: 680:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLengt
      +                          h);
  3840  003BB6  0E80               	movlw	low _phyRxBuffer
  3841  003BB8  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
  3842  003BBA  0E02               	movlw	high _phyRxBuffer
  3843  003BBC  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
  3844  003BBE  0060  F068  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
  3845  003BC4  0E00               	movlw	0
  3846  003BC6  EC08  F027         	call	_SX1276ReadBuffer
  3847                           
  3848                           ;phy/sx1216/phy_src/phy.c: 682:         SNR = SX1276Read(0x19);
  3849  003BCA  0E19               	movlw	25
  3850  003BCC  ECE5  F027         	call	_SX1276Read
  3851  003BD0  6E4D               	movwf	_SNR^0,c
  3852                           
  3853                           ;phy/sx1216/phy_src/phy.c: 683:         packetRSSI = SX1276Read(0x1A);
  3854  003BD2  0E1A               	movlw	26
  3855  003BD4  ECE5  F027         	call	_SX1276Read
  3856  003BD8  6E4E               	movwf	_packetRSSI^0,c
  3857  003BDA                     
  3858                           ;phy/sx1216/phy_src/phy.c: 684:         ind.data = phyRxBuffer;
  3859  003BDA  0E80               	movlw	low _phyRxBuffer
  3860  003BDC  6E1C               	movwf	DIO0_Receive_ISR@ind^0,c
  3861  003BDE  0E02               	movlw	high _phyRxBuffer
  3862  003BE0  6E1D               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
  3863  003BE2                     
  3864                           ;phy/sx1216/phy_src/phy.c: 685:         ind.size = packetLength;
  3865  003BE2  0060  F068  F01E   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
  3866  003BE8                     
  3867                           ;phy/sx1216/phy_src/phy.c: 686:         ind.lqi = phyRxBuffer[packetLength];
  3868  003BE8  0E80               	movlw	low _phyRxBuffer
  3869  003BEA  241A               	addwf	DIO0_Receive_ISR@packetLength^0,w,c
  3870  003BEC  6ED9               	movwf	fsr2l,c
  3871  003BEE  6ADA               	clrf	fsr2h,c
  3872  003BF0  0E02               	movlw	high _phyRxBuffer
  3873  003BF2  22DA               	addwfc	fsr2h,f,c
  3874  003BF4  50DF               	movf	indf2,w,c
  3875  003BF6  6E1F               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
  3876  003BF8                     
  3877                           ;phy/sx1216/phy_src/phy.c: 687:         ind.rssi = packetRSSI + (-157);
  3878  003BF8  504E               	movf	_packetRSSI^0,w,c
  3879  003BFA  0F63               	addlw	99
  3880  003BFC  6E20               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
  3881  003BFE                     
  3882                           ;phy/sx1216/phy_src/phy.c: 688:         PHY_DataInd(&ind);
  3883  003BFE  0E1C               	movlw	low DIO0_Receive_ISR@ind
  3884  003C00  6E13               	movwf	PHY_DataInd@ind^0,c
  3885  003C02  0E00               	movlw	high DIO0_Receive_ISR@ind
  3886  003C04  6E14               	movwf	(PHY_DataInd@ind+1)^0,c
  3887  003C06  ECAD  F010         	call	_PHY_DataInd	;wreg free
  3888  003C0A                     l6988:
  3889                           
  3890                           ;phy/sx1216/phy_src/phy.c: 691:     receive(0);
  3891  003C0A  0E00               	movlw	0
  3892  003C0C  ECA2  F023         	call	_receive
  3893  003C10  0012               	return		;funcret
  3894  003C12                     __end_of_DIO0_Receive_ISR:
  3895                           	opt callstack 0
  3896                           
  3897 ;; *************** function _PHY_DataInd *****************
  3898 ;; Defined at:
  3899 ;;		line 116 in file "nwk/nwk_src/nwkRx.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  ind             2   18[COMRAM] PTR struct PHY_DataInd_t
  3902 ;;		 -> DIO0_Receive_ISR@ind(5), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  frame           2   23[COMRAM] PTR struct NwkFrame_t
  3905 ;;		 -> nwkFrameFrames(685), NULL(0), 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;Total ram usage:        7 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    9
  3922 ;; This function calls:
  3923 ;;		_memcpy
  3924 ;;		_nwkFrameAlloc
  3925 ;; This function is called by:
  3926 ;;		_DIO0_Receive_ISR
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text25
  3931  00215A                     __ptext25:
  3932                           	opt callstack 0
  3933  00215A                     _PHY_DataInd:
  3934                           	opt callstack 17
  3935  00215A                     
  3936                           ;nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);nwk/nwk_src/nwkRx.c: 117
      +                          : {;nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;nwk/nwk_src/nwkRx.c: 120:   if (0x88 
      +                          != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
  3937  00215A  0060  F04F  FFD9   	movff	PHY_DataInd@ind,fsr2l
  3938  002160  0060  F053  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
  3939  002166  EE10 F001          	lfsr	1,1
  3940  00216A  50DE               	movf	postinc2,w,c
  3941  00216C  26E1               	addwf	fsr1l,f,c
  3942  00216E  50DD               	movf	postdec2,w,c
  3943  002170  22E2               	addwfc	fsr1h,f,c
  3944  002172  0E88               	movlw	136
  3945  002174  18E6               	xorwf	postinc1,w,c
  3946  002176  A4D8               	btfss	status,2,c
  3947  002178  EFC0  F010         	goto	u3911
  3948  00217C  EFC2  F010         	goto	u3910
  3949  002180                     u3911:
  3950  002180  EF6F  F011         	goto	l1139
  3951  002184                     u3910:
  3952  002184  0060  F04F  FFD9   	movff	PHY_DataInd@ind,fsr2l
  3953  00218A  0060  F053  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
  3954  002190  006F FF78  F015    	movff	postinc2,??_PHY_DataInd
  3955  002196  006F FF74  F016    	movff	postdec2,??_PHY_DataInd+1
  3956  00219C  0060  F057  FFD9   	movff	??_PHY_DataInd,fsr2l
  3957  0021A2  0060  F05B  FFDA   	movff	??_PHY_DataInd+1,fsr2h
  3958  0021A8  0E61               	movlw	97
  3959  0021AA  18DE               	xorwf	postinc2,w,c
  3960  0021AC  B4D8               	btfsc	status,2,c
  3961  0021AE  EFDB  F010         	goto	u3921
  3962  0021B2  EFDD  F010         	goto	u3920
  3963  0021B6                     u3921:
  3964  0021B6  EFF8  F010         	goto	l6240
  3965  0021BA                     u3920:
  3966  0021BA  0060  F04F  FFD9   	movff	PHY_DataInd@ind,fsr2l
  3967  0021C0  0060  F053  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
  3968  0021C6  006F FF78  F015    	movff	postinc2,??_PHY_DataInd
  3969  0021CC  006F FF74  F016    	movff	postdec2,??_PHY_DataInd+1
  3970  0021D2  0060  F057  FFD9   	movff	??_PHY_DataInd,fsr2l
  3971  0021D8  0060  F05B  FFDA   	movff	??_PHY_DataInd+1,fsr2h
  3972  0021DE  0E41               	movlw	65
  3973  0021E0  18DE               	xorwf	postinc2,w,c
  3974  0021E2  A4D8               	btfss	status,2,c
  3975  0021E4  EFF6  F010         	goto	u3931
  3976  0021E8  EFF8  F010         	goto	u3930
  3977  0021EC                     u3931:
  3978  0021EC  EF6F  F011         	goto	l1139
  3979  0021F0                     u3930:
  3980  0021F0                     l6240:
  3981  0021F0  EE20 F002          	lfsr	2,2
  3982  0021F4  5013               	movf	PHY_DataInd@ind^0,w,c
  3983  0021F6  26D9               	addwf	fsr2l,f,c
  3984  0021F8  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
  3985  0021FA  22DA               	addwfc	fsr2h,f,c
  3986  0021FC  0E10               	movlw	16
  3987  0021FE  60DF               	cpfslt	indf2,c
  3988  002200  EF04  F011         	goto	u3941
  3989  002204  EF06  F011         	goto	u3940
  3990  002208                     u3941:
  3991  002208  EF08  F011         	goto	l6242
  3992  00220C                     u3940:
  3993  00220C  EF6F  F011         	goto	l1139
  3994  002210                     l6242:
  3995                           
  3996                           ;nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
  3997  002210  ECBF  F01B         	call	_nwkFrameAlloc	;wreg free
  3998  002214  0060  F038  F018   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
  3999  00221A  0060  F03C  F019   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
  4000  002220  5018               	movf	PHY_DataInd@frame^0,w,c
  4001  002222  1019               	iorwf	(PHY_DataInd@frame+1)^0,w,c
  4002  002224  A4D8               	btfss	status,2,c
  4003  002226  EF17  F011         	goto	u3951
  4004  00222A  EF19  F011         	goto	u3950
  4005  00222E                     u3951:
  4006  00222E  EF1B  F011         	goto	l6246
  4007  002232                     u3950:
  4008  002232  EF6F  F011         	goto	l1139
  4009  002236                     l6246:
  4010                           
  4011                           ;nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
  4012  002236  0060  F063  FFD9   	movff	PHY_DataInd@frame,fsr2l
  4013  00223C  0060  F067  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
  4014  002242  0E20               	movlw	32
  4015  002244  6EDF               	movwf	indf2,c
  4016  002246                     
  4017                           ;nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
  4018  002246  EE20 F002          	lfsr	2,2
  4019  00224A  5013               	movf	PHY_DataInd@ind^0,w,c
  4020  00224C  26D9               	addwf	fsr2l,f,c
  4021  00224E  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
  4022  002250  22DA               	addwfc	fsr2h,f,c
  4023  002252  EE10 F001          	lfsr	1,1
  4024  002256  5018               	movf	PHY_DataInd@frame^0,w,c
  4025  002258  26E1               	addwf	fsr1l,f,c
  4026  00225A  5019               	movf	(PHY_DataInd@frame+1)^0,w,c
  4027  00225C  22E2               	addwfc	fsr1h,f,c
  4028  00225E  006F FF7F FFE7     	movff	indf2,indf1
  4029  002264                     
  4030                           ;nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
  4031  002264  EE20 F003          	lfsr	2,3
  4032  002268  5013               	movf	PHY_DataInd@ind^0,w,c
  4033  00226A  26D9               	addwf	fsr2l,f,c
  4034  00226C  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
  4035  00226E  22DA               	addwfc	fsr2h,f,c
  4036  002270  EE10 F083          	lfsr	1,131
  4037  002274  5018               	movf	PHY_DataInd@frame^0,w,c
  4038  002276  26E1               	addwf	fsr1l,f,c
  4039  002278  5019               	movf	(PHY_DataInd@frame+1)^0,w,c
  4040  00227A  22E2               	addwfc	fsr1h,f,c
  4041  00227C  006F FF7F FFE7     	movff	indf2,indf1
  4042  002282                     
  4043                           ;nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
  4044  002282  EE20 F004          	lfsr	2,4
  4045  002286  5013               	movf	PHY_DataInd@ind^0,w,c
  4046  002288  26D9               	addwf	fsr2l,f,c
  4047  00228A  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
  4048  00228C  22DA               	addwfc	fsr2h,f,c
  4049  00228E  EE10 F084          	lfsr	1,132
  4050  002292  5018               	movf	PHY_DataInd@frame^0,w,c
  4051  002294  26E1               	addwf	fsr1l,f,c
  4052  002296  5019               	movf	(PHY_DataInd@frame+1)^0,w,c
  4053  002298  22E2               	addwfc	fsr1h,f,c
  4054  00229A  006F FF7F FFE7     	movff	indf2,indf1
  4055  0022A0                     
  4056                           ;nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
  4057  0022A0  0E02               	movlw	2
  4058  0022A2  2418               	addwf	PHY_DataInd@frame^0,w,c
  4059  0022A4  6E02               	movwf	memcpy@d1^0,c
  4060  0022A6  0E00               	movlw	0
  4061  0022A8  2019               	addwfc	(PHY_DataInd@frame+1)^0,w,c
  4062  0022AA  6E03               	movwf	(memcpy@d1+1)^0,c
  4063  0022AC  0060  F04F  FFD9   	movff	PHY_DataInd@ind,fsr2l
  4064  0022B2  0060  F053  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
  4065  0022B8  006F FF78  F004    	movff	postinc2,memcpy@s1
  4066  0022BE  006F FF74  F005    	movff	postdec2,memcpy@s1+1
  4067  0022C4  EE20 F002          	lfsr	2,2
  4068  0022C8  5013               	movf	PHY_DataInd@ind^0,w,c
  4069  0022CA  26D9               	addwf	fsr2l,f,c
  4070  0022CC  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
  4071  0022CE  22DA               	addwfc	fsr2h,f,c
  4072  0022D0  50DF               	movf	indf2,w,c
  4073  0022D2  6E15               	movwf	??_PHY_DataInd^0,c
  4074  0022D4  5015               	movf	??_PHY_DataInd^0,w,c
  4075  0022D6  6E06               	movwf	memcpy@n^0,c
  4076  0022D8  6A07               	clrf	(memcpy@n+1)^0,c
  4077  0022DA  ECE5  F021         	call	_memcpy	;wreg free
  4078  0022DE                     l1139:
  4079  0022DE  0012               	return		;funcret
  4080  0022E0                     __end_of_PHY_DataInd:
  4081                           	opt callstack 0
  4082                           
  4083 ;; *************** function _NWK_TaskHandler *****************
  4084 ;; Defined at:
  4085 ;;		line 196 in file "nwk/nwk_src/nwk.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:   14
  4106 ;; This function calls:
  4107 ;;		_nwkDataReqTaskHandler
  4108 ;;		_nwkRxTaskHandler
  4109 ;;		_nwkTxTaskHandler
  4110 ;; This function is called by:
  4111 ;;		_SYS_TaskHandler
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text26
  4116  00506C                     __ptext26:
  4117                           	opt callstack 0
  4118  00506C                     _NWK_TaskHandler:
  4119                           	opt callstack 15
  4120  00506C                     
  4121                           ;nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
  4122  00506C  ECF1  F01A         	call	_nwkRxTaskHandler	;wreg free
  4123  005070                     
  4124                           ;nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
  4125  005070  ECF8  F007         	call	_nwkTxTaskHandler	;wreg free
  4126  005074                     
  4127                           ;nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
  4128  005074  ECC1  F01F         	call	_nwkDataReqTaskHandler	;wreg free
  4129  005078  0012               	return		;funcret
  4130  00507A                     __end_of_NWK_TaskHandler:
  4131                           	opt callstack 0
  4132                           
  4133 ;; *************** function _nwkTxTaskHandler *****************
  4134 ;; Defined at:
  4135 ;;		line 297 in file "nwk/nwk_src/nwkTx.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
  4140 ;;		 -> nwkFrameFrames(685), NULL(0), 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;Total ram usage:        4 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:   13
  4157 ;; This function calls:
  4158 ;;		_PHY_DataReq
  4159 ;;		_SYS_TimerStart
  4160 ;;		_nwkDataReqTxConf
  4161 ;;		_nwkFrameFree
  4162 ;;		_nwkFrameNext
  4163 ;;		_nwkRouteFrameSent
  4164 ;; This function is called by:
  4165 ;;		_NWK_TaskHandler
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text27
  4170  000FF0                     __ptext27:
  4171                           	opt callstack 0
  4172  000FF0                     _nwkTxTaskHandler:
  4173                           	opt callstack 15
  4174  000FF0                     
  4175                           ;nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
  4176  000FF0  0E00               	movlw	0
  4177  000FF2  6E16               	movwf	nwkTxTaskHandler@frame^0,c
  4178  000FF4  0E00               	movlw	0
  4179  000FF6  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
  4180                           
  4181                           ;nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  4182  000FF8  EF1B  F009         	goto	l7146
  4183  000FFC                     l7100:
  4184                           
  4185                           ;nwk/nwk_src/nwkTx.c: 313:       {;nwk/nwk_src/nwkTx.c: 314:         if (frame->tx.timeo
      +                          ut > 0)
  4186  000FFC  EE20 F084          	lfsr	2,132
  4187  001000  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4188  001002  26D9               	addwf	fsr2l,f,c
  4189  001004  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
  4190  001006  22DA               	addwfc	fsr2h,f,c
  4191  001008  50DE               	movf	postinc2,w,c
  4192  00100A  10DE               	iorwf	postinc2,w,c
  4193  00100C  B4D8               	btfsc	status,2,c
  4194  00100E  EF0B  F008         	goto	u5071
  4195  001012  EF0D  F008         	goto	u5070
  4196  001016                     u5071:
  4197  001016  EF1D  F008         	goto	l7106
  4198  00101A                     u5070:
  4199  00101A                     
  4200                           ;nwk/nwk_src/nwkTx.c: 315:         {;nwk/nwk_src/nwkTx.c: 316:           frame->state = 
      +                          NWK_TX_STATE_WAIT_DELAY;
  4201  00101A  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
  4202  001020  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
  4203  001026  0E11               	movlw	17
  4204  001028  6EDF               	movwf	indf2,c
  4205  00102A                     
  4206                           ;nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
  4207  00102A  0EB7               	movlw	low _nwkTxDelayTimer
  4208  00102C  6E10               	movwf	SYS_TimerStart@timer^0,c
  4209  00102E  0E00               	movlw	high _nwkTxDelayTimer
  4210  001030  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
  4211  001032  EC25  F026         	call	_SYS_TimerStart	;wreg free
  4212                           
  4213                           ;nwk/nwk_src/nwkTx.c: 318:         }
  4214  001036  EF1B  F009         	goto	l7146
  4215  00103A                     l7106:
  4216                           
  4217                           ;nwk/nwk_src/nwkTx.c: 320:         {;nwk/nwk_src/nwkTx.c: 321:           frame->state = 
      +                          NWK_TX_STATE_SEND;
  4218  00103A  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
  4219  001040  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
  4220  001046  0E13               	movlw	19
  4221  001048  6EDF               	movwf	indf2,c
  4222  00104A  EF1B  F009         	goto	l7146
  4223  00104E                     l7108:
  4224                           
  4225                           ;nwk/nwk_src/nwkTx.c: 326:       {;nwk/nwk_src/nwkTx.c: 327:         if (((void*)0) == n
      +                          wkTxPhyActiveFrame)
  4226  00104E  503D               	movf	_nwkTxPhyActiveFrame^0,w,c
  4227  001050  103E               	iorwf	(_nwkTxPhyActiveFrame+1)^0,w,c
  4228  001052  A4D8               	btfss	status,2,c
  4229  001054  EF2E  F008         	goto	u5081
  4230  001058  EF30  F008         	goto	u5080
  4231  00105C                     u5081:
  4232  00105C  EF1B  F009         	goto	l7146
  4233  001060                     u5080:
  4234  001060                     
  4235                           ;nwk/nwk_src/nwkTx.c: 328:         {;nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyActiveF
      +                          rame = frame;
  4236  001060  0060  F058  F03D   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
  4237  001066  0060  F05C  F03E   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
  4238  00106C                     
  4239                           ;nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
  4240  00106C  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
  4241  001072  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
  4242  001078  0E14               	movlw	20
  4243  00107A  6EDF               	movwf	indf2,c
  4244  00107C                     
  4245                           ;nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
  4246  00107C  0E02               	movlw	2
  4247  00107E  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
  4248  001080  6E11               	movwf	PHY_DataReq@data^0,c
  4249  001082  0E00               	movlw	0
  4250  001084  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
  4251  001086  6E12               	movwf	(PHY_DataReq@data+1)^0,c
  4252  001088  EE20 F001          	lfsr	2,1
  4253  00108C  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4254  00108E  26D9               	addwf	fsr2l,f,c
  4255  001090  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
  4256  001092  22DA               	addwfc	fsr2h,f,c
  4257  001094  50DF               	movf	indf2,w,c
  4258  001096  6E13               	movwf	PHY_DataReq@size^0,c
  4259  001098  EC75  F022         	call	_PHY_DataReq	;wreg free
  4260  00109C                     
  4261                           ;nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
  4262  00109C  0100               	movlb	0	; () banked
  4263  00109E  4B86               	infsnz	(_nwkIb+38)& (0+255),f,b
  4264  0010A0  2B87               	incf	(_nwkIb+39)& (0+255),f,b
  4265  0010A2  EF1B  F009         	goto	l7146
  4266  0010A6                     l7118:
  4267                           
  4268                           ;nwk/nwk_src/nwkTx.c: 340:       {;nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCESS_STA
      +                          TUS == frame->tx.status)
  4269  0010A6  EE20 F083          	lfsr	2,131
  4270  0010AA  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4271  0010AC  26D9               	addwf	fsr2l,f,c
  4272  0010AE  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
  4273  0010B0  22DA               	addwfc	fsr2h,f,c
  4274  0010B2  50DF               	movf	indf2,w,c
  4275  0010B4  A4D8               	btfss	status,2,c
  4276  0010B6  EF5F  F008         	goto	u5091
  4277  0010BA  EF61  F008         	goto	u5090
  4278  0010BE                     u5091:
  4279  0010BE  EFA5  F008         	goto	l7132
  4280  0010C2                     u5090:
  4281  0010C2                     
  4282                           ;nwk/nwk_src/nwkTx.c: 342:         {;nwk/nwk_src/nwkTx.c: 343:           if (frame->head
      +                          er.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
  4283  0010C2  EE20 F00D          	lfsr	2,13
  4284  0010C6  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4285  0010C8  26D9               	addwf	fsr2l,f,c
  4286  0010CA  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
  4287  0010CC  22DA               	addwfc	fsr2h,f,c
  4288  0010CE  0100               	movlb	0	; () banked
  4289  0010D0  5160               	movf	_nwkIb& (0+255),w,b
  4290  0010D2  18DE               	xorwf	postinc2,w,c
  4291  0010D4  E107               	bnz	u5101
  4292  0010D6  5161               	movf	(_nwkIb+1)& (0+255),w,b
  4293  0010D8  18DE               	xorwf	postinc2,w,c
  4294  0010DA  A4D8               	btfss	status,2,c
  4295  0010DC  EF72  F008         	goto	u5101
  4296  0010E0  EF74  F008         	goto	u5100
  4297  0010E4                     u5101:
  4298  0010E4  EF9B  F008         	goto	l7130
  4299  0010E8                     u5100:
  4300  0010E8                     
  4301                           ; BSR set to: 0
  4302  0010E8  EE20 F00B          	lfsr	2,11
  4303  0010EC  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4304  0010EE  26D9               	addwf	fsr2l,f,c
  4305  0010F0  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
  4306  0010F2  22DA               	addwfc	fsr2h,f,c
  4307  0010F4  A0DF               	btfss	indf2,0,c
  4308  0010F6  EF7F  F008         	goto	u5111
  4309  0010FA  EF81  F008         	goto	u5110
  4310  0010FE                     u5111:
  4311  0010FE  EF9B  F008         	goto	l7130
  4312  001102                     u5110:
  4313  001102                     
  4314                           ; BSR set to: 0
  4315                           ;nwk/nwk_src/nwkTx.c: 344:           {;nwk/nwk_src/nwkTx.c: 345:             frame->stat
      +                          e = NWK_TX_STATE_WAIT_ACK;
  4316  001102  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
  4317  001108  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
  4318  00110E  0E16               	movlw	22
  4319  001110  6EDF               	movwf	indf2,c
  4320  001112                     
  4321                           ; BSR set to: 0
  4322                           ;nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
  4323  001112  EE20 F084          	lfsr	2,132
  4324  001116  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4325  001118  26D9               	addwf	fsr2l,f,c
  4326  00111A  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
  4327  00111C  22DA               	addwfc	fsr2h,f,c
  4328  00111E  0E06               	movlw	6
  4329  001120  6EDE               	movwf	postinc2,c
  4330  001122  0E00               	movlw	0
  4331  001124  6EDD               	movwf	postdec2,c
  4332  001126                     
  4333                           ; BSR set to: 0
  4334                           ;nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
  4335  001126  0EC4               	movlw	low _nwkTxAckWaitTimer
  4336  001128  6E10               	movwf	SYS_TimerStart@timer^0,c
  4337  00112A  0E00               	movlw	high _nwkTxAckWaitTimer
  4338  00112C  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
  4339  00112E  EC25  F026         	call	_SYS_TimerStart	;wreg free
  4340                           
  4341                           ;nwk/nwk_src/nwkTx.c: 348:           }
  4342  001132  EF1B  F009         	goto	l7146
  4343  001136                     l7130:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;nwk/nwk_src/nwkTx.c: 350:           {;nwk/nwk_src/nwkTx.c: 351:             frame->stat
      +                          e = NWK_TX_STATE_CONFIRM;
  4347  001136  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
  4348  00113C  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
  4349  001142  0E17               	movlw	23
  4350  001144  6EDF               	movwf	indf2,c
  4351  001146  EF1B  F009         	goto	l7146
  4352  00114A                     l7132:
  4353                           
  4354                           ;nwk/nwk_src/nwkTx.c: 355:         {;nwk/nwk_src/nwkTx.c: 356:           frame->state = 
      +                          NWK_TX_STATE_CONFIRM;
  4355  00114A  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
  4356  001150  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
  4357  001156  0E17               	movlw	23
  4358  001158  6EDF               	movwf	indf2,c
  4359  00115A  EF1B  F009         	goto	l7146
  4360  00115E                     l7134:
  4361                           
  4362                           ;nwk/nwk_src/nwkTx.c: 364:       {;nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrameSent(f
      +                          rame);
  4363  00115E  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
  4364  001164  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
  4365  00116A  ECB7  F014         	call	_nwkRouteFrameSent	;wreg free
  4366  00116E                     
  4367                           ;nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
  4368  00116E  EE20 F087          	lfsr	2,135
  4369  001172  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4370  001174  26D9               	addwf	fsr2l,f,c
  4371  001176  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
  4372  001178  22DA               	addwfc	fsr2h,f,c
  4373  00117A  50DE               	movf	postinc2,w,c
  4374  00117C  10DE               	iorwf	postinc2,w,c
  4375  00117E  A4D8               	btfss	status,2,c
  4376  001180  EFC4  F008         	goto	u5121
  4377  001184  EFC6  F008         	goto	u5120
  4378  001188                     u5121:
  4379  001188  EFD0  F008         	goto	l7140
  4380  00118C                     u5120:
  4381  00118C                     
  4382                           ;nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
  4383  00118C  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
  4384  001192  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
  4385  001198  ECB2  F027         	call	_nwkFrameFree	;wreg free
  4386  00119C  EF1B  F009         	goto	l7146
  4387  0011A0                     l7140:
  4388                           
  4389                           ;nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
  4390  0011A0  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
  4391  0011A6  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
  4392  0011AC  EE20 F087          	lfsr	2,135
  4393  0011B0  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4394  0011B2  26D9               	addwf	fsr2l,f,c
  4395  0011B4  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
  4396  0011B6  22DA               	addwfc	fsr2h,f,c
  4397  0011B8  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
  4398  0011BE  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
  4399  0011C4  D802               	call	u5138
  4400  0011C6  EFEE  F008         	goto	u5139
  4401  0011CA                     u5138:
  4402  0011CA  0005               	push	
  4403  0011CC  6EFA               	movwf	pclath,c
  4404  0011CE  5014               	movf	??_nwkTxTaskHandler^0,w,c
  4405  0011D0  6EFD               	movwf	tosl,c
  4406  0011D2  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
  4407  0011D4  6EFE               	movwf	tosh,c
  4408  0011D6  6AFF               	clrf	tosu,c
  4409  0011D8  50FA               	movf	pclath,w,c
  4410  0011DA  0012               	return		;indir
  4411  0011DC                     u5139:
  4412  0011DC  EF1B  F009         	goto	l7146
  4413  0011E0                     l7144:
  4414  0011E0  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
  4415  0011E6  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
  4416  0011EC  50DF               	movf	indf2,w,c
  4417  0011EE  6E14               	movwf	??_nwkTxTaskHandler^0,c
  4418  0011F0  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
  4419                           
  4420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4421                           ; Switch size 1, requested type "simple"
  4422                           ; Number of cases is 1, Range of values is 0 to 0
  4423                           ; switch strategies available:
  4424                           ; Name         Instructions Cycles
  4425                           ; simple_byte            4     3 (average)
  4426                           ;	Chosen strategy is simple_byte
  4427  0011F2  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
  4428  0011F4  0A00               	xorlw	0	; case 0
  4429  0011F6  B4D8               	btfsc	status,2,c
  4430  0011F8  EF00  F009         	goto	l8176
  4431  0011FC  EF1B  F009         	goto	l7146
  4432  001200                     l8176:
  4433                           
  4434                           ; Switch size 1, requested type "simple"
  4435                           ; Number of cases is 6, Range of values is 18 to 23
  4436                           ; switch strategies available:
  4437                           ; Name         Instructions Cycles
  4438                           ; simple_byte           19    10 (average)
  4439                           ;	Chosen strategy is simple_byte
  4440  001200  5014               	movf	??_nwkTxTaskHandler^0,w,c
  4441  001202  0A12               	xorlw	18	; case 18
  4442  001204  B4D8               	btfsc	status,2,c
  4443  001206  EFFE  F007         	goto	l7100
  4444  00120A  0A01               	xorlw	1	; case 19
  4445  00120C  B4D8               	btfsc	status,2,c
  4446  00120E  EF27  F008         	goto	l7108
  4447  001212  0A07               	xorlw	7	; case 20
  4448  001214  B4D8               	btfsc	status,2,c
  4449  001216  EF1B  F009         	goto	l7146
  4450  00121A  0A01               	xorlw	1	; case 21
  4451  00121C  B4D8               	btfsc	status,2,c
  4452  00121E  EF53  F008         	goto	l7118
  4453  001222  0A03               	xorlw	3	; case 22
  4454  001224  B4D8               	btfsc	status,2,c
  4455  001226  EF1B  F009         	goto	l7146
  4456  00122A  0A01               	xorlw	1	; case 23
  4457  00122C  B4D8               	btfsc	status,2,c
  4458  00122E  EFAF  F008         	goto	l7134
  4459  001232  EF1B  F009         	goto	l7146
  4460  001236                     l7146:
  4461                           
  4462                           ;nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  4463  001236  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
  4464  00123C  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
  4465  001242  EC87  F01C         	call	_nwkFrameNext	;wreg free
  4466  001246  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
  4467  00124C  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
  4468  001252  5016               	movf	nwkTxTaskHandler@frame^0,w,c
  4469  001254  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
  4470  001256  A4D8               	btfss	status,2,c
  4471  001258  EF30  F009         	goto	u5141
  4472  00125C  EF32  F009         	goto	u5140
  4473  001260                     u5141:
  4474  001260  EFF0  F008         	goto	l7144
  4475  001264                     u5140:
  4476  001264  0012               	return		;funcret
  4477  001266                     __end_of_nwkTxTaskHandler:
  4478                           	opt callstack 0
  4479                           
  4480 ;; *************** function _nwkRouteFrameSent *****************
  4481 ;; Defined at:
  4482 ;;		line 236 in file "nwk/nwk_src/nwkRoute.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
  4485 ;;		 -> nwkFrameFrames(685), NULL(0), 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
  4488 ;;		 -> nwkRouteTable(70), NULL(0), 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        6 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    8
  4505 ;; This function calls:
  4506 ;;		_NWK_RouteFindEntry
  4507 ;;		_NWK_RouteFreeEntry
  4508 ;;		_nwkRouteNormalizeRanks
  4509 ;; This function is called by:
  4510 ;;		_nwkTxTaskHandler
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text28
  4515  00296E                     __ptext28:
  4516                           	opt callstack 0
  4517  00296E                     _nwkRouteFrameSent:
  4518                           	opt callstack 19
  4519  00296E                     
  4520                           ;nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);nwk/nwk_src/nwkR
      +                          oute.c: 237: {;nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;nwk/nwk_src/
      +                          nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
  4521  00296E  EE20 F00F          	lfsr	2,15
  4522  002972  5008               	movf	nwkRouteFrameSent@frame^0,w,c
  4523  002974  26D9               	addwf	fsr2l,f,c
  4524  002976  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
  4525  002978  22DA               	addwfc	fsr2h,f,c
  4526  00297A  28DE               	incf	postinc2,w,c
  4527  00297C  E106               	bnz	u4511
  4528  00297E  28DE               	incf	postinc2,w,c
  4529  002980  A4D8               	btfss	status,2,c
  4530  002982  EFC5  F014         	goto	u4511
  4531  002986  EFC7  F014         	goto	u4510
  4532  00298A                     u4511:
  4533  00298A  EFC9  F014         	goto	l6688
  4534  00298E                     u4510:
  4535  00298E  EF4F  F015         	goto	l996
  4536  002992                     l6688:
  4537                           
  4538                           ;nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, fra
      +                          me->header.nwkFcf.multicast);
  4539  002992  EE20 F00F          	lfsr	2,15
  4540  002996  5008               	movf	nwkRouteFrameSent@frame^0,w,c
  4541  002998  26D9               	addwf	fsr2l,f,c
  4542  00299A  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
  4543  00299C  22DA               	addwfc	fsr2h,f,c
  4544  00299E  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
  4545  0029A4  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
  4546  0029AA  EE20 F00B          	lfsr	2,11
  4547  0029AE  5008               	movf	nwkRouteFrameSent@frame^0,w,c
  4548  0029B0  26D9               	addwf	fsr2l,f,c
  4549  0029B2  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
  4550  0029B4  22DA               	addwfc	fsr2h,f,c
  4551  0029B6  0E00               	movlw	0
  4552  0029B8  B6DF               	btfsc	indf2,3,c
  4553  0029BA  0E01               	movlw	1
  4554  0029BC  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
  4555  0029BE  EC5F  F020         	call	_NWK_RouteFindEntry	;wreg free
  4556  0029C2  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
  4557  0029C8  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
  4558  0029CE                     
  4559                           ;nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
  4560  0029CE  500C               	movf	nwkRouteFrameSent@entry^0,w,c
  4561  0029D0  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
  4562  0029D2  B4D8               	btfsc	status,2,c
  4563  0029D4  EFEE  F014         	goto	u4521
  4564  0029D8  EFF0  F014         	goto	u4520
  4565  0029DC                     u4521:
  4566  0029DC  EF4F  F015         	goto	l996
  4567  0029E0                     u4520:
  4568  0029E0  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
  4569  0029E6  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
  4570  0029EC  A0DF               	btfss	indf2,0,c
  4571  0029EE  EFFB  F014         	goto	u4531
  4572  0029F2  EFFD  F014         	goto	u4530
  4573  0029F6                     u4531:
  4574  0029F6  EFFF  F014         	goto	l6694
  4575  0029FA                     u4530:
  4576  0029FA  EF4F  F015         	goto	l996
  4577  0029FE                     l6694:
  4578                           
  4579                           ;nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
  4580  0029FE  EE20 F083          	lfsr	2,131
  4581  002A02  5008               	movf	nwkRouteFrameSent@frame^0,w,c
  4582  002A04  26D9               	addwf	fsr2l,f,c
  4583  002A06  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
  4584  002A08  22DA               	addwfc	fsr2h,f,c
  4585  002A0A  50DF               	movf	indf2,w,c
  4586  002A0C  A4D8               	btfss	status,2,c
  4587  002A0E  EF0B  F015         	goto	u4541
  4588  002A12  EF0D  F015         	goto	u4540
  4589  002A16                     u4541:
  4590  002A16  EF2A  F015         	goto	l6702
  4591  002A1A                     u4540:
  4592  002A1A                     
  4593                           ;nwk/nwk_src/nwkRoute.c: 249:   {;nwk/nwk_src/nwkRoute.c: 250:     entry->score = 3;
  4594  002A1A  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
  4595  002A20  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
  4596  002A26  50DF               	movf	indf2,w,c
  4597  002A28  0B0F               	andlw	-241
  4598  002A2A  0930               	iorlw	48
  4599  002A2C  6EDF               	movwf	indf2,c
  4600  002A2E                     
  4601                           ;nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
  4602  002A2E  EE20 F005          	lfsr	2,5
  4603  002A32  500C               	movf	nwkRouteFrameSent@entry^0,w,c
  4604  002A34  26D9               	addwf	fsr2l,f,c
  4605  002A36  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
  4606  002A38  22DA               	addwfc	fsr2h,f,c
  4607  002A3A  2ADF               	incf	indf2,f,c
  4608  002A3C  28DE               	incf	postinc2,w,c
  4609  002A3E  A4D8               	btfss	status,2,c
  4610  002A40  EF24  F015         	goto	u4551
  4611  002A44  EF26  F015         	goto	u4550
  4612  002A48                     u4551:
  4613  002A48  EF4F  F015         	goto	l996
  4614  002A4C                     u4550:
  4615  002A4C                     
  4616                           ;nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
  4617  002A4C  EC56  F024         	call	_nwkRouteNormalizeRanks	;wreg free
  4618  002A50  EF4F  F015         	goto	l996
  4619  002A54                     l6702:
  4620                           
  4621                           ;nwk/nwk_src/nwkRoute.c: 256:   {;nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entry->sco
      +                          re)
  4622  002A54  0E01               	movlw	1
  4623  002A56  6E0A               	movwf	??_nwkRouteFrameSent^0,c
  4624  002A58  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
  4625  002A5E  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
  4626  002A64  38DF               	swapf	indf2,w,c
  4627  002A66  0B0F               	andlw	15
  4628  002A68  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
  4629  002A6A  500A               	movf	??_nwkRouteFrameSent^0,w,c
  4630  002A6C  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
  4631  002A6E  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
  4632  002A70  50DF               	movf	indf2,w,c
  4633  002A72  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
  4634  002A74  0B0F               	andlw	-241
  4635  002A76  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
  4636  002A78  6EDF               	movwf	indf2,c
  4637  002A7A  38DF               	swapf	indf2,w,c
  4638  002A7C  0B0F               	andlw	15
  4639  002A7E  0900               	iorlw	0
  4640  002A80  A4D8               	btfss	status,2,c
  4641  002A82  EF45  F015         	goto	u4561
  4642  002A86  EF47  F015         	goto	u4560
  4643  002A8A                     u4561:
  4644  002A8A  EF4F  F015         	goto	l996
  4645  002A8E                     u4560:
  4646  002A8E                     
  4647                           ;nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
  4648  002A8E  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
  4649  002A94  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
  4650  002A9A  EC78  F024         	call	_NWK_RouteFreeEntry	;wreg free
  4651  002A9E                     l996:
  4652  002A9E  0012               	return		;funcret
  4653  002AA0                     __end_of_nwkRouteFrameSent:
  4654                           	opt callstack 0
  4655                           
  4656 ;; *************** function _nwkRouteNormalizeRanks *****************
  4657 ;; Defined at:
  4658 ;;		line 358 in file "nwk/nwk_src/nwkRoute.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  i               1    2[COMRAM] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;Total ram usage:        2 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    7
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_nwkRouteFrameSent
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text29
  4687  0048AC                     __ptext29:
  4688                           	opt callstack 0
  4689  0048AC                     _nwkRouteNormalizeRanks:
  4690                           	opt callstack 19
  4691  0048AC                     
  4692                           ;nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
  4693  0048AC  0E00               	movlw	0
  4694  0048AE  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
  4695  0048B0                     l6204:
  4696                           
  4697                           ;nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1) +
      +                           1;
  4698  0048B0  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
  4699  0048B2  0D07               	mullw	7
  4700  0048B4  0E45               	movlw	low (_nwkRouteTable+5)
  4701  0048B6  24F3               	addwf	243,w,c
  4702  0048B8  6ED9               	movwf	fsr2l,c
  4703  0048BA  0E01               	movlw	high (_nwkRouteTable+5)
  4704  0048BC  20F4               	addwfc	prodh,w,c
  4705  0048BE  6EDA               	movwf	fsr2h,c
  4706  0048C0  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
  4707  0048C2  0D07               	mullw	7
  4708  0048C4  0E45               	movlw	low (_nwkRouteTable+5)
  4709  0048C6  24F3               	addwf	243,w,c
  4710  0048C8  6EE1               	movwf	fsr1l,c
  4711  0048CA  0E01               	movlw	high (_nwkRouteTable+5)
  4712  0048CC  20F4               	addwfc	prodh,w,c
  4713  0048CE  6EE2               	movwf	fsr1h,c
  4714  0048D0  50E7               	movf	indf1,w,c
  4715  0048D2  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
  4716  0048D4  90D8               	bcf	status,0,c
  4717  0048D6  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
  4718  0048D8  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
  4719  0048DA  6EDF               	movwf	indf2,c
  4720  0048DC  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
  4721  0048DE  0E09               	movlw	9
  4722  0048E0  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
  4723  0048E2  EF75  F024         	goto	u3891
  4724  0048E6  EF77  F024         	goto	u3890
  4725  0048EA                     u3891:
  4726  0048EA  EF58  F024         	goto	l6204
  4727  0048EE                     u3890:
  4728  0048EE  0012               	return		;funcret
  4729  0048F0                     __end_of_nwkRouteNormalizeRanks:
  4730                           	opt callstack 0
  4731                           
  4732 ;; *************** function _nwkDataReqTxConf *****************
  4733 ;; Defined at:
  4734 ;;		line 168 in file "nwk/nwk_src/nwkDataReq.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
  4737 ;;		 -> nwkFrameFrames(685), NULL(0), 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
  4740 ;;		 -> nwkDataReq(19), NULL(0), 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;Total ram usage:        6 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    8
  4757 ;; This function calls:
  4758 ;;		_nwkFrameFree
  4759 ;; This function is called by:
  4760 ;;		_nwkDataReqSendFrame
  4761 ;;		_nwkTxTaskHandler
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text30
  4766  003A96                     __ptext30:
  4767                           	opt callstack 0
  4768  003A96                     _nwkDataReqTxConf:
  4769                           	opt callstack 19
  4770  003A96                     
  4771                           ;nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);nwk/nwk_
      +                          src/nwkDataReq.c: 169: {;nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *req = nwkD
      +                          ataReqQueue; req; req = req->next)
  4772  003A96  0060  F0FC  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
  4773  003A9C  0060  F100  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
  4774  003AA2  EF99  F01D         	goto	l6666
  4775  003AA6                     l6658:
  4776                           
  4777                           ;nwk/nwk_src/nwkDataReq.c: 171:   {;nwk/nwk_src/nwkDataReq.c: 172:     if (req->frame ==
      +                           frame)
  4778  003AA6  EE20 F002          	lfsr	2,2
  4779  003AAA  5008               	movf	nwkDataReqTxConf@req^0,w,c
  4780  003AAC  26D9               	addwf	fsr2l,f,c
  4781  003AAE  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
  4782  003AB0  22DA               	addwfc	fsr2h,f,c
  4783  003AB2  5004               	movf	nwkDataReqTxConf@frame^0,w,c
  4784  003AB4  18DE               	xorwf	postinc2,w,c
  4785  003AB6  E107               	bnz	u4471
  4786  003AB8  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
  4787  003ABA  18DE               	xorwf	postinc2,w,c
  4788  003ABC  A4D8               	btfss	status,2,c
  4789  003ABE  EF63  F01D         	goto	u4471
  4790  003AC2  EF65  F01D         	goto	u4470
  4791  003AC6                     u4471:
  4792  003AC6  EF8D  F01D         	goto	l6664
  4793  003ACA                     u4470:
  4794  003ACA                     
  4795                           ;nwk/nwk_src/nwkDataReq.c: 173:     {;nwk/nwk_src/nwkDataReq.c: 174:       req->status =
      +                           frame->tx.status;
  4796  003ACA  EE20 F083          	lfsr	2,131
  4797  003ACE  5004               	movf	nwkDataReqTxConf@frame^0,w,c
  4798  003AD0  26D9               	addwf	fsr2l,f,c
  4799  003AD2  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
  4800  003AD4  22DA               	addwfc	fsr2h,f,c
  4801  003AD6  EE10 F011          	lfsr	1,17
  4802  003ADA  5008               	movf	nwkDataReqTxConf@req^0,w,c
  4803  003ADC  26E1               	addwf	fsr1l,f,c
  4804  003ADE  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
  4805  003AE0  22E2               	addwfc	fsr1h,f,c
  4806  003AE2  006F FF7F FFE7     	movff	indf2,indf1
  4807                           
  4808                           ;nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
  4809  003AE8  EE20 F086          	lfsr	2,134
  4810  003AEC  5004               	movf	nwkDataReqTxConf@frame^0,w,c
  4811  003AEE  26D9               	addwf	fsr2l,f,c
  4812  003AF0  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
  4813  003AF2  22DA               	addwfc	fsr2h,f,c
  4814  003AF4  EE10 F012          	lfsr	1,18
  4815  003AF8  5008               	movf	nwkDataReqTxConf@req^0,w,c
  4816  003AFA  26E1               	addwf	fsr1l,f,c
  4817  003AFC  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
  4818  003AFE  22E2               	addwfc	fsr1h,f,c
  4819  003B00  006F FF7F FFE7     	movff	indf2,indf1
  4820  003B06                     
  4821                           ;nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
  4822  003B06  EE20 F004          	lfsr	2,4
  4823  003B0A  5008               	movf	nwkDataReqTxConf@req^0,w,c
  4824  003B0C  26D9               	addwf	fsr2l,f,c
  4825  003B0E  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
  4826  003B10  22DA               	addwfc	fsr2h,f,c
  4827  003B12  0E02               	movlw	2
  4828  003B14  6EDF               	movwf	indf2,c
  4829                           
  4830                           ;nwk/nwk_src/nwkDataReq.c: 177:       break;
  4831  003B16  EFA2  F01D         	goto	l6668
  4832  003B1A                     l6664:
  4833                           
  4834                           ;nwk/nwk_src/nwkDataReq.c: 179:   }
  4835  003B1A  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
  4836  003B20  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
  4837  003B26  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
  4838  003B2C  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
  4839  003B32                     l6666:
  4840  003B32  5008               	movf	nwkDataReqTxConf@req^0,w,c
  4841  003B34  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
  4842  003B36  A4D8               	btfss	status,2,c
  4843  003B38  EFA0  F01D         	goto	u4481
  4844  003B3C  EFA2  F01D         	goto	u4480
  4845  003B40                     u4481:
  4846  003B40  EF53  F01D         	goto	l6658
  4847  003B44                     u4480:
  4848  003B44                     l6668:
  4849                           
  4850                           ;nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
  4851  003B44  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
  4852  003B4A  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
  4853  003B50  ECB2  F027         	call	_nwkFrameFree	;wreg free
  4854  003B54  0012               	return		;funcret
  4855  003B56                     __end_of_nwkDataReqTxConf:
  4856                           	opt callstack 0
  4857                           
  4858 ;; *************** function _PHY_DataReq *****************
  4859 ;; Defined at:
  4860 ;;		line 862 in file "phy/sx1216/phy_src/phy.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  data            2   16[COMRAM] PTR unsigned char 
  4863 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  4864 ;;  size            1   18[COMRAM] unsigned char 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:        3 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:   12
  4883 ;; This function calls:
  4884 ;;		_SPI1_ExchangeByte
  4885 ;;		_SPI1_WriteBlock
  4886 ;;		_SX1276Write
  4887 ;;		_explicitHeaderMode
  4888 ;;		_idle
  4889 ;; This function is called by:
  4890 ;;		_nwkTxTaskHandler
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text31
  4895  0044EA                     __ptext31:
  4896                           	opt callstack 0
  4897  0044EA                     _PHY_DataReq:
  4898                           	opt callstack 15
  4899  0044EA                     
  4900                           ;phy/sx1216/phy_src/phy.c: 863:     idle();
  4901  0044EA  EC6E  F028         	call	_idle	;wreg free
  4902                           
  4903                           ;phy/sx1216/phy_src/phy.c: 864:     explicitHeaderMode();
  4904  0044EE  EC08  F028         	call	_explicitHeaderMode	;wreg free
  4905                           
  4906                           ;phy/sx1216/phy_src/phy.c: 866:     SX1276Write(0x0E, 0x0);
  4907  0044F2  0E00               	movlw	0
  4908  0044F4  6E0F               	movwf	SX1276Write@data^0,c
  4909  0044F6  0E0E               	movlw	14
  4910  0044F8  EC13  F028         	call	_SX1276Write
  4911                           
  4912                           ;phy/sx1216/phy_src/phy.c: 867:     SX1276Write(0x0D, 0x00);
  4913  0044FC  0E00               	movlw	0
  4914  0044FE  6E0F               	movwf	SX1276Write@data^0,c
  4915  004500  0E0D               	movlw	13
  4916  004502  EC13  F028         	call	_SX1276Write
  4917                           
  4918                           ;phy/sx1216/phy_src/phy.c: 868:     SX1276Write(0x22, size);
  4919  004506  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
  4920  00450C  0E22               	movlw	34
  4921  00450E  EC13  F028         	call	_SX1276Write
  4922  004512  9CBC               	bcf	188,6,c	;volatile
  4923  004514                     
  4924                           ;phy/sx1216/phy_src/phy.c: 871:     SPI1_ExchangeByte(0x00 | 0x80);
  4925  004514  0E80               	movlw	128
  4926  004516  EC2E  F027         	call	_SPI1_ExchangeByte
  4927  00451A                     
  4928                           ;phy/sx1216/phy_src/phy.c: 872:     SPI1_WriteBlock(data,size);
  4929  00451A  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
  4930  004520  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
  4931  004526  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
  4932  00452C  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
  4933  00452E  ECDE  F024         	call	_SPI1_WriteBlock	;wreg free
  4934  004532  8CBC               	bsf	188,6,c	;volatile
  4935  004534                     
  4936                           ;phy/sx1216/phy_src/phy.c: 874:     SX1276Write(0x01,
  4937  004534  0E83               	movlw	131
  4938  004536  6E0F               	movwf	SX1276Write@data^0,c
  4939  004538  0E01               	movlw	1
  4940  00453A  EC13  F028         	call	_SX1276Write
  4941  00453E                     
  4942                           ;phy/sx1216/phy_src/phy.c: 876:     radio_state_var = START_TX;
  4943  00453E  0E06               	movlw	6
  4944  004540  6E49               	movwf	_radio_state_var^0,c
  4945  004542  0012               	return		;funcret
  4946  004544                     __end_of_PHY_DataReq:
  4947                           	opt callstack 0
  4948                           
  4949 ;; *************** function _idle *****************
  4950 ;; Defined at:
  4951 ;;		line 116 in file "phy/sx1216/phy_src/phy.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;Total ram usage:        0 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:   11
  4972 ;; This function calls:
  4973 ;;		_SX1276Write
  4974 ;; This function is called by:
  4975 ;;		_start_radio_cad
  4976 ;;		_PHY_DataReq
  4977 ;;		_beginPacket
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text32
  4982  0050DC                     __ptext32:
  4983                           	opt callstack 0
  4984  0050DC                     _idle:
  4985                           	opt callstack 14
  4986  0050DC                     
  4987                           ;phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
  4988  0050DC  0E81               	movlw	129
  4989  0050DE  6E0F               	movwf	SX1276Write@data^0,c
  4990  0050E0  0E01               	movlw	1
  4991  0050E2  EC13  F028         	call	_SX1276Write
  4992  0050E6  0012               	return		;funcret
  4993  0050E8                     __end_of_idle:
  4994                           	opt callstack 0
  4995                           
  4996 ;; *************** function _nwkRxTaskHandler *****************
  4997 ;; Defined at:
  4998 ;;		line 483 in file "nwk/nwk_src/nwkRx.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  frame           2   56[COMRAM] PTR struct NwkFrame_t
  5003 ;;		 -> nwkFrameFrames(685), NULL(0), 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;Total ram usage:        4 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:   13
  5020 ;; This function calls:
  5021 ;;		_nwkFrameFree
  5022 ;;		_nwkFrameNext
  5023 ;;		_nwkRouteFrame
  5024 ;;		_nwkRxHandleIndication
  5025 ;;		_nwkRxHandleReceivedFrame
  5026 ;; This function is called by:
  5027 ;;		_NWK_TaskHandler
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text33
  5032  0035E2                     __ptext33:
  5033                           	opt callstack 0
  5034  0035E2                     _nwkRxTaskHandler:
  5035                           	opt callstack 15
  5036  0035E2                     
  5037                           ;nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
  5038  0035E2  0E00               	movlw	0
  5039  0035E4  6E39               	movwf	nwkRxTaskHandler@frame^0,c
  5040  0035E6  0E00               	movlw	0
  5041  0035E8  6E3A               	movwf	(nwkRxTaskHandler@frame+1)^0,c
  5042                           
  5043                           ;nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  5044  0035EA  EF42  F01B         	goto	l7092
  5045  0035EE                     l7080:
  5046                           
  5047                           ;nwk/nwk_src/nwkRx.c: 492:       {;nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleReceived
      +                          Frame(frame);
  5048  0035EE  0060  F0E4  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
  5049  0035F4  0060  F0E8  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
  5050  0035FA  ECB3  F002         	call	_nwkRxHandleReceivedFrame	;wreg free
  5051                           
  5052                           ;nwk/nwk_src/nwkRx.c: 494:       } break;
  5053  0035FE  EF42  F01B         	goto	l7092
  5054  003602                     l7082:
  5055                           
  5056                           ;nwk/nwk_src/nwkRx.c: 504:       {;nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIndicati
      +                          on(frame);
  5057  003602  0060  F0E4  F032   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
  5058  003608  0060  F0E8  F033   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
  5059  00360E  EC09  F018         	call	_nwkRxHandleIndication	;wreg free
  5060                           
  5061                           ;nwk/nwk_src/nwkRx.c: 506:       } break;
  5062  003612  EF42  F01B         	goto	l7092
  5063  003616                     l7084:
  5064                           
  5065                           ;nwk/nwk_src/nwkRx.c: 510:       {;nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame(frame
      +                          );
  5066  003616  0060  F0E4  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
  5067  00361C  0060  F0E8  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
  5068  003622  EC80  F01A         	call	_nwkRouteFrame	;wreg free
  5069                           
  5070                           ;nwk/nwk_src/nwkRx.c: 512:       } break;
  5071  003626  EF42  F01B         	goto	l7092
  5072  00362A                     l7086:
  5073                           
  5074                           ;nwk/nwk_src/nwkRx.c: 516:       {;nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(frame)
      +                          ;
  5075  00362A  0060  F0E4  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
  5076  003630  0060  F0E8  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
  5077  003636  ECB2  F027         	call	_nwkFrameFree	;wreg free
  5078                           
  5079                           ;nwk/nwk_src/nwkRx.c: 518:       } break;
  5080  00363A  EF42  F01B         	goto	l7092
  5081  00363E                     l7090:
  5082  00363E  0060  F0E7  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
  5083  003644  0060  F0EB  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
  5084  00364A  50DF               	movf	indf2,w,c
  5085  00364C  6E37               	movwf	??_nwkRxTaskHandler^0,c
  5086  00364E  6A38               	clrf	(??_nwkRxTaskHandler+1)^0,c
  5087                           
  5088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5089                           ; Switch size 1, requested type "simple"
  5090                           ; Number of cases is 1, Range of values is 0 to 0
  5091                           ; switch strategies available:
  5092                           ; Name         Instructions Cycles
  5093                           ; simple_byte            4     3 (average)
  5094                           ;	Chosen strategy is simple_byte
  5095  003650  5038               	movf	(??_nwkRxTaskHandler+1)^0,w,c
  5096  003652  0A00               	xorlw	0	; case 0
  5097  003654  B4D8               	btfsc	status,2,c
  5098  003656  EF2F  F01B         	goto	l8178
  5099  00365A  EF42  F01B         	goto	l7092
  5100  00365E                     l8178:
  5101                           
  5102                           ; Switch size 1, requested type "simple"
  5103                           ; Number of cases is 4, Range of values is 32 to 36
  5104                           ; switch strategies available:
  5105                           ; Name         Instructions Cycles
  5106                           ; simple_byte           13     7 (average)
  5107                           ;	Chosen strategy is simple_byte
  5108  00365E  5037               	movf	??_nwkRxTaskHandler^0,w,c
  5109  003660  0A20               	xorlw	32	; case 32
  5110  003662  B4D8               	btfsc	status,2,c
  5111  003664  EFF7  F01A         	goto	l7080
  5112  003668  0A02               	xorlw	2	; case 34
  5113  00366A  B4D8               	btfsc	status,2,c
  5114  00366C  EF01  F01B         	goto	l7082
  5115  003670  0A01               	xorlw	1	; case 35
  5116  003672  B4D8               	btfsc	status,2,c
  5117  003674  EF0B  F01B         	goto	l7084
  5118  003678  0A07               	xorlw	7	; case 36
  5119  00367A  B4D8               	btfsc	status,2,c
  5120  00367C  EF15  F01B         	goto	l7086
  5121  003680  EF42  F01B         	goto	l7092
  5122  003684                     l7092:
  5123                           
  5124                           ;nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  5125  003684  0060  F0E4  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
  5126  00368A  0060  F0E8  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
  5127  003690  EC87  F01C         	call	_nwkFrameNext	;wreg free
  5128  003694  0060  F008  F039   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
  5129  00369A  0060  F00C  F03A   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
  5130  0036A0  5039               	movf	nwkRxTaskHandler@frame^0,w,c
  5131  0036A2  103A               	iorwf	(nwkRxTaskHandler@frame+1)^0,w,c
  5132  0036A4  A4D8               	btfss	status,2,c
  5133  0036A6  EF57  F01B         	goto	u5061
  5134  0036AA  EF59  F01B         	goto	u5060
  5135  0036AE                     u5061:
  5136  0036AE  EF1F  F01B         	goto	l7090
  5137  0036B2                     u5060:
  5138  0036B2  0012               	return		;funcret
  5139  0036B4                     __end_of_nwkRxTaskHandler:
  5140                           	opt callstack 0
  5141                           
  5142 ;; *************** function _nwkRxHandleReceivedFrame *****************
  5143 ;; Defined at:
  5144 ;;		line 292 in file "nwk/nwk_src/nwkRx.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
  5147 ;;		 -> nwkFrameFrames(685), NULL(0), 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
  5150 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  5151 ;;  member          1   45[COMRAM] _Bool 
  5152 ;;  broadcast       1   44[COMRAM] _Bool 
  5153 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
  5154 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;Total ram usage:       10 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:   10
  5171 ;; This function calls:
  5172 ;;		_NWK_GroupIsMember
  5173 ;;		_nwkRouteFrameReceived
  5174 ;;		_nwkRxRejectDuplicate
  5175 ;;		_nwkTxBroadcastFrame
  5176 ;; This function is called by:
  5177 ;;		_nwkRxTaskHandler
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text34
  5182  000566                     __ptext34:
  5183                           	opt callstack 0
  5184  000566                     _nwkRxHandleReceivedFrame:
  5185                           	opt callstack 17
  5186  000566                     
  5187                           ;nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);nwk/n
      +                          wk_src/nwkRx.c: 293: {;nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
  5188  000566  0E02               	movlw	2
  5189  000568  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
  5190  00056A  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
  5191  00056C  0E00               	movlw	0
  5192  00056E  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
  5193  000570  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
  5194  000572                     
  5195                           ;nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
  5196  000572  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
  5197  000578  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
  5198  00057E  0E24               	movlw	36
  5199  000580  6EDF               	movwf	indf2,c
  5200  000582                     
  5201                           ;nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
  5202  000582  EE20 F009          	lfsr	2,9
  5203  000586  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5204  000588  26D9               	addwf	fsr2l,f,c
  5205  00058A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5206  00058C  22DA               	addwfc	fsr2h,f,c
  5207  00058E  A2DF               	btfss	indf2,1,c
  5208  000590  EFCC  F002         	goto	u4581
  5209  000594  EFCE  F002         	goto	u4580
  5210  000598                     u4581:
  5211  000598  EFD0  F002         	goto	l6726
  5212  00059C                     u4580:
  5213  00059C  EFF5  F004         	goto	l1179
  5214  0005A0                     l6726:
  5215                           
  5216                           ;nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackRequest)
  5217  0005A0  EE20 F009          	lfsr	2,9
  5218  0005A4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5219  0005A6  26D9               	addwf	fsr2l,f,c
  5220  0005A8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5221  0005AA  22DA               	addwfc	fsr2h,f,c
  5222  0005AC  A6DF               	btfss	indf2,3,c
  5223  0005AE  EFDB  F002         	goto	u4591
  5224  0005B2  EFDD  F002         	goto	u4590
  5225  0005B6                     u4591:
  5226  0005B6  EFEC  F002         	goto	l6732
  5227  0005BA                     u4590:
  5228  0005BA  EE20 F009          	lfsr	2,9
  5229  0005BE  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5230  0005C0  26D9               	addwf	fsr2l,f,c
  5231  0005C2  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5232  0005C4  22DA               	addwfc	fsr2h,f,c
  5233  0005C6  A0DF               	btfss	indf2,0,c
  5234  0005C8  EFE8  F002         	goto	u4601
  5235  0005CC  EFEA  F002         	goto	u4600
  5236  0005D0                     u4601:
  5237  0005D0  EFEC  F002         	goto	l6732
  5238  0005D4                     u4600:
  5239  0005D4  EFF5  F004         	goto	l1179
  5240  0005D8                     l6732:
  5241                           
  5242                           ;nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
  5243  0005D8  EE20 F003          	lfsr	2,3
  5244  0005DC  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5245  0005DE  26D9               	addwf	fsr2l,f,c
  5246  0005E0  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5247  0005E2  22DA               	addwfc	fsr2h,f,c
  5248  0005E4  28DE               	incf	postinc2,w,c
  5249  0005E6  E106               	bnz	u4611
  5250  0005E8  28DE               	incf	postinc2,w,c
  5251  0005EA  A4D8               	btfss	status,2,c
  5252  0005EC  EFFA  F002         	goto	u4611
  5253  0005F0  EFFC  F002         	goto	u4610
  5254  0005F4                     u4611:
  5255  0005F4  EF29  F003         	goto	l6742
  5256  0005F8                     u4610:
  5257  0005F8                     
  5258                           ;nwk/nwk_src/nwkRx.c: 312:   {;nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == header->n
      +                          wkDstAddr || 0xffff == header->nwkDstAddr)
  5259  0005F8  EE20 F00D          	lfsr	2,13
  5260  0005FC  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5261  0005FE  26D9               	addwf	fsr2l,f,c
  5262  000600  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5263  000602  22DA               	addwfc	fsr2h,f,c
  5264  000604  0100               	movlb	0	; () banked
  5265  000606  5160               	movf	_nwkIb& (0+255),w,b
  5266  000608  18DE               	xorwf	postinc2,w,c
  5267  00060A  E109               	bnz	u4620
  5268  00060C  5161               	movf	(_nwkIb+1)& (0+255),w,b
  5269  00060E  18DE               	xorwf	postinc2,w,c
  5270  000610  B4D8               	btfsc	status,2,c
  5271  000612  EF0D  F003         	goto	u4621
  5272  000616  EF0F  F003         	goto	u4620
  5273  00061A                     u4621:
  5274  00061A  EF1F  F003         	goto	l6738
  5275  00061E                     u4620:
  5276  00061E                     
  5277                           ; BSR set to: 0
  5278  00061E  EE20 F00D          	lfsr	2,13
  5279  000622  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5280  000624  26D9               	addwf	fsr2l,f,c
  5281  000626  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5282  000628  22DA               	addwfc	fsr2h,f,c
  5283  00062A  28DE               	incf	postinc2,w,c
  5284  00062C  E106               	bnz	u4631
  5285  00062E  28DE               	incf	postinc2,w,c
  5286  000630  A4D8               	btfss	status,2,c
  5287  000632  EF1D  F003         	goto	u4631
  5288  000636  EF1F  F003         	goto	u4630
  5289  00063A                     u4631:
  5290  00063A  EFF5  F004         	goto	l1179
  5291  00063E                     u4630:
  5292  00063E                     l6738:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;nwk/nwk_src/nwkRx.c: 314:     {;nwk/nwk_src/nwkRx.c: 320:         frame->state = NWK_RX
      +                          _STATE_INDICATE;
  5296  00063E  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
  5297  000644  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
  5298  00064A  0E22               	movlw	34
  5299  00064C  6EDF               	movwf	indf2,c
  5300  00064E  EFF5  F004         	goto	l1179
  5301  000652                     l6742:
  5302                           
  5303                           ;nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackReque
      +                          st)
  5304  000652  EE20 F00D          	lfsr	2,13
  5305  000656  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5306  000658  26D9               	addwf	fsr2l,f,c
  5307  00065A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5308  00065C  22DA               	addwfc	fsr2h,f,c
  5309  00065E  28DE               	incf	postinc2,w,c
  5310  000660  E106               	bnz	u4641
  5311  000662  28DE               	incf	postinc2,w,c
  5312  000664  A4D8               	btfss	status,2,c
  5313  000666  EF37  F003         	goto	u4641
  5314  00066A  EF39  F003         	goto	u4640
  5315  00066E                     u4641:
  5316  00066E  EF48  F003         	goto	l6748
  5317  000672                     u4640:
  5318  000672  EE20 F009          	lfsr	2,9
  5319  000676  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5320  000678  26D9               	addwf	fsr2l,f,c
  5321  00067A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5322  00067C  22DA               	addwfc	fsr2h,f,c
  5323  00067E  A0DF               	btfss	indf2,0,c
  5324  000680  EF44  F003         	goto	u4651
  5325  000684  EF46  F003         	goto	u4650
  5326  000688                     u4651:
  5327  000688  EF48  F003         	goto	l6748
  5328  00068C                     u4650:
  5329  00068C  EFF5  F004         	goto	l1179
  5330  000690                     l6748:
  5331                           
  5332                           ;nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
  5333  000690  EE20 F00B          	lfsr	2,11
  5334  000694  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5335  000696  26D9               	addwf	fsr2l,f,c
  5336  000698  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5337  00069A  22DA               	addwfc	fsr2h,f,c
  5338  00069C  0100               	movlb	0	; () banked
  5339  00069E  5160               	movf	_nwkIb& (0+255),w,b
  5340  0006A0  18DE               	xorwf	postinc2,w,c
  5341  0006A2  E107               	bnz	u4661
  5342  0006A4  5161               	movf	(_nwkIb+1)& (0+255),w,b
  5343  0006A6  18DE               	xorwf	postinc2,w,c
  5344  0006A8  A4D8               	btfss	status,2,c
  5345  0006AA  EF59  F003         	goto	u4661
  5346  0006AE  EF5B  F003         	goto	u4660
  5347  0006B2                     u4661:
  5348  0006B2  EF5D  F003         	goto	l6752
  5349  0006B6                     u4660:
  5350  0006B6  EFF5  F004         	goto	l1179
  5351  0006BA                     l6752:
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
  5355  0006BA  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
  5356  0006C0  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
  5357  0006C6  EC66  F00A         	call	_nwkRouteFrameReceived	;wreg free
  5358                           
  5359                           ;nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
  5360  0006CA  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
  5361  0006D0  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
  5362  0006D6  ECAA  F006         	call	_nwkRxRejectDuplicate	;wreg free
  5363  0006DA  0900               	iorlw	0
  5364  0006DC  B4D8               	btfsc	status,2,c
  5365  0006DE  EF73  F003         	goto	u4671
  5366  0006E2  EF75  F003         	goto	u4670
  5367  0006E6                     u4671:
  5368  0006E6  EF77  F003         	goto	l6756
  5369  0006EA                     u4670:
  5370  0006EA  EFF5  F004         	goto	l1179
  5371  0006EE                     l6756:
  5372                           
  5373                           ;nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
  5374  0006EE  EE20 F009          	lfsr	2,9
  5375  0006F2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5376  0006F4  26D9               	addwf	fsr2l,f,c
  5377  0006F6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5378  0006F8  22DA               	addwfc	fsr2h,f,c
  5379  0006FA  A6DF               	btfss	indf2,3,c
  5380  0006FC  EF82  F003         	goto	u4681
  5381  000700  EF84  F003         	goto	u4680
  5382  000704                     u4681:
  5383  000704  EF76  F004         	goto	l6790
  5384  000708                     u4680:
  5385  000708                     
  5386                           ;nwk/nwk_src/nwkRx.c: 345:   {;nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHeader_t *
      +                          mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
  5387  000708  EE20 F081          	lfsr	2,129
  5388  00070C  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
  5389  00070E  26D9               	addwf	fsr2l,f,c
  5390  000710  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
  5391  000712  22DA               	addwfc	fsr2h,f,c
  5392  000714  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
  5393  00071A  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
  5394  000720                     
  5395                           ;nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
  5396  000720  EE20 F00D          	lfsr	2,13
  5397  000724  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5398  000726  26D9               	addwf	fsr2l,f,c
  5399  000728  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5400  00072A  22DA               	addwfc	fsr2h,f,c
  5401  00072C  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
  5402  000732  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
  5403  000738  ECEB  F023         	call	_NWK_GroupIsMember	;wreg free
  5404  00073C  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
  5405  00073E                     
  5406                           ;nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
  5407  00073E  0E00               	movlw	0
  5408  000740  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
  5409  000742                     
  5410                           ;nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
  5411  000742  EE20 F005          	lfsr	2,5
  5412  000746  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5413  000748  26D9               	addwf	fsr2l,f,c
  5414  00074A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5415  00074C  22DA               	addwfc	fsr2h,f,c
  5416  00074E  28DE               	incf	postinc2,w,c
  5417  000750  E106               	bnz	u4691
  5418  000752  28DE               	incf	postinc2,w,c
  5419  000754  A4D8               	btfss	status,2,c
  5420  000756  EFAF  F003         	goto	u4691
  5421  00075A  EFB1  F003         	goto	u4690
  5422  00075E                     u4691:
  5423  00075E  EF2F  F004         	goto	l6772
  5424  000762                     u4690:
  5425  000762                     
  5426                           ;nwk/nwk_src/nwkRx.c: 351:     {;nwk/nwk_src/nwkRx.c: 352:       if (member)
  5427  000762  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
  5428  000764  B4D8               	btfsc	status,2,c
  5429  000766  EFB7  F003         	goto	u4701
  5430  00076A  EFB9  F003         	goto	u4700
  5431  00076E                     u4701:
  5432  00076E  EFF4  F003         	goto	l6770
  5433  000772                     u4700:
  5434  000772                     
  5435                           ;nwk/nwk_src/nwkRx.c: 353:       {;nwk/nwk_src/nwkRx.c: 354:         broadcast = mcHeade
      +                          r->memberRadius > 0;
  5436  000772  EE20 F001          	lfsr	2,1
  5437  000776  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
  5438  000778  26D9               	addwf	fsr2l,f,c
  5439  00077A  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
  5440  00077C  22DA               	addwfc	fsr2h,f,c
  5441  00077E  50DF               	movf	indf2,w,c
  5442  000780  0B0F               	andlw	15
  5443  000782  0900               	iorlw	0
  5444  000784  A4D8               	btfss	status,2,c
  5445  000786  EFC7  F003         	goto	u4711
  5446  00078A  EFCA  F003         	goto	u4710
  5447  00078E                     u4711:
  5448  00078E  0E01               	movlw	1
  5449  000790  EFCB  F003         	goto	u4720
  5450  000794                     u4710:
  5451  000794  0E00               	movlw	0
  5452  000796                     u4720:
  5453  000796  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
  5454                           
  5455                           ;nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
  5456  000798  0E01               	movlw	1
  5457  00079A  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
  5458  00079C  EE20 F001          	lfsr	2,1
  5459  0007A0  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
  5460  0007A2  26D9               	addwf	fsr2l,f,c
  5461  0007A4  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
  5462  0007A6  22DA               	addwfc	fsr2h,f,c
  5463  0007A8  50DF               	movf	indf2,w,c
  5464  0007AA  0B0F               	andlw	15
  5465  0007AC  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
  5466  0007AE  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
  5467  0007B0  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
  5468  0007B2  50DF               	movf	indf2,w,c
  5469  0007B4  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
  5470  0007B6  0BF0               	andlw	-16
  5471  0007B8  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
  5472  0007BA  6EDF               	movwf	indf2,c
  5473                           
  5474                           ;nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMemberRad
      +                          ius;
  5475  0007BC  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
  5476  0007C2  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
  5477  0007C8  38DF               	swapf	indf2,w,c
  5478  0007CA  0B0F               	andlw	15
  5479  0007CC  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
  5480  0007CE  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
  5481  0007D4  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
  5482  0007DA  50DF               	movf	indf2,w,c
  5483  0007DC  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
  5484  0007DE  0BF0               	andlw	-16
  5485  0007E0  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
  5486  0007E2  6EDF               	movwf	indf2,c
  5487                           
  5488                           ;nwk/nwk_src/nwkRx.c: 357:       }
  5489  0007E4  EF4A  F004         	goto	l6780
  5490  0007E8                     l6770:
  5491                           
  5492                           ;nwk/nwk_src/nwkRx.c: 359:       {;nwk/nwk_src/nwkRx.c: 360:         broadcast = mcHeade
      +                          r->nonMemberRadius > 0;
  5493  0007E8  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
  5494  0007EE  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
  5495  0007F4  50DF               	movf	indf2,w,c
  5496  0007F6  0B0F               	andlw	15
  5497  0007F8  0900               	iorlw	0
  5498  0007FA  A4D8               	btfss	status,2,c
  5499  0007FC  EF02  F004         	goto	u4731
  5500  000800  EF05  F004         	goto	u4730
  5501  000804                     u4731:
  5502  000804  0E01               	movlw	1
  5503  000806  EF06  F004         	goto	u4740
  5504  00080A                     u4730:
  5505  00080A  0E00               	movlw	0
  5506  00080C                     u4740:
  5507  00080C  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
  5508                           
  5509                           ;nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
  5510  00080E  0E01               	movlw	1
  5511  000810  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
  5512  000812  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
  5513  000818  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
  5514  00081E  50DF               	movf	indf2,w,c
  5515  000820  0B0F               	andlw	15
  5516  000822  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
  5517  000824  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
  5518  000826  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
  5519  000828  50DF               	movf	indf2,w,c
  5520  00082A  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
  5521  00082C  0BF0               	andlw	-16
  5522  00082E  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
  5523  000830  6EDF               	movwf	indf2,c
  5524                           
  5525                           ;nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius;
  5526  000832  EE20 F001          	lfsr	2,1
  5527  000836  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
  5528  000838  26D9               	addwf	fsr2l,f,c
  5529  00083A  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
  5530  00083C  22DA               	addwfc	fsr2h,f,c
  5531  00083E  38DF               	swapf	indf2,w,c
  5532  000840  0B0F               	andlw	15
  5533  000842  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
  5534  000844  EE20 F001          	lfsr	2,1
  5535  000848  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
  5536  00084A  26D9               	addwf	fsr2l,f,c
  5537  00084C  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
  5538  00084E  22DA               	addwfc	fsr2h,f,c
  5539  000850  50DF               	movf	indf2,w,c
  5540  000852  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
  5541  000854  0BF0               	andlw	-16
  5542  000856  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
  5543  000858  6EDF               	movwf	indf2,c
  5544  00085A  EF4A  F004         	goto	l6780
  5545  00085E                     l6772:
  5546                           
  5547                           ;nwk/nwk_src/nwkRx.c: 366:     {;nwk/nwk_src/nwkRx.c: 367:       if (member)
  5548  00085E  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
  5549  000860  B4D8               	btfsc	status,2,c
  5550  000862  EF35  F004         	goto	u4751
  5551  000866  EF37  F004         	goto	u4750
  5552  00086A                     u4751:
  5553  00086A  EF42  F004         	goto	l6778
  5554  00086E                     u4750:
  5555  00086E                     
  5556                           ;nwk/nwk_src/nwkRx.c: 368:       {;nwk/nwk_src/nwkRx.c: 369:         broadcast = 1;
  5557  00086E  0E01               	movlw	1
  5558  000870  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
  5559  000872                     
  5560                           ;nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
  5561  000872  EE20 F009          	lfsr	2,9
  5562  000876  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5563  000878  26D9               	addwf	fsr2l,f,c
  5564  00087A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5565  00087C  22DA               	addwfc	fsr2h,f,c
  5566  00087E  84DF               	bsf	indf2,2,c
  5567                           
  5568                           ;nwk/nwk_src/nwkRx.c: 371:       }
  5569  000880  EF4A  F004         	goto	l6780
  5570  000884                     l6778:
  5571                           
  5572                           ;nwk/nwk_src/nwkRx.c: 374:       {;nwk/nwk_src/nwkRx.c: 375:         frame->state = NWK_
      +                          RX_STATE_ROUTE;
  5573  000884  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
  5574  00088A  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
  5575  000890  0E23               	movlw	35
  5576  000892  6EDF               	movwf	indf2,c
  5577  000894                     l6780:
  5578                           
  5579                           ;nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
  5580  000894  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
  5581  000896  B4D8               	btfsc	status,2,c
  5582  000898  EF50  F004         	goto	u4761
  5583  00089C  EF52  F004         	goto	u4760
  5584  0008A0                     u4761:
  5585  0008A0  EF5A  F004         	goto	l6784
  5586  0008A4                     u4760:
  5587  0008A4                     
  5588                           ;nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
  5589  0008A4  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
  5590  0008AA  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
  5591  0008B0  ECCA  F012         	call	_nwkTxBroadcastFrame	;wreg free
  5592  0008B4                     l6784:
  5593                           
  5594                           ;nwk/nwk_src/nwkRx.c: 383:     if (member)
  5595  0008B4  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
  5596  0008B6  B4D8               	btfsc	status,2,c
  5597  0008B8  EF60  F004         	goto	u4771
  5598  0008BC  EF62  F004         	goto	u4770
  5599  0008C0                     u4771:
  5600  0008C0  EFF5  F004         	goto	l1179
  5601  0008C4                     u4770:
  5602  0008C4                     
  5603                           ;nwk/nwk_src/nwkRx.c: 384:     {;nwk/nwk_src/nwkRx.c: 385:       frame->payload += sizeo
      +                          f(NwkFrameMulticastHeader_t);
  5604  0008C4  EE20 F081          	lfsr	2,129
  5605  0008C8  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
  5606  0008CA  26D9               	addwf	fsr2l,f,c
  5607  0008CC  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
  5608  0008CE  22DA               	addwfc	fsr2h,f,c
  5609  0008D0  0E02               	movlw	2
  5610  0008D2  26DE               	addwf	postinc2,f,c
  5611  0008D4  0E00               	movlw	0
  5612  0008D6  22DD               	addwfc	postdec2,f,c
  5613  0008D8                     
  5614                           ;nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
  5615  0008D8  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
  5616  0008DE  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
  5617  0008E4  0E22               	movlw	34
  5618  0008E6  6EDF               	movwf	indf2,c
  5619  0008E8  EFF5  F004         	goto	l1179
  5620  0008EC                     l6790:
  5621                           
  5622                           ;nwk/nwk_src/nwkRx.c: 397:   {;nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header->macDs
      +                          tAddr && nwkIb.addr != header->nwkDstAddr &&
  5623  0008EC  EE20 F005          	lfsr	2,5
  5624  0008F0  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5625  0008F2  26D9               	addwf	fsr2l,f,c
  5626  0008F4  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5627  0008F6  22DA               	addwfc	fsr2h,f,c
  5628  0008F8  28DE               	incf	postinc2,w,c
  5629  0008FA  E106               	bnz	u4781
  5630  0008FC  28DE               	incf	postinc2,w,c
  5631  0008FE  A4D8               	btfss	status,2,c
  5632  000900  EF84  F004         	goto	u4781
  5633  000904  EF86  F004         	goto	u4780
  5634  000908                     u4781:
  5635  000908  EFAE  F004         	goto	l6798
  5636  00090C                     u4780:
  5637  00090C  EE20 F00D          	lfsr	2,13
  5638  000910  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5639  000912  26D9               	addwf	fsr2l,f,c
  5640  000914  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5641  000916  22DA               	addwfc	fsr2h,f,c
  5642  000918  0100               	movlb	0	; () banked
  5643  00091A  5160               	movf	_nwkIb& (0+255),w,b
  5644  00091C  18DE               	xorwf	postinc2,w,c
  5645  00091E  E109               	bnz	u4790
  5646  000920  5161               	movf	(_nwkIb+1)& (0+255),w,b
  5647  000922  18DE               	xorwf	postinc2,w,c
  5648  000924  B4D8               	btfsc	status,2,c
  5649  000926  EF97  F004         	goto	u4791
  5650  00092A  EF99  F004         	goto	u4790
  5651  00092E                     u4791:
  5652  00092E  EFAE  F004         	goto	l6798
  5653  000932                     u4790:
  5654  000932                     
  5655                           ; BSR set to: 0
  5656  000932  EE20 F009          	lfsr	2,9
  5657  000936  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5658  000938  26D9               	addwf	fsr2l,f,c
  5659  00093A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5660  00093C  22DA               	addwfc	fsr2h,f,c
  5661  00093E  B4DF               	btfsc	indf2,2,c
  5662  000940  EFA4  F004         	goto	u4801
  5663  000944  EFA6  F004         	goto	u4800
  5664  000948                     u4801:
  5665  000948  EFAE  F004         	goto	l6798
  5666  00094C                     u4800:
  5667  00094C                     
  5668                           ; BSR set to: 0
  5669                           ;nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
  5670  00094C  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
  5671  000952  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
  5672  000958  ECCA  F012         	call	_nwkTxBroadcastFrame	;wreg free
  5673  00095C                     l6798:
  5674                           
  5675                           ;nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == header-
      +                          >nwkDstAddr)
  5676  00095C  EE20 F00D          	lfsr	2,13
  5677  000960  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5678  000962  26D9               	addwf	fsr2l,f,c
  5679  000964  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5680  000966  22DA               	addwfc	fsr2h,f,c
  5681  000968  0100               	movlb	0	; () banked
  5682  00096A  5160               	movf	_nwkIb& (0+255),w,b
  5683  00096C  18DE               	xorwf	postinc2,w,c
  5684  00096E  E109               	bnz	u4810
  5685  000970  5161               	movf	(_nwkIb+1)& (0+255),w,b
  5686  000972  18DE               	xorwf	postinc2,w,c
  5687  000974  B4D8               	btfsc	status,2,c
  5688  000976  EFBF  F004         	goto	u4811
  5689  00097A  EFC1  F004         	goto	u4810
  5690  00097E                     u4811:
  5691  00097E  EFD1  F004         	goto	l6802
  5692  000982                     u4810:
  5693  000982                     
  5694                           ; BSR set to: 0
  5695  000982  EE20 F00D          	lfsr	2,13
  5696  000986  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5697  000988  26D9               	addwf	fsr2l,f,c
  5698  00098A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5699  00098C  22DA               	addwfc	fsr2h,f,c
  5700  00098E  28DE               	incf	postinc2,w,c
  5701  000990  E106               	bnz	u4821
  5702  000992  28DE               	incf	postinc2,w,c
  5703  000994  A4D8               	btfss	status,2,c
  5704  000996  EFCF  F004         	goto	u4821
  5705  00099A  EFD1  F004         	goto	u4820
  5706  00099E                     u4821:
  5707  00099E  EFDB  F004         	goto	l6804
  5708  0009A2                     u4820:
  5709  0009A2                     l6802:
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;nwk/nwk_src/nwkRx.c: 403:     {;nwk/nwk_src/nwkRx.c: 409:         frame->state = NWK_RX
      +                          _STATE_INDICATE;
  5713  0009A2  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
  5714  0009A8  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
  5715  0009AE  0E22               	movlw	34
  5716  0009B0  6EDF               	movwf	indf2,c
  5717                           
  5718                           ;nwk/nwk_src/nwkRx.c: 410:     }
  5719  0009B2  EFF5  F004         	goto	l1179
  5720  0009B6                     l6804:
  5721                           
  5722                           ; BSR set to: 0
  5723  0009B6  EE20 F005          	lfsr	2,5
  5724  0009BA  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
  5725  0009BC  26D9               	addwf	fsr2l,f,c
  5726  0009BE  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
  5727  0009C0  22DA               	addwfc	fsr2h,f,c
  5728  0009C2  5160               	movf	_nwkIb& (0+255),w,b
  5729  0009C4  18DE               	xorwf	postinc2,w,c
  5730  0009C6  E107               	bnz	u4831
  5731  0009C8  5161               	movf	(_nwkIb+1)& (0+255),w,b
  5732  0009CA  18DE               	xorwf	postinc2,w,c
  5733  0009CC  A4D8               	btfss	status,2,c
  5734  0009CE  EFEB  F004         	goto	u4831
  5735  0009D2  EFED  F004         	goto	u4830
  5736  0009D6                     u4831:
  5737  0009D6  EFF5  F004         	goto	l1179
  5738  0009DA                     u4830:
  5739  0009DA                     
  5740                           ; BSR set to: 0
  5741                           ;nwk/nwk_src/nwkRx.c: 414:     {;nwk/nwk_src/nwkRx.c: 415:       frame->state = NWK_RX_S
      +                          TATE_ROUTE;
  5742  0009DA  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
  5743  0009E0  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
  5744  0009E6  0E23               	movlw	35
  5745  0009E8  6EDF               	movwf	indf2,c
  5746  0009EA                     l1179:
  5747  0009EA  0012               	return		;funcret
  5748  0009EC                     __end_of_nwkRxHandleReceivedFrame:
  5749                           	opt callstack 0
  5750                           
  5751 ;; *************** function _nwkTxBroadcastFrame *****************
  5752 ;; Defined at:
  5753 ;;		line 159 in file "nwk/nwk_src/nwkTx.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
  5756 ;;		 -> nwkFrameFrames(685), NULL(0), 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
  5759 ;;		 -> nwkFrameFrames(685), NULL(0), 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;Total ram usage:        5 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    9
  5776 ;; This function calls:
  5777 ;;		_memcpy
  5778 ;;		_nwkFrameAlloc
  5779 ;;		_rand
  5780 ;; This function is called by:
  5781 ;;		_nwkRxHandleReceivedFrame
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text35
  5786  002594                     __ptext35:
  5787                           	opt callstack 0
  5788  002594                     _nwkTxBroadcastFrame:
  5789                           	opt callstack 17
  5790  002594                     
  5791                           ;nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);nwk/nwk_src/nwkTx
      +                          .c: 160: {;nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;nwk/nwk_src/nwkTx.c: 163:  
      +                           if (((void*)0) == (newFrame = nwkFrameAlloc()))
  5792  002594  ECBF  F01B         	call	_nwkFrameAlloc	;wreg free
  5793  002598  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
  5794  00259E  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
  5795  0025A4  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5796  0025A6  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5797  0025A8  A4D8               	btfss	status,2,c
  5798  0025AA  EFD9  F012         	goto	u4091
  5799  0025AE  EFDB  F012         	goto	u4090
  5800  0025B2                     u4091:
  5801  0025B2  EFDD  F012         	goto	l6358
  5802  0025B6                     u4090:
  5803  0025B6  EF72  F013         	goto	l1355
  5804  0025BA                     l6358:
  5805                           
  5806                           ;nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
  5807  0025BA  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
  5808  0025C0  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
  5809  0025C6  0E12               	movlw	18
  5810  0025C8  6EDF               	movwf	indf2,c
  5811  0025CA                     
  5812                           ;nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
  5813  0025CA  EE20 F001          	lfsr	2,1
  5814  0025CE  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
  5815  0025D0  26D9               	addwf	fsr2l,f,c
  5816  0025D2  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
  5817  0025D4  22DA               	addwfc	fsr2h,f,c
  5818  0025D6  EE10 F001          	lfsr	1,1
  5819  0025DA  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5820  0025DC  26E1               	addwf	fsr1l,f,c
  5821  0025DE  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5822  0025E0  22E2               	addwfc	fsr1h,f,c
  5823  0025E2  006F FF7F FFE7     	movff	indf2,indf1
  5824  0025E8                     
  5825                           ;nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
  5826  0025E8  EE20 F083          	lfsr	2,131
  5827  0025EC  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5828  0025EE  26D9               	addwf	fsr2l,f,c
  5829  0025F0  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5830  0025F2  22DA               	addwfc	fsr2h,f,c
  5831  0025F4  0E00               	movlw	0
  5832  0025F6  6EDF               	movwf	indf2,c
  5833  0025F8                     
  5834                           ;nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
  5835  0025F8  EC74  F016         	call	_rand	;wreg free
  5836  0025FC  0E07               	movlw	7
  5837  0025FE  161A               	andwf	?_rand^0,f,c
  5838  002600  0E00               	movlw	0
  5839  002602  161B               	andwf	(?_rand+1)^0,f,c
  5840  002604  0E01               	movlw	1
  5841  002606  261A               	addwf	?_rand^0,f,c
  5842  002608  0E00               	movlw	0
  5843  00260A  221B               	addwfc	(?_rand+1)^0,f,c
  5844  00260C  EE20 F084          	lfsr	2,132
  5845  002610  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5846  002612  26D9               	addwf	fsr2l,f,c
  5847  002614  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5848  002616  22DA               	addwfc	fsr2h,f,c
  5849  002618  0060  F06B  FFDE   	movff	?_rand,postinc2
  5850  00261E  0060  F06F  FFDD   	movff	?_rand+1,postdec2
  5851  002624                     
  5852                           ;nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
  5853  002624  EE20 F087          	lfsr	2,135
  5854  002628  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5855  00262A  26D9               	addwf	fsr2l,f,c
  5856  00262C  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5857  00262E  22DA               	addwfc	fsr2h,f,c
  5858  002630  0E00               	movlw	0
  5859  002632  6EDE               	movwf	postinc2,c
  5860  002634  0E00               	movlw	0
  5861  002636  6EDD               	movwf	postdec2,c
  5862  002638                     
  5863                           ;nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
  5864  002638  0E02               	movlw	2
  5865  00263A  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
  5866  00263C  6E02               	movwf	memcpy@d1^0,c
  5867  00263E  0E00               	movlw	0
  5868  002640  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5869  002642  6E03               	movwf	(memcpy@d1+1)^0,c
  5870  002644  0E02               	movlw	2
  5871  002646  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
  5872  002648  6E04               	movwf	memcpy@s1^0,c
  5873  00264A  0E00               	movlw	0
  5874  00264C  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
  5875  00264E  6E05               	movwf	(memcpy@s1+1)^0,c
  5876  002650  EE20 F001          	lfsr	2,1
  5877  002654  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
  5878  002656  26D9               	addwf	fsr2l,f,c
  5879  002658  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
  5880  00265A  22DA               	addwfc	fsr2h,f,c
  5881  00265C  50DF               	movf	indf2,w,c
  5882  00265E  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
  5883  002660  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
  5884  002662  6E06               	movwf	memcpy@n^0,c
  5885  002664  6A07               	clrf	(memcpy@n+1)^0,c
  5886  002666  ECE5  F021         	call	_memcpy	;wreg free
  5887  00266A                     
  5888                           ;nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
  5889  00266A  EE20 F002          	lfsr	2,2
  5890  00266E  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5891  002670  26D9               	addwf	fsr2l,f,c
  5892  002672  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5893  002674  22DA               	addwfc	fsr2h,f,c
  5894  002676  0E41               	movlw	65
  5895  002678  6EDE               	movwf	postinc2,c
  5896  00267A  0E88               	movlw	136
  5897  00267C  6EDD               	movwf	postdec2,c
  5898  00267E                     
  5899                           ;nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
  5900  00267E  EE20 F007          	lfsr	2,7
  5901  002682  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5902  002684  26D9               	addwf	fsr2l,f,c
  5903  002686  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5904  002688  22DA               	addwfc	fsr2h,f,c
  5905  00268A  0EFF               	movlw	255
  5906  00268C  6EDE               	movwf	postinc2,c
  5907  00268E  0EFF               	movlw	255
  5908  002690  6EDD               	movwf	postdec2,c
  5909  002692                     
  5910                           ;nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId;
  5911  002692  EE20 F005          	lfsr	2,5
  5912  002696  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
  5913  002698  26D9               	addwf	fsr2l,f,c
  5914  00269A  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
  5915  00269C  22DA               	addwfc	fsr2h,f,c
  5916  00269E  EE10 F005          	lfsr	1,5
  5917  0026A2  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5918  0026A4  26E1               	addwf	fsr1l,f,c
  5919  0026A6  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5920  0026A8  22E2               	addwfc	fsr1h,f,c
  5921  0026AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5922  0026B0  006F FF77 FFE5     	movff	postdec2,postdec1
  5923  0026B6                     
  5924                           ;nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
  5925  0026B6  EE20 F009          	lfsr	2,9
  5926  0026BA  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5927  0026BC  26D9               	addwf	fsr2l,f,c
  5928  0026BE  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5929  0026C0  22DA               	addwfc	fsr2h,f,c
  5930  0026C2  0060  F183  FFDE   	movff	_nwkIb,postinc2
  5931  0026C8  0060  F187  FFDD   	movff	_nwkIb+1,postdec2
  5932  0026CE                     
  5933                           ;nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
  5934  0026CE  0100               	movlb	0	; () banked
  5935  0026D0  2B65               	incf	(_nwkIb+5)& (0+255),f,b
  5936  0026D2  EE20 F004          	lfsr	2,4
  5937  0026D6  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
  5938  0026D8  26D9               	addwf	fsr2l,f,c
  5939  0026DA  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
  5940  0026DC  22DA               	addwfc	fsr2h,f,c
  5941  0026DE  0060  F197  FFDF   	movff	_nwkIb+5,indf2
  5942  0026E4                     l1355:
  5943  0026E4  0012               	return		;funcret
  5944  0026E6                     __end_of_nwkTxBroadcastFrame:
  5945                           	opt callstack 0
  5946                           
  5947 ;; *************** function _nwkRxRejectDuplicate *****************
  5948 ;; Defined at:
  5949 ;;		line 200 in file "nwk/nwk_src/nwkRx.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
  5952 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  shift           1   23[COMRAM] unsigned char 
  5955 ;;  diff            1   25[COMRAM] unsigned char 
  5956 ;;  i               1   24[COMRAM] unsigned char 
  5957 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
  5958 ;;		 -> nwkRxDuplicateRejectionTable(50), 
  5959 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
  5960 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      _Bool 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;Total ram usage:       13 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    9
  5977 ;; This function calls:
  5978 ;;		_SYS_TimerStart
  5979 ;;		_nwkRouteRemove
  5980 ;; This function is called by:
  5981 ;;		_nwkRxHandleReceivedFrame
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text36
  5986  000D54                     __ptext36:
  5987                           	opt callstack 0
  5988  000D54                     _nwkRxRejectDuplicate:
  5989                           	opt callstack 17
  5990  000D54                     
  5991                           ;nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header);n
      +                          wk/nwk_src/nwkRx.c: 201: {;nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEntry_t *ent
      +                          ry;;nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((void*)0);
  5992  000D54  0E00               	movlw	0
  5993  000D56  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
  5994  000D58  0E00               	movlw	0
  5995  000D5A  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
  5996  000D5C                     
  5997                           ;nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
  5998  000D5C  0E00               	movlw	0
  5999  000D5E  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
  6000  000D60                     l6288:
  6001                           
  6002                           ;nwk/nwk_src/nwkRx.c: 206:   {;nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplicateReje
      +                          ctionTable[i];
  6003  000D60  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
  6004  000D62  0D05               	mullw	5
  6005  000D64  0E86               	movlw	low _nwkRxDuplicateRejectionTable
  6006  000D66  24F3               	addwf	243,w,c
  6007  000D68  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
  6008  000D6A  0E01               	movlw	high _nwkRxDuplicateRejectionTable
  6009  000D6C  20F4               	addwfc	prodh,w,c
  6010  000D6E  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
  6011  000D70                     
  6012                           ;nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
  6013  000D70  EE20 F004          	lfsr	2,4
  6014  000D74  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6015  000D76  26D9               	addwf	fsr2l,f,c
  6016  000D78  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6017  000D7A  22DA               	addwfc	fsr2h,f,c
  6018  000D7C  50DF               	movf	indf2,w,c
  6019  000D7E  B4D8               	btfsc	status,2,c
  6020  000D80  EFC4  F006         	goto	u3981
  6021  000D84  EFC6  F006         	goto	u3980
  6022  000D88                     u3981:
  6023  000D88  EF96  F007         	goto	l6328
  6024  000D8C                     u3980:
  6025  000D8C  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
  6026  000D92  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
  6027  000D98  EE10 F00B          	lfsr	1,11
  6028  000D9C  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
  6029  000D9E  26E1               	addwf	fsr1l,f,c
  6030  000DA0  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
  6031  000DA2  22E2               	addwfc	fsr1h,f,c
  6032  000DA4  50DE               	movf	postinc2,w,c
  6033  000DA6  18E6               	xorwf	postinc1,w,c
  6034  000DA8  E107               	bnz	u3991
  6035  000DAA  50DE               	movf	postinc2,w,c
  6036  000DAC  18E6               	xorwf	postinc1,w,c
  6037  000DAE  A4D8               	btfss	status,2,c
  6038  000DB0  EFDC  F006         	goto	u3991
  6039  000DB4  EFDE  F006         	goto	u3990
  6040  000DB8                     u3991:
  6041  000DB8  EF96  F007         	goto	l6328
  6042  000DBC                     u3990:
  6043  000DBC                     
  6044                           ;nwk/nwk_src/nwkRx.c: 210:     {;nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (int8_t)
      +                          entry->seq - header->nwkSeq;
  6045  000DBC  EE20 F00A          	lfsr	2,10
  6046  000DC0  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
  6047  000DC2  26D9               	addwf	fsr2l,f,c
  6048  000DC4  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
  6049  000DC6  22DA               	addwfc	fsr2h,f,c
  6050  000DC8  50DF               	movf	indf2,w,c
  6051  000DCA  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
  6052  000DCC  EE20 F002          	lfsr	2,2
  6053  000DD0  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6054  000DD2  26D9               	addwf	fsr2l,f,c
  6055  000DD4  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6056  000DD6  22DA               	addwfc	fsr2h,f,c
  6057  000DD8  50DF               	movf	indf2,w,c
  6058  000DDA  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
  6059  000DDC  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
  6060  000DDE  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
  6061  000DE0  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
  6062  000DE2                     
  6063                           ;nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
  6064  000DE2  0E08               	movlw	8
  6065  000DE4  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
  6066  000DE6  EFF7  F006         	goto	u4001
  6067  000DEA  EFF9  F006         	goto	u4000
  6068  000DEE                     u4001:
  6069  000DEE  EF5E  F007         	goto	l6316
  6070  000DF2                     u4000:
  6071  000DF2                     
  6072                           ;nwk/nwk_src/nwkRx.c: 214:       {;nwk/nwk_src/nwkRx.c: 215:         if (entry->mask & (
      +                          1 << diff))
  6073  000DF2  EE20 F003          	lfsr	2,3
  6074  000DF6  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6075  000DF8  26D9               	addwf	fsr2l,f,c
  6076  000DFA  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6077  000DFC  22DA               	addwfc	fsr2h,f,c
  6078  000DFE  50DF               	movf	indf2,w,c
  6079  000E00  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
  6080  000E02  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
  6081  000E08  0E01               	movlw	1
  6082  000E0A  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
  6083  000E0C  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
  6084  000E0E  EF0B  F007         	goto	u4014
  6085  000E12                     u4015:
  6086  000E12  90D8               	bcf	status,0,c
  6087  000E14  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
  6088  000E16                     u4014:
  6089  000E16  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
  6090  000E18  EF09  F007         	goto	u4015
  6091  000E1C  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
  6092  000E1E  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
  6093  000E20  0900               	iorlw	0
  6094  000E22  B4D8               	btfsc	status,2,c
  6095  000E24  EF16  F007         	goto	u4021
  6096  000E28  EF18  F007         	goto	u4020
  6097  000E2C                     u4021:
  6098  000E2C  EF46  F007         	goto	l6308
  6099  000E30                     u4020:
  6100  000E30                     
  6101                           ;nwk/nwk_src/nwkRx.c: 216:         {;nwk/nwk_src/nwkRx.c: 218:           if (nwkIb.addr 
      +                          == header->macDstAddr)
  6102  000E30  EE20 F005          	lfsr	2,5
  6103  000E34  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
  6104  000E36  26D9               	addwf	fsr2l,f,c
  6105  000E38  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
  6106  000E3A  22DA               	addwfc	fsr2h,f,c
  6107  000E3C  0100               	movlb	0	; () banked
  6108  000E3E  5160               	movf	_nwkIb& (0+255),w,b
  6109  000E40  18DE               	xorwf	postinc2,w,c
  6110  000E42  E107               	bnz	u4031
  6111  000E44  5161               	movf	(_nwkIb+1)& (0+255),w,b
  6112  000E46  18DE               	xorwf	postinc2,w,c
  6113  000E48  A4D8               	btfss	status,2,c
  6114  000E4A  EF29  F007         	goto	u4031
  6115  000E4E  EF2B  F007         	goto	u4030
  6116  000E52                     u4031:
  6117  000E52  EF43  F007         	goto	l6304
  6118  000E56                     u4030:
  6119  000E56                     
  6120                           ; BSR set to: 0
  6121                           ;nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwkFcf
      +                          .multicast);
  6122  000E56  EE20 F00D          	lfsr	2,13
  6123  000E5A  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
  6124  000E5C  26D9               	addwf	fsr2l,f,c
  6125  000E5E  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
  6126  000E60  22DA               	addwfc	fsr2h,f,c
  6127  000E62  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
  6128  000E68  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
  6129  000E6E  EE20 F009          	lfsr	2,9
  6130  000E72  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
  6131  000E74  26D9               	addwf	fsr2l,f,c
  6132  000E76  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
  6133  000E78  22DA               	addwfc	fsr2h,f,c
  6134  000E7A  0E00               	movlw	0
  6135  000E7C  B6DF               	btfsc	indf2,3,c
  6136  000E7E  0E01               	movlw	1
  6137  000E80  6E0A               	movwf	nwkRouteRemove@multicast^0,c
  6138  000E82  EC33  F024         	call	_nwkRouteRemove	;wreg free
  6139  000E86                     l6304:
  6140                           
  6141                           ;nwk/nwk_src/nwkRx.c: 221:           return 1;
  6142  000E86  0E01               	movlw	1
  6143  000E88  EFF7  F007         	goto	l1163
  6144  000E8C                     l6308:
  6145                           
  6146                           ;nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
  6147  000E8C  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
  6148  000E92  0E01               	movlw	1
  6149  000E94  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
  6150  000E96  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
  6151  000E98  EF50  F007         	goto	u4044
  6152  000E9C                     u4045:
  6153  000E9C  90D8               	bcf	status,0,c
  6154  000E9E  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
  6155  000EA0                     u4044:
  6156  000EA0  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
  6157  000EA2  EF4E  F007         	goto	u4045
  6158  000EA6  EE20 F003          	lfsr	2,3
  6159  000EAA  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6160  000EAC  26D9               	addwf	fsr2l,f,c
  6161  000EAE  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6162  000EB0  22DA               	addwfc	fsr2h,f,c
  6163  000EB2  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
  6164  000EB4  12DF               	iorwf	indf2,f,c
  6165  000EB6                     l6310:
  6166                           
  6167                           ;nwk/nwk_src/nwkRx.c: 225:         return 0;
  6168  000EB6  0E00               	movlw	0
  6169  000EB8  EFF7  F007         	goto	l1163
  6170  000EBC                     l6316:
  6171                           
  6172                           ;nwk/nwk_src/nwkRx.c: 228:       {;nwk/nwk_src/nwkRx.c: 229:         uint8_t shift = -(i
      +                          nt8_t)diff;
  6173  000EBC  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
  6174  000EBE  0800               	sublw	0
  6175  000EC0  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
  6176  000EC2                     
  6177                           ;nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
  6178  000EC2  EE20 F00A          	lfsr	2,10
  6179  000EC6  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
  6180  000EC8  26D9               	addwf	fsr2l,f,c
  6181  000ECA  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
  6182  000ECC  22DA               	addwfc	fsr2h,f,c
  6183  000ECE  EE10 F002          	lfsr	1,2
  6184  000ED2  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6185  000ED4  26E1               	addwf	fsr1l,f,c
  6186  000ED6  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6187  000ED8  22E2               	addwfc	fsr1h,f,c
  6188  000EDA  006F FF7F FFE7     	movff	indf2,indf1
  6189  000EE0                     
  6190                           ;nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
  6191  000EE0  EE20 F003          	lfsr	2,3
  6192  000EE4  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6193  000EE6  26D9               	addwf	fsr2l,f,c
  6194  000EE8  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6195  000EEA  22DA               	addwfc	fsr2h,f,c
  6196  000EEC  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
  6197  000EF2  EE10 F003          	lfsr	1,3
  6198  000EF6  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6199  000EF8  26E1               	addwf	fsr1l,f,c
  6200  000EFA  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6201  000EFC  22E2               	addwfc	fsr1h,f,c
  6202  000EFE  50E7               	movf	indf1,w,c
  6203  000F00  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
  6204  000F02  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
  6205  000F04  EF86  F007         	goto	u4054
  6206  000F08                     u4055:
  6207  000F08  90D8               	bcf	status,0,c
  6208  000F0A  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
  6209  000F0C                     u4054:
  6210  000F0C  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
  6211  000F0E  EF84  F007         	goto	u4055
  6212  000F12  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
  6213  000F14  0901               	iorlw	1
  6214  000F16  6EDF               	movwf	indf2,c
  6215  000F18                     
  6216                           ;nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
  6217  000F18  EE20 F004          	lfsr	2,4
  6218  000F1C  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6219  000F1E  26D9               	addwf	fsr2l,f,c
  6220  000F20  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6221  000F22  22DA               	addwfc	fsr2h,f,c
  6222  000F24  0E01               	movlw	1
  6223  000F26  6EDF               	movwf	indf2,c
  6224  000F28  EF5B  F007         	goto	l6310
  6225  000F2C                     l6328:
  6226                           
  6227                           ;nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
  6228  000F2C  EE20 F004          	lfsr	2,4
  6229  000F30  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
  6230  000F32  26D9               	addwf	fsr2l,f,c
  6231  000F34  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
  6232  000F36  22DA               	addwfc	fsr2h,f,c
  6233  000F38  50DF               	movf	indf2,w,c
  6234  000F3A  A4D8               	btfss	status,2,c
  6235  000F3C  EFA2  F007         	goto	u4061
  6236  000F40  EFA4  F007         	goto	u4060
  6237  000F44                     u4061:
  6238  000F44  EFAA  F007         	goto	l6332
  6239  000F48                     u4060:
  6240  000F48                     
  6241                           ;nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
  6242  000F48  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
  6243  000F4E  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
  6244  000F54                     l6332:
  6245                           
  6246                           ;nwk/nwk_src/nwkRx.c: 240:   }
  6247  000F54  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
  6248  000F56  0E09               	movlw	9
  6249  000F58  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
  6250  000F5A  EFB1  F007         	goto	u4071
  6251  000F5E  EFB3  F007         	goto	u4070
  6252  000F62                     u4071:
  6253  000F62  EFB0  F006         	goto	l6288
  6254  000F66                     u4070:
  6255  000F66                     
  6256                           ;nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
  6257  000F66  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
  6258  000F68  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
  6259  000F6A  A4D8               	btfss	status,2,c
  6260  000F6C  EFBA  F007         	goto	u4081
  6261  000F70  EFBC  F007         	goto	u4080
  6262  000F74                     u4081:
  6263  000F74  EFBE  F007         	goto	l6342
  6264  000F78                     u4080:
  6265  000F78  EF43  F007         	goto	l6304
  6266  000F7C                     l6342:
  6267                           
  6268                           ;nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
  6269  000F7C  EE20 F00B          	lfsr	2,11
  6270  000F80  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
  6271  000F82  26D9               	addwf	fsr2l,f,c
  6272  000F84  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
  6273  000F86  22DA               	addwfc	fsr2h,f,c
  6274  000F88  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
  6275  000F8E  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
  6276  000F94  006F FF7B FFE6     	movff	postinc2,postinc1
  6277  000F9A  006F FF77 FFE5     	movff	postdec2,postdec1
  6278                           
  6279                           ;nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
  6280  000FA0  EE20 F00A          	lfsr	2,10
  6281  000FA4  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
  6282  000FA6  26D9               	addwf	fsr2l,f,c
  6283  000FA8  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
  6284  000FAA  22DA               	addwfc	fsr2h,f,c
  6285  000FAC  EE10 F002          	lfsr	1,2
  6286  000FB0  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
  6287  000FB2  26E1               	addwf	fsr1l,f,c
  6288  000FB4  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
  6289  000FB6  22E2               	addwfc	fsr1h,f,c
  6290  000FB8  006F FF7F FFE7     	movff	indf2,indf1
  6291  000FBE                     
  6292                           ;nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
  6293  000FBE  EE20 F003          	lfsr	2,3
  6294  000FC2  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
  6295  000FC4  26D9               	addwf	fsr2l,f,c
  6296  000FC6  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
  6297  000FC8  22DA               	addwfc	fsr2h,f,c
  6298  000FCA  0E01               	movlw	1
  6299  000FCC  6EDF               	movwf	indf2,c
  6300  000FCE                     
  6301                           ;nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
  6302  000FCE  EE20 F004          	lfsr	2,4
  6303  000FD2  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
  6304  000FD4  26D9               	addwf	fsr2l,f,c
  6305  000FD6  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
  6306  000FD8  22DA               	addwfc	fsr2h,f,c
  6307  000FDA  0E01               	movlw	1
  6308  000FDC  6EDF               	movwf	indf2,c
  6309  000FDE                     
  6310                           ;nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
  6311  000FDE  0ED1               	movlw	low _nwkRxDuplicateRejectionTimer
  6312  000FE0  6E10               	movwf	SYS_TimerStart@timer^0,c
  6313  000FE2  0E00               	movlw	high _nwkRxDuplicateRejectionTimer
  6314  000FE4  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
  6315  000FE6  EC25  F026         	call	_SYS_TimerStart	;wreg free
  6316  000FEA  EF5B  F007         	goto	l6310
  6317  000FEE                     l1163:
  6318  000FEE  0012               	return		;funcret
  6319  000FF0                     __end_of_nwkRxRejectDuplicate:
  6320                           	opt callstack 0
  6321                           
  6322 ;; *************** function _SYS_TimerStart *****************
  6323 ;; Defined at:
  6324 ;;		line 70 in file "sys/sys_src/sysTimer.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
  6327 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      void 
  6332 ;; Registers used:
  6333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        2 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    8
  6346 ;; This function calls:
  6347 ;;		_SYS_TimerStarted
  6348 ;;		_placeTimer
  6349 ;; This function is called by:
  6350 ;;		_nwkRxDuplicateRejectionTimerHandler
  6351 ;;		_nwkRxRejectDuplicate
  6352 ;;		_nwkTxAckWaitTimerHandler
  6353 ;;		_nwkTxDelayTimerHandler
  6354 ;;		_nwkTxTaskHandler
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text37
  6359  004C4A                     __ptext37:
  6360                           	opt callstack 0
  6361  004C4A                     _SYS_TimerStart:
  6362                           	opt callstack 19
  6363  004C4A                     
  6364                           ;sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);sys/sys_src/sysTime
      +                          r.c: 71: {;sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
  6365  004C4A  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
  6366  004C50  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
  6367  004C56  EC47  F022         	call	_SYS_TimerStarted	;wreg free
  6368  004C5A  0900               	iorlw	0
  6369  004C5C  A4D8               	btfss	status,2,c
  6370  004C5E  EF33  F026         	goto	u3551
  6371  004C62  EF35  F026         	goto	u3550
  6372  004C66                     u3551:
  6373  004C66  EF3D  F026         	goto	l1897
  6374  004C6A                     u3550:
  6375  004C6A                     
  6376                           ;sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
  6377  004C6A  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
  6378  004C70  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
  6379  004C76  EC77  F00C         	call	_placeTimer	;wreg free
  6380  004C7A                     l1897:
  6381  004C7A  0012               	return		;funcret
  6382  004C7C                     __end_of_SYS_TimerStart:
  6383                           	opt callstack 0
  6384                           
  6385 ;; *************** function _placeTimer *****************
  6386 ;; Defined at:
  6387 ;;		line 146 in file "sys/sys_src/sysTimer.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
  6390 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
  6393 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  6394 ;;  timeout         4    7[COMRAM] unsigned long 
  6395 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
  6396 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      void 
  6399 ;; Registers used:
  6400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;Total ram usage:       14 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    7
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_SYS_TimerStart
  6417 ;;		_SYS_TimerTaskHandler
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text38
  6422  0018EE                     __ptext38:
  6423                           	opt callstack 0
  6424  0018EE                     _placeTimer:
  6425                           	opt callstack 21
  6426  0018EE                     
  6427                           ;sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);sys/sys_src/sys
      +                          Timer.c: 147: {;sys/sys_src/sysTimer.c: 148:   if (timers)
  6428  0018EE  503B               	movf	_timers^0,w,c
  6429  0018F0  103C               	iorwf	(_timers+1)^0,w,c
  6430  0018F2  B4D8               	btfsc	status,2,c
  6431  0018F4  EF7E  F00C         	goto	u3381
  6432  0018F8  EF80  F00C         	goto	u3380
  6433  0018FC                     u3381:
  6434  0018FC  EF3B  F00D         	goto	l5802
  6435  001900                     u3380:
  6436  001900                     
  6437                           ;sys/sys_src/sysTimer.c: 149:   {;sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *prev = (
      +                          (void*)0);
  6438  001900  0E00               	movlw	0
  6439  001902  6E0C               	movwf	placeTimer@prev^0,c
  6440  001904  0E00               	movlw	0
  6441  001906  6E0D               	movwf	(placeTimer@prev+1)^0,c
  6442  001908                     
  6443                           ;sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
  6444  001908  EE20 F006          	lfsr	2,6
  6445  00190C  5002               	movf	placeTimer@timer^0,w,c
  6446  00190E  26D9               	addwf	fsr2l,f,c
  6447  001910  5003               	movf	(placeTimer@timer+1)^0,w,c
  6448  001912  22DA               	addwfc	fsr2h,f,c
  6449  001914  006F FF78  F008    	movff	postinc2,placeTimer@timeout
  6450  00191A  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
  6451  001920  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
  6452  001926  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
  6453  00192C                     
  6454                           ;sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
  6455  00192C  0060  F0EC  F00E   	movff	_timers,placeTimer@t
  6456  001932  0060  F0F0  F00F   	movff	_timers+1,placeTimer@t+1
  6457  001938  EFE3  F00C         	goto	l5788
  6458  00193C                     l5778:
  6459                           
  6460                           ;sys/sys_src/sysTimer.c: 154:     {;sys/sys_src/sysTimer.c: 155:       if (timeout < t->
      +                          timeout)
  6461  00193C  EE20 F002          	lfsr	2,2
  6462  001940  500E               	movf	placeTimer@t^0,w,c
  6463  001942  26D9               	addwf	fsr2l,f,c
  6464  001944  500F               	movf	(placeTimer@t+1)^0,w,c
  6465  001946  22DA               	addwfc	fsr2h,f,c
  6466  001948  50DE               	movf	postinc2,w,c
  6467  00194A  5C08               	subwf	placeTimer@timeout^0,w,c
  6468  00194C  50DE               	movf	postinc2,w,c
  6469  00194E  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
  6470  001950  50DE               	movf	postinc2,w,c
  6471  001952  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
  6472  001954  50DE               	movf	postinc2,w,c
  6473  001956  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
  6474  001958  B0D8               	btfsc	status,0,c
  6475  00195A  EFB1  F00C         	goto	u3391
  6476  00195E  EFB3  F00C         	goto	u3390
  6477  001962                     u3391:
  6478  001962  EFC3  F00C         	goto	l5784
  6479  001966                     u3390:
  6480  001966                     
  6481                           ;sys/sys_src/sysTimer.c: 156:       {;sys/sys_src/sysTimer.c: 157:          t->timeout -
      +                          = timeout;
  6482  001966  EE20 F002          	lfsr	2,2
  6483  00196A  500E               	movf	placeTimer@t^0,w,c
  6484  00196C  26D9               	addwf	fsr2l,f,c
  6485  00196E  500F               	movf	(placeTimer@t+1)^0,w,c
  6486  001970  22DA               	addwfc	fsr2h,f,c
  6487  001972  5008               	movf	placeTimer@timeout^0,w,c
  6488  001974  5EDE               	subwf	postinc2,f,c
  6489  001976  5009               	movf	(placeTimer@timeout+1)^0,w,c
  6490  001978  5ADE               	subwfb	postinc2,f,c
  6491  00197A  500A               	movf	(placeTimer@timeout+2)^0,w,c
  6492  00197C  5ADE               	subwfb	postinc2,f,c
  6493  00197E  500B               	movf	(placeTimer@timeout+3)^0,w,c
  6494  001980  5ADE               	subwfb	postinc2,f,c
  6495                           
  6496                           ;sys/sys_src/sysTimer.c: 158:          break;
  6497  001982  EFEC  F00C         	goto	l5790
  6498  001986                     l5784:
  6499                           
  6500                           ;sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
  6501  001986  EE20 F002          	lfsr	2,2
  6502  00198A  500E               	movf	placeTimer@t^0,w,c
  6503  00198C  26D9               	addwf	fsr2l,f,c
  6504  00198E  500F               	movf	(placeTimer@t+1)^0,w,c
  6505  001990  22DA               	addwfc	fsr2h,f,c
  6506  001992  50DE               	movf	postinc2,w,c
  6507  001994  5E08               	subwf	placeTimer@timeout^0,f,c
  6508  001996  50DE               	movf	postinc2,w,c
  6509  001998  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
  6510  00199A  50DE               	movf	postinc2,w,c
  6511  00199C  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
  6512  00199E  50DD               	movf	postdec2,w,c
  6513  0019A0  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
  6514  0019A2                     
  6515                           ;sys/sys_src/sysTimer.c: 163:       prev = t;
  6516  0019A2  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
  6517  0019A8  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
  6518                           
  6519                           ;sys/sys_src/sysTimer.c: 164:     }
  6520  0019AE  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
  6521  0019B4  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
  6522  0019BA  006F FF78  F00E    	movff	postinc2,placeTimer@t
  6523  0019C0  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
  6524  0019C6                     l5788:
  6525  0019C6  500E               	movf	placeTimer@t^0,w,c
  6526  0019C8  100F               	iorwf	(placeTimer@t+1)^0,w,c
  6527  0019CA  A4D8               	btfss	status,2,c
  6528  0019CC  EFEA  F00C         	goto	u3401
  6529  0019D0  EFEC  F00C         	goto	u3400
  6530  0019D4                     u3401:
  6531  0019D4  EF9E  F00C         	goto	l5778
  6532  0019D8                     u3400:
  6533  0019D8                     l5790:
  6534                           
  6535                           ;sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
  6536  0019D8  EE20 F002          	lfsr	2,2
  6537  0019DC  5002               	movf	placeTimer@timer^0,w,c
  6538  0019DE  26D9               	addwf	fsr2l,f,c
  6539  0019E0  5003               	movf	(placeTimer@timer+1)^0,w,c
  6540  0019E2  22DA               	addwfc	fsr2h,f,c
  6541  0019E4  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
  6542  0019EA  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
  6543  0019F0  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
  6544  0019F6  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
  6545  0019FC                     
  6546                           ;sys/sys_src/sysTimer.c: 168:     if (prev)
  6547  0019FC  500C               	movf	placeTimer@prev^0,w,c
  6548  0019FE  100D               	iorwf	(placeTimer@prev+1)^0,w,c
  6549  001A00  B4D8               	btfsc	status,2,c
  6550  001A02  EF05  F00D         	goto	u3411
  6551  001A06  EF07  F00D         	goto	u3410
  6552  001A0A                     u3411:
  6553  001A0A  EF27  F00D         	goto	l5798
  6554  001A0E                     u3410:
  6555  001A0E                     
  6556                           ;sys/sys_src/sysTimer.c: 169:     {;sys/sys_src/sysTimer.c: 170:       timer->next = pre
      +                          v->next;
  6557  001A0E  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
  6558  001A14  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
  6559  001A1A  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
  6560  001A20  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
  6561  001A26  006F FF7B FFE6     	movff	postinc2,postinc1
  6562  001A2C  006F FF77 FFE5     	movff	postdec2,postdec1
  6563  001A32                     
  6564                           ;sys/sys_src/sysTimer.c: 171:       prev->next = timer;
  6565  001A32  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
  6566  001A38  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
  6567  001A3E  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
  6568  001A44  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
  6569                           
  6570                           ;sys/sys_src/sysTimer.c: 172:     }
  6571  001A4A  EF5F  F00D         	goto	l1937
  6572  001A4E                     l5798:
  6573                           
  6574                           ;sys/sys_src/sysTimer.c: 174:     {;sys/sys_src/sysTimer.c: 175:       timer->next = tim
      +                          ers;
  6575  001A4E  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
  6576  001A54  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
  6577  001A5A  0060  F0EF  FFDE   	movff	_timers,postinc2
  6578  001A60  0060  F0F3  FFDD   	movff	_timers+1,postdec2
  6579  001A66                     l5800:
  6580                           
  6581                           ;sys/sys_src/sysTimer.c: 176:       timers = timer;
  6582  001A66  0060  F008  F03B   	movff	placeTimer@timer,_timers
  6583  001A6C  0060  F00C  F03C   	movff	placeTimer@timer+1,_timers+1
  6584  001A72  EF5F  F00D         	goto	l1937
  6585  001A76                     l5802:
  6586                           
  6587                           ;sys/sys_src/sysTimer.c: 180:   {;sys/sys_src/sysTimer.c: 181:     timer->next = ((void*
      +                          )0);
  6588  001A76  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
  6589  001A7C  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
  6590  001A82  0E00               	movlw	0
  6591  001A84  6EDE               	movwf	postinc2,c
  6592  001A86  0E00               	movlw	0
  6593  001A88  6EDD               	movwf	postdec2,c
  6594  001A8A                     
  6595                           ;sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
  6596  001A8A  EE20 F006          	lfsr	2,6
  6597  001A8E  5002               	movf	placeTimer@timer^0,w,c
  6598  001A90  26D9               	addwf	fsr2l,f,c
  6599  001A92  5003               	movf	(placeTimer@timer+1)^0,w,c
  6600  001A94  22DA               	addwfc	fsr2h,f,c
  6601  001A96  EE10 F002          	lfsr	1,2
  6602  001A9A  5002               	movf	placeTimer@timer^0,w,c
  6603  001A9C  26E1               	addwf	fsr1l,f,c
  6604  001A9E  5003               	movf	(placeTimer@timer+1)^0,w,c
  6605  001AA0  22E2               	addwfc	fsr1h,f,c
  6606  001AA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6607  001AA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6608  001AAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6609  001AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6610  001ABA  EF33  F00D         	goto	l5800
  6611  001ABE                     l1937:
  6612  001ABE  0012               	return		;funcret
  6613  001AC0                     __end_of_placeTimer:
  6614                           	opt callstack 0
  6615                           
  6616 ;; *************** function _SYS_TimerStarted *****************
  6617 ;; Defined at:
  6618 ;;		line 102 in file "sys/sys_src/sysTimer.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
  6621 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
  6624 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      _Bool 
  6627 ;; Registers used:
  6628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;Total ram usage:        4 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    7
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_SYS_TimerStart
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text39
  6649  00448E                     __ptext39:
  6650                           	opt callstack 0
  6651  00448E                     _SYS_TimerStarted:
  6652                           	opt callstack 19
  6653  00448E                     
  6654                           ;sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);sys/sys_src/sys
      +                          Timer.c: 103: {;sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t; t = t->n
      +                          ext)
  6655  00448E  0060  F0EC  F004   	movff	_timers,SYS_TimerStarted@t
  6656  004494  0060  F0F0  F005   	movff	_timers+1,SYS_TimerStarted@t+1
  6657  00449A  EF6A  F022         	goto	l5764
  6658  00449E                     l5756:
  6659                           
  6660                           ;sys/sys_src/sysTimer.c: 105:     if (t == timer)
  6661  00449E  5002               	movf	SYS_TimerStarted@timer^0,w,c
  6662  0044A0  1804               	xorwf	SYS_TimerStarted@t^0,w,c
  6663  0044A2  E107               	bnz	u3361
  6664  0044A4  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
  6665  0044A6  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
  6666  0044A8  A4D8               	btfss	status,2,c
  6667  0044AA  EF59  F022         	goto	u3361
  6668  0044AE  EF5B  F022         	goto	u3360
  6669  0044B2                     u3361:
  6670  0044B2  EF5E  F022         	goto	l5762
  6671  0044B6                     u3360:
  6672  0044B6                     
  6673                           ;sys/sys_src/sysTimer.c: 106:       return 1;
  6674  0044B6  0E01               	movlw	1
  6675  0044B8  EF74  F022         	goto	l1913
  6676  0044BC                     l5762:
  6677  0044BC  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
  6678  0044C2  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
  6679  0044C8  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
  6680  0044CE  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
  6681  0044D4                     l5764:
  6682  0044D4  5004               	movf	SYS_TimerStarted@t^0,w,c
  6683  0044D6  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
  6684  0044D8  A4D8               	btfss	status,2,c
  6685  0044DA  EF71  F022         	goto	u3371
  6686  0044DE  EF73  F022         	goto	u3370
  6687  0044E2                     u3371:
  6688  0044E2  EF4F  F022         	goto	l5756
  6689  0044E6                     u3370:
  6690  0044E6                     
  6691                           ;sys/sys_src/sysTimer.c: 107:   return 0;
  6692  0044E6  0E00               	movlw	0
  6693  0044E8                     l1913:
  6694  0044E8  0012               	return		;funcret
  6695  0044EA                     __end_of_SYS_TimerStarted:
  6696                           	opt callstack 0
  6697                           
  6698 ;; *************** function _nwkRouteFrameReceived *****************
  6699 ;; Defined at:
  6700 ;;		line 194 in file "nwk/nwk_src/nwkRoute.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
  6703 ;;		 -> nwkFrameFrames(685), NULL(0), 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  discovery       1   16[COMRAM] _Bool 
  6706 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
  6707 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  6708 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
  6709 ;;		 -> nwkRouteTable(70), NULL(0), 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;Total ram usage:       12 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    8
  6726 ;; This function calls:
  6727 ;;		_NWK_RouteFindEntry
  6728 ;;		_NWK_RouteNewEntry
  6729 ;; This function is called by:
  6730 ;;		_nwkRxHandleReceivedFrame
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text40
  6735  0014CC                     __ptext40:
  6736                           	opt callstack 0
  6737  0014CC                     _nwkRouteFrameReceived:
  6738                           	opt callstack 18
  6739  0014CC                     
  6740                           ;nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);nwk/nwk_src/
      +                          nwkRoute.c: 195: {;nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &frame->hea
      +                          der;
  6741  0014CC  0E02               	movlw	2
  6742  0014CE  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
  6743  0014D0  6E15               	movwf	nwkRouteFrameReceived@header^0,c
  6744  0014D2  0E00               	movlw	0
  6745  0014D4  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
  6746  0014D6  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
  6747  0014D8                     
  6748                           ;nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;nwk/nwk_src/nwkRoute.c: 20
      +                          0:   if ((header->macSrcAddr & 0x8000) &&
  6749  0014D8  EE20 F007          	lfsr	2,7
  6750  0014DC  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6751  0014DE  26D9               	addwf	fsr2l,f,c
  6752  0014E0  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6753  0014E2  22DA               	addwfc	fsr2h,f,c
  6754  0014E4  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
  6755  0014EA  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
  6756  0014F0  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
  6757  0014F2  EF7D  F00A         	goto	u3781
  6758  0014F6  EF7F  F00A         	goto	u3780
  6759  0014FA                     u3781:
  6760  0014FA  EF99  F00A         	goto	l6164
  6761  0014FE                     u3780:
  6762  0014FE  EE20 F00B          	lfsr	2,11
  6763  001502  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6764  001504  26D9               	addwf	fsr2l,f,c
  6765  001506  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6766  001508  22DA               	addwfc	fsr2h,f,c
  6767  00150A  EE10 F007          	lfsr	1,7
  6768  00150E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6769  001510  26E1               	addwf	fsr1l,f,c
  6770  001512  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6771  001514  22E2               	addwfc	fsr1h,f,c
  6772  001516  50DE               	movf	postinc2,w,c
  6773  001518  18E6               	xorwf	postinc1,w,c
  6774  00151A  E109               	bnz	u3790
  6775  00151C  50DE               	movf	postinc2,w,c
  6776  00151E  18E6               	xorwf	postinc1,w,c
  6777  001520  B4D8               	btfsc	status,2,c
  6778  001522  EF95  F00A         	goto	u3791
  6779  001526  EF97  F00A         	goto	u3790
  6780  00152A                     u3791:
  6781  00152A  EF99  F00A         	goto	l6164
  6782  00152E                     u3790:
  6783  00152E  EF8A  F00B         	goto	l982
  6784  001532                     l6164:
  6785                           
  6786                           ;nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
  6787  001532  EE20 F003          	lfsr	2,3
  6788  001536  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6789  001538  26D9               	addwf	fsr2l,f,c
  6790  00153A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6791  00153C  22DA               	addwfc	fsr2h,f,c
  6792  00153E  28DE               	incf	postinc2,w,c
  6793  001540  E106               	bnz	u3801
  6794  001542  28DE               	incf	postinc2,w,c
  6795  001544  A4D8               	btfss	status,2,c
  6796  001546  EFA7  F00A         	goto	u3801
  6797  00154A  EFA9  F00A         	goto	u3800
  6798  00154E                     u3801:
  6799  00154E  EFAB  F00A         	goto	l6168
  6800  001552                     u3800:
  6801  001552  EF8A  F00B         	goto	l982
  6802  001556                     l6168:
  6803                           
  6804                           ;nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
  6805  001556  EE20 F00B          	lfsr	2,11
  6806  00155A  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6807  00155C  26D9               	addwf	fsr2l,f,c
  6808  00155E  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6809  001560  22DA               	addwfc	fsr2h,f,c
  6810  001562  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
  6811  001568  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
  6812  00156E  0E00               	movlw	0
  6813  001570  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
  6814  001572  EC5F  F020         	call	_NWK_RouteFindEntry	;wreg free
  6815  001576  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
  6816  00157C  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
  6817  001582                     
  6818                           ;nwk/nwk_src/nwkRoute.c: 209:   if (entry)
  6819  001582  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
  6820  001584  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
  6821  001586  B4D8               	btfsc	status,2,c
  6822  001588  EFC8  F00A         	goto	u3811
  6823  00158C  EFCA  F00A         	goto	u3810
  6824  001590                     u3811:
  6825  001590  EF4F  F00B         	goto	l6190
  6826  001594                     u3810:
  6827  001594                     
  6828                           ;nwk/nwk_src/nwkRoute.c: 210:   {;nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery = (0x
      +                          ffff == header->macDstAddr &&
  6829  001594  0E00               	movlw	0
  6830  001596  6E12               	movwf	_nwkRouteFrameReceived$2600^0,c
  6831  001598  EE20 F005          	lfsr	2,5
  6832  00159C  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6833  00159E  26D9               	addwf	fsr2l,f,c
  6834  0015A0  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6835  0015A2  22DA               	addwfc	fsr2h,f,c
  6836  0015A4  28DE               	incf	postinc2,w,c
  6837  0015A6  E106               	bnz	u3821
  6838  0015A8  28DE               	incf	postinc2,w,c
  6839  0015AA  A4D8               	btfss	status,2,c
  6840  0015AC  EFDA  F00A         	goto	u3821
  6841  0015B0  EFDC  F00A         	goto	u3820
  6842  0015B4                     u3821:
  6843  0015B4  EFF1  F00A         	goto	l986
  6844  0015B8                     u3820:
  6845  0015B8  EE20 F00D          	lfsr	2,13
  6846  0015BC  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6847  0015BE  26D9               	addwf	fsr2l,f,c
  6848  0015C0  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6849  0015C2  22DA               	addwfc	fsr2h,f,c
  6850  0015C4  0100               	movlb	0	; () banked
  6851  0015C6  5160               	movf	_nwkIb& (0+255),w,b
  6852  0015C8  18DE               	xorwf	postinc2,w,c
  6853  0015CA  E107               	bnz	u3831
  6854  0015CC  5161               	movf	(_nwkIb+1)& (0+255),w,b
  6855  0015CE  18DE               	xorwf	postinc2,w,c
  6856  0015D0  A4D8               	btfss	status,2,c
  6857  0015D2  EFED  F00A         	goto	u3831
  6858  0015D6  EFEF  F00A         	goto	u3830
  6859  0015DA                     u3831:
  6860  0015DA  EFF1  F00A         	goto	l986
  6861  0015DE                     u3830:
  6862  0015DE                     
  6863                           ; BSR set to: 0
  6864  0015DE  0E01               	movlw	1
  6865  0015E0  6E12               	movwf	_nwkRouteFrameReceived$2600^0,c
  6866  0015E2                     l986:
  6867  0015E2  5012               	movf	_nwkRouteFrameReceived$2600^0,w,c
  6868  0015E4  A4D8               	btfss	status,2,c
  6869  0015E6  EFF7  F00A         	goto	u3841
  6870  0015EA  EFFA  F00A         	goto	u3840
  6871  0015EE                     u3841:
  6872  0015EE  0E01               	movlw	1
  6873  0015F0  EFFB  F00A         	goto	u3850
  6874  0015F4                     u3840:
  6875  0015F4  0E00               	movlw	0
  6876  0015F6                     u3850:
  6877  0015F6  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
  6878  0015F8                     
  6879                           ;nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && frame
      +                          ->rx.lqi > entry->lqi) || discovery)
  6880  0015F8  EE20 F007          	lfsr	2,7
  6881  0015FC  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6882  0015FE  26D9               	addwf	fsr2l,f,c
  6883  001600  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6884  001602  22DA               	addwfc	fsr2h,f,c
  6885  001604  EE10 F003          	lfsr	1,3
  6886  001608  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
  6887  00160A  26E1               	addwf	fsr1l,f,c
  6888  00160C  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
  6889  00160E  22E2               	addwfc	fsr1h,f,c
  6890  001610  50DE               	movf	postinc2,w,c
  6891  001612  18E6               	xorwf	postinc1,w,c
  6892  001614  E109               	bnz	u3860
  6893  001616  50DE               	movf	postinc2,w,c
  6894  001618  18E6               	xorwf	postinc1,w,c
  6895  00161A  B4D8               	btfsc	status,2,c
  6896  00161C  EF12  F00B         	goto	u3861
  6897  001620  EF14  F00B         	goto	u3860
  6898  001624                     u3861:
  6899  001624  EF29  F00B         	goto	l6184
  6900  001628                     u3860:
  6901  001628  EE20 F083          	lfsr	2,131
  6902  00162C  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
  6903  00162E  26D9               	addwf	fsr2l,f,c
  6904  001630  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
  6905  001632  22DA               	addwfc	fsr2h,f,c
  6906  001634  EE10 F006          	lfsr	1,6
  6907  001638  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
  6908  00163A  26E1               	addwf	fsr1l,f,c
  6909  00163C  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
  6910  00163E  22E2               	addwfc	fsr1h,f,c
  6911  001640  50DE               	movf	postinc2,w,c
  6912  001642  5CE6               	subwf	postinc1,w,c
  6913  001644  A0D8               	btfss	status,0,c
  6914  001646  EF27  F00B         	goto	u3871
  6915  00164A  EF29  F00B         	goto	u3870
  6916  00164E                     u3871:
  6917  00164E  EF31  F00B         	goto	l6186
  6918  001652                     u3870:
  6919  001652                     l6184:
  6920  001652  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
  6921  001654  B4D8               	btfsc	status,2,c
  6922  001656  EF2F  F00B         	goto	u3881
  6923  00165A  EF31  F00B         	goto	u3880
  6924  00165E                     u3881:
  6925  00165E  EF7B  F00B         	goto	l6196
  6926  001662                     u3880:
  6927  001662                     l6186:
  6928                           
  6929                           ;nwk/nwk_src/nwkRoute.c: 215:     {;nwk/nwk_src/nwkRoute.c: 216:       entry->nextHopAdd
      +                          r = header->macSrcAddr;
  6930  001662  EE20 F007          	lfsr	2,7
  6931  001666  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6932  001668  26D9               	addwf	fsr2l,f,c
  6933  00166A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6934  00166C  22DA               	addwfc	fsr2h,f,c
  6935  00166E  EE10 F003          	lfsr	1,3
  6936  001672  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
  6937  001674  26E1               	addwf	fsr1l,f,c
  6938  001676  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
  6939  001678  22E2               	addwfc	fsr1h,f,c
  6940  00167A  006F FF7B FFE6     	movff	postinc2,postinc1
  6941  001680  006F FF77 FFE5     	movff	postdec2,postdec1
  6942  001686                     
  6943                           ;nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
  6944  001686  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
  6945  00168C  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
  6946  001692  50DF               	movf	indf2,w,c
  6947  001694  0B0F               	andlw	-241
  6948  001696  0930               	iorlw	48
  6949  001698  6EDF               	movwf	indf2,c
  6950  00169A  EF7B  F00B         	goto	l6196
  6951  00169E                     l6190:
  6952                           
  6953                           ;nwk/nwk_src/nwkRoute.c: 221:   {;nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_RouteNewE
      +                          ntry();
  6954  00169E  EC0F  F019         	call	_NWK_RouteNewEntry	;wreg free
  6955  0016A2  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
  6956  0016A8  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
  6957  0016AE                     
  6958                           ;nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
  6959  0016AE  EE20 F00B          	lfsr	2,11
  6960  0016B2  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6961  0016B4  26D9               	addwf	fsr2l,f,c
  6962  0016B6  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6963  0016B8  22DA               	addwfc	fsr2h,f,c
  6964  0016BA  EE10 F001          	lfsr	1,1
  6965  0016BE  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
  6966  0016C0  26E1               	addwf	fsr1l,f,c
  6967  0016C2  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
  6968  0016C4  22E2               	addwfc	fsr1h,f,c
  6969  0016C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6970  0016CC  006F FF77 FFE5     	movff	postdec2,postdec1
  6971  0016D2                     
  6972                           ;nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
  6973  0016D2  EE20 F007          	lfsr	2,7
  6974  0016D6  5015               	movf	nwkRouteFrameReceived@header^0,w,c
  6975  0016D8  26D9               	addwf	fsr2l,f,c
  6976  0016DA  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
  6977  0016DC  22DA               	addwfc	fsr2h,f,c
  6978  0016DE  EE10 F003          	lfsr	1,3
  6979  0016E2  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
  6980  0016E4  26E1               	addwf	fsr1l,f,c
  6981  0016E6  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
  6982  0016E8  22E2               	addwfc	fsr1h,f,c
  6983  0016EA  006F FF7B FFE6     	movff	postinc2,postinc1
  6984  0016F0  006F FF77 FFE5     	movff	postdec2,postdec1
  6985  0016F6                     l6196:
  6986                           
  6987                           ;nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
  6988  0016F6  EE20 F083          	lfsr	2,131
  6989  0016FA  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
  6990  0016FC  26D9               	addwf	fsr2l,f,c
  6991  0016FE  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
  6992  001700  22DA               	addwfc	fsr2h,f,c
  6993  001702  EE10 F006          	lfsr	1,6
  6994  001706  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
  6995  001708  26E1               	addwf	fsr1l,f,c
  6996  00170A  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
  6997  00170C  22E2               	addwfc	fsr1h,f,c
  6998  00170E  006F FF7F FFE7     	movff	indf2,indf1
  6999  001714                     l982:
  7000  001714  0012               	return		;funcret
  7001  001716                     __end_of_nwkRouteFrameReceived:
  7002                           	opt callstack 0
  7003                           
  7004 ;; *************** function _NWK_RouteNewEntry *****************
  7005 ;; Defined at:
  7006 ;;		line 105 in file "nwk/nwk_src/nwkRoute.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;		None
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  i               1    5[COMRAM] unsigned char 
  7011 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
  7012 ;;		 -> nwkRouteTable(70), NULL(0), 
  7013 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
  7014 ;;		 -> nwkRouteTable(70), 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
  7017 ;; Registers used:
  7018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;Total ram usage:        9 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    7
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_nwkRouteFrameReceived
  7035 ;;		_nwkRouteUpdateEntry
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text41
  7040  00321E                     __ptext41:
  7041                           	opt callstack 0
  7042  00321E                     _NWK_RouteNewEntry:
  7043                           	opt callstack 18
  7044  00321E                     
  7045                           ;nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
  7046  00321E  0E40               	movlw	low _nwkRouteTable
  7047  003220  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
  7048  003222  0E01               	movlw	high _nwkRouteTable
  7049  003224  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
  7050                           
  7051                           ;nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
  7052  003226  0E00               	movlw	0
  7053  003228  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
  7054  00322A  0E00               	movlw	0
  7055  00322C  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
  7056  00322E                     
  7057                           ;nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
  7058  00322E  0E00               	movlw	0
  7059  003230  6E06               	movwf	NWK_RouteNewEntry@i^0,c
  7060  003232                     l5894:
  7061                           
  7062                           ;nwk/nwk_src/nwkRoute.c: 111:   {;nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed)
  7063  003232  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
  7064  003238  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
  7065  00323E  A0DF               	btfss	indf2,0,c
  7066  003240  EF24  F019         	goto	u3501
  7067  003244  EF26  F019         	goto	u3500
  7068  003248                     u3501:
  7069  003248  EF28  F019         	goto	l5898
  7070  00324C                     u3500:
  7071  00324C  EF62  F019         	goto	l5908
  7072  003250                     l5898:
  7073                           
  7074                           ;nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
  7075  003250  EE20 F005          	lfsr	2,5
  7076  003254  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
  7077  003256  26D9               	addwf	fsr2l,f,c
  7078  003258  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
  7079  00325A  22DA               	addwfc	fsr2h,f,c
  7080  00325C  50DF               	movf	indf2,w,c
  7081  00325E  A4D8               	btfss	status,2,c
  7082  003260  EF34  F019         	goto	u3511
  7083  003264  EF36  F019         	goto	u3510
  7084  003268                     u3511:
  7085  003268  EF3E  F019         	goto	l5902
  7086  00326C                     u3510:
  7087  00326C                     
  7088                           ;nwk/nwk_src/nwkRoute.c: 116:     {;nwk/nwk_src/nwkRoute.c: 117:       entry = iter;
  7089  00326C  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
  7090  003272  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
  7091                           
  7092                           ;nwk/nwk_src/nwkRoute.c: 118:       break;
  7093  003278  EF6F  F019         	goto	l5914
  7094  00327C                     l5902:
  7095                           
  7096                           ;nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank)
  7097  00327C  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
  7098  00327E  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
  7099  003280  B4D8               	btfsc	status,2,c
  7100  003282  EF45  F019         	goto	u3521
  7101  003286  EF47  F019         	goto	u3520
  7102  00328A                     u3521:
  7103  00328A  EF5C  F019         	goto	l5906
  7104  00328E                     u3520:
  7105  00328E  EE20 F005          	lfsr	2,5
  7106  003292  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
  7107  003294  26D9               	addwf	fsr2l,f,c
  7108  003296  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
  7109  003298  22DA               	addwfc	fsr2h,f,c
  7110  00329A  EE10 F005          	lfsr	1,5
  7111  00329E  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
  7112  0032A0  26E1               	addwf	fsr1l,f,c
  7113  0032A2  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
  7114  0032A4  22E2               	addwfc	fsr1h,f,c
  7115  0032A6  50DE               	movf	postinc2,w,c
  7116  0032A8  5CE6               	subwf	postinc1,w,c
  7117  0032AA  B0D8               	btfsc	status,0,c
  7118  0032AC  EF5A  F019         	goto	u3531
  7119  0032B0  EF5C  F019         	goto	u3530
  7120  0032B4                     u3531:
  7121  0032B4  EF62  F019         	goto	l5908
  7122  0032B8                     u3530:
  7123  0032B8                     l5906:
  7124                           
  7125                           ;nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
  7126  0032B8  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
  7127  0032BE  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
  7128  0032C4                     l5908:
  7129  0032C4  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
  7130  0032C6  0E07               	movlw	7
  7131  0032C8  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
  7132  0032CA  0E00               	movlw	0
  7133  0032CC  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
  7134  0032CE  0E09               	movlw	9
  7135  0032D0  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
  7136  0032D2  EF6D  F019         	goto	u3541
  7137  0032D6  EF6F  F019         	goto	u3540
  7138  0032DA                     u3541:
  7139  0032DA  EF19  F019         	goto	l5894
  7140  0032DE                     u3540:
  7141  0032DE                     l5914:
  7142                           
  7143                           ;nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
  7144  0032DE  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
  7145  0032E4  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
  7146  0032EA  92DF               	bcf	indf2,1,c
  7147  0032EC                     
  7148                           ;nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
  7149  0032EC  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
  7150  0032F2  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
  7151  0032F8  50DF               	movf	indf2,w,c
  7152  0032FA  0B0F               	andlw	-241
  7153  0032FC  0930               	iorlw	48
  7154  0032FE  6EDF               	movwf	indf2,c
  7155  003300                     
  7156                           ;nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
  7157  003300  EE20 F005          	lfsr	2,5
  7158  003304  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
  7159  003306  26D9               	addwf	fsr2l,f,c
  7160  003308  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
  7161  00330A  22DA               	addwfc	fsr2h,f,c
  7162  00330C  0E80               	movlw	128
  7163  00330E  6EDF               	movwf	indf2,c
  7164  003310                     
  7165                           ;nwk/nwk_src/nwkRoute.c: 129:   return entry;
  7166  003310  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
  7167  003316  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
  7168  00331C  0012               	return		;funcret
  7169  00331E                     __end_of_NWK_RouteNewEntry:
  7170                           	opt callstack 0
  7171                           
  7172 ;; *************** function _nwkRxHandleIndication *****************
  7173 ;; Defined at:
  7174 ;;		line 453 in file "nwk/nwk_src/nwkRx.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;  frame           2   49[COMRAM] PTR struct NwkFrame_t
  7177 ;;		 -> nwkFrameFrames(685), NULL(0), 
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;  ack             1   53[COMRAM] _Bool 
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7192 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;Total ram usage:        5 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:   12
  7196 ;; This function calls:
  7197 ;;		_nwkRxIndicateFrame
  7198 ;;		_nwkRxSendAck
  7199 ;; This function is called by:
  7200 ;;		_nwkRxTaskHandler
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text42
  7205  003012                     __ptext42:
  7206                           	opt callstack 0
  7207  003012                     _nwkRxHandleIndication:
  7208                           	opt callstack 15
  7209  003012                     
  7210                           ;nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);nwk/nwk_
      +                          src/nwkRx.c: 454: {;nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;nwk/nwk_src/nwkRx.c: 457:   n
      +                          wkRxAckControl = 0;
  7211  003012  0E00               	movlw	0
  7212  003014  6E43               	movwf	_nwkRxAckControl^0,c
  7213  003016                     
  7214                           ;nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
  7215  003016  0060  F0C8  F018   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
  7216  00301C  0060  F0CC  F019   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
  7217  003022  EC33  F009         	call	_nwkRxIndicateFrame	;wreg free
  7218  003026  6E36               	movwf	nwkRxHandleIndication@ack^0,c
  7219  003028                     
  7220                           ;nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
  7221  003028  EE20 F00B          	lfsr	2,11
  7222  00302C  5032               	movf	nwkRxHandleIndication@frame^0,w,c
  7223  00302E  26D9               	addwf	fsr2l,f,c
  7224  003030  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
  7225  003032  22DA               	addwfc	fsr2h,f,c
  7226  003034  B0DF               	btfsc	indf2,0,c
  7227  003036  EF1F  F018         	goto	u4841
  7228  00303A  EF21  F018         	goto	u4840
  7229  00303E                     u4841:
  7230  00303E  EF23  F018         	goto	l6816
  7231  003042                     u4840:
  7232  003042                     
  7233                           ;nwk/nwk_src/nwkRx.c: 461:     ack = 0;
  7234  003042  0E00               	movlw	0
  7235  003044  6E36               	movwf	nwkRxHandleIndication@ack^0,c
  7236  003046                     l6816:
  7237                           
  7238                           ;nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
  7239  003046  EE20 F007          	lfsr	2,7
  7240  00304A  5032               	movf	nwkRxHandleIndication@frame^0,w,c
  7241  00304C  26D9               	addwf	fsr2l,f,c
  7242  00304E  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
  7243  003050  22DA               	addwfc	fsr2h,f,c
  7244  003052  28DE               	incf	postinc2,w,c
  7245  003054  E106               	bnz	u4851
  7246  003056  28DE               	incf	postinc2,w,c
  7247  003058  A4D8               	btfss	status,2,c
  7248  00305A  EF31  F018         	goto	u4851
  7249  00305E  EF33  F018         	goto	u4850
  7250  003062                     u4851:
  7251  003062  EF55  F018         	goto	l6824
  7252  003066                     u4850:
  7253  003066  EE20 F00F          	lfsr	2,15
  7254  00306A  5032               	movf	nwkRxHandleIndication@frame^0,w,c
  7255  00306C  26D9               	addwf	fsr2l,f,c
  7256  00306E  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
  7257  003070  22DA               	addwfc	fsr2h,f,c
  7258  003072  0100               	movlb	0	; () banked
  7259  003074  5160               	movf	_nwkIb& (0+255),w,b
  7260  003076  18DE               	xorwf	postinc2,w,c
  7261  003078  E107               	bnz	u4861
  7262  00307A  5161               	movf	(_nwkIb+1)& (0+255),w,b
  7263  00307C  18DE               	xorwf	postinc2,w,c
  7264  00307E  A4D8               	btfss	status,2,c
  7265  003080  EF44  F018         	goto	u4861
  7266  003084  EF46  F018         	goto	u4860
  7267  003088                     u4861:
  7268  003088  EF55  F018         	goto	l6824
  7269  00308C                     u4860:
  7270  00308C                     
  7271                           ; BSR set to: 0
  7272  00308C  EE20 F00B          	lfsr	2,11
  7273  003090  5032               	movf	nwkRxHandleIndication@frame^0,w,c
  7274  003092  26D9               	addwf	fsr2l,f,c
  7275  003094  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
  7276  003096  22DA               	addwfc	fsr2h,f,c
  7277  003098  B6DF               	btfsc	indf2,3,c
  7278  00309A  EF51  F018         	goto	u4871
  7279  00309E  EF53  F018         	goto	u4870
  7280  0030A2                     u4871:
  7281  0030A2  EF55  F018         	goto	l6824
  7282  0030A6                     u4870:
  7283  0030A6                     
  7284                           ; BSR set to: 0
  7285                           ;nwk/nwk_src/nwkRx.c: 466:     ack = 1;
  7286  0030A6  0E01               	movlw	1
  7287  0030A8  6E36               	movwf	nwkRxHandleIndication@ack^0,c
  7288  0030AA                     l6824:
  7289                           
  7290                           ;nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
  7291  0030AA  EE20 F005          	lfsr	2,5
  7292  0030AE  5032               	movf	nwkRxHandleIndication@frame^0,w,c
  7293  0030B0  26D9               	addwf	fsr2l,f,c
  7294  0030B2  5033               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
  7295  0030B4  22DA               	addwfc	fsr2h,f,c
  7296  0030B6  28DE               	incf	postinc2,w,c
  7297  0030B8  E106               	bnz	u4881
  7298  0030BA  28DE               	incf	postinc2,w,c
  7299  0030BC  A4D8               	btfss	status,2,c
  7300  0030BE  EF63  F018         	goto	u4881
  7301  0030C2  EF65  F018         	goto	u4880
  7302  0030C6                     u4881:
  7303  0030C6  EF67  F018         	goto	l6828
  7304  0030CA                     u4880:
  7305  0030CA                     
  7306                           ;nwk/nwk_src/nwkRx.c: 469:     ack = 0;
  7307  0030CA  0E00               	movlw	0
  7308  0030CC  6E36               	movwf	nwkRxHandleIndication@ack^0,c
  7309  0030CE                     l6828:
  7310                           
  7311                           ;nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
  7312  0030CE  0100               	movlb	0	; () banked
  7313  0030D0  2960               	incf	_nwkIb& (0+255),w,b
  7314  0030D2  E106               	bnz	u4891
  7315  0030D4  2961               	incf	(_nwkIb+1)& (0+255),w,b
  7316  0030D6  A4D8               	btfss	status,2,c
  7317  0030D8  EF70  F018         	goto	u4891
  7318  0030DC  EF72  F018         	goto	u4890
  7319  0030E0                     u4891:
  7320  0030E0  EF74  F018         	goto	l1237
  7321  0030E4                     u4890:
  7322  0030E4                     
  7323                           ; BSR set to: 0
  7324                           ;nwk/nwk_src/nwkRx.c: 472:     ack = 0;
  7325  0030E4  0E00               	movlw	0
  7326  0030E6  6E36               	movwf	nwkRxHandleIndication@ack^0,c
  7327  0030E8                     l1237:
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;nwk/nwk_src/nwkRx.c: 474:   if (ack)
  7331  0030E8  5036               	movf	nwkRxHandleIndication@ack^0,w,c
  7332  0030EA  B4D8               	btfsc	status,2,c
  7333  0030EC  EF7A  F018         	goto	u4901
  7334  0030F0  EF7C  F018         	goto	u4900
  7335  0030F4                     u4901:
  7336  0030F4  EF84  F018         	goto	l6834
  7337  0030F8                     u4900:
  7338  0030F8                     
  7339                           ; BSR set to: 0
  7340                           ;nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
  7341  0030F8  0060  F0C8  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
  7342  0030FE  0060  F0CC  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
  7343  003104  EC84  F017         	call	_nwkRxSendAck	;wreg free
  7344  003108                     l6834:
  7345                           
  7346                           ;nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
  7347  003108  0060  F0CB  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
  7348  00310E  0060  F0CF  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
  7349  003114  0E24               	movlw	36
  7350  003116  6EDF               	movwf	indf2,c
  7351  003118  0012               	return		;funcret
  7352  00311A                     __end_of_nwkRxHandleIndication:
  7353                           	opt callstack 0
  7354                           
  7355 ;; *************** function _nwkRxSendAck *****************
  7356 ;; Defined at:
  7357 ;;		line 136 in file "nwk/nwk_src/nwkRx.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
  7360 ;;		 -> nwkFrameFrames(685), NULL(0), 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
  7363 ;;		 -> nwkFrameFrames(685), NULL(0), 
  7364 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
  7365 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      void 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7379 ;;Total ram usage:        6 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:   11
  7382 ;; This function calls:
  7383 ;;		_nwkFrameAlloc
  7384 ;;		_nwkFrameCommandInit
  7385 ;;		_nwkTxFrame
  7386 ;; This function is called by:
  7387 ;;		_nwkRxHandleIndication
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text43
  7392  002F08                     __ptext43:
  7393                           	opt callstack 0
  7394  002F08                     _nwkRxSendAck:
  7395                           	opt callstack 15
  7396  002F08                     
  7397                           ;nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);nwk/nwk_src/nwkRx
      +                          .c: 137: {;nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;nwk/nwk_src/nwkRx.c: 139:   NwkC
      +                          ommandAck_t *command;;nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack = nwkFrameAlloc
      +                          ()))
  7398  002F08  ECBF  F01B         	call	_nwkFrameAlloc	;wreg free
  7399  002F0C  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
  7400  002F12  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
  7401  002F18  502E               	movf	nwkRxSendAck@ack^0,w,c
  7402  002F1A  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
  7403  002F1C  A4D8               	btfss	status,2,c
  7404  002F1E  EF93  F017         	goto	u3961
  7405  002F22  EF95  F017         	goto	u3960
  7406  002F26                     u3961:
  7407  002F26  EF97  F017         	goto	l6260
  7408  002F2A                     u3960:
  7409  002F2A  EF08  F018         	goto	l1144
  7410  002F2E                     l6260:
  7411                           
  7412                           ;nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
  7413  002F2E  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
  7414  002F34  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
  7415  002F3A  ECFF  F024         	call	_nwkFrameCommandInit	;wreg free
  7416  002F3E                     
  7417                           ;nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
  7418  002F3E  EE20 F001          	lfsr	2,1
  7419  002F42  502E               	movf	nwkRxSendAck@ack^0,w,c
  7420  002F44  26D9               	addwf	fsr2l,f,c
  7421  002F46  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
  7422  002F48  22DA               	addwfc	fsr2h,f,c
  7423  002F4A  0E03               	movlw	3
  7424  002F4C  26DF               	addwf	indf2,f,c
  7425  002F4E                     
  7426                           ;nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
  7427  002F4E  EE20 F087          	lfsr	2,135
  7428  002F52  502E               	movf	nwkRxSendAck@ack^0,w,c
  7429  002F54  26D9               	addwf	fsr2l,f,c
  7430  002F56  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
  7431  002F58  22DA               	addwfc	fsr2h,f,c
  7432  002F5A  0E00               	movlw	0
  7433  002F5C  6EDE               	movwf	postinc2,c
  7434  002F5E  0E00               	movlw	0
  7435  002F60  6EDD               	movwf	postdec2,c
  7436  002F62                     
  7437                           ;nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.security
      +                          ;
  7438  002F62  EE20 F00B          	lfsr	2,11
  7439  002F66  502A               	movf	nwkRxSendAck@frame^0,w,c
  7440  002F68  26D9               	addwf	fsr2l,f,c
  7441  002F6A  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
  7442  002F6C  22DA               	addwfc	fsr2h,f,c
  7443  002F6E  EE10 F00B          	lfsr	1,11
  7444  002F72  502E               	movf	nwkRxSendAck@ack^0,w,c
  7445  002F74  26E1               	addwf	fsr1l,f,c
  7446  002F76  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
  7447  002F78  22E2               	addwfc	fsr1h,f,c
  7448  002F7A  B2DF               	btfsc	indf2,1,c
  7449  002F7C  D002               	bra	u3975
  7450  002F7E  92E7               	bcf	indf1,1,c
  7451  002F80  D001               	bra	u3976
  7452  002F82                     u3975:
  7453  002F82  82E7               	bsf	indf1,1,c
  7454  002F84                     u3976:
  7455  002F84                     
  7456                           ;nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
  7457  002F84  EE20 F00D          	lfsr	2,13
  7458  002F88  502A               	movf	nwkRxSendAck@frame^0,w,c
  7459  002F8A  26D9               	addwf	fsr2l,f,c
  7460  002F8C  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
  7461  002F8E  22DA               	addwfc	fsr2h,f,c
  7462  002F90  EE10 F00F          	lfsr	1,15
  7463  002F94  502E               	movf	nwkRxSendAck@ack^0,w,c
  7464  002F96  26E1               	addwf	fsr1l,f,c
  7465  002F98  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
  7466  002F9A  22E2               	addwfc	fsr1h,f,c
  7467  002F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  7468  002FA2  006F FF77 FFE5     	movff	postdec2,postdec1
  7469  002FA8                     
  7470                           ;nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
  7471  002FA8  EE20 F081          	lfsr	2,129
  7472  002FAC  502E               	movf	nwkRxSendAck@ack^0,w,c
  7473  002FAE  26D9               	addwf	fsr2l,f,c
  7474  002FB0  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
  7475  002FB2  22DA               	addwfc	fsr2h,f,c
  7476  002FB4  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
  7477  002FBA  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
  7478  002FC0                     
  7479                           ;nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
  7480  002FC0  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
  7481  002FC6  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
  7482  002FCC  0E00               	movlw	0
  7483  002FCE  6EDF               	movwf	indf2,c
  7484  002FD0                     
  7485                           ;nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
  7486  002FD0  EE20 F002          	lfsr	2,2
  7487  002FD4  502C               	movf	nwkRxSendAck@command^0,w,c
  7488  002FD6  26D9               	addwf	fsr2l,f,c
  7489  002FD8  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
  7490  002FDA  22DA               	addwfc	fsr2h,f,c
  7491  002FDC  0060  F10F  FFDF   	movff	_nwkRxAckControl,indf2
  7492  002FE2                     
  7493                           ;nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
  7494  002FE2  EE20 F00C          	lfsr	2,12
  7495  002FE6  502A               	movf	nwkRxSendAck@frame^0,w,c
  7496  002FE8  26D9               	addwf	fsr2l,f,c
  7497  002FEA  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
  7498  002FEC  22DA               	addwfc	fsr2h,f,c
  7499  002FEE  EE10 F001          	lfsr	1,1
  7500  002FF2  502C               	movf	nwkRxSendAck@command^0,w,c
  7501  002FF4  26E1               	addwf	fsr1l,f,c
  7502  002FF6  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
  7503  002FF8  22E2               	addwfc	fsr1h,f,c
  7504  002FFA  006F FF7F FFE7     	movff	indf2,indf1
  7505  003000                     
  7506                           ;nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
  7507  003000  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
  7508  003006  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
  7509  00300C  EC60  F00D         	call	_nwkTxFrame	;wreg free
  7510  003010                     l1144:
  7511  003010  0012               	return		;funcret
  7512  003012                     __end_of_nwkRxSendAck:
  7513                           	opt callstack 0
  7514                           
  7515 ;; *************** function _nwkRxIndicateFrame *****************
  7516 ;; Defined at:
  7517 ;;		line 423 in file "nwk/nwk_src/nwkRx.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  frame           2   23[COMRAM] PTR struct NwkFrame_t
  7520 ;;		 -> nwkFrameFrames(685), NULL(0), 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  ind            12   37[COMRAM] struct NWK_DataInd_t
  7523 ;;  header          2   35[COMRAM] PTR __pack struct NwkFra
  7524 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      _Bool 
  7527 ;; Registers used:
  7528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;Total ram usage:       26 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; Hardware stack levels required when called:   11
  7541 ;; This function calls:
  7542 ;;		_appDataInd
  7543 ;;		_nwkRxServiceDataInd
  7544 ;;		nwkFrame@nwkFramePayloadSize
  7545 ;; This function is called by:
  7546 ;;		_nwkRxHandleIndication
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           	psect	text44
  7551  001266                     __ptext44:
  7552                           	opt callstack 0
  7553  001266                     _nwkRxIndicateFrame:
  7554                           	opt callstack 15
  7555  001266                     
  7556                           ;nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);nwk/nwk_sr
      +                          c/nwkRx.c: 424: {;nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame->header;
  7557  001266  0E02               	movlw	2
  7558  001268  2418               	addwf	nwkRxIndicateFrame@frame^0,w,c
  7559  00126A  6E24               	movwf	nwkRxIndicateFrame@header^0,c
  7560  00126C  0E00               	movlw	0
  7561  00126E  2019               	addwfc	(nwkRxIndicateFrame@frame+1)^0,w,c
  7562  001270  6E25               	movwf	(nwkRxIndicateFrame@header+1)^0,c
  7563  001272                     
  7564                           ;nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;nwk/nwk_src/nwkRx.c: 428:   if (((void*)
      +                          0) == nwkIb.endpoint[header->nwkDstEndpoint])
  7565  001272  EE20 F00F          	lfsr	2,15
  7566  001276  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7567  001278  26D9               	addwf	fsr2l,f,c
  7568  00127A  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7569  00127C  22DA               	addwfc	fsr2h,f,c
  7570  00127E  38DF               	swapf	indf2,w,c
  7571  001280  0B0F               	andlw	15
  7572  001282  6E1A               	movwf	??_nwkRxIndicateFrame^0,c
  7573  001284  501A               	movf	??_nwkRxIndicateFrame^0,w,c
  7574  001286  0D02               	mullw	2
  7575  001288  0E66               	movlw	low (_nwkIb+6)
  7576  00128A  24F3               	addwf	243,w,c
  7577  00128C  6ED9               	movwf	fsr2l,c
  7578  00128E  0E00               	movlw	high (_nwkIb+6)
  7579  001290  20F4               	addwfc	prodh,w,c
  7580  001292  6EDA               	movwf	fsr2h,c
  7581  001294  50DE               	movf	postinc2,w,c
  7582  001296  10DE               	iorwf	postinc2,w,c
  7583  001298  A4D8               	btfss	status,2,c
  7584  00129A  EF51  F009         	goto	u4101
  7585  00129E  EF53  F009         	goto	u4100
  7586  0012A2                     u4101:
  7587  0012A2  EF56  F009         	goto	l6388
  7588  0012A6                     u4100:
  7589  0012A6                     
  7590                           ;nwk/nwk_src/nwkRx.c: 429:     return 0;
  7591  0012A6  0E00               	movlw	0
  7592  0012A8  EF65  F00A         	goto	l1207
  7593  0012AC                     l6388:
  7594                           
  7595                           ;nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
  7596  0012AC  EE20 F00B          	lfsr	2,11
  7597  0012B0  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7598  0012B2  26D9               	addwf	fsr2l,f,c
  7599  0012B4  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7600  0012B6  22DA               	addwfc	fsr2h,f,c
  7601  0012B8  006F FF78  F026    	movff	postinc2,nwkRxIndicateFrame@ind
  7602  0012BE  006F FF74  F027    	movff	postdec2,nwkRxIndicateFrame@ind+1
  7603                           
  7604                           ;nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
  7605  0012C4  EE20 F00D          	lfsr	2,13
  7606  0012C8  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7607  0012CA  26D9               	addwf	fsr2l,f,c
  7608  0012CC  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7609  0012CE  22DA               	addwfc	fsr2h,f,c
  7610  0012D0  006F FF78  F028    	movff	postinc2,nwkRxIndicateFrame@ind+2
  7611  0012D6  006F FF74  F029    	movff	postdec2,nwkRxIndicateFrame@ind+3
  7612                           
  7613                           ;nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
  7614  0012DC  EE20 F00F          	lfsr	2,15
  7615  0012E0  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7616  0012E2  26D9               	addwf	fsr2l,f,c
  7617  0012E4  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7618  0012E6  22DA               	addwfc	fsr2h,f,c
  7619  0012E8  50DF               	movf	indf2,w,c
  7620  0012EA  0B0F               	andlw	15
  7621  0012EC  6E2A               	movwf	(nwkRxIndicateFrame@ind+4)^0,c
  7622                           
  7623                           ;nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
  7624  0012EE  EE20 F00F          	lfsr	2,15
  7625  0012F2  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7626  0012F4  26D9               	addwf	fsr2l,f,c
  7627  0012F6  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7628  0012F8  22DA               	addwfc	fsr2h,f,c
  7629  0012FA  38DF               	swapf	indf2,w,c
  7630  0012FC  0B0F               	andlw	15
  7631  0012FE  6E2B               	movwf	(nwkRxIndicateFrame@ind+5)^0,c
  7632                           
  7633                           ;nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
  7634  001300  EE20 F081          	lfsr	2,129
  7635  001304  5018               	movf	nwkRxIndicateFrame@frame^0,w,c
  7636  001306  26D9               	addwf	fsr2l,f,c
  7637  001308  5019               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
  7638  00130A  22DA               	addwfc	fsr2h,f,c
  7639  00130C  006F FF78  F02D    	movff	postinc2,nwkRxIndicateFrame@ind+7
  7640  001312  006F FF74  F02E    	movff	postdec2,nwkRxIndicateFrame@ind+8
  7641  001318                     
  7642                           ;nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
  7643  001318  0060  F060  F002   	movff	nwkRxIndicateFrame@frame,nwkFrame@nwkFramePayloadSize@frame_3186
  7644  00131E  0060  F064  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFrame@nwkFramePayloadSize@frame_3186+1
  7645  001324  ECDF  F026         	call	nwkFrame@nwkFramePayloadSize	;wreg free
  7646  001328  6E2F               	movwf	(nwkRxIndicateFrame@ind+9)^0,c
  7647  00132A                     
  7648                           ;nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
  7649  00132A  EE20 F083          	lfsr	2,131
  7650  00132E  5018               	movf	nwkRxIndicateFrame@frame^0,w,c
  7651  001330  26D9               	addwf	fsr2l,f,c
  7652  001332  5019               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
  7653  001334  22DA               	addwfc	fsr2h,f,c
  7654  001336  50DF               	movf	indf2,w,c
  7655  001338  6E30               	movwf	(nwkRxIndicateFrame@ind+10)^0,c
  7656  00133A                     
  7657                           ;nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
  7658  00133A  EE20 F084          	lfsr	2,132
  7659  00133E  5018               	movf	nwkRxIndicateFrame@frame^0,w,c
  7660  001340  26D9               	addwf	fsr2l,f,c
  7661  001342  5019               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
  7662  001344  22DA               	addwfc	fsr2h,f,c
  7663  001346  50DF               	movf	indf2,w,c
  7664  001348  6E31               	movwf	(nwkRxIndicateFrame@ind+11)^0,c
  7665  00134A                     
  7666                           ;nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK
      +                          _REQUESTED : 0;
  7667  00134A  EE20 F009          	lfsr	2,9
  7668  00134E  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7669  001350  26D9               	addwf	fsr2l,f,c
  7670  001352  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7671  001354  22DA               	addwfc	fsr2h,f,c
  7672  001356  0E00               	movlw	0
  7673  001358  B0DF               	btfsc	indf2,0,c
  7674  00135A  0E01               	movlw	1
  7675  00135C  6E2C               	movwf	(nwkRxIndicateFrame@ind+6)^0,c
  7676  00135E                     
  7677                           ;nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECU
      +                          RED : 0;
  7678  00135E  EE20 F009          	lfsr	2,9
  7679  001362  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7680  001364  26D9               	addwf	fsr2l,f,c
  7681  001366  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7682  001368  22DA               	addwfc	fsr2h,f,c
  7683  00136A  B2DF               	btfsc	indf2,1,c
  7684  00136C  EFBA  F009         	goto	u4111
  7685  001370  EFBC  F009         	goto	u4110
  7686  001374                     u4111:
  7687  001374  EFC0  F009         	goto	l6402
  7688  001378                     u4110:
  7689  001378  0E00               	movlw	0
  7690  00137A  6E1E               	movwf	_nwkRxIndicateFrame$3634^0,c
  7691  00137C  EFC2  F009         	goto	l6404
  7692  001380                     l6402:
  7693  001380  0E02               	movlw	2
  7694  001382  6E1E               	movwf	_nwkRxIndicateFrame$3634^0,c
  7695  001384                     l6404:
  7696  001384  501E               	movf	_nwkRxIndicateFrame$3634^0,w,c
  7697  001386  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
  7698  001388                     
  7699                           ;nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LIN
      +                          K_LOCAL : 0;
  7700  001388  EE20 F009          	lfsr	2,9
  7701  00138C  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7702  00138E  26D9               	addwf	fsr2l,f,c
  7703  001390  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7704  001392  22DA               	addwfc	fsr2h,f,c
  7705  001394  B4DF               	btfsc	indf2,2,c
  7706  001396  EFCF  F009         	goto	u4121
  7707  00139A  EFD1  F009         	goto	u4120
  7708  00139E                     u4121:
  7709  00139E  EFD5  F009         	goto	l6410
  7710  0013A2                     u4120:
  7711  0013A2  0E00               	movlw	0
  7712  0013A4  6E1F               	movwf	_nwkRxIndicateFrame$3635^0,c
  7713  0013A6  EFD7  F009         	goto	l6412
  7714  0013AA                     l6410:
  7715  0013AA  0E20               	movlw	32
  7716  0013AC  6E1F               	movwf	_nwkRxIndicateFrame$3635^0,c
  7717  0013AE                     l6412:
  7718  0013AE  501F               	movf	_nwkRxIndicateFrame$3635^0,w,c
  7719  0013B0  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
  7720  0013B2                     
  7721                           ;nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MUL
      +                          TICAST : 0;
  7722  0013B2  EE20 F009          	lfsr	2,9
  7723  0013B6  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7724  0013B8  26D9               	addwf	fsr2l,f,c
  7725  0013BA  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7726  0013BC  22DA               	addwfc	fsr2h,f,c
  7727  0013BE  B6DF               	btfsc	indf2,3,c
  7728  0013C0  EFE4  F009         	goto	u4131
  7729  0013C4  EFE6  F009         	goto	u4130
  7730  0013C8                     u4131:
  7731  0013C8  EFEA  F009         	goto	l6418
  7732  0013CC                     u4130:
  7733  0013CC  0E00               	movlw	0
  7734  0013CE  6E20               	movwf	_nwkRxIndicateFrame$3636^0,c
  7735  0013D0  EFEC  F009         	goto	l6420
  7736  0013D4                     l6418:
  7737  0013D4  0E40               	movlw	64
  7738  0013D6  6E20               	movwf	_nwkRxIndicateFrame$3636^0,c
  7739  0013D8                     l6420:
  7740  0013D8  5020               	movf	_nwkRxIndicateFrame$3636^0,w,c
  7741  0013DA  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
  7742  0013DC                     
  7743                           ;nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_OPT
      +                          _BROADCAST : 0;
  7744  0013DC  EE20 F00D          	lfsr	2,13
  7745  0013E0  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7746  0013E2  26D9               	addwf	fsr2l,f,c
  7747  0013E4  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7748  0013E6  22DA               	addwfc	fsr2h,f,c
  7749  0013E8  28DE               	incf	postinc2,w,c
  7750  0013EA  E108               	bnz	u4140
  7751  0013EC  28DE               	incf	postinc2,w,c
  7752  0013EE  B4D8               	btfsc	status,2,c
  7753  0013F0  EFFC  F009         	goto	u4141
  7754  0013F4  EFFE  F009         	goto	u4140
  7755  0013F8                     u4141:
  7756  0013F8  EF02  F00A         	goto	l6426
  7757  0013FC                     u4140:
  7758  0013FC  0E00               	movlw	0
  7759  0013FE  6E21               	movwf	_nwkRxIndicateFrame$3637^0,c
  7760  001400  EF04  F00A         	goto	l6428
  7761  001404                     l6426:
  7762  001404  0E04               	movlw	4
  7763  001406  6E21               	movwf	_nwkRxIndicateFrame$3637^0,c
  7764  001408                     l6428:
  7765  001408  5021               	movf	_nwkRxIndicateFrame$3637^0,w,c
  7766  00140A  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
  7767  00140C                     
  7768                           ;nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr) ?
      +                           NWK_IND_OPT_LOCAL : 0;
  7769  00140C  EE20 F007          	lfsr	2,7
  7770  001410  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7771  001412  26D9               	addwf	fsr2l,f,c
  7772  001414  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7773  001416  22DA               	addwfc	fsr2h,f,c
  7774  001418  EE10 F00B          	lfsr	1,11
  7775  00141C  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7776  00141E  26E1               	addwf	fsr1l,f,c
  7777  001420  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7778  001422  22E2               	addwfc	fsr1h,f,c
  7779  001424  50DE               	movf	postinc2,w,c
  7780  001426  18E6               	xorwf	postinc1,w,c
  7781  001428  E109               	bnz	u4150
  7782  00142A  50DE               	movf	postinc2,w,c
  7783  00142C  18E6               	xorwf	postinc1,w,c
  7784  00142E  B4D8               	btfsc	status,2,c
  7785  001430  EF1C  F00A         	goto	u4151
  7786  001434  EF1E  F00A         	goto	u4150
  7787  001438                     u4151:
  7788  001438  EF22  F00A         	goto	l6434
  7789  00143C                     u4150:
  7790  00143C  0E00               	movlw	0
  7791  00143E  6E22               	movwf	_nwkRxIndicateFrame$3638^0,c
  7792  001440  EF24  F00A         	goto	l6436
  7793  001444                     l6434:
  7794  001444  0E08               	movlw	8
  7795  001446  6E22               	movwf	_nwkRxIndicateFrame$3638^0,c
  7796  001448                     l6436:
  7797  001448  5022               	movf	_nwkRxIndicateFrame$3638^0,w,c
  7798  00144A  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
  7799  00144C                     
  7800                           ;nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND_OP
      +                          T_BROADCAST_PAN_ID : 0;
  7801  00144C  EE20 F003          	lfsr	2,3
  7802  001450  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7803  001452  26D9               	addwf	fsr2l,f,c
  7804  001454  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7805  001456  22DA               	addwfc	fsr2h,f,c
  7806  001458  28DE               	incf	postinc2,w,c
  7807  00145A  E108               	bnz	u4160
  7808  00145C  28DE               	incf	postinc2,w,c
  7809  00145E  B4D8               	btfsc	status,2,c
  7810  001460  EF34  F00A         	goto	u4161
  7811  001464  EF36  F00A         	goto	u4160
  7812  001468                     u4161:
  7813  001468  EF3A  F00A         	goto	l6442
  7814  00146C                     u4160:
  7815  00146C  0E00               	movlw	0
  7816  00146E  6E23               	movwf	_nwkRxIndicateFrame$3639^0,c
  7817  001470  EF3C  F00A         	goto	l6444
  7818  001474                     l6442:
  7819  001474  0E10               	movlw	16
  7820  001476  6E23               	movwf	_nwkRxIndicateFrame$3639^0,c
  7821  001478                     l6444:
  7822  001478  5023               	movf	_nwkRxIndicateFrame$3639^0,w,c
  7823  00147A  122C               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
  7824  00147C                     
  7825                           ;nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
  7826  00147C  0E26               	movlw	low nwkRxIndicateFrame@ind
  7827  00147E  6E12               	movwf	appDataInd@ind^0,c
  7828  001480  0E00               	movlw	high nwkRxIndicateFrame@ind
  7829  001482  6E13               	movwf	(appDataInd@ind+1)^0,c
  7830  001484  EE20 F00F          	lfsr	2,15
  7831  001488  5024               	movf	nwkRxIndicateFrame@header^0,w,c
  7832  00148A  26D9               	addwf	fsr2l,f,c
  7833  00148C  5025               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
  7834  00148E  22DA               	addwfc	fsr2h,f,c
  7835  001490  38DF               	swapf	indf2,w,c
  7836  001492  0B0F               	andlw	15
  7837  001494  6E1A               	movwf	??_nwkRxIndicateFrame^0,c
  7838  001496  501A               	movf	??_nwkRxIndicateFrame^0,w,c
  7839  001498  0D02               	mullw	2
  7840  00149A  0E66               	movlw	low (_nwkIb+6)
  7841  00149C  24F3               	addwf	243,w,c
  7842  00149E  6ED9               	movwf	fsr2l,c
  7843  0014A0  0E00               	movlw	high (_nwkIb+6)
  7844  0014A2  20F4               	addwfc	prodh,w,c
  7845  0014A4  6EDA               	movwf	fsr2h,c
  7846  0014A6  006F FF78  F01B    	movff	postinc2,??_nwkRxIndicateFrame+1
  7847  0014AC  006F FF74  F01C    	movff	postdec2,??_nwkRxIndicateFrame+2
  7848  0014B2  D802               	call	u4178
  7849  0014B4  EF65  F00A         	goto	u4179
  7850  0014B8                     u4178:
  7851  0014B8  0005               	push	
  7852  0014BA  6EFA               	movwf	pclath,c
  7853  0014BC  501B               	movf	(??_nwkRxIndicateFrame+1)^0,w,c
  7854  0014BE  6EFD               	movwf	tosl,c
  7855  0014C0  501C               	movf	(??_nwkRxIndicateFrame+2)^0,w,c
  7856  0014C2  6EFE               	movwf	tosh,c
  7857  0014C4  6AFF               	clrf	tosu,c
  7858  0014C6  50FA               	movf	pclath,w,c
  7859  0014C8  0012               	return		;indir
  7860  0014CA                     u4179:
  7861  0014CA                     l1207:
  7862  0014CA  0012               	return		;funcret
  7863  0014CC                     __end_of_nwkRxIndicateFrame:
  7864                           	opt callstack 0
  7865                           
  7866 ;; *************** function nwkFrame@nwkFramePayloadSize *****************
  7867 ;; Defined at:
  7868 ;;		line 134 in file "nwk/nwk_inc\nwkFrame.h"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
  7871 ;;		 -> nwkFrameFrames(685), NULL(0), 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1    wreg      unsigned char 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;Total ram usage:        4 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    7
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_nwkRxIndicateFrame
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text45
  7898  004DBE                     __ptext45:
  7899                           	opt callstack 0
  7900  004DBE                     nwkFrame@nwkFramePayloadSize:
  7901                           	opt callstack 18
  7902  004DBE  EE20 F081          	lfsr	2,129
  7903  004DC2  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_3186^0,w,c
  7904  004DC4  26D9               	addwf	fsr2l,f,c
  7905  004DC6  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_3186+1)^0,w,c
  7906  004DC8  22DA               	addwfc	fsr2h,f,c
  7907  004DCA  50DF               	movf	indf2,w,c
  7908  004DCC  6E04               	movwf	??rand@nwkFrame@nwkFramePayloadSize^0,c
  7909  004DCE  EE20 F001          	lfsr	2,1
  7910  004DD2  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_3186^0,w,c
  7911  004DD4  26D9               	addwf	fsr2l,f,c
  7912  004DD6  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_3186+1)^0,w,c
  7913  004DD8  22DA               	addwfc	fsr2h,f,c
  7914  004DDA  50DF               	movf	indf2,w,c
  7915  004DDC  6E05               	movwf	(??rand@nwkFrame@nwkFramePayloadSize+1)^0,c
  7916  004DDE  5004               	movf	??rand@nwkFrame@nwkFramePayloadSize^0,w,c
  7917  004DE0  5C05               	subwf	(??rand@nwkFrame@nwkFramePayloadSize+1)^0,w,c
  7918  004DE2  2402               	addwf	nwkFrame@nwkFramePayloadSize@frame_3186^0,w,c
  7919  004DE4  0F02               	addlw	2
  7920  004DE6  0012               	return		;funcret
  7921  004DE8                     __end_ofnwkFrame@nwkFramePayloadSize:
  7922                           	opt callstack 0
  7923                           
  7924 ;; *************** function _appDataInd *****************
  7925 ;; Defined at:
  7926 ;;		line 23 in file "test.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  ind             2   17[COMRAM] PTR struct NWK_DataInd_t
  7929 ;;		 -> nwkRxIndicateFrame@ind(12), 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;		None
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      _Bool 
  7934 ;; Registers used:
  7935 ;;		wreg
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;Total ram usage:        2 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; Hardware stack levels required when called:    7
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_test_init
  7952 ;;		_nwkRxIndicateFrame
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text46
  7957  005126                     __ptext46:
  7958                           	opt callstack 0
  7959  005126                     _appDataInd:
  7960                           	opt callstack 18
  7961  005126                     
  7962                           ;test.c: 23: static _Bool appDataInd(NWK_DataInd_t *ind);test.c: 24: {;test.c: 26:  retu
      +                          rn 1;
  7963  005126  0E01               	movlw	1
  7964  005128  0012               	return		;funcret
  7965  00512A                     __end_of_appDataInd:
  7966                           	opt callstack 0
  7967                           
  7968 ;; *************** function _nwkRxServiceDataInd *****************
  7969 ;; Defined at:
  7970 ;;		line 257 in file "nwk/nwk_src/nwkRx.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  ind             2   17[COMRAM] PTR struct NWK_DataInd_t
  7973 ;;		 -> nwkRxIndicateFrame@ind(12), 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;		None
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  1    wreg      _Bool 
  7978 ;; Registers used:
  7979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7987 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;Total ram usage:        6 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; Hardware stack levels required when called:   10
  7992 ;; This function calls:
  7993 ;;		_nwkRouteErrorReceived
  7994 ;;		_nwkTxAckReceived
  7995 ;; This function is called by:
  7996 ;;		_nwkRxInit
  7997 ;;		_nwkRxIndicateFrame
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text47
  8002  004024                     __ptext47:
  8003                           	opt callstack 0
  8004  004024                     _nwkRxServiceDataInd:
  8005                           	opt callstack 15
  8006  004024                     
  8007                           ;nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);nwk/nwk_
      +                          src/nwkRx.c: 258: {;nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
  8008  004024  EE20 F009          	lfsr	2,9
  8009  004028  5012               	movf	nwkRxServiceDataInd@ind^0,w,c
  8010  00402A  26D9               	addwf	fsr2l,f,c
  8011  00402C  5013               	movf	(nwkRxServiceDataInd@ind+1)^0,w,c
  8012  00402E  22DA               	addwfc	fsr2h,f,c
  8013  004030  50DF               	movf	indf2,w,c
  8014  004032  A4D8               	btfss	status,2,c
  8015  004034  EF1E  F020         	goto	u3561
  8016  004038  EF20  F020         	goto	u3560
  8017  00403C                     u3561:
  8018  00403C  EF37  F020         	goto	l5952
  8019  004040                     u3560:
  8020  004040                     l5934:
  8021                           
  8022                           ;nwk/nwk_src/nwkRx.c: 265:     return 0;
  8023  004040  0E00               	movlw	0
  8024  004042  EF5E  F020         	goto	l1170
  8025  004046                     l5938:
  8026                           
  8027                           ;nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
  8028  004046  0060  F048  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
  8029  00404C  0060  F04C  F009   	movff	nwkRxServiceDataInd@ind+1,nwkTxAckReceived@ind+1
  8030  004052  EC8F  F019         	call	_nwkTxAckReceived	;wreg free
  8031  004056  EF5E  F020         	goto	l1170
  8032  00405A                     l5942:
  8033                           
  8034                           ;nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
  8035  00405A  0060  F048  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
  8036  004060  0060  F04C  F00E   	movff	nwkRxServiceDataInd@ind+1,nwkRouteErrorReceived@ind+1
  8037  004066  ECAF  F021         	call	_nwkRouteErrorReceived	;wreg free
  8038  00406A  EF5E  F020         	goto	l1170
  8039  00406E                     l5952:
  8040  00406E  EE20 F007          	lfsr	2,7
  8041  004072  5012               	movf	nwkRxServiceDataInd@ind^0,w,c
  8042  004074  26D9               	addwf	fsr2l,f,c
  8043  004076  5013               	movf	(nwkRxServiceDataInd@ind+1)^0,w,c
  8044  004078  22DA               	addwfc	fsr2h,f,c
  8045  00407A  006F FF78  F014    	movff	postinc2,??_nwkRxServiceDataInd
  8046  004080  006F FF74  F015    	movff	postdec2,??_nwkRxServiceDataInd+1
  8047  004086  0060  F053  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
  8048  00408C  0060  F057  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
  8049  004092  50DF               	movf	indf2,w,c
  8050  004094  6E16               	movwf	(??_nwkRxServiceDataInd+2)^0,c
  8051  004096  6A17               	clrf	(??_nwkRxServiceDataInd+3)^0,c
  8052                           
  8053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8054                           ; Switch size 1, requested type "simple"
  8055                           ; Number of cases is 1, Range of values is 0 to 0
  8056                           ; switch strategies available:
  8057                           ; Name         Instructions Cycles
  8058                           ; simple_byte            4     3 (average)
  8059                           ;	Chosen strategy is simple_byte
  8060  004098  5017               	movf	(??_nwkRxServiceDataInd+3)^0,w,c
  8061  00409A  0A00               	xorlw	0	; case 0
  8062  00409C  B4D8               	btfsc	status,2,c
  8063  00409E  EF53  F020         	goto	l8180
  8064  0040A2  EF20  F020         	goto	l5934
  8065  0040A6                     l8180:
  8066                           
  8067                           ; Switch size 1, requested type "simple"
  8068                           ; Number of cases is 2, Range of values is 0 to 1
  8069                           ; switch strategies available:
  8070                           ; Name         Instructions Cycles
  8071                           ; simple_byte            7     4 (average)
  8072                           ;	Chosen strategy is simple_byte
  8073  0040A6  5016               	movf	(??_nwkRxServiceDataInd+2)^0,w,c
  8074  0040A8  0A00               	xorlw	0	; case 0
  8075  0040AA  B4D8               	btfsc	status,2,c
  8076  0040AC  EF23  F020         	goto	l5938
  8077  0040B0  0A01               	xorlw	1	; case 1
  8078  0040B2  B4D8               	btfsc	status,2,c
  8079  0040B4  EF2D  F020         	goto	l5942
  8080  0040B8  EF20  F020         	goto	l5934
  8081  0040BC                     l1170:
  8082  0040BC  0012               	return		;funcret
  8083  0040BE                     __end_of_nwkRxServiceDataInd:
  8084                           	opt callstack 0
  8085                           
  8086 ;; *************** function _nwkTxAckReceived *****************
  8087 ;; Defined at:
  8088 ;;		line 182 in file "nwk/nwk_src/nwkTx.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  ind             2    7[COMRAM] PTR struct NWK_DataInd_t
  8091 ;;		 -> nwkRxIndicateFrame@ind(12), 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  frame           2   13[COMRAM] PTR struct NwkFrame_t
  8094 ;;		 -> nwkFrameFrames(685), NULL(0), 
  8095 ;;  command         2   11[COMRAM] PTR __pack struct NwkCom
  8096 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      _Bool 
  8099 ;; Registers used:
  8100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;Total ram usage:        8 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    8
  8113 ;; This function calls:
  8114 ;;		_nwkFrameNext
  8115 ;; This function is called by:
  8116 ;;		_nwkRxServiceDataInd
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text48
  8121  00331E                     __ptext48:
  8122                           	opt callstack 0
  8123  00331E                     _nwkTxAckReceived:
  8124                           	opt callstack 16
  8125  00331E                     
  8126                           ;nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);nwk/nwk_src/nwkTx.
      +                          c: 183: {;nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck_t *)ind-
      +                          >data;
  8127  00331E  EE20 F007          	lfsr	2,7
  8128  003322  5008               	movf	nwkTxAckReceived@ind^0,w,c
  8129  003324  26D9               	addwf	fsr2l,f,c
  8130  003326  5009               	movf	(nwkTxAckReceived@ind+1)^0,w,c
  8131  003328  22DA               	addwfc	fsr2h,f,c
  8132  00332A  006F FF78  F00C    	movff	postinc2,nwkTxAckReceived@command
  8133  003330  006F FF74  F00D    	movff	postdec2,nwkTxAckReceived@command+1
  8134  003336                     
  8135                           ;nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
  8136  003336  0E00               	movlw	0
  8137  003338  6E0E               	movwf	nwkTxAckReceived@frame^0,c
  8138  00333A  0E00               	movlw	0
  8139  00333C  6E0F               	movwf	(nwkTxAckReceived@frame+1)^0,c
  8140  00333E                     
  8141                           ;nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
  8142  00333E  EE20 F009          	lfsr	2,9
  8143  003342  5008               	movf	nwkTxAckReceived@ind^0,w,c
  8144  003344  26D9               	addwf	fsr2l,f,c
  8145  003346  5009               	movf	(nwkTxAckReceived@ind+1)^0,w,c
  8146  003348  22DA               	addwfc	fsr2h,f,c
  8147  00334A  0E03               	movlw	3
  8148  00334C  18DE               	xorwf	postinc2,w,c
  8149  00334E  B4D8               	btfsc	status,2,c
  8150  003350  EFAC  F019         	goto	u3311
  8151  003354  EFAE  F019         	goto	u3310
  8152  003358                     u3311:
  8153  003358  EFEF  F019         	goto	l5734
  8154  00335C                     u3310:
  8155  00335C                     l5718:
  8156                           
  8157                           ;nwk/nwk_src/nwkTx.c: 188:     return 0;
  8158  00335C  0E00               	movlw	0
  8159  00335E  EF08  F01A         	goto	l1359
  8160  003362                     l5722:
  8161                           
  8162                           ;nwk/nwk_src/nwkTx.c: 191:   {;nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT_ACK =
      +                          = frame->state && frame->header.nwkSeq == command->seq)
  8163  003362  0060  F03B  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
  8164  003368  0060  F03F  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
  8165  00336E  0E16               	movlw	22
  8166  003370  18DE               	xorwf	postinc2,w,c
  8167  003372  A4D8               	btfss	status,2,c
  8168  003374  EFBE  F019         	goto	u3321
  8169  003378  EFC0  F019         	goto	u3320
  8170  00337C                     u3321:
  8171  00337C  EFEF  F019         	goto	l5734
  8172  003380                     u3320:
  8173  003380  EE20 F001          	lfsr	2,1
  8174  003384  500C               	movf	nwkTxAckReceived@command^0,w,c
  8175  003386  26D9               	addwf	fsr2l,f,c
  8176  003388  500D               	movf	(nwkTxAckReceived@command+1)^0,w,c
  8177  00338A  22DA               	addwfc	fsr2h,f,c
  8178  00338C  EE10 F00C          	lfsr	1,12
  8179  003390  500E               	movf	nwkTxAckReceived@frame^0,w,c
  8180  003392  26E1               	addwf	fsr1l,f,c
  8181  003394  500F               	movf	(nwkTxAckReceived@frame+1)^0,w,c
  8182  003396  22E2               	addwfc	fsr1h,f,c
  8183  003398  50DE               	movf	postinc2,w,c
  8184  00339A  18E6               	xorwf	postinc1,w,c
  8185  00339C  A4D8               	btfss	status,2,c
  8186  00339E  EFD3  F019         	goto	u3331
  8187  0033A2  EFD5  F019         	goto	u3330
  8188  0033A6                     u3331:
  8189  0033A6  EFEF  F019         	goto	l5734
  8190  0033AA                     u3330:
  8191  0033AA                     
  8192                           ;nwk/nwk_src/nwkTx.c: 193:     {;nwk/nwk_src/nwkTx.c: 194:       frame->state = NWK_TX_S
      +                          TATE_CONFIRM;
  8193  0033AA  0060  F03B  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
  8194  0033B0  0060  F03F  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
  8195  0033B6  0E17               	movlw	23
  8196  0033B8  6EDF               	movwf	indf2,c
  8197  0033BA                     
  8198                           ;nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
  8199  0033BA  EE20 F002          	lfsr	2,2
  8200  0033BE  500C               	movf	nwkTxAckReceived@command^0,w,c
  8201  0033C0  26D9               	addwf	fsr2l,f,c
  8202  0033C2  500D               	movf	(nwkTxAckReceived@command+1)^0,w,c
  8203  0033C4  22DA               	addwfc	fsr2h,f,c
  8204  0033C6  EE10 F086          	lfsr	1,134
  8205  0033CA  500E               	movf	nwkTxAckReceived@frame^0,w,c
  8206  0033CC  26E1               	addwf	fsr1l,f,c
  8207  0033CE  500F               	movf	(nwkTxAckReceived@frame+1)^0,w,c
  8208  0033D0  22E2               	addwfc	fsr1h,f,c
  8209  0033D2  006F FF7F FFE7     	movff	indf2,indf1
  8210  0033D8                     
  8211                           ;nwk/nwk_src/nwkTx.c: 196:       return 1;
  8212  0033D8  0E01               	movlw	1
  8213  0033DA  EF08  F01A         	goto	l1359
  8214  0033DE                     l5734:
  8215                           
  8216                           ;nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
  8217  0033DE  0060  F038  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
  8218  0033E4  0060  F03C  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
  8219  0033EA  EC87  F01C         	call	_nwkFrameNext	;wreg free
  8220  0033EE  0060  F008  F00E   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
  8221  0033F4  0060  F00C  F00F   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
  8222  0033FA  500E               	movf	nwkTxAckReceived@frame^0,w,c
  8223  0033FC  100F               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
  8224  0033FE  A4D8               	btfss	status,2,c
  8225  003400  EF04  F01A         	goto	u3341
  8226  003404  EF06  F01A         	goto	u3340
  8227  003408                     u3341:
  8228  003408  EFB1  F019         	goto	l5722
  8229  00340C                     u3340:
  8230  00340C  EFAE  F019         	goto	l5718
  8231  003410                     l1359:
  8232  003410  0012               	return		;funcret
  8233  003412                     __end_of_nwkTxAckReceived:
  8234                           	opt callstack 0
  8235                           
  8236 ;; *************** function _nwkFrameNext *****************
  8237 ;; Defined at:
  8238 ;;		line 111 in file "nwk/nwk_src/nwkFrame.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
  8241 ;;		 -> nwkFrameFrames(685), NULL(0), 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;		None
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
  8246 ;; Registers used:
  8247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8255 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;Total ram usage:        6 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:    7
  8260 ;; This function calls:
  8261 ;;		Nothing
  8262 ;; This function is called by:
  8263 ;;		_nwkRxTaskHandler
  8264 ;;		_nwkTxAckReceived
  8265 ;;		_nwkTxAckWaitTimerHandler
  8266 ;;		_nwkTxDelayTimerHandler
  8267 ;;		_nwkTxTaskHandler
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           	psect	text49
  8272  00390E                     __ptext49:
  8273                           	opt callstack 0
  8274  00390E                     _nwkFrameNext:
  8275                           	opt callstack 20
  8276  00390E                     
  8277                           ;nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);nwk/nwk_src/nw
      +                          kFrame.c: 112: {;nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
  8278  00390E  5002               	movf	nwkFrameNext@frame^0,w,c
  8279  003910  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
  8280  003912  A4D8               	btfss	status,2,c
  8281  003914  EF8E  F01C         	goto	u3101
  8282  003918  EF90  F01C         	goto	u3100
  8283  00391C                     u3101:
  8284  00391C  EF96  F01C         	goto	l5578
  8285  003920                     u3100:
  8286  003920                     
  8287                           ;nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
  8288  003920  0EBD               	movlw	low _nwkFrameFrames
  8289  003922  6E02               	movwf	nwkFrameNext@frame^0,c
  8290  003924  0E03               	movlw	high _nwkFrameFrames
  8291  003926  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
  8292  003928  EF9A  F01C         	goto	l882
  8293  00392C                     l5578:
  8294                           
  8295                           ;nwk/nwk_src/nwkFrame.c: 116:     frame++;
  8296  00392C  0E89               	movlw	137
  8297  00392E  2602               	addwf	nwkFrameNext@frame^0,f,c
  8298  003930  0E00               	movlw	0
  8299  003932  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
  8300  003934                     l882:
  8301                           
  8302                           ;nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
  8303  003934  0EAD               	movlw	173
  8304  003936  6E04               	movwf	??_nwkFrameNext^0,c
  8305  003938  0E02               	movlw	2
  8306  00393A  6E05               	movwf	(??_nwkFrameNext+1)^0,c
  8307  00393C  0EBD               	movlw	low _nwkFrameFrames
  8308  00393E  6E06               	movwf	(??_nwkFrameNext+2)^0,c
  8309  003940  0E03               	movlw	high _nwkFrameFrames
  8310  003942  6E07               	movwf	(??_nwkFrameNext+3)^0,c
  8311  003944  5004               	movf	??_nwkFrameNext^0,w,c
  8312  003946  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
  8313  003948  5005               	movf	(??_nwkFrameNext+1)^0,w,c
  8314  00394A  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
  8315  00394C  5006               	movf	(??_nwkFrameNext+2)^0,w,c
  8316  00394E  5C02               	subwf	nwkFrameNext@frame^0,w,c
  8317  003950  5007               	movf	(??_nwkFrameNext+3)^0,w,c
  8318  003952  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
  8319  003954  A0D8               	btfss	status,0,c
  8320  003956  EFAF  F01C         	goto	u3111
  8321  00395A  EFB1  F01C         	goto	u3110
  8322  00395E                     u3111:
  8323  00395E  EFB3  F01C         	goto	l5582
  8324  003962                     u3110:
  8325  003962  EFE4  F01C         	goto	l5590
  8326  003966                     l5582:
  8327                           
  8328                           ;nwk/nwk_src/nwkFrame.c: 119:   {;nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_STATE_F
      +                          REE != frame->state)
  8329  003966  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
  8330  00396C  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
  8331  003972  50DF               	movf	indf2,w,c
  8332  003974  B4D8               	btfsc	status,2,c
  8333  003976  EFBF  F01C         	goto	u3121
  8334  00397A  EFC1  F01C         	goto	u3120
  8335  00397E                     u3121:
  8336  00397E  EFC9  F01C         	goto	l5588
  8337  003982                     u3120:
  8338  003982                     
  8339                           ;nwk/nwk_src/nwkFrame.c: 121:       return frame;
  8340  003982  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
  8341  003988  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
  8342  00398E  EFE8  F01C         	goto	l886
  8343  003992                     l5588:
  8344                           
  8345                           ;nwk/nwk_src/nwkFrame.c: 122:   }
  8346  003992  0E89               	movlw	137
  8347  003994  2602               	addwf	nwkFrameNext@frame^0,f,c
  8348  003996  0E00               	movlw	0
  8349  003998  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
  8350  00399A  0EAD               	movlw	173
  8351  00399C  6E04               	movwf	??_nwkFrameNext^0,c
  8352  00399E  0E02               	movlw	2
  8353  0039A0  6E05               	movwf	(??_nwkFrameNext+1)^0,c
  8354  0039A2  0EBD               	movlw	low _nwkFrameFrames
  8355  0039A4  6E06               	movwf	(??_nwkFrameNext+2)^0,c
  8356  0039A6  0E03               	movlw	high _nwkFrameFrames
  8357  0039A8  6E07               	movwf	(??_nwkFrameNext+3)^0,c
  8358  0039AA  5004               	movf	??_nwkFrameNext^0,w,c
  8359  0039AC  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
  8360  0039AE  5005               	movf	(??_nwkFrameNext+1)^0,w,c
  8361  0039B0  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
  8362  0039B2  5006               	movf	(??_nwkFrameNext+2)^0,w,c
  8363  0039B4  5C02               	subwf	nwkFrameNext@frame^0,w,c
  8364  0039B6  5007               	movf	(??_nwkFrameNext+3)^0,w,c
  8365  0039B8  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
  8366  0039BA  A0D8               	btfss	status,0,c
  8367  0039BC  EFE2  F01C         	goto	u3131
  8368  0039C0  EFE4  F01C         	goto	u3130
  8369  0039C4                     u3131:
  8370  0039C4  EFB3  F01C         	goto	l5582
  8371  0039C8                     u3130:
  8372  0039C8                     l5590:
  8373                           
  8374                           ;nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
  8375  0039C8  0E00               	movlw	0
  8376  0039CA  6E02               	movwf	?_nwkFrameNext^0,c
  8377  0039CC  0E00               	movlw	0
  8378  0039CE  6E03               	movwf	(?_nwkFrameNext+1)^0,c
  8379  0039D0                     l886:
  8380  0039D0  0012               	return		;funcret
  8381  0039D2                     __end_of_nwkFrameNext:
  8382                           	opt callstack 0
  8383                           
  8384 ;; *************** function _nwkRouteErrorReceived *****************
  8385 ;; Defined at:
  8386 ;;		line 344 in file "nwk/nwk_src/nwkRoute.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  ind             2   12[COMRAM] PTR struct NWK_DataInd_t
  8389 ;;		 -> nwkRxIndicateFrame@ind(12), 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  command         2   15[COMRAM] PTR __pack struct NwkCom
  8392 ;;		 -> nwkFrameFrames(685), NULL(0), 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  1    wreg      _Bool 
  8395 ;; Registers used:
  8396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8405 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;Total ram usage:        5 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    9
  8409 ;; This function calls:
  8410 ;;		_nwkRouteRemove
  8411 ;; This function is called by:
  8412 ;;		_nwkRxServiceDataInd
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text50
  8417  00435E                     __ptext50:
  8418                           	opt callstack 0
  8419  00435E                     _nwkRouteErrorReceived:
  8420                           	opt callstack 15
  8421  00435E                     
  8422                           ;nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);nwk/nwk_sr
      +                          c/nwkRoute.c: 345: {;nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *command = (N
      +                          wkCommandRouteError_t *)ind->data;
  8423  00435E  EE20 F007          	lfsr	2,7
  8424  004362  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
  8425  004364  26D9               	addwf	fsr2l,f,c
  8426  004366  500E               	movf	(nwkRouteErrorReceived@ind+1)^0,w,c
  8427  004368  22DA               	addwfc	fsr2h,f,c
  8428  00436A  006F FF78  F010    	movff	postinc2,nwkRouteErrorReceived@command
  8429  004370  006F FF74  F011    	movff	postdec2,nwkRouteErrorReceived@command+1
  8430                           
  8431                           ;nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
  8432  004376  EE20 F009          	lfsr	2,9
  8433  00437A  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
  8434  00437C  26D9               	addwf	fsr2l,f,c
  8435  00437E  500E               	movf	(nwkRouteErrorReceived@ind+1)^0,w,c
  8436  004380  22DA               	addwfc	fsr2h,f,c
  8437  004382  0E06               	movlw	6
  8438  004384  18DE               	xorwf	postinc2,w,c
  8439  004386  B4D8               	btfsc	status,2,c
  8440  004388  EFC8  F021         	goto	u3301
  8441  00438C  EFCA  F021         	goto	u3300
  8442  004390                     u3301:
  8443  004390  EFCD  F021         	goto	l5706
  8444  004394                     u3300:
  8445  004394                     
  8446                           ;nwk/nwk_src/nwkRoute.c: 349:     return 0;
  8447  004394  0E00               	movlw	0
  8448  004396  EFE4  F021         	goto	l1025
  8449  00439A                     l5706:
  8450                           
  8451                           ;nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
  8452  00439A  EE20 F003          	lfsr	2,3
  8453  00439E  5010               	movf	nwkRouteErrorReceived@command^0,w,c
  8454  0043A0  26D9               	addwf	fsr2l,f,c
  8455  0043A2  5011               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
  8456  0043A4  22DA               	addwfc	fsr2h,f,c
  8457  0043A6  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
  8458  0043AC  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
  8459  0043B2  EE20 F005          	lfsr	2,5
  8460  0043B6  5010               	movf	nwkRouteErrorReceived@command^0,w,c
  8461  0043B8  26D9               	addwf	fsr2l,f,c
  8462  0043BA  5011               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
  8463  0043BC  22DA               	addwfc	fsr2h,f,c
  8464  0043BE  50DF               	movf	indf2,w,c
  8465  0043C0  6E0A               	movwf	nwkRouteRemove@multicast^0,c
  8466  0043C2  EC33  F024         	call	_nwkRouteRemove	;wreg free
  8467  0043C6                     
  8468                           ;nwk/nwk_src/nwkRoute.c: 353:   return 1;
  8469  0043C6  0E01               	movlw	1
  8470  0043C8                     l1025:
  8471  0043C8  0012               	return		;funcret
  8472  0043CA                     __end_of_nwkRouteErrorReceived:
  8473                           	opt callstack 0
  8474                           
  8475 ;; *************** function _nwkRouteRemove *****************
  8476 ;; Defined at:
  8477 ;;		line 183 in file "nwk/nwk_src/nwkRoute.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;  dst             2    7[COMRAM] unsigned short 
  8480 ;;  multicast       1    9[COMRAM] unsigned char 
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
  8483 ;;		 -> nwkRouteTable(70), NULL(0), 
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8493 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;Total ram usage:        5 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:    8
  8500 ;; This function calls:
  8501 ;;		_NWK_RouteFindEntry
  8502 ;;		_NWK_RouteFreeEntry
  8503 ;; This function is called by:
  8504 ;;		_nwkRouteErrorReceived
  8505 ;;		_nwkRxRejectDuplicate
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text51
  8510  004866                     __ptext51:
  8511                           	opt callstack 0
  8512  004866                     _nwkRouteRemove:
  8513                           	opt callstack 17
  8514  004866                     
  8515                           ;nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);nwk/n
      +                          wk_src/nwkRoute.c: 184: {;nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t *entry;;n
      +                          wk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
  8516  004866  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
  8517  00486C  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
  8518  004872  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
  8519  004878  EC5F  F020         	call	_NWK_RouteFindEntry	;wreg free
  8520  00487C  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
  8521  004882  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
  8522  004888                     
  8523                           ;nwk/nwk_src/nwkRoute.c: 188:   if (entry)
  8524  004888  500B               	movf	nwkRouteRemove@entry^0,w,c
  8525  00488A  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
  8526  00488C  B4D8               	btfsc	status,2,c
  8527  00488E  EF4B  F024         	goto	u3171
  8528  004892  EF4D  F024         	goto	u3170
  8529  004896                     u3171:
  8530  004896  EF55  F024         	goto	l978
  8531  00489A                     u3170:
  8532  00489A                     
  8533                           ;nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
  8534  00489A  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
  8535  0048A0  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
  8536  0048A6  EC78  F024         	call	_NWK_RouteFreeEntry	;wreg free
  8537  0048AA                     l978:
  8538  0048AA  0012               	return		;funcret
  8539  0048AC                     __end_of_nwkRouteRemove:
  8540                           	opt callstack 0
  8541                           
  8542 ;; *************** function _NWK_RouteFreeEntry *****************
  8543 ;; Defined at:
  8544 ;;		line 134 in file "nwk/nwk_src/nwkRoute.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
  8547 ;;		 -> nwkRouteTable(70), NULL(0), 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;Total ram usage:        2 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:    7
  8566 ;; This function calls:
  8567 ;;		Nothing
  8568 ;; This function is called by:
  8569 ;;		_nwkRouteRemove
  8570 ;;		_nwkRouteFrameSent
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           	psect	text52
  8575  0048F0                     __ptext52:
  8576                           	opt callstack 0
  8577  0048F0                     _NWK_RouteFreeEntry:
  8578                           	opt callstack 19
  8579  0048F0                     
  8580                           ;nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);nwk/
      +                          nwk_src/nwkRoute.c: 135: {;nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
  8581  0048F0  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
  8582  0048F6  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
  8583  0048FC  A0DF               	btfss	indf2,0,c
  8584  0048FE  EF83  F024         	goto	u3091
  8585  004902  EF85  F024         	goto	u3090
  8586  004906                     u3091:
  8587  004906  EF87  F024         	goto	l5572
  8588  00490A                     u3090:
  8589  00490A  EF99  F024         	goto	l963
  8590  00490E                     l5572:
  8591                           
  8592                           ;nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
  8593  00490E  EE20 F001          	lfsr	2,1
  8594  004912  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
  8595  004914  26D9               	addwf	fsr2l,f,c
  8596  004916  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
  8597  004918  22DA               	addwfc	fsr2h,f,c
  8598  00491A  0EFF               	movlw	255
  8599  00491C  6EDE               	movwf	postinc2,c
  8600  00491E  0EFF               	movlw	255
  8601  004920  6EDD               	movwf	postdec2,c
  8602                           
  8603                           ;nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
  8604  004922  EE20 F005          	lfsr	2,5
  8605  004926  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
  8606  004928  26D9               	addwf	fsr2l,f,c
  8607  00492A  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
  8608  00492C  22DA               	addwfc	fsr2h,f,c
  8609  00492E  0E00               	movlw	0
  8610  004930  6EDF               	movwf	indf2,c
  8611  004932                     l963:
  8612  004932  0012               	return		;funcret
  8613  004934                     __end_of_NWK_RouteFreeEntry:
  8614                           	opt callstack 0
  8615                           
  8616 ;; *************** function _nwkRouteFrame *****************
  8617 ;; Defined at:
  8618 ;;		line 299 in file "nwk/nwk_src/nwkRoute.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
  8621 ;;		 -> nwkFrameFrames(685), NULL(0), 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
  8624 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8638 ;;Total ram usage:        4 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:   12
  8641 ;; This function calls:
  8642 ;;		_NWK_RouteNextHop
  8643 ;;		_nwkFrameFree
  8644 ;;		_nwkRouteSendRouteError
  8645 ;;		_nwkTxFrame
  8646 ;; This function is called by:
  8647 ;;		_nwkRxTaskHandler
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text53
  8652  003500                     __ptext53:
  8653                           	opt callstack 0
  8654  003500                     _nwkRouteFrame:
  8655                           	opt callstack 15
  8656  003500                     
  8657                           ;nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);nwk/nwk_src/nwkRoute
      +                          .c: 300: {;nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->header;
  8658  003500  0E02               	movlw	2
  8659  003502  2433               	addwf	nwkRouteFrame@frame^0,w,c
  8660  003504  6E35               	movwf	nwkRouteFrame@header^0,c
  8661  003506  0E00               	movlw	0
  8662  003508  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
  8663  00350A  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
  8664  00350C                     
  8665                           ;nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, heade
      +                          r->nwkFcf.multicast))
  8666  00350C  EE20 F00D          	lfsr	2,13
  8667  003510  5035               	movf	nwkRouteFrame@header^0,w,c
  8668  003512  26D9               	addwf	fsr2l,f,c
  8669  003514  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
  8670  003516  22DA               	addwfc	fsr2h,f,c
  8671  003518  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
  8672  00351E  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
  8673  003524  EE20 F009          	lfsr	2,9
  8674  003528  5035               	movf	nwkRouteFrame@header^0,w,c
  8675  00352A  26D9               	addwf	fsr2l,f,c
  8676  00352C  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
  8677  00352E  22DA               	addwfc	fsr2h,f,c
  8678  003530  0E00               	movlw	0
  8679  003532  B6DF               	btfsc	indf2,3,c
  8680  003534  0E01               	movlw	1
  8681  003536  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
  8682  003538  EC27  F023         	call	_NWK_RouteNextHop	;wreg free
  8683  00353C  2808               	incf	?_NWK_RouteNextHop^0,w,c
  8684  00353E  E108               	bnz	u4570
  8685  003540  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
  8686  003542  B4D8               	btfsc	status,2,c
  8687  003544  EFA6  F01A         	goto	u4571
  8688  003548  EFA8  F01A         	goto	u4570
  8689  00354C                     u4571:
  8690  00354C  EFC4  F01A         	goto	l6714
  8691  003550                     u4570:
  8692  003550                     
  8693                           ;nwk/nwk_src/nwkRoute.c: 304:   {;nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confirm = (
      +                          (void*)0);
  8694  003550  EE20 F087          	lfsr	2,135
  8695  003554  5033               	movf	nwkRouteFrame@frame^0,w,c
  8696  003556  26D9               	addwf	fsr2l,f,c
  8697  003558  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
  8698  00355A  22DA               	addwfc	fsr2h,f,c
  8699  00355C  0E00               	movlw	0
  8700  00355E  6EDE               	movwf	postinc2,c
  8701  003560  0E00               	movlw	0
  8702  003562  6EDD               	movwf	postdec2,c
  8703                           
  8704                           ;nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
  8705  003564  EE20 F086          	lfsr	2,134
  8706  003568  5033               	movf	nwkRouteFrame@frame^0,w,c
  8707  00356A  26D9               	addwf	fsr2l,f,c
  8708  00356C  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
  8709  00356E  22DA               	addwfc	fsr2h,f,c
  8710  003570  0E02               	movlw	2
  8711  003572  6EDF               	movwf	indf2,c
  8712  003574                     
  8713                           ;nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
  8714  003574  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
  8715  00357A  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
  8716  003580  EC60  F00D         	call	_nwkTxFrame	;wreg free
  8717                           
  8718                           ;nwk/nwk_src/nwkRoute.c: 308:   }
  8719  003584  EFF0  F01A         	goto	l1017
  8720  003588                     l6714:
  8721                           
  8722                           ;nwk/nwk_src/nwkRoute.c: 310:   {;nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRouteErro
      +                          r(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
  8723  003588  EE20 F00B          	lfsr	2,11
  8724  00358C  5035               	movf	nwkRouteFrame@header^0,w,c
  8725  00358E  26D9               	addwf	fsr2l,f,c
  8726  003590  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
  8727  003592  22DA               	addwfc	fsr2h,f,c
  8728  003594  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
  8729  00359A  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
  8730  0035A0  EE20 F00D          	lfsr	2,13
  8731  0035A4  5035               	movf	nwkRouteFrame@header^0,w,c
  8732  0035A6  26D9               	addwf	fsr2l,f,c
  8733  0035A8  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
  8734  0035AA  22DA               	addwfc	fsr2h,f,c
  8735  0035AC  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
  8736  0035B2  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
  8737  0035B8  EE20 F009          	lfsr	2,9
  8738  0035BC  5035               	movf	nwkRouteFrame@header^0,w,c
  8739  0035BE  26D9               	addwf	fsr2l,f,c
  8740  0035C0  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
  8741  0035C2  22DA               	addwfc	fsr2h,f,c
  8742  0035C4  0E00               	movlw	0
  8743  0035C6  B6DF               	btfsc	indf2,3,c
  8744  0035C8  0E01               	movlw	1
  8745  0035CA  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
  8746  0035CC  EC09  F01A         	call	_nwkRouteSendRouteError	;wreg free
  8747  0035D0                     
  8748                           ;nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
  8749  0035D0  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
  8750  0035D6  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
  8751  0035DC  ECB2  F027         	call	_nwkFrameFree	;wreg free
  8752  0035E0                     l1017:
  8753  0035E0  0012               	return		;funcret
  8754  0035E2                     __end_of_nwkRouteFrame:
  8755                           	opt callstack 0
  8756                           
  8757 ;; *************** function _nwkRouteSendRouteError *****************
  8758 ;; Defined at:
  8759 ;;		line 318 in file "nwk/nwk_src/nwkRoute.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  src             2   41[COMRAM] unsigned short 
  8762 ;;  dst             2   43[COMRAM] unsigned short 
  8763 ;;  multicast       1   45[COMRAM] unsigned char 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
  8766 ;;		 -> nwkFrameFrames(685), NULL(0), 
  8767 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
  8768 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8778 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;Total ram usage:        9 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:   11
  8785 ;; This function calls:
  8786 ;;		_nwkFrameAlloc
  8787 ;;		_nwkFrameCommandInit
  8788 ;;		_nwkTxFrame
  8789 ;; This function is called by:
  8790 ;;		_nwkRouteFrame
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text54
  8795  003412                     __ptext54:
  8796                           	opt callstack 0
  8797  003412                     _nwkRouteSendRouteError:
  8798                           	opt callstack 15
  8799  003412                     
  8800                           ;nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16_t 
      +                          dst, uint8_t multicast);nwk/nwk_src/nwkRoute.c: 319: {;nwk/nwk_src/nwkRoute.c: 320:   Nw
      +                          kFrame_t *frame;;nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *command;;nwk/nwk
      +                          _src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
  8801  003412  ECBF  F01B         	call	_nwkFrameAlloc	;wreg free
  8802  003416  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
  8803  00341C  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
  8804  003422  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
  8805  003424  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
  8806  003426  A4D8               	btfss	status,2,c
  8807  003428  EF18  F01A         	goto	u3901
  8808  00342C  EF1A  F01A         	goto	u3900
  8809  003430                     u3901:
  8810  003430  EF1C  F01A         	goto	l6214
  8811  003434                     u3900:
  8812  003434  EF7F  F01A         	goto	l1021
  8813  003438                     l6214:
  8814                           
  8815                           ;nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
  8816  003438  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
  8817  00343E  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
  8818  003444  ECFF  F024         	call	_nwkFrameCommandInit	;wreg free
  8819  003448                     
  8820                           ;nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
  8821  003448  EE20 F001          	lfsr	2,1
  8822  00344C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
  8823  00344E  26D9               	addwf	fsr2l,f,c
  8824  003450  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
  8825  003452  22DA               	addwfc	fsr2h,f,c
  8826  003454  0E06               	movlw	6
  8827  003456  26DF               	addwf	indf2,f,c
  8828  003458                     
  8829                           ;nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
  8830  003458  EE20 F087          	lfsr	2,135
  8831  00345C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
  8832  00345E  26D9               	addwf	fsr2l,f,c
  8833  003460  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
  8834  003462  22DA               	addwfc	fsr2h,f,c
  8835  003464  0E00               	movlw	0
  8836  003466  6EDE               	movwf	postinc2,c
  8837  003468  0E00               	movlw	0
  8838  00346A  6EDD               	movwf	postdec2,c
  8839  00346C                     
  8840                           ;nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
  8841  00346C  EE20 F00F          	lfsr	2,15
  8842  003470  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
  8843  003472  26D9               	addwf	fsr2l,f,c
  8844  003474  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
  8845  003476  22DA               	addwfc	fsr2h,f,c
  8846  003478  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
  8847  00347E  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
  8848  003484                     
  8849                           ;nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
  8850  003484  EE20 F081          	lfsr	2,129
  8851  003488  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
  8852  00348A  26D9               	addwf	fsr2l,f,c
  8853  00348C  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
  8854  00348E  22DA               	addwfc	fsr2h,f,c
  8855  003490  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
  8856  003496  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
  8857  00349C                     
  8858                           ;nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
  8859  00349C  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
  8860  0034A2  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
  8861  0034A8  0E01               	movlw	1
  8862  0034AA  6EDF               	movwf	indf2,c
  8863  0034AC                     
  8864                           ;nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
  8865  0034AC  EE20 F001          	lfsr	2,1
  8866  0034B0  502F               	movf	nwkRouteSendRouteError@command^0,w,c
  8867  0034B2  26D9               	addwf	fsr2l,f,c
  8868  0034B4  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
  8869  0034B6  22DA               	addwfc	fsr2h,f,c
  8870  0034B8  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
  8871  0034BE  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
  8872  0034C4                     
  8873                           ;nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
  8874  0034C4  EE20 F003          	lfsr	2,3
  8875  0034C8  502F               	movf	nwkRouteSendRouteError@command^0,w,c
  8876  0034CA  26D9               	addwf	fsr2l,f,c
  8877  0034CC  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
  8878  0034CE  22DA               	addwfc	fsr2h,f,c
  8879  0034D0  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
  8880  0034D6  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
  8881  0034DC                     
  8882                           ;nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
  8883  0034DC  EE20 F005          	lfsr	2,5
  8884  0034E0  502F               	movf	nwkRouteSendRouteError@command^0,w,c
  8885  0034E2  26D9               	addwf	fsr2l,f,c
  8886  0034E4  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
  8887  0034E6  22DA               	addwfc	fsr2h,f,c
  8888  0034E8  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
  8889  0034EE                     
  8890                           ;nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
  8891  0034EE  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
  8892  0034F4  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
  8893  0034FA  EC60  F00D         	call	_nwkTxFrame	;wreg free
  8894  0034FE                     l1021:
  8895  0034FE  0012               	return		;funcret
  8896  003500                     __end_of_nwkRouteSendRouteError:
  8897                           	opt callstack 0
  8898                           
  8899 ;; *************** function _nwkFrameCommandInit *****************
  8900 ;; Defined at:
  8901 ;;		line 131 in file "nwk/nwk_src/nwkFrame.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
  8904 ;;		 -> nwkFrameFrames(685), NULL(0), 
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;		None
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  1    wreg      void 
  8909 ;; Registers used:
  8910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8920 ;;Total ram usage:        2 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:    7
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_nwkRouteSendRouteError
  8927 ;;		_nwkRxSendAck
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           	psect	text55
  8932  0049FE                     __ptext55:
  8933                           	opt callstack 0
  8934  0049FE                     _nwkFrameCommandInit:
  8935                           	opt callstack 18
  8936  0049FE                     
  8937                           ;nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);nwk/nwk_src/nw
      +                          kFrame.c: 132: {;nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_STATUS;
  8938  0049FE  EE20 F083          	lfsr	2,131
  8939  004A02  5002               	movf	nwkFrameCommandInit@frame^0,w,c
  8940  004A04  26D9               	addwf	fsr2l,f,c
  8941  004A06  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
  8942  004A08  22DA               	addwfc	fsr2h,f,c
  8943  004A0A  0E00               	movlw	0
  8944  004A0C  6EDF               	movwf	indf2,c
  8945                           
  8946                           ;nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
  8947  004A0E  0100               	movlb	0	; () banked
  8948  004A10  2B64               	incf	(_nwkIb+4)& (0+255),f,b
  8949  004A12  EE20 F00C          	lfsr	2,12
  8950  004A16  5002               	movf	nwkFrameCommandInit@frame^0,w,c
  8951  004A18  26D9               	addwf	fsr2l,f,c
  8952  004A1A  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
  8953  004A1C  22DA               	addwfc	fsr2h,f,c
  8954  004A1E  0060  F193  FFDF   	movff	_nwkIb+4,indf2
  8955                           
  8956                           ;nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
  8957  004A24  EE20 F00D          	lfsr	2,13
  8958  004A28  5002               	movf	nwkFrameCommandInit@frame^0,w,c
  8959  004A2A  26D9               	addwf	fsr2l,f,c
  8960  004A2C  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
  8961  004A2E  22DA               	addwfc	fsr2h,f,c
  8962  004A30  0060  F183  FFDE   	movff	_nwkIb,postinc2
  8963  004A36  0060  F187  FFDD   	movff	_nwkIb+1,postdec2
  8964  004A3C                     
  8965                           ; BSR set to: 0
  8966  004A3C  0012               	return		;funcret
  8967  004A3E                     __end_of_nwkFrameCommandInit:
  8968                           	opt callstack 0
  8969                           
  8970 ;; *************** function _nwkFrameFree *****************
  8971 ;; Defined at:
  8972 ;;		line 100 in file "nwk/nwk_src/nwkFrame.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
  8975 ;;		 -> nwkFrameFrames(685), NULL(0), 
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;		None
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  1    wreg      void 
  8980 ;; Registers used:
  8981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;Total ram usage:        2 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    7
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_nwkDataReqTxConf
  8998 ;;		_nwkRouteFrame
  8999 ;;		_nwkRxTaskHandler
  9000 ;;		_nwkTxTaskHandler
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text56
  9005  004F64                     __ptext56:
  9006                           	opt callstack 0
  9007  004F64                     _nwkFrameFree:
  9008                           	opt callstack 20
  9009  004F64                     
  9010                           ;nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);nwk/nwk_src/nwkFrame.
      +                          c: 101: {;nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
  9011  004F64  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
  9012  004F6A  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
  9013  004F70  0E00               	movlw	0
  9014  004F72  6EDF               	movwf	indf2,c
  9015  004F74                     
  9016                           ;nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
  9017  004F74  0100               	movlb	0	; () banked
  9018  004F76  0786               	decf	(_nwkIb+38)& (0+255),f,b
  9019  004F78  A0D8               	btfss	status,0,c
  9020  004F7A  0787               	decf	(_nwkIb+39)& (0+255),f,b
  9021  004F7C                     
  9022                           ; BSR set to: 0
  9023  004F7C  0012               	return		;funcret
  9024  004F7E                     __end_of_nwkFrameFree:
  9025                           	opt callstack 0
  9026                           
  9027 ;; *************** function _nwkDataReqTaskHandler *****************
  9028 ;; Defined at:
  9029 ;;		line 209 in file "nwk/nwk_src/nwkDataReq.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;		None
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
  9034 ;;		 -> nwkDataReq(19), NULL(0), 
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      void 
  9037 ;; Registers used:
  9038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9048 ;;Total ram usage:        4 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; Hardware stack levels required when called:   12
  9051 ;; This function calls:
  9052 ;;		_nwkDataReqConfirm
  9053 ;;		_nwkDataReqSendFrame
  9054 ;; This function is called by:
  9055 ;;		_NWK_TaskHandler
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           	psect	text57
  9060  003F82                     __ptext57:
  9061                           	opt callstack 0
  9062  003F82                     _nwkDataReqTaskHandler:
  9063                           	opt callstack 16
  9064  003F82                     
  9065                           ;nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req = 
      +                          req->next)
  9066  003F82  0060  F0FC  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
  9067  003F88  0060  F100  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
  9068  003F8E  EF08  F020         	goto	l7172
  9069  003F92                     l7154:
  9070                           
  9071                           ;nwk/nwk_src/nwkDataReq.c: 216:       {;nwk/nwk_src/nwkDataReq.c: 217:         nwkDataRe
      +                          qSendFrame(req);
  9072  003F92  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
  9073  003F98  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
  9074  003F9E  ECF6  F004         	call	_nwkDataReqSendFrame	;wreg free
  9075  003FA2  EF11  F020         	goto	l850
  9076  003FA6                     l7160:
  9077                           
  9078                           ;nwk/nwk_src/nwkDataReq.c: 225:       {;nwk/nwk_src/nwkDataReq.c: 226:         nwkDataRe
      +                          qConfirm(req);
  9079  003FA6  0060  F0CC  F002   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
  9080  003FAC  0060  F0D0  F003   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
  9081  003FB2  EC24  F01C         	call	_nwkDataReqConfirm	;wreg free
  9082  003FB6  EF11  F020         	goto	l850
  9083  003FBA                     l7168:
  9084  003FBA  EE20 F004          	lfsr	2,4
  9085  003FBE  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
  9086  003FC0  26D9               	addwf	fsr2l,f,c
  9087  003FC2  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
  9088  003FC4  22DA               	addwfc	fsr2h,f,c
  9089  003FC6  50DF               	movf	indf2,w,c
  9090  003FC8  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
  9091  003FCA  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
  9092                           
  9093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9094                           ; Switch size 1, requested type "simple"
  9095                           ; Number of cases is 1, Range of values is 0 to 0
  9096                           ; switch strategies available:
  9097                           ; Name         Instructions Cycles
  9098                           ; simple_byte            4     3 (average)
  9099                           ;	Chosen strategy is simple_byte
  9100  003FCC  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
  9101  003FCE  0A00               	xorlw	0	; case 0
  9102  003FD0  B4D8               	btfsc	status,2,c
  9103  003FD2  EFED  F01F         	goto	l8182
  9104  003FD6  EFFC  F01F         	goto	l7170
  9105  003FDA                     l8182:
  9106                           
  9107                           ; Switch size 1, requested type "simple"
  9108                           ; Number of cases is 3, Range of values is 0 to 2
  9109                           ; switch strategies available:
  9110                           ; Name         Instructions Cycles
  9111                           ; simple_byte           10     6 (average)
  9112                           ;	Chosen strategy is simple_byte
  9113  003FDA  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
  9114  003FDC  0A00               	xorlw	0	; case 0
  9115  003FDE  B4D8               	btfsc	status,2,c
  9116  003FE0  EFC9  F01F         	goto	l7154
  9117  003FE4  0A01               	xorlw	1	; case 1
  9118  003FE6  B4D8               	btfsc	status,2,c
  9119  003FE8  EFFC  F01F         	goto	l7170
  9120  003FEC  0A03               	xorlw	3	; case 2
  9121  003FEE  B4D8               	btfsc	status,2,c
  9122  003FF0  EFD3  F01F         	goto	l7160
  9123  003FF4  EFFC  F01F         	goto	l7170
  9124  003FF8                     l7170:
  9125                           
  9126                           ;nwk/nwk_src/nwkDataReq.c: 233:   }
  9127  003FF8  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
  9128  003FFE  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
  9129  004004  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
  9130  00400A  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
  9131  004010                     l7172:
  9132  004010  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
  9133  004012  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
  9134  004014  A4D8               	btfss	status,2,c
  9135  004016  EF0F  F020         	goto	u5151
  9136  00401A  EF11  F020         	goto	u5150
  9137  00401E                     u5151:
  9138  00401E  EFDD  F01F         	goto	l7168
  9139  004022                     u5150:
  9140  004022                     l850:
  9141  004022  0012               	return		;funcret
  9142  004024                     __end_of_nwkDataReqTaskHandler:
  9143                           	opt callstack 0
  9144                           
  9145 ;; *************** function _nwkDataReqSendFrame *****************
  9146 ;; Defined at:
  9147 ;;		line 111 in file "nwk/nwk_src/nwkDataReq.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
  9150 ;;		 -> nwkDataReq(19), NULL(0), 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
  9153 ;;		 -> nwkFrameFrames(685), NULL(0), 
  9154 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
  9155 ;;		 -> nwkFrameFrames(685), NULL(0), 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1    wreg      void 
  9158 ;; Registers used:
  9159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;Total ram usage:        7 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:   11
  9172 ;; This function calls:
  9173 ;;		_memcpy
  9174 ;;		_nwkFrameAlloc
  9175 ;;		_nwkTxFrame
  9176 ;; This function is called by:
  9177 ;;		_nwkDataReqTaskHandler
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text58
  9182  0009EC                     __ptext58:
  9183                           	opt callstack 0
  9184  0009EC                     _nwkDataReqSendFrame:
  9185                           	opt callstack 16
  9186  0009EC                     
  9187                           ;nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);nwk/
      +                          nwk_src/nwkDataReq.c: 112: {;nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame;;nwk/nwk
      +                          _src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
  9188  0009EC  ECBF  F01B         	call	_nwkFrameAlloc	;wreg free
  9189  0009F0  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
  9190  0009F6  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
  9191  0009FC  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9192  0009FE  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9193  000A00  A4D8               	btfss	status,2,c
  9194  000A02  EF05  F005         	goto	u4371
  9195  000A06  EF07  F005         	goto	u4370
  9196  000A0A                     u4371:
  9197  000A0A  EF19  F005         	goto	l6630
  9198  000A0E                     u4370:
  9199  000A0E                     
  9200                           ;nwk/nwk_src/nwkDataReq.c: 116:   {;nwk/nwk_src/nwkDataReq.c: 117:     req->state = NWK_
      +                          DATA_REQ_STATE_CONFIRM;
  9201  000A0E  EE20 F004          	lfsr	2,4
  9202  000A12  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9203  000A14  26D9               	addwf	fsr2l,f,c
  9204  000A16  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9205  000A18  22DA               	addwfc	fsr2h,f,c
  9206  000A1A  0E02               	movlw	2
  9207  000A1C  6EDF               	movwf	indf2,c
  9208                           
  9209                           ;nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
  9210  000A1E  EE20 F011          	lfsr	2,17
  9211  000A22  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9212  000A24  26D9               	addwf	fsr2l,f,c
  9213  000A26  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9214  000A28  22DA               	addwfc	fsr2h,f,c
  9215  000A2A  0E02               	movlw	2
  9216  000A2C  6EDF               	movwf	indf2,c
  9217  000A2E  EFA9  F006         	goto	l827
  9218  000A32                     l6630:
  9219                           
  9220                           ;nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
  9221  000A32  EE20 F002          	lfsr	2,2
  9222  000A36  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9223  000A38  26D9               	addwf	fsr2l,f,c
  9224  000A3A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9225  000A3C  22DA               	addwfc	fsr2h,f,c
  9226  000A3E  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
  9227  000A44  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
  9228                           
  9229                           ;nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
  9230  000A4A  EE20 F004          	lfsr	2,4
  9231  000A4E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9232  000A50  26D9               	addwf	fsr2l,f,c
  9233  000A52  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9234  000A54  22DA               	addwfc	fsr2h,f,c
  9235  000A56  0E01               	movlw	1
  9236  000A58  6EDF               	movwf	indf2,c
  9237                           
  9238                           ;nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
  9239  000A5A  EE20 F087          	lfsr	2,135
  9240  000A5E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9241  000A60  26D9               	addwf	fsr2l,f,c
  9242  000A62  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9243  000A64  22DA               	addwfc	fsr2h,f,c
  9244  000A66  0E96               	movlw	low _nwkDataReqTxConf
  9245  000A68  6EDE               	movwf	postinc2,c
  9246  000A6A  0E3A               	movlw	high _nwkDataReqTxConf
  9247  000A6C  6EDD               	movwf	postdec2,c
  9248  000A6E                     
  9249                           ;nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAST_P
      +                          AN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
  9250  000A6E  EE20 F086          	lfsr	2,134
  9251  000A72  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9252  000A74  26D9               	addwf	fsr2l,f,c
  9253  000A76  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9254  000A78  22DA               	addwfc	fsr2h,f,c
  9255  000A7A  EE10 F009          	lfsr	1,9
  9256  000A7E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9257  000A80  26E1               	addwf	fsr1l,f,c
  9258  000A82  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9259  000A84  22E2               	addwfc	fsr1h,f,c
  9260  000A86  B4E7               	btfsc	indf1,2,c
  9261  000A88  EF48  F005         	goto	u4381
  9262  000A8C  EF4B  F005         	goto	u4380
  9263  000A90                     u4381:
  9264  000A90  0E01               	movlw	1
  9265  000A92  EF4C  F005         	goto	u4390
  9266  000A96                     u4380:
  9267  000A96  0E00               	movlw	0
  9268  000A98                     u4390:
  9269  000A98  6EDF               	movwf	indf2,c
  9270  000A9A                     
  9271                           ;nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NWK_O
      +                          PT_ACK_REQUEST ? 1 : 0;
  9272  000A9A  EE20 F009          	lfsr	2,9
  9273  000A9E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9274  000AA0  26D9               	addwf	fsr2l,f,c
  9275  000AA2  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9276  000AA4  22DA               	addwfc	fsr2h,f,c
  9277  000AA6  B0DF               	btfsc	indf2,0,c
  9278  000AA8  EF58  F005         	goto	u4401
  9279  000AAC  EF5C  F005         	goto	u4400
  9280  000AB0                     u4401:
  9281  000AB0  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
  9282  000AB2  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
  9283  000AB4  EF5D  F005         	goto	u4418
  9284  000AB8                     u4400:
  9285  000AB8  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
  9286  000ABA                     u4418:
  9287  000ABA  EE20 F00B          	lfsr	2,11
  9288  000ABE  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9289  000AC0  26D9               	addwf	fsr2l,f,c
  9290  000AC2  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9291  000AC4  22DA               	addwfc	fsr2h,f,c
  9292  000AC6  50DF               	movf	indf2,w,c
  9293  000AC8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9294  000ACA  0BFE               	andlw	-2
  9295  000ACC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9296  000ACE  6EDF               	movwf	indf2,c
  9297  000AD0                     
  9298                           ;nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK_OP
      +                          T_LINK_LOCAL ? 1 : 0;
  9299  000AD0  EE20 F009          	lfsr	2,9
  9300  000AD4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9301  000AD6  26D9               	addwf	fsr2l,f,c
  9302  000AD8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9303  000ADA  22DA               	addwfc	fsr2h,f,c
  9304  000ADC  B6DF               	btfsc	indf2,3,c
  9305  000ADE  EF73  F005         	goto	u4421
  9306  000AE2  EF77  F005         	goto	u4420
  9307  000AE6                     u4421:
  9308  000AE6  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
  9309  000AE8  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
  9310  000AEA  EF78  F005         	goto	u4438
  9311  000AEE                     u4420:
  9312  000AEE  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
  9313  000AF0                     u4438:
  9314  000AF0  EE20 F00B          	lfsr	2,11
  9315  000AF4  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9316  000AF6  26D9               	addwf	fsr2l,f,c
  9317  000AF8  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9318  000AFA  22DA               	addwfc	fsr2h,f,c
  9319  000AFC  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
  9320  000AFE  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
  9321  000B00  50DF               	movf	indf2,w,c
  9322  000B02  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9323  000B04  0BFB               	andlw	-5
  9324  000B06  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9325  000B08  6EDF               	movwf	indf2,c
  9326  000B0A                     
  9327                           ;nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK_OP
      +                          T_MULTICAST ? 1 : 0;
  9328  000B0A  EE20 F009          	lfsr	2,9
  9329  000B0E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9330  000B10  26D9               	addwf	fsr2l,f,c
  9331  000B12  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9332  000B14  22DA               	addwfc	fsr2h,f,c
  9333  000B16  B8DF               	btfsc	indf2,4,c
  9334  000B18  EF90  F005         	goto	u4441
  9335  000B1C  EF94  F005         	goto	u4440
  9336  000B20                     u4441:
  9337  000B20  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
  9338  000B22  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
  9339  000B24  EF95  F005         	goto	u4458
  9340  000B28                     u4440:
  9341  000B28  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
  9342  000B2A                     u4458:
  9343  000B2A  EE20 F00B          	lfsr	2,11
  9344  000B2E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9345  000B30  26D9               	addwf	fsr2l,f,c
  9346  000B32  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9347  000B34  22DA               	addwfc	fsr2h,f,c
  9348  000B36  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
  9349  000B38  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
  9350  000B3A  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
  9351  000B3C  50DF               	movf	indf2,w,c
  9352  000B3E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9353  000B40  0BF7               	andlw	-9
  9354  000B42  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9355  000B44  6EDF               	movwf	indf2,c
  9356  000B46                     
  9357                           ;nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
  9358  000B46  EE20 F00B          	lfsr	2,11
  9359  000B4A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9360  000B4C  26D9               	addwf	fsr2l,f,c
  9361  000B4E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9362  000B50  22DA               	addwfc	fsr2h,f,c
  9363  000B52  A6DF               	btfss	indf2,3,c
  9364  000B54  EFAE  F005         	goto	u4461
  9365  000B58  EFB0  F005         	goto	u4460
  9366  000B5C                     u4461:
  9367  000B5C  EF1C  F006         	goto	l828
  9368  000B60                     u4460:
  9369  000B60                     
  9370                           ;nwk/nwk_src/nwkDataReq.c: 139:   {;nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMulticast
      +                          Header_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
  9371  000B60  EE20 F081          	lfsr	2,129
  9372  000B64  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9373  000B66  26D9               	addwf	fsr2l,f,c
  9374  000B68  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9375  000B6A  22DA               	addwfc	fsr2h,f,c
  9376  000B6C  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
  9377  000B72  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
  9378                           
  9379                           ;nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
  9380  000B78  EE20 F00A          	lfsr	2,10
  9381  000B7C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9382  000B7E  26D9               	addwf	fsr2l,f,c
  9383  000B80  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9384  000B82  22DA               	addwfc	fsr2h,f,c
  9385  000B84  50DF               	movf	indf2,w,c
  9386  000B86  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
  9387  000B88  EE20 F001          	lfsr	2,1
  9388  000B8C  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
  9389  000B8E  26D9               	addwf	fsr2l,f,c
  9390  000B90  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
  9391  000B92  22DA               	addwfc	fsr2h,f,c
  9392  000B94  50DF               	movf	indf2,w,c
  9393  000B96  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9394  000B98  0BF0               	andlw	-16
  9395  000B9A  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9396  000B9C  6EDF               	movwf	indf2,c
  9397                           
  9398                           ;nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
  9399  000B9E  EE20 F00A          	lfsr	2,10
  9400  000BA2  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9401  000BA4  26D9               	addwf	fsr2l,f,c
  9402  000BA6  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9403  000BA8  22DA               	addwfc	fsr2h,f,c
  9404  000BAA  50DF               	movf	indf2,w,c
  9405  000BAC  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
  9406  000BAE  EE20 F001          	lfsr	2,1
  9407  000BB2  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
  9408  000BB4  26D9               	addwf	fsr2l,f,c
  9409  000BB6  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
  9410  000BB8  22DA               	addwfc	fsr2h,f,c
  9411  000BBA  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
  9412  000BBC  50DF               	movf	indf2,w,c
  9413  000BBE  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9414  000BC0  0B0F               	andlw	-241
  9415  000BC2  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9416  000BC4  6EDF               	movwf	indf2,c
  9417                           
  9418                           ;nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
  9419  000BC6  EE20 F00B          	lfsr	2,11
  9420  000BCA  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9421  000BCC  26D9               	addwf	fsr2l,f,c
  9422  000BCE  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9423  000BD0  22DA               	addwfc	fsr2h,f,c
  9424  000BD2  50DF               	movf	indf2,w,c
  9425  000BD4  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
  9426  000BD6  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
  9427  000BDC  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
  9428  000BE2  50DF               	movf	indf2,w,c
  9429  000BE4  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9430  000BE6  0BF0               	andlw	-16
  9431  000BE8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9432  000BEA  6EDF               	movwf	indf2,c
  9433                           
  9434                           ;nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadius;
  9435  000BEC  EE20 F00B          	lfsr	2,11
  9436  000BF0  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9437  000BF2  26D9               	addwf	fsr2l,f,c
  9438  000BF4  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9439  000BF6  22DA               	addwfc	fsr2h,f,c
  9440  000BF8  50DF               	movf	indf2,w,c
  9441  000BFA  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
  9442  000BFC  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
  9443  000C02  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
  9444  000C08  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
  9445  000C0A  50DF               	movf	indf2,w,c
  9446  000C0C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9447  000C0E  0B0F               	andlw	-241
  9448  000C10  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9449  000C12  6EDF               	movwf	indf2,c
  9450                           
  9451                           ;nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_t);
  9452  000C14  EE20 F081          	lfsr	2,129
  9453  000C18  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9454  000C1A  26D9               	addwf	fsr2l,f,c
  9455  000C1C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9456  000C1E  22DA               	addwfc	fsr2h,f,c
  9457  000C20  0E02               	movlw	2
  9458  000C22  26DE               	addwf	postinc2,f,c
  9459  000C24  0E00               	movlw	0
  9460  000C26  22DD               	addwfc	postdec2,f,c
  9461                           
  9462                           ;nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
  9463  000C28  EE20 F001          	lfsr	2,1
  9464  000C2C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9465  000C2E  26D9               	addwf	fsr2l,f,c
  9466  000C30  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9467  000C32  22DA               	addwfc	fsr2h,f,c
  9468  000C34  0E02               	movlw	2
  9469  000C36  26DF               	addwf	indf2,f,c
  9470  000C38                     l828:
  9471                           
  9472                           ;nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
  9473  000C38  0100               	movlb	0	; () banked
  9474  000C3A  2B64               	incf	(_nwkIb+4)& (0+255),f,b
  9475  000C3C  EE20 F00C          	lfsr	2,12
  9476  000C40  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9477  000C42  26D9               	addwf	fsr2l,f,c
  9478  000C44  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9479  000C46  22DA               	addwfc	fsr2h,f,c
  9480  000C48  0060  F193  FFDF   	movff	_nwkIb+4,indf2
  9481                           
  9482                           ;nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
  9483  000C4E  EE20 F00D          	lfsr	2,13
  9484  000C52  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9485  000C54  26D9               	addwf	fsr2l,f,c
  9486  000C56  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9487  000C58  22DA               	addwfc	fsr2h,f,c
  9488  000C5A  0060  F183  FFDE   	movff	_nwkIb,postinc2
  9489  000C60  0060  F187  FFDD   	movff	_nwkIb+1,postdec2
  9490  000C66                     
  9491                           ; BSR set to: 0
  9492                           ;nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
  9493  000C66  EE20 F005          	lfsr	2,5
  9494  000C6A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9495  000C6C  26D9               	addwf	fsr2l,f,c
  9496  000C6E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9497  000C70  22DA               	addwfc	fsr2h,f,c
  9498  000C72  EE10 F00F          	lfsr	1,15
  9499  000C76  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9500  000C78  26E1               	addwf	fsr1l,f,c
  9501  000C7A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9502  000C7C  22E2               	addwfc	fsr1h,f,c
  9503  000C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  9504  000C84  006F FF77 FFE5     	movff	postdec2,postdec1
  9505  000C8A                     
  9506                           ; BSR set to: 0
  9507                           ;nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
  9508  000C8A  EE20 F008          	lfsr	2,8
  9509  000C8E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9510  000C90  26D9               	addwf	fsr2l,f,c
  9511  000C92  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9512  000C94  22DA               	addwfc	fsr2h,f,c
  9513  000C96  50DF               	movf	indf2,w,c
  9514  000C98  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
  9515  000C9A  EE20 F011          	lfsr	2,17
  9516  000C9E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9517  000CA0  26D9               	addwf	fsr2l,f,c
  9518  000CA2  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9519  000CA4  22DA               	addwfc	fsr2h,f,c
  9520  000CA6  50DF               	movf	indf2,w,c
  9521  000CA8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9522  000CAA  0BF0               	andlw	-16
  9523  000CAC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9524  000CAE  6EDF               	movwf	indf2,c
  9525  000CB0                     
  9526                           ; BSR set to: 0
  9527                           ;nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
  9528  000CB0  EE20 F007          	lfsr	2,7
  9529  000CB4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9530  000CB6  26D9               	addwf	fsr2l,f,c
  9531  000CB8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9532  000CBA  22DA               	addwfc	fsr2h,f,c
  9533  000CBC  50DF               	movf	indf2,w,c
  9534  000CBE  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
  9535  000CC0  EE20 F011          	lfsr	2,17
  9536  000CC4  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9537  000CC6  26D9               	addwf	fsr2l,f,c
  9538  000CC8  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9539  000CCA  22DA               	addwfc	fsr2h,f,c
  9540  000CCC  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
  9541  000CCE  50DF               	movf	indf2,w,c
  9542  000CD0  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9543  000CD2  0B0F               	andlw	-241
  9544  000CD4  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
  9545  000CD6  6EDF               	movwf	indf2,c
  9546  000CD8                     
  9547                           ; BSR set to: 0
  9548                           ;nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
  9549  000CD8  EE20 F081          	lfsr	2,129
  9550  000CDC  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9551  000CDE  26D9               	addwf	fsr2l,f,c
  9552  000CE0  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9553  000CE2  22DA               	addwfc	fsr2h,f,c
  9554  000CE4  006F FF78  F002    	movff	postinc2,memcpy@d1
  9555  000CEA  006F FF74  F003    	movff	postdec2,memcpy@d1+1
  9556  000CF0  EE20 F00C          	lfsr	2,12
  9557  000CF4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9558  000CF6  26D9               	addwf	fsr2l,f,c
  9559  000CF8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9560  000CFA  22DA               	addwfc	fsr2h,f,c
  9561  000CFC  006F FF78  F004    	movff	postinc2,memcpy@s1
  9562  000D02  006F FF74  F005    	movff	postdec2,memcpy@s1+1
  9563  000D08  EE20 F00E          	lfsr	2,14
  9564  000D0C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9565  000D0E  26D9               	addwf	fsr2l,f,c
  9566  000D10  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9567  000D12  22DA               	addwfc	fsr2h,f,c
  9568  000D14  50DF               	movf	indf2,w,c
  9569  000D16  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
  9570  000D18  502C               	movf	??_nwkDataReqSendFrame^0,w,c
  9571  000D1A  6E06               	movwf	memcpy@n^0,c
  9572  000D1C  6A07               	clrf	(memcpy@n+1)^0,c
  9573  000D1E  ECE5  F021         	call	_memcpy	;wreg free
  9574  000D22                     
  9575                           ;nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
  9576  000D22  EE20 F00E          	lfsr	2,14
  9577  000D26  502A               	movf	nwkDataReqSendFrame@req^0,w,c
  9578  000D28  26D9               	addwf	fsr2l,f,c
  9579  000D2A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
  9580  000D2C  22DA               	addwfc	fsr2h,f,c
  9581  000D2E  50DF               	movf	indf2,w,c
  9582  000D30  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
  9583  000D32  EE20 F001          	lfsr	2,1
  9584  000D36  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
  9585  000D38  26D9               	addwf	fsr2l,f,c
  9586  000D3A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
  9587  000D3C  22DA               	addwfc	fsr2h,f,c
  9588  000D3E  502C               	movf	??_nwkDataReqSendFrame^0,w,c
  9589  000D40  26DF               	addwf	indf2,f,c
  9590  000D42                     
  9591                           ;nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
  9592  000D42  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
  9593  000D48  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
  9594  000D4E  EC60  F00D         	call	_nwkTxFrame	;wreg free
  9595  000D52                     l827:
  9596  000D52  0012               	return		;funcret
  9597  000D54                     __end_of_nwkDataReqSendFrame:
  9598                           	opt callstack 0
  9599                           
  9600 ;; *************** function _nwkTxFrame *****************
  9601 ;; Defined at:
  9602 ;;		line 109 in file "nwk/nwk_src/nwkTx.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
  9605 ;;		 -> nwkFrameFrames(685), NULL(0), 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
  9608 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;Total ram usage:        6 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:   10
  9625 ;; This function calls:
  9626 ;;		_nwkRoutePrepareTx
  9627 ;;		_rand
  9628 ;; This function is called by:
  9629 ;;		_nwkDataReqSendFrame
  9630 ;;		_nwkRouteFrame
  9631 ;;		_nwkRouteSendRouteError
  9632 ;;		_nwkRxSendAck
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text59
  9637  001AC0                     __ptext59:
  9638                           	opt callstack 0
  9639  001AC0                     _nwkTxFrame:
  9640                           	opt callstack 15
  9641  001AC0                     
  9642                           ;nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);nwk/nwk_src/nwkTx.c: 110: 
      +                          {;nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
  9643  001AC0  0E02               	movlw	2
  9644  001AC2  2424               	addwf	nwkTxFrame@frame^0,w,c
  9645  001AC4  6E28               	movwf	nwkTxFrame@header^0,c
  9646  001AC6  0E00               	movlw	0
  9647  001AC8  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
  9648  001ACA  6E29               	movwf	(nwkTxFrame@header+1)^0,c
  9649  001ACC                     
  9650                           ;nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
  9651  001ACC  EE20 F086          	lfsr	2,134
  9652  001AD0  5024               	movf	nwkTxFrame@frame^0,w,c
  9653  001AD2  26D9               	addwf	fsr2l,f,c
  9654  001AD4  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
  9655  001AD6  22DA               	addwfc	fsr2h,f,c
  9656  001AD8  A2DF               	btfss	indf2,1,c
  9657  001ADA  EF71  F00D         	goto	u3451
  9658  001ADE  EF73  F00D         	goto	u3450
  9659  001AE2                     u3451:
  9660  001AE2  EF7D  F00D         	goto	l5854
  9661  001AE6                     u3450:
  9662  001AE6                     
  9663                           ;nwk/nwk_src/nwkTx.c: 114:   {;nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX_STATE
      +                          _DELAY;
  9664  001AE6  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
  9665  001AEC  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
  9666  001AF2  0E12               	movlw	18
  9667  001AF4  6EDF               	movwf	indf2,c
  9668                           
  9669                           ;nwk/nwk_src/nwkTx.c: 116:   }
  9670  001AF6  EF85  F00D         	goto	l5856
  9671  001AFA                     l5854:
  9672                           
  9673                           ;nwk/nwk_src/nwkTx.c: 118:   {;nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_TX_STA
      +                          TE_DELAY;
  9674  001AFA  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
  9675  001B00  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
  9676  001B06  0E12               	movlw	18
  9677  001B08  6EDF               	movwf	indf2,c
  9678  001B0A                     l5856:
  9679                           
  9680                           ;nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
  9681  001B0A  EE20 F083          	lfsr	2,131
  9682  001B0E  5024               	movf	nwkTxFrame@frame^0,w,c
  9683  001B10  26D9               	addwf	fsr2l,f,c
  9684  001B12  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
  9685  001B14  22DA               	addwfc	fsr2h,f,c
  9686  001B16  0E00               	movlw	0
  9687  001B18  6EDF               	movwf	indf2,c
  9688  001B1A                     
  9689                           ;nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
  9690  001B1A  EE20 F086          	lfsr	2,134
  9691  001B1E  5024               	movf	nwkTxFrame@frame^0,w,c
  9692  001B20  26D9               	addwf	fsr2l,f,c
  9693  001B22  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
  9694  001B24  22DA               	addwfc	fsr2h,f,c
  9695  001B26  A0DF               	btfss	indf2,0,c
  9696  001B28  EF98  F00D         	goto	u3461
  9697  001B2C  EF9A  F00D         	goto	u3460
  9698  001B30                     u3461:
  9699  001B30  EFA6  F00D         	goto	l5862
  9700  001B34                     u3460:
  9701  001B34                     
  9702                           ;nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
  9703  001B34  EE20 F003          	lfsr	2,3
  9704  001B38  5028               	movf	nwkTxFrame@header^0,w,c
  9705  001B3A  26D9               	addwf	fsr2l,f,c
  9706  001B3C  5029               	movf	(nwkTxFrame@header+1)^0,w,c
  9707  001B3E  22DA               	addwfc	fsr2h,f,c
  9708  001B40  0EFF               	movlw	255
  9709  001B42  6EDE               	movwf	postinc2,c
  9710  001B44  0EFF               	movlw	255
  9711  001B46  6EDD               	movwf	postdec2,c
  9712  001B48  EFB2  F00D         	goto	l1346
  9713  001B4C                     l5862:
  9714                           
  9715                           ;nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
  9716  001B4C  EE20 F003          	lfsr	2,3
  9717  001B50  5028               	movf	nwkTxFrame@header^0,w,c
  9718  001B52  26D9               	addwf	fsr2l,f,c
  9719  001B54  5029               	movf	(nwkTxFrame@header+1)^0,w,c
  9720  001B56  22DA               	addwfc	fsr2h,f,c
  9721  001B58  0060  F18B  FFDE   	movff	_nwkIb+2,postinc2
  9722  001B5E  0060  F18F  FFDD   	movff	_nwkIb+3,postdec2
  9723  001B64                     l1346:
  9724                           
  9725                           ;nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK) &
      +                          &
  9726  001B64  EE20 F086          	lfsr	2,134
  9727  001B68  5024               	movf	nwkTxFrame@frame^0,w,c
  9728  001B6A  26D9               	addwf	fsr2l,f,c
  9729  001B6C  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
  9730  001B6E  22DA               	addwfc	fsr2h,f,c
  9731  001B70  B4DF               	btfsc	indf2,2,c
  9732  001B72  EFBD  F00D         	goto	u3471
  9733  001B76  EFBF  F00D         	goto	u3470
  9734  001B7A                     u3471:
  9735  001B7A  EFD6  F00D         	goto	l5868
  9736  001B7E                     u3470:
  9737  001B7E  EE20 F086          	lfsr	2,134
  9738  001B82  5024               	movf	nwkTxFrame@frame^0,w,c
  9739  001B84  26D9               	addwf	fsr2l,f,c
  9740  001B86  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
  9741  001B88  22DA               	addwfc	fsr2h,f,c
  9742  001B8A  B0DF               	btfsc	indf2,0,c
  9743  001B8C  EFCA  F00D         	goto	u3481
  9744  001B90  EFCC  F00D         	goto	u3480
  9745  001B94                     u3481:
  9746  001B94  EFD6  F00D         	goto	l5868
  9747  001B98                     u3480:
  9748  001B98                     
  9749                           ;nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
  9750  001B98  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
  9751  001B9E  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
  9752  001BA4  EC19  F014         	call	_nwkRoutePrepareTx	;wreg free
  9753  001BA8  EFE8  F00D         	goto	l5870
  9754  001BAC                     l5868:
  9755                           
  9756                           ;nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
  9757  001BAC  EE20 F00D          	lfsr	2,13
  9758  001BB0  5028               	movf	nwkTxFrame@header^0,w,c
  9759  001BB2  26D9               	addwf	fsr2l,f,c
  9760  001BB4  5029               	movf	(nwkTxFrame@header+1)^0,w,c
  9761  001BB6  22DA               	addwfc	fsr2h,f,c
  9762  001BB8  EE10 F005          	lfsr	1,5
  9763  001BBC  5028               	movf	nwkTxFrame@header^0,w,c
  9764  001BBE  26E1               	addwf	fsr1l,f,c
  9765  001BC0  5029               	movf	(nwkTxFrame@header+1)^0,w,c
  9766  001BC2  22E2               	addwfc	fsr1h,f,c
  9767  001BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  9768  001BCA  006F FF77 FFE5     	movff	postdec2,postdec1
  9769  001BD0                     l5870:
  9770                           
  9771                           ;nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
  9772  001BD0  EE20 F007          	lfsr	2,7
  9773  001BD4  5028               	movf	nwkTxFrame@header^0,w,c
  9774  001BD6  26D9               	addwf	fsr2l,f,c
  9775  001BD8  5029               	movf	(nwkTxFrame@header+1)^0,w,c
  9776  001BDA  22DA               	addwfc	fsr2h,f,c
  9777  001BDC  0060  F183  FFDE   	movff	_nwkIb,postinc2
  9778  001BE2  0060  F187  FFDD   	movff	_nwkIb+1,postdec2
  9779  001BE8                     
  9780                           ;nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
  9781  001BE8  0100               	movlb	0	; () banked
  9782  001BEA  2B65               	incf	(_nwkIb+5)& (0+255),f,b
  9783  001BEC  EE20 F002          	lfsr	2,2
  9784  001BF0  5028               	movf	nwkTxFrame@header^0,w,c
  9785  001BF2  26D9               	addwf	fsr2l,f,c
  9786  001BF4  5029               	movf	(nwkTxFrame@header+1)^0,w,c
  9787  001BF6  22DA               	addwfc	fsr2h,f,c
  9788  001BF8  0060  F197  FFDF   	movff	_nwkIb+5,indf2
  9789  001BFE                     
  9790                           ; BSR set to: 0
  9791                           ;nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
  9792  001BFE  EE20 F005          	lfsr	2,5
  9793  001C02  5028               	movf	nwkTxFrame@header^0,w,c
  9794  001C04  26D9               	addwf	fsr2l,f,c
  9795  001C06  5029               	movf	(nwkTxFrame@header+1)^0,w,c
  9796  001C08  22DA               	addwfc	fsr2h,f,c
  9797  001C0A  28DE               	incf	postinc2,w,c
  9798  001C0C  E106               	bnz	u3491
  9799  001C0E  28DE               	incf	postinc2,w,c
  9800  001C10  A4D8               	btfss	status,2,c
  9801  001C12  EF0D  F00E         	goto	u3491
  9802  001C16  EF0F  F00E         	goto	u3490
  9803  001C1A                     u3491:
  9804  001C1A  EF31  F00E         	goto	l5880
  9805  001C1E                     u3490:
  9806  001C1E                     
  9807                           ; BSR set to: 0
  9808                           ;nwk/nwk_src/nwkTx.c: 146:   {;nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x8841;
  9809  001C1E  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
  9810  001C24  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
  9811  001C2A  0E41               	movlw	65
  9812  001C2C  6EDE               	movwf	postinc2,c
  9813  001C2E  0E88               	movlw	136
  9814  001C30  6EDD               	movwf	postdec2,c
  9815  001C32                     
  9816                           ; BSR set to: 0
  9817                           ;nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
  9818  001C32  EC74  F016         	call	_rand	;wreg free
  9819  001C36  0E07               	movlw	7
  9820  001C38  161A               	andwf	?_rand^0,f,c
  9821  001C3A  0E00               	movlw	0
  9822  001C3C  161B               	andwf	(?_rand+1)^0,f,c
  9823  001C3E  0E01               	movlw	1
  9824  001C40  261A               	addwf	?_rand^0,f,c
  9825  001C42  0E00               	movlw	0
  9826  001C44  221B               	addwfc	(?_rand+1)^0,f,c
  9827  001C46  EE20 F084          	lfsr	2,132
  9828  001C4A  5024               	movf	nwkTxFrame@frame^0,w,c
  9829  001C4C  26D9               	addwf	fsr2l,f,c
  9830  001C4E  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
  9831  001C50  22DA               	addwfc	fsr2h,f,c
  9832  001C52  0060  F06B  FFDE   	movff	?_rand,postinc2
  9833  001C58  0060  F06F  FFDD   	movff	?_rand+1,postdec2
  9834                           
  9835                           ;nwk/nwk_src/nwkTx.c: 149:   }
  9836  001C5E  EF45  F00E         	goto	l1351
  9837  001C62                     l5880:
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;nwk/nwk_src/nwkTx.c: 151:   {;nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x8861;
  9841  001C62  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
  9842  001C68  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
  9843  001C6E  0E61               	movlw	97
  9844  001C70  6EDE               	movwf	postinc2,c
  9845  001C72  0E88               	movlw	136
  9846  001C74  6EDD               	movwf	postdec2,c
  9847  001C76                     
  9848                           ; BSR set to: 0
  9849                           ;nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
  9850  001C76  EE20 F084          	lfsr	2,132
  9851  001C7A  5024               	movf	nwkTxFrame@frame^0,w,c
  9852  001C7C  26D9               	addwf	fsr2l,f,c
  9853  001C7E  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
  9854  001C80  22DA               	addwfc	fsr2h,f,c
  9855  001C82  0E00               	movlw	0
  9856  001C84  6EDE               	movwf	postinc2,c
  9857  001C86  0E00               	movlw	0
  9858  001C88  6EDD               	movwf	postdec2,c
  9859  001C8A                     l1351:
  9860  001C8A  0012               	return		;funcret
  9861  001C8C                     __end_of_nwkTxFrame:
  9862                           	opt callstack 0
  9863                           
  9864 ;; *************** function _rand *****************
  9865 ;; Defined at:
  9866 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;		None
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  2   25[COMRAM] int 
  9873 ;; Registers used:
  9874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9883 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9884 ;;Total ram usage:       10 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    8
  9887 ;; This function calls:
  9888 ;;		___omul
  9889 ;; This function is called by:
  9890 ;;		_nwkTxFrame
  9891 ;;		_nwkTxBroadcastFrame
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text60
  9896  002CE8                     __ptext60:
  9897                           	opt callstack 0
  9898  002CE8                     _rand:
  9899                           	opt callstack 17
  9900  002CE8  0060  F378  F002   	movff	_seed,___omul@multiplier
  9901  002CEE  0060  F37C  F003   	movff	_seed+1,___omul@multiplier+1
  9902  002CF4  0060  F380  F004   	movff	_seed+2,___omul@multiplier+2
  9903  002CFA  0060  F384  F005   	movff	_seed+3,___omul@multiplier+3
  9904  002D00  0060  F388  F006   	movff	_seed+4,___omul@multiplier+4
  9905  002D06  0060  F38C  F007   	movff	_seed+5,___omul@multiplier+5
  9906  002D0C  0060  F390  F008   	movff	_seed+6,___omul@multiplier+6
  9907  002D12  0060  F394  F009   	movff	_seed+7,___omul@multiplier+7
  9908  002D18  0E2D               	movlw	45
  9909  002D1A  6E0A               	movwf	___omul@multiplicand^0,c
  9910  002D1C  0E7F               	movlw	127
  9911  002D1E  6E0B               	movwf	(___omul@multiplicand+1)^0,c
  9912  002D20  0E95               	movlw	149
  9913  002D22  6E0C               	movwf	(___omul@multiplicand+2)^0,c
  9914  002D24  0E4C               	movlw	76
  9915  002D26  6E0D               	movwf	(___omul@multiplicand+3)^0,c
  9916  002D28  0E2D               	movlw	45
  9917  002D2A  6E0E               	movwf	(___omul@multiplicand+4)^0,c
  9918  002D2C  0EF4               	movlw	244
  9919  002D2E  6E0F               	movwf	(___omul@multiplicand+5)^0,c
  9920  002D30  0E51               	movlw	81
  9921  002D32  6E10               	movwf	(___omul@multiplicand+6)^0,c
  9922  002D34  0E58               	movlw	88
  9923  002D36  6E11               	movwf	(___omul@multiplicand+7)^0,c
  9924  002D38  ECC1  F01E         	call	___omul	;wreg free
  9925  002D3C  0060  F008  F01C   	movff	?___omul,??_rand
  9926  002D42  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
  9927  002D48  0060  F010  F01E   	movff	?___omul+2,??_rand+2
  9928  002D4E  0060  F014  F01F   	movff	?___omul+3,??_rand+3
  9929  002D54  0060  F018  F020   	movff	?___omul+4,??_rand+4
  9930  002D5A  0060  F01C  F021   	movff	?___omul+5,??_rand+5
  9931  002D60  0060  F020  F022   	movff	?___omul+6,??_rand+6
  9932  002D66  0060  F024  F023   	movff	?___omul+7,??_rand+7
  9933  002D6C  0E01               	movlw	1
  9934  002D6E  241C               	addwf	??_rand^0,w,c
  9935  002D70  0100               	movlb	0	; () banked
  9936  002D72  6FDE               	movwf	_seed& (0+255),b
  9937  002D74  0E00               	movlw	0
  9938  002D76  201D               	addwfc	(??_rand+1)^0,w,c
  9939  002D78  6FDF               	movwf	(_seed+1)& (0+255),b
  9940  002D7A  0E00               	movlw	0
  9941  002D7C  201E               	addwfc	(??_rand+2)^0,w,c
  9942  002D7E  6FE0               	movwf	(_seed+2)& (0+255),b
  9943  002D80  0E00               	movlw	0
  9944  002D82  201F               	addwfc	(??_rand+3)^0,w,c
  9945  002D84  6FE1               	movwf	(_seed+3)& (0+255),b
  9946  002D86  0E00               	movlw	0
  9947  002D88  2020               	addwfc	(??_rand+4)^0,w,c
  9948  002D8A  6FE2               	movwf	(_seed+4)& (0+255),b
  9949  002D8C  0E00               	movlw	0
  9950  002D8E  2021               	addwfc	(??_rand+5)^0,w,c
  9951  002D90  6FE3               	movwf	(_seed+5)& (0+255),b
  9952  002D92  0E00               	movlw	0
  9953  002D94  2022               	addwfc	(??_rand+6)^0,w,c
  9954  002D96  6FE4               	movwf	(_seed+6)& (0+255),b
  9955  002D98  0E00               	movlw	0
  9956  002D9A  2023               	addwfc	(??_rand+7)^0,w,c
  9957  002D9C  6FE5               	movwf	(_seed+7)& (0+255),b
  9958  002D9E                     
  9959                           ; BSR set to: 0
  9960  002D9E  0060  F378  F01C   	movff	_seed,??_rand
  9961  002DA4  0060  F37C  F01D   	movff	_seed+1,??_rand+1
  9962  002DAA  0060  F380  F01E   	movff	_seed+2,??_rand+2
  9963  002DB0  0060  F384  F01F   	movff	_seed+3,??_rand+3
  9964  002DB6  0060  F388  F020   	movff	_seed+4,??_rand+4
  9965  002DBC  0060  F38C  F021   	movff	_seed+5,??_rand+5
  9966  002DC2  0060  F390  F022   	movff	_seed+6,??_rand+6
  9967  002DC8  0060  F394  F023   	movff	_seed+7,??_rand+7
  9968  002DCE  0E32               	movlw	50
  9969  002DD0  EFF3  F016         	goto	u3350
  9970  002DD4                     u3355:
  9971  002DD4  90D8               	bcf	status,0,c
  9972  002DD6  3223               	rrcf	(??_rand+7)^0,f,c
  9973  002DD8  3222               	rrcf	(??_rand+6)^0,f,c
  9974  002DDA  3221               	rrcf	(??_rand+5)^0,f,c
  9975  002DDC  3220               	rrcf	(??_rand+4)^0,f,c
  9976  002DDE  321F               	rrcf	(??_rand+3)^0,f,c
  9977  002DE0  321E               	rrcf	(??_rand+2)^0,f,c
  9978  002DE2  321D               	rrcf	(??_rand+1)^0,f,c
  9979  002DE4  321C               	rrcf	??_rand^0,f,c
  9980  002DE6                     u3350:
  9981  002DE6  2EE8               	decfsz	wreg,f,c
  9982  002DE8  EFEA  F016         	goto	u3355
  9983  002DEC  0060  F070  F01A   	movff	??_rand,?_rand
  9984  002DF2  0060  F078  F01B   	movff	??_rand+2,?_rand+1
  9985  002DF8                     
  9986                           ; BSR set to: 0
  9987  002DF8  0012               	return		;funcret
  9988  002DFA                     __end_of_rand:
  9989                           	opt callstack 0
  9990                           
  9991 ;; *************** function ___omul *****************
  9992 ;; Defined at:
  9993 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;  multiplier      8    1[COMRAM] unsigned long long 
  9996 ;;  multiplicand    8    9[COMRAM] unsigned long long 
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;  product         8   17[COMRAM] unsigned long long 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  8    1[COMRAM] unsigned long long 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10008 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;Total ram usage:       24 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:    7
 10015 ;; This function calls:
 10016 ;;		Nothing
 10017 ;; This function is called by:
 10018 ;;		_rand
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text61
 10023  003D82                     __ptext61:
 10024                           	opt callstack 0
 10025  003D82                     ___omul:
 10026                           	opt callstack 17
 10027  003D82  EE20  F012         	lfsr	2,___omul@product
 10028  003D86  0E07               	movlw	7
 10029  003D88                     u3181:
 10030  003D88  6ADE               	clrf	postinc2,c
 10031  003D8A  06E8               	decf	wreg,f,c
 10032  003D8C  E2FD               	bc	u3181
 10033  003D8E                     l5642:
 10034  003D8E  A002               	btfss	___omul@multiplier^0,0,c
 10035  003D90  EFCC  F01E         	goto	u3191
 10036  003D94  EFCE  F01E         	goto	u3190
 10037  003D98                     u3191:
 10038  003D98  EFDE  F01E         	goto	l5646
 10039  003D9C                     u3190:
 10040  003D9C  500A               	movf	___omul@multiplicand^0,w,c
 10041  003D9E  2612               	addwf	___omul@product^0,f,c
 10042  003DA0  500B               	movf	(___omul@multiplicand+1)^0,w,c
 10043  003DA2  2213               	addwfc	(___omul@product+1)^0,f,c
 10044  003DA4  500C               	movf	(___omul@multiplicand+2)^0,w,c
 10045  003DA6  2214               	addwfc	(___omul@product+2)^0,f,c
 10046  003DA8  500D               	movf	(___omul@multiplicand+3)^0,w,c
 10047  003DAA  2215               	addwfc	(___omul@product+3)^0,f,c
 10048  003DAC  500E               	movf	(___omul@multiplicand+4)^0,w,c
 10049  003DAE  2216               	addwfc	(___omul@product+4)^0,f,c
 10050  003DB0  500F               	movf	(___omul@multiplicand+5)^0,w,c
 10051  003DB2  2217               	addwfc	(___omul@product+5)^0,f,c
 10052  003DB4  5010               	movf	(___omul@multiplicand+6)^0,w,c
 10053  003DB6  2218               	addwfc	(___omul@product+6)^0,f,c
 10054  003DB8  5011               	movf	(___omul@multiplicand+7)^0,w,c
 10055  003DBA  2219               	addwfc	(___omul@product+7)^0,f,c
 10056  003DBC                     l5646:
 10057  003DBC  90D8               	bcf	status,0,c
 10058  003DBE  360A               	rlcf	___omul@multiplicand^0,f,c
 10059  003DC0  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 10060  003DC2  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 10061  003DC4  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 10062  003DC6  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 10063  003DC8  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 10064  003DCA  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 10065  003DCC  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 10066  003DCE  90D8               	bcf	status,0,c
 10067  003DD0  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 10068  003DD2  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 10069  003DD4  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 10070  003DD6  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 10071  003DD8  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 10072  003DDA  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 10073  003DDC  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 10074  003DDE  3202               	rrcf	___omul@multiplier^0,f,c
 10075  003DE0  5002               	movf	___omul@multiplier^0,w,c
 10076  003DE2  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 10077  003DE4  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 10078  003DE6  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 10079  003DE8  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 10080  003DEA  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 10081  003DEC  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 10082  003DEE  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 10083  003DF0  A4D8               	btfss	status,2,c
 10084  003DF2  EFFD  F01E         	goto	u3201
 10085  003DF6  EFFF  F01E         	goto	u3200
 10086  003DFA                     u3201:
 10087  003DFA  EFC7  F01E         	goto	l5642
 10088  003DFE                     u3200:
 10089  003DFE  0060  F048  F002   	movff	___omul@product,?___omul
 10090  003E04  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 10091  003E0A  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 10092  003E10  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 10093  003E16  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 10094  003E1C  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 10095  003E22  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 10096  003E28  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 10097  003E2E  0012               	return		;funcret
 10098  003E30                     __end_of___omul:
 10099                           	opt callstack 0
 10100                           
 10101 ;; *************** function _nwkRoutePrepareTx *****************
 10102 ;; Defined at:
 10103 ;;		line 264 in file "nwk/nwk_src/nwkRoute.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 10106 ;;		 -> nwkFrameFrames(685), NULL(0), 
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 10109 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      void 
 10112 ;; Registers used:
 10113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;Total ram usage:        6 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; Hardware stack levels required when called:    9
 10126 ;; This function calls:
 10127 ;;		_NWK_GroupIsMember
 10128 ;;		_NWK_RouteNextHop
 10129 ;; This function is called by:
 10130 ;;		_nwkTxFrame
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text62
 10135  002832                     __ptext62:
 10136                           	opt callstack 0
 10137  002832                     _nwkRoutePrepareTx:
 10138                           	opt callstack 15
 10139  002832                     
 10140                           ;nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);nwk/nwk_src/nwkR
      +                          oute.c: 265: {;nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame->header;
 10141  002832  0E02               	movlw	2
 10142  002834  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 10143  002836  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 10144  002838  0E00               	movlw	0
 10145  00283A  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 10146  00283C  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 10147  00283E                     
 10148                           ;nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 10149  00283E  EE20 F00D          	lfsr	2,13
 10150  002842  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10151  002844  26D9               	addwf	fsr2l,f,c
 10152  002846  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10153  002848  22DA               	addwfc	fsr2h,f,c
 10154  00284A  28DE               	incf	postinc2,w,c
 10155  00284C  E106               	bnz	u3261
 10156  00284E  28DE               	incf	postinc2,w,c
 10157  002850  A4D8               	btfss	status,2,c
 10158  002852  EF2D  F014         	goto	u3261
 10159  002856  EF2F  F014         	goto	u3260
 10160  00285A                     u3261:
 10161  00285A  EF3B  F014         	goto	l5688
 10162  00285E                     u3260:
 10163  00285E                     
 10164                           ;nwk/nwk_src/nwkRoute.c: 269:   {;nwk/nwk_src/nwkRoute.c: 270:     header->macDstAddr = 
      +                          0xffff;
 10165  00285E  EE20 F005          	lfsr	2,5
 10166  002862  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10167  002864  26D9               	addwf	fsr2l,f,c
 10168  002866  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10169  002868  22DA               	addwfc	fsr2h,f,c
 10170  00286A  0EFF               	movlw	255
 10171  00286C  6EDE               	movwf	postinc2,c
 10172  00286E  0EFF               	movlw	255
 10173  002870  6EDD               	movwf	postdec2,c
 10174                           
 10175                           ;nwk/nwk_src/nwkRoute.c: 271:   }
 10176  002872  EFB6  F014         	goto	l1012
 10177  002876                     l5688:
 10178  002876  EE20 F009          	lfsr	2,9
 10179  00287A  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10180  00287C  26D9               	addwf	fsr2l,f,c
 10181  00287E  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10182  002880  22DA               	addwfc	fsr2h,f,c
 10183  002882  A4DF               	btfss	indf2,2,c
 10184  002884  EF46  F014         	goto	u3271
 10185  002888  EF48  F014         	goto	u3270
 10186  00288C                     u3271:
 10187  00288C  EF5C  F014         	goto	l5692
 10188  002890                     u3270:
 10189  002890                     
 10190                           ;nwk/nwk_src/nwkRoute.c: 274:   {;nwk/nwk_src/nwkRoute.c: 275:     header->macDstAddr = 
      +                          header->nwkDstAddr;
 10191  002890  EE20 F00D          	lfsr	2,13
 10192  002894  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10193  002896  26D9               	addwf	fsr2l,f,c
 10194  002898  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10195  00289A  22DA               	addwfc	fsr2h,f,c
 10196  00289C  EE10 F005          	lfsr	1,5
 10197  0028A0  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10198  0028A2  26E1               	addwf	fsr1l,f,c
 10199  0028A4  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10200  0028A6  22E2               	addwfc	fsr1h,f,c
 10201  0028A8  006F FF7B FFE6     	movff	postinc2,postinc1
 10202  0028AE  006F FF77 FFE5     	movff	postdec2,postdec1
 10203                           
 10204                           ;nwk/nwk_src/nwkRoute.c: 276:   }
 10205  0028B4  EFB6  F014         	goto	l1012
 10206  0028B8                     l5692:
 10207  0028B8  EE20 F009          	lfsr	2,9
 10208  0028BC  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10209  0028BE  26D9               	addwf	fsr2l,f,c
 10210  0028C0  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10211  0028C2  22DA               	addwfc	fsr2h,f,c
 10212  0028C4  A6DF               	btfss	indf2,3,c
 10213  0028C6  EF67  F014         	goto	u3281
 10214  0028CA  EF69  F014         	goto	u3280
 10215  0028CE                     u3281:
 10216  0028CE  EF92  F014         	goto	l5698
 10217  0028D2                     u3280:
 10218  0028D2  EE20 F00D          	lfsr	2,13
 10219  0028D6  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10220  0028D8  26D9               	addwf	fsr2l,f,c
 10221  0028DA  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10222  0028DC  22DA               	addwfc	fsr2h,f,c
 10223  0028DE  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 10224  0028E4  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 10225  0028EA  ECEB  F023         	call	_NWK_GroupIsMember	;wreg free
 10226  0028EE  0900               	iorlw	0
 10227  0028F0  B4D8               	btfsc	status,2,c
 10228  0028F2  EF7D  F014         	goto	u3291
 10229  0028F6  EF7F  F014         	goto	u3290
 10230  0028FA                     u3291:
 10231  0028FA  EF92  F014         	goto	l5698
 10232  0028FE                     u3290:
 10233  0028FE                     
 10234                           ;nwk/nwk_src/nwkRoute.c: 280:   {;nwk/nwk_src/nwkRoute.c: 281:     header->macDstAddr = 
      +                          0xffff;
 10235  0028FE  EE20 F005          	lfsr	2,5
 10236  002902  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10237  002904  26D9               	addwf	fsr2l,f,c
 10238  002906  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10239  002908  22DA               	addwfc	fsr2h,f,c
 10240  00290A  0EFF               	movlw	255
 10241  00290C  6EDE               	movwf	postinc2,c
 10242  00290E  0EFF               	movlw	255
 10243  002910  6EDD               	movwf	postdec2,c
 10244                           
 10245                           ;nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 10246  002912  EE20 F009          	lfsr	2,9
 10247  002916  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10248  002918  26D9               	addwf	fsr2l,f,c
 10249  00291A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10250  00291C  22DA               	addwfc	fsr2h,f,c
 10251  00291E  84DF               	bsf	indf2,2,c
 10252                           
 10253                           ;nwk/nwk_src/nwkRoute.c: 283:   }
 10254  002920  EFB6  F014         	goto	l1012
 10255  002924                     l5698:
 10256                           
 10257                           ;nwk/nwk_src/nwkRoute.c: 287:   {;nwk/nwk_src/nwkRoute.c: 288:     header->macDstAddr = 
      +                          NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 10258  002924  EE20 F00D          	lfsr	2,13
 10259  002928  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10260  00292A  26D9               	addwf	fsr2l,f,c
 10261  00292C  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10262  00292E  22DA               	addwfc	fsr2h,f,c
 10263  002930  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 10264  002936  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 10265  00293C  EE20 F009          	lfsr	2,9
 10266  002940  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10267  002942  26D9               	addwf	fsr2l,f,c
 10268  002944  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10269  002946  22DA               	addwfc	fsr2h,f,c
 10270  002948  0E00               	movlw	0
 10271  00294A  B6DF               	btfsc	indf2,3,c
 10272  00294C  0E01               	movlw	1
 10273  00294E  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 10274  002950  EC27  F023         	call	_NWK_RouteNextHop	;wreg free
 10275  002954  EE20 F005          	lfsr	2,5
 10276  002958  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 10277  00295A  26D9               	addwf	fsr2l,f,c
 10278  00295C  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 10279  00295E  22DA               	addwfc	fsr2h,f,c
 10280  002960  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 10281  002966  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 10282  00296C                     l1012:
 10283  00296C  0012               	return		;funcret
 10284  00296E                     __end_of_nwkRoutePrepareTx:
 10285                           	opt callstack 0
 10286                           
 10287 ;; *************** function _NWK_RouteNextHop *****************
 10288 ;; Defined at:
 10289 ;;		line 144 in file "nwk/nwk_src/nwkRoute.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  dst             2    7[COMRAM] unsigned short 
 10292 ;;  multicast       1    9[COMRAM] unsigned char 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 10295 ;;		 -> nwkRouteTable(70), NULL(0), 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  2    7[COMRAM] unsigned short 
 10298 ;; Registers used:
 10299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10305 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;Total ram usage:        5 bytes
 10310 ;; Hardware stack levels used:    1
 10311 ;; Hardware stack levels required when called:    8
 10312 ;; This function calls:
 10313 ;;		_NWK_RouteFindEntry
 10314 ;; This function is called by:
 10315 ;;		_nwkRoutePrepareTx
 10316 ;;		_nwkRouteFrame
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text63
 10321  00464E                     __ptext63:
 10322                           	opt callstack 0
 10323  00464E                     _NWK_RouteNextHop:
 10324                           	opt callstack 15
 10325  00464E                     
 10326                           ;nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multicast)
      +                          ;nwk/nwk_src/nwkRoute.c: 145: {;nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEntry_t *en
      +                          try;;nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicast);
 10327  00464E  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 10328  004654  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 10329  00465A  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 10330  004660  EC5F  F020         	call	_NWK_RouteFindEntry	;wreg free
 10331  004664  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 10332  00466A  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 10333  004670                     
 10334                           ;nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 10335  004670  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 10336  004672  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 10337  004674  B4D8               	btfsc	status,2,c
 10338  004676  EF3F  F023         	goto	u3161
 10339  00467A  EF41  F023         	goto	u3160
 10340  00467E                     u3161:
 10341  00467E  EF4F  F023         	goto	l966
 10342  004682                     u3160:
 10343  004682                     
 10344                           ;nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 10345  004682  EE20 F003          	lfsr	2,3
 10346  004686  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 10347  004688  26D9               	addwf	fsr2l,f,c
 10348  00468A  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 10349  00468C  22DA               	addwfc	fsr2h,f,c
 10350  00468E  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 10351  004694  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 10352  00469A  EF51  F023         	goto	l967
 10353  00469E                     l966:
 10354                           
 10355                           ;nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 10356  00469E  6808               	setf	?_NWK_RouteNextHop^0,c
 10357  0046A0  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 10358  0046A2                     l967:
 10359  0046A2  0012               	return		;funcret
 10360  0046A4                     __end_of_NWK_RouteNextHop:
 10361                           	opt callstack 0
 10362                           
 10363 ;; *************** function _NWK_RouteFindEntry *****************
 10364 ;; Defined at:
 10365 ;;		line 91 in file "nwk/nwk_src/nwkRoute.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  dst             2    1[COMRAM] unsigned short 
 10368 ;;  multicast       1    3[COMRAM] unsigned char 
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;  i               1    6[COMRAM] unsigned char 
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 10373 ;; Registers used:
 10374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10380 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;Total ram usage:        6 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:    7
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_NWK_RouteNextHop
 10391 ;;		_nwkRouteRemove
 10392 ;;		_nwkRouteFrameReceived
 10393 ;;		_nwkRouteFrameSent
 10394 ;;		_nwkRouteUpdateEntry
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           	psect	text64
 10399  0040BE                     __ptext64:
 10400                           	opt callstack 0
 10401  0040BE                     _NWK_RouteFindEntry:
 10402                           	opt callstack 19
 10403  0040BE                     
 10404                           ;nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, uin
      +                          t8_t multicast);nwk/nwk_src/nwkRoute.c: 92: {;nwk/nwk_src/nwkRoute.c: 93:   for (uint8_t
      +                           i = 0; i < 10; i++)
 10405  0040BE  0E00               	movlw	0
 10406  0040C0  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 10407  0040C2                     l5552:
 10408                           
 10409                           ;nwk/nwk_src/nwkRoute.c: 94:   {;nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable[i].ds
      +                          tAddr == dst &&
 10410  0040C2  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 10411  0040C4  0D07               	mullw	7
 10412  0040C6  0E41               	movlw	low (_nwkRouteTable+1)
 10413  0040C8  24F3               	addwf	243,w,c
 10414  0040CA  6ED9               	movwf	fsr2l,c
 10415  0040CC  0E01               	movlw	high (_nwkRouteTable+1)
 10416  0040CE  20F4               	addwfc	prodh,w,c
 10417  0040D0  6EDA               	movwf	fsr2h,c
 10418  0040D2  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 10419  0040D4  18DE               	xorwf	postinc2,w,c
 10420  0040D6  E107               	bnz	u3051
 10421  0040D8  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 10422  0040DA  18DE               	xorwf	postinc2,w,c
 10423  0040DC  A4D8               	btfss	status,2,c
 10424  0040DE  EF73  F020         	goto	u3051
 10425  0040E2  EF75  F020         	goto	u3050
 10426  0040E6                     u3051:
 10427  0040E6  EF99  F020         	goto	l5560
 10428  0040EA                     u3050:
 10429  0040EA  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 10430  0040EC  0D07               	mullw	7
 10431  0040EE  0E40               	movlw	low _nwkRouteTable
 10432  0040F0  24F3               	addwf	243,w,c
 10433  0040F2  6ED9               	movwf	fsr2l,c
 10434  0040F4  0E01               	movlw	high _nwkRouteTable
 10435  0040F6  20F4               	addwfc	prodh,w,c
 10436  0040F8  6EDA               	movwf	fsr2h,c
 10437  0040FA  0101               	movlb	1	; () banked
 10438  0040FC  B2DF               	btfsc	indf2,1,c
 10439  0040FE  EF83  F020         	goto	u3061
 10440  004102  EF86  F020         	goto	u3060
 10441  004106                     u3061:
 10442  004106  0E01               	movlw	1
 10443  004108  EF87  F020         	goto	u3066
 10444  00410C                     u3060:
 10445  00410C  0E00               	movlw	0
 10446  00410E                     u3066:
 10447  00410E  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 10448  004110  A4D8               	btfss	status,2,c
 10449  004112  EF8D  F020         	goto	u3071
 10450  004116  EF8F  F020         	goto	u3070
 10451  00411A                     u3071:
 10452  00411A  EF99  F020         	goto	l5560
 10453  00411E                     u3070:
 10454  00411E                     
 10455                           ; BSR set to: 1
 10456                           ;nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 10457  00411E  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 10458  004120  0D07               	mullw	7
 10459  004122  0E40               	movlw	low _nwkRouteTable
 10460  004124  24F3               	addwf	243,w,c
 10461  004126  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 10462  004128  0E01               	movlw	high _nwkRouteTable
 10463  00412A  20F4               	addwfc	prodh,w,c
 10464  00412C  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 10465  00412E  EFA6  F020         	goto	l948
 10466  004132                     l5560:
 10467                           
 10468                           ;nwk/nwk_src/nwkRoute.c: 98:   }
 10469  004132  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 10470  004134  0E09               	movlw	9
 10471  004136  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 10472  004138  EFA0  F020         	goto	u3081
 10473  00413C  EFA2  F020         	goto	u3080
 10474  004140                     u3081:
 10475  004140  EF61  F020         	goto	l5552
 10476  004144                     u3080:
 10477  004144                     
 10478                           ;nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 10479  004144  0E00               	movlw	0
 10480  004146  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 10481  004148  0E00               	movlw	0
 10482  00414A  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 10483  00414C                     l948:
 10484  00414C  0012               	return		;funcret
 10485  00414E                     __end_of_NWK_RouteFindEntry:
 10486                           	opt callstack 0
 10487                           
 10488 ;; *************** function _NWK_GroupIsMember *****************
 10489 ;; Defined at:
 10490 ;;		line 101 in file "nwk/nwk_src/nwkGroup.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  group           2    1[COMRAM] unsigned short 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  i               1    5[COMRAM] unsigned char 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      _Bool 
 10497 ;; Registers used:
 10498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10507 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10508 ;;Total ram usage:        5 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:    7
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		_nwkRoutePrepareTx
 10515 ;;		_nwkRxHandleReceivedFrame
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           	psect	text65
 10520  0047D6                     __ptext65:
 10521                           	opt callstack 0
 10522  0047D6                     _NWK_GroupIsMember:
 10523                           	opt callstack 19
 10524  0047D6                     
 10525                           ;nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);nwk/nwk_src/nwkGro
      +                          up.c: 102: {;nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 10526  0047D6  0E00               	movlw	0
 10527  0047D8  6E06               	movwf	NWK_GroupIsMember@i^0,c
 10528  0047DA                     l5600:
 10529                           
 10530                           ;nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 10531  0047DA  5006               	movf	NWK_GroupIsMember@i^0,w,c
 10532  0047DC  0D02               	mullw	2
 10533  0047DE  0E88               	movlw	low _nwkGroups
 10534  0047E0  24F3               	addwf	243,w,c
 10535  0047E2  6ED9               	movwf	fsr2l,c
 10536  0047E4  0E00               	movlw	high _nwkGroups
 10537  0047E6  20F4               	addwfc	prodh,w,c
 10538  0047E8  6EDA               	movwf	fsr2h,c
 10539  0047EA  5002               	movf	NWK_GroupIsMember@group^0,w,c
 10540  0047EC  18DE               	xorwf	postinc2,w,c
 10541  0047EE  E107               	bnz	u3141
 10542  0047F0  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 10543  0047F2  18DE               	xorwf	postinc2,w,c
 10544  0047F4  A4D8               	btfss	status,2,c
 10545  0047F6  EFFF  F023         	goto	u3141
 10546  0047FA  EF01  F024         	goto	u3140
 10547  0047FE                     u3141:
 10548  0047FE  EF04  F024         	goto	l5606
 10549  004802                     u3140:
 10550  004802                     
 10551                           ;nwk/nwk_src/nwkGroup.c: 105:       return 1;
 10552  004802  0E01               	movlw	1
 10553  004804  EF0E  F024         	goto	l910
 10554  004808                     l5606:
 10555  004808  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 10556  00480A  0E09               	movlw	9
 10557  00480C  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 10558  00480E  EF0B  F024         	goto	u3151
 10559  004812  EF0D  F024         	goto	u3150
 10560  004816                     u3151:
 10561  004816  EFED  F023         	goto	l5600
 10562  00481A                     u3150:
 10563  00481A                     
 10564                           ;nwk/nwk_src/nwkGroup.c: 106:   return 0;
 10565  00481A  0E00               	movlw	0
 10566  00481C                     l910:
 10567  00481C  0012               	return		;funcret
 10568  00481E                     __end_of_NWK_GroupIsMember:
 10569                           	opt callstack 0
 10570                           
 10571 ;; *************** function _nwkFrameAlloc *****************
 10572 ;; Defined at:
 10573 ;;		line 80 in file "nwk/nwk_src/nwkFrame.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;		None
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;  i               1   17[COMRAM] unsigned char 
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 10580 ;; Registers used:
 10581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;Total ram usage:        5 bytes
 10592 ;; Hardware stack levels used:    1
 10593 ;; Hardware stack levels required when called:    8
 10594 ;; This function calls:
 10595 ;;		_memset
 10596 ;; This function is called by:
 10597 ;;		_nwkDataReqSendFrame
 10598 ;;		_nwkRouteSendRouteError
 10599 ;;		_PHY_DataInd
 10600 ;;		_nwkRxSendAck
 10601 ;;		_nwkTxBroadcastFrame
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           	psect	text66
 10606  00377E                     __ptext66:
 10607                           	opt callstack 0
 10608  00377E                     _nwkFrameAlloc:
 10609                           	opt callstack 17
 10610  00377E                     
 10611                           ;nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 10612  00377E  0E00               	movlw	0
 10613  003780  6E12               	movwf	nwkFrameAlloc@i^0,c
 10614  003782                     l5814:
 10615                           
 10616                           ;nwk/nwk_src/nwkFrame.c: 83:   {;nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STATE_FRE
      +                          E == nwkFrameFrames[i].state)
 10617  003782  5012               	movf	nwkFrameAlloc@i^0,w,c
 10618  003784  0D89               	mullw	137
 10619  003786  0EBD               	movlw	low _nwkFrameFrames
 10620  003788  24F3               	addwf	243,w,c
 10621  00378A  6ED9               	movwf	fsr2l,c
 10622  00378C  0E03               	movlw	high _nwkFrameFrames
 10623  00378E  20F4               	addwfc	prodh,w,c
 10624  003790  6EDA               	movwf	fsr2h,c
 10625  003792  50DF               	movf	indf2,w,c
 10626  003794  A4D8               	btfss	status,2,c
 10627  003796  EFCF  F01B         	goto	u3421
 10628  00379A  EFD1  F01B         	goto	u3420
 10629  00379E                     u3421:
 10630  00379E  EF16  F01C         	goto	l5828
 10631  0037A2                     u3420:
 10632  0037A2                     
 10633                           ;nwk/nwk_src/nwkFrame.c: 85:     {;nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFrameFra
      +                          mes[i], 0, sizeof(NwkFrame_t));
 10634  0037A2  5012               	movf	nwkFrameAlloc@i^0,w,c
 10635  0037A4  0D89               	mullw	137
 10636  0037A6  0EBD               	movlw	low _nwkFrameFrames
 10637  0037A8  24F3               	addwf	243,w,c
 10638  0037AA  6E02               	movwf	memset@dest^0,c
 10639  0037AC  0E03               	movlw	high _nwkFrameFrames
 10640  0037AE  20F4               	addwfc	prodh,w,c
 10641  0037B0  6E03               	movwf	(memset@dest+1)^0,c
 10642  0037B2  0E00               	movlw	0
 10643  0037B4  6E05               	movwf	(memset@c+1)^0,c
 10644  0037B6  0E00               	movlw	0
 10645  0037B8  6E04               	movwf	memset@c^0,c
 10646  0037BA  0E00               	movlw	0
 10647  0037BC  6E07               	movwf	(memset@n+1)^0,c
 10648  0037BE  0E89               	movlw	137
 10649  0037C0  6E06               	movwf	memset@n^0,c
 10650  0037C2  EC17  F00F         	call	_memset	;wreg free
 10651  0037C6                     
 10652                           ;nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 10653  0037C6  5012               	movf	nwkFrameAlloc@i^0,w,c
 10654  0037C8  0D89               	mullw	137
 10655  0037CA  0EBE               	movlw	low (_nwkFrameFrames+1)
 10656  0037CC  24F3               	addwf	243,w,c
 10657  0037CE  6ED9               	movwf	fsr2l,c
 10658  0037D0  0E03               	movlw	high (_nwkFrameFrames+1)
 10659  0037D2  20F4               	addwfc	prodh,w,c
 10660  0037D4  6EDA               	movwf	fsr2h,c
 10661  0037D6  0E10               	movlw	16
 10662  0037D8  6EDF               	movwf	indf2,c
 10663  0037DA                     
 10664                           ;nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data + 
      +                          sizeof(NwkFrameHeader_t);
 10665  0037DA  5012               	movf	nwkFrameAlloc@i^0,w,c
 10666  0037DC  0D89               	mullw	137
 10667  0037DE  0EBD               	movlw	low _nwkFrameFrames
 10668  0037E0  6E10               	movwf	??_nwkFrameAlloc^0,c
 10669  0037E2  0E03               	movlw	high _nwkFrameFrames
 10670  0037E4  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 10671  0037E6  0E12               	movlw	18
 10672  0037E8  2610               	addwf	??_nwkFrameAlloc^0,f,c
 10673  0037EA  0E00               	movlw	0
 10674  0037EC  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 10675  0037EE  50F3               	movf	243,w,c
 10676  0037F0  2610               	addwf	??_nwkFrameAlloc^0,f,c
 10677  0037F2  50F4               	movf	244,w,c
 10678  0037F4  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 10679  0037F6  5012               	movf	nwkFrameAlloc@i^0,w,c
 10680  0037F8  0D89               	mullw	137
 10681  0037FA  0E3E               	movlw	low (_nwkFrameFrames+129)
 10682  0037FC  24F3               	addwf	243,w,c
 10683  0037FE  6ED9               	movwf	fsr2l,c
 10684  003800  0E04               	movlw	high (_nwkFrameFrames+129)
 10685  003802  20F4               	addwfc	prodh,w,c
 10686  003804  6EDA               	movwf	fsr2h,c
 10687  003806  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 10688  00380C  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 10689  003812                     
 10690                           ;nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 10691  003812  0100               	movlb	0	; () banked
 10692  003814  4B86               	infsnz	(_nwkIb+38)& (0+255),f,b
 10693  003816  2B87               	incf	(_nwkIb+39)& (0+255),f,b
 10694  003818                     
 10695                           ; BSR set to: 0
 10696                           ;nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 10697  003818  5012               	movf	nwkFrameAlloc@i^0,w,c
 10698  00381A  0D89               	mullw	137
 10699  00381C  0EBD               	movlw	low _nwkFrameFrames
 10700  00381E  24F3               	addwf	243,w,c
 10701  003820  6E0E               	movwf	?_nwkFrameAlloc^0,c
 10702  003822  0E03               	movlw	high _nwkFrameFrames
 10703  003824  20F4               	addwfc	prodh,w,c
 10704  003826  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 10705  003828  EF23  F01C         	goto	l875
 10706  00382C                     l5828:
 10707                           
 10708                           ;nwk/nwk_src/nwkFrame.c: 92:   }
 10709  00382C  2A12               	incf	nwkFrameAlloc@i^0,f,c
 10710  00382E  0E04               	movlw	4
 10711  003830  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 10712  003832  EF1D  F01C         	goto	u3431
 10713  003836  EF1F  F01C         	goto	u3430
 10714  00383A                     u3431:
 10715  00383A  EFC1  F01B         	goto	l5814
 10716  00383E                     u3430:
 10717  00383E                     
 10718                           ;nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 10719  00383E  0E00               	movlw	0
 10720  003840  6E0E               	movwf	?_nwkFrameAlloc^0,c
 10721  003842  0E00               	movlw	0
 10722  003844  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 10723  003846                     l875:
 10724  003846  0012               	return		;funcret
 10725  003848                     __end_of_nwkFrameAlloc:
 10726                           	opt callstack 0
 10727                           
 10728 ;; *************** function _memset *****************
 10729 ;; Defined at:
 10730 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  dest            2    1[COMRAM] PTR void 
 10733 ;;		 -> nwkFrameFrames(685), 
 10734 ;;  c               2    3[COMRAM] int 
 10735 ;;  n               2    5[COMRAM] unsigned int 
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;  s               2   11[COMRAM] PTR unsigned char 
 10738 ;;		 -> nwkFrameFrames(685), 
 10739 ;;  k               2    9[COMRAM] unsigned int 
 10740 ;; Return value:  Size  Location     Type
 10741 ;;                  2    1[COMRAM] PTR void 
 10742 ;; Registers used:
 10743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10744 ;; Tracked objects:
 10745 ;;		On entry : 0/0
 10746 ;;		On exit  : 0/0
 10747 ;;		Unchanged: 0/0
 10748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10749 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10750 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10752 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10753 ;;Total ram usage:       12 bytes
 10754 ;; Hardware stack levels used:    1
 10755 ;; Hardware stack levels required when called:    7
 10756 ;; This function calls:
 10757 ;;		Nothing
 10758 ;; This function is called by:
 10759 ;;		_nwkFrameAlloc
 10760 ;; This function uses a non-reentrant model
 10761 ;;
 10762                           
 10763                           	psect	text67
 10764  001E2E                     __ptext67:
 10765                           	opt callstack 0
 10766  001E2E                     _memset:
 10767                           	opt callstack 17
 10768  001E2E  0060  F008  F00C   	movff	memset@dest,memset@s
 10769  001E34  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 10770  001E3A  5006               	movf	memset@n^0,w,c
 10771  001E3C  1007               	iorwf	(memset@n+1)^0,w,c
 10772  001E3E  A4D8               	btfss	status,2,c
 10773  001E40  EF24  F00F         	goto	u3211
 10774  001E44  EF26  F00F         	goto	u3210
 10775  001E48                     u3211:
 10776  001E48  EF28  F00F         	goto	l5654
 10777  001E4C                     u3210:
 10778  001E4C  EFE2  F00F         	goto	l2790
 10779  001E50                     l5654:
 10780  001E50  0060  F033  FFD9   	movff	memset@s,fsr2l
 10781  001E56  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 10782  001E5C  0060  F013  FFDF   	movff	memset@c,indf2
 10783  001E62  5006               	movf	memset@n^0,w,c
 10784  001E64  240C               	addwf	memset@s^0,w,c
 10785  001E66  6E08               	movwf	??_memset^0,c
 10786  001E68  5007               	movf	(memset@n+1)^0,w,c
 10787  001E6A  200D               	addwfc	(memset@s+1)^0,w,c
 10788  001E6C  6E09               	movwf	(??_memset+1)^0,c
 10789  001E6E  0EFF               	movlw	255
 10790  001E70  2408               	addwf	??_memset^0,w,c
 10791  001E72  6ED9               	movwf	fsr2l,c
 10792  001E74  0EFF               	movlw	255
 10793  001E76  2009               	addwfc	(??_memset+1)^0,w,c
 10794  001E78  6EDA               	movwf	fsr2h,c
 10795  001E7A  0060  F013  FFDF   	movff	memset@c,indf2
 10796  001E80  5007               	movf	(memset@n+1)^0,w,c
 10797  001E82  E107               	bnz	u3221
 10798  001E84  0E03               	movlw	3
 10799  001E86  5C06               	subwf	memset@n^0,w,c
 10800  001E88  B0D8               	btfsc	status,0,c
 10801  001E8A  EF49  F00F         	goto	u3221
 10802  001E8E  EF4B  F00F         	goto	u3220
 10803  001E92                     u3221:
 10804  001E92  EF4D  F00F         	goto	l5660
 10805  001E96                     u3220:
 10806  001E96  EFE2  F00F         	goto	l2790
 10807  001E9A                     l5660:
 10808  001E9A  EE20 F001          	lfsr	2,1
 10809  001E9E  500C               	movf	memset@s^0,w,c
 10810  001EA0  26D9               	addwf	fsr2l,f,c
 10811  001EA2  500D               	movf	(memset@s+1)^0,w,c
 10812  001EA4  22DA               	addwfc	fsr2h,f,c
 10813  001EA6  0060  F013  FFDF   	movff	memset@c,indf2
 10814  001EAC  EE20 F002          	lfsr	2,2
 10815  001EB0  500C               	movf	memset@s^0,w,c
 10816  001EB2  26D9               	addwf	fsr2l,f,c
 10817  001EB4  500D               	movf	(memset@s+1)^0,w,c
 10818  001EB6  22DA               	addwfc	fsr2h,f,c
 10819  001EB8  0060  F013  FFDF   	movff	memset@c,indf2
 10820  001EBE  5006               	movf	memset@n^0,w,c
 10821  001EC0  240C               	addwf	memset@s^0,w,c
 10822  001EC2  6E08               	movwf	??_memset^0,c
 10823  001EC4  5007               	movf	(memset@n+1)^0,w,c
 10824  001EC6  200D               	addwfc	(memset@s+1)^0,w,c
 10825  001EC8  6E09               	movwf	(??_memset+1)^0,c
 10826  001ECA  0EFE               	movlw	254
 10827  001ECC  2408               	addwf	??_memset^0,w,c
 10828  001ECE  6ED9               	movwf	fsr2l,c
 10829  001ED0  0EFF               	movlw	255
 10830  001ED2  2009               	addwfc	(??_memset+1)^0,w,c
 10831  001ED4  6EDA               	movwf	fsr2h,c
 10832  001ED6  0060  F013  FFDF   	movff	memset@c,indf2
 10833  001EDC  5006               	movf	memset@n^0,w,c
 10834  001EDE  240C               	addwf	memset@s^0,w,c
 10835  001EE0  6E08               	movwf	??_memset^0,c
 10836  001EE2  5007               	movf	(memset@n+1)^0,w,c
 10837  001EE4  200D               	addwfc	(memset@s+1)^0,w,c
 10838  001EE6  6E09               	movwf	(??_memset+1)^0,c
 10839  001EE8  0EFD               	movlw	253
 10840  001EEA  2408               	addwf	??_memset^0,w,c
 10841  001EEC  6ED9               	movwf	fsr2l,c
 10842  001EEE  0EFF               	movlw	255
 10843  001EF0  2009               	addwfc	(??_memset+1)^0,w,c
 10844  001EF2  6EDA               	movwf	fsr2h,c
 10845  001EF4  0060  F013  FFDF   	movff	memset@c,indf2
 10846  001EFA  5007               	movf	(memset@n+1)^0,w,c
 10847  001EFC  E107               	bnz	u3231
 10848  001EFE  0E07               	movlw	7
 10849  001F00  5C06               	subwf	memset@n^0,w,c
 10850  001F02  B0D8               	btfsc	status,0,c
 10851  001F04  EF86  F00F         	goto	u3231
 10852  001F08  EF88  F00F         	goto	u3230
 10853  001F0C                     u3231:
 10854  001F0C  EF8A  F00F         	goto	l5666
 10855  001F10                     u3230:
 10856  001F10  EFE2  F00F         	goto	l2790
 10857  001F14                     l5666:
 10858  001F14  EE20 F003          	lfsr	2,3
 10859  001F18  500C               	movf	memset@s^0,w,c
 10860  001F1A  26D9               	addwf	fsr2l,f,c
 10861  001F1C  500D               	movf	(memset@s+1)^0,w,c
 10862  001F1E  22DA               	addwfc	fsr2h,f,c
 10863  001F20  0060  F013  FFDF   	movff	memset@c,indf2
 10864  001F26  5006               	movf	memset@n^0,w,c
 10865  001F28  240C               	addwf	memset@s^0,w,c
 10866  001F2A  6E08               	movwf	??_memset^0,c
 10867  001F2C  5007               	movf	(memset@n+1)^0,w,c
 10868  001F2E  200D               	addwfc	(memset@s+1)^0,w,c
 10869  001F30  6E09               	movwf	(??_memset+1)^0,c
 10870  001F32  0EFC               	movlw	252
 10871  001F34  2408               	addwf	??_memset^0,w,c
 10872  001F36  6ED9               	movwf	fsr2l,c
 10873  001F38  0EFF               	movlw	255
 10874  001F3A  2009               	addwfc	(??_memset+1)^0,w,c
 10875  001F3C  6EDA               	movwf	fsr2h,c
 10876  001F3E  0060  F013  FFDF   	movff	memset@c,indf2
 10877  001F44  5007               	movf	(memset@n+1)^0,w,c
 10878  001F46  E107               	bnz	u3241
 10879  001F48  0E09               	movlw	9
 10880  001F4A  5C06               	subwf	memset@n^0,w,c
 10881  001F4C  B0D8               	btfsc	status,0,c
 10882  001F4E  EFAB  F00F         	goto	u3241
 10883  001F52  EFAD  F00F         	goto	u3240
 10884  001F56                     u3241:
 10885  001F56  EFAF  F00F         	goto	l5672
 10886  001F5A                     u3240:
 10887  001F5A  EFE2  F00F         	goto	l2790
 10888  001F5E                     l5672:
 10889  001F5E  0060  F030  F008   	movff	memset@s,??_memset
 10890  001F64  0060  F034  F009   	movff	memset@s+1,??_memset+1
 10891  001F6A  1E08               	comf	??_memset^0,f,c
 10892  001F6C  1E09               	comf	(??_memset+1)^0,f,c
 10893  001F6E  4A08               	infsnz	??_memset^0,f,c
 10894  001F70  2A09               	incf	(??_memset+1)^0,f,c
 10895  001F72  0E03               	movlw	3
 10896  001F74  1408               	andwf	??_memset^0,w,c
 10897  001F76  6E0A               	movwf	memset@k^0,c
 10898  001F78  6A0B               	clrf	(memset@k+1)^0,c
 10899  001F7A  500A               	movf	memset@k^0,w,c
 10900  001F7C  260C               	addwf	memset@s^0,f,c
 10901  001F7E  500B               	movf	(memset@k+1)^0,w,c
 10902  001F80  220D               	addwfc	(memset@s+1)^0,f,c
 10903  001F82  500A               	movf	memset@k^0,w,c
 10904  001F84  5E06               	subwf	memset@n^0,f,c
 10905  001F86  500B               	movf	(memset@k+1)^0,w,c
 10906  001F88  5A07               	subwfb	(memset@n+1)^0,f,c
 10907  001F8A  0EFC               	movlw	252
 10908  001F8C  1606               	andwf	memset@n^0,f,c
 10909  001F8E  0EFF               	movlw	255
 10910  001F90  1607               	andwf	(memset@n+1)^0,f,c
 10911  001F92  EFD9  F00F         	goto	l5680
 10912  001F96                     l5674:
 10913  001F96  0060  F033  FFD9   	movff	memset@s,fsr2l
 10914  001F9C  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 10915  001FA2  0060  F013  FFDF   	movff	memset@c,indf2
 10916  001FA8  0606               	decf	memset@n^0,f,c
 10917  001FAA  A0D8               	btfss	status,0,c
 10918  001FAC  0607               	decf	(memset@n+1)^0,f,c
 10919  001FAE  4A0C               	infsnz	memset@s^0,f,c
 10920  001FB0  2A0D               	incf	(memset@s+1)^0,f,c
 10921  001FB2                     l5680:
 10922  001FB2  5006               	movf	memset@n^0,w,c
 10923  001FB4  1007               	iorwf	(memset@n+1)^0,w,c
 10924  001FB6  A4D8               	btfss	status,2,c
 10925  001FB8  EFE0  F00F         	goto	u3251
 10926  001FBC  EFE2  F00F         	goto	u3250
 10927  001FC0                     u3251:
 10928  001FC0  EFCB  F00F         	goto	l5674
 10929  001FC4                     u3250:
 10930  001FC4                     l2790:
 10931  001FC4  0012               	return		;funcret
 10932  001FC6                     __end_of_memset:
 10933                           	opt callstack 0
 10934                           
 10935 ;; *************** function _memcpy *****************
 10936 ;; Defined at:
 10937 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  d1              2    1[COMRAM] PTR void 
 10940 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 10941 ;;  s1              2    3[COMRAM] PTR const void 
 10942 ;;		 -> message(5), phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), 
 10943 ;;		 -> NULL(0), 
 10944 ;;  n               2    5[COMRAM] unsigned int 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10947 ;;		 -> message(5), phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), 
 10948 ;;		 -> NULL(0), 
 10949 ;;  d               2    7[COMRAM] PTR unsigned char 
 10950 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 10951 ;;  tmp             1   11[COMRAM] unsigned char 
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  2    1[COMRAM] PTR void 
 10954 ;; Registers used:
 10955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/0
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10961 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10962 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10964 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10965 ;;Total ram usage:       11 bytes
 10966 ;; Hardware stack levels used:    1
 10967 ;; Hardware stack levels required when called:    7
 10968 ;; This function calls:
 10969 ;;		Nothing
 10970 ;; This function is called by:
 10971 ;;		_nwkDataReqSendFrame
 10972 ;;		_PHY_DataInd
 10973 ;;		_nwkTxBroadcastFrame
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           	psect	text68
 10978  0043CA                     __ptext68:
 10979                           	opt callstack 0
 10980  0043CA                     _memcpy:
 10981                           	opt callstack 18
 10982  0043CA  0060  F010  F00A   	movff	memcpy@s1,memcpy@s
 10983  0043D0  0060  F014  F00B   	movff	memcpy@s1+1,memcpy@s+1
 10984  0043D6  0060  F008  F008   	movff	memcpy@d1,memcpy@d
 10985  0043DC  0060  F00C  F009   	movff	memcpy@d1+1,memcpy@d+1
 10986  0043E2  EF08  F022         	goto	l5846
 10987  0043E6                     l5838:
 10988  0043E6  0060  F02B  FFD9   	movff	memcpy@s,fsr2l
 10989  0043EC  0060  F02F  FFDA   	movff	memcpy@s+1,fsr2h
 10990  0043F2  50DF               	movf	indf2,w,c
 10991  0043F4  6E0C               	movwf	memcpy@tmp^0,c
 10992  0043F6  4A0A               	infsnz	memcpy@s^0,f,c
 10993  0043F8  2A0B               	incf	(memcpy@s+1)^0,f,c
 10994  0043FA  0060  F023  FFD9   	movff	memcpy@d,fsr2l
 10995  004400  0060  F027  FFDA   	movff	memcpy@d+1,fsr2h
 10996  004406  0060  F033  FFDF   	movff	memcpy@tmp,indf2
 10997  00440C  4A08               	infsnz	memcpy@d^0,f,c
 10998  00440E  2A09               	incf	(memcpy@d+1)^0,f,c
 10999  004410                     l5846:
 11000  004410  0606               	decf	memcpy@n^0,f,c
 11001  004412  A0D8               	btfss	status,0,c
 11002  004414  0607               	decf	(memcpy@n+1)^0,f,c
 11003  004416  2806               	incf	memcpy@n^0,w,c
 11004  004418  E106               	bnz	u3441
 11005  00441A  2807               	incf	(memcpy@n+1)^0,w,c
 11006  00441C  A4D8               	btfss	status,2,c
 11007  00441E  EF13  F022         	goto	u3441
 11008  004422  EF15  F022         	goto	u3440
 11009  004426                     u3441:
 11010  004426  EFF3  F021         	goto	l5838
 11011  00442A                     u3440:
 11012  00442A  0012               	return		;funcret
 11013  00442C                     __end_of_memcpy:
 11014                           	opt callstack 0
 11015                           
 11016 ;; *************** function _nwkDataReqConfirm *****************
 11017 ;; Defined at:
 11018 ;;		line 188 in file "nwk/nwk_src/nwkDataReq.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 11021 ;;		 -> nwkDataReq(19), NULL(0), 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  prev            2    5[COMRAM] PTR struct NWK_DataReq_t
 11024 ;;		 -> nwkDataReq(19), NULL(0), 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11037 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;Total ram usage:        6 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    7
 11041 ;; This function calls:
 11042 ;;		Nothing
 11043 ;; This function is called by:
 11044 ;;		_nwkDataReqTaskHandler
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048                           	psect	text69
 11049  003848                     __ptext69:
 11050                           	opt callstack 0
 11051  003848                     _nwkDataReqConfirm:
 11052                           	opt callstack 20
 11053  003848                     
 11054                           ;nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);nwk/nw
      +                          k_src/nwkDataReq.c: 189: {;nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue == req)
 11055  003848  5002               	movf	nwkDataReqConfirm@req^0,w,c
 11056  00384A  183F               	xorwf	_nwkDataReqQueue^0,w,c
 11057  00384C  E107               	bnz	u4491
 11058  00384E  5003               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 11059  003850  1840               	xorwf	(_nwkDataReqQueue+1)^0,w,c
 11060  003852  A4D8               	btfss	status,2,c
 11061  003854  EF2E  F01C         	goto	u4491
 11062  003858  EF30  F01C         	goto	u4490
 11063  00385C                     u4491:
 11064  00385C  EF3E  F01C         	goto	l6674
 11065  003860                     u4490:
 11066  003860                     
 11067                           ;nwk/nwk_src/nwkDataReq.c: 191:   {;nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQueue =
      +                           nwkDataReqQueue->next;
 11068  003860  0060  F0FF  FFD9   	movff	_nwkDataReqQueue,fsr2l
 11069  003866  0060  F103  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 11070  00386C  006F FF78  F03F    	movff	postinc2,_nwkDataReqQueue
 11071  003872  006F FF74  F040    	movff	postdec2,_nwkDataReqQueue+1
 11072                           
 11073                           ;nwk/nwk_src/nwkDataReq.c: 193:   }
 11074  003878  EF82  F01C         	goto	l6682
 11075  00387C                     l6674:
 11076                           
 11077                           ;nwk/nwk_src/nwkDataReq.c: 195:   {;nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq_t *pr
      +                          ev = nwkDataReqQueue;
 11078  00387C  0060  F0FC  F006   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 11079  003882  0060  F100  F007   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 11080                           
 11081                           ;nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 11082  003888  EF52  F01C         	goto	l6678
 11083  00388C                     l6676:
 11084                           
 11085                           ;nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 11086  00388C  0060  F01B  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 11087  003892  0060  F01F  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 11088  003898  006F FF78  F006    	movff	postinc2,nwkDataReqConfirm@prev
 11089  00389E  006F FF74  F007    	movff	postdec2,nwkDataReqConfirm@prev+1
 11090  0038A4                     l6678:
 11091                           
 11092                           ;nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 11093  0038A4  0060  F01B  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 11094  0038AA  0060  F01F  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 11095  0038B0  5002               	movf	nwkDataReqConfirm@req^0,w,c
 11096  0038B2  18DE               	xorwf	postinc2,w,c
 11097  0038B4  E107               	bnz	u4501
 11098  0038B6  5003               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 11099  0038B8  18DE               	xorwf	postinc2,w,c
 11100  0038BA  A4D8               	btfss	status,2,c
 11101  0038BC  EF62  F01C         	goto	u4501
 11102  0038C0  EF64  F01C         	goto	u4500
 11103  0038C4                     u4501:
 11104  0038C4  EF46  F01C         	goto	l6676
 11105  0038C8                     u4500:
 11106  0038C8                     
 11107                           ;nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 11108  0038C8  0060  F01B  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 11109  0038CE  0060  F01F  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 11110  0038D4  006F FF78  F004    	movff	postinc2,??_nwkDataReqConfirm
 11111  0038DA  006F FF74  F005    	movff	postdec2,??_nwkDataReqConfirm+1
 11112  0038E0  0060  F013  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 11113  0038E6  0060  F017  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 11114  0038EC  0060  F01B  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 11115  0038F2  0060  F01F  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 11116  0038F8  006F FF7B FFE6     	movff	postinc2,postinc1
 11117  0038FE  006F FF77 FFE5     	movff	postdec2,postdec1
 11118  003904                     l6682:
 11119                           
 11120                           ;nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 11121  003904  0100               	movlb	0	; () banked
 11122  003906  0786               	decf	(_nwkIb+38)& (0+255),f,b
 11123  003908  A0D8               	btfss	status,0,c
 11124  00390A  0787               	decf	(_nwkIb+39)& (0+255),f,b
 11125  00390C                     
 11126                           ; BSR set to: 0
 11127  00390C  0012               	return		;funcret
 11128  00390E                     __end_of_nwkDataReqConfirm:
 11129                           	opt callstack 0
 11130                           
 11131 ;; *************** function _SYS_Init *****************
 11132 ;; Defined at:
 11133 ;;		line 58 in file "sys/sys_src/sys.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;		None
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;		None
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      void 
 11140 ;; Registers used:
 11141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;Total ram usage:        0 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:   15
 11154 ;; This function calls:
 11155 ;;		_NWK_Init
 11156 ;;		_PHY_Init
 11157 ;;		_SYS_TimerInit
 11158 ;; This function is called by:
 11159 ;;		_main
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text70
 11164  00507A                     __ptext70:
 11165                           	opt callstack 0
 11166  00507A                     _SYS_Init:
 11167                           	opt callstack 15
 11168  00507A                     
 11169                           ;sys/sys_src/sys.c: 60:   SYS_TimerInit();
 11170  00507A  EC79  F028         	call	_SYS_TimerInit	;wreg free
 11171  00507E                     
 11172                           ;sys/sys_src/sys.c: 61:   PHY_Init();
 11173  00507E  EC8D  F028         	call	_PHY_Init	;wreg free
 11174  005082                     
 11175                           ;sys/sys_src/sys.c: 62:   NWK_Init();
 11176  005082  EC16  F022         	call	_NWK_Init	;wreg free
 11177  005086  0012               	return		;funcret
 11178  005088                     __end_of_SYS_Init:
 11179                           	opt callstack 0
 11180                           
 11181 ;; *************** function _SYS_TimerInit *****************
 11182 ;; Defined at:
 11183 ;;		line 63 in file "sys/sys_src/sysTimer.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;		None
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;		None
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      void 
 11190 ;; Registers used:
 11191 ;;		wreg, status,2, status,0
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;Total ram usage:        0 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    7
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_SYS_Init
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text71
 11212  0050F2                     __ptext71:
 11213                           	opt callstack 0
 11214  0050F2                     _SYS_TimerInit:
 11215                           	opt callstack 22
 11216  0050F2                     
 11217                           ;sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 11218  0050F2  0E00               	movlw	0
 11219  0050F4  6E3B               	movwf	_timers^0,c
 11220  0050F6  0E00               	movlw	0
 11221  0050F8  6E3C               	movwf	(_timers+1)^0,c
 11222  0050FA  0012               	return		;funcret
 11223  0050FC                     __end_of_SYS_TimerInit:
 11224                           	opt callstack 0
 11225                           
 11226 ;; *************** function _PHY_Init *****************
 11227 ;; Defined at:
 11228 ;;		line 830 in file "phy/sx1216/phy_src/phy.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;		None
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;		None
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  1    wreg      void 
 11235 ;; Registers used:
 11236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11246 ;;Total ram usage:        0 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; Hardware stack levels required when called:   14
 11249 ;; This function calls:
 11250 ;;		_initRadio
 11251 ;; This function is called by:
 11252 ;;		_SYS_Init
 11253 ;; This function uses a non-reentrant model
 11254 ;;
 11255                           
 11256                           	psect	text72
 11257  00511A                     __ptext72:
 11258                           	opt callstack 0
 11259  00511A                     _PHY_Init:
 11260                           	opt callstack 15
 11261  00511A                     
 11262                           ;phy/sx1216/phy_src/phy.c: 831:     initRadio();
 11263  00511A  EC70  F011         	call	_initRadio	;wreg free
 11264  00511E  0012               	return		;funcret
 11265  005120                     __end_of_PHY_Init:
 11266                           	opt callstack 0
 11267                           
 11268 ;; *************** function _initRadio *****************
 11269 ;; Defined at:
 11270 ;;		line 491 in file "phy/sx1216/phy_src/phy.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;		None
 11273 ;; Auto vars:     Size  Location     Type
 11274 ;;  BWset           4    0        unsigned long 
 11275 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 11276 ;;  version         1   54[COMRAM] unsigned char 
 11277 ;; Return value:  Size  Location     Type
 11278 ;;                  1    wreg      void 
 11279 ;; Registers used:
 11280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11281 ;; Tracked objects:
 11282 ;;		On entry : 0/0
 11283 ;;		On exit  : 0/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11287 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11290 ;;Total ram usage:        7 bytes
 11291 ;; Hardware stack levels used:    1
 11292 ;; Hardware stack levels required when called:   13
 11293 ;; This function calls:
 11294 ;;		_SX1276Read
 11295 ;;		_SX1276Write
 11296 ;;		_computeFRF
 11297 ;;		_enableCrc
 11298 ;;		_explicitHeaderMode
 11299 ;;		_receive
 11300 ;;		_setCodingRate4
 11301 ;;		_setFrequency
 11302 ;;		_setPreambleLength
 11303 ;;		_setSignalBandwidth
 11304 ;;		_setSpreadingFactor
 11305 ;;		_setTxPower
 11306 ;;		_srand
 11307 ;; This function is called by:
 11308 ;;		_radio_engine
 11309 ;;		_PHY_Init
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           	psect	text73
 11314  0022E0                     __ptext73:
 11315                           	opt callstack 0
 11316  0022E0                     _initRadio:
 11317                           	opt callstack 14
 11318  0022E0  9ABC               	bcf	188,5,c	;volatile
 11319  0022E2                     
 11320                           ;phy/sx1216/phy_src/phy.c: 498:     _delay((unsigned long)((100)*(64000000/4000.0)));
 11321  0022E2  0E09               	movlw	9
 11322  0022E4  6E34               	movwf	(??_initRadio+1)^0,c
 11323  0022E6  0E1E               	movlw	30
 11324  0022E8  6E33               	movwf	??_initRadio^0,c
 11325  0022EA  0EE4               	movlw	228
 11326  0022EC                     u5947:
 11327  0022EC  2EE8               	decfsz	wreg,f,c
 11328  0022EE  D7FE               	bra	u5947
 11329  0022F0  2E33               	decfsz	??_initRadio^0,f,c
 11330  0022F2  D7FC               	bra	u5947
 11331  0022F4  2E34               	decfsz	(??_initRadio+1)^0,f,c
 11332  0022F6  D7FA               	bra	u5947
 11333  0022F8  D000               	nop2	
 11334  0022FA  8ABC               	bsf	188,5,c	;volatile
 11335  0022FC                     
 11336                           ;phy/sx1216/phy_src/phy.c: 500:     computeFRF();
 11337  0022FC  ECE3  F00F         	call	_computeFRF	;wreg free
 11338  002300                     
 11339                           ;phy/sx1216/phy_src/phy.c: 501:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11340  002300  0E29               	movlw	41
 11341  002302  6E34               	movwf	(??_initRadio+1)^0,c
 11342  002304  0E96               	movlw	150
 11343  002306  6E33               	movwf	??_initRadio^0,c
 11344  002308  0E7F               	movlw	127
 11345  00230A                     u5957:
 11346  00230A  2EE8               	decfsz	wreg,f,c
 11347  00230C  D7FE               	bra	u5957
 11348  00230E  2E33               	decfsz	??_initRadio^0,f,c
 11349  002310  D7FC               	bra	u5957
 11350  002312  2E34               	decfsz	(??_initRadio+1)^0,f,c
 11351  002314  D7FA               	bra	u5957
 11352  002316  F000               	nop	
 11353  002318                     
 11354                           ;phy/sx1216/phy_src/phy.c: 503:     version = SX1276Read(0x42);
 11355  002318  0E42               	movlw	66
 11356  00231A  ECE5  F027         	call	_SX1276Read
 11357  00231E  6E37               	movwf	initRadio@version^0,c
 11358  002320                     
 11359                           ;phy/sx1216/phy_src/phy.c: 504:     version++;
 11360  002320  2A37               	incf	initRadio@version^0,f,c
 11361  002322                     
 11362                           ;phy/sx1216/phy_src/phy.c: 505:     SX1276Write(0x01,0x00);
 11363  002322  0E00               	movlw	0
 11364  002324  6E0F               	movwf	SX1276Write@data^0,c
 11365  002326  0E01               	movlw	1
 11366  002328  EC13  F028         	call	_SX1276Write
 11367  00232C                     
 11368                           ;phy/sx1216/phy_src/phy.c: 506:     SX1276Write(0x01,0x80);
 11369  00232C  0E80               	movlw	128
 11370  00232E  6E0F               	movwf	SX1276Write@data^0,c
 11371  002330  0E01               	movlw	1
 11372  002332  EC13  F028         	call	_SX1276Write
 11373  002336                     
 11374                           ;phy/sx1216/phy_src/phy.c: 508:     setFrequency(fhssList[0]);
 11375  002336  0EF5               	movlw	low _fhssList
 11376  002338  6EF6               	movwf	tblptrl,c
 11377  00233A                     	if	1	;There is more than 1 active tblptr byte
 11378  00233A  0EFE               	movlw	high _fhssList
 11379  00233C  6EF7               	movwf	tblptrh,c
 11380  00233E                     	endif
 11381  00233E                     	if	1	;There are 3 active tblptr bytes
 11382  00233E  0E00               	movlw	low (_fhssList shr (0+16))
 11383  002340  6EF8               	movwf	tblptru,c
 11384  002342                     	endif
 11385  002342  0009               	tblrd		*+
 11386  002344  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 11387  00234A  0009               	tblrd		*+
 11388  00234C  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 11389  002352  0009               	tblrd		*+
 11390  002354  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 11391  00235A  000A               	tblrd		*-
 11392  00235C  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 11393  002362  EC50  F015         	call	_setFrequency	;wreg free
 11394  002366                     
 11395                           ;phy/sx1216/phy_src/phy.c: 509:     setSpreadingFactor(7);
 11396  002366  0E07               	movlw	7
 11397  002368  ECE5  F015         	call	_setSpreadingFactor
 11398  00236C                     
 11399                           ;phy/sx1216/phy_src/phy.c: 510:     setTxPower(13);
 11400  00236C  0E0D               	movlw	13
 11401  00236E  EC5E  F025         	call	_setTxPower
 11402  002372                     
 11403                           ;phy/sx1216/phy_src/phy.c: 511:     setSignalBandwidth(500E3);
 11404  002372  0E20               	movlw	32
 11405  002374  6E23               	movwf	setSignalBandwidth@sbw^0,c
 11406  002376  0EA1               	movlw	161
 11407  002378  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 11408  00237A  0E07               	movlw	7
 11409  00237C  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 11410  00237E  0E00               	movlw	0
 11411  002380  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 11412  002382  EC59  F000         	call	_setSignalBandwidth	;wreg free
 11413  002386                     
 11414                           ;phy/sx1216/phy_src/phy.c: 512:     explicitHeaderMode();
 11415  002386  EC08  F028         	call	_explicitHeaderMode	;wreg free
 11416  00238A                     
 11417                           ;phy/sx1216/phy_src/phy.c: 513:     setCodingRate4(4);
 11418  00238A  0E04               	movlw	4
 11419  00238C  EC7B  F023         	call	_setCodingRate4
 11420  002390                     
 11421                           ;phy/sx1216/phy_src/phy.c: 514:     setPreambleLength(12);
 11422  002390  0E00               	movlw	0
 11423  002392  6E12               	movwf	(setPreambleLength@length+1)^0,c
 11424  002394  0E0C               	movlw	12
 11425  002396  6E11               	movwf	setPreambleLength@length^0,c
 11426  002398  ECD9  F027         	call	_setPreambleLength	;wreg free
 11427  00239C                     
 11428                           ;phy/sx1216/phy_src/phy.c: 515:     enableCrc();
 11429  00239C  EC1E  F028         	call	_enableCrc	;wreg free
 11430  0023A0                     
 11431                           ;phy/sx1216/phy_src/phy.c: 516:     SX1276Write(0x0E, 0x0);
 11432  0023A0  0E00               	movlw	0
 11433  0023A2  6E0F               	movwf	SX1276Write@data^0,c
 11434  0023A4  0E0E               	movlw	14
 11435  0023A6  EC13  F028         	call	_SX1276Write
 11436  0023AA                     
 11437                           ;phy/sx1216/phy_src/phy.c: 517:     SX1276Write(0x0F, 0);
 11438  0023AA  0E00               	movlw	0
 11439  0023AC  6E0F               	movwf	SX1276Write@data^0,c
 11440  0023AE  0E0F               	movlw	15
 11441  0023B0  EC13  F028         	call	_SX1276Write
 11442  0023B4                     
 11443                           ;phy/sx1216/phy_src/phy.c: 520:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 11444  0023B4  0E0C               	movlw	12
 11445  0023B6  ECE5  F027         	call	_SX1276Read
 11446  0023BA  0903               	iorlw	3
 11447  0023BC  6E0F               	movwf	SX1276Write@data^0,c
 11448  0023BE  0E0C               	movlw	12
 11449  0023C0  EC13  F028         	call	_SX1276Write
 11450  0023C4                     
 11451                           ;phy/sx1216/phy_src/phy.c: 523:     SX1276Write(0x26, 0x04);
 11452  0023C4  0E04               	movlw	4
 11453  0023C6  6E0F               	movwf	SX1276Write@data^0,c
 11454  0023C8  0E26               	movlw	38
 11455  0023CA  EC13  F028         	call	_SX1276Write
 11456  0023CE                     
 11457                           ;phy/sx1216/phy_src/phy.c: 526:     SX1276Write(0x36,0x02);
 11458  0023CE  0E02               	movlw	2
 11459  0023D0  6E0F               	movwf	SX1276Write@data^0,c
 11460  0023D2  0E36               	movlw	54
 11461  0023D4  EC13  F028         	call	_SX1276Write
 11462  0023D8                     
 11463                           ;phy/sx1216/phy_src/phy.c: 527:     SX1276Write(0x3A,0x64);
 11464  0023D8  0E64               	movlw	100
 11465  0023DA  6E0F               	movwf	SX1276Write@data^0,c
 11466  0023DC  0E3A               	movlw	58
 11467  0023DE  EC13  F028         	call	_SX1276Write
 11468  0023E2                     
 11469                           ;phy/sx1216/phy_src/phy.c: 539:     SX1276Write(0x1F,255);
 11470  0023E2  0EFF               	movlw	255
 11471  0023E4  6E0F               	movwf	SX1276Write@data^0,c
 11472  0023E6  0E1F               	movlw	31
 11473  0023E8  EC13  F028         	call	_SX1276Write
 11474  0023EC                     
 11475                           ;phy/sx1216/phy_src/phy.c: 541:     receive(0);
 11476  0023EC  0E00               	movlw	0
 11477  0023EE  ECA2  F023         	call	_receive
 11478  0023F2                     
 11479                           ;phy/sx1216/phy_src/phy.c: 543:     _delay((unsigned long)((100)*(64000000/4000.0)));
 11480  0023F2  0E09               	movlw	9
 11481  0023F4  6E34               	movwf	(??_initRadio+1)^0,c
 11482  0023F6  0E1E               	movlw	30
 11483  0023F8  6E33               	movwf	??_initRadio^0,c
 11484  0023FA  0EE4               	movlw	228
 11485  0023FC                     u5967:
 11486  0023FC  2EE8               	decfsz	wreg,f,c
 11487  0023FE  D7FE               	bra	u5967
 11488  002400  2E33               	decfsz	??_initRadio^0,f,c
 11489  002402  D7FC               	bra	u5967
 11490  002404  2E34               	decfsz	(??_initRadio+1)^0,f,c
 11491  002406  D7FA               	bra	u5967
 11492  002408  D000               	nop2	
 11493  00240A                     
 11494                           ;phy/sx1216/phy_src/phy.c: 545:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2C);
 11495  00240A  0E2C               	movlw	44
 11496  00240C  ECE5  F027         	call	_SX1276Read
 11497  002410  6E33               	movwf	??_initRadio^0,c
 11498  002412  0E2C               	movlw	44
 11499  002414  ECE5  F027         	call	_SX1276Read
 11500  002418  6E34               	movwf	(??_initRadio+1)^0,c
 11501  00241A  5034               	movf	(??_initRadio+1)^0,w,c
 11502  00241C  6E36               	movwf	(??_initRadio+3)^0,c
 11503  00241E  6A35               	clrf	(??_initRadio+2)^0,c
 11504  002420  5033               	movf	??_initRadio^0,w,c
 11505  002422  2435               	addwf	(??_initRadio+2)^0,w,c
 11506  002424  6E38               	movwf	initRadio@wideRSSI^0,c
 11507  002426  0E00               	movlw	0
 11508  002428  2036               	addwfc	(??_initRadio+3)^0,w,c
 11509  00242A  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 11510  00242C                     
 11511                           ;phy/sx1216/phy_src/phy.c: 547:     srand(wideRSSI);
 11512  00242C  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 11513  002432  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 11514  002438  ECD4  F025         	call	_srand	;wreg free
 11515  00243C  0012               	return		;funcret
 11516  00243E                     __end_of_initRadio:
 11517                           	opt callstack 0
 11518                           
 11519 ;; *************** function _srand *****************
 11520 ;; Defined at:
 11521 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 11522 ;; Parameters:    Size  Location     Type
 11523 ;;  s               2    1[COMRAM] unsigned int 
 11524 ;; Auto vars:     Size  Location     Type
 11525 ;;		None
 11526 ;; Return value:  Size  Location     Type
 11527 ;;                  1    wreg      void 
 11528 ;; Registers used:
 11529 ;;		wreg, status,2, status,0
 11530 ;; Tracked objects:
 11531 ;;		On entry : 0/0
 11532 ;;		On exit  : 0/0
 11533 ;;		Unchanged: 0/0
 11534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11539 ;;Total ram usage:        6 bytes
 11540 ;; Hardware stack levels used:    1
 11541 ;; Hardware stack levels required when called:    7
 11542 ;; This function calls:
 11543 ;;		Nothing
 11544 ;; This function is called by:
 11545 ;;		_initRadio
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           	psect	text74
 11550  004BA8                     __ptext74:
 11551                           	opt callstack 0
 11552  004BA8                     _srand:
 11553                           	opt callstack 19
 11554  004BA8  0EFF               	movlw	255
 11555  004BAA  6E04               	movwf	??_srand^0,c
 11556  004BAC  0EFF               	movlw	255
 11557  004BAE  6E05               	movwf	(??_srand+1)^0,c
 11558  004BB0  0060  F008  F006   	movff	srand@s,??_srand+2
 11559  004BB6  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 11560  004BBC  5004               	movf	??_srand^0,w,c
 11561  004BBE  2606               	addwf	(??_srand+2)^0,f,c
 11562  004BC0  5005               	movf	(??_srand+1)^0,w,c
 11563  004BC2  2207               	addwfc	(??_srand+3)^0,f,c
 11564  004BC4  0060  F018  F0DE   	movff	??_srand+2,_seed
 11565  004BCA  0060  F01C  F0DF   	movff	??_srand+3,_seed+1
 11566  004BD0  0100               	movlb	0	; () banked
 11567  004BD2  6BE0               	clrf	(_seed+2)& (0+255),b
 11568  004BD4  6BE1               	clrf	(_seed+3)& (0+255),b
 11569  004BD6  6BE2               	clrf	(_seed+4)& (0+255),b
 11570  004BD8  6BE3               	clrf	(_seed+5)& (0+255),b
 11571  004BDA  6BE4               	clrf	(_seed+6)& (0+255),b
 11572  004BDC  6BE5               	clrf	(_seed+7)& (0+255),b
 11573  004BDE                     
 11574                           ; BSR set to: 0
 11575  004BDE  0012               	return		;funcret
 11576  004BE0                     __end_of_srand:
 11577                           	opt callstack 0
 11578                           
 11579 ;; *************** function _setTxPower *****************
 11580 ;; Defined at:
 11581 ;;		line 139 in file "phy/sx1216/phy_src/phy.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  power           1    wreg     unsigned char 
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;  power           1   16[COMRAM] unsigned char 
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  1    wreg      void 
 11588 ;; Registers used:
 11589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11590 ;; Tracked objects:
 11591 ;;		On entry : 0/0
 11592 ;;		On exit  : 0/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11599 ;;Total ram usage:        1 bytes
 11600 ;; Hardware stack levels used:    1
 11601 ;; Hardware stack levels required when called:   11
 11602 ;; This function calls:
 11603 ;;		_SX1276Write
 11604 ;; This function is called by:
 11605 ;;		_initRadio
 11606 ;;		_PHY_SetTxPower
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           	psect	text75
 11611  004ABC                     __ptext75:
 11612                           	opt callstack 0
 11613  004ABC                     _setTxPower:
 11614                           	opt callstack 15
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;incstack = 0
 11618                           ;setTxPower@power stored from wreg
 11619  004ABC  6E11               	movwf	setTxPower@power^0,c
 11620  004ABE                     
 11621                           ;phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);phy/sx1216/phy_src/phy.c:
      +                           140: {;phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 11622  004ABE  0E02               	movlw	2
 11623  004AC0  6011               	cpfslt	setTxPower@power^0,c
 11624  004AC2  EF65  F025         	goto	u4181
 11625  004AC6  EF67  F025         	goto	u4180
 11626  004ACA                     u4181:
 11627  004ACA  EF69  F025         	goto	l6480
 11628  004ACE                     u4180:
 11629  004ACE                     
 11630                           ;phy/sx1216/phy_src/phy.c: 142:     {;phy/sx1216/phy_src/phy.c: 143:         power = 2;
 11631  004ACE  0E02               	movlw	2
 11632  004AD0  6E11               	movwf	setTxPower@power^0,c
 11633  004AD2                     l6480:
 11634                           
 11635                           ;phy/sx1216/phy_src/phy.c: 145:     if(power > 5)
 11636  004AD2  0E05               	movlw	5
 11637  004AD4  6411               	cpfsgt	setTxPower@power^0,c
 11638  004AD6  EF6F  F025         	goto	u4191
 11639  004ADA  EF71  F025         	goto	u4190
 11640  004ADE                     u4191:
 11641  004ADE  EF73  F025         	goto	l6484
 11642  004AE2                     u4190:
 11643  004AE2                     
 11644                           ;phy/sx1216/phy_src/phy.c: 146:     {;phy/sx1216/phy_src/phy.c: 147:         power = 5;
 11645  004AE2  0E05               	movlw	5
 11646  004AE4  6E11               	movwf	setTxPower@power^0,c
 11647  004AE6                     l6484:
 11648                           
 11649                           ;phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 11650  004AE6  5011               	movf	setTxPower@power^0,w,c
 11651  004AE8  0FFE               	addlw	254
 11652  004AEA  6E11               	movwf	setTxPower@power^0,c
 11653  004AEC                     
 11654                           ;phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 11655  004AEC  5011               	movf	setTxPower@power^0,w,c
 11656  004AEE  09F0               	iorlw	240
 11657  004AF0  6E0F               	movwf	SX1276Write@data^0,c
 11658  004AF2  0E09               	movlw	9
 11659  004AF4  EC13  F028         	call	_SX1276Write
 11660  004AF8  0012               	return		;funcret
 11661  004AFA                     __end_of_setTxPower:
 11662                           	opt callstack 0
 11663                           
 11664 ;; *************** function _setSpreadingFactor *****************
 11665 ;; Defined at:
 11666 ;;		line 198 in file "phy/sx1216/phy_src/phy.c"
 11667 ;; Parameters:    Size  Location     Type
 11668 ;;  sf              1    wreg     unsigned char 
 11669 ;; Auto vars:     Size  Location     Type
 11670 ;;  sf              1   42[COMRAM] unsigned char 
 11671 ;; Return value:  Size  Location     Type
 11672 ;;                  1    wreg      void 
 11673 ;; Registers used:
 11674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11681 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;Total ram usage:        9 bytes
 11685 ;; Hardware stack levels used:    1
 11686 ;; Hardware stack levels required when called:   12
 11687 ;; This function calls:
 11688 ;;		_SX1276Read
 11689 ;;		_SX1276Write
 11690 ;;		___lldiv
 11691 ;;		_getSignalBandwidth
 11692 ;;		_getSpreadingFactor
 11693 ;; This function is called by:
 11694 ;;		_initRadio
 11695 ;; This function uses a non-reentrant model
 11696 ;;
 11697                           
 11698                           	psect	text76
 11699  002BCA                     __ptext76:
 11700                           	opt callstack 0
 11701  002BCA                     _setSpreadingFactor:
 11702                           	opt callstack 14
 11703                           
 11704                           ;incstack = 0
 11705                           ;setSpreadingFactor@sf stored from wreg
 11706  002BCA  6E2B               	movwf	setSpreadingFactor@sf^0,c
 11707  002BCC                     
 11708                           ;phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);phy/sx1216/phy_src/p
      +                          hy.c: 199: {;phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 11709  002BCC  0E07               	movlw	7
 11710  002BCE  602B               	cpfslt	setSpreadingFactor@sf^0,c
 11711  002BD0  EFEC  F015         	goto	u4201
 11712  002BD4  EFEE  F015         	goto	u4200
 11713  002BD8                     u4201:
 11714  002BD8  EFF2  F015         	goto	l6508
 11715  002BDC                     u4200:
 11716  002BDC                     
 11717                           ;phy/sx1216/phy_src/phy.c: 201:     {;phy/sx1216/phy_src/phy.c: 202:         sf = 7;
 11718  002BDC  0E07               	movlw	7
 11719  002BDE  6E2B               	movwf	setSpreadingFactor@sf^0,c
 11720                           
 11721                           ;phy/sx1216/phy_src/phy.c: 203:     }
 11722  002BE0  EFFC  F015         	goto	l6512
 11723  002BE4                     l6508:
 11724  002BE4  0E0C               	movlw	12
 11725  002BE6  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 11726  002BE8  EFF8  F015         	goto	u4211
 11727  002BEC  EFFA  F015         	goto	u4210
 11728  002BF0                     u4211:
 11729  002BF0  EFFC  F015         	goto	l6512
 11730  002BF4                     u4210:
 11731  002BF4                     
 11732                           ;phy/sx1216/phy_src/phy.c: 205:     {;phy/sx1216/phy_src/phy.c: 206:         sf = 12;
 11733  002BF4  0E0C               	movlw	12
 11734  002BF6  6E2B               	movwf	setSpreadingFactor@sf^0,c
 11735  002BF8                     l6512:
 11736                           
 11737                           ;phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 11738  002BF8  0EC3               	movlw	195
 11739  002BFA  6E0F               	movwf	SX1276Write@data^0,c
 11740  002BFC  0E31               	movlw	49
 11741  002BFE  EC13  F028         	call	_SX1276Write
 11742  002C02                     
 11743                           ;phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 11744  002C02  0E0A               	movlw	10
 11745  002C04  6E0F               	movwf	SX1276Write@data^0,c
 11746  002C06  0E37               	movlw	55
 11747  002C08  EC13  F028         	call	_SX1276Write
 11748  002C0C                     
 11749                           ;phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((sf <
      +                          < 4) & 0xf0));
 11750  002C0C  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 11751  002C12  3A23               	swapf	??_setSpreadingFactor^0,f,c
 11752  002C14  0EF0               	movlw	240
 11753  002C16  1623               	andwf	??_setSpreadingFactor^0,f,c
 11754  002C18  0EF0               	movlw	240
 11755  002C1A  1623               	andwf	??_setSpreadingFactor^0,f,c
 11756  002C1C  0E1E               	movlw	30
 11757  002C1E  ECE5  F027         	call	_SX1276Read
 11758  002C22  0B0F               	andlw	15
 11759  002C24  1023               	iorwf	??_setSpreadingFactor^0,w,c
 11760  002C26  6E0F               	movwf	SX1276Write@data^0,c
 11761  002C28  0E1E               	movlw	30
 11762  002C2A  EC13  F028         	call	_SX1276Write
 11763  002C2E                     
 11764                           ;phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / (1L
      +                           << getSpreadingFactor()) ) ;
 11765  002C2E  ECBF  F027         	call	_getSpreadingFactor	;wreg free
 11766  002C32  0E01               	movlw	1
 11767  002C34  6E23               	movwf	??_setSpreadingFactor^0,c
 11768  002C36  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 11769  002C38  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 11770  002C3A  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 11771  002C3C  2A0F               	incf	?_getSpreadingFactor^0,f,c
 11772  002C3E  EF26  F016         	goto	u4220
 11773  002C42                     u4225:
 11774  002C42  90D8               	bcf	status,0,c
 11775  002C44  3623               	rlcf	??_setSpreadingFactor^0,f,c
 11776  002C46  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 11777  002C48  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 11778  002C4A  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 11779  002C4C                     u4220:
 11780  002C4C  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 11781  002C4E  EF21  F016         	goto	u4225
 11782  002C52  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 11783  002C58  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 11784  002C5E  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 11785  002C64  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 11786  002C6A  EC1F  F012         	call	_getSignalBandwidth	;wreg free
 11787  002C6E  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 11788  002C74  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 11789  002C7A  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 11790  002C80  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 11791  002C86  EC18  F01F         	call	___lldiv	;wreg free
 11792  002C8A  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$6798
 11793  002C90  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$6798+1
 11794  002C96  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$6798+2
 11795  002C9C  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$6798+3
 11796  002CA2                     
 11797                           ;phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / (1L
      +                           << getSpreadingFactor()) ) ;
 11798  002CA2  0EE8               	movlw	232
 11799  002CA4  6E16               	movwf	___lldiv@dividend^0,c
 11800  002CA6  0E03               	movlw	3
 11801  002CA8  6E17               	movwf	(___lldiv@dividend+1)^0,c
 11802  002CAA  0E00               	movlw	0
 11803  002CAC  6E18               	movwf	(___lldiv@dividend+2)^0,c
 11804  002CAE  0E00               	movlw	0
 11805  002CB0  6E19               	movwf	(___lldiv@dividend+3)^0,c
 11806  002CB2  0060  F09C  F01A   	movff	_setSpreadingFactor$6798,___lldiv@divisor
 11807  002CB8  0060  F0A0  F01B   	movff	_setSpreadingFactor$6798+1,___lldiv@divisor+1
 11808  002CBE  0060  F0A4  F01C   	movff	_setSpreadingFactor$6798+2,___lldiv@divisor+2
 11809  002CC4  0060  F0A8  F01D   	movff	_setSpreadingFactor$6798+3,___lldiv@divisor+3
 11810  002CCA  EC18  F01F         	call	___lldiv	;wreg free
 11811  002CCE  0060  F058  F09C   	movff	?___lldiv,_symbolDuration
 11812  002CD4  0060  F05C  F09D   	movff	?___lldiv+1,_symbolDuration+1
 11813  002CDA  0060  F060  F09E   	movff	?___lldiv+2,_symbolDuration+2
 11814  002CE0  0060  F064  F09F   	movff	?___lldiv+3,_symbolDuration+3
 11815  002CE6  0012               	return		;funcret
 11816  002CE8                     __end_of_setSpreadingFactor:
 11817                           	opt callstack 0
 11818                           
 11819 ;; *************** function _setSignalBandwidth *****************
 11820 ;; Defined at:
 11821 ;;		line 223 in file "phy/sx1216/phy_src/phy.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;  sbw             4   34[COMRAM] unsigned long 
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;  bw              4   46[COMRAM] unsigned long 
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1    wreg      void 
 11828 ;; Registers used:
 11829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11836 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11838 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11839 ;;Total ram usage:       16 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:   12
 11842 ;; This function calls:
 11843 ;;		_SX1276Read
 11844 ;;		_SX1276Write
 11845 ;;		___flge
 11846 ;;		___lldiv
 11847 ;;		___xxtofl
 11848 ;;		_getSignalBandwidth
 11849 ;;		_getSpreadingFactor
 11850 ;; This function is called by:
 11851 ;;		_initRadio
 11852 ;; This function uses a non-reentrant model
 11853 ;;
 11854                           
 11855                           	psect	text77
 11856  0000B2                     __ptext77:
 11857                           	opt callstack 0
 11858  0000B2                     _setSignalBandwidth:
 11859                           	opt callstack 14
 11860  0000B2                     
 11861                           ;phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);phy/sx1216/phy_src
      +                          /phy.c: 224: {;phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;phy/sx1216/phy_src/phy.c: 2
      +                          27:   if (sbw <= 7.8E3) {
 11862  0000B2  0E00               	movlw	0
 11863  0000B4  6E10               	movwf	___flge@ff1^0,c
 11864  0000B6  0EC0               	movlw	192
 11865  0000B8  6E11               	movwf	(___flge@ff1+1)^0,c
 11866  0000BA  0EF3               	movlw	243
 11867  0000BC  6E12               	movwf	(___flge@ff1+2)^0,c
 11868  0000BE  0E45               	movlw	69
 11869  0000C0  6E13               	movwf	(___flge@ff1+3)^0,c
 11870  0000C2  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 11871  0000C8  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 11872  0000CE  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 11873  0000D4  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 11874  0000DA  0E00               	movlw	0
 11875  0000DC  EC8B  F00B         	call	___xxtofl
 11876  0000E0  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 11877  0000E6  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 11878  0000EC  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 11879  0000F2  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 11880  0000F8  EC8D  F018         	call	___flge	;wreg free
 11881  0000FC  A0D8               	btfss	status,0,c
 11882  0000FE  EF83  F000         	goto	u4231
 11883  000102  EF85  F000         	goto	u4230
 11884  000106                     u4231:
 11885  000106  EF8F  F000         	goto	l6526
 11886  00010A                     u4230:
 11887  00010A                     
 11888                           ;phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 11889  00010A  0E00               	movlw	0
 11890  00010C  6E2F               	movwf	setSignalBandwidth@bw^0,c
 11891  00010E  0E00               	movlw	0
 11892  000110  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 11893  000112  0E00               	movlw	0
 11894  000114  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 11895  000116  0E00               	movlw	0
 11896  000118  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 11897                           
 11898                           ;phy/sx1216/phy_src/phy.c: 229:   } else if (sbw <= 10.4E3) {
 11899  00011A  EF47  F002         	goto	l6560
 11900  00011E                     l6526:
 11901  00011E  0E00               	movlw	0
 11902  000120  6E10               	movwf	___flge@ff1^0,c
 11903  000122  0E80               	movlw	128
 11904  000124  6E11               	movwf	(___flge@ff1+1)^0,c
 11905  000126  0E22               	movlw	34
 11906  000128  6E12               	movwf	(___flge@ff1+2)^0,c
 11907  00012A  0E46               	movlw	70
 11908  00012C  6E13               	movwf	(___flge@ff1+3)^0,c
 11909  00012E  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 11910  000134  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 11911  00013A  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 11912  000140  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 11913  000146  0E00               	movlw	0
 11914  000148  EC8B  F00B         	call	___xxtofl
 11915  00014C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 11916  000152  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 11917  000158  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 11918  00015E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 11919  000164  EC8D  F018         	call	___flge	;wreg free
 11920  000168  A0D8               	btfss	status,0,c
 11921  00016A  EFB9  F000         	goto	u4241
 11922  00016E  EFBB  F000         	goto	u4240
 11923  000172                     u4241:
 11924  000172  EFC5  F000         	goto	l6530
 11925  000176                     u4240:
 11926  000176                     
 11927                           ;phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 11928  000176  0E01               	movlw	1
 11929  000178  6E2F               	movwf	setSignalBandwidth@bw^0,c
 11930  00017A  0E00               	movlw	0
 11931  00017C  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 11932  00017E  0E00               	movlw	0
 11933  000180  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 11934  000182  0E00               	movlw	0
 11935  000184  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 11936                           
 11937                           ;phy/sx1216/phy_src/phy.c: 231:   } else if (sbw <= 15.6E3) {
 11938  000186  EF47  F002         	goto	l6560
 11939  00018A                     l6530:
 11940  00018A  0E00               	movlw	0
 11941  00018C  6E10               	movwf	___flge@ff1^0,c
 11942  00018E  0EC0               	movlw	192
 11943  000190  6E11               	movwf	(___flge@ff1+1)^0,c
 11944  000192  0E73               	movlw	115
 11945  000194  6E12               	movwf	(___flge@ff1+2)^0,c
 11946  000196  0E46               	movlw	70
 11947  000198  6E13               	movwf	(___flge@ff1+3)^0,c
 11948  00019A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 11949  0001A0  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 11950  0001A6  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 11951  0001AC  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 11952  0001B2  0E00               	movlw	0
 11953  0001B4  EC8B  F00B         	call	___xxtofl
 11954  0001B8  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 11955  0001BE  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 11956  0001C4  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 11957  0001CA  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 11958  0001D0  EC8D  F018         	call	___flge	;wreg free
 11959  0001D4  A0D8               	btfss	status,0,c
 11960  0001D6  EFEF  F000         	goto	u4251
 11961  0001DA  EFF1  F000         	goto	u4250
 11962  0001DE                     u4251:
 11963  0001DE  EFFB  F000         	goto	l6534
 11964  0001E2                     u4250:
 11965  0001E2                     
 11966                           ;phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 11967  0001E2  0E02               	movlw	2
 11968  0001E4  6E2F               	movwf	setSignalBandwidth@bw^0,c
 11969  0001E6  0E00               	movlw	0
 11970  0001E8  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 11971  0001EA  0E00               	movlw	0
 11972  0001EC  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 11973  0001EE  0E00               	movlw	0
 11974  0001F0  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 11975                           
 11976                           ;phy/sx1216/phy_src/phy.c: 233:   } else if (sbw <= 20.8E3) {
 11977  0001F2  EF47  F002         	goto	l6560
 11978  0001F6                     l6534:
 11979  0001F6  0E00               	movlw	0
 11980  0001F8  6E10               	movwf	___flge@ff1^0,c
 11981  0001FA  0E80               	movlw	128
 11982  0001FC  6E11               	movwf	(___flge@ff1+1)^0,c
 11983  0001FE  0EA2               	movlw	162
 11984  000200  6E12               	movwf	(___flge@ff1+2)^0,c
 11985  000202  0E46               	movlw	70
 11986  000204  6E13               	movwf	(___flge@ff1+3)^0,c
 11987  000206  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 11988  00020C  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 11989  000212  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 11990  000218  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 11991  00021E  0E00               	movlw	0
 11992  000220  EC8B  F00B         	call	___xxtofl
 11993  000224  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 11994  00022A  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 11995  000230  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 11996  000236  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 11997  00023C  EC8D  F018         	call	___flge	;wreg free
 11998  000240  A0D8               	btfss	status,0,c
 11999  000242  EF25  F001         	goto	u4261
 12000  000246  EF27  F001         	goto	u4260
 12001  00024A                     u4261:
 12002  00024A  EF31  F001         	goto	l6538
 12003  00024E                     u4260:
 12004  00024E                     
 12005                           ;phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 12006  00024E  0E03               	movlw	3
 12007  000250  6E2F               	movwf	setSignalBandwidth@bw^0,c
 12008  000252  0E00               	movlw	0
 12009  000254  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 12010  000256  0E00               	movlw	0
 12011  000258  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 12012  00025A  0E00               	movlw	0
 12013  00025C  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 12014                           
 12015                           ;phy/sx1216/phy_src/phy.c: 235:   } else if (sbw <= 31.25E3) {
 12016  00025E  EF47  F002         	goto	l6560
 12017  000262                     l6538:
 12018  000262  0E00               	movlw	0
 12019  000264  6E10               	movwf	___flge@ff1^0,c
 12020  000266  0E24               	movlw	36
 12021  000268  6E11               	movwf	(___flge@ff1+1)^0,c
 12022  00026A  0EF4               	movlw	244
 12023  00026C  6E12               	movwf	(___flge@ff1+2)^0,c
 12024  00026E  0E46               	movlw	70
 12025  000270  6E13               	movwf	(___flge@ff1+3)^0,c
 12026  000272  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 12027  000278  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 12028  00027E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 12029  000284  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 12030  00028A  0E00               	movlw	0
 12031  00028C  EC8B  F00B         	call	___xxtofl
 12032  000290  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 12033  000296  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 12034  00029C  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 12035  0002A2  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 12036  0002A8  EC8D  F018         	call	___flge	;wreg free
 12037  0002AC  A0D8               	btfss	status,0,c
 12038  0002AE  EF5B  F001         	goto	u4271
 12039  0002B2  EF5D  F001         	goto	u4270
 12040  0002B6                     u4271:
 12041  0002B6  EF67  F001         	goto	l6542
 12042  0002BA                     u4270:
 12043  0002BA                     
 12044                           ;phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 12045  0002BA  0E04               	movlw	4
 12046  0002BC  6E2F               	movwf	setSignalBandwidth@bw^0,c
 12047  0002BE  0E00               	movlw	0
 12048  0002C0  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 12049  0002C2  0E00               	movlw	0
 12050  0002C4  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 12051  0002C6  0E00               	movlw	0
 12052  0002C8  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 12053                           
 12054                           ;phy/sx1216/phy_src/phy.c: 237:   } else if (sbw <= 41.7E3) {
 12055  0002CA  EF47  F002         	goto	l6560
 12056  0002CE                     l6542:
 12057  0002CE  0E00               	movlw	0
 12058  0002D0  6E10               	movwf	___flge@ff1^0,c
 12059  0002D2  0EE4               	movlw	228
 12060  0002D4  6E11               	movwf	(___flge@ff1+1)^0,c
 12061  0002D6  0E22               	movlw	34
 12062  0002D8  6E12               	movwf	(___flge@ff1+2)^0,c
 12063  0002DA  0E47               	movlw	71
 12064  0002DC  6E13               	movwf	(___flge@ff1+3)^0,c
 12065  0002DE  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 12066  0002E4  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 12067  0002EA  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 12068  0002F0  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 12069  0002F6  0E00               	movlw	0
 12070  0002F8  EC8B  F00B         	call	___xxtofl
 12071  0002FC  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 12072  000302  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 12073  000308  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 12074  00030E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 12075  000314  EC8D  F018         	call	___flge	;wreg free
 12076  000318  A0D8               	btfss	status,0,c
 12077  00031A  EF91  F001         	goto	u4281
 12078  00031E  EF93  F001         	goto	u4280
 12079  000322                     u4281:
 12080  000322  EF9D  F001         	goto	l6546
 12081  000326                     u4280:
 12082  000326                     
 12083                           ;phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 12084  000326  0E05               	movlw	5
 12085  000328  6E2F               	movwf	setSignalBandwidth@bw^0,c
 12086  00032A  0E00               	movlw	0
 12087  00032C  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 12088  00032E  0E00               	movlw	0
 12089  000330  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 12090  000332  0E00               	movlw	0
 12091  000334  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 12092                           
 12093                           ;phy/sx1216/phy_src/phy.c: 239:   } else if (sbw <= 62.5E3) {
 12094  000336  EF47  F002         	goto	l6560
 12095  00033A                     l6546:
 12096  00033A  0E00               	movlw	0
 12097  00033C  6E10               	movwf	___flge@ff1^0,c
 12098  00033E  0E24               	movlw	36
 12099  000340  6E11               	movwf	(___flge@ff1+1)^0,c
 12100  000342  0E74               	movlw	116
 12101  000344  6E12               	movwf	(___flge@ff1+2)^0,c
 12102  000346  0E47               	movlw	71
 12103  000348  6E13               	movwf	(___flge@ff1+3)^0,c
 12104  00034A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 12105  000350  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 12106  000356  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 12107  00035C  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 12108  000362  0E00               	movlw	0
 12109  000364  EC8B  F00B         	call	___xxtofl
 12110  000368  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 12111  00036E  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 12112  000374  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 12113  00037A  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 12114  000380  EC8D  F018         	call	___flge	;wreg free
 12115  000384  A0D8               	btfss	status,0,c
 12116  000386  EFC7  F001         	goto	u4291
 12117  00038A  EFC9  F001         	goto	u4290
 12118  00038E                     u4291:
 12119  00038E  EFD3  F001         	goto	l6550
 12120  000392                     u4290:
 12121  000392                     
 12122                           ;phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 12123  000392  0E06               	movlw	6
 12124  000394  6E2F               	movwf	setSignalBandwidth@bw^0,c
 12125  000396  0E00               	movlw	0
 12126  000398  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 12127  00039A  0E00               	movlw	0
 12128  00039C  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 12129  00039E  0E00               	movlw	0
 12130  0003A0  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 12131                           
 12132                           ;phy/sx1216/phy_src/phy.c: 241:   } else if (sbw <= 125E3) {
 12133  0003A2  EF47  F002         	goto	l6560
 12134  0003A6                     l6550:
 12135  0003A6  0E00               	movlw	0
 12136  0003A8  6E10               	movwf	___flge@ff1^0,c
 12137  0003AA  0E24               	movlw	36
 12138  0003AC  6E11               	movwf	(___flge@ff1+1)^0,c
 12139  0003AE  0EF4               	movlw	244
 12140  0003B0  6E12               	movwf	(___flge@ff1+2)^0,c
 12141  0003B2  0E47               	movlw	71
 12142  0003B4  6E13               	movwf	(___flge@ff1+3)^0,c
 12143  0003B6  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 12144  0003BC  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 12145  0003C2  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 12146  0003C8  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 12147  0003CE  0E00               	movlw	0
 12148  0003D0  EC8B  F00B         	call	___xxtofl
 12149  0003D4  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 12150  0003DA  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 12151  0003E0  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 12152  0003E6  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 12153  0003EC  EC8D  F018         	call	___flge	;wreg free
 12154  0003F0  A0D8               	btfss	status,0,c
 12155  0003F2  EFFD  F001         	goto	u4301
 12156  0003F6  EFFF  F001         	goto	u4300
 12157  0003FA                     u4301:
 12158  0003FA  EF09  F002         	goto	l6554
 12159  0003FE                     u4300:
 12160  0003FE                     
 12161                           ;phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 12162  0003FE  0E07               	movlw	7
 12163  000400  6E2F               	movwf	setSignalBandwidth@bw^0,c
 12164  000402  0E00               	movlw	0
 12165  000404  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 12166  000406  0E00               	movlw	0
 12167  000408  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 12168  00040A  0E00               	movlw	0
 12169  00040C  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 12170                           
 12171                           ;phy/sx1216/phy_src/phy.c: 243:   } else if (sbw <= 250E3) {
 12172  00040E  EF47  F002         	goto	l6560
 12173  000412                     l6554:
 12174  000412  0E00               	movlw	0
 12175  000414  6E10               	movwf	___flge@ff1^0,c
 12176  000416  0E24               	movlw	36
 12177  000418  6E11               	movwf	(___flge@ff1+1)^0,c
 12178  00041A  0E74               	movlw	116
 12179  00041C  6E12               	movwf	(___flge@ff1+2)^0,c
 12180  00041E  0E48               	movlw	72
 12181  000420  6E13               	movwf	(___flge@ff1+3)^0,c
 12182  000422  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 12183  000428  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 12184  00042E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 12185  000434  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 12186  00043A  0E00               	movlw	0
 12187  00043C  EC8B  F00B         	call	___xxtofl
 12188  000440  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 12189  000446  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 12190  00044C  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 12191  000452  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 12192  000458  EC8D  F018         	call	___flge	;wreg free
 12193  00045C  A0D8               	btfss	status,0,c
 12194  00045E  EF33  F002         	goto	u4311
 12195  000462  EF35  F002         	goto	u4310
 12196  000466                     u4311:
 12197  000466  EF3F  F002         	goto	l6558
 12198  00046A                     u4310:
 12199  00046A                     
 12200                           ;phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 12201  00046A  0E08               	movlw	8
 12202  00046C  6E2F               	movwf	setSignalBandwidth@bw^0,c
 12203  00046E  0E00               	movlw	0
 12204  000470  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 12205  000472  0E00               	movlw	0
 12206  000474  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 12207  000476  0E00               	movlw	0
 12208  000478  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 12209                           
 12210                           ;phy/sx1216/phy_src/phy.c: 245:   } else {
 12211  00047A  EF47  F002         	goto	l6560
 12212  00047E                     l6558:
 12213                           
 12214                           ;phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 12215  00047E  0E09               	movlw	9
 12216  000480  6E2F               	movwf	setSignalBandwidth@bw^0,c
 12217  000482  0E00               	movlw	0
 12218  000484  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 12219  000486  0E00               	movlw	0
 12220  000488  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 12221  00048A  0E00               	movlw	0
 12222  00048C  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 12223  00048E                     l6560:
 12224                           
 12225                           ;phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw << 4
      +                          ));
 12226  00048E  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 12227  000494  3A27               	swapf	??_setSignalBandwidth^0,f,c
 12228  000496  0EF0               	movlw	240
 12229  000498  1627               	andwf	??_setSignalBandwidth^0,f,c
 12230  00049A  0E1D               	movlw	29
 12231  00049C  ECE5  F027         	call	_SX1276Read
 12232  0004A0  0B0F               	andlw	15
 12233  0004A2  1027               	iorwf	??_setSignalBandwidth^0,w,c
 12234  0004A4  6E0F               	movwf	SX1276Write@data^0,c
 12235  0004A6  0E1D               	movlw	29
 12236  0004A8  EC13  F028         	call	_SX1276Write
 12237  0004AC                     
 12238                           ;phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1L <
      +                          < getSpreadingFactor()) ) ;
 12239  0004AC  ECBF  F027         	call	_getSpreadingFactor	;wreg free
 12240  0004B0  0E01               	movlw	1
 12241  0004B2  6E27               	movwf	??_setSignalBandwidth^0,c
 12242  0004B4  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 12243  0004B6  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 12244  0004B8  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 12245  0004BA  2A0F               	incf	?_getSpreadingFactor^0,f,c
 12246  0004BC  EF65  F002         	goto	u4320
 12247  0004C0                     u4325:
 12248  0004C0  90D8               	bcf	status,0,c
 12249  0004C2  3627               	rlcf	??_setSignalBandwidth^0,f,c
 12250  0004C4  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 12251  0004C6  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 12252  0004C8  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 12253  0004CA                     u4320:
 12254  0004CA  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 12255  0004CC  EF60  F002         	goto	u4325
 12256  0004D0  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 12257  0004D6  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 12258  0004DC  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 12259  0004E2  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 12260  0004E8  EC1F  F012         	call	_getSignalBandwidth	;wreg free
 12261  0004EC  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 12262  0004F2  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 12263  0004F8  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 12264  0004FE  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 12265  000504  EC18  F01F         	call	___lldiv	;wreg free
 12266  000508  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$6799
 12267  00050E  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$6799+1
 12268  000514  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$6799+2
 12269  00051A  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$6799+3
 12270  000520                     
 12271                           ;phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1L <
      +                          < getSpreadingFactor()) ) ;
 12272  000520  0EE8               	movlw	232
 12273  000522  6E16               	movwf	___lldiv@dividend^0,c
 12274  000524  0E03               	movlw	3
 12275  000526  6E17               	movwf	(___lldiv@dividend+1)^0,c
 12276  000528  0E00               	movlw	0
 12277  00052A  6E18               	movwf	(___lldiv@dividend+2)^0,c
 12278  00052C  0E00               	movlw	0
 12279  00052E  6E19               	movwf	(___lldiv@dividend+3)^0,c
 12280  000530  0060  F0AC  F01A   	movff	_setSignalBandwidth$6799,___lldiv@divisor
 12281  000536  0060  F0B0  F01B   	movff	_setSignalBandwidth$6799+1,___lldiv@divisor+1
 12282  00053C  0060  F0B4  F01C   	movff	_setSignalBandwidth$6799+2,___lldiv@divisor+2
 12283  000542  0060  F0B8  F01D   	movff	_setSignalBandwidth$6799+3,___lldiv@divisor+3
 12284  000548  EC18  F01F         	call	___lldiv	;wreg free
 12285  00054C  0060  F058  F09C   	movff	?___lldiv,_symbolDuration
 12286  000552  0060  F05C  F09D   	movff	?___lldiv+1,_symbolDuration+1
 12287  000558  0060  F060  F09E   	movff	?___lldiv+2,_symbolDuration+2
 12288  00055E  0060  F064  F09F   	movff	?___lldiv+3,_symbolDuration+3
 12289  000564  0012               	return		;funcret
 12290  000566                     __end_of_setSignalBandwidth:
 12291                           	opt callstack 0
 12292                           
 12293 ;; *************** function _getSpreadingFactor *****************
 12294 ;; Defined at:
 12295 ;;		line 261 in file "phy/sx1216/phy_src/phy.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;		None
 12298 ;; Auto vars:     Size  Location     Type
 12299 ;;		None
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  4   14[COMRAM] unsigned long 
 12302 ;; Registers used:
 12303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12312 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12313 ;;Total ram usage:        5 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:   11
 12316 ;; This function calls:
 12317 ;;		_SX1276Read
 12318 ;; This function is called by:
 12319 ;;		_setSpreadingFactor
 12320 ;;		_setSignalBandwidth
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text78
 12325  004F7E                     __ptext78:
 12326                           	opt callstack 0
 12327  004F7E                     _getSpreadingFactor:
 12328                           	opt callstack 14
 12329  004F7E                     
 12330                           ;phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 12331  004F7E  0E1E               	movlw	30
 12332  004F80  ECE5  F027         	call	_SX1276Read
 12333  004F84  6E13               	movwf	??_getSpreadingFactor^0,c
 12334  004F86  3A13               	swapf	??_getSpreadingFactor^0,f,c
 12335  004F88  0E0F               	movlw	15
 12336  004F8A  1613               	andwf	??_getSpreadingFactor^0,f,c
 12337  004F8C  5013               	movf	??_getSpreadingFactor^0,w,c
 12338  004F8E  6E0F               	movwf	?_getSpreadingFactor^0,c
 12339  004F90  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 12340  004F92  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 12341  004F94  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 12342  004F96  0012               	return		;funcret
 12343  004F98                     __end_of_getSpreadingFactor:
 12344                           	opt callstack 0
 12345                           
 12346 ;; *************** function _getSignalBandwidth *****************
 12347 ;; Defined at:
 12348 ;;		line 272 in file "phy/sx1216/phy_src/phy.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;  bw              1   20[COMRAM] unsigned char 
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  4   14[COMRAM] unsigned long 
 12355 ;; Registers used:
 12356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12365 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12366 ;;Total ram usage:        7 bytes
 12367 ;; Hardware stack levels used:    1
 12368 ;; Hardware stack levels required when called:   11
 12369 ;; This function calls:
 12370 ;;		_SX1276Read
 12371 ;; This function is called by:
 12372 ;;		_setSpreadingFactor
 12373 ;;		_setSignalBandwidth
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377                           	psect	text79
 12378  00243E                     __ptext79:
 12379                           	opt callstack 0
 12380  00243E                     _getSignalBandwidth:
 12381                           	opt callstack 14
 12382  00243E                     
 12383                           ;phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 12384  00243E  0E1D               	movlw	29
 12385  002440  ECE5  F027         	call	_SX1276Read
 12386  002444  6E13               	movwf	??_getSignalBandwidth^0,c
 12387  002446  3813               	swapf	??_getSignalBandwidth^0,w,c
 12388  002448  0B0F               	andlw	15
 12389  00244A  6E15               	movwf	getSignalBandwidth@bw^0,c
 12390                           
 12391                           ;phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 12392  00244C  EF8C  F012         	goto	l6004
 12393  002450                     l5962:
 12394  002450  0E78               	movlw	120
 12395  002452  6E0F               	movwf	?_getSignalBandwidth^0,c
 12396  002454  0E1E               	movlw	30
 12397  002456  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12398  002458  0E00               	movlw	0
 12399  00245A  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12400  00245C  0E00               	movlw	0
 12401  00245E  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12402  002460  EFC9  F012         	goto	l1587
 12403  002464                     l5966:
 12404  002464  0EA0               	movlw	160
 12405  002466  6E0F               	movwf	?_getSignalBandwidth^0,c
 12406  002468  0E28               	movlw	40
 12407  00246A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12408  00246C  0E00               	movlw	0
 12409  00246E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12410  002470  0E00               	movlw	0
 12411  002472  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12412  002474  EFC9  F012         	goto	l1587
 12413  002478                     l5970:
 12414  002478  0EF0               	movlw	240
 12415  00247A  6E0F               	movwf	?_getSignalBandwidth^0,c
 12416  00247C  0E3C               	movlw	60
 12417  00247E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12418  002480  0E00               	movlw	0
 12419  002482  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12420  002484  0E00               	movlw	0
 12421  002486  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12422  002488  EFC9  F012         	goto	l1587
 12423  00248C                     l5974:
 12424  00248C  0E40               	movlw	64
 12425  00248E  6E0F               	movwf	?_getSignalBandwidth^0,c
 12426  002490  0E51               	movlw	81
 12427  002492  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12428  002494  0E00               	movlw	0
 12429  002496  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12430  002498  0E00               	movlw	0
 12431  00249A  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12432  00249C  EFC9  F012         	goto	l1587
 12433  0024A0                     l5978:
 12434  0024A0  0E12               	movlw	18
 12435  0024A2  6E0F               	movwf	?_getSignalBandwidth^0,c
 12436  0024A4  0E7A               	movlw	122
 12437  0024A6  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12438  0024A8  0E00               	movlw	0
 12439  0024AA  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12440  0024AC  0E00               	movlw	0
 12441  0024AE  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12442  0024B0  EFC9  F012         	goto	l1587
 12443  0024B4                     l5982:
 12444  0024B4  0EE4               	movlw	228
 12445  0024B6  6E0F               	movwf	?_getSignalBandwidth^0,c
 12446  0024B8  0EA2               	movlw	162
 12447  0024BA  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12448  0024BC  0E00               	movlw	0
 12449  0024BE  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12450  0024C0  0E00               	movlw	0
 12451  0024C2  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12452  0024C4  EFC9  F012         	goto	l1587
 12453  0024C8                     l5986:
 12454  0024C8  0E24               	movlw	36
 12455  0024CA  6E0F               	movwf	?_getSignalBandwidth^0,c
 12456  0024CC  0EF4               	movlw	244
 12457  0024CE  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12458  0024D0  0E00               	movlw	0
 12459  0024D2  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12460  0024D4  0E00               	movlw	0
 12461  0024D6  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12462  0024D8  EFC9  F012         	goto	l1587
 12463  0024DC                     l5990:
 12464  0024DC  0E48               	movlw	72
 12465  0024DE  6E0F               	movwf	?_getSignalBandwidth^0,c
 12466  0024E0  0EE8               	movlw	232
 12467  0024E2  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12468  0024E4  0E01               	movlw	1
 12469  0024E6  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12470  0024E8  0E00               	movlw	0
 12471  0024EA  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12472  0024EC  EFC9  F012         	goto	l1587
 12473  0024F0                     l5994:
 12474  0024F0  0E90               	movlw	144
 12475  0024F2  6E0F               	movwf	?_getSignalBandwidth^0,c
 12476  0024F4  0ED0               	movlw	208
 12477  0024F6  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12478  0024F8  0E03               	movlw	3
 12479  0024FA  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12480  0024FC  0E00               	movlw	0
 12481  0024FE  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12482  002500  EFC9  F012         	goto	l1587
 12483  002504                     l5998:
 12484  002504  0E20               	movlw	32
 12485  002506  6E0F               	movwf	?_getSignalBandwidth^0,c
 12486  002508  0EA1               	movlw	161
 12487  00250A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12488  00250C  0E07               	movlw	7
 12489  00250E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12490  002510  0E00               	movlw	0
 12491  002512  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12492  002514  EFC9  F012         	goto	l1587
 12493  002518                     l6004:
 12494  002518  5015               	movf	getSignalBandwidth@bw^0,w,c
 12495  00251A  6E13               	movwf	??_getSignalBandwidth^0,c
 12496  00251C  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 12497                           
 12498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12499                           ; Switch size 1, requested type "simple"
 12500                           ; Number of cases is 1, Range of values is 0 to 0
 12501                           ; switch strategies available:
 12502                           ; Name         Instructions Cycles
 12503                           ; simple_byte            4     3 (average)
 12504                           ;	Chosen strategy is simple_byte
 12505  00251E  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 12506  002520  0A00               	xorlw	0	; case 0
 12507  002522  B4D8               	btfsc	status,2,c
 12508  002524  EF96  F012         	goto	l8184
 12509  002528  EFC1  F012         	goto	l6006
 12510  00252C                     l8184:
 12511                           
 12512                           ; Switch size 1, requested type "simple"
 12513                           ; Number of cases is 10, Range of values is 0 to 9
 12514                           ; switch strategies available:
 12515                           ; Name         Instructions Cycles
 12516                           ; simple_byte           31    16 (average)
 12517                           ;	Chosen strategy is simple_byte
 12518  00252C  5013               	movf	??_getSignalBandwidth^0,w,c
 12519  00252E  0A00               	xorlw	0	; case 0
 12520  002530  B4D8               	btfsc	status,2,c
 12521  002532  EF28  F012         	goto	l5962
 12522  002536  0A01               	xorlw	1	; case 1
 12523  002538  B4D8               	btfsc	status,2,c
 12524  00253A  EF32  F012         	goto	l5966
 12525  00253E  0A03               	xorlw	3	; case 2
 12526  002540  B4D8               	btfsc	status,2,c
 12527  002542  EF3C  F012         	goto	l5970
 12528  002546  0A01               	xorlw	1	; case 3
 12529  002548  B4D8               	btfsc	status,2,c
 12530  00254A  EF46  F012         	goto	l5974
 12531  00254E  0A07               	xorlw	7	; case 4
 12532  002550  B4D8               	btfsc	status,2,c
 12533  002552  EF50  F012         	goto	l5978
 12534  002556  0A01               	xorlw	1	; case 5
 12535  002558  B4D8               	btfsc	status,2,c
 12536  00255A  EF5A  F012         	goto	l5982
 12537  00255E  0A03               	xorlw	3	; case 6
 12538  002560  B4D8               	btfsc	status,2,c
 12539  002562  EF64  F012         	goto	l5986
 12540  002566  0A01               	xorlw	1	; case 7
 12541  002568  B4D8               	btfsc	status,2,c
 12542  00256A  EF6E  F012         	goto	l5990
 12543  00256E  0A0F               	xorlw	15	; case 8
 12544  002570  B4D8               	btfsc	status,2,c
 12545  002572  EF78  F012         	goto	l5994
 12546  002576  0A01               	xorlw	1	; case 9
 12547  002578  B4D8               	btfsc	status,2,c
 12548  00257A  EF82  F012         	goto	l5998
 12549  00257E  EFC1  F012         	goto	l6006
 12550  002582                     l6006:
 12551                           
 12552                           ;phy/sx1216/phy_src/phy.c: 287:   return 0;
 12553  002582  0E00               	movlw	0
 12554  002584  6E0F               	movwf	?_getSignalBandwidth^0,c
 12555  002586  0E00               	movlw	0
 12556  002588  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 12557  00258A  0E00               	movlw	0
 12558  00258C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 12559  00258E  0E00               	movlw	0
 12560  002590  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 12561  002592                     l1587:
 12562  002592  0012               	return		;funcret
 12563  002594                     __end_of_getSignalBandwidth:
 12564                           	opt callstack 0
 12565                           
 12566 ;; *************** function ___xxtofl *****************
 12567 ;; Defined at:
 12568 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  sign            1    wreg     unsigned char 
 12571 ;;  val             4    1[COMRAM] long 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;  sign            1    9[COMRAM] unsigned char 
 12574 ;;  arg             4   11[COMRAM] unsigned long 
 12575 ;;  exp             1   10[COMRAM] unsigned char 
 12576 ;; Return value:  Size  Location     Type
 12577 ;;                  4    1[COMRAM] unsigned char 
 12578 ;; Registers used:
 12579 ;;		wreg, status,2, status,0
 12580 ;; Tracked objects:
 12581 ;;		On entry : 0/0
 12582 ;;		On exit  : 0/0
 12583 ;;		Unchanged: 0/0
 12584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12586 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12587 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12588 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12589 ;;Total ram usage:       14 bytes
 12590 ;; Hardware stack levels used:    1
 12591 ;; Hardware stack levels required when called:    7
 12592 ;; This function calls:
 12593 ;;		Nothing
 12594 ;; This function is called by:
 12595 ;;		_setSignalBandwidth
 12596 ;; This function uses a non-reentrant model
 12597 ;;
 12598                           
 12599                           	psect	text80
 12600  001716                     __ptext80:
 12601                           	opt callstack 0
 12602  001716                     ___xxtofl:
 12603                           	opt callstack 18
 12604                           
 12605                           ;incstack = 0
 12606                           ;___xxtofl@sign stored from wreg
 12607  001716  6E0A               	movwf	___xxtofl@sign^0,c
 12608  001718  500A               	movf	___xxtofl@sign^0,w,c
 12609  00171A  B4D8               	btfsc	status,2,c
 12610  00171C  EF92  F00B         	goto	u3681
 12611  001720  EF94  F00B         	goto	u3680
 12612  001724                     u3681:
 12613  001724  EFBE  F00B         	goto	l2764
 12614  001728                     u3680:
 12615  001728  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 12616  00172A  EF9B  F00B         	goto	u3690
 12617  00172E  EF99  F00B         	goto	u3691
 12618  001732                     u3691:
 12619  001732  EFBE  F00B         	goto	l2764
 12620  001736                     u3690:
 12621  001736  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 12622  00173C  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 12623  001742  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 12624  001748  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 12625  00174E  1E06               	comf	??___xxtofl^0,f,c
 12626  001750  1E07               	comf	(??___xxtofl+1)^0,f,c
 12627  001752  1E08               	comf	(??___xxtofl+2)^0,f,c
 12628  001754  1E09               	comf	(??___xxtofl+3)^0,f,c
 12629  001756  2A06               	incf	??___xxtofl^0,f,c
 12630  001758  0E00               	movlw	0
 12631  00175A  2207               	addwfc	(??___xxtofl+1)^0,f,c
 12632  00175C  2208               	addwfc	(??___xxtofl+2)^0,f,c
 12633  00175E  2209               	addwfc	(??___xxtofl+3)^0,f,c
 12634  001760  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 12635  001766  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 12636  00176C  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 12637  001772  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 12638  001778  EFCA  F00B         	goto	l6096
 12639  00177C                     l2764:
 12640  00177C  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 12641  001782  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 12642  001788  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 12643  00178E  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 12644  001794                     l6096:
 12645  001794  5002               	movf	___xxtofl@val^0,w,c
 12646  001796  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 12647  001798  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 12648  00179A  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 12649  00179C  A4D8               	btfss	status,2,c
 12650  00179E  EFD3  F00B         	goto	u3701
 12651  0017A2  EFD5  F00B         	goto	u3700
 12652  0017A6                     u3701:
 12653  0017A6  EFDF  F00B         	goto	l6102
 12654  0017AA                     u3700:
 12655  0017AA  0E00               	movlw	0
 12656  0017AC  6E02               	movwf	?___xxtofl^0,c
 12657  0017AE  0E00               	movlw	0
 12658  0017B0  6E03               	movwf	(?___xxtofl+1)^0,c
 12659  0017B2  0E00               	movlw	0
 12660  0017B4  6E04               	movwf	(?___xxtofl+2)^0,c
 12661  0017B6  0E00               	movlw	0
 12662  0017B8  6E05               	movwf	(?___xxtofl+3)^0,c
 12663  0017BA  EF76  F00C         	goto	l2767
 12664  0017BE                     l6102:
 12665  0017BE  0E96               	movlw	150
 12666  0017C0  6E0B               	movwf	___xxtofl@exp^0,c
 12667  0017C2  EFE9  F00B         	goto	l6106
 12668  0017C6                     l6104:
 12669  0017C6  2A0B               	incf	___xxtofl@exp^0,f,c
 12670  0017C8  90D8               	bcf	status,0,c
 12671  0017CA  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 12672  0017CC  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 12673  0017CE  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 12674  0017D0  320C               	rrcf	___xxtofl@arg^0,f,c
 12675  0017D2                     l6106:
 12676  0017D2  0E00               	movlw	0
 12677  0017D4  140C               	andwf	___xxtofl@arg^0,w,c
 12678  0017D6  6E06               	movwf	??___xxtofl^0,c
 12679  0017D8  0E00               	movlw	0
 12680  0017DA  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 12681  0017DC  6E07               	movwf	(??___xxtofl+1)^0,c
 12682  0017DE  0E00               	movlw	0
 12683  0017E0  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 12684  0017E2  6E08               	movwf	(??___xxtofl+2)^0,c
 12685  0017E4  0EFE               	movlw	254
 12686  0017E6  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 12687  0017E8  6E09               	movwf	(??___xxtofl+3)^0,c
 12688  0017EA  5006               	movf	??___xxtofl^0,w,c
 12689  0017EC  1007               	iorwf	(??___xxtofl+1)^0,w,c
 12690  0017EE  1008               	iorwf	(??___xxtofl+2)^0,w,c
 12691  0017F0  1009               	iorwf	(??___xxtofl+3)^0,w,c
 12692  0017F2  A4D8               	btfss	status,2,c
 12693  0017F4  EFFE  F00B         	goto	u3711
 12694  0017F8  EF00  F00C         	goto	u3710
 12695  0017FC                     u3711:
 12696  0017FC  EFE3  F00B         	goto	l6104
 12697  001800                     u3710:
 12698  001800  EF0E  F00C         	goto	l2771
 12699  001804                     l6108:
 12700  001804  2A0B               	incf	___xxtofl@exp^0,f,c
 12701  001806  0E01               	movlw	1
 12702  001808  260C               	addwf	___xxtofl@arg^0,f,c
 12703  00180A  0E00               	movlw	0
 12704  00180C  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 12705  00180E  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 12706  001810  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 12707  001812  90D8               	bcf	status,0,c
 12708  001814  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 12709  001816  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 12710  001818  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 12711  00181A  320C               	rrcf	___xxtofl@arg^0,f,c
 12712  00181C                     l2771:
 12713  00181C  0E00               	movlw	0
 12714  00181E  140C               	andwf	___xxtofl@arg^0,w,c
 12715  001820  6E06               	movwf	??___xxtofl^0,c
 12716  001822  0E00               	movlw	0
 12717  001824  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 12718  001826  6E07               	movwf	(??___xxtofl+1)^0,c
 12719  001828  0E00               	movlw	0
 12720  00182A  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 12721  00182C  6E08               	movwf	(??___xxtofl+2)^0,c
 12722  00182E  0EFF               	movlw	255
 12723  001830  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 12724  001832  6E09               	movwf	(??___xxtofl+3)^0,c
 12725  001834  5006               	movf	??___xxtofl^0,w,c
 12726  001836  1007               	iorwf	(??___xxtofl+1)^0,w,c
 12727  001838  1008               	iorwf	(??___xxtofl+2)^0,w,c
 12728  00183A  1009               	iorwf	(??___xxtofl+3)^0,w,c
 12729  00183C  A4D8               	btfss	status,2,c
 12730  00183E  EF23  F00C         	goto	u3721
 12731  001842  EF25  F00C         	goto	u3720
 12732  001846                     u3721:
 12733  001846  EF02  F00C         	goto	l6108
 12734  00184A                     u3720:
 12735  00184A  EF2D  F00C         	goto	l6116
 12736  00184E                     l6114:
 12737  00184E  060B               	decf	___xxtofl@exp^0,f,c
 12738  001850  90D8               	bcf	status,0,c
 12739  001852  360C               	rlcf	___xxtofl@arg^0,f,c
 12740  001854  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 12741  001856  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 12742  001858  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 12743  00185A                     l6116:
 12744  00185A  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 12745  00185C  EF32  F00C         	goto	u3731
 12746  001860  EF34  F00C         	goto	u3730
 12747  001864                     u3731:
 12748  001864  EF3C  F00C         	goto	l2778
 12749  001868                     u3730:
 12750  001868  0E02               	movlw	2
 12751  00186A  600B               	cpfslt	___xxtofl@exp^0,c
 12752  00186C  EF3A  F00C         	goto	u3741
 12753  001870  EF3C  F00C         	goto	u3740
 12754  001874                     u3741:
 12755  001874  EF27  F00C         	goto	l6114
 12756  001878                     u3740:
 12757  001878                     l2778:
 12758  001878  B00B               	btfsc	___xxtofl@exp^0,0,c
 12759  00187A  EF41  F00C         	goto	u3751
 12760  00187E  EF43  F00C         	goto	u3750
 12761  001882                     u3751:
 12762  001882  EF44  F00C         	goto	l6122
 12763  001886                     u3750:
 12764  001886  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 12765  001888                     l6122:
 12766  001888  90D8               	bcf	status,0,c
 12767  00188A  320B               	rrcf	___xxtofl@exp^0,f,c
 12768  00188C  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 12769  001892  6A07               	clrf	(??___xxtofl+1)^0,c
 12770  001894  6A08               	clrf	(??___xxtofl+2)^0,c
 12771  001896  6A09               	clrf	(??___xxtofl+3)^0,c
 12772  001898  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 12773  00189E  6A08               	clrf	(??___xxtofl+2)^0,c
 12774  0018A0  6A07               	clrf	(??___xxtofl+1)^0,c
 12775  0018A2  6A06               	clrf	??___xxtofl^0,c
 12776  0018A4  5006               	movf	??___xxtofl^0,w,c
 12777  0018A6  120C               	iorwf	___xxtofl@arg^0,f,c
 12778  0018A8  5007               	movf	(??___xxtofl+1)^0,w,c
 12779  0018AA  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 12780  0018AC  5008               	movf	(??___xxtofl+2)^0,w,c
 12781  0018AE  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 12782  0018B0  5009               	movf	(??___xxtofl+3)^0,w,c
 12783  0018B2  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 12784  0018B4  500A               	movf	___xxtofl@sign^0,w,c
 12785  0018B6  B4D8               	btfsc	status,2,c
 12786  0018B8  EF60  F00C         	goto	u3761
 12787  0018BC  EF62  F00C         	goto	u3760
 12788  0018C0                     u3761:
 12789  0018C0  EF6A  F00C         	goto	l6132
 12790  0018C4                     u3760:
 12791  0018C4  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 12792  0018C6  EF69  F00C         	goto	u3770
 12793  0018CA  EF67  F00C         	goto	u3771
 12794  0018CE                     u3771:
 12795  0018CE  EF6A  F00C         	goto	l6132
 12796  0018D2                     u3770:
 12797  0018D2  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 12798  0018D4                     l6132:
 12799  0018D4  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 12800  0018DA  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 12801  0018E0  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 12802  0018E6  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 12803  0018EC                     l2767:
 12804  0018EC  0012               	return		;funcret
 12805  0018EE                     __end_of___xxtofl:
 12806                           	opt callstack 0
 12807                           
 12808 ;; *************** function ___flge *****************
 12809 ;; Defined at:
 12810 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;  ff1             4   15[COMRAM] unsigned char 
 12813 ;;  ff2             4   19[COMRAM] unsigned char 
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;		None
 12816 ;; Return value:  Size  Location     Type
 12817 ;;		None               void
 12818 ;; Registers used:
 12819 ;;		wreg, status,2, status,0
 12820 ;; Tracked objects:
 12821 ;;		On entry : 0/0
 12822 ;;		On exit  : 0/0
 12823 ;;		Unchanged: 0/0
 12824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12827 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12828 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12829 ;;Total ram usage:       12 bytes
 12830 ;; Hardware stack levels used:    1
 12831 ;; Hardware stack levels required when called:    7
 12832 ;; This function calls:
 12833 ;;		Nothing
 12834 ;; This function is called by:
 12835 ;;		_setSignalBandwidth
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text81
 12840  00311A                     __ptext81:
 12841                           	opt callstack 0
 12842  00311A                     ___flge:
 12843                           	opt callstack 18
 12844  00311A  0E00               	movlw	0
 12845  00311C  1410               	andwf	___flge@ff1^0,w,c
 12846  00311E  6E18               	movwf	??___flge^0,c
 12847  003120  0E00               	movlw	0
 12848  003122  1411               	andwf	(___flge@ff1+1)^0,w,c
 12849  003124  6E19               	movwf	(??___flge+1)^0,c
 12850  003126  0E80               	movlw	128
 12851  003128  1412               	andwf	(___flge@ff1+2)^0,w,c
 12852  00312A  6E1A               	movwf	(??___flge+2)^0,c
 12853  00312C  0E7F               	movlw	127
 12854  00312E  1413               	andwf	(___flge@ff1+3)^0,w,c
 12855  003130  6E1B               	movwf	(??___flge+3)^0,c
 12856  003132  5018               	movf	??___flge^0,w,c
 12857  003134  1019               	iorwf	(??___flge+1)^0,w,c
 12858  003136  101A               	iorwf	(??___flge+2)^0,w,c
 12859  003138  101B               	iorwf	(??___flge+3)^0,w,c
 12860  00313A  A4D8               	btfss	status,2,c
 12861  00313C  EFA2  F018         	goto	u3601
 12862  003140  EFA4  F018         	goto	u3600
 12863  003144                     u3601:
 12864  003144  EFAC  F018         	goto	l6056
 12865  003148                     u3600:
 12866  003148  0E00               	movlw	0
 12867  00314A  6E10               	movwf	___flge@ff1^0,c
 12868  00314C  0E00               	movlw	0
 12869  00314E  6E11               	movwf	(___flge@ff1+1)^0,c
 12870  003150  0E00               	movlw	0
 12871  003152  6E12               	movwf	(___flge@ff1+2)^0,c
 12872  003154  0E00               	movlw	0
 12873  003156  6E13               	movwf	(___flge@ff1+3)^0,c
 12874  003158                     l6056:
 12875  003158  0E00               	movlw	0
 12876  00315A  1414               	andwf	___flge@ff2^0,w,c
 12877  00315C  6E18               	movwf	??___flge^0,c
 12878  00315E  0E00               	movlw	0
 12879  003160  1415               	andwf	(___flge@ff2+1)^0,w,c
 12880  003162  6E19               	movwf	(??___flge+1)^0,c
 12881  003164  0E80               	movlw	128
 12882  003166  1416               	andwf	(___flge@ff2+2)^0,w,c
 12883  003168  6E1A               	movwf	(??___flge+2)^0,c
 12884  00316A  0E7F               	movlw	127
 12885  00316C  1417               	andwf	(___flge@ff2+3)^0,w,c
 12886  00316E  6E1B               	movwf	(??___flge+3)^0,c
 12887  003170  5018               	movf	??___flge^0,w,c
 12888  003172  1019               	iorwf	(??___flge+1)^0,w,c
 12889  003174  101A               	iorwf	(??___flge+2)^0,w,c
 12890  003176  101B               	iorwf	(??___flge+3)^0,w,c
 12891  003178  A4D8               	btfss	status,2,c
 12892  00317A  EFC1  F018         	goto	u3611
 12893  00317E  EFC3  F018         	goto	u3610
 12894  003182                     u3611:
 12895  003182  EFCB  F018         	goto	l6060
 12896  003186                     u3610:
 12897  003186  0E00               	movlw	0
 12898  003188  6E14               	movwf	___flge@ff2^0,c
 12899  00318A  0E00               	movlw	0
 12900  00318C  6E15               	movwf	(___flge@ff2+1)^0,c
 12901  00318E  0E00               	movlw	0
 12902  003190  6E16               	movwf	(___flge@ff2+2)^0,c
 12903  003192  0E00               	movlw	0
 12904  003194  6E17               	movwf	(___flge@ff2+3)^0,c
 12905  003196                     l6060:
 12906  003196  AE13               	btfss	(___flge@ff1+3)^0,7,c
 12907  003198  EFD0  F018         	goto	u3621
 12908  00319C  EFD2  F018         	goto	u3620
 12909  0031A0                     u3621:
 12910  0031A0  EFDB  F018         	goto	l6064
 12911  0031A4                     u3620:
 12912  0031A4  6C10               	negf	___flge@ff1^0,c
 12913  0031A6  1E11               	comf	(___flge@ff1+1)^0,f,c
 12914  0031A8  B0D8               	btfsc	status,0,c
 12915  0031AA  2A11               	incf	(___flge@ff1+1)^0,f,c
 12916  0031AC  1E12               	comf	(___flge@ff1+2)^0,f,c
 12917  0031AE  B0D8               	btfsc	status,0,c
 12918  0031B0  2A12               	incf	(___flge@ff1+2)^0,f,c
 12919  0031B2  0E80               	movlw	128
 12920  0031B4  5613               	subfwb	(___flge@ff1+3)^0,f,c
 12921  0031B6                     l6064:
 12922  0031B6  AE17               	btfss	(___flge@ff2+3)^0,7,c
 12923  0031B8  EFE0  F018         	goto	u3631
 12924  0031BC  EFE2  F018         	goto	u3630
 12925  0031C0                     u3631:
 12926  0031C0  EFEB  F018         	goto	l2374
 12927  0031C4                     u3630:
 12928  0031C4  6C14               	negf	___flge@ff2^0,c
 12929  0031C6  1E15               	comf	(___flge@ff2+1)^0,f,c
 12930  0031C8  B0D8               	btfsc	status,0,c
 12931  0031CA  2A15               	incf	(___flge@ff2+1)^0,f,c
 12932  0031CC  1E16               	comf	(___flge@ff2+2)^0,f,c
 12933  0031CE  B0D8               	btfsc	status,0,c
 12934  0031D0  2A16               	incf	(___flge@ff2+2)^0,f,c
 12935  0031D2  0E80               	movlw	128
 12936  0031D4  5617               	subfwb	(___flge@ff2+3)^0,f,c
 12937  0031D6                     l2374:
 12938  0031D6  0E00               	movlw	0
 12939  0031D8  1A10               	xorwf	___flge@ff1^0,f,c
 12940  0031DA  0E00               	movlw	0
 12941  0031DC  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 12942  0031DE  0E00               	movlw	0
 12943  0031E0  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 12944  0031E2  0E80               	movlw	128
 12945  0031E4  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 12946  0031E6  0E00               	movlw	0
 12947  0031E8  1A14               	xorwf	___flge@ff2^0,f,c
 12948  0031EA  0E00               	movlw	0
 12949  0031EC  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 12950  0031EE  0E00               	movlw	0
 12951  0031F0  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 12952  0031F2  0E80               	movlw	128
 12953  0031F4  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 12954  0031F6  5014               	movf	___flge@ff2^0,w,c
 12955  0031F8  5C10               	subwf	___flge@ff1^0,w,c
 12956  0031FA  5015               	movf	(___flge@ff2+1)^0,w,c
 12957  0031FC  5811               	subwfb	(___flge@ff1+1)^0,w,c
 12958  0031FE  5016               	movf	(___flge@ff2+2)^0,w,c
 12959  003200  5812               	subwfb	(___flge@ff1+2)^0,w,c
 12960  003202  5017               	movf	(___flge@ff2+3)^0,w,c
 12961  003204  5813               	subwfb	(___flge@ff1+3)^0,w,c
 12962  003206  B0D8               	btfsc	status,0,c
 12963  003208  EF08  F019         	goto	u3641
 12964  00320C  EF0A  F019         	goto	u3640
 12965  003210                     u3641:
 12966  003210  EF0D  F019         	goto	l6070
 12967  003214                     u3640:
 12968  003214  90D8               	bcf	status,0,c
 12969  003216  EF0E  F019         	goto	l2379
 12970  00321A                     l6070:
 12971  00321A  80D8               	bsf	status,0,c
 12972  00321C                     l2379:
 12973  00321C  0012               	return		;funcret
 12974  00321E                     __end_of___flge:
 12975                           	opt callstack 0
 12976                           
 12977 ;; *************** function _setPreambleLength *****************
 12978 ;; Defined at:
 12979 ;;		line 316 in file "phy/sx1216/phy_src/phy.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;  length          2   16[COMRAM] unsigned short 
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;		None
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      void 
 12986 ;; Registers used:
 12987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12997 ;;Total ram usage:        2 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:   11
 13000 ;; This function calls:
 13001 ;;		_SX1276Write
 13002 ;; This function is called by:
 13003 ;;		_initRadio
 13004 ;; This function uses a non-reentrant model
 13005 ;;
 13006                           
 13007                           	psect	text82
 13008  004FB2                     __ptext82:
 13009                           	opt callstack 0
 13010  004FB2                     _setPreambleLength:
 13011                           	opt callstack 15
 13012  004FB2                     
 13013                           ;phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);phy/sx1216/phy_s
      +                          rc/phy.c: 317: {;phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(length >> 
      +                          8));
 13014  004FB2  5012               	movf	(setPreambleLength@length+1)^0,w,c
 13015  004FB4  6E0F               	movwf	SX1276Write@data^0,c
 13016  004FB6  0E20               	movlw	32
 13017  004FB8  EC13  F028         	call	_SX1276Write
 13018                           
 13019                           ;phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 13020  004FBC  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 13021  004FC2  0E21               	movlw	33
 13022  004FC4  EC13  F028         	call	_SX1276Write
 13023  004FC8  0012               	return		;funcret
 13024  004FCA                     __end_of_setPreambleLength:
 13025                           	opt callstack 0
 13026                           
 13027 ;; *************** function _setFrequency *****************
 13028 ;; Defined at:
 13029 ;;		line 160 in file "phy/sx1216/phy_src/phy.c"
 13030 ;; Parameters:    Size  Location     Type
 13031 ;;  frequency       4   34[COMRAM] unsigned long 
 13032 ;; Auto vars:     Size  Location     Type
 13033 ;;  num             4   42[COMRAM] unsigned long 
 13034 ;;  num_mod         4   38[COMRAM] unsigned long 
 13035 ;; Return value:  Size  Location     Type
 13036 ;;                  4   34[COMRAM] unsigned long 
 13037 ;; Registers used:
 13038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13047 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13048 ;;Total ram usage:       12 bytes
 13049 ;; Hardware stack levels used:    1
 13050 ;; Hardware stack levels required when called:   11
 13051 ;; This function calls:
 13052 ;;		_SX1276Write
 13053 ;;		___lldiv
 13054 ;;		___llmod
 13055 ;; This function is called by:
 13056 ;;		_initRadio
 13057 ;;		_PHY_SetChannel
 13058 ;; This function uses a non-reentrant model
 13059 ;;
 13060                           
 13061                           	psect	text83
 13062  002AA0                     __ptext83:
 13063                           	opt callstack 0
 13064  002AA0                     _setFrequency:
 13065                           	opt callstack 17
 13066  002AA0                     
 13067                           ;phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);phy/sx1216/phy
      +                          _src/phy.c: 161: {;phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;phy/sx1216/
      +                          phy_src/phy.c: 170:     num = frequency / 15625;
 13068  002AA0  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 13069  002AA6  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 13070  002AAC  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 13071  002AB2  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 13072  002AB8  0E09               	movlw	9
 13073  002ABA  6E1A               	movwf	___lldiv@divisor^0,c
 13074  002ABC  0E3D               	movlw	61
 13075  002ABE  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 13076  002AC0  0E00               	movlw	0
 13077  002AC2  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 13078  002AC4  0E00               	movlw	0
 13079  002AC6  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 13080  002AC8  EC18  F01F         	call	___lldiv	;wreg free
 13081  002ACC  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 13082  002AD2  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 13083  002AD8  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 13084  002ADE  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 13085                           
 13086                           ;phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 13087  002AE4  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 13088  002AEA  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 13089  002AF0  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 13090  002AF6  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 13091  002AFC  0E09               	movlw	9
 13092  002AFE  6E06               	movwf	___llmod@divisor^0,c
 13093  002B00  0E3D               	movlw	61
 13094  002B02  6E07               	movwf	(___llmod@divisor+1)^0,c
 13095  002B04  0E00               	movlw	0
 13096  002B06  6E08               	movwf	(___llmod@divisor+2)^0,c
 13097  002B08  0E00               	movlw	0
 13098  002B0A  6E09               	movwf	(___llmod@divisor+3)^0,c
 13099  002B0C  ECA7  F020         	call	___llmod	;wreg free
 13100  002B10  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 13101  002B16  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 13102  002B1C  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 13103  002B22  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 13104  002B28                     
 13105                           ;phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 13106  002B28  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 13107  002B2E  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 13108  002B34  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 13109  002B3A  6A2B               	clrf	setFrequency@num^0,c
 13110  002B3C                     
 13111                           ;phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 13112  002B3C  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 13113  002B42  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 13114  002B48  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 13115  002B4E  6A27               	clrf	setFrequency@num_mod^0,c
 13116                           
 13117                           ;phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 13118  002B50  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 13119  002B56  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 13120  002B5C  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 13121  002B62  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 13122  002B68  0E09               	movlw	9
 13123  002B6A  6E1A               	movwf	___lldiv@divisor^0,c
 13124  002B6C  0E3D               	movlw	61
 13125  002B6E  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 13126  002B70  0E00               	movlw	0
 13127  002B72  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 13128  002B74  0E00               	movlw	0
 13129  002B76  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 13130  002B78  EC18  F01F         	call	___lldiv	;wreg free
 13131  002B7C  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 13132  002B82  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 13133  002B88  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 13134  002B8E  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 13135  002B94                     
 13136                           ;phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 13137  002B94  5027               	movf	setFrequency@num_mod^0,w,c
 13138  002B96  262B               	addwf	setFrequency@num^0,f,c
 13139  002B98  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 13140  002B9A  222C               	addwfc	(setFrequency@num+1)^0,f,c
 13141  002B9C  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 13142  002B9E  222D               	addwfc	(setFrequency@num+2)^0,f,c
 13143  002BA0  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 13144  002BA2  222E               	addwfc	(setFrequency@num+3)^0,f,c
 13145  002BA4                     
 13146                           ;phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 13147  002BA4  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 13148  002BAA  0E06               	movlw	6
 13149  002BAC  EC13  F028         	call	_SX1276Write
 13150  002BB0                     
 13151                           ;phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 13152  002BB0  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 13153  002BB6  0E07               	movlw	7
 13154  002BB8  EC13  F028         	call	_SX1276Write
 13155  002BBC                     
 13156                           ;phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 13157  002BBC  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 13158  002BC2  0E08               	movlw	8
 13159  002BC4  EC13  F028         	call	_SX1276Write
 13160  002BC8  0012               	return		;funcret
 13161  002BCA                     __end_of_setFrequency:
 13162                           	opt callstack 0
 13163                           
 13164 ;; *************** function _setCodingRate4 *****************
 13165 ;; Defined at:
 13166 ;;		line 297 in file "phy/sx1216/phy_src/phy.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  denominator     1    wreg     unsigned char 
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;  denominator     1   18[COMRAM] unsigned char 
 13171 ;;  cr              1   17[COMRAM] unsigned char 
 13172 ;; Return value:  Size  Location     Type
 13173 ;;                  1    wreg      void 
 13174 ;; Registers used:
 13175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/0
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;Total ram usage:        3 bytes
 13186 ;; Hardware stack levels used:    1
 13187 ;; Hardware stack levels required when called:   11
 13188 ;; This function calls:
 13189 ;;		_SX1276Read
 13190 ;;		_SX1276Write
 13191 ;; This function is called by:
 13192 ;;		_initRadio
 13193 ;; This function uses a non-reentrant model
 13194 ;;
 13195                           
 13196                           	psect	text84
 13197  0046F6                     __ptext84:
 13198                           	opt callstack 0
 13199  0046F6                     _setCodingRate4:
 13200                           	opt callstack 15
 13201                           
 13202                           ;incstack = 0
 13203                           ;setCodingRate4@denominator stored from wreg
 13204  0046F6  6E13               	movwf	setCodingRate4@denominator^0,c
 13205  0046F8                     
 13206                           ;phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);phy/sx1216/phy_
      +                          src/phy.c: 298: {;phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 13207  0046F8  0E05               	movlw	5
 13208  0046FA  6013               	cpfslt	setCodingRate4@denominator^0,c
 13209  0046FC  EF82  F023         	goto	u4331
 13210  004700  EF84  F023         	goto	u4330
 13211  004704                     u4331:
 13212  004704  EF88  F023         	goto	l6570
 13213  004708                     u4330:
 13214  004708                     
 13215                           ;phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 13216  004708  0E05               	movlw	5
 13217  00470A  6E13               	movwf	setCodingRate4@denominator^0,c
 13218                           
 13219                           ;phy/sx1216/phy_src/phy.c: 301:   } else if (denominator > 8) {
 13220  00470C  EF92  F023         	goto	l6574
 13221  004710                     l6570:
 13222  004710  0E08               	movlw	8
 13223  004712  6413               	cpfsgt	setCodingRate4@denominator^0,c
 13224  004714  EF8E  F023         	goto	u4341
 13225  004718  EF90  F023         	goto	u4340
 13226  00471C                     u4341:
 13227  00471C  EF92  F023         	goto	l6574
 13228  004720                     u4340:
 13229  004720                     
 13230                           ;phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 13231  004720  0E08               	movlw	8
 13232  004722  6E13               	movwf	setCodingRate4@denominator^0,c
 13233  004724                     l6574:
 13234                           
 13235                           ;phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 13236  004724  5013               	movf	setCodingRate4@denominator^0,w,c
 13237  004726  0FFC               	addlw	252
 13238  004728  6E12               	movwf	setCodingRate4@cr^0,c
 13239  00472A                     
 13240                           ;phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr << 1
      +                          ));
 13241  00472A  90D8               	bcf	status,0,c
 13242  00472C  3412               	rlcf	setCodingRate4@cr^0,w,c
 13243  00472E  6E11               	movwf	??_setCodingRate4^0,c
 13244  004730  0E1D               	movlw	29
 13245  004732  ECE5  F027         	call	_SX1276Read
 13246  004736  0BF1               	andlw	241
 13247  004738  1011               	iorwf	??_setCodingRate4^0,w,c
 13248  00473A  6E0F               	movwf	SX1276Write@data^0,c
 13249  00473C  0E1D               	movlw	29
 13250  00473E  EC13  F028         	call	_SX1276Write
 13251  004742  0012               	return		;funcret
 13252  004744                     __end_of_setCodingRate4:
 13253                           	opt callstack 0
 13254                           
 13255 ;; *************** function _receive *****************
 13256 ;; Defined at:
 13257 ;;		line 449 in file "phy/sx1216/phy_src/phy.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  size            1    wreg     unsigned char 
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;  size            1   16[COMRAM] unsigned char 
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1    wreg      void 
 13264 ;; Registers used:
 13265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;Total ram usage:        1 bytes
 13276 ;; Hardware stack levels used:    1
 13277 ;; Hardware stack levels required when called:   12
 13278 ;; This function calls:
 13279 ;;		_SX1276Write
 13280 ;;		_explicitHeaderMode
 13281 ;;		_implicitHeaderMode
 13282 ;; This function is called by:
 13283 ;;		_initRadio
 13284 ;;		_DIO0_Receive_ISR
 13285 ;;		_radio_engine
 13286 ;;		_PHY_SetRxState
 13287 ;;		_cad_detected_isr
 13288 ;; This function uses a non-reentrant model
 13289 ;;
 13290                           
 13291                           	psect	text85
 13292  004744                     __ptext85:
 13293                           	opt callstack 0
 13294  004744                     _receive:
 13295                           	opt callstack 16
 13296                           
 13297                           ;incstack = 0
 13298                           ;receive@size stored from wreg
 13299  004744  6E11               	movwf	receive@size^0,c
 13300  004746                     
 13301                           ;phy/sx1216/phy_src/phy.c: 449: void receive(uint8_t size);phy/sx1216/phy_src/phy.c: 450
      +                          : {;phy/sx1216/phy_src/phy.c: 451:   if (size > 0) {
 13302  004746  5011               	movf	receive@size^0,w,c
 13303  004748  B4D8               	btfsc	status,2,c
 13304  00474A  EFA9  F023         	goto	u4351
 13305  00474E  EFAB  F023         	goto	u4350
 13306  004752                     u4351:
 13307  004752  EFB5  F023         	goto	l6586
 13308  004756                     u4350:
 13309  004756                     
 13310                           ;phy/sx1216/phy_src/phy.c: 452:     implicitHeaderMode();
 13311  004756  ECFD  F027         	call	_implicitHeaderMode	;wreg free
 13312                           
 13313                           ;phy/sx1216/phy_src/phy.c: 454:     SX1276Write(0x22, size & 0xff);
 13314  00475A  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 13315  004760  0E22               	movlw	34
 13316  004762  EC13  F028         	call	_SX1276Write
 13317                           
 13318                           ;phy/sx1216/phy_src/phy.c: 455:   } else {
 13319  004766  EFB7  F023         	goto	l1639
 13320  00476A                     l6586:
 13321                           
 13322                           ;phy/sx1216/phy_src/phy.c: 456:     explicitHeaderMode();
 13323  00476A  EC08  F028         	call	_explicitHeaderMode	;wreg free
 13324  00476E                     l1639:
 13325                           
 13326                           ;phy/sx1216/phy_src/phy.c: 459:   SX1276Write(0x0D, 0);
 13327  00476E  0E00               	movlw	0
 13328  004770  6E0F               	movwf	SX1276Write@data^0,c
 13329  004772  0E0D               	movlw	13
 13330  004774  EC13  F028         	call	_SX1276Write
 13331                           
 13332                           ;phy/sx1216/phy_src/phy.c: 460:   SX1276Write(0x12, 0xFF);
 13333  004778  0EFF               	movlw	255
 13334  00477A  6E0F               	movwf	SX1276Write@data^0,c
 13335  00477C  0E12               	movlw	18
 13336  00477E  EC13  F028         	call	_SX1276Write
 13337                           
 13338                           ;phy/sx1216/phy_src/phy.c: 461:   SX1276Write(0x01,0x80 | 0x05);
 13339  004782  0E85               	movlw	133
 13340  004784  6E0F               	movwf	SX1276Write@data^0,c
 13341  004786  0E01               	movlw	1
 13342  004788  EC13  F028         	call	_SX1276Write
 13343  00478C  0012               	return		;funcret
 13344  00478E                     __end_of_receive:
 13345                           	opt callstack 0
 13346                           
 13347 ;; *************** function _implicitHeaderMode *****************
 13348 ;; Defined at:
 13349 ;;		line 411 in file "phy/sx1216/phy_src/phy.c"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;		None
 13352 ;; Auto vars:     Size  Location     Type
 13353 ;;		None
 13354 ;; Return value:  Size  Location     Type
 13355 ;;                  1    wreg      void 
 13356 ;; Registers used:
 13357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13358 ;; Tracked objects:
 13359 ;;		On entry : 0/0
 13360 ;;		On exit  : 0/0
 13361 ;;		Unchanged: 0/0
 13362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13367 ;;Total ram usage:        0 bytes
 13368 ;; Hardware stack levels used:    1
 13369 ;; Hardware stack levels required when called:   11
 13370 ;; This function calls:
 13371 ;;		_SX1276Read
 13372 ;;		_SX1276Write
 13373 ;; This function is called by:
 13374 ;;		_receive
 13375 ;;		_beginPacket
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           	psect	text86
 13380  004FFA                     __ptext86:
 13381                           	opt callstack 0
 13382  004FFA                     _implicitHeaderMode:
 13383                           	opt callstack 16
 13384  004FFA                     
 13385                           ;phy/sx1216/phy_src/phy.c: 413:   _implicitHeaderMode = 1;
 13386  004FFA  0E01               	movlw	1
 13387  004FFC  6E54               	movwf	__implicitHeaderMode^0,c
 13388  004FFE                     
 13389                           ;phy/sx1216/phy_src/phy.c: 415:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 13390  004FFE  0E1D               	movlw	29
 13391  005000  ECE5  F027         	call	_SX1276Read
 13392  005004  0901               	iorlw	1
 13393  005006  6E0F               	movwf	SX1276Write@data^0,c
 13394  005008  0E1D               	movlw	29
 13395  00500A  EC13  F028         	call	_SX1276Write
 13396  00500E  0012               	return		;funcret
 13397  005010                     __end_of_implicitHeaderMode:
 13398                           	opt callstack 0
 13399                           
 13400 ;; *************** function _explicitHeaderMode *****************
 13401 ;; Defined at:
 13402 ;;		line 397 in file "phy/sx1216/phy_src/phy.c"
 13403 ;; Parameters:    Size  Location     Type
 13404 ;;		None
 13405 ;; Auto vars:     Size  Location     Type
 13406 ;;		None
 13407 ;; Return value:  Size  Location     Type
 13408 ;;                  1    wreg      void 
 13409 ;; Registers used:
 13410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13411 ;; Tracked objects:
 13412 ;;		On entry : 0/0
 13413 ;;		On exit  : 0/0
 13414 ;;		Unchanged: 0/0
 13415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13420 ;;Total ram usage:        0 bytes
 13421 ;; Hardware stack levels used:    1
 13422 ;; Hardware stack levels required when called:   11
 13423 ;; This function calls:
 13424 ;;		_SX1276Read
 13425 ;;		_SX1276Write
 13426 ;; This function is called by:
 13427 ;;		_receive
 13428 ;;		_initRadio
 13429 ;;		_PHY_DataReq
 13430 ;;		_beginPacket
 13431 ;; This function uses a non-reentrant model
 13432 ;;
 13433                           
 13434                           	psect	text87
 13435  005010                     __ptext87:
 13436                           	opt callstack 0
 13437  005010                     _explicitHeaderMode:
 13438                           	opt callstack 16
 13439  005010                     
 13440                           ;phy/sx1216/phy_src/phy.c: 399:   _implicitHeaderMode = 0;
 13441  005010  0E00               	movlw	0
 13442  005012  6E54               	movwf	__implicitHeaderMode^0,c
 13443  005014                     
 13444                           ;phy/sx1216/phy_src/phy.c: 401:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 13445  005014  0E1D               	movlw	29
 13446  005016  ECE5  F027         	call	_SX1276Read
 13447  00501A  0BFE               	andlw	254
 13448  00501C  6E0F               	movwf	SX1276Write@data^0,c
 13449  00501E  0E1D               	movlw	29
 13450  005020  EC13  F028         	call	_SX1276Write
 13451  005024  0012               	return		;funcret
 13452  005026                     __end_of_explicitHeaderMode:
 13453                           	opt callstack 0
 13454                           
 13455 ;; *************** function _enableCrc *****************
 13456 ;; Defined at:
 13457 ;;		line 351 in file "phy/sx1216/phy_src/phy.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;		None
 13460 ;; Auto vars:     Size  Location     Type
 13461 ;;		None
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  1    wreg      void 
 13464 ;; Registers used:
 13465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13466 ;; Tracked objects:
 13467 ;;		On entry : 0/0
 13468 ;;		On exit  : 0/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13475 ;;Total ram usage:        0 bytes
 13476 ;; Hardware stack levels used:    1
 13477 ;; Hardware stack levels required when called:   11
 13478 ;; This function calls:
 13479 ;;		_SX1276Read
 13480 ;;		_SX1276Write
 13481 ;; This function is called by:
 13482 ;;		_initRadio
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text88
 13487  00503C                     __ptext88:
 13488                           	opt callstack 0
 13489  00503C                     _enableCrc:
 13490                           	opt callstack 15
 13491  00503C                     
 13492                           ;phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 13493  00503C  0E1E               	movlw	30
 13494  00503E  ECE5  F027         	call	_SX1276Read
 13495  005042  0904               	iorlw	4
 13496  005044  6E0F               	movwf	SX1276Write@data^0,c
 13497  005046  0E1E               	movlw	30
 13498  005048  EC13  F028         	call	_SX1276Write
 13499  00504C  0012               	return		;funcret
 13500  00504E                     __end_of_enableCrc:
 13501                           	opt callstack 0
 13502                           
 13503 ;; *************** function _SX1276Write *****************
 13504 ;; Defined at:
 13505 ;;		line 45 in file "phy/sx1216/phy_src/phy.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  addr            1    wreg     unsigned char 
 13508 ;;  data            1   14[COMRAM] unsigned char 
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  addr            1   15[COMRAM] unsigned char 
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      void 
 13513 ;; Registers used:
 13514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13520 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13524 ;;Total ram usage:        2 bytes
 13525 ;; Hardware stack levels used:    1
 13526 ;; Hardware stack levels required when called:   10
 13527 ;; This function calls:
 13528 ;;		_SX1276WriteBuffer
 13529 ;; This function is called by:
 13530 ;;		_idle
 13531 ;;		_setTxPower
 13532 ;;		_setFrequency
 13533 ;;		_setSpreadingFactor
 13534 ;;		_setSignalBandwidth
 13535 ;;		_setCodingRate4
 13536 ;;		_setPreambleLength
 13537 ;;		_enableCrc
 13538 ;;		_explicitHeaderMode
 13539 ;;		_implicitHeaderMode
 13540 ;;		_receive
 13541 ;;		_initRadio
 13542 ;;		_cad
 13543 ;;		_start_radio_cad
 13544 ;;		_DIO0_Receive_ISR
 13545 ;;		_PHY_DataReq
 13546 ;;		_sleep
 13547 ;;		_setSyncWord
 13548 ;;		_disableCrc
 13549 ;;		_beginPacket
 13550 ;;		_endPacket
 13551 ;;		_cad_done_isr
 13552 ;;		_cad_detected_isr
 13553 ;;		_rx_timeout_isr
 13554 ;;		_DIO2_FHSS_ISR
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text89
 13559  005026                     __ptext89:
 13560                           	opt callstack 0
 13561  005026                     _SX1276Write:
 13562                           	opt callstack 16
 13563                           
 13564                           ;incstack = 0
 13565                           ;SX1276Write@addr stored from wreg
 13566  005026  6E10               	movwf	SX1276Write@addr^0,c
 13567  005028                     
 13568                           ;phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );phy
      +                          /sx1216/phy_src/phy.c: 46: {;phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffer( addr, 
      +                          &data, 1 );
 13569  005028  0E0F               	movlw	low SX1276Write@data
 13570  00502A  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 13571  00502C  0E00               	movlw	high SX1276Write@data
 13572  00502E  6E0A               	movwf	(SX1276WriteBuffer@buffer+1)^0,c
 13573  005030  0E01               	movlw	1
 13574  005032  6E0B               	movwf	SX1276WriteBuffer@size^0,c
 13575  005034  5010               	movf	SX1276Write@addr^0,w,c
 13576  005036  ECF4  F026         	call	_SX1276WriteBuffer
 13577  00503A  0012               	return		;funcret
 13578  00503C                     __end_of_SX1276Write:
 13579                           	opt callstack 0
 13580                           
 13581 ;; *************** function _SX1276WriteBuffer *****************
 13582 ;; Defined at:
 13583 ;;		line 75 in file "phy/sx1216/phy_src/phy.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  addr            1    wreg     unsigned char 
 13586 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 13587 ;;		 -> SX1276Write@data(1), 
 13588 ;;  size            1   10[COMRAM] unsigned char 
 13589 ;; Auto vars:     Size  Location     Type
 13590 ;;  addr            1   11[COMRAM] unsigned char 
 13591 ;;  i               1    0        unsigned char 
 13592 ;; Return value:  Size  Location     Type
 13593 ;;                  1    wreg      void 
 13594 ;; Registers used:
 13595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13596 ;; Tracked objects:
 13597 ;;		On entry : 0/0
 13598 ;;		On exit  : 0/0
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13601 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13605 ;;Total ram usage:        4 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:    9
 13608 ;; This function calls:
 13609 ;;		_SPI1_ExchangeByte
 13610 ;;		_SPI1_WriteBlock
 13611 ;; This function is called by:
 13612 ;;		_SX1276Write
 13613 ;;		_SX1276WriteFifo
 13614 ;; This function uses a non-reentrant model
 13615 ;;
 13616                           
 13617                           	psect	text90
 13618  004DE8                     __ptext90:
 13619                           	opt callstack 0
 13620  004DE8                     _SX1276WriteBuffer:
 13621                           	opt callstack 16
 13622                           
 13623                           ;incstack = 0
 13624                           ;SX1276WriteBuffer@addr stored from wreg
 13625  004DE8  6E0C               	movwf	SX1276WriteBuffer@addr^0,c
 13626  004DEA  9CBC               	bcf	188,6,c	;volatile
 13627  004DEC                     
 13628                           ;phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 13629  004DEC  500C               	movf	SX1276WriteBuffer@addr^0,w,c
 13630  004DEE  0980               	iorlw	128
 13631  004DF0  EC2E  F027         	call	_SPI1_ExchangeByte
 13632  004DF4                     
 13633                           ;phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 13634  004DF4  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 13635  004DFA  0060  F028  F004   	movff	SX1276WriteBuffer@buffer+1,SPI1_WriteBlock@block+1
 13636  004E00  0060  F02C  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 13637  004E06  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 13638  004E08  ECDE  F024         	call	_SPI1_WriteBlock	;wreg free
 13639  004E0C  8CBC               	bsf	188,6,c	;volatile
 13640  004E0E  0012               	return		;funcret
 13641  004E10                     __end_of_SX1276WriteBuffer:
 13642                           	opt callstack 0
 13643                           
 13644 ;; *************** function _SPI1_WriteBlock *****************
 13645 ;; Defined at:
 13646 ;;		line 121 in file "mcc_generated_files/spi1.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;  block           2    2[COMRAM] PTR void 
 13649 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 13650 ;;  blockSize       2    4[COMRAM] unsigned int 
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;  data            2    6[COMRAM] PTR unsigned char 
 13653 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 13654 ;; Return value:  Size  Location     Type
 13655 ;;                  1    wreg      void 
 13656 ;; Registers used:
 13657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13658 ;; Tracked objects:
 13659 ;;		On entry : 0/0
 13660 ;;		On exit  : 0/0
 13661 ;;		Unchanged: 0/0
 13662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13666 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;Total ram usage:        6 bytes
 13668 ;; Hardware stack levels used:    1
 13669 ;; Hardware stack levels required when called:    8
 13670 ;; This function calls:
 13671 ;;		_SPI1_ExchangeByte
 13672 ;; This function is called by:
 13673 ;;		_SX1276WriteBuffer
 13674 ;;		_PHY_DataReq
 13675 ;; This function uses a non-reentrant model
 13676 ;;
 13677                           
 13678                           	psect	text91
 13679  0049BC                     __ptext91:
 13680                           	opt callstack 0
 13681  0049BC                     _SPI1_WriteBlock:
 13682                           	opt callstack 16
 13683  0049BC                     
 13684                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 13685  0049BC  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 13686  0049C2  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 13687                           
 13688                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 13689  0049C8  EFF1  F024         	goto	l5536
 13690  0049CC                     l5532:
 13691                           
 13692                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 13693  0049CC  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 13694  0049D2  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 13695  0049D8  50DF               	movf	indf2,w,c
 13696  0049DA  EC2E  F027         	call	_SPI1_ExchangeByte
 13697  0049DE  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 13698  0049E0  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 13699  0049E2                     l5536:
 13700                           
 13701                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 13702  0049E2  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 13703  0049E4  A0D8               	btfss	status,0,c
 13704  0049E6  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 13705  0049E8  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 13706  0049EA  E106               	bnz	u3031
 13707  0049EC  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 13708  0049EE  A4D8               	btfss	status,2,c
 13709  0049F0  EFFC  F024         	goto	u3031
 13710  0049F4  EFFE  F024         	goto	u3030
 13711  0049F8                     u3031:
 13712  0049F8  EFE6  F024         	goto	l5532
 13713  0049FC                     u3030:
 13714  0049FC  0012               	return		;funcret
 13715  0049FE                     __end_of_SPI1_WriteBlock:
 13716                           	opt callstack 0
 13717                           
 13718 ;; *************** function _SX1276Read *****************
 13719 ;; Defined at:
 13720 ;;		line 32 in file "phy/sx1216/phy_src/phy.c"
 13721 ;; Parameters:    Size  Location     Type
 13722 ;;  addr            1    wreg     unsigned char 
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;  addr            1   12[COMRAM] unsigned char 
 13725 ;;  data            1   13[COMRAM] unsigned char 
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  1    wreg      unsigned char 
 13728 ;; Registers used:
 13729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13739 ;;Total ram usage:        2 bytes
 13740 ;; Hardware stack levels used:    1
 13741 ;; Hardware stack levels required when called:   10
 13742 ;; This function calls:
 13743 ;;		_SX1276ReadBuffer
 13744 ;; This function is called by:
 13745 ;;		_setSpreadingFactor
 13746 ;;		_setSignalBandwidth
 13747 ;;		_getSpreadingFactor
 13748 ;;		_getSignalBandwidth
 13749 ;;		_setCodingRate4
 13750 ;;		_enableCrc
 13751 ;;		_explicitHeaderMode
 13752 ;;		_implicitHeaderMode
 13753 ;;		_initRadio
 13754 ;;		_cad
 13755 ;;		_DIO0_Receive_ISR
 13756 ;;		_radio_engine
 13757 ;;		_getSyncWord
 13758 ;;		_disableCrc
 13759 ;;		_endPacket
 13760 ;;		_available
 13761 ;;		_read
 13762 ;;		_readAllReg
 13763 ;; This function uses a non-reentrant model
 13764 ;;
 13765                           
 13766                           	psect	text92
 13767  004FCA                     __ptext92:
 13768                           	opt callstack 0
 13769  004FCA                     _SX1276Read:
 13770                           	opt callstack 16
 13771                           
 13772                           ;incstack = 0
 13773                           ;SX1276Read@addr stored from wreg
 13774  004FCA  6E0D               	movwf	SX1276Read@addr^0,c
 13775  004FCC                     
 13776                           ;phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );phy/sx1216/phy_
      +                          src/phy.c: 33: {;phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;phy/sx1216/phy_src/phy.
      +                          c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 13777  004FCC  0E0E               	movlw	low SX1276Read@data
 13778  004FCE  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 13779  004FD0  0E00               	movlw	high SX1276Read@data
 13780  004FD2  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 13781  004FD4  0E01               	movlw	1
 13782  004FD6  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 13783  004FD8  500D               	movf	SX1276Read@addr^0,w,c
 13784  004FDA  EC08  F027         	call	_SX1276ReadBuffer
 13785  004FDE                     
 13786                           ;phy/sx1216/phy_src/phy.c: 36:     return data;
 13787  004FDE  500E               	movf	SX1276Read@data^0,w,c
 13788  004FE0  0012               	return		;funcret
 13789  004FE2                     __end_of_SX1276Read:
 13790                           	opt callstack 0
 13791                           
 13792 ;; *************** function _SX1276ReadBuffer *****************
 13793 ;; Defined at:
 13794 ;;		line 57 in file "phy/sx1216/phy_src/phy.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  addr            1    wreg     unsigned char 
 13797 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 13798 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 13799 ;;  size            1   10[COMRAM] unsigned char 
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;  addr            1   11[COMRAM] unsigned char 
 13802 ;;  i               1    0        unsigned char 
 13803 ;; Return value:  Size  Location     Type
 13804 ;;                  1    wreg      void 
 13805 ;; Registers used:
 13806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13807 ;; Tracked objects:
 13808 ;;		On entry : 0/0
 13809 ;;		On exit  : 0/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13812 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;Total ram usage:        4 bytes
 13817 ;; Hardware stack levels used:    1
 13818 ;; Hardware stack levels required when called:    9
 13819 ;; This function calls:
 13820 ;;		_SPI1_ExchangeByte
 13821 ;;		_SPI1_ReadBlock
 13822 ;; This function is called by:
 13823 ;;		_SX1276Read
 13824 ;;		_DIO0_Receive_ISR
 13825 ;;		_SX1276ReadFifo
 13826 ;; This function uses a non-reentrant model
 13827 ;;
 13828                           
 13829                           	psect	text93
 13830  004E10                     __ptext93:
 13831                           	opt callstack 0
 13832  004E10                     _SX1276ReadBuffer:
 13833                           	opt callstack 16
 13834                           
 13835                           ;incstack = 0
 13836                           ;SX1276ReadBuffer@addr stored from wreg
 13837  004E10  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 13838  004E12  9CBC               	bcf	188,6,c	;volatile
 13839  004E14                     
 13840                           ;phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 13841  004E14  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 13842  004E16  0B7F               	andlw	127
 13843  004E18  EC2E  F027         	call	_SPI1_ExchangeByte
 13844  004E1C                     
 13845                           ;phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 13846  004E1C  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 13847  004E22  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 13848  004E28  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 13849  004E2E  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 13850  004E30  EC9A  F024         	call	_SPI1_ReadBlock	;wreg free
 13851  004E34  8CBC               	bsf	188,6,c	;volatile
 13852  004E36  0012               	return		;funcret
 13853  004E38                     __end_of_SX1276ReadBuffer:
 13854                           	opt callstack 0
 13855                           
 13856 ;; *************** function _SPI1_ReadBlock *****************
 13857 ;; Defined at:
 13858 ;;		line 130 in file "mcc_generated_files/spi1.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;  block           2    2[COMRAM] PTR void 
 13861 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 13862 ;;  blockSize       2    4[COMRAM] unsigned int 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  data            2    6[COMRAM] PTR unsigned char 
 13865 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  1    wreg      void 
 13868 ;; Registers used:
 13869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13870 ;; Tracked objects:
 13871 ;;		On entry : 0/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13879 ;;Total ram usage:        6 bytes
 13880 ;; Hardware stack levels used:    1
 13881 ;; Hardware stack levels required when called:    8
 13882 ;; This function calls:
 13883 ;;		_SPI1_ExchangeByte
 13884 ;; This function is called by:
 13885 ;;		_SX1276ReadBuffer
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           	psect	text94
 13890  004934                     __ptext94:
 13891                           	opt callstack 0
 13892  004934                     _SPI1_ReadBlock:
 13893                           	opt callstack 16
 13894  004934                     
 13895                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 13896  004934  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 13897  00493A  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 13898                           
 13899                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 13900  004940  EFAE  F024         	goto	l5544
 13901  004944                     l5540:
 13902                           
 13903                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 13904  004944  0E00               	movlw	0
 13905  004946  EC2E  F027         	call	_SPI1_ExchangeByte
 13906  00494A  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 13907  004950  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 13908  004956  6EDF               	movwf	indf2,c
 13909  004958  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 13910  00495A  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 13911  00495C                     l5544:
 13912                           
 13913                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 13914  00495C  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 13915  00495E  A0D8               	btfss	status,0,c
 13916  004960  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 13917  004962  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 13918  004964  E106               	bnz	u3041
 13919  004966  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 13920  004968  A4D8               	btfss	status,2,c
 13921  00496A  EFB9  F024         	goto	u3041
 13922  00496E  EFBB  F024         	goto	u3040
 13923  004972                     u3041:
 13924  004972  EFA2  F024         	goto	l5540
 13925  004976                     u3040:
 13926  004976  0012               	return		;funcret
 13927  004978                     __end_of_SPI1_ReadBlock:
 13928                           	opt callstack 0
 13929                           
 13930 ;; *************** function _SPI1_ExchangeByte *****************
 13931 ;; Defined at:
 13932 ;;		line 100 in file "mcc_generated_files/spi1.c"
 13933 ;; Parameters:    Size  Location     Type
 13934 ;;  data            1    wreg     unsigned char 
 13935 ;; Auto vars:     Size  Location     Type
 13936 ;;  data            1    1[COMRAM] unsigned char 
 13937 ;; Return value:  Size  Location     Type
 13938 ;;                  1    wreg      unsigned char 
 13939 ;; Registers used:
 13940 ;;		wreg, status,2
 13941 ;; Tracked objects:
 13942 ;;		On entry : 0/0
 13943 ;;		On exit  : 0/0
 13944 ;;		Unchanged: 0/0
 13945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13950 ;;Total ram usage:        1 bytes
 13951 ;; Hardware stack levels used:    1
 13952 ;; Hardware stack levels required when called:    7
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_SPI1_WriteBlock
 13957 ;;		_SPI1_ReadBlock
 13958 ;;		_SX1276ReadBuffer
 13959 ;;		_SX1276WriteBuffer
 13960 ;;		_PHY_DataReq
 13961 ;; This function uses a non-reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text95
 13965  004E5C                     __ptext95:
 13966                           	opt callstack 0
 13967  004E5C                     _SPI1_ExchangeByte:
 13968                           	opt callstack 16
 13969                           
 13970                           ;incstack = 0
 13971                           ;SPI1_ExchangeByte@data stored from wreg
 13972  004E5C  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 13973  004E5E                     
 13974                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 13975  004E5E  0E01               	movlw	1
 13976  004E60  013D               	movlb	61	; () banked
 13977  004E62  6F12               	movwf	18,b	;volatile
 13978  004E64                     
 13979                           ; BSR set to: 61
 13980                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 13981  004E64  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 13982  004E6A                     l102:
 13983  004E6A  0139               	movlb	57	; () banked
 13984  004E6C  A9A2               	btfss	162,4,b	;volatile
 13985  004E6E  EF3B  F027         	goto	u3021
 13986  004E72  EF3D  F027         	goto	u3020
 13987  004E76                     u3021:
 13988  004E76  EF35  F027         	goto	l102
 13989  004E7A                     u3020:
 13990  004E7A                     
 13991                           ; BSR set to: 57
 13992                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 13993  004E7A  013D               	movlb	61	; () banked
 13994  004E7C  5110               	movf	16,w,b	;volatile
 13995  004E7E                     
 13996                           ; BSR set to: 61
 13997  004E7E  0012               	return		;funcret
 13998  004E80                     __end_of_SPI1_ExchangeByte:
 13999                           	opt callstack 0
 14000                           
 14001 ;; *************** function _computeFRF *****************
 14002 ;; Defined at:
 14003 ;;		line 725 in file "phy/sx1216/phy_src/phy.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;		None
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;  num             4   42[COMRAM] unsigned long 
 14008 ;;  num_mod         4   38[COMRAM] unsigned long 
 14009 ;;  frequency       4   34[COMRAM] unsigned long 
 14010 ;;  i               1   46[COMRAM] unsigned char 
 14011 ;; Return value:  Size  Location     Type
 14012 ;;                  1    wreg      void 
 14013 ;; Registers used:
 14014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14015 ;; Tracked objects:
 14016 ;;		On entry : 0/0
 14017 ;;		On exit  : 0/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14023 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14024 ;;Total ram usage:       13 bytes
 14025 ;; Hardware stack levels used:    1
 14026 ;; Hardware stack levels required when called:    8
 14027 ;; This function calls:
 14028 ;;		___lldiv
 14029 ;;		___llmod
 14030 ;; This function is called by:
 14031 ;;		_initRadio
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           	psect	text96
 14036  001FC6                     __ptext96:
 14037                           	opt callstack 0
 14038  001FC6                     _computeFRF:
 14039                           	opt callstack 18
 14040  001FC6                     
 14041                           ;phy/sx1216/phy_src/phy.c: 727:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 14042  001FC6  0E00               	movlw	0
 14043  001FC8  6E2F               	movwf	computeFRF@i^0,c
 14044  001FCA                     l6594:
 14045                           
 14046                           ;phy/sx1216/phy_src/phy.c: 728:     {;phy/sx1216/phy_src/phy.c: 729:         uint32_t nu
      +                          m, num_mod, frequency;;phy/sx1216/phy_src/phy.c: 730:         frequency = fhssList[i];
 14047  001FCA  502F               	movf	computeFRF@i^0,w,c
 14048  001FCC  0D04               	mullw	4
 14049  001FCE  0EF5               	movlw	low _fhssList
 14050  001FD0  24F3               	addwf	243,w,c
 14051  001FD2  6EF6               	movwf	tblptrl,c
 14052  001FD4  0EFE               	movlw	high _fhssList
 14053  001FD6  20F4               	addwfc	244,w,c
 14054  001FD8  6EF7               	movwf	tblptrh,c
 14055  001FDA                     	if	1	;There are 3 active tblptr bytes
 14056  001FDA  6AF8               	clrf	tblptru,c
 14057  001FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 14058  001FDE  22F8               	addwfc	tblptru,f,c
 14059  001FE0                     	endif
 14060  001FE0  0009               	tblrd		*+
 14061  001FE2  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 14062  001FE8  0009               	tblrd		*+
 14063  001FEA  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 14064  001FF0  0009               	tblrd		*+
 14065  001FF2  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 14066  001FF8  000A               	tblrd		*-
 14067  001FFA  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 14068  002000                     
 14069                           ;phy/sx1216/phy_src/phy.c: 737:         num = frequency / 15625;
 14070  002000  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 14071  002006  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 14072  00200C  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 14073  002012  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 14074  002018  0E09               	movlw	9
 14075  00201A  6E1A               	movwf	___lldiv@divisor^0,c
 14076  00201C  0E3D               	movlw	61
 14077  00201E  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 14078  002020  0E00               	movlw	0
 14079  002022  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 14080  002024  0E00               	movlw	0
 14081  002026  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 14082  002028  EC18  F01F         	call	___lldiv	;wreg free
 14083  00202C  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 14084  002032  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 14085  002038  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 14086  00203E  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 14087  002044                     
 14088                           ;phy/sx1216/phy_src/phy.c: 738:         num_mod = frequency % 15625;
 14089  002044  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 14090  00204A  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 14091  002050  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 14092  002056  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 14093  00205C  0E09               	movlw	9
 14094  00205E  6E06               	movwf	___llmod@divisor^0,c
 14095  002060  0E3D               	movlw	61
 14096  002062  6E07               	movwf	(___llmod@divisor+1)^0,c
 14097  002064  0E00               	movlw	0
 14098  002066  6E08               	movwf	(___llmod@divisor+2)^0,c
 14099  002068  0E00               	movlw	0
 14100  00206A  6E09               	movwf	(___llmod@divisor+3)^0,c
 14101  00206C  ECA7  F020         	call	___llmod	;wreg free
 14102  002070  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 14103  002076  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 14104  00207C  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 14105  002082  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 14106  002088                     
 14107                           ;phy/sx1216/phy_src/phy.c: 742:         num <<= 8;
 14108  002088  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 14109  00208E  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 14110  002094  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 14111  00209A  6A2B               	clrf	computeFRF@num^0,c
 14112  00209C                     
 14113                           ;phy/sx1216/phy_src/phy.c: 743:         num_mod <<= 8;
 14114  00209C  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 14115  0020A2  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 14116  0020A8  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 14117  0020AE  6A27               	clrf	computeFRF@num_mod^0,c
 14118  0020B0                     
 14119                           ;phy/sx1216/phy_src/phy.c: 747:         num_mod = num_mod / 15625;
 14120  0020B0  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 14121  0020B6  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 14122  0020BC  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 14123  0020C2  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 14124  0020C8  0E09               	movlw	9
 14125  0020CA  6E1A               	movwf	___lldiv@divisor^0,c
 14126  0020CC  0E3D               	movlw	61
 14127  0020CE  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 14128  0020D0  0E00               	movlw	0
 14129  0020D2  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 14130  0020D4  0E00               	movlw	0
 14131  0020D6  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 14132  0020D8  EC18  F01F         	call	___lldiv	;wreg free
 14133  0020DC  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 14134  0020E2  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 14135  0020E8  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 14136  0020EE  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 14137  0020F4                     
 14138                           ;phy/sx1216/phy_src/phy.c: 748:         num += num_mod;
 14139  0020F4  5027               	movf	computeFRF@num_mod^0,w,c
 14140  0020F6  262B               	addwf	computeFRF@num^0,f,c
 14141  0020F8  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 14142  0020FA  222C               	addwfc	(computeFRF@num+1)^0,f,c
 14143  0020FC  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 14144  0020FE  222D               	addwfc	(computeFRF@num+2)^0,f,c
 14145  002100  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 14146  002102  222E               	addwfc	(computeFRF@num+3)^0,f,c
 14147  002104                     
 14148                           ;phy/sx1216/phy_src/phy.c: 750:         fhssReg[i][0] = (num >> 16);
 14149  002104  502F               	movf	computeFRF@i^0,w,c
 14150  002106  0D03               	mullw	3
 14151  002108  0E00               	movlw	low _fhssReg
 14152  00210A  24F3               	addwf	243,w,c
 14153  00210C  6ED9               	movwf	fsr2l,c
 14154  00210E  0E03               	movlw	high _fhssReg
 14155  002110  20F4               	addwfc	prodh,w,c
 14156  002112  6EDA               	movwf	fsr2h,c
 14157  002114  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 14158  00211A                     
 14159                           ;phy/sx1216/phy_src/phy.c: 751:         fhssReg[i][1] = (num >> 8);
 14160  00211A  502F               	movf	computeFRF@i^0,w,c
 14161  00211C  0D03               	mullw	3
 14162  00211E  0E01               	movlw	low (_fhssReg+1)
 14163  002120  24F3               	addwf	243,w,c
 14164  002122  6ED9               	movwf	fsr2l,c
 14165  002124  0E03               	movlw	high (_fhssReg+1)
 14166  002126  20F4               	addwfc	prodh,w,c
 14167  002128  6EDA               	movwf	fsr2h,c
 14168  00212A  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 14169  002130                     
 14170                           ;phy/sx1216/phy_src/phy.c: 752:         fhssReg[i][2] = (num);
 14171  002130  502F               	movf	computeFRF@i^0,w,c
 14172  002132  0D03               	mullw	3
 14173  002134  0E02               	movlw	low (_fhssReg+2)
 14174  002136  24F3               	addwf	243,w,c
 14175  002138  6ED9               	movwf	fsr2l,c
 14176  00213A  0E03               	movlw	high (_fhssReg+2)
 14177  00213C  20F4               	addwfc	prodh,w,c
 14178  00213E  6EDA               	movwf	fsr2h,c
 14179  002140  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 14180  002146                     
 14181                           ;phy/sx1216/phy_src/phy.c: 753:     }
 14182  002146  2A2F               	incf	computeFRF@i^0,f,c
 14183  002148  0E3E               	movlw	62
 14184  00214A  642F               	cpfsgt	computeFRF@i^0,c
 14185  00214C  EFAA  F010         	goto	u4361
 14186  002150  EFAC  F010         	goto	u4360
 14187  002154                     u4361:
 14188  002154  EFE5  F00F         	goto	l6594
 14189  002158                     u4360:
 14190  002158  0012               	return		;funcret
 14191  00215A                     __end_of_computeFRF:
 14192                           	opt callstack 0
 14193                           
 14194 ;; *************** function ___llmod *****************
 14195 ;; Defined at:
 14196 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;  dividend        4    1[COMRAM] unsigned long 
 14199 ;;  divisor         4    5[COMRAM] unsigned long 
 14200 ;; Auto vars:     Size  Location     Type
 14201 ;;  counter         1    9[COMRAM] unsigned char 
 14202 ;; Return value:  Size  Location     Type
 14203 ;;                  4    1[COMRAM] unsigned long 
 14204 ;; Registers used:
 14205 ;;		wreg, status,2, status,0
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14211 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;Total ram usage:        9 bytes
 14216 ;; Hardware stack levels used:    1
 14217 ;; Hardware stack levels required when called:    7
 14218 ;; This function calls:
 14219 ;;		Nothing
 14220 ;; This function is called by:
 14221 ;;		_setFrequency
 14222 ;;		_computeFRF
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           	psect	text97
 14227  00414E                     __ptext97:
 14228                           	opt callstack 0
 14229  00414E                     ___llmod:
 14230                           	opt callstack 20
 14231  00414E  5006               	movf	___llmod@divisor^0,w,c
 14232  004150  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 14233  004152  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 14234  004154  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 14235  004156  B4D8               	btfsc	status,2,c
 14236  004158  EFB0  F020         	goto	u3651
 14237  00415C  EFB2  F020         	goto	u3650
 14238  004160                     u3651:
 14239  004160  EFE2  F020         	goto	l2529
 14240  004164                     u3650:
 14241  004164  0E01               	movlw	1
 14242  004166  6E0A               	movwf	___llmod@counter^0,c
 14243  004168  EFBC  F020         	goto	l6080
 14244  00416C                     l6078:
 14245  00416C  90D8               	bcf	status,0,c
 14246  00416E  3606               	rlcf	___llmod@divisor^0,f,c
 14247  004170  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 14248  004172  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 14249  004174  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 14250  004176  2A0A               	incf	___llmod@counter^0,f,c
 14251  004178                     l6080:
 14252  004178  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 14253  00417A  EFC1  F020         	goto	u3661
 14254  00417E  EFC3  F020         	goto	u3660
 14255  004182                     u3661:
 14256  004182  EFB6  F020         	goto	l6078
 14257  004186                     u3660:
 14258  004186                     l6082:
 14259  004186  5006               	movf	___llmod@divisor^0,w,c
 14260  004188  5C02               	subwf	___llmod@dividend^0,w,c
 14261  00418A  5007               	movf	(___llmod@divisor+1)^0,w,c
 14262  00418C  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 14263  00418E  5008               	movf	(___llmod@divisor+2)^0,w,c
 14264  004190  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 14265  004192  5009               	movf	(___llmod@divisor+3)^0,w,c
 14266  004194  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 14267  004196  A0D8               	btfss	status,0,c
 14268  004198  EFD0  F020         	goto	u3671
 14269  00419C  EFD2  F020         	goto	u3670
 14270  0041A0                     u3671:
 14271  0041A0  EFDA  F020         	goto	l6086
 14272  0041A4                     u3670:
 14273  0041A4  5006               	movf	___llmod@divisor^0,w,c
 14274  0041A6  5E02               	subwf	___llmod@dividend^0,f,c
 14275  0041A8  5007               	movf	(___llmod@divisor+1)^0,w,c
 14276  0041AA  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 14277  0041AC  5008               	movf	(___llmod@divisor+2)^0,w,c
 14278  0041AE  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 14279  0041B0  5009               	movf	(___llmod@divisor+3)^0,w,c
 14280  0041B2  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 14281  0041B4                     l6086:
 14282  0041B4  90D8               	bcf	status,0,c
 14283  0041B6  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 14284  0041B8  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 14285  0041BA  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 14286  0041BC  3206               	rrcf	___llmod@divisor^0,f,c
 14287  0041BE  2E0A               	decfsz	___llmod@counter^0,f,c
 14288  0041C0  EFC3  F020         	goto	l6082
 14289  0041C4                     l2529:
 14290  0041C4  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 14291  0041CA  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 14292  0041D0  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 14293  0041D6  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 14294  0041DC  0012               	return		;funcret
 14295  0041DE                     __end_of___llmod:
 14296                           	opt callstack 0
 14297                           
 14298 ;; *************** function ___lldiv *****************
 14299 ;; Defined at:
 14300 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 14301 ;; Parameters:    Size  Location     Type
 14302 ;;  dividend        4   21[COMRAM] unsigned long 
 14303 ;;  divisor         4   25[COMRAM] unsigned long 
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;  quotient        4   29[COMRAM] unsigned long 
 14306 ;;  counter         1   33[COMRAM] unsigned char 
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  4   21[COMRAM] unsigned long 
 14309 ;; Registers used:
 14310 ;;		wreg, status,2, status,0
 14311 ;; Tracked objects:
 14312 ;;		On entry : 0/0
 14313 ;;		On exit  : 0/0
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14316 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14317 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14319 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14320 ;;Total ram usage:       13 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; Hardware stack levels required when called:    7
 14323 ;; This function calls:
 14324 ;;		Nothing
 14325 ;; This function is called by:
 14326 ;;		_setFrequency
 14327 ;;		_setSpreadingFactor
 14328 ;;		_setSignalBandwidth
 14329 ;;		_computeFRF
 14330 ;; This function uses a non-reentrant model
 14331 ;;
 14332                           
 14333                           	psect	text98
 14334  003E30                     __ptext98:
 14335                           	opt callstack 0
 14336  003E30                     ___lldiv:
 14337                           	opt callstack 20
 14338  003E30  0E00               	movlw	0
 14339  003E32  6E1E               	movwf	___lldiv@quotient^0,c
 14340  003E34  0E00               	movlw	0
 14341  003E36  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 14342  003E38  0E00               	movlw	0
 14343  003E3A  6E20               	movwf	(___lldiv@quotient+2)^0,c
 14344  003E3C  0E00               	movlw	0
 14345  003E3E  6E21               	movwf	(___lldiv@quotient+3)^0,c
 14346  003E40  501A               	movf	___lldiv@divisor^0,w,c
 14347  003E42  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 14348  003E44  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 14349  003E46  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 14350  003E48  B4D8               	btfsc	status,2,c
 14351  003E4A  EF29  F01F         	goto	u3571
 14352  003E4E  EF2B  F01F         	goto	u3570
 14353  003E52                     u3571:
 14354  003E52  EF61  F01F         	goto	l2136
 14355  003E56                     u3570:
 14356  003E56  0E01               	movlw	1
 14357  003E58  6E22               	movwf	___lldiv@counter^0,c
 14358  003E5A  EF35  F01F         	goto	l6038
 14359  003E5E                     l6036:
 14360  003E5E  90D8               	bcf	status,0,c
 14361  003E60  361A               	rlcf	___lldiv@divisor^0,f,c
 14362  003E62  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 14363  003E64  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 14364  003E66  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 14365  003E68  2A22               	incf	___lldiv@counter^0,f,c
 14366  003E6A                     l6038:
 14367  003E6A  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 14368  003E6C  EF3A  F01F         	goto	u3581
 14369  003E70  EF3C  F01F         	goto	u3580
 14370  003E74                     u3581:
 14371  003E74  EF2F  F01F         	goto	l6036
 14372  003E78                     u3580:
 14373  003E78                     l6040:
 14374  003E78  90D8               	bcf	status,0,c
 14375  003E7A  361E               	rlcf	___lldiv@quotient^0,f,c
 14376  003E7C  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 14377  003E7E  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 14378  003E80  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 14379  003E82  501A               	movf	___lldiv@divisor^0,w,c
 14380  003E84  5C16               	subwf	___lldiv@dividend^0,w,c
 14381  003E86  501B               	movf	(___lldiv@divisor+1)^0,w,c
 14382  003E88  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 14383  003E8A  501C               	movf	(___lldiv@divisor+2)^0,w,c
 14384  003E8C  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 14385  003E8E  501D               	movf	(___lldiv@divisor+3)^0,w,c
 14386  003E90  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 14387  003E92  A0D8               	btfss	status,0,c
 14388  003E94  EF4E  F01F         	goto	u3591
 14389  003E98  EF50  F01F         	goto	u3590
 14390  003E9C                     u3591:
 14391  003E9C  EF59  F01F         	goto	l6048
 14392  003EA0                     u3590:
 14393  003EA0  501A               	movf	___lldiv@divisor^0,w,c
 14394  003EA2  5E16               	subwf	___lldiv@dividend^0,f,c
 14395  003EA4  501B               	movf	(___lldiv@divisor+1)^0,w,c
 14396  003EA6  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 14397  003EA8  501C               	movf	(___lldiv@divisor+2)^0,w,c
 14398  003EAA  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 14399  003EAC  501D               	movf	(___lldiv@divisor+3)^0,w,c
 14400  003EAE  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 14401  003EB0  801E               	bsf	___lldiv@quotient^0,0,c
 14402  003EB2                     l6048:
 14403  003EB2  90D8               	bcf	status,0,c
 14404  003EB4  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 14405  003EB6  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 14406  003EB8  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 14407  003EBA  321A               	rrcf	___lldiv@divisor^0,f,c
 14408  003EBC  2E22               	decfsz	___lldiv@counter^0,f,c
 14409  003EBE  EF3C  F01F         	goto	l6040
 14410  003EC2                     l2136:
 14411  003EC2  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 14412  003EC8  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 14413  003ECE  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 14414  003ED4  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 14415  003EDA  0012               	return		;funcret
 14416  003EDC                     __end_of___lldiv:
 14417                           	opt callstack 0
 14418                           
 14419 ;; *************** function _NWK_Init *****************
 14420 ;; Defined at:
 14421 ;;		line 70 in file "nwk/nwk_src/nwk.c"
 14422 ;; Parameters:    Size  Location     Type
 14423 ;;		None
 14424 ;; Auto vars:     Size  Location     Type
 14425 ;;  i               1    5[COMRAM] unsigned char 
 14426 ;; Return value:  Size  Location     Type
 14427 ;;                  1    wreg      void 
 14428 ;; Registers used:
 14429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14430 ;; Tracked objects:
 14431 ;;		On entry : 0/0
 14432 ;;		On exit  : 0/0
 14433 ;;		Unchanged: 0/0
 14434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14439 ;;Total ram usage:        1 bytes
 14440 ;; Hardware stack levels used:    1
 14441 ;; Hardware stack levels required when called:    9
 14442 ;; This function calls:
 14443 ;;		_nwkDataReqInit
 14444 ;;		_nwkFrameInit
 14445 ;;		_nwkGroupInit
 14446 ;;		_nwkRouteInit
 14447 ;;		_nwkRxInit
 14448 ;;		_nwkTxInit
 14449 ;; This function is called by:
 14450 ;;		_SYS_Init
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           	psect	text99
 14455  00442C                     __ptext99:
 14456                           	opt callstack 0
 14457  00442C                     _NWK_Init:
 14458                           	opt callstack 20
 14459  00442C                     
 14460                           ;nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 14461  00442C  0E00               	movlw	0
 14462  00442E  0100               	movlb	0	; () banked
 14463  004430  6F64               	movwf	(_nwkIb+4)& (0+255),b
 14464                           
 14465                           ;nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 14466  004432  0E00               	movlw	0
 14467  004434  6F65               	movwf	(_nwkIb+5)& (0+255),b
 14468                           
 14469                           ;nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 14470  004436  0E00               	movlw	0
 14471  004438  6F61               	movwf	(_nwkIb+1)& (0+255),b
 14472  00443A  0E00               	movlw	0
 14473  00443C  6F60               	movwf	_nwkIb& (0+255),b
 14474                           
 14475                           ;nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 14476  00443E  0E00               	movlw	0
 14477  004440  6F87               	movwf	(_nwkIb+39)& (0+255),b
 14478  004442  0E00               	movlw	0
 14479  004444  6F86               	movwf	(_nwkIb+38)& (0+255),b
 14480                           
 14481                           ;nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 14482  004446  0E00               	movlw	0
 14483  004448  6E06               	movwf	NWK_Init@i^0,c
 14484  00444A                     l7380:
 14485                           
 14486                           ;nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 14487  00444A  5006               	movf	NWK_Init@i^0,w,c
 14488  00444C  0D02               	mullw	2
 14489  00444E  0E66               	movlw	low (_nwkIb+6)
 14490  004450  24F3               	addwf	243,w,c
 14491  004452  6ED9               	movwf	fsr2l,c
 14492  004454  0E00               	movlw	high (_nwkIb+6)
 14493  004456  20F4               	addwfc	prodh,w,c
 14494  004458  6EDA               	movwf	fsr2h,c
 14495  00445A  0E00               	movlw	0
 14496  00445C  6EDE               	movwf	postinc2,c
 14497  00445E  0E00               	movlw	0
 14498  004460  6EDD               	movwf	postdec2,c
 14499  004462  2A06               	incf	NWK_Init@i^0,f,c
 14500  004464  0E0F               	movlw	15
 14501  004466  6406               	cpfsgt	NWK_Init@i^0,c
 14502  004468  EF38  F022         	goto	u5371
 14503  00446C  EF3A  F022         	goto	u5370
 14504  004470                     u5371:
 14505  004470  EF25  F022         	goto	l7380
 14506  004474                     u5370:
 14507  004474                     
 14508                           ;nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 14509  004474  ECBC  F024         	call	_nwkTxInit	;wreg free
 14510  004478                     
 14511                           ;nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 14512  004478  ECCF  F022         	call	_nwkRxInit	;wreg free
 14513  00447C                     
 14514                           ;nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 14515  00447C  ECB3  F026         	call	_nwkFrameInit	;wreg free
 14516                           
 14517                           ;nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 14518  004480  EC7E  F028         	call	_nwkDataReqInit	;wreg free
 14519  004484                     
 14520                           ;nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 14521  004484  ECFB  F022         	call	_nwkRouteInit	;wreg free
 14522  004488                     
 14523                           ;nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 14524  004488  EC3E  F026         	call	_nwkGroupInit	;wreg free
 14525  00448C  0012               	return		;funcret
 14526  00448E                     __end_of_NWK_Init:
 14527                           	opt callstack 0
 14528                           
 14529 ;; *************** function _nwkTxInit *****************
 14530 ;; Defined at:
 14531 ;;		line 94 in file "nwk/nwk_src/nwkTx.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;		None
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;		None
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  1    wreg      void 
 14538 ;; Registers used:
 14539 ;;		wreg, status,2, status,0
 14540 ;; Tracked objects:
 14541 ;;		On entry : 0/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14549 ;;Total ram usage:        0 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:    7
 14552 ;; This function calls:
 14553 ;;		Nothing
 14554 ;; This function is called by:
 14555 ;;		_NWK_Init
 14556 ;; This function uses a non-reentrant model
 14557 ;;
 14558                           
 14559                           	psect	text100
 14560  004978                     __ptext100:
 14561                           	opt callstack 0
 14562  004978                     _nwkTxInit:
 14563                           	opt callstack 21
 14564  004978                     
 14565                           ;nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 14566  004978  0E00               	movlw	0
 14567  00497A  6E3D               	movwf	_nwkTxPhyActiveFrame^0,c
 14568  00497C  0E00               	movlw	0
 14569  00497E  6E3E               	movwf	(_nwkTxPhyActiveFrame+1)^0,c
 14570  004980                     
 14571                           ;nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 14572  004980  0EC8               	movlw	200
 14573  004982  0100               	movlb	0	; () banked
 14574  004984  6FCA               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 14575  004986  0E00               	movlw	0
 14576  004988  6FCB               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 14577  00498A  0E00               	movlw	0
 14578  00498C  6FCC               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 14579  00498E  0E00               	movlw	0
 14580  004990  6FCD               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 14581  004992                     
 14582                           ; BSR set to: 0
 14583                           ;nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 14584  004992  0E00               	movlw	0
 14585  004994  6FCE               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 14586                           
 14587                           ;nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 14588  004996  0E12               	movlw	low _nwkTxAckWaitTimerHandler
 14589  004998  6FCF               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 14590  00499A  0E3C               	movlw	high _nwkTxAckWaitTimerHandler
 14591  00499C  6FD0               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 14592  00499E                     
 14593                           ; BSR set to: 0
 14594                           ;nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 14595  00499E  0E14               	movlw	20
 14596  0049A0  6FBD               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 14597  0049A2  0E00               	movlw	0
 14598  0049A4  6FBE               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 14599  0049A6  0E00               	movlw	0
 14600  0049A8  6FBF               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 14601  0049AA  0E00               	movlw	0
 14602  0049AC  6FC0               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 14603  0049AE                     
 14604                           ; BSR set to: 0
 14605                           ;nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 14606  0049AE  0E00               	movlw	0
 14607  0049B0  6FC1               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 14608                           
 14609                           ;nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 14610  0049B2  0ECC               	movlw	low _nwkTxDelayTimerHandler
 14611  0049B4  6FC2               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 14612  0049B6  0E3C               	movlw	high _nwkTxDelayTimerHandler
 14613  0049B8  6FC3               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 14614  0049BA                     
 14615                           ; BSR set to: 0
 14616  0049BA  0012               	return		;funcret
 14617  0049BC                     __end_of_nwkTxInit:
 14618                           	opt callstack 0
 14619                           
 14620 ;; *************** function _nwkRxInit *****************
 14621 ;; Defined at:
 14622 ;;		line 102 in file "nwk/nwk_src/nwkRx.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;		None
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;  i               1    4[COMRAM] unsigned char 
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  1    wreg      void 
 14629 ;; Registers used:
 14630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14631 ;; Tracked objects:
 14632 ;;		On entry : 0/0
 14633 ;;		On exit  : 0/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14640 ;;Total ram usage:        1 bytes
 14641 ;; Hardware stack levels used:    1
 14642 ;; Hardware stack levels required when called:    8
 14643 ;; This function calls:
 14644 ;;		_NWK_OpenEndpoint
 14645 ;; This function is called by:
 14646 ;;		_NWK_Init
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           	psect	text101
 14651  00459E                     __ptext101:
 14652                           	opt callstack 0
 14653  00459E                     _nwkRxInit:
 14654                           	opt callstack 20
 14655  00459E                     
 14656                           ;nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 14657  00459E  0E00               	movlw	0
 14658  0045A0  6E05               	movwf	nwkRxInit@i^0,c
 14659  0045A2                     l7028:
 14660                           
 14661                           ;nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 14662  0045A2  5005               	movf	nwkRxInit@i^0,w,c
 14663  0045A4  0D05               	mullw	5
 14664  0045A6  0E8A               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 14665  0045A8  24F3               	addwf	243,w,c
 14666  0045AA  6ED9               	movwf	fsr2l,c
 14667  0045AC  0E01               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 14668  0045AE  20F4               	addwfc	prodh,w,c
 14669  0045B0  6EDA               	movwf	fsr2h,c
 14670  0045B2  0E00               	movlw	0
 14671  0045B4  6EDF               	movwf	indf2,c
 14672  0045B6  2A05               	incf	nwkRxInit@i^0,f,c
 14673  0045B8  0E09               	movlw	9
 14674  0045BA  6405               	cpfsgt	nwkRxInit@i^0,c
 14675  0045BC  EFE2  F022         	goto	u5021
 14676  0045C0  EFE4  F022         	goto	u5020
 14677  0045C4                     u5021:
 14678  0045C4  EFD1  F022         	goto	l7028
 14679  0045C8                     u5020:
 14680  0045C8                     
 14681                           ;nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 14682  0045C8  0E88               	movlw	136
 14683  0045CA  0100               	movlb	0	; () banked
 14684  0045CC  6FD7               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 14685  0045CE  0E13               	movlw	19
 14686  0045D0  6FD8               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 14687  0045D2  0E00               	movlw	0
 14688  0045D4  6FD9               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 14689  0045D6  0E00               	movlw	0
 14690  0045D8  6FDA               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 14691                           
 14692                           ;nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE
      +                          ;
 14693  0045DA  0E00               	movlw	0
 14694  0045DC  6FDB               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 14695  0045DE                     
 14696                           ; BSR set to: 0
 14697                           ;nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateReject
      +                          ionTimerHandler;
 14698  0045DE  0EEC               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 14699  0045E0  6FDC               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 14700  0045E2  0E42               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 14701  0045E4  6FDD               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 14702  0045E6                     
 14703                           ; BSR set to: 0
 14704                           ;nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 14705  0045E6  0E24               	movlw	low _nwkRxServiceDataInd
 14706  0045E8  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 14707  0045EA  0E40               	movlw	high _nwkRxServiceDataInd
 14708  0045EC  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 14709  0045EE  0E00               	movlw	0
 14710  0045F0  EC73  F027         	call	_NWK_OpenEndpoint
 14711  0045F4  0012               	return		;funcret
 14712  0045F6                     __end_of_nwkRxInit:
 14713                           	opt callstack 0
 14714                           
 14715 ;; *************** function _NWK_OpenEndpoint *****************
 14716 ;; Defined at:
 14717 ;;		line 127 in file "nwk/nwk_src/nwk.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;  id              1    wreg     unsigned char 
 14720 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 14721 ;;		 -> appDataInd(1), nwkRxServiceDataInd(1), 
 14722 ;; Auto vars:     Size  Location     Type
 14723 ;;  id              1    3[COMRAM] unsigned char 
 14724 ;; Return value:  Size  Location     Type
 14725 ;;                  1    wreg      void 
 14726 ;; Registers used:
 14727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14728 ;; Tracked objects:
 14729 ;;		On entry : 0/0
 14730 ;;		On exit  : 0/0
 14731 ;;		Unchanged: 0/0
 14732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14737 ;;Total ram usage:        3 bytes
 14738 ;; Hardware stack levels used:    1
 14739 ;; Hardware stack levels required when called:    7
 14740 ;; This function calls:
 14741 ;;		Nothing
 14742 ;; This function is called by:
 14743 ;;		_nwkRxInit
 14744 ;;		_test_init
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text102
 14749  004EE6                     __ptext102:
 14750                           	opt callstack 0
 14751  004EE6                     _NWK_OpenEndpoint:
 14752                           	opt callstack 22
 14753                           
 14754                           ;incstack = 0
 14755                           ;NWK_OpenEndpoint@id stored from wreg
 14756  004EE6  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 14757  004EE8                     
 14758                           ;nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataInd_
      +                          t *ind));nwk/nwk_src/nwk.c: 128: {;nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id] = handle
      +                          r;
 14759  004EE8  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 14760  004EEA  0D02               	mullw	2
 14761  004EEC  0E66               	movlw	low (_nwkIb+6)
 14762  004EEE  24F3               	addwf	243,w,c
 14763  004EF0  6ED9               	movwf	fsr2l,c
 14764  004EF2  0E00               	movlw	high (_nwkIb+6)
 14765  004EF4  20F4               	addwfc	prodh,w,c
 14766  004EF6  6EDA               	movwf	fsr2h,c
 14767  004EF8  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 14768  004EFE  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 14769  004F04  0012               	return		;funcret
 14770  004F06                     __end_of_NWK_OpenEndpoint:
 14771                           	opt callstack 0
 14772                           
 14773 ;; *************** function _nwkRouteInit *****************
 14774 ;; Defined at:
 14775 ;;		line 79 in file "nwk/nwk_src/nwkRoute.c"
 14776 ;; Parameters:    Size  Location     Type
 14777 ;;		None
 14778 ;; Auto vars:     Size  Location     Type
 14779 ;;  i               1    1[COMRAM] unsigned char 
 14780 ;; Return value:  Size  Location     Type
 14781 ;;                  1    wreg      void 
 14782 ;; Registers used:
 14783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14784 ;; Tracked objects:
 14785 ;;		On entry : 0/0
 14786 ;;		On exit  : 0/0
 14787 ;;		Unchanged: 0/0
 14788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14793 ;;Total ram usage:        1 bytes
 14794 ;; Hardware stack levels used:    1
 14795 ;; Hardware stack levels required when called:    7
 14796 ;; This function calls:
 14797 ;;		Nothing
 14798 ;; This function is called by:
 14799 ;;		_NWK_Init
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803                           	psect	text103
 14804  0045F6                     __ptext103:
 14805                           	opt callstack 0
 14806  0045F6                     _nwkRouteInit:
 14807                           	opt callstack 21
 14808  0045F6                     
 14809                           ;nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 14810  0045F6  0E00               	movlw	0
 14811  0045F8  6E02               	movwf	nwkRouteInit@i^0,c
 14812  0045FA                     l7060:
 14813                           
 14814                           ;nwk/nwk_src/nwkRoute.c: 82:   {;nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].dstAdd
      +                          r = 0xffff;
 14815  0045FA  5002               	movf	nwkRouteInit@i^0,w,c
 14816  0045FC  0D07               	mullw	7
 14817  0045FE  0E41               	movlw	low (_nwkRouteTable+1)
 14818  004600  24F3               	addwf	243,w,c
 14819  004602  6ED9               	movwf	fsr2l,c
 14820  004604  0E01               	movlw	high (_nwkRouteTable+1)
 14821  004606  20F4               	addwfc	prodh,w,c
 14822  004608  6EDA               	movwf	fsr2h,c
 14823  00460A  0EFF               	movlw	255
 14824  00460C  6EDE               	movwf	postinc2,c
 14825  00460E  0EFF               	movlw	255
 14826  004610  6EDD               	movwf	postdec2,c
 14827                           
 14828                           ;nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 14829  004612  5002               	movf	nwkRouteInit@i^0,w,c
 14830  004614  0D07               	mullw	7
 14831  004616  0E40               	movlw	low _nwkRouteTable
 14832  004618  24F3               	addwf	243,w,c
 14833  00461A  6ED9               	movwf	fsr2l,c
 14834  00461C  0E01               	movlw	high _nwkRouteTable
 14835  00461E  20F4               	addwfc	prodh,w,c
 14836  004620  6EDA               	movwf	fsr2h,c
 14837  004622  0101               	movlb	1	; () banked
 14838  004624  90DF               	bcf	indf2,0,c
 14839                           
 14840                           ;nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 14841  004626  5002               	movf	nwkRouteInit@i^0,w,c
 14842  004628  0D07               	mullw	7
 14843  00462A  0E45               	movlw	low (_nwkRouteTable+5)
 14844  00462C  24F3               	addwf	243,w,c
 14845  00462E  6ED9               	movwf	fsr2l,c
 14846  004630  0E01               	movlw	high (_nwkRouteTable+5)
 14847  004632  20F4               	addwfc	prodh,w,c
 14848  004634  6EDA               	movwf	fsr2h,c
 14849  004636  0E00               	movlw	0
 14850  004638  6EDF               	movwf	indf2,c
 14851  00463A                     
 14852                           ; BSR set to: 1
 14853                           ;nwk/nwk_src/nwkRoute.c: 86:   }
 14854  00463A  2A02               	incf	nwkRouteInit@i^0,f,c
 14855  00463C                     
 14856                           ; BSR set to: 1
 14857  00463C  0E09               	movlw	9
 14858  00463E  6402               	cpfsgt	nwkRouteInit@i^0,c
 14859  004640  EF24  F023         	goto	u5041
 14860  004644  EF26  F023         	goto	u5040
 14861  004648                     u5041:
 14862  004648  EFFD  F022         	goto	l7060
 14863  00464C                     u5040:
 14864  00464C                     
 14865                           ; BSR set to: 1
 14866  00464C  0012               	return		;funcret
 14867  00464E                     __end_of_nwkRouteInit:
 14868                           	opt callstack 0
 14869                           
 14870 ;; *************** function _nwkGroupInit *****************
 14871 ;; Defined at:
 14872 ;;		line 70 in file "nwk/nwk_src/nwkGroup.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;		None
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;  i               1    1[COMRAM] unsigned char 
 14877 ;; Return value:  Size  Location     Type
 14878 ;;                  1    wreg      void 
 14879 ;; Registers used:
 14880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14881 ;; Tracked objects:
 14882 ;;		On entry : 0/0
 14883 ;;		On exit  : 0/0
 14884 ;;		Unchanged: 0/0
 14885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14890 ;;Total ram usage:        1 bytes
 14891 ;; Hardware stack levels used:    1
 14892 ;; Hardware stack levels required when called:    7
 14893 ;; This function calls:
 14894 ;;		Nothing
 14895 ;; This function is called by:
 14896 ;;		_NWK_Init
 14897 ;; This function uses a non-reentrant model
 14898 ;;
 14899                           
 14900                           	psect	text104
 14901  004C7C                     __ptext104:
 14902                           	opt callstack 0
 14903  004C7C                     _nwkGroupInit:
 14904                           	opt callstack 21
 14905  004C7C                     
 14906                           ;nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 14907  004C7C  0E00               	movlw	0
 14908  004C7E  6E02               	movwf	nwkGroupInit@i^0,c
 14909  004C80                     l7072:
 14910                           
 14911                           ;nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 14912  004C80  5002               	movf	nwkGroupInit@i^0,w,c
 14913  004C82  0D02               	mullw	2
 14914  004C84  0E88               	movlw	low _nwkGroups
 14915  004C86  24F3               	addwf	243,w,c
 14916  004C88  6ED9               	movwf	fsr2l,c
 14917  004C8A  0E00               	movlw	high _nwkGroups
 14918  004C8C  20F4               	addwfc	prodh,w,c
 14919  004C8E  6EDA               	movwf	fsr2h,c
 14920  004C90  0EFF               	movlw	255
 14921  004C92  6EDE               	movwf	postinc2,c
 14922  004C94  0EFF               	movlw	255
 14923  004C96  6EDD               	movwf	postdec2,c
 14924  004C98  2A02               	incf	nwkGroupInit@i^0,f,c
 14925  004C9A  0E09               	movlw	9
 14926  004C9C  6402               	cpfsgt	nwkGroupInit@i^0,c
 14927  004C9E  EF53  F026         	goto	u5051
 14928  004CA2  EF55  F026         	goto	u5050
 14929  004CA6                     u5051:
 14930  004CA6  EF40  F026         	goto	l7072
 14931  004CAA                     u5050:
 14932  004CAA  0012               	return		;funcret
 14933  004CAC                     __end_of_nwkGroupInit:
 14934                           	opt callstack 0
 14935                           
 14936 ;; *************** function _nwkFrameInit *****************
 14937 ;; Defined at:
 14938 ;;		line 70 in file "nwk/nwk_src/nwkFrame.c"
 14939 ;; Parameters:    Size  Location     Type
 14940 ;;		None
 14941 ;; Auto vars:     Size  Location     Type
 14942 ;;  i               1    1[COMRAM] unsigned char 
 14943 ;; Return value:  Size  Location     Type
 14944 ;;                  1    wreg      void 
 14945 ;; Registers used:
 14946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14947 ;; Tracked objects:
 14948 ;;		On entry : 0/0
 14949 ;;		On exit  : 0/0
 14950 ;;		Unchanged: 0/0
 14951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14956 ;;Total ram usage:        1 bytes
 14957 ;; Hardware stack levels used:    1
 14958 ;; Hardware stack levels required when called:    7
 14959 ;; This function calls:
 14960 ;;		Nothing
 14961 ;; This function is called by:
 14962 ;;		_NWK_Init
 14963 ;; This function uses a non-reentrant model
 14964 ;;
 14965                           
 14966                           	psect	text105
 14967  004D66                     __ptext105:
 14968                           	opt callstack 0
 14969  004D66                     _nwkFrameInit:
 14970                           	opt callstack 21
 14971  004D66                     
 14972                           ;nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 14973  004D66  0E00               	movlw	0
 14974  004D68  6E02               	movwf	nwkFrameInit@i^0,c
 14975  004D6A                     l7046:
 14976                           
 14977                           ;nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 14978  004D6A  5002               	movf	nwkFrameInit@i^0,w,c
 14979  004D6C  0D89               	mullw	137
 14980  004D6E  0EBD               	movlw	low _nwkFrameFrames
 14981  004D70  24F3               	addwf	243,w,c
 14982  004D72  6ED9               	movwf	fsr2l,c
 14983  004D74  0E03               	movlw	high _nwkFrameFrames
 14984  004D76  20F4               	addwfc	prodh,w,c
 14985  004D78  6EDA               	movwf	fsr2h,c
 14986  004D7A  0E00               	movlw	0
 14987  004D7C  6EDF               	movwf	indf2,c
 14988  004D7E  2A02               	incf	nwkFrameInit@i^0,f,c
 14989  004D80  0E04               	movlw	4
 14990  004D82  6402               	cpfsgt	nwkFrameInit@i^0,c
 14991  004D84  EFC6  F026         	goto	u5031
 14992  004D88  EFC8  F026         	goto	u5030
 14993  004D8C                     u5031:
 14994  004D8C  EFB5  F026         	goto	l7046
 14995  004D90                     u5030:
 14996  004D90  0012               	return		;funcret
 14997  004D92                     __end_of_nwkFrameInit:
 14998                           	opt callstack 0
 14999                           
 15000 ;; *************** function _nwkDataReqInit *****************
 15001 ;; Defined at:
 15002 ;;		line 78 in file "nwk/nwk_src/nwkDataReq.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;		None
 15005 ;; Auto vars:     Size  Location     Type
 15006 ;;		None
 15007 ;; Return value:  Size  Location     Type
 15008 ;;                  1    wreg      void 
 15009 ;; Registers used:
 15010 ;;		wreg, status,2, status,0
 15011 ;; Tracked objects:
 15012 ;;		On entry : 0/0
 15013 ;;		On exit  : 0/0
 15014 ;;		Unchanged: 0/0
 15015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15020 ;;Total ram usage:        0 bytes
 15021 ;; Hardware stack levels used:    1
 15022 ;; Hardware stack levels required when called:    7
 15023 ;; This function calls:
 15024 ;;		Nothing
 15025 ;; This function is called by:
 15026 ;;		_NWK_Init
 15027 ;; This function uses a non-reentrant model
 15028 ;;
 15029                           
 15030                           	psect	text106
 15031  0050FC                     __ptext106:
 15032                           	opt callstack 0
 15033  0050FC                     _nwkDataReqInit:
 15034                           	opt callstack 21
 15035  0050FC                     
 15036                           ;nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 15037  0050FC  0E00               	movlw	0
 15038  0050FE  6E3F               	movwf	_nwkDataReqQueue^0,c
 15039  005100  0E00               	movlw	0
 15040  005102  6E40               	movwf	(_nwkDataReqQueue+1)^0,c
 15041  005104  0012               	return		;funcret
 15042  005106                     __end_of_nwkDataReqInit:
 15043                           	opt callstack 0
 15044                           
 15045 ;; *************** function _SYSTEM_Initialize *****************
 15046 ;; Defined at:
 15047 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15048 ;; Parameters:    Size  Location     Type
 15049 ;;		None
 15050 ;; Auto vars:     Size  Location     Type
 15051 ;;		None
 15052 ;; Return value:  Size  Location     Type
 15053 ;;                  1    wreg      void 
 15054 ;; Registers used:
 15055 ;;		wreg, status,2, status,0, cstack
 15056 ;; Tracked objects:
 15057 ;;		On entry : 0/0
 15058 ;;		On exit  : 0/0
 15059 ;;		Unchanged: 0/0
 15060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15065 ;;Total ram usage:        0 bytes
 15066 ;; Hardware stack levels used:    1
 15067 ;; Hardware stack levels required when called:    9
 15068 ;; This function calls:
 15069 ;;		_CRC_Initialize
 15070 ;;		_INTERRUPT_Initialize
 15071 ;;		_OSCILLATOR_Initialize
 15072 ;;		_PIN_MANAGER_Initialize
 15073 ;;		_PMD_Initialize
 15074 ;;		_SPI1_Initialize
 15075 ;;		_TMR0_Initialize
 15076 ;;		_UART1_Initialize
 15077 ;; This function is called by:
 15078 ;;		_main
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           	psect	text107
 15083  004EA4                     __ptext107:
 15084                           	opt callstack 0
 15085  004EA4                     _SYSTEM_Initialize:
 15086                           	opt callstack 21
 15087  004EA4                     
 15088                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 15089  004EA4  EC1F  F025         	call	_INTERRUPT_Initialize	;wreg free
 15090                           
 15091                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 15092  004EA8  EC40  F027         	call	_PMD_Initialize	;wreg free
 15093                           
 15094                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 15095  004EAC  EC36  F021         	call	_PIN_MANAGER_Initialize	;wreg free
 15096                           
 15097                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 15098  004EB0  ECF1  F027         	call	_OSCILLATOR_Initialize	;wreg free
 15099  004EB4                     
 15100                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 15101  004EB4  ECA2  F022         	call	_CRC_Initialize	;wreg free
 15102  004EB8                     
 15103                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 15104  004EB8  EC7D  F025         	call	_TMR0_Initialize	;wreg free
 15105  004EBC                     
 15106                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 15107  004EBC  EC6E  F01F         	call	_UART1_Initialize	;wreg free
 15108  004EC0                     
 15109                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 15110  004EC0  ECCC  F027         	call	_SPI1_Initialize	;wreg free
 15111  004EC4  0012               	return		;funcret
 15112  004EC6                     __end_of_SYSTEM_Initialize:
 15113                           	opt callstack 0
 15114                           
 15115 ;; *************** function _UART1_Initialize *****************
 15116 ;; Defined at:
 15117 ;;		line 87 in file "mcc_generated_files/uart1.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;		None
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;		None
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  1    wreg      void 
 15124 ;; Registers used:
 15125 ;;		wreg, status,2, status,0, cstack
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15135 ;;Total ram usage:        0 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; Hardware stack levels required when called:    8
 15138 ;; This function calls:
 15139 ;;		_UART1_SetErrorHandler
 15140 ;;		_UART1_SetFramingErrorHandler
 15141 ;;		_UART1_SetOverrunErrorHandler
 15142 ;;		_UART1_SetRxInterruptHandler
 15143 ;;		_UART1_SetTxInterruptHandler
 15144 ;; This function is called by:
 15145 ;;		_SYSTEM_Initialize
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149                           	psect	text108
 15150  003EDC                     __ptext108:
 15151                           	opt callstack 0
 15152  003EDC                     _UART1_Initialize:
 15153                           	opt callstack 21
 15154  003EDC                     
 15155                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 15156  003EDC  0139               	movlb	57	; () banked
 15157  003EDE  9793               	bcf	147,3,b	;volatile
 15158  003EE0                     
 15159                           ; BSR set to: 57
 15160                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 15161  003EE0  0ED2               	movlw	low _UART1_Receive_ISR
 15162  003EE2  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 15163  003EE4  0E39               	movlw	high _UART1_Receive_ISR
 15164  003EE6  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 15165  003EE8  EC4B  F028         	call	_UART1_SetRxInterruptHandler	;wreg free
 15166  003EEC                     
 15167                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 15168  003EEC  0139               	movlb	57	; () banked
 15169  003EEE  9993               	bcf	147,4,b	;volatile
 15170                           
 15171                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 15172  003EF0  0E1E               	movlw	low _UART1_Transmit_ISR
 15173  003EF2  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 15174  003EF4  0E48               	movlw	high _UART1_Transmit_ISR
 15175  003EF6  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 15176  003EF8  EC44  F028         	call	_UART1_SetTxInterruptHandler	;wreg free
 15177  003EFC                     
 15178                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 15179  003EFC  0E00               	movlw	0
 15180  003EFE  013D               	movlb	61	; () banked
 15181  003F00  6FEC               	movwf	236,b	;volatile
 15182  003F02                     
 15183                           ; BSR set to: 61
 15184                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 15185  003F02  0E00               	movlw	0
 15186  003F04  6FED               	movwf	237,b	;volatile
 15187  003F06                     
 15188                           ; BSR set to: 61
 15189                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 15190  003F06  0E00               	movlw	0
 15191  003F08  6FEE               	movwf	238,b	;volatile
 15192  003F0A                     
 15193                           ; BSR set to: 61
 15194                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 15195  003F0A  0E00               	movlw	0
 15196  003F0C  6FEF               	movwf	239,b	;volatile
 15197  003F0E                     
 15198                           ; BSR set to: 61
 15199                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 15200  003F0E  0E00               	movlw	0
 15201  003F10  6FF0               	movwf	240,b	;volatile
 15202  003F12                     
 15203                           ; BSR set to: 61
 15204                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 15205  003F12  0E00               	movlw	0
 15206  003F14  6FF1               	movwf	241,b	;volatile
 15207  003F16                     
 15208                           ; BSR set to: 61
 15209                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB3;
 15210  003F16  0EB3               	movlw	179
 15211  003F18  6FF2               	movwf	242,b	;volatile
 15212  003F1A                     
 15213                           ; BSR set to: 61
 15214                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 15215  003F1A  0E80               	movlw	128
 15216  003F1C  6FF3               	movwf	243,b	;volatile
 15217  003F1E                     
 15218                           ; BSR set to: 61
 15219                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x80;
 15220  003F1E  0E80               	movlw	128
 15221  003F20  6FF4               	movwf	244,b	;volatile
 15222  003F22                     
 15223                           ; BSR set to: 61
 15224                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 15225  003F22  0E8A               	movlw	138
 15226  003F24  6FF5               	movwf	245,b	;volatile
 15227  003F26                     
 15228                           ; BSR set to: 61
 15229                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 15230  003F26  0E00               	movlw	0
 15231  003F28  6FF6               	movwf	246,b	;volatile
 15232  003F2A                     
 15233                           ; BSR set to: 61
 15234                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 15235  003F2A  0E00               	movlw	0
 15236  003F2C  6FF7               	movwf	247,b	;volatile
 15237  003F2E                     
 15238                           ; BSR set to: 61
 15239                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 15240  003F2E  0E00               	movlw	0
 15241  003F30  6FF8               	movwf	248,b	;volatile
 15242  003F32                     
 15243                           ; BSR set to: 61
 15244                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 15245  003F32  0E00               	movlw	0
 15246  003F34  6FF9               	movwf	249,b	;volatile
 15247  003F36                     
 15248                           ; BSR set to: 61
 15249                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 15250  003F36  0E00               	movlw	0
 15251  003F38  6FFA               	movwf	250,b	;volatile
 15252  003F3A                     
 15253                           ; BSR set to: 61
 15254                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 15255  003F3A  0E38               	movlw	low _UART1_DefaultFramingErrorHandler
 15256  003F3C  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 15257  003F3E  0E51               	movlw	high _UART1_DefaultFramingErrorHandler
 15258  003F40  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 15259  003F42  EC59  F028         	call	_UART1_SetFramingErrorHandler	;wreg free
 15260  003F46                     
 15261                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 15262  003F46  0E36               	movlw	low _UART1_DefaultOverrunErrorHandler
 15263  003F48  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 15264  003F4A  0E51               	movlw	high _UART1_DefaultOverrunErrorHandler
 15265  003F4C  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 15266  003F4E  EC52  F028         	call	_UART1_SetOverrunErrorHandler	;wreg free
 15267  003F52                     
 15268                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 15269  003F52  0E20               	movlw	low _UART1_DefaultErrorHandler
 15270  003F54  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 15271  003F56  0E51               	movlw	high _UART1_DefaultErrorHandler
 15272  003F58  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 15273  003F5A  EC60  F028         	call	_UART1_SetErrorHandler	;wreg free
 15274                           
 15275                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 15276  003F5E  0E00               	movlw	0
 15277  003F60  0100               	movlb	0	; () banked
 15278  003F62  6FA1               	movwf	_uart1RxLastError& (0+255),b	;volatile
 15279                           
 15280                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 15281  003F64  0E00               	movlw	0
 15282  003F66  6E48               	movwf	_uart1TxHead^0,c	;volatile
 15283                           
 15284                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 15285  003F68  0E00               	movlw	0
 15286  003F6A  6E47               	movwf	_uart1TxTail^0,c	;volatile
 15287                           
 15288                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 15289  003F6C  0E40               	movlw	64
 15290  003F6E  6FF5               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 15291                           
 15292                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 15293  003F70  0E00               	movlw	0
 15294  003F72  6E46               	movwf	_uart1RxHead^0,c	;volatile
 15295                           
 15296                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 15297  003F74  0E00               	movlw	0
 15298  003F76  6E45               	movwf	_uart1RxTail^0,c	;volatile
 15299                           
 15300                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 15301  003F78  0E00               	movlw	0
 15302  003F7A  6E44               	movwf	_uart1RxCount^0,c	;volatile
 15303  003F7C                     
 15304                           ; BSR set to: 0
 15305                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 15306  003F7C  0139               	movlb	57	; () banked
 15307  003F7E  8793               	bsf	147,3,b	;volatile
 15308  003F80                     
 15309                           ; BSR set to: 57
 15310  003F80  0012               	return		;funcret
 15311  003F82                     __end_of_UART1_Initialize:
 15312                           	opt callstack 0
 15313                           
 15314 ;; *************** function _UART1_SetTxInterruptHandler *****************
 15315 ;; Defined at:
 15316 ;;		line 333 in file "mcc_generated_files/uart1.c"
 15317 ;; Parameters:    Size  Location     Type
 15318 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 15319 ;;		 -> UART1_Transmit_ISR(1), 
 15320 ;; Auto vars:     Size  Location     Type
 15321 ;;		None
 15322 ;; Return value:  Size  Location     Type
 15323 ;;                  1    wreg      void 
 15324 ;; Registers used:
 15325 ;;		wreg, status,2, status,0
 15326 ;; Tracked objects:
 15327 ;;		On entry : 0/0
 15328 ;;		On exit  : 0/0
 15329 ;;		Unchanged: 0/0
 15330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15335 ;;Total ram usage:        2 bytes
 15336 ;; Hardware stack levels used:    1
 15337 ;; Hardware stack levels required when called:    7
 15338 ;; This function calls:
 15339 ;;		Nothing
 15340 ;; This function is called by:
 15341 ;;		_UART1_Initialize
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345                           	psect	text109
 15346  005088                     __ptext109:
 15347                           	opt callstack 0
 15348  005088                     _UART1_SetTxInterruptHandler:
 15349                           	opt callstack 21
 15350  005088                     
 15351                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 15352  005088  0060  F008  F0F1   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 15353  00508E  0060  F00C  F0F2   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 15354  005094  0012               	return		;funcret
 15355  005096                     __end_of_UART1_SetTxInterruptHandler:
 15356                           	opt callstack 0
 15357                           
 15358 ;; *************** function _UART1_SetRxInterruptHandler *****************
 15359 ;; Defined at:
 15360 ;;		line 329 in file "mcc_generated_files/uart1.c"
 15361 ;; Parameters:    Size  Location     Type
 15362 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 15363 ;;		 -> UART1_Receive_ISR(1), 
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;		None
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  1    wreg      void 
 15368 ;; Registers used:
 15369 ;;		wreg, status,2, status,0
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15379 ;;Total ram usage:        2 bytes
 15380 ;; Hardware stack levels used:    1
 15381 ;; Hardware stack levels required when called:    7
 15382 ;; This function calls:
 15383 ;;		Nothing
 15384 ;; This function is called by:
 15385 ;;		_UART1_Initialize
 15386 ;; This function uses a non-reentrant model
 15387 ;;
 15388                           
 15389                           	psect	text110
 15390  005096                     __ptext110:
 15391                           	opt callstack 0
 15392  005096                     _UART1_SetRxInterruptHandler:
 15393                           	opt callstack 21
 15394  005096                     
 15395                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 15396  005096  0060  F008  F0F3   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 15397  00509C  0060  F00C  F0F4   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 15398  0050A2  0012               	return		;funcret
 15399  0050A4                     __end_of_UART1_SetRxInterruptHandler:
 15400                           	opt callstack 0
 15401                           
 15402 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 15403 ;; Defined at:
 15404 ;;		line 319 in file "mcc_generated_files/uart1.c"
 15405 ;; Parameters:    Size  Location     Type
 15406 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 15407 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 15408 ;; Auto vars:     Size  Location     Type
 15409 ;;		None
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  1    wreg      void 
 15412 ;; Registers used:
 15413 ;;		wreg, status,2, status,0
 15414 ;; Tracked objects:
 15415 ;;		On entry : 0/0
 15416 ;;		On exit  : 0/0
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15423 ;;Total ram usage:        2 bytes
 15424 ;; Hardware stack levels used:    1
 15425 ;; Hardware stack levels required when called:    7
 15426 ;; This function calls:
 15427 ;;		Nothing
 15428 ;; This function is called by:
 15429 ;;		_UART1_Initialize
 15430 ;; This function uses a non-reentrant model
 15431 ;;
 15432                           
 15433                           	psect	text111
 15434  0050A4                     __ptext111:
 15435                           	opt callstack 0
 15436  0050A4                     _UART1_SetOverrunErrorHandler:
 15437                           	opt callstack 21
 15438  0050A4                     
 15439                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 15440  0050A4  0060  F008  F0EB   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 15441  0050AA  0060  F00C  F0EC   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 15442  0050B0  0012               	return		;funcret
 15443  0050B2                     __end_of_UART1_SetOverrunErrorHandler:
 15444                           	opt callstack 0
 15445                           
 15446 ;; *************** function _UART1_SetFramingErrorHandler *****************
 15447 ;; Defined at:
 15448 ;;		line 315 in file "mcc_generated_files/uart1.c"
 15449 ;; Parameters:    Size  Location     Type
 15450 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 15451 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 15452 ;; Auto vars:     Size  Location     Type
 15453 ;;		None
 15454 ;; Return value:  Size  Location     Type
 15455 ;;                  1    wreg      void 
 15456 ;; Registers used:
 15457 ;;		wreg, status,2, status,0
 15458 ;; Tracked objects:
 15459 ;;		On entry : 0/0
 15460 ;;		On exit  : 0/0
 15461 ;;		Unchanged: 0/0
 15462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15467 ;;Total ram usage:        2 bytes
 15468 ;; Hardware stack levels used:    1
 15469 ;; Hardware stack levels required when called:    7
 15470 ;; This function calls:
 15471 ;;		Nothing
 15472 ;; This function is called by:
 15473 ;;		_UART1_Initialize
 15474 ;; This function uses a non-reentrant model
 15475 ;;
 15476                           
 15477                           	psect	text112
 15478  0050B2                     __ptext112:
 15479                           	opt callstack 0
 15480  0050B2                     _UART1_SetFramingErrorHandler:
 15481                           	opt callstack 21
 15482  0050B2                     
 15483                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 15484  0050B2  0060  F008  F0ED   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 15485  0050B8  0060  F00C  F0EE   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 15486  0050BE  0012               	return		;funcret
 15487  0050C0                     __end_of_UART1_SetFramingErrorHandler:
 15488                           	opt callstack 0
 15489                           
 15490 ;; *************** function _UART1_SetErrorHandler *****************
 15491 ;; Defined at:
 15492 ;;		line 323 in file "mcc_generated_files/uart1.c"
 15493 ;; Parameters:    Size  Location     Type
 15494 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 15495 ;;		 -> UART1_DefaultErrorHandler(1), 
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;                  1    wreg      void 
 15500 ;; Registers used:
 15501 ;;		wreg, status,2, status,0
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15511 ;;Total ram usage:        2 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; Hardware stack levels required when called:    7
 15514 ;; This function calls:
 15515 ;;		Nothing
 15516 ;; This function is called by:
 15517 ;;		_UART1_Initialize
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           	psect	text113
 15522  0050C0                     __ptext113:
 15523                           	opt callstack 0
 15524  0050C0                     _UART1_SetErrorHandler:
 15525                           	opt callstack 21
 15526  0050C0                     
 15527                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 15528  0050C0  0060  F008  F0E9   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 15529  0050C6  0060  F00C  F0EA   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 15530  0050CC  0012               	return		;funcret
 15531  0050CE                     __end_of_UART1_SetErrorHandler:
 15532                           	opt callstack 0
 15533                           
 15534 ;; *************** function _TMR0_Initialize *****************
 15535 ;; Defined at:
 15536 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 15537 ;; Parameters:    Size  Location     Type
 15538 ;;		None
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;		None
 15541 ;; Return value:  Size  Location     Type
 15542 ;;                  1    wreg      void 
 15543 ;; Registers used:
 15544 ;;		wreg, status,2, status,0, cstack
 15545 ;; Tracked objects:
 15546 ;;		On entry : 0/0
 15547 ;;		On exit  : 0/0
 15548 ;;		Unchanged: 0/0
 15549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15554 ;;Total ram usage:        2 bytes
 15555 ;; Hardware stack levels used:    1
 15556 ;; Hardware stack levels required when called:    8
 15557 ;; This function calls:
 15558 ;;		_TMR0_SetInterruptHandler
 15559 ;; This function is called by:
 15560 ;;		_SYSTEM_Initialize
 15561 ;; This function uses a non-reentrant model
 15562 ;;
 15563                           
 15564                           	psect	text114
 15565  004AFA                     __ptext114:
 15566                           	opt callstack 0
 15567  004AFA                     _TMR0_Initialize:
 15568                           	opt callstack 21
 15569  004AFA                     
 15570                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 15571  004AFA  0E40               	movlw	64
 15572  004AFC  6EB9               	movwf	185,c	;volatile
 15573                           
 15574                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 15575  004AFE  0EC1               	movlw	193
 15576  004B00  6EB7               	movwf	183,c	;volatile
 15577                           
 15578                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 15579  004B02  0E80               	movlw	128
 15580  004B04  6EB6               	movwf	182,c	;volatile
 15581  004B06                     
 15582                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 15583  004B06  50B6               	movf	182,w,c	;volatile
 15584  004B08  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 15585  004B0E  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 15586  004B10  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 15587  004B16  6A04               	clrf	??_TMR0_Initialize^0,c
 15588  004B18  1004               	iorwf	??_TMR0_Initialize^0,w,c
 15589  004B1A  6E5B               	movwf	_timer0ReloadVal16bit^0,c	;volatile
 15590  004B1C  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 15591  004B1E  6E5C               	movwf	(_timer0ReloadVal16bit+1)^0,c	;volatile
 15592  004B20                     
 15593                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 15594  004B20  0139               	movlb	57	; () banked
 15595  004B22  9FA3               	bcf	163,7,b	;volatile
 15596  004B24                     
 15597                           ; BSR set to: 57
 15598                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 15599  004B24  8F93               	bsf	147,7,b	;volatile
 15600  004B26                     
 15601                           ; BSR set to: 57
 15602                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 15603  004B26  0E30               	movlw	low _TMR0_DefaultInterruptHandler
 15604  004B28  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 15605  004B2A  0E51               	movlw	high _TMR0_DefaultInterruptHandler
 15606  004B2C  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 15607  004B2E  EC67  F028         	call	_TMR0_SetInterruptHandler	;wreg free
 15608  004B32                     
 15609                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 15610  004B32  0E90               	movlw	144
 15611  004B34  6EB8               	movwf	184,c	;volatile
 15612  004B36  0012               	return		;funcret
 15613  004B38                     __end_of_TMR0_Initialize:
 15614                           	opt callstack 0
 15615                           
 15616 ;; *************** function _TMR0_SetInterruptHandler *****************
 15617 ;; Defined at:
 15618 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 15619 ;; Parameters:    Size  Location     Type
 15620 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 15621 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;		None
 15624 ;; Return value:  Size  Location     Type
 15625 ;;                  1    wreg      void 
 15626 ;; Registers used:
 15627 ;;		wreg, status,2, status,0
 15628 ;; Tracked objects:
 15629 ;;		On entry : 0/0
 15630 ;;		On exit  : 0/0
 15631 ;;		Unchanged: 0/0
 15632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15637 ;;Total ram usage:        2 bytes
 15638 ;; Hardware stack levels used:    1
 15639 ;; Hardware stack levels required when called:    7
 15640 ;; This function calls:
 15641 ;;		Nothing
 15642 ;; This function is called by:
 15643 ;;		_TMR0_Initialize
 15644 ;;		_main
 15645 ;; This function uses a non-reentrant model
 15646 ;;
 15647                           
 15648                           	psect	text115
 15649  0050CE                     __ptext115:
 15650                           	opt callstack 0
 15651  0050CE                     _TMR0_SetInterruptHandler:
 15652                           	opt callstack 23
 15653  0050CE                     
 15654                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 15655  0050CE  0060  F008  F0EF   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 15656  0050D4  0060  F00C  F0F0   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 15657  0050DA  0012               	return		;funcret
 15658  0050DC                     __end_of_TMR0_SetInterruptHandler:
 15659                           	opt callstack 0
 15660                           
 15661 ;; *************** function _SPI1_Initialize *****************
 15662 ;; Defined at:
 15663 ;;		line 64 in file "mcc_generated_files/spi1.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;		None
 15666 ;; Auto vars:     Size  Location     Type
 15667 ;;		None
 15668 ;; Return value:  Size  Location     Type
 15669 ;;                  1    wreg      void 
 15670 ;; Registers used:
 15671 ;;		wreg, status,2
 15672 ;; Tracked objects:
 15673 ;;		On entry : 0/0
 15674 ;;		On exit  : 0/0
 15675 ;;		Unchanged: 0/0
 15676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15681 ;;Total ram usage:        0 bytes
 15682 ;; Hardware stack levels used:    1
 15683 ;; Hardware stack levels required when called:    7
 15684 ;; This function calls:
 15685 ;;		Nothing
 15686 ;; This function is called by:
 15687 ;;		_SYSTEM_Initialize
 15688 ;; This function uses a non-reentrant model
 15689 ;;
 15690                           
 15691                           	psect	text116
 15692  004F98                     __ptext116:
 15693                           	opt callstack 0
 15694  004F98                     _SPI1_Initialize:
 15695                           	opt callstack 22
 15696  004F98                     
 15697                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 15698  004F98  0E82               	movlw	130
 15699  004F9A  013D               	movlb	61	; () banked
 15700  004F9C  6F14               	movwf	20,b	;volatile
 15701                           
 15702                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 15703  004F9E  0EC0               	movlw	192
 15704  004FA0  6F15               	movwf	21,b	;volatile
 15705                           
 15706                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 15707  004FA2  0E03               	movlw	3
 15708  004FA4  6F16               	movwf	22,b	;volatile
 15709                           
 15710                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 15711  004FA6  0E01               	movlw	1
 15712  004FA8  6F1C               	movwf	28,b	;volatile
 15713                           
 15714                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 15715  004FAA  0E03               	movlw	3
 15716  004FAC  6F19               	movwf	25,b	;volatile
 15717  004FAE                     
 15718                           ; BSR set to: 61
 15719                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC7 = 0;
 15720  004FAE  9EC4               	bcf	196,7,c	;volatile
 15721  004FB0                     
 15722                           ; BSR set to: 61
 15723  004FB0  0012               	return		;funcret
 15724  004FB2                     __end_of_SPI1_Initialize:
 15725                           	opt callstack 0
 15726                           
 15727 ;; *************** function _PMD_Initialize *****************
 15728 ;; Defined at:
 15729 ;;		line 76 in file "mcc_generated_files/mcc.c"
 15730 ;; Parameters:    Size  Location     Type
 15731 ;;		None
 15732 ;; Auto vars:     Size  Location     Type
 15733 ;;		None
 15734 ;; Return value:  Size  Location     Type
 15735 ;;                  1    wreg      void 
 15736 ;; Registers used:
 15737 ;;		wreg, status,2
 15738 ;; Tracked objects:
 15739 ;;		On entry : 0/0
 15740 ;;		On exit  : 0/0
 15741 ;;		Unchanged: 0/0
 15742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15747 ;;Total ram usage:        0 bytes
 15748 ;; Hardware stack levels used:    1
 15749 ;; Hardware stack levels required when called:    7
 15750 ;; This function calls:
 15751 ;;		Nothing
 15752 ;; This function is called by:
 15753 ;;		_SYSTEM_Initialize
 15754 ;; This function uses a non-reentrant model
 15755 ;;
 15756                           
 15757                           	psect	text117
 15758  004E80                     __ptext117:
 15759                           	opt callstack 0
 15760  004E80                     _PMD_Initialize:
 15761                           	opt callstack 22
 15762  004E80                     
 15763                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 15764  004E80  0E00               	movlw	0
 15765  004E82  0139               	movlb	57	; () banked
 15766  004E84  6FC0               	movwf	192,b	;volatile
 15767                           
 15768                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 15769  004E86  0E00               	movlw	0
 15770  004E88  6FC1               	movwf	193,b	;volatile
 15771                           
 15772                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 15773  004E8A  0E00               	movlw	0
 15774  004E8C  6FC2               	movwf	194,b	;volatile
 15775                           
 15776                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 15777  004E8E  0E00               	movlw	0
 15778  004E90  6FC3               	movwf	195,b	;volatile
 15779                           
 15780                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 15781  004E92  0E00               	movlw	0
 15782  004E94  6FC4               	movwf	196,b	;volatile
 15783                           
 15784                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 15785  004E96  0E00               	movlw	0
 15786  004E98  6FC5               	movwf	197,b	;volatile
 15787                           
 15788                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 15789  004E9A  0E00               	movlw	0
 15790  004E9C  6FC6               	movwf	198,b	;volatile
 15791                           
 15792                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 15793  004E9E  0E00               	movlw	0
 15794  004EA0  6FC7               	movwf	199,b	;volatile
 15795  004EA2                     
 15796                           ; BSR set to: 57
 15797  004EA2  0012               	return		;funcret
 15798  004EA4                     __end_of_PMD_Initialize:
 15799                           	opt callstack 0
 15800                           
 15801 ;; *************** function _PIN_MANAGER_Initialize *****************
 15802 ;; Defined at:
 15803 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15804 ;; Parameters:    Size  Location     Type
 15805 ;;		None
 15806 ;; Auto vars:     Size  Location     Type
 15807 ;;		None
 15808 ;; Return value:  Size  Location     Type
 15809 ;;                  1    wreg      void 
 15810 ;; Registers used:
 15811 ;;		wreg, status,2
 15812 ;; Tracked objects:
 15813 ;;		On entry : 0/0
 15814 ;;		On exit  : 0/0
 15815 ;;		Unchanged: 0/0
 15816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15821 ;;Total ram usage:        0 bytes
 15822 ;; Hardware stack levels used:    1
 15823 ;; Hardware stack levels required when called:    7
 15824 ;; This function calls:
 15825 ;;		Nothing
 15826 ;; This function is called by:
 15827 ;;		_SYSTEM_Initialize
 15828 ;; This function uses a non-reentrant model
 15829 ;;
 15830                           
 15831                           	psect	text118
 15832  00426C                     __ptext118:
 15833                           	opt callstack 0
 15834  00426C                     _PIN_MANAGER_Initialize:
 15835                           	opt callstack 22
 15836  00426C                     
 15837                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 15838  00426C  0E08               	movlw	8
 15839  00426E  6EBA               	movwf	186,c	;volatile
 15840                           
 15841                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 15842  004270  0E00               	movlw	0
 15843  004272  6EBB               	movwf	187,c	;volatile
 15844                           
 15845                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 15846  004274  0E40               	movlw	64
 15847  004276  6EBC               	movwf	188,c	;volatile
 15848                           
 15849                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 15850  004278  0EF7               	movlw	247
 15851  00427A  6EC2               	movwf	194,c	;volatile
 15852                           
 15853                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 15854  00427C  0EFE               	movlw	254
 15855  00427E  6EC3               	movwf	195,c	;volatile
 15856                           
 15857                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 15858  004280  0E1C               	movlw	28
 15859  004282  6EC4               	movwf	196,c	;volatile
 15860                           
 15861                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 15862  004284  0E29               	movlw	41
 15863  004286  013A               	movlb	58	; () banked
 15864  004288  6F60               	movwf	96,b	;volatile
 15865                           
 15866                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 15867  00428A  0ECD               	movlw	205
 15868  00428C  6F50               	movwf	80,b	;volatile
 15869                           
 15870                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xD2;
 15871  00428E  0ED2               	movlw	210
 15872  004290  6F40               	movwf	64,b	;volatile
 15873                           
 15874                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 15875  004292  0E00               	movlw	0
 15876  004294  6F81               	movwf	129,b	;volatile
 15877                           
 15878                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 15879  004296  0E00               	movlw	0
 15880  004298  6F51               	movwf	81,b	;volatile
 15881                           
 15882                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 15883  00429A  0E00               	movlw	0
 15884  00429C  6F41               	movwf	65,b	;volatile
 15885                           
 15886                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 15887  00429E  0E08               	movlw	8
 15888  0042A0  6F61               	movwf	97,b	;volatile
 15889                           
 15890                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 15891  0042A2  0E00               	movlw	0
 15892  0042A4  6F5A               	movwf	90,b	;volatile
 15893                           
 15894                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 15895  0042A6  0E00               	movlw	0
 15896  0042A8  6F5B               	movwf	91,b	;volatile
 15897                           
 15898                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 15899  0042AA  0E00               	movlw	0
 15900  0042AC  6F6A               	movwf	106,b	;volatile
 15901                           
 15902                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 15903  0042AE  0E00               	movlw	0
 15904  0042B0  6F6B               	movwf	107,b	;volatile
 15905                           
 15906                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 15907  0042B2  0E00               	movlw	0
 15908  0042B4  6F42               	movwf	66,b	;volatile
 15909                           
 15910                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 15911  0042B6  0E00               	movlw	0
 15912  0042B8  6F52               	movwf	82,b	;volatile
 15913                           
 15914                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x08;
 15915  0042BA  0E08               	movlw	8
 15916  0042BC  6F62               	movwf	98,b	;volatile
 15917  0042BE                     
 15918                           ; BSR set to: 58
 15919                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 15920  0042BE  6943               	setf	67,b	;volatile
 15921  0042C0                     
 15922                           ; BSR set to: 58
 15923                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 15924  0042C0  6953               	setf	83,b	;volatile
 15925  0042C2                     
 15926                           ; BSR set to: 58
 15927                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 15928  0042C2  6963               	setf	99,b	;volatile
 15929  0042C4                     
 15930                           ; BSR set to: 58
 15931                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 15932  0042C4  6944               	setf	68,b	;volatile
 15933  0042C6                     
 15934                           ; BSR set to: 58
 15935                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 15936  0042C6  6954               	setf	84,b	;volatile
 15937  0042C8                     
 15938                           ; BSR set to: 58
 15939                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 15940  0042C8  6964               	setf	100,b	;volatile
 15941                           
 15942                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 15943  0042CA  0E08               	movlw	8
 15944  0042CC  6F84               	movwf	132,b	;volatile
 15945                           
 15946                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 15947  0042CE  0E13               	movlw	19
 15948  0042D0  6F10               	movwf	16,b	;volatile
 15949                           
 15950                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 15951  0042D2  0E17               	movlw	23
 15952  0042D4  6FDE               	movwf	222,b	;volatile
 15953                           
 15954                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 15955  0042D6  0E05               	movlw	5
 15956  0042D8  6FE0               	movwf	224,b	;volatile
 15957                           
 15958                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 15959  0042DA  0E1F               	movlw	31
 15960  0042DC  6F08               	movwf	8,b	;volatile
 15961                           
 15962                           ;mcc_generated_files/pin_manager.c: 127:     U1RXPPS = 0x12;
 15963  0042DE  0E12               	movlw	18
 15964  0042E0  6FE5               	movwf	229,b	;volatile
 15965                           
 15966                           ;mcc_generated_files/pin_manager.c: 128:     RC7PPS = 0x1E;
 15967  0042E2  0E1E               	movlw	30
 15968  0042E4  6F17               	movwf	23,b	;volatile
 15969                           
 15970                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SDIPPS = 0x09;
 15971  0042E6  0E09               	movlw	9
 15972  0042E8  6FDF               	movwf	223,b	;volatile
 15973  0042EA                     
 15974                           ; BSR set to: 58
 15975  0042EA  0012               	return		;funcret
 15976  0042EC                     __end_of_PIN_MANAGER_Initialize:
 15977                           	opt callstack 0
 15978                           
 15979 ;; *************** function _OSCILLATOR_Initialize *****************
 15980 ;; Defined at:
 15981 ;;		line 62 in file "mcc_generated_files/mcc.c"
 15982 ;; Parameters:    Size  Location     Type
 15983 ;;		None
 15984 ;; Auto vars:     Size  Location     Type
 15985 ;;		None
 15986 ;; Return value:  Size  Location     Type
 15987 ;;                  1    wreg      void 
 15988 ;; Registers used:
 15989 ;;		wreg, status,2
 15990 ;; Tracked objects:
 15991 ;;		On entry : 0/0
 15992 ;;		On exit  : 0/0
 15993 ;;		Unchanged: 0/0
 15994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15999 ;;Total ram usage:        0 bytes
 16000 ;; Hardware stack levels used:    1
 16001 ;; Hardware stack levels required when called:    7
 16002 ;; This function calls:
 16003 ;;		Nothing
 16004 ;; This function is called by:
 16005 ;;		_SYSTEM_Initialize
 16006 ;; This function uses a non-reentrant model
 16007 ;;
 16008                           
 16009                           	psect	text119
 16010  004FE2                     __ptext119:
 16011                           	opt callstack 0
 16012  004FE2                     _OSCILLATOR_Initialize:
 16013                           	opt callstack 22
 16014  004FE2                     
 16015                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 16016  004FE2  0E60               	movlw	96
 16017  004FE4  0139               	movlb	57	; () banked
 16018  004FE6  6FD9               	movwf	217,b	;volatile
 16019                           
 16020                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 16021  004FE8  0E00               	movlw	0
 16022  004FEA  6FDB               	movwf	219,b	;volatile
 16023                           
 16024                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 16025  004FEC  0E00               	movlw	0
 16026  004FEE  6FDD               	movwf	221,b	;volatile
 16027                           
 16028                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 16029  004FF0  0E08               	movlw	8
 16030  004FF2  6FDF               	movwf	223,b	;volatile
 16031                           
 16032                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 16033  004FF4  0E00               	movlw	0
 16034  004FF6  6FDE               	movwf	222,b	;volatile
 16035  004FF8                     
 16036                           ; BSR set to: 57
 16037  004FF8  0012               	return		;funcret
 16038  004FFA                     __end_of_OSCILLATOR_Initialize:
 16039                           	opt callstack 0
 16040                           
 16041 ;; *************** function _INTERRUPT_Initialize *****************
 16042 ;; Defined at:
 16043 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16044 ;; Parameters:    Size  Location     Type
 16045 ;;		None
 16046 ;; Auto vars:     Size  Location     Type
 16047 ;;  state           1    1[COMRAM] _Bool 
 16048 ;; Return value:  Size  Location     Type
 16049 ;;                  1    wreg      void 
 16050 ;; Registers used:
 16051 ;;		wreg, status,2
 16052 ;; Tracked objects:
 16053 ;;		On entry : 0/0
 16054 ;;		On exit  : 0/0
 16055 ;;		Unchanged: 0/0
 16056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16061 ;;Total ram usage:        1 bytes
 16062 ;; Hardware stack levels used:    1
 16063 ;; Hardware stack levels required when called:    7
 16064 ;; This function calls:
 16065 ;;		Nothing
 16066 ;; This function is called by:
 16067 ;;		_SYSTEM_Initialize
 16068 ;; This function uses a non-reentrant model
 16069 ;;
 16070                           
 16071                           	psect	text120
 16072  004A3E                     __ptext120:
 16073                           	opt callstack 0
 16074  004A3E                     _INTERRUPT_Initialize:
 16075                           	opt callstack 22
 16076  004A3E                     
 16077                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 16078  004A3E  8AD2               	bsf	210,5,c	;volatile
 16079  004A40                     
 16080                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 16081  004A40  0E00               	movlw	0
 16082  004A42  BED2               	btfsc	16338,7,c	;volatile
 16083  004A44  0E01               	movlw	1
 16084  004A46  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 16085  004A48                     
 16086                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 16087  004A48  9ED2               	bcf	16338,7,c	;volatile
 16088                           
 16089                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 16090  004A4A  0E55               	movlw	85
 16091  004A4C  6ED4               	movwf	212,c	;volatile
 16092                           
 16093                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 16094  004A4E  0EAA               	movlw	170
 16095  004A50  6ED4               	movwf	212,c	;volatile
 16096  004A52                     
 16097                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 16098  004A52  90D4               	bcf	212,0,c	;volatile
 16099                           
 16100                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 16101  004A54  0E00               	movlw	0
 16102  004A56  6ED7               	movwf	215,c	;volatile
 16103                           
 16104                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 16105  004A58  0E00               	movlw	0
 16106  004A5A  6ED6               	movwf	214,c	;volatile
 16107                           
 16108                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 16109  004A5C  0E08               	movlw	8
 16110  004A5E  6ED5               	movwf	213,c	;volatile
 16111                           
 16112                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 16113  004A60  0E55               	movlw	85
 16114  004A62  6ED4               	movwf	212,c	;volatile
 16115                           
 16116                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 16117  004A64  0EAA               	movlw	170
 16118  004A66  6ED4               	movwf	212,c	;volatile
 16119  004A68                     
 16120                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 16121  004A68  80D4               	bsf	212,0,c	;volatile
 16122  004A6A                     
 16123                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 16124  004A6A  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 16125  004A6C  D002               	bra	u2365
 16126  004A6E  9ED2               	bcf	16338,7,c	;volatile
 16127  004A70  D001               	bra	u2366
 16128  004A72                     u2365:
 16129  004A72  8ED2               	bsf	16338,7,c	;volatile
 16130  004A74                     u2366:
 16131  004A74                     
 16132                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 16133  004A74  0139               	movlb	57	; () banked
 16134  004A76  8983               	bsf	131,4,b	;volatile
 16135  004A78                     
 16136                           ; BSR set to: 57
 16137                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 16138  004A78  8783               	bsf	131,3,b	;volatile
 16139  004A7A                     
 16140                           ; BSR set to: 57
 16141                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 16142  004A7A  9F83               	bcf	131,7,b	;volatile
 16143  004A7C                     
 16144                           ; BSR set to: 57
 16145  004A7C  0012               	return		;funcret
 16146  004A7E                     __end_of_INTERRUPT_Initialize:
 16147                           	opt callstack 0
 16148                           
 16149 ;; *************** function _CRC_Initialize *****************
 16150 ;; Defined at:
 16151 ;;		line 76 in file "mcc_generated_files/crc.c"
 16152 ;; Parameters:    Size  Location     Type
 16153 ;;		None
 16154 ;; Auto vars:     Size  Location     Type
 16155 ;;  seed            2    0        unsigned short 
 16156 ;;  poly            2    0        unsigned short 
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  1    wreg      void 
 16159 ;; Registers used:
 16160 ;;		wreg, status,2, status,0
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/0
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16167 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16170 ;;Total ram usage:        5 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:    7
 16173 ;; This function calls:
 16174 ;;		Nothing
 16175 ;; This function is called by:
 16176 ;;		_SYSTEM_Initialize
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           	psect	text121
 16181  004544                     __ptext121:
 16182                           	opt callstack 0
 16183  004544                     _CRC_Initialize:
 16184                           	opt callstack 22
 16185  004544                     
 16186                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 16187  004544  0E80               	movlw	128
 16188  004546  0139               	movlb	57	; () banked
 16189  004548  6F68               	movwf	104,b	;volatile
 16190                           
 16191                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 16192  00454A  0E7F               	movlw	127
 16193  00454C  6F69               	movwf	105,b	;volatile
 16194                           
 16195                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 16196  00454E  0E00               	movlw	0
 16197  004550  6F62               	movwf	98,b	;volatile
 16198                           
 16199                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 16200  004552  0E00               	movlw	0
 16201  004554  6F63               	movwf	99,b	;volatile
 16202                           
 16203                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 16204  004556  0E00               	movlw	0
 16205  004558  6F7C               	movwf	124,b	;volatile
 16206                           
 16207                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 16208  00455A  0E00               	movlw	0
 16209  00455C  6F78               	movwf	120,b	;volatile
 16210                           
 16211                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 16212  00455E  0E00               	movlw	0
 16213  004560  6F77               	movwf	119,b	;volatile
 16214                           
 16215                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 16216  004562  0E00               	movlw	0
 16217  004564  6F76               	movwf	118,b	;volatile
 16218                           
 16219                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 16220  004566  0E3F               	movlw	63
 16221  004568  6F7B               	movwf	123,b	;volatile
 16222  00456A                     
 16223                           ; BSR set to: 57
 16224                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 16225  00456A  697A               	setf	122,b	;volatile
 16226  00456C                     
 16227                           ; BSR set to: 57
 16228                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 16229  00456C  6979               	setf	121,b	;volatile
 16230                           
 16231                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 16232  00456E  0E00               	movlw	0
 16233  004570  6F7D               	movwf	125,b	;volatile
 16234                           
 16235                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 16236  004572  0E80               	movlw	128
 16237  004574  6F67               	movwf	103,b	;volatile
 16238  004576                     
 16239                           ; BSR set to: 57
 16240                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 16241  004576  0E05               	movlw	5
 16242  004578  6F66               	movwf	102,b	;volatile
 16243                           
 16244                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 16245  00457A  0E00               	movlw	0
 16246  00457C  6F63               	movwf	99,b	;volatile
 16247  00457E                     
 16248                           ; BSR set to: 57
 16249                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 16250  00457E  0E00               	movlw	0
 16251  004580  6F62               	movwf	98,b	;volatile
 16252  004582                     
 16253                           ; BSR set to: 57
 16254                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 16255  004582  3969               	swapf	105,w,b	;volatile
 16256  004584  0B0F               	andlw	15
 16257  004586  6E02               	movwf	??_CRC_Initialize^0,c
 16258  004588  2802               	incf	??_CRC_Initialize^0,w,c
 16259  00458A  0100               	movlb	0	; () banked
 16260  00458C  6FE6               	movwf	_crcObj& (0+255),b
 16261  00458E                     
 16262                           ; BSR set to: 0
 16263                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 16264  00458E  0139               	movlb	57	; () banked
 16265  004590  5169               	movf	105,w,b	;volatile
 16266  004592  0B0F               	andlw	15
 16267  004594  6E02               	movwf	??_CRC_Initialize^0,c
 16268  004596  2802               	incf	??_CRC_Initialize^0,w,c
 16269  004598  0100               	movlb	0	; () banked
 16270  00459A  6FE7               	movwf	(_crcObj+1)& (0+255),b
 16271  00459C                     
 16272                           ; BSR set to: 0
 16273  00459C  0012               	return		;funcret
 16274  00459E                     __end_of_CRC_Initialize:
 16275                           	opt callstack 0
 16276                           
 16277 ;; *************** function _TMR0_ISR *****************
 16278 ;; Defined at:
 16279 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;		None
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;		None
 16284 ;; Return value:  Size  Location     Type
 16285 ;;                  1    wreg      void 
 16286 ;; Registers used:
 16287 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16288 ;; Tracked objects:
 16289 ;;		On entry : 0/0
 16290 ;;		On exit  : 0/0
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16297 ;;Total ram usage:        1 bytes
 16298 ;; Hardware stack levels used:    1
 16299 ;; Hardware stack levels required when called:    6
 16300 ;; This function calls:
 16301 ;;		_TMR0_CallBack
 16302 ;; This function is called by:
 16303 ;;		Interrupt level 1
 16304 ;; This function uses a non-reentrant model
 16305 ;;
 16306                           
 16307                           	psect	text122
 16308  004F08                     __ptext122:
 16309                           	opt callstack 0
 16310  004F08                     _TMR0_ISR:
 16311                           	opt callstack 14
 16312                           
 16313                           ; BSR set to: 0
 16314                           ;incstack = 0
 16315  004F08  006F FF60  F001    	movff	status,??_TMR0_ISR
 16316  004F0E                     
 16317                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 16318  004F0E  0139               	movlb	57	; () banked
 16319  004F10  9FA3               	bcf	163,7,b	;volatile
 16320  004F12                     
 16321                           ; BSR set to: 57
 16322                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 16323  004F12  505C               	movf	(_timer0ReloadVal16bit+1)^0,w,c	;volatile
 16324  004F14  6EB7               	movwf	183,c	;volatile
 16325  004F16                     
 16326                           ; BSR set to: 57
 16327                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 16328  004F16  0060  F16F  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 16329  004F1C                     
 16330                           ; BSR set to: 57
 16331                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 16332  004F1C  EC56  F026         	call	_TMR0_CallBack	;wreg free
 16333  004F20  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 16334  004F26  0011               	retfie		f
 16335  004F28                     __end_of_TMR0_ISR:
 16336                           	opt callstack 0
 16337                           
 16338 ;; *************** function _TMR0_CallBack *****************
 16339 ;; Defined at:
 16340 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 16341 ;; Parameters:    Size  Location     Type
 16342 ;;		None
 16343 ;; Auto vars:     Size  Location     Type
 16344 ;;		None
 16345 ;; Return value:  Size  Location     Type
 16346 ;;                  1    wreg      void 
 16347 ;; Registers used:
 16348 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16349 ;; Tracked objects:
 16350 ;;		On entry : 0/0
 16351 ;;		On exit  : 0/0
 16352 ;;		Unchanged: 0/0
 16353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16358 ;;Total ram usage:        0 bytes
 16359 ;; Hardware stack levels used:    1
 16360 ;; Hardware stack levels required when called:    5
 16361 ;; This function calls:
 16362 ;;		Absolute function
 16363 ;;		_TMR0_DefaultInterruptHandler
 16364 ;;		_Timer0Handler
 16365 ;; This function is called by:
 16366 ;;		_TMR0_ISR
 16367 ;; This function uses a non-reentrant model
 16368 ;;
 16369                           
 16370                           	psect	text123
 16371  004CAC                     __ptext123:
 16372                           	opt callstack 0
 16373  004CAC                     _TMR0_CallBack:
 16374                           	opt callstack 14
 16375  004CAC                     
 16376                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 16377  004CAC  0100               	movlb	0	; () banked
 16378  004CAE  51EF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 16379  004CB0  11F0               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 16380  004CB2  B4D8               	btfsc	status,2,c
 16381  004CB4  EF5E  F026         	goto	i1u545_21
 16382  004CB8  EF60  F026         	goto	i1u545_20
 16383  004CBC                     i1u545_21:
 16384  004CBC  EF6C  F026         	goto	i1l183
 16385  004CC0                     i1u545_20:
 16386  004CC0                     
 16387                           ; BSR set to: 0
 16388                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 16389  004CC0  D802               	call	i1u546_28
 16390  004CC2  EF6C  F026         	goto	i1u546_29
 16391  004CC6                     i1u546_28:
 16392  004CC6  0005               	push	
 16393  004CC8  6EFA               	movwf	pclath,c
 16394  004CCA  51EF               	movf	_TMR0_InterruptHandler& (0+255),w,b
 16395  004CCC  6EFD               	movwf	tosl,c
 16396  004CCE  51F0               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 16397  004CD0  6EFE               	movwf	tosh,c
 16398  004CD2  6AFF               	clrf	tosu,c
 16399  004CD4  50FA               	movf	pclath,w,c
 16400  004CD6  0012               	return		;indir
 16401  004CD8                     i1u546_29:
 16402  004CD8                     i1l183:
 16403  004CD8  0012               	return		;funcret
 16404  004CDA                     __end_of_TMR0_CallBack:
 16405                           	opt callstack 0
 16406                           
 16407 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 16408 ;; Defined at:
 16409 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;		None
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;		None
 16414 ;; Return value:  Size  Location     Type
 16415 ;;                  1    wreg      void 
 16416 ;; Registers used:
 16417 ;;		None
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16427 ;;Total ram usage:        0 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:    4
 16430 ;; This function calls:
 16431 ;;		Nothing
 16432 ;; This function is called by:
 16433 ;;		_TMR0_Initialize
 16434 ;;		_TMR0_CallBack
 16435 ;; This function uses a non-reentrant model
 16436 ;;
 16437                           
 16438                           	psect	text124
 16439  005130                     __ptext124:
 16440                           	opt callstack 0
 16441  005130                     _TMR0_DefaultInterruptHandler:
 16442                           	opt callstack 14
 16443  005130  0012               	return		;funcret
 16444  005132                     __end_of_TMR0_DefaultInterruptHandler:
 16445                           	opt callstack 0
 16446                           
 16447 ;; *************** function _Timer0Handler *****************
 16448 ;; Defined at:
 16449 ;;		line 5 in file "hal/hal_src/Timers.c"
 16450 ;; Parameters:    Size  Location     Type
 16451 ;;		None
 16452 ;; Auto vars:     Size  Location     Type
 16453 ;;		None
 16454 ;; Return value:  Size  Location     Type
 16455 ;;                  1    wreg      void 
 16456 ;; Registers used:
 16457 ;;		wreg, status,2, status,0
 16458 ;; Tracked objects:
 16459 ;;		On entry : 0/0
 16460 ;;		On exit  : 0/0
 16461 ;;		Unchanged: 0/0
 16462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16467 ;;Total ram usage:        0 bytes
 16468 ;; Hardware stack levels used:    1
 16469 ;; Hardware stack levels required when called:    4
 16470 ;; This function calls:
 16471 ;;		Nothing
 16472 ;; This function is called by:
 16473 ;;		_main
 16474 ;;		_TMR0_CallBack
 16475 ;; This function uses a non-reentrant model
 16476 ;;
 16477                           
 16478                           	psect	text125
 16479  004BE0                     __ptext125:
 16480                           	opt callstack 0
 16481  004BE0                     _Timer0Handler:
 16482                           	opt callstack 14
 16483  004BE0                     
 16484                           ;hal/hal_src/Timers.c: 7:     if(txTimeOut){
 16485  004BE0  5055               	movf	_txTimeOut^0,w,c	;volatile
 16486  004BE2  1056               	iorwf	(_txTimeOut+1)^0,w,c	;volatile
 16487  004BE4  B4D8               	btfsc	status,2,c
 16488  004BE6  EFF7  F025         	goto	i1u535_21
 16489  004BEA  EFF9  F025         	goto	i1u535_20
 16490  004BEE                     i1u535_21:
 16491  004BEE  EFFC  F025         	goto	i1l7298
 16492  004BF2                     i1u535_20:
 16493  004BF2                     
 16494                           ;hal/hal_src/Timers.c: 8:         txTimeOut--;
 16495  004BF2  0655               	decf	_txTimeOut^0,f,c	;volatile
 16496  004BF4  A0D8               	btfss	status,0,c
 16497  004BF6  0656               	decf	(_txTimeOut+1)^0,f,c	;volatile
 16498  004BF8                     i1l7298:
 16499                           
 16500                           ;hal/hal_src/Timers.c: 10:     if(test_timer){
 16501  004BF8  505D               	movf	_test_timer^0,w,c	;volatile
 16502  004BFA  105E               	iorwf	(_test_timer+1)^0,w,c	;volatile
 16503  004BFC  B4D8               	btfsc	status,2,c
 16504  004BFE  EF03  F026         	goto	i1u536_21
 16505  004C02  EF05  F026         	goto	i1u536_20
 16506  004C06                     i1u536_21:
 16507  004C06  EF08  F026         	goto	i1l58
 16508  004C0A                     i1u536_20:
 16509  004C0A                     
 16510                           ;hal/hal_src/Timers.c: 11:         test_timer--;
 16511  004C0A  065D               	decf	_test_timer^0,f,c	;volatile
 16512  004C0C  A0D8               	btfss	status,0,c
 16513  004C0E  065E               	decf	(_test_timer+1)^0,f,c	;volatile
 16514  004C10                     i1l58:
 16515                           
 16516                           ;hal/hal_src/Timers.c: 21:     halTimerIrqCount++;
 16517  004C10  4A41               	infsnz	_halTimerIrqCount^0,f,c	;volatile
 16518  004C12  2A42               	incf	(_halTimerIrqCount+1)^0,f,c	;volatile
 16519  004C14  0012               	return		;funcret
 16520  004C16                     __end_of_Timer0Handler:
 16521                           	opt callstack 0
 16522                           
 16523 ;; *************** function _Default_ISR *****************
 16524 ;; Defined at:
 16525 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 16526 ;; Parameters:    Size  Location     Type
 16527 ;;		None
 16528 ;; Auto vars:     Size  Location     Type
 16529 ;;		None
 16530 ;; Return value:  Size  Location     Type
 16531 ;;                  1    wreg      void 
 16532 ;; Registers used:
 16533 ;;		None
 16534 ;; Tracked objects:
 16535 ;;		On entry : 0/0
 16536 ;;		On exit  : 0/0
 16537 ;;		Unchanged: 0/0
 16538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16543 ;;Total ram usage:        0 bytes
 16544 ;; Hardware stack levels used:    1
 16545 ;; This function calls:
 16546 ;;		Nothing
 16547 ;; This function is called by:
 16548 ;;		Interrupt level 2
 16549 ;; This function uses a non-reentrant model
 16550 ;;
 16551                           
 16552                           	psect	text126
 16553  005134                     __ptext126:
 16554                           	opt callstack 0
 16555  005134                     _Default_ISR:
 16556                           	opt callstack 17
 16557  005134  0011               	retfie		f
 16558  005136                     __end_of_Default_ISR:
 16559                           	opt callstack 0
 16560                           
 16561 ;; *************** function _UART1_tx_vect_isr *****************
 16562 ;; Defined at:
 16563 ;;		line 235 in file "mcc_generated_files/uart1.c"
 16564 ;; Parameters:    Size  Location     Type
 16565 ;;		None
 16566 ;; Auto vars:     Size  Location     Type
 16567 ;;		None
 16568 ;; Return value:  Size  Location     Type
 16569 ;;                  1    wreg      void 
 16570 ;; Registers used:
 16571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16572 ;; Tracked objects:
 16573 ;;		On entry : 0/0
 16574 ;;		On exit  : 0/0
 16575 ;;		Unchanged: 0/0
 16576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;Total ram usage:        0 bytes
 16582 ;; Hardware stack levels used:    1
 16583 ;; Hardware stack levels required when called:    1
 16584 ;; This function calls:
 16585 ;;		Absolute function
 16586 ;;		_UART1_Transmit_ISR
 16587 ;; This function is called by:
 16588 ;;		Interrupt level 2
 16589 ;; This function uses a non-reentrant model
 16590 ;;
 16591                           
 16592                           	psect	text127
 16593  004CDC                     __ptext127:
 16594                           	opt callstack 0
 16595  004CDC                     _UART1_tx_vect_isr:
 16596                           	opt callstack 16
 16597  004CDC                     
 16598                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 16599  004CDC  0100               	movlb	0	; () banked
 16600  004CDE  51F1               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16601  004CE0  11F2               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16602  004CE2  B4D8               	btfsc	status,2,c
 16603  004CE4  EF76  F026         	goto	i2u563_41
 16604  004CE8  EF78  F026         	goto	i2u563_40
 16605  004CEC                     i2u563_41:
 16606  004CEC  EF84  F026         	goto	i2l467
 16607  004CF0                     i2u563_40:
 16608  004CF0                     
 16609                           ; BSR set to: 0
 16610                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 16611  004CF0  D802               	call	i2u564_48
 16612  004CF2  EF84  F026         	goto	i2u564_49
 16613  004CF6                     i2u564_48:
 16614  004CF6  0005               	push	
 16615  004CF8  6EFA               	movwf	pclath,c
 16616  004CFA  51F1               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16617  004CFC  6EFD               	movwf	tosl,c
 16618  004CFE  51F2               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16619  004D00  6EFE               	movwf	tosh,c
 16620  004D02  6AFF               	clrf	tosu,c
 16621  004D04  50FA               	movf	pclath,w,c
 16622  004D06  0012               	return		;indir
 16623  004D08                     i2u564_49:
 16624  004D08                     i2l467:
 16625  004D08  0011               	retfie		f
 16626  004D0A                     __end_of_UART1_tx_vect_isr:
 16627                           	opt callstack 0
 16628                           
 16629 ;; *************** function _UART1_Transmit_ISR *****************
 16630 ;; Defined at:
 16631 ;;		line 253 in file "mcc_generated_files/uart1.c"
 16632 ;; Parameters:    Size  Location     Type
 16633 ;;		None
 16634 ;; Auto vars:     Size  Location     Type
 16635 ;;		None
 16636 ;; Return value:  Size  Location     Type
 16637 ;;                  1    wreg      void 
 16638 ;; Registers used:
 16639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16640 ;; Tracked objects:
 16641 ;;		On entry : 0/0
 16642 ;;		On exit  : 0/0
 16643 ;;		Unchanged: 0/0
 16644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16649 ;;Total ram usage:        0 bytes
 16650 ;; Hardware stack levels used:    1
 16651 ;; This function calls:
 16652 ;;		Nothing
 16653 ;; This function is called by:
 16654 ;;		_UART1_Initialize
 16655 ;;		_UART1_tx_vect_isr
 16656 ;; This function uses a non-reentrant model
 16657 ;;
 16658                           
 16659                           	psect	text128
 16660  00481E                     __ptext128:
 16661                           	opt callstack 0
 16662  00481E                     _UART1_Transmit_ISR:
 16663                           	opt callstack 16
 16664  00481E                     
 16665                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 16666  00481E  0E40               	movlw	64
 16667  004820  0100               	movlb	0	; () banked
 16668  004822  61F5               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
 16669  004824  EF16  F024         	goto	i2u552_41
 16670  004828  EF18  F024         	goto	i2u552_40
 16671  00482C                     i2u552_41:
 16672  00482C  EF30  F024         	goto	i2l476
 16673  004830                     i2u552_40:
 16674  004830                     
 16675                           ; BSR set to: 0
 16676                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 16677  004830  0E40               	movlw	low _uart1TxBuffer
 16678  004832  2447               	addwf	_uart1TxTail^0,w,c	;volatile
 16679  004834  6ED9               	movwf	fsr2l,c
 16680  004836  6ADA               	clrf	fsr2h,c
 16681  004838  0E02               	movlw	high _uart1TxBuffer
 16682  00483A  22DA               	addwfc	fsr2h,f,c
 16683  00483C  50DF               	movf	indf2,w,c
 16684  00483E  013D               	movlb	61	; () banked
 16685  004840  6FEA               	movwf	234,b	;volatile
 16686  004842                     
 16687                           ; BSR set to: 61
 16688  004842  2A47               	incf	_uart1TxTail^0,f,c	;volatile
 16689  004844                     
 16690                           ; BSR set to: 61
 16691                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 16692  004844  0E3F               	movlw	63
 16693  004846  6447               	cpfsgt	_uart1TxTail^0,c	;volatile
 16694  004848  EF28  F024         	goto	i2u553_41
 16695  00484C  EF2A  F024         	goto	i2u553_40
 16696  004850                     i2u553_41:
 16697  004850  EF2C  F024         	goto	i2l7522
 16698  004854                     i2u553_40:
 16699  004854                     
 16700                           ; BSR set to: 61
 16701                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 16702  004854  0E00               	movlw	0
 16703  004856  6E47               	movwf	_uart1TxTail^0,c	;volatile
 16704  004858                     i2l7522:
 16705                           
 16706                           ; BSR set to: 61
 16707                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 16708  004858  0100               	movlb	0	; () banked
 16709  00485A  2BF5               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 16710                           
 16711                           ;mcc_generated_files/uart1.c: 264:     }
 16712  00485C  EF32  F024         	goto	i2l479
 16713  004860                     i2l476:
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 16717  004860  0139               	movlb	57	; () banked
 16718  004862  9993               	bcf	147,4,b	;volatile
 16719  004864                     i2l479:
 16720  004864  0012               	return		;funcret
 16721  004866                     __end_of_UART1_Transmit_ISR:
 16722                           	opt callstack 0
 16723                           
 16724 ;; *************** function _UART1_rx_vect_isr *****************
 16725 ;; Defined at:
 16726 ;;		line 243 in file "mcc_generated_files/uart1.c"
 16727 ;; Parameters:    Size  Location     Type
 16728 ;;		None
 16729 ;; Auto vars:     Size  Location     Type
 16730 ;;		None
 16731 ;; Return value:  Size  Location     Type
 16732 ;;                  1    wreg      void 
 16733 ;; Registers used:
 16734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16735 ;; Tracked objects:
 16736 ;;		On entry : 0/0
 16737 ;;		On exit  : 0/0
 16738 ;;		Unchanged: 0/0
 16739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16744 ;;Total ram usage:        0 bytes
 16745 ;; Hardware stack levels used:    1
 16746 ;; Hardware stack levels required when called:    3
 16747 ;; This function calls:
 16748 ;;		Absolute function
 16749 ;;		_UART1_Receive_ISR
 16750 ;; This function is called by:
 16751 ;;		Interrupt level 2
 16752 ;; This function uses a non-reentrant model
 16753 ;;
 16754                           
 16755                           	psect	text129
 16756  004D0C                     __ptext129:
 16757                           	opt callstack 0
 16758  004D0C                     _UART1_rx_vect_isr:
 16759                           	opt callstack 14
 16760  004D0C                     
 16761                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 16762  004D0C  0100               	movlb	0	; () banked
 16763  004D0E  51F3               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16764  004D10  11F4               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16765  004D12  B4D8               	btfsc	status,2,c
 16766  004D14  EF8E  F026         	goto	i2u565_41
 16767  004D18  EF90  F026         	goto	i2u565_40
 16768  004D1C                     i2u565_41:
 16769  004D1C  EF9C  F026         	goto	i2l473
 16770  004D20                     i2u565_40:
 16771  004D20                     
 16772                           ; BSR set to: 0
 16773                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 16774  004D20  D802               	call	i2u566_48
 16775  004D22  EF9C  F026         	goto	i2u566_49
 16776  004D26                     i2u566_48:
 16777  004D26  0005               	push	
 16778  004D28  6EFA               	movwf	pclath,c
 16779  004D2A  51F3               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16780  004D2C  6EFD               	movwf	tosl,c
 16781  004D2E  51F4               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16782  004D30  6EFE               	movwf	tosh,c
 16783  004D32  6AFF               	clrf	tosu,c
 16784  004D34  50FA               	movf	pclath,w,c
 16785  004D36  0012               	return		;indir
 16786  004D38                     i2u566_49:
 16787  004D38                     i2l473:
 16788  004D38  0011               	retfie		f
 16789  004D3A                     __end_of_UART1_rx_vect_isr:
 16790                           	opt callstack 0
 16791                           
 16792 ;; *************** function _UART1_Receive_ISR *****************
 16793 ;; Defined at:
 16794 ;;		line 273 in file "mcc_generated_files/uart1.c"
 16795 ;; Parameters:    Size  Location     Type
 16796 ;;		None
 16797 ;; Auto vars:     Size  Location     Type
 16798 ;;		None
 16799 ;; Return value:  Size  Location     Type
 16800 ;;                  1    wreg      void 
 16801 ;; Registers used:
 16802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16803 ;; Tracked objects:
 16804 ;;		On entry : 0/0
 16805 ;;		On exit  : 0/0
 16806 ;;		Unchanged: 0/0
 16807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16812 ;;Total ram usage:        0 bytes
 16813 ;; Hardware stack levels used:    1
 16814 ;; Hardware stack levels required when called:    2
 16815 ;; This function calls:
 16816 ;;		Absolute function
 16817 ;;		_UART1_DefaultErrorHandler
 16818 ;;		_UART1_DefaultFramingErrorHandler
 16819 ;;		_UART1_DefaultOverrunErrorHandler
 16820 ;;		_UART1_RxDataHandler
 16821 ;; This function is called by:
 16822 ;;		_UART1_Initialize
 16823 ;;		_UART1_rx_vect_isr
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           	psect	text130
 16828  0039D2                     __ptext130:
 16829                           	opt callstack 0
 16830  0039D2                     _UART1_Receive_ISR:
 16831                           	opt callstack 14
 16832  0039D2                     
 16833                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 16834  0039D2  0E00               	movlw	low _uart1RxStatusBuffer
 16835  0039D4  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16836  0039D6  6ED9               	movwf	fsr2l,c
 16837  0039D8  6ADA               	clrf	fsr2h,c
 16838  0039DA  0E01               	movlw	high _uart1RxStatusBuffer
 16839  0039DC  22DA               	addwfc	fsr2h,f,c
 16840  0039DE  0E00               	movlw	0
 16841  0039E0  6EDF               	movwf	indf2,c
 16842  0039E2                     
 16843                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 16844  0039E2  013D               	movlb	61	; () banked
 16845  0039E4  A7F9               	btfss	249,3,b	;volatile
 16846  0039E6  EFF7  F01C         	goto	i2u554_41
 16847  0039EA  EFF9  F01C         	goto	i2u554_40
 16848  0039EE                     i2u554_41:
 16849  0039EE  EF0E  F01D         	goto	i2l7532
 16850  0039F2                     i2u554_40:
 16851  0039F2                     
 16852                           ; BSR set to: 61
 16853                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 16854  0039F2  0E00               	movlw	low _uart1RxStatusBuffer
 16855  0039F4  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16856  0039F6  6ED9               	movwf	fsr2l,c
 16857  0039F8  6ADA               	clrf	fsr2h,c
 16858  0039FA  0E01               	movlw	high _uart1RxStatusBuffer
 16859  0039FC  22DA               	addwfc	fsr2h,f,c
 16860  0039FE  0101               	movlb	1	; () banked
 16861  003A00  82DF               	bsf	indf2,1,c
 16862  003A02                     
 16863                           ; BSR set to: 1
 16864                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 16865  003A02  D802               	call	i2u555_48
 16866  003A04  EF0E  F01D         	goto	i2u555_49
 16867  003A08                     i2u555_48:
 16868  003A08  0005               	push	
 16869  003A0A  6EFA               	movwf	pclath,c
 16870  003A0C  0100               	movlb	0	; () banked
 16871  003A0E  51ED               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 16872  003A10  6EFD               	movwf	tosl,c
 16873  003A12  51EE               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 16874  003A14  6EFE               	movwf	tosh,c
 16875  003A16  6AFF               	clrf	tosu,c
 16876  003A18  50FA               	movf	pclath,w,c
 16877  003A1A  0012               	return		;indir
 16878  003A1C                     i2u555_49:
 16879  003A1C                     i2l7532:
 16880                           
 16881                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 16882  003A1C  013D               	movlb	61	; () banked
 16883  003A1E  A3F9               	btfss	249,1,b	;volatile
 16884  003A20  EF14  F01D         	goto	i2u556_41
 16885  003A24  EF16  F01D         	goto	i2u556_40
 16886  003A28                     i2u556_41:
 16887  003A28  EF2B  F01D         	goto	i2l7538
 16888  003A2C                     i2u556_40:
 16889  003A2C                     
 16890                           ; BSR set to: 61
 16891                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 16892  003A2C  0E00               	movlw	low _uart1RxStatusBuffer
 16893  003A2E  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16894  003A30  6ED9               	movwf	fsr2l,c
 16895  003A32  6ADA               	clrf	fsr2h,c
 16896  003A34  0E01               	movlw	high _uart1RxStatusBuffer
 16897  003A36  22DA               	addwfc	fsr2h,f,c
 16898  003A38  0101               	movlb	1	; () banked
 16899  003A3A  84DF               	bsf	indf2,2,c
 16900  003A3C                     
 16901                           ; BSR set to: 1
 16902                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 16903  003A3C  D802               	call	i2u557_48
 16904  003A3E  EF2B  F01D         	goto	i2u557_49
 16905  003A42                     i2u557_48:
 16906  003A42  0005               	push	
 16907  003A44  6EFA               	movwf	pclath,c
 16908  003A46  0100               	movlb	0	; () banked
 16909  003A48  51EB               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 16910  003A4A  6EFD               	movwf	tosl,c
 16911  003A4C  51EC               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 16912  003A4E  6EFE               	movwf	tosh,c
 16913  003A50  6AFF               	clrf	tosu,c
 16914  003A52  50FA               	movf	pclath,w,c
 16915  003A54  0012               	return		;indir
 16916  003A56                     i2u557_49:
 16917  003A56                     i2l7538:
 16918                           
 16919                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 16920  003A56  0E00               	movlw	low _uart1RxStatusBuffer
 16921  003A58  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 16922  003A5A  6ED9               	movwf	fsr2l,c
 16923  003A5C  6ADA               	clrf	fsr2h,c
 16924  003A5E  0E01               	movlw	high _uart1RxStatusBuffer
 16925  003A60  22DA               	addwfc	fsr2h,f,c
 16926  003A62  50DF               	movf	indf2,w,c
 16927  003A64  B4D8               	btfsc	status,2,c
 16928  003A66  EF37  F01D         	goto	i2u558_41
 16929  003A6A  EF39  F01D         	goto	i2u558_40
 16930  003A6E                     i2u558_41:
 16931  003A6E  EF48  F01D         	goto	i2l7542
 16932  003A72                     i2u558_40:
 16933  003A72                     
 16934                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 16935  003A72  D802               	call	i2u559_48
 16936  003A74  EF46  F01D         	goto	i2u559_49
 16937  003A78                     i2u559_48:
 16938  003A78  0005               	push	
 16939  003A7A  6EFA               	movwf	pclath,c
 16940  003A7C  0100               	movlb	0	; () banked
 16941  003A7E  51E9               	movf	_UART1_ErrorHandler& (0+255),w,b
 16942  003A80  6EFD               	movwf	tosl,c
 16943  003A82  51EA               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 16944  003A84  6EFE               	movwf	tosh,c
 16945  003A86  6AFF               	clrf	tosu,c
 16946  003A88  50FA               	movf	pclath,w,c
 16947  003A8A  0012               	return		;indir
 16948  003A8C                     i2u559_49:
 16949                           
 16950                           ;mcc_generated_files/uart1.c: 290:     } else {
 16951  003A8C  EF4A  F01D         	goto	i2l486
 16952  003A90                     i2l7542:
 16953                           
 16954                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 16955  003A90  ECC9  F026         	call	_UART1_RxDataHandler	;wreg free
 16956  003A94                     i2l486:
 16957  003A94  0012               	return		;funcret
 16958  003A96                     __end_of_UART1_Receive_ISR:
 16959                           	opt callstack 0
 16960                           
 16961 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 16962 ;; Defined at:
 16963 ;;		line 309 in file "mcc_generated_files/uart1.c"
 16964 ;; Parameters:    Size  Location     Type
 16965 ;;		None
 16966 ;; Auto vars:     Size  Location     Type
 16967 ;;		None
 16968 ;; Return value:  Size  Location     Type
 16969 ;;                  1    wreg      void 
 16970 ;; Registers used:
 16971 ;;		None
 16972 ;; Tracked objects:
 16973 ;;		On entry : 0/0
 16974 ;;		On exit  : 0/0
 16975 ;;		Unchanged: 0/0
 16976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16981 ;;Total ram usage:        0 bytes
 16982 ;; Hardware stack levels used:    1
 16983 ;; This function calls:
 16984 ;;		Nothing
 16985 ;; This function is called by:
 16986 ;;		_UART1_Initialize
 16987 ;;		_UART1_Receive_ISR
 16988 ;; This function uses a non-reentrant model
 16989 ;;
 16990                           
 16991                           	psect	text131
 16992  005136                     __ptext131:
 16993                           	opt callstack 0
 16994  005136                     _UART1_DefaultOverrunErrorHandler:
 16995                           	opt callstack 15
 16996  005136  0012               	return		;funcret
 16997  005138                     __end_of_UART1_DefaultOverrunErrorHandler:
 16998                           	opt callstack 0
 16999                           
 17000 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 17001 ;; Defined at:
 17002 ;;		line 307 in file "mcc_generated_files/uart1.c"
 17003 ;; Parameters:    Size  Location     Type
 17004 ;;		None
 17005 ;; Auto vars:     Size  Location     Type
 17006 ;;		None
 17007 ;; Return value:  Size  Location     Type
 17008 ;;                  1    wreg      void 
 17009 ;; Registers used:
 17010 ;;		None
 17011 ;; Tracked objects:
 17012 ;;		On entry : 0/0
 17013 ;;		On exit  : 0/0
 17014 ;;		Unchanged: 0/0
 17015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17020 ;;Total ram usage:        0 bytes
 17021 ;; Hardware stack levels used:    1
 17022 ;; This function calls:
 17023 ;;		Nothing
 17024 ;; This function is called by:
 17025 ;;		_UART1_Initialize
 17026 ;;		_UART1_Receive_ISR
 17027 ;; This function uses a non-reentrant model
 17028 ;;
 17029                           
 17030                           	psect	text132
 17031  005138                     __ptext132:
 17032                           	opt callstack 0
 17033  005138                     _UART1_DefaultFramingErrorHandler:
 17034                           	opt callstack 15
 17035  005138  0012               	return		;funcret
 17036  00513A                     __end_of_UART1_DefaultFramingErrorHandler:
 17037                           	opt callstack 0
 17038                           
 17039 ;; *************** function _UART1_DefaultErrorHandler *****************
 17040 ;; Defined at:
 17041 ;;		line 311 in file "mcc_generated_files/uart1.c"
 17042 ;; Parameters:    Size  Location     Type
 17043 ;;		None
 17044 ;; Auto vars:     Size  Location     Type
 17045 ;;		None
 17046 ;; Return value:  Size  Location     Type
 17047 ;;                  1    wreg      void 
 17048 ;; Registers used:
 17049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17050 ;; Tracked objects:
 17051 ;;		On entry : 0/0
 17052 ;;		On exit  : 0/0
 17053 ;;		Unchanged: 0/0
 17054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17059 ;;Total ram usage:        0 bytes
 17060 ;; Hardware stack levels used:    1
 17061 ;; Hardware stack levels required when called:    1
 17062 ;; This function calls:
 17063 ;;		_UART1_RxDataHandler
 17064 ;; This function is called by:
 17065 ;;		_UART1_Initialize
 17066 ;;		_UART1_Receive_ISR
 17067 ;; This function uses a non-reentrant model
 17068 ;;
 17069                           
 17070                           	psect	text133
 17071  005120                     __ptext133:
 17072                           	opt callstack 0
 17073  005120                     _UART1_DefaultErrorHandler:
 17074                           	opt callstack 14
 17075  005120                     
 17076                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 17077  005120  ECC9  F026         	call	_UART1_RxDataHandler	;wreg free
 17078  005124  0012               	return		;funcret
 17079  005126                     __end_of_UART1_DefaultErrorHandler:
 17080                           	opt callstack 0
 17081                           
 17082 ;; *************** function _UART1_RxDataHandler *****************
 17083 ;; Defined at:
 17084 ;;		line 297 in file "mcc_generated_files/uart1.c"
 17085 ;; Parameters:    Size  Location     Type
 17086 ;;		None
 17087 ;; Auto vars:     Size  Location     Type
 17088 ;;		None
 17089 ;; Return value:  Size  Location     Type
 17090 ;;                  1    wreg      void 
 17091 ;; Registers used:
 17092 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17093 ;; Tracked objects:
 17094 ;;		On entry : 0/0
 17095 ;;		On exit  : 0/0
 17096 ;;		Unchanged: 0/0
 17097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17102 ;;Total ram usage:        0 bytes
 17103 ;; Hardware stack levels used:    1
 17104 ;; This function calls:
 17105 ;;		Nothing
 17106 ;; This function is called by:
 17107 ;;		_UART1_Receive_ISR
 17108 ;;		_UART1_DefaultErrorHandler
 17109 ;; This function uses a non-reentrant model
 17110 ;;
 17111                           
 17112                           	psect	text134
 17113  004D92                     __ptext134:
 17114                           	opt callstack 0
 17115  004D92                     _UART1_RxDataHandler:
 17116                           	opt callstack 15
 17117  004D92                     
 17118                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 17119  004D92  0E00               	movlw	low _uart1RxBuffer
 17120  004D94  2446               	addwf	_uart1RxHead^0,w,c	;volatile
 17121  004D96  6ED9               	movwf	fsr2l,c
 17122  004D98  6ADA               	clrf	fsr2h,c
 17123  004D9A  0E02               	movlw	high _uart1RxBuffer
 17124  004D9C  22DA               	addwfc	fsr2h,f,c
 17125  004D9E  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 17126  004DA4  2A46               	incf	_uart1RxHead^0,f,c	;volatile
 17127  004DA6                     
 17128                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 17129  004DA6  0E3F               	movlw	63
 17130  004DA8  6446               	cpfsgt	_uart1RxHead^0,c	;volatile
 17131  004DAA  EFD9  F026         	goto	i2u501_41
 17132  004DAE  EFDB  F026         	goto	i2u501_40
 17133  004DB2                     i2u501_41:
 17134  004DB2  EFDD  F026         	goto	i2l7010
 17135  004DB6                     i2u501_40:
 17136  004DB6                     
 17137                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 17138  004DB6  0E00               	movlw	0
 17139  004DB8  6E46               	movwf	_uart1RxHead^0,c	;volatile
 17140  004DBA                     i2l7010:
 17141                           
 17142                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 17143  004DBA  2A44               	incf	_uart1RxCount^0,f,c	;volatile
 17144  004DBC  0012               	return		;funcret
 17145  004DBE                     __end_of_UART1_RxDataHandler:
 17146                           	opt callstack 0
 17147                           
 17148                           ;
 17149                           ; Interrupt Vector Table @ 0x8
 17150                           ;
 17151                           
 17152                           	psect	ivt0x8
 17153  000008                     __pivt0x8:
 17154                           	opt callstack 0
 17155  000008                     ivt0x8_base:
 17156                           	opt callstack 0
 17157                           
 17158                           ; Vector 0 : SWINT
 17159  000008  144D               	dw	_Default_ISR shr (0+2)
 17160                           
 17161                           ; Vector 1 : HLVD
 17162  00000A  144D               	dw	_Default_ISR shr (0+2)
 17163                           
 17164                           ; Vector 2 : OSF
 17165  00000C  144D               	dw	_Default_ISR shr (0+2)
 17166                           
 17167                           ; Vector 3 : CSW
 17168  00000E  144D               	dw	_Default_ISR shr (0+2)
 17169                           
 17170                           ; Vector 4 : NVM
 17171  000010  144D               	dw	_Default_ISR shr (0+2)
 17172                           
 17173                           ; Vector 5 : SCAN
 17174  000012  144D               	dw	_Default_ISR shr (0+2)
 17175                           
 17176                           ; Vector 6 : CRC
 17177  000014  144D               	dw	_Default_ISR shr (0+2)
 17178                           
 17179                           ; Vector 7 : IOC
 17180  000016  144D               	dw	_Default_ISR shr (0+2)
 17181                           
 17182                           ; Vector 8 : INT0
 17183  000018  144D               	dw	_Default_ISR shr (0+2)
 17184                           
 17185                           ; Vector 9 : ZCD
 17186  00001A  144D               	dw	_Default_ISR shr (0+2)
 17187                           
 17188                           ; Vector 10 : AD
 17189  00001C  144D               	dw	_Default_ISR shr (0+2)
 17190                           
 17191                           ; Vector 11 : ADT
 17192  00001E  144D               	dw	_Default_ISR shr (0+2)
 17193                           
 17194                           ; Vector 12 : CMP1
 17195  000020  144D               	dw	_Default_ISR shr (0+2)
 17196                           
 17197                           ; Vector 13 : SMT1
 17198  000022  144D               	dw	_Default_ISR shr (0+2)
 17199                           
 17200                           ; Vector 14 : SMT1PRA
 17201  000024  144D               	dw	_Default_ISR shr (0+2)
 17202                           
 17203                           ; Vector 15 : SMT1PRW
 17204  000026  144D               	dw	_Default_ISR shr (0+2)
 17205                           
 17206                           ; Vector 16 : DMA1SCNT
 17207  000028  144D               	dw	_Default_ISR shr (0+2)
 17208                           
 17209                           ; Vector 17 : DMA1DCNT
 17210  00002A  144D               	dw	_Default_ISR shr (0+2)
 17211                           
 17212                           ; Vector 18 : DMA1OR
 17213  00002C  144D               	dw	_Default_ISR shr (0+2)
 17214                           
 17215                           ; Vector 19 : DMA1A
 17216  00002E  144D               	dw	_Default_ISR shr (0+2)
 17217                           
 17218                           ; Vector 20 : SPI1RX
 17219  000030  144D               	dw	_Default_ISR shr (0+2)
 17220                           
 17221                           ; Vector 21 : SPI1TX
 17222  000032  144D               	dw	_Default_ISR shr (0+2)
 17223                           
 17224                           ; Vector 22 : SPI1
 17225  000034  144D               	dw	_Default_ISR shr (0+2)
 17226                           
 17227                           ; Vector 23 : I2C1RX
 17228  000036  144D               	dw	_Default_ISR shr (0+2)
 17229                           
 17230                           ; Vector 24 : I2C1TX
 17231  000038  144D               	dw	_Default_ISR shr (0+2)
 17232                           
 17233                           ; Vector 25 : I2C1
 17234  00003A  144D               	dw	_Default_ISR shr (0+2)
 17235                           
 17236                           ; Vector 26 : I2C1E
 17237  00003C  144D               	dw	_Default_ISR shr (0+2)
 17238                           
 17239                           ; Vector 27 : U1RX
 17240  00003E  1343               	dw	_UART1_rx_vect_isr shr (0+2)
 17241                           
 17242                           ; Vector 28 : U1TX
 17243  000040  1337               	dw	_UART1_tx_vect_isr shr (0+2)
 17244                           
 17245                           ; Vector 29 : U1E
 17246  000042  144D               	dw	_Default_ISR shr (0+2)
 17247                           
 17248                           ; Vector 30 : U1
 17249  000044  144D               	dw	_Default_ISR shr (0+2)
 17250                           
 17251                           ; Vector 31 : TMR0
 17252  000046  13C2               	dw	_TMR0_ISR shr (0+2)
 17253                           
 17254                           ; Vector 32 : TMR1
 17255  000048  144D               	dw	_Default_ISR shr (0+2)
 17256                           
 17257                           ; Vector 33 : TMR1G
 17258  00004A  144D               	dw	_Default_ISR shr (0+2)
 17259                           
 17260                           ; Vector 34 : TMR2
 17261  00004C  144D               	dw	_Default_ISR shr (0+2)
 17262                           
 17263                           ; Vector 35 : CCP1
 17264  00004E  144D               	dw	_Default_ISR shr (0+2)
 17265                           
 17266                           ; Vector 36 : Undefined
 17267  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17268                           
 17269                           ; Vector 37 : NCO1
 17270  000052  144D               	dw	_Default_ISR shr (0+2)
 17271                           
 17272                           ; Vector 38 : CWG1
 17273  000054  144D               	dw	_Default_ISR shr (0+2)
 17274                           
 17275                           ; Vector 39 : CLC1
 17276  000056  144D               	dw	_Default_ISR shr (0+2)
 17277                           
 17278                           ; Vector 40 : INT1
 17279  000058  144D               	dw	_Default_ISR shr (0+2)
 17280                           
 17281                           ; Vector 41 : CMP2
 17282  00005A  144D               	dw	_Default_ISR shr (0+2)
 17283                           
 17284                           ; Vector 42 : DMA2SCNT
 17285  00005C  144D               	dw	_Default_ISR shr (0+2)
 17286                           
 17287                           ; Vector 43 : DMA2DCNT
 17288  00005E  144D               	dw	_Default_ISR shr (0+2)
 17289                           
 17290                           ; Vector 44 : DMA2OR
 17291  000060  144D               	dw	_Default_ISR shr (0+2)
 17292                           
 17293                           ; Vector 45 : DMA2A
 17294  000062  144D               	dw	_Default_ISR shr (0+2)
 17295                           
 17296                           ; Vector 46 : I2C2RX
 17297  000064  144D               	dw	_Default_ISR shr (0+2)
 17298                           
 17299                           ; Vector 47 : I2C2TX
 17300  000066  144D               	dw	_Default_ISR shr (0+2)
 17301                           
 17302                           ; Vector 48 : I2C2
 17303  000068  144D               	dw	_Default_ISR shr (0+2)
 17304                           
 17305                           ; Vector 49 : I2C2E
 17306  00006A  144D               	dw	_Default_ISR shr (0+2)
 17307                           
 17308                           ; Vector 50 : U2RX
 17309  00006C  144D               	dw	_Default_ISR shr (0+2)
 17310                           
 17311                           ; Vector 51 : U2TX
 17312  00006E  144D               	dw	_Default_ISR shr (0+2)
 17313                           
 17314                           ; Vector 52 : U2E
 17315  000070  144D               	dw	_Default_ISR shr (0+2)
 17316                           
 17317                           ; Vector 53 : U2
 17318  000072  144D               	dw	_Default_ISR shr (0+2)
 17319                           
 17320                           ; Vector 54 : TMR3
 17321  000074  144D               	dw	_Default_ISR shr (0+2)
 17322                           
 17323                           ; Vector 55 : TMR3G
 17324  000076  144D               	dw	_Default_ISR shr (0+2)
 17325                           
 17326                           ; Vector 56 : TMR4
 17327  000078  144D               	dw	_Default_ISR shr (0+2)
 17328                           
 17329                           ; Vector 57 : CCP2
 17330  00007A  144D               	dw	_Default_ISR shr (0+2)
 17331                           
 17332                           ; Vector 58 : Undefined
 17333  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17334                           
 17335                           ; Vector 59 : CWG2
 17336  00007E  144D               	dw	_Default_ISR shr (0+2)
 17337                           
 17338                           ; Vector 60 : CLC2
 17339  000080  144D               	dw	_Default_ISR shr (0+2)
 17340                           
 17341                           ; Vector 61 : INT2
 17342  000082  144D               	dw	_Default_ISR shr (0+2)
 17343                           
 17344                           ; Vector 62 : Undefined
 17345  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17346                           
 17347                           ; Vector 63 : Undefined
 17348  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17349                           
 17350                           ; Vector 64 : Undefined
 17351  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17352                           
 17353                           ; Vector 65 : Undefined
 17354  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17355                           
 17356                           ; Vector 66 : Undefined
 17357  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17358                           
 17359                           ; Vector 67 : Undefined
 17360  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17361                           
 17362                           ; Vector 68 : Undefined
 17363  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17364                           
 17365                           ; Vector 69 : Undefined
 17366  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17367                           
 17368                           ; Vector 70 : TMR5
 17369  000094  144D               	dw	_Default_ISR shr (0+2)
 17370                           
 17371                           ; Vector 71 : TMR5G
 17372  000096  144D               	dw	_Default_ISR shr (0+2)
 17373                           
 17374                           ; Vector 72 : TMR6
 17375  000098  144D               	dw	_Default_ISR shr (0+2)
 17376                           
 17377                           ; Vector 73 : CCP3
 17378  00009A  144D               	dw	_Default_ISR shr (0+2)
 17379                           
 17380                           ; Vector 74 : CWG3
 17381  00009C  144D               	dw	_Default_ISR shr (0+2)
 17382                           
 17383                           ; Vector 75 : CLC3
 17384  00009E  144D               	dw	_Default_ISR shr (0+2)
 17385                           
 17386                           ; Vector 76 : Undefined
 17387  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17388                           
 17389                           ; Vector 77 : Undefined
 17390  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17391                           
 17392                           ; Vector 78 : Undefined
 17393  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17394                           
 17395                           ; Vector 79 : Undefined
 17396  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17397                           
 17398                           ; Vector 80 : CCP4
 17399  0000A8  144D               	dw	_Default_ISR shr (0+2)
 17400                           
 17401                           ; Vector 81 : CLC4
 17402  0000AA  144D               	dw	_Default_ISR shr (0+2)
 17403  0000AC                     ivt0x8_undefint:
 17404                           	opt callstack 0
 17405  0000AC  00FF               	reset	
 17406                           
 17407                           	psect	text135
 17408  000000                     __ptext135:
 17409                           	opt callstack 0
 17410  000000                     
 17411                           	psect	rparam
 17412  0000                     tosu	equ	0x3FFF
 17413                           tosh	equ	0x3FFE
 17414                           tosl	equ	0x3FFD
 17415                           stkptr	equ	0x3FFC
 17416                           pclatu	equ	0x3FFB
 17417                           pclath	equ	0x3FFA
 17418                           pcl	equ	0x3FF9
 17419                           tblptru	equ	0x3FF8
 17420                           tblptrh	equ	0x3FF7
 17421                           tblptrl	equ	0x3FF6
 17422                           tablat	equ	0x3FF5
 17423                           prodh	equ	0x3FF4
 17424                           prodl	equ	0x3FF3
 17425                           indf0	equ	0x3FEF
 17426                           postinc0	equ	0x3FEE
 17427                           postdec0	equ	0x3FED
 17428                           preinc0	equ	0x3FEC
 17429                           plusw0	equ	0x3FEB
 17430                           fsr0h	equ	0x3FEA
 17431                           fsr0l	equ	0x3FE9
 17432                           wreg	equ	0x3FE8
 17433                           indf1	equ	0x3FE7
 17434                           postinc1	equ	0x3FE6
 17435                           postdec1	equ	0x3FE5
 17436                           preinc1	equ	0x3FE4
 17437                           plusw1	equ	0x3FE3
 17438                           fsr1h	equ	0x3FE2
 17439                           fsr1l	equ	0x3FE1
 17440                           bsr	equ	0x3FE0
 17441                           indf2	equ	0x3FDF
 17442                           postinc2	equ	0x3FDE
 17443                           postdec2	equ	0x3FDD
 17444                           preinc2	equ	0x3FDC
 17445                           plusw2	equ	0x3FDB
 17446                           fsr2h	equ	0x3FDA
 17447                           fsr2l	equ	0x3FD9
 17448                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    266
    Data        18
    BSS         1483
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      94
    BANK0           160      2     158
    BANK1           256      0     194
    BANK2           256      0     256
    BANK3           256      0     189
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReq.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReq.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReq.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReq.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    nwkDataReq.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> message(BANK0[5]), 

    nwkDataReq.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReq.next.next	PTR void  size(2) Largest target is 0
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    handler$0	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    S3050$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    S1183$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S1211$4$0	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S1420$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> message(BANK0[5]), phyRxBuffer(BANK2[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> message(BANK0[5]), phyRxBuffer(BANK2[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), 
		 -> NULL(NULL[0]), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReq.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReq.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5683...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5683.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5492...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5492.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5123...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5123.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK2[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK2[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4030...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4030.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3808...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3808.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK1[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK1[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S3082PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK2[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK2[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(2) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S3050SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S3050SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK0[13]), nwkTxAckWaitTimer(BANK0[13]), nwkRxDuplicateRejectionTimer(BANK0[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3186...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3186.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3186	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2951...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2951.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S1200NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), NULL(NULL[0]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK1[70]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2396...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2396.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_1972...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_1972.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    S1420NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S1420NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 5
		 -> message(BANK0[5]), 

    S1420NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S1420NWK_DataReq_t$next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK0[19]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> appDataInd(), nwkRxServiceDataInd(), 

    S1211NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> appDataInd(), nwkRxServiceDataInd(), NULL(NULL[0]), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> appDataInd(), nwkRxServiceDataInd(), NULL(NULL[0]), 

    S1183$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S1182NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK2[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK2[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(COMRAM[2]), cadTimeOut(COMRAM[2]), txTimeOut(COMRAM[2]), 

    get_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(COMRAM[2]), cadTimeOut(COMRAM[2]), txTimeOut(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _test_send->_NWK_DataReq
    _test_init->_PHY_SetChannel
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _radio_engine->_initRadio
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_PHY_DataInd
    _PHY_DataInd->_nwkFrameAlloc
    _NWK_TaskHandler->_nwkRxTaskHandler
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkRxTaskHandler->_nwkRouteFrame
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxSendAck->_nwkTxFrame
    _nwkRxIndicateFrame->_nwkRxServiceDataInd
    _nwkRxServiceDataInd->_nwkRouteErrorReceived
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _PHY_TaskHandler->_radio_engine

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  339655
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                          _test_init
                          _test_send
 ---------------------------------------------------------------------------------
 (1) _test_send                                            0     0      0     243
                        _NWK_DataReq
 ---------------------------------------------------------------------------------
 (2) _NWK_DataReq                                          2     0      2     243
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _test_init                                            0     0      0   26633
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                     _PHY_SetChannel
                     _PHY_SetRxState
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   18115
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    7852
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  223103
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    6933
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2183
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2363
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    1561
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  154647
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  154647
                                              0 BANK0      2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   18316
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0   10770
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (4) _set_timer0base                                       4     0      4     578
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _get_timer0base                                       4     2      2     490
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   28136
                                             25 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _receive
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          7     5      2    2506
                                             18 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0   61523
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   23004
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    1690
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     664
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   17825
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    5385
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   31751
                                             54 COMRAM     4     4      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   10293
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2    3039
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    3960
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1425
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     668
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     179
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    1962
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     293
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2    9516
                                             49 COMRAM     5     3      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    5139
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2    4085
                                             23 COMRAM    26    24      2
                         _appDataInd *
                _nwkRxServiceDataInd *
        nwkFrame@nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (6) nwkFrame@nwkFramePayloadSize                          4     2      2     155
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  6     4      2    2849
                                             17 COMRAM     6     4      2
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     8     6      2     848
                                              7 COMRAM     8     6      2
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     558
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                5     3      2    1913
                                             12 COMRAM     5     3      2
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    1735
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     244
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                           2     0      2      64
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   10872
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    5339
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     244
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     378
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0    6768
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2    6433
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    3354
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     422
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     422
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2135
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1491
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1046
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     268
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    1164
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                              12     6      6     986
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     944
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     223
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0   88616
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0   88010
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0   88010
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     111
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    5476
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0    9959
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   13117
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4     958
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4     981
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1123
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1784
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5518
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _setFrequency                                        12     8      4    7830
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    6434
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _receive                                              1     1      0   18115
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (4) _implicitHeaderMode                                   0     0      0    6343
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (4) _explicitHeaderMode                                   0     0      0    6343
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    6343
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _SX1276Write                                          2     1      1    5385
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (6) _SX1276WriteBuffer                                    5     2      3     890
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (7) _SPI1_WriteBlock                                      6     2      4     446
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SX1276Read                                           2     2      0     958
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (6) _SX1276ReadBuffer                                     5     2      3     890
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (7) _SPI1_ReadBlock                                       6     2      4     268
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (8) _SPI1_ExchangeByte                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2396
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     515
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1586
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     606
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     290
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     860
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      90
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (13) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
         _nwkDataReqSendFrame
           _memcpy
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
             nwkFrame@nwkFramePayloadSize *
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _test_init
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
   _test_send
     _NWK_DataReq

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     2AD      37       16.7%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      BD      11       73.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C2       7       75.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37B      32        0.0%
DATA                 0      0     628       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 05 15:42:44 2020

              nwkRouteFrameReceived@discovery 0011                             _SPI1_ExchangeByte 4E5C  
                                  _RSSITarget 00F6                                _setCodingRate4 46F6  
                                 __CFG_CP$OFF 000000                                            l62 4D64  
                                          l65 4EE4                                            l92 4FB0  
                          ?_SPI1_ExchangeByte 0001                              ??_PHY_SetRxState 0012  
                           ??_PHY_TaskHandler 003A                __end_of_nwkRouteNormalizeRanks 48F0  
                              _SYS_TimerStart 4C4A                       ??_nwkDataReqTaskHandler 0031  
                    __size_of_start_radio_cad 0010                                   __CFG_LVP$ON 000000  
                     ?_nwkTxDelayTimerHandler 0012                                           l102 4E6A  
                                         l104 4E7A                                           l120 49FC  
                                         l105 4E7E                                           l126 4976  
                                         l331 4FF8                                           l334 4EA2  
                                         l502 50BE                                           l159 4B36  
                                         l511 50A2                                           l328 4EC4  
                                         l505 50B0                                           l274 4A7C  
                                         l186 50DA                                           l514 5094  
                                         l427 3F80                                           l508 50CC  
                                         l633 459C                                           l910 481C  
                                         l823 426A                                           l585 42EA  
                                         l818 5104                                           l850 4022  
                                         l763 448C                                           l843 390C  
                                         l827 0D52                                           l835 3B54  
                                         l772 4F04                                           l828 0C38  
                                         l942 464C                                           l766 4F62  
                                         l769 4F44                                           l882 3934  
                                         l875 3846                                           l963 4932  
                                         l948 414C                                           l869 4D90  
                                         l966 469E                                           l878 4F7C  
                                         l886 39D0                                           l982 1714  
                                         l798 5078                                           l967 46A2  
                                         l959 331C                                           l889 4A3C  
                                         l898 4CAA                                           l978 48AA  
                                         l986 15E2                                           _GIE 01FE97  
                                         l996 2A9E                      __end_of_DIO0_Receive_ISR 3C12  
                                         _SNR 004D                                           _cad 2DFA  
                           _NWK_GroupIsMember 47D6                            nwkRouteFrame@frame 0033  
                             nwkRxSendAck@ack 002E                       __size_of_PMD_Initialize 0024  
                         ??_SPI1_ExchangeByte 0002                                           prod 003FF3  
                                         tosl 003FFD                                           wreg 003FE8  
                    nwkDataReqSendFrame@frame 002F                            _UART1_Transmit_ISR 481E  
                               __CFG_BBEN$OFF 000000                            ?_NWK_GroupIsMember 0002  
                            _SX1276ReadBuffer 4E10                         __end_of_SYS_TimerInit 50FC  
                                 ?_SX1276Read 0001                               PHY_DataReq@data 0011  
                                __CFG_ZCD$OFF 000000                        NWK_GroupIsMember@group 0002  
                             ?_get_timer0base 0002                                          ?_cad 0001  
                                        l1012 296C                                          l1021 34FE  
                                        l1030 48EE                                          l1120 4DE6  
                                        l1017 35E0                                          l1025 43C8  
                                        l1131 45F4                                          l2100 5128  
                                        l1207 14CA                                          l2103 4C48  
                                        l1144 3010                               nwkTxFrame@frame 0024  
                                        l1170 40BC                                          l1154 435C  
                                        l2106 4B6E                                          l1163 0FEE  
                                        l1251 36B2                                          l1139 22DE  
                                        l1340 49BA                                          l1420 1264  
                                        l1237 30E8                                          l2126 3DFE  
                                        l2143 3EDA                                          l2127 3E2E  
                                        l1351 1C8A                                          l1239 3118  
                                        l2136 3EC2                                          l1521 4E12  
                                        l1346 1B64                                          l1515 4FE0  
                                        l1603 4742                                          l1355 26E4  
                                        l1179 09EA                                          l1532 4E0E  
                                        l1372 3CCA                                          l1525 4E36  
                                        l1541 50E6                                          l1701 1CC6  
                                        l1518 503A                                          l1606 4FC8  
                                        l1366 3C7C                                          l1615 504C  
                                        l1359 3410                                          l1375 4E5A  
                                        l1528 4DEA                                          l1640 478C  
                                        l1552 2BC8                                          l1384 3D80  
                                        l1721 511E                                          l1626 5024  
                                        l1730 512C                                          l1396 4BA6  
                                        l1724 510C                                          l1629 500E  
                                        l1549 4AF8                                          l1653 243C  
                                        l1389 46F4                                          l1733 512E  
                                        l2374 31D6                                          l1582 4F96  
                                        l1558 2CE6                                          l1718 1E2C  
                                        l1639 476E                                          l1823 5086  
                                        l1671 505C                                          l1727 4ABA  
                                        l2536 41DC                                          l1752 5118  
                                        l2529 41C4                                          l2801 4BDE  
                                        l1649 22E0                                          l1913 44E8  
                                        l1657 2F06                                          l1826 506A  
                                        l2379 321C                                          l1587 2592  
                                        l1579 0564                                          l6020 4FFE  
                                        l6004 2518                                          l2804 2DF8  
                                        l1693 2158                                          l1749 4542  
                                        l1685 3C10                                          l1917 26FC  
                                        l6030 3E30                                          l6022 5010  
                                        l6110 1806                                          l6102 17BE  
                                        l6006 2582                                          l6014 4F7E  
                                        l1918 2830                                          l4600 4A40  
                                        l7000 50C0                                          l6040 3E78  
                                        l6032 3E40                                          l6024 5014  
                                        l6120 1886                                          l6112 1812  
                                        l6104 17C6                                          l1937 1ABE  
                                        l4610 4A74                                          l4602 4A48  
                                        l6050 3EBC                                          l6042 3E82  
                                        l6034 3E56                                          l6018 4FFA  
                                        l6130 18D2                                          l6122 1888  
                                        l6114 184E                                          l6106 17D2  
                                        l6210 3412                                          l6026 5126  
                             PHY_DataReq@size 0013                                          l2771 181C  
                                        l4612 4A78                                          l4604 4A52  
                                        l4620 42BE                                          l7020 49AE  
                                        l7012 4978                                          l6044 3EA0  
                                        l6036 3E5E                                          l6060 3196  
                                        l6052 311A                                          l6132 18D4  
                                        l6124 188C                                          l6116 185A  
                                        l6108 1804                                          l2764 177C  
                                        l6220 346C                                          l6300 0E30  
                                        l6204 48B0                                          l7100 0FFC  
                                        l6140 4D56                                          l1893 50FA  
                                        l4614 4A7A                                          l4606 4A68  
                                        l4630 42C8                                          l4622 42C0  
                                        l7030 45B6                                          l7022 459E  
                                        l7014 4980                                          l6046 3EB0  
                                        l6038 3E6A                                          l6070 321A  
                                        l6062 31A4                                          l6054 3148  
                                        l6126 18B4                                          l6118 1868  
                                        l2790 1FC4                                          l6230 34DC  
                                        l6222 3484                                          l6214 3438  
                                        l6310 0EB6                                          l6302 0E56  
                                        l6206 48DC                                          l7110 1060  
                                        l7102 101A                                          l6142 4D58  
                                        l6150 4EE2                                          l2767 18EC  
                                        l4608 4A6A                                          l4632 4FE2  
                                        l4624 42C2                                          l4616 4E80  
                                        l7040 4D66                                          l7032 45B8  
                                        l7016 4992                                          l6048 3EB2  
                                        l6080 4178                                          l6064 31B6  
                                        l6056 3158                                          l6128 18C4  
                                        l5600 47DA                                          l6152 4F64  
                                        l6232 34EE                                          l6224 349C  
                                        l6216 3448                                          l6400 1378  
                                        l6160 14FE                                          l6320 0EE0  
                                        l6304 0E86                                          l6208 48DE  
                                        l7120 10C2                                          l7112 106C  
                                        l7104 102A                                          l6240 21F0  
                                        l6136 4D3A                                          l7200 3C1A  
                                        l8000 5066                                          l1897 4C7A  
                                        l4626 42C4                                          l4618 426C  
                                        l7050 4D80                                          l7034 45C8  
                                        l7018 499E                                          l6082 4186  
                                        l6074 414E                                          l5530 49BC  
                                        l6066 31C4                                          l6058 3186  
                                        l2778 1878                                          l6090 1718  
                                        l2786 442A                                          l5610 481A  
                                        l5602 4802                                          l6154 4F74  
                                        l6226 34AC                                          l6218 3458  
                                        l6410 13AA                                          l6402 1380  
                                        l6170 1582                                          l6330 0F48  
                                        l6322 0F18                                          l7122 10E8  
                                        l7130 1136                                          l7114 107C  
                                        l7106 103A                                          l6250 2264  
                                        l6242 2210                                          l6234 215A  
                                        l6138 4D3E                                          l6146 4EC6  
                                        l7210 3CAA                                          l7202 3C22  
                                        l8010 47A6                                          l8002 478E  
                                        l4628 42C6                                          l7052 50FC  
                                        l7060 45FA                                          l7036 45DE  
                                        l7028 45A2                                          l6084 41A4  
                                        l6076 4164                                          l5540 4944  
                                        l5532 49CC                                          l6500 2BBC  
                                        l6068 3214                                          l6092 1728  
                                        l6228 34C4                                          l5700 435E  
                                        l6420 13D8                                          l6412 13AE  
                                        l6404 1384                                          l6260 2F2E  
                                        l6180 15F8                                          l6172 1594  
                                        l6164 1532                                          l6156 14CC  
                                        l6332 0F54                                          l6308 0E8C  
                                        l6316 0EBC                                          l7140 11A0  
                                        l7124 1102                                          l7132 114A  
                                        l7116 109C                                          l7108 104E  
                                        l6252 2282                                          l6236 2184  
                                        l6148 4ECA                                          l7220 3CFA  
                                        l7212 3CBA                                          l7204 3C40  
                                        l8020 47CA                                          l8012 47AA  
                                        l8004 4792                                          l4582 4F98  
                                        l7310 4B26                                          l7302 4AFA  
                                        l7046 4D6A                                          l7062 463A  
                                        l7054 45F6                                          l7038 45E6  
                                        l6086 41B4                                          l6078 416C  
                                        l5526 4E5E                                          l5542 4958  
                                        l5630 4E1C                                          l5534 49DE  
                                        l6094 1736                                          l6510 2BF4  
                                        l5606 4808                                          l5614 464E  
                                        l5622 4866                                          l5702 4394  
                                        l6430 140C                                          l6422 13DC  
                                        l6414 13B2                                          l6406 1388  
                                        l6270 2FA8                                          l6262 2F3E  
                                        l6182 1628                                          l6174 1598  
                                        l6190 169E                                          l6158 14D8  
                                        l6342 0F7C                                          l6334 0F56  
                                        l6318 0EC2                                          l7134 115E  
                                        l7126 1112                                          l7118 10A6  
                                        l6254 22A0                                          l6246 2236  
                                        l6238 21BA                                          l7230 3D70  
                                        l7222 3CFE                                          l7214 3CCC  
                                        l7206 3C44                                          l8014 47AC  
                                        l8006 4794                                          l7320 4576  
                                        l4584 4FAE                                          l7312 4B32  
                                        l7304 4B06                                          l7048 4D7E  
                                        l7072 4C80                                          l7064 463C  
                                        l6088 41BE                                          l6600 2088  
                                        l5528 4E64                                          l5544 495C  
                                        l5632 4E34                                          l5536 49E2  
                                        l6096 1794                                          l6520 2CA2  
                                        l6512 2BF8                                          l6504 2BCC  
                                        l4752 50F2                                          l5608 480A  
                                        l5560 4132                                          l5552 40C2  
                                        l5616 4670                                          l5640 3D82  
                                        l7160 3FA6                                          l7152 3F82  
                                        l5624 4888                                          l5712 331E  
                                        l6440 146C                                          l6432 143C  
                                        l6424 13FC                                          l6416 13CC  
                                        l6408 13A2                                          l6272 2FC0  
                                        l6264 2F4E                                          l6256 2F08  
                                        l6192 16AE                                          l6184 1652  
                                        l6176 15B8                                          l6168 1556  
                                        l5800 1A66                                          l6344 0FBE  
                                        l6336 0F66                                          l6328 0F2C  
                                        l6280 0D54                                          l6360 25CA  
                                        l7080 35EE                                          l7144 11E0  
                                        l7136 116E                                          l7128 1126  
                                        l6248 2246                                          l7224 3D22  
                                        l7216 3CD4                                          l7208 3C68  
                                        l7400 4F28                                          l8016 47B0  
                                        l8008 47A2                                          l7322 457E  
                                        l7314 4544                                          l7306 4B20  
                                        l7330 3EE0                                          l7074 4C98  
                                        l7066 4C7C                                          l6610 211A  
                                        l6602 209C                                          l5538 4934  
                                        l5634 4DEC                                          l6098 17AA  
                                        l6530 018A                                          l6522 00B2  
                                        l6514 2C02                                          l6506 2BDC  
                                        l5650 1E2E                                          l5562 4134  
                                        l5554 40EA                                          l5546 40BE  
                                        l5618 4682                                          l5642 3D8E  
                                        l7170 3FF8                                          l7154 3F92  
                                        l5626 489A                                          l5706 439A  
                                        l5730 33D8                                          l5722 3362  
                                        l5714 3336                                          l6442 1474  
                                        l6434 1444                                          l6426 1404  
                                        l6418 13D4                                          l6274 2FD0  
                                        l6266 2F62                                          l6194 16D2  
                                        l6186 1662                                          l6178 15DE  
                                        l5802 1A76                                          l6346 0FCE  
                                        l6290 0D70                                          l6282 0D5C  
                                        l6370 266A                                          l6362 25E8  
                                        l6354 2594                                          l7090 363E  
                                        l7082 3602                                          l7138 118C  
                                        l7146 1236                                          l6450 46A6  
                                        l7218 3CDC                                          l7226 3D32  
                                        l7402 4F34                                          l7410 41DE  
                                        l8018 47C2                                          l7324 4582  
                                        l7316 456A                                          l7308 4B24  
                                        l7340 3F0A                                          l7332 3EEC  
                                        l7076 4C9A                                          l6612 2130  
                                        l6604 20B0                                          l5628 4E14  
                                        l5636 4DF4                                          l6540 02BA  
                                        l6532 01E2                                          l6524 010A  
                                        l6516 2C0C                                          l6508 2BE4  
                                        l5660 1E9A                                          l5820 37DA  
                                        l5564 4144                                          l5556 411E  
                                        l5644 3D9C                                          l5740 2CE8  
                                        l7172 4010                                          l5572 490E  
                                        l5708 43C6                                          l5724 3380  
                                        l5716 333E                                          l6444 1478  
                                        l6436 1448                                          l6428 1408  
                                        l6380 1266                                          l6276 2FE2  
                                        l6268 2F84                                          l5900 326C  
                                        l6188 1686                                          l6196 16F6  
                                        l5804 1A8A                                          l6348 0FDE  
                                        l6292 0D8C                                          l6372 267E  
                                        l6364 25F8                                          l7084 3616  
                                        l7092 3684                                          l6700 2A4C  
                                        l7404 506C                                          l6460 46B6  
                                        l6452 46AA                                          l6620 504E  
                                        l7228 3D60                                          l7420 424E  
                                        l7412 4212                                          l7326 458E  
                                        l7318 456C                                          l4598 4A3E  
                                        l7350 3F1E                                          l7342 3F0E  
                                        l7334 3EFC                                          l6622 4EE8  
                                        l6614 2146                                          l6606 20F4  
                                        l5638 4E0C                                          l6550 03A6  
                                        l6542 02CE                                          l6534 01F6  
                                        l6526 011E                                          l6518 2C2E  
                                        l5662 1EFA                                          l5654 1E50  
                                        l5830 382E                                          l5822 3812  
                                        l5814 3782                                          l5646 3DBC  
                                        l5742 2D9E                                          l6630 0A32  
                                        l6710 3550                                          l5590 39C8  
                                        l5582 3966                                          l5574 390E  
                                        l5726 33AA                                          l5718 335C  
                                        l5734 33DE                                          l6446 147C  
                                        l6438 144C                                          l6390 1318  
                                        l6382 1272                                          l6278 3000  
                                        l5910 32C6                                          l5902 327C  
                                        l6294 0DBC                                          l6374 2692  
                                        l6366 2624                                          l6358 25BA  
                                        l7086 362A                                          l7078 35E2  
                                        l6198 48AC                                          l6702 2A54  
                                        l7406 5070                                          l6470 46C2  
                                        l7190 432A                                          l7414 4218  
                                        l7360 3F32                                          l7352 3F22  
                                        l7344 3F12                                          l7336 3F02  
                                        l7328 3EDC                                          l6616 2148  
                                        l6608 2104                                          l5752 5028  
                                        l6552 03FE                                          l6544 0326  
                                        l6536 024E                                          l6528 0176  
                                        l6560 048E                                          l6480 4AD2  
                                        l7424 511A                                          l5840 43F6  
                                        l5680 1FB2                                          l5672 1F5E  
                                        l5656 1E62                                          l5832 383E  
                                        l5824 3818                                          l5816 37A2  
                                        l5808 377E                                          l5648 3DCE  
                                        l6640 0B46                                          l6632 0A6E  
                                        l6624 09EC                                          l7168 3FBA  
                                        l6712 3574                                          l5568 48F0  
                                        l5584 3982                                          l5576 3920  
                                        l5728 33BA                                          l6392 132A  
                                        l6384 12A6                                          l5920 3310  
                                        l5912 32CE                                          l5904 328E  
                                        l6296 0DE2                                          l6288 0D60  
                                        l6376 26B6                                          l6368 2638  
                                        l6800 0982                                          l6720 0572  
                                        l6704 2A8E                                          l7408 5074  
                                        l6464 46BC                                          l6456 46B0  
                                        l7192 432C                                          l7184 42F4  
                                        l7440 271E                                          l7432 26E6  
                                        l7416 422A                                          l7370 3F7C  
                                        l7362 3F36                                          l7354 3F26  
                                        l7346 3F16                                          l7338 3F06  
                                        l5746 4FCC                                          l6570 4710  
                                        l6490 2B28                                          l6562 04AC  
                                        l6554 0412                                          l6546 033A  
                                        l6538 0262                                          l6482 4AE2  
                                        l6618 4BA8                                          l5842 43FA  
                                        l5674 1F96                                          l5666 1F14  
                                        l5818 37C6                                          l5594 47D6  
                                        l5690 2890                                          l5682 2832  
                                        l5850 1ACC                                          l6650 0CD8  
                                        l6642 0B60                                          l6634 0A9A  
                                        l6626 0A0E                                          l6714 3588  
                                        l6706 3500                                          l5578 392C  
                                        l6394 133A                                          l6810 3016  
                                        l5906 32B8                                          l5914 32DE  
                                        l5762 44BC                                          l5754 448E  
                                        l5770 18EE                                          l5930 4C6A  
                                        l6298 0DF2                                          l6378 26CE  
                                        l6802 09A2                                          l6722 0582  
                                        l7098 0FF0                                          l7194 433C  
                                        l7186 4314                                          l7178 42EC  
                                        l7442 272A                                          l7450 27C6  
                                        l7426 5106                                          l7418 423E  
                                        l7364 3F3A                                          l7356 3F2A  
                                        l7348 3F1A                                          l7380 444A  
                                        l5748 4FDE                                          l6580 503C  
                                        l6572 4720                                          l6492 2B3C  
                                        l6564 0520                                          l6556 046A  
                                        l6548 0392                                          l6484 4AE6  
                                        l6476 4ABE                                          l6900 23C4  
                                        l5844 440C                                          l5836 43CA  
                                        l5676 1FA8                                          l5668 1F44  
                                        l5828 382C                                          l5692 28B8  
                                        l5684 283E                                          l5860 1B34  
                                        l5852 1AE6                                          l6652 0D22  
                                        l6644 0C66                                          l6636 0AD0  
                                        l6716 35D0                                          l6708 350C  
                                        l5588 3992                                          l8180 40A6  
                                        l5932 4024                                          l5924 4DBE  
                                        l6396 134A                                          l6388 12AC  
                                        l6820 308C                                          l6812 3028  
                                        l5916 32EC                                          l5908 32C4  
                                        l5756 449E                                          l5764 44D4  
                                        l5780 1966                                          l5772 1900  
                                        l6804 09B6                                          l6732 05D8  
                                        l6660 3ACA                                          l8172 1DEE  
                                        l7196 434C                                          l7188 4326  
                                        l7452 27D8                                          l7444 275E  
                                        l7436 2706                                          l7428 4A80  
                                        l7366 3F46                                          l7358 3F2E  
                                        l7470 4EC0                                          l7462 4EA4  
                                        l7390 447C                                          l7382 4462  
                                        l7374 442C                                          l6582 4746  
                                        l6574 4724                                          l6566 46F8  
                                        l6494 2B94                                          l6558 047E  
                                        l6486 4AEC                                          l6478 4ACE  
                                        l6910 23F2                                          l6902 23CE  
                                        l6670 3848                                          l5838 43E6  
                                        l5846 4410                                          l5678 1FAE  
                                        l5694 28D2                                          l5686 285E  
                                        l5870 1BD0                                          l5862 1B4C  
                                        l5854 1AFA                                          l6654 0D42  
                                        l6646 0C8A                                          l6638 0B0A  
                                        l8182 3FDA                                          l5942 405A  
                                        l5934 4040                                          l6398 135E  
                                        l6830 30E4                                          l6822 30A6  
                                        l6814 3042                                          l5918 3300  
                                        l5766 44E6                                          l5758 44B6  
                                        l5790 19D8                                          l5774 1908  
                                        l6806 09DA                                          l6734 05F8  
                                        l6742 0652                                          l6726 05A0  
                                        l6718 0566                                          l6662 3B06  
                                        l8174 46D6                                          l7198 3C12  
                                        l7454 2802                                          l7446 277A  
                                        l7438 270E                                          l7368 3F52  
                                        l7464 4EB4                                          l7392 4484  
                                        l7384 4464                                          l6584 4756  
                                        l6576 472A                                          l6568 4708  
                                        l6496 2BA4                                          l6488 2AA0  
                                        l8184 252C                                          l5960 243E  
                                        l6912 240A                                          l6904 23D8  
                                        l7560 5082                                          l6680 38C8  
                                        l6672 3860                                          l5696 28FE  
                                        l5688 2876                                          l5880 1C62  
                                        l5872 1BE8                                          l5864 1B7E  
                                        l5856 1B0A                                          l5848 1AC0  
                                        l6648 0CB0                                          l5952 406E  
                                        l6832 30F8                                          l6824 30AA  
                                        l6816 3046                                          l6808 3012  
                                        l5792 19FC                                          l5784 1986  
                                        l5776 192C                                          l5928 4C4A  
                                        l6760 0720                                          l6752 06BA  
                                        l6744 0672                                          l6736 061E  
                                        l6728 05BA                                          l6664 3B1A  
                                        l6656 3A96                                          l8176 1200  
                                        l6840 4B72                                          l6920 2E22  
                                        l7456 2814                                          l7448 278A  
                                        l7466 4EB8                                          l7394 4488  
                                        l7386 4474                                          l6594 1FCA  
                                        l6586 476A                                          l6498 2BB0  
                                        l6578 4FB2                                          l5970 2478  
                                        l5962 2450                                          l6914 242C  
                                        l6906 23E2                                          l6682 3904  
                                        l6674 387C                                          l5698 2924  
                                        l5882 1C76                                          l5874 1BFE  
                                        l5866 1B98                                          l5858 1B1A  
                                        l5938 4046                                          l6834 3108  
                                        l6826 30CA                                          l6818 3066  
                                        l5794 1A0E                                          l5786 19A2  
                                        l5778 193C                                          l6770 07E8  
                                        l6762 073E                                          l6738 063E  
                                        l8178 365E                                          l6850 4512  
                                        l6658 3AA6                                          l6666 3B32  
                                        l6690 29CE                                          l6842 4B86  
                                        l6930 2E48                                          l7570 4C2E  
                                        l7468 4EBC                                          l7388 4478  
                                        l6596 2000                                          l6588 1FC6  
                                        l6908 23EC                                          l7556 507A  
                                        l6676 388C                                          l5876 1C1E  
                                        l5868 1BAC                                          l5884 49FE  
                                        l6828 30CE                                          l5796 1A32  
                                        l5788 19C6                                          l6780 0894  
                                        l6772 085E                                          l6764 0742  
                                        l6756 06EE                                          l6748 0690  
                                        l6860 453E                                          l6852 4514  
                                        l6668 3B44                                          l6692 29E0  
                                        l6684 296E                                          l6844 4B96  
                                        l6932 2E5C                                          l6924 2E28  
                                        l6916 2DFA                                          l6836 4E38  
                                        l7396 4F46                                          l7572 4C34  
                                        l7580 4B56                                          l6598 2044  
                                        l5990 24DC                                          l5982 24B4  
                                        l5974 248C                                          l5966 2464  
                                        l6870 2318                                          l6862 22E2  
                                        l7558 507E                                          l6678 38A4  
                                        l5878 1C32                                          l5894 3232  
                                        l5886 321E                                          l5798 1A4E  
                                        l6782 08A4                                          l6774 086E  
                                        l6766 0762                                          l6758 0708  
                                        l6790 08EC                                          l5958 50DC  
                                        l6854 451A                                          l6694 29FE  
                                        l6846 4B9E                                          l6934 2E6A  
                                        l6926 2E2C                                          l6918 2E02  
                                        l6838 4E48                                          l7398 4F52  
                                        l7574 4C3A                                          l7582 4B62  
                                        l6880 2366                                          l6872 2320  
                                        l6864 22FA                                          l5888 322E  
                                        l6792 090C                                          l6784 08B4  
                                        l6776 0872                                          l6768 0772  
                                        l6856 4532                                          l6848 44EA  
                                        l6696 2A1A                                          l6688 2992  
                                        l6960 2EC6                                          l6944 2E80  
                                        l6936 2E6E                                          l6928 2E30  
                                        l7568 4C16                                          l7576 4B38  
                                        l5994 24F0                                          l5986 24C8  
                                        l5978 24A0                                          l6890 2390  
                                        l6882 236C                                          l6874 2322  
                                        l6866 22FC                                          l5898 3250  
                                        l6794 0932                                          l6786 08C4  
                                        l6778 0884                                          l6858 4534  
                                        l6698 2A2E                                          l6970 3B76  
                                        l6962 2EE4                                          l6946 2E94  
                                        l7930 1C8C                                          l7578 4B4E  
                                        l6892 239C                                          l6884 2372  
                                        l6876 232C                                          l6868 2300  
                                        l6796 094C                                          l6788 08D8  
                                        l6980 3BE2                                          l6972 3B84  
                                        l6948 2EB0                                          l7940 1CB0  
                                        l7932 1C90                                          l6990 50CE  
                                        l5998 2504                                          l6894 23A0  
                                        l6886 2386                                          l6878 2336  
                                        l6798 095C                                          l6982 3BE8  
                                        l6974 3B92                                          l6958 2EB6  
                                        l7950 1CE0                                          l7942 1CB8  
                                        l7934 1C94                                          l6992 5096  
                                        l6896 23AA                                          l6888 238A  
                                        l6984 3BF8                                          l6976 3BA0  
                                        l6968 3B56                                          l7960 1D32  
                                        l7952 1CE8                                          l7944 1CBE  
                                        l7936 1C98                                          l6994 5088  
                                        l6898 23B4                                          l6986 3BFE  
                                        l6978 3BDA                                          l7970 1D64  
                                        l7962 1D42                                          l7954 1D06  
                                        l7946 1CD4                                          l7938 1CA0  
                        nwkDataReqConfirm@req 0002                                          l6996 50B2  
                                        l6988 3C0A                                          l7980 1DC4  
                                        l7972 1D6C                                          l7956 1D1A  
                                        l7964 1D48                                          l7948 1CDC  
                                        l6998 50A4                                          l7982 1DCE  
                                        l7974 1D8A                                          l7958 1D2E  
                        _SYS_TimerTaskHandler 26E6                                          l7976 1DA2  
                                        l7968 1D50                                          l7978 1DA6  
                                        l7986 1DD8                                          l7994 5114  
                                        l7996 505E                                          l7998 5062  
                                        u3020 4E7A                                          u3100 3920  
                                        u3021 4E76                                          u3101 391C  
                                        _LATA 003FBA                                          u3030 49FC  
                                        u3110 3962                                          _LATB 003FBB  
                                        u3031 49F8                                          u3111 395E  
                                        _LATC 003FBC                                          u3040 4976  
                                        u3200 3DFE                                          u3120 3982  
                                        u4000 0DF2                                          u3041 4972  
                                        u3201 3DFA                                          u3121 397E  
                                        u4001 0DEE                                          u3210 1E4C  
                                        u3050 40EA                                          u3130 39C8  
                                        u3211 1E48                                          u3051 40E6  
                                        u3131 39C4                                          u3220 1E96  
                                        u3140 4802                                          u3060 410C  
                                        u3300 4394                                          u4100 12A6  
                                        u4020 0E30                                          u3221 1E92  
                                        u3141 47FE                                          u3061 4106  
                                        u3301 4390                                          u4101 12A2  
                                        u4021 0E2C                                          u3230 1F10  
                                        u3150 481A                                          u3070 411E  
                                        u3310 335C                                          u4110 1378  
                                        u4030 0E56                                          u4014 0E16  
                                        u3231 1F0C                                          u3151 4816  
                                        u3071 411A                                          u3311 3358  
                                        u4111 1374                                          u4031 0E52  
                                        u4015 0E12                                          u4200 2BDC  
                                        u3240 1F5A                                          u3080 4144  
                                        u3160 4682                                          u3320 3380  
                                        u4120 13A2                                          u3400 19D8  
                                        u5000 3BA0                                          u4201 2BD8  
                                        u3241 1F56                                          u3081 4140  
                                        u3161 467E                                          u3321 337C  
                                        u4121 139E                                          u3401 19D4  
                                        u5001 3B9C                                          u4210 2BF4  
                                        u3250 1FC4                                          u3066 410E  
                                        u3090 490A                                          u3170 489A  
                                        u3330 33AA                                          u4130 13CC  
                                        u3410 1A0E                                          u4211 2BF0  
                                        u3251 1FC0                                          u3091 4906  
                                        u3171 4896                                          u3331 33A6  
                                        u4131 13C8                                          u3411 1A0A  
                                        u5020 45C8                    __end_of_explicitHeaderMode 5026  
                                        u4300 03FE                                          u4220 2C4C  
                                        u3420 37A2                                          u3260 285E  
                                        u3340 340C                                          u4140 13FC  
                                        u3500 324C                                          u4060 0F48  
                                        u4044 0EA0                                          u5100 10E8  
                                        u2365 4A72                                          u5021 45C4  
                                        u4301 03FA                                          u3421 379E  
                                        u3261 285A                                          u3181 3D88  
                                        u3341 3408                                          u4141 13F8  
                                        u3501 3248                                          u4061 0F44  
                                        u4045 0E9C                                          u5101 10E4  
                                        u2366 4A74                                          u5030 4D90  
                                        u4310 046A                                          u4230 010A  
                                        u3430 383E                                          u3270 2890  
                                        u3190 3D9C                                          u3350 2DE6  
                                        u4150 143C                                          u3510 326C  
                                        u4070 0F66                                          u4054 0F0C  
                                        u5110 1102                                          u5031 4D8C  
                                        u4311 0466                                          u4231 0106  
                                        u3431 383A                                          u3271 288C  
                                        u3191 3D98                                          u4151 1438  
                                        u3511 3268                                          u4071 0F62  
                                        u4055 0F08                                          u5111 10FE  
                                        u5040 464C                                          u3600 3148  
                                        u4320 04CA                                          u4240 0176  
                                        u3440 442A                                          u3280 28D2  
                                        u4400 0AB8                                          u4160 146C  
                                        u3520 328E                                          u3360 44B6  
                                        u4080 0F78                                          u5120 118C  
                                        u5200 3C68                                          u5041 4648  
                                        u3601 3144                                          u4241 0172  
                                        u4225 2C42                                          u3441 4426  
                                        u3281 28CE                                          u4401 0AB0  
                                        u4161 1468                                          u3521 328A  
                                        u3361 44B2                                          u4081 0F74  
                                        u5121 1188                                          u5201 3C64  
                                        u5050 4CAA                                          u4330 4708  
                                        u3610 3186                                          u4250 01E2  
                                        u3290 28FE                                          u3450 1AE6  
                                        u3530 32B8                                          u3370 44E6  
                                        u4090 25B6                                          u5210 3CAA  
                                        u5051 4CA6                                          u4331 4704  
                                        u3611 3182                                          u4251 01DE  
                                        u3291 28FA                                          u3355 2DD4  
                                        u3451 1AE2                                          u3531 32B4  
                                        u3371 44E2                                          u4091 25B2  
                                        u5211 3CA6                                          u4340 4720  
                                        u3620 31A4                                          u3700 17AA  
                                        u4260 024E                                          u4180 4ACE  
                                        u4500 38C8                                          u3460 1B34  
                                        u4420 0AEE                                          u3540 32DE  
                                        u3380 1900                                          u5060 36B2  
                                        u5140 1264                                          u5220 3CBA  
                                        u4341 471C                                          u3621 31A0  
                                        u3701 17A6                                          u4325 04C0  
                                        u4261 024A                                          u4181 4ACA  
                                        u4501 38C4                                          u3461 1B30  
                                        u4421 0AE6                                          u3541 32DA  
                                        u3381 18FC                                          u5061 36AE  
                                        u5141 1260                                          u5221 3CB6  
                                        u4350 4756                                          u3630 31C4  
                                        u3710 1800                                          u4270 02BA  
                                        u4190 4AE2                                          u3470 1B7E  
                                        u5150 4022                                          u3390 1966  
                                        u3550 4C6A                                          u4510 298E  
                                        u5070 101A                                          u5230 3CFA  
                                        u4351 4752                                          u3631 31C0  
                                        u3711 17FC                                          u4271 02B6  
                                        u4191 4ADE                                          u3471 1B7A  
                                        u5151 401E                                          u3391 1962  
                                        u3551 4C66                                          u4511 298A  
                                        u5071 1016                                          u5231 3CF6  
                                        u4360 2158                                          u3640 3214  
                                        u3720 184A                                          u4280 0326  
                                        u3480 1B98                                          u4440 0B28  
                                        u3560 4040                                          u3800 1552  
                                        u4600 05D4                                          u4520 29E0  
                                        u5080 1060                                          u5240 3D22  
                                        u5160 4314                                          u5400 277A  
                                        u4361 2154                                          u3641 3210  
                                        u3721 1846                                          u4281 0322  
                                        u3481 1B94                                          u4441 0B20  
                                        u3561 403C                                          u3801 154E  
                                        u4601 05D0                                          u4521 29DC  
                                        u5081 105C                                          u5241 3D1E  
                                        u5161 4310                                          u5401 2776  
                                        u3570 3E56                                          u3650 4164  
                                        u3730 1868                                          u4290 0392  
                                        u3490 1C1E                                          u4418 0ABA  
                                        u4370 0A0E                                          u4178 14B8  
                                        u3810 1594                                          u4610 05F8  
                                        u4530 29FA                                          u5138 11CA  
                                        u5090 10C2                                          u5250 3D60  
                                        u5170 433C                                          u3571 3E52  
                                        u3651 4160                                          u3731 1864  
                                        u4291 038E                                          u3491 1C1A  
                                        u4371 0A0A                                          u4179 14CA  
                                        u3811 1590                                          u4611 05F4  
                                        u4531 29F6                                          u5139 11DC  
                                        u5091 10BE                                          u5251 3D5C  
                                        u5171 4338                                          u3580 3E78  
                                        u3660 4186                                          u3740 1878  
                                        u4460 0B60                                          u4380 0A96  
                                        u3900 3434                                          u3820 15B8  
                                        u4700 0772                                          u4620 061E  
                                        u4540 2A1A                                          u5260 3D70  
                                        u5180 434C                                          u5420 27D8  
                                        _PMD0 0039C0                                          u3581 3E74  
                                        u3661 4182                                          u3741 1874  
                                        u4461 0B5C                                          u4381 0A90  
                                        u3901 3430                                          u3821 15B4  
                                        u4701 076E                                          u4621 061A  
                                        u4541 2A16                                          u5261 3D6C  
                                        u5181 4348                                          u5421 27D4  
                                        _PMD1 0039C1                                          u3590 3EA0  
                                        u3670 41A4                                          u3750 1886  
                                        u4438 0AF0                                          u4390 0A98  
                                        u3830 15DE                                          u4710 0794  
                                        u4630 063E                                          u4470 3ACA  
                                        u4550 2A4C                                          u3910 2184  
                                        u5190 3C40                                          u5430 2802  
                                        _PMD2 0039C2                                          u3591 3E9C  
                                        u3671 41A0                                          u3751 1882  
                                        u3831 15DA                                          u4711 078E  
                                        u4631 063A                                          u4471 3AC6  
                                        u4551 2A48                                          u3911 2180  
                                        u5191 3C3C                                          u5431 27FE  
                                        _PMD3 0039C3                                          u3760 18C4  
                                        u3680 1728                                          u3840 15F4  
                                        u4800 094C                                          u4720 0796  
                                        u4640 0672                                          u4480 3B44  
                                        u4560 2A8E                                          u3920 21BA  
                                        u5440 2814                                          _PMD4 0039C4  
                                        u3761 18C0                                          u3681 1724  
                                        u3841 15EE                                          u4801 0948  
                                        u4641 066E                                          u4481 3B40  
                                        u4561 2A8A                                          u3921 21B6  
                                        u5441 2810                                          _PMD5 0039C5  
                                        u5370 4474                                          u3770 18D2  
                                        u3690 1736                                          u4490 3860  
                                        u4458 0B2A                                          u4570 3550  
                                        u3850 15F6                                          u4810 0982  
                                        u4730 080A                                          u4650 068C  
                                        u3930 21F0                                          u5418 27B4  
                                        _PMD6 0039C6                                          u5371 4470  
                                        u3771 18CE                                          u3691 1732  
                                        u4491 385C                                          u4571 354C  
                                        u4811 097E                                          u4731 0804  
                                        u4651 0688                                          u3931 21EC  
                                        u5419 27C6                                          _PMD7 0039C7  
                                        u4900 30F8                                          u3860 1628  
                                        u3780 14FE                                          u4820 09A2  
                                        u4740 080C                                          u4660 06B6  
                                        u4580 059C                                          u3940 220C  
                                        u5380 422A                                          u4901 30F4  
                                        u3861 1624                                          u3781 14FA  
                                        u4821 099E                                          u4661 06B2  
                                        u4581 0598                                          u3941 2208  
                                        u5381 4226                                          u3870 1652  
                                        u3790 152E                                          u4830 09DA  
                                        u4750 086E                                          u4670 06EA  
                                        u4590 05BA                                          u3950 2232  
                                        u4910 2E22                                          u5390 26F8  
                                        u3871 164E                                          u3791 152A  
                                        u4831 09D6                                          u4751 086A  
                                        u4671 06E6                                          u4591 05B6  
                                        u3951 222E                                          u4911 2E1E  
                                        u5391 26F4                                          u3960 2F2A  
                                        u4840 3042                                          u3880 1662  
                                        u4760 08A4                                          u4680 0708  
                                        u4920 2E6A                                          u3961 2F26  
                                        u4841 303E                                          u3881 165E  
                                        u4761 08A0                                          u4681 0704  
                                        u4921 2E66                                          i1l58 4C10  
                                        u4850 3066                                          u4770 08C4  
                                        u4690 0762                                          u3890 48EE  
                                        u4930 2E7C                                          i1l59 4C14  
                                        u4851 3062                                          u4771 08C0  
                                        u4691 075E                                          u3891 48EA  
                                        u4931 2E78                                          u4860 308C  
                                        u3980 0D8C                                          u4780 090C  
                                        u4940 2EB0                                          u5900 1D8A  
                                        u4861 3088                                          u3981 0D88  
                                        u4781 0908                                          u4941 2EAC  
                                        u5901 1D86                                          u4870 30A6  
                                        u3990 0DBC                                          u4790 0932  
                                        u4950 2EC6                                          u5910 1DA2  
                                        u3975 2F82                                          u4871 30A2  
                                        u3991 0DB8                                          u4791 092E  
                                        u4951 2EC2                                          u5911 1D9E  
                                        u3976 2F84                                          u4880 30CA  
                                        u4960 2EE4                                          u5920 1DC4  
                                        u4881 30C6                                          u4961 2EE0  
                                        u5921 1DC0                                          u4890 30E4  
                                        u4970 2F02                                          u5850 1CB0  
                                        u5930 47C2                                          u4891 30E0  
                                        u4971 2EFE                                          u5851 1CAC  
                                        u5931 47BE                                          u4980 3B84  
                                        u5860 1CD4                                          u4981 3B80  
                                        u5861 1CD0                                          u4990 3B92  
                                        u5870 1D06                                          u4991 3B8E  
                                        u5871 1D02                                          u5880 1D1A  
                                        u5881 1D16                                          u5890 1D42  
                                        u5947 22EC                                          u5891 1D3E  
                                        u5957 230A                                          u5967 23FC  
                           ?_PHY_SetShortAddr 0002                                          _RSSI 004F  
                  _nwkRouteFrameReceived$2600 0012                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUE 003A81                              PHY_DataInd@frame 0018  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
            __end_of_nwkTxAckWaitTimerHandler 3CCC                           ??_NWK_GroupIsMember 0004  
                                        _idle 50DC                                          _main 478E  
                         nwkRouteFrame@header 0035                              ?_NWK_TaskHandler 0001  
                                        _rand 2CE8                                          _seed 00DE  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          fsr2l 003FD9  
                          ??_PHY_SetShortAddr 0004                        fp__nwkRxServiceDataInd 0000  
                     __size_of_SPI1_ReadBlock 0044                      nwkRxRejectDuplicate@diff 001A  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                                NWK_DataReq@req 0002  
                   __end_of_SPI1_ExchangeByte 4E80                 ??_UART1_SetTxInterruptHandler 0004  
  nwkRxDuplicateRejectionTimerHandler@restart 0014                        __end_of_setCodingRate4 4744  
                               __CFG_CSWEN$ON 000000                             _UART1_rx_vect_isr 4D0C  
                                ___param_bank 000000                    ??_nwkRxHandleReceivedFrame 002B  
                           nwkFrameFree@frame 0002                              _SYS_TimerStarted 448E  
                     ??_nwkRxHandleIndication 0034                            ?_UART1_rx_vect_isr 0001  
                                       ??_cad 0011                        __end_of_SYS_TimerStart 4C7C  
                     __end_of_TMR0_Initialize 4B38                __end_of_nwkTxDelayTimerHandler 3D82  
              ??_TMR0_DefaultInterruptHandler 0001                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0001                              nwkTxFrame@header 0028  
               __end_of_OSCILLATOR_Initialize 4FFA                      ??_nwkRouteSendRouteError 002F  
                                ?_SX1276Write 000F                       __end_of_SYS_TaskHandler 506C  
                                       ?_idle 0001                     __end_of_NWK_GroupIsMember 481E  
                                       ?_main 0001                                         ?_rand 001A  
                               __CFG_WDTE$OFF 000000                            _implicitHeaderMode 4FFA  
                       nwkDataReqConfirm@prev 0006                               __end_of___lldiv 3EDC  
                             __end_of___llmod 41DE                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                __CFG_DEBUG$OFF 000000  
                                       _U1UIR 003DF8                                         _U1RXB 003DE8  
                                 computeFRF@i 002F                                         i1l183 4CD8  
                                       _U1TXB 003DEA                                         i1l179 4F20  
                                       i1l189 5130                                         i2l279 5134  
                                       i2l473 4D38                                         i2l490 4DBC  
                                       i2l467 4D08                                         i2l476 4860  
                                       i2l493 5138                                         i2l486 3A94  
                                       i2l479 4864                                         i2l496 5136  
                         ??_UART1_rx_vect_isr 0001                                         i2l499 5124  
                           ?_NWK_OpenEndpoint 0002                                         _OSCEN 0039DD  
                                       _TMR0H 003FB7                                         _TMR0L 003FB6  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                   _Default_ISR 5134  
           __size_of_TMR0_SetInterruptHandler 000E                     ?_TMR0_SetInterruptHandler 0002  
                          ??_NWK_OpenEndpoint 0004                              __end_of_TMR0_ISR 4F28  
                           _UART1_tx_vect_isr 4CDC                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                    __end_of_NWK_RouteNextHop 46A4                           ?_implicitHeaderMode 0001  
                            __end_of_PHY_Init 5120                 nwkRouteSendRouteError@command 002F  
                       __end_of_Timer0Handler 4C16                         ?_SYS_TimerTaskHandler 0001  
                                       _nwkIb 0060                              __end_of_NWK_Init 448E  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                             __end_of_receive 478E                                         _srand 4BA8  
                                       pclath 003FFA                                         tablat 003FF5  
                            _nwkTxTaskHandler 0FF0                             nwkRxSendAck@frame 002A  
                         nwkDataReqTxConf@req 0008                   nwkTxConvertPhyStatus@status 0004  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 50A4  
                 _UART1_SetRxInterruptHandler 5096                  __size_of_nwkRxServiceDataInd 009A  
             nwkTxAckWaitTimerHandler@restart 0016           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 513A     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5138                       SX1276WriteBuffer@buffer 0009  
                         ??_UART1_tx_vect_isr 0001                              __end_of_SYS_Init 5088  
                   __end_of_UART1_rx_vect_isr 4D3A                      __size_of_SPI1_Initialize 001A  
                  __size_of_setPreambleLength 0018                                nwkFrameAlloc@i 0012  
                           nwkTxConfirm@frame 0002                               ?_setCodingRate4 0001  
                             __initialization 36B4                    __end_of_NWK_RouteFindEntry 414E  
                        ??_implicitHeaderMode 0011                                  __end_of_idle 50E8  
                                __end_of_main 47D6                                  __end_of_rand 2DFA  
                           nwkFrameNext@frame 0002                   SYS_TimerTaskHandler@elapsed 001E  
                              __CFG_SAFEN$OFF 000000                   ??_UART1_DefaultErrorHandler 0001  
                             ?_SYS_TimerStart 0010                           __size_of_SX1276Read 0018  
                  __end_of_NWK_RouteFreeEntry 4934                              _need_radio_reset 0050  
                            ??_CRC_Initialize 0002                                        ??_idle 0011  
                                      ??_main 003B                                        ??_rand 001C  
                              __CFG_PR1WAY$ON 000000                                 __activetblptr 000003  
                 __size_of_getSignalBandwidth 0156                   __size_of_setSignalBandwidth 04B4  
        __size_of_UART1_SetTxInterruptHandler 000E                     __end_of_UART1_tx_vect_isr 4D0A  
                              __CFG_MVECEN$ON 000000                    __end_of_nwkRxIndicateFrame 14CC  
                         computeFRF@frequency 0023                              _UART1_Initialize 3EDC  
                              _nwkDataReqInit 50FC                  DIO0_Receive_ISR@packetLength 001A  
                         NWK_RouteNextHop@dst 0008                             ??_start_radio_cad 0011  
                __end_of_nwkRxRejectDuplicate 0FF0                  __size_of_nwkDataReqSendFrame 0368  
                            ___llmod@dividend 0002                                        ?_srand 0002  
                                      _ANSELA 003A40                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                         __end_of_nwkFrameAlloc 3848  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _U1CON0 003DF2                      nwkRxHandleIndication@ack 0036  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _RB0PPS 003A08  
                          __CFG_PWRTS$PWRT_64 000000                                        _RC0PPS 003A10  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC7PPS 003A17  
                              __CFG_WDTCCS$SC 000000                                        i1l7300 4C0A  
                                      i1l7460 4CC0                                        i1l7294 4BE0  
                                      i1l7296 4BF2                                        i2l7010 4DBA  
                                      i2l7002 4D92                                        i1l7298 4BF8  
                                      i1l7458 4CAC                                        i2l7004 4DA4  
                                      i2l7006 4DA6                                        i1l7590 4F1C  
                                      i2l7008 4DB6                                        i1l7584 4F0E  
                                      _INLVLA 003A44                                        i1l7586 4F12  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i1l7588 4F16                                        _INLVLE 003A84  
                                      i2l7520 4854                                        i2l7512 481E  
                                      i2l7600 4CF0                                        i2l7530 3A02  
                                      i2l7602 4D0C                                        i2l7522 4858  
                                      i2l7514 4830                                        i2l7372 5120  
                                      i2l7540 3A72                                        i2l7532 3A1C  
                                      i2l7524 39D2                                        i2l7604 4D20  
                                      i2l7516 4842                                        i2l7542 3A90  
                                      i2l7534 3A2C                                        i2l7526 39E2  
                                      i2l7518 4844                                        _TABLAT 003FF5  
                                      i2l7536 3A3C                                        i2l7528 39F2  
                                      i2l7538 3A56                             ?_nwkDataReqTxConf 0004  
                                      i2l7598 4CDC                                        _OSCFRQ 0039DF  
                                      _NVMDAT 0039E3                         _UART1_SetErrorHandler 50C0  
                              placeTimer@prev 000C                              __end_of___xxtofl 18EE  
                          ??_nwkDataReqTxConf 0006                            PHY_DataConf@status 0005  
                  __size_of_SPI1_ExchangeByte 0024                                __CFG_XINST$OFF 000000  
                               ?_radio_engine 0001                                  ?_PHY_DataInd 0013  
                                ?_PHY_DataReq 0011                                        ___flge 311A  
                            __end_of_fhssList FFF1                                        ___omul 3D82  
                              __CFG_STVREN$ON 000000                                        _crcObj 00E6  
                                   ??___lldiv 001E                                     ??___llmod 000A  
                                      _memcpy 43CA                              ?_TMR0_Initialize 0001  
                    __end_of_nwkRxTaskHandler 36B4                                        _memset 1E2E  
                                      clear_0 371C                                        clear_1 372E  
                                      clear_2 373C                                        clear_3 374E  
                                      clear_4 375A                                        clear_5 3766  
                            setCodingRate4@cr 0012                                        _timers 003B  
           __size_of_nwkTxAckWaitTimerHandler 00BA                    __size_of_NWK_GroupIsMember 0048  
             __size_of_nwkRouteSendRouteError 00EE                              ?_SYS_TaskHandler 0001  
                   ?_nwkTxAckWaitTimerHandler 0012                __size_of_nwkTxConvertPhyStatus 0052  
               __end_of_nwkTxConvertPhyStatus 46F6                                _PMD_Initialize 4E80  
                                __pdataCOMRAM 005D                                  __packetIndex 0053  
                      __end_of_nwkDataReqInit 5106                __size_of_nwkRouteFrameReceived 024A  
                                   ??_receive 0011                 __end_of_nwkRouteFrameReceived 1716  
                     _setSpreadingFactor$6798 0027                                  __mediumconst FEF4  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                   __end_ofNWK_LinearizeLqi@val FFFA  
                                      srand@s 0002                        ??_SYS_TimerTaskHandler 0019  
                                ?_NWK_DataReq 0002                         __end_of_TMR0_CallBack 4CDA  
 UART1_SetTxInterruptHandler@InterruptHandler 0002   UART1_SetRxInterruptHandler@InterruptHandler 0002  
    TMR0_SetInterruptHandler@InterruptHandler 0002          __end_of_UART1_SetOverrunErrorHandler 50B2  
       __size_of_UART1_SetOverrunErrorHandler 000E                  _UART1_SetOverrunErrorHandler 50A4  
                   _UART1_DefaultErrorHandler 5120                 __size_of_INTERRUPT_Initialize 0040  
                __size_of_UART1_RxDataHandler 002C                                    ___flge@ff1 0010  
                                  ___flge@ff2 0014                       ??_nwkRouteErrorReceived 000F  
                                ___xxtofl@arg 000C                                  ___xxtofl@exp 000B  
                           _SYSTEM_Initialize 4EA4                                  ___xxtofl@val 0002  
                            PHY_SetRxState@rx 0001                                    __accesstop 0060  
                     __end_of__initialization 3778                                  ?_NWK_SetAddr 0004  
                             SX1276Write@addr 0010                      __size_of_SPI1_WriteBlock 0042  
                             SX1276Write@data 000F                                _SPI1_ReadBlock 4934  
                          ?_SYSTEM_Initialize 0001                            _getSpreadingFactor 4F7E  
                                  _cadCounter 0051                             ?_nwkTxAckReceived 0008  
                          _setSpreadingFactor 2BCA                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 002E                               _PHY_TaskHandler 5114  
                     SYS_TimerTaskHandler@cnt 001D                                ??_radio_engine 00FC  
                          ??_nwkTxAckReceived 000A              __end_of_nwkRxHandleReceivedFrame 09EC  
                                  _cadTimeOut 0057                                __pcstackCOMRAM 0001  
                    __end_of_SX1276ReadBuffer 4E38                  __size_of_nwkFrameCommandInit 0040  
                                __pidataBANK0 510E                                  __pidataBANK1 50E8  
                          nwkTxConfirm@status 0004                           ??_SYSTEM_Initialize 0007  
                         ?_getSpreadingFactor 000F                                   placeTimer@t 000E  
                                   ?_TMR0_ISR 0001                           ?_setSpreadingFactor 0001  
              nwkRxHandleReceivedFrame@header 0031                                ivt0x8_undefint 00AC  
                           PHY_SetPanId@panId 0002                                     ?_PHY_Init 0001  
                           ??_SPI1_Initialize 0002                      nwkRxIndicateFrame@header 0024  
              nwkRxHandleReceivedFrame@member 002E                                 __end_of_srand 4BE0  
                       SX1276WriteBuffer@addr 000C                                     ?_NWK_Init 0001  
                                 receive@size 0011          __size_ofnwkFrame@nwkFramePayloadSize 002A  
          ??rand@nwkFrame@nwkFramePayloadSize 0004             ?rand@nwkFrame@nwkFramePayloadSize 0002  
                       SX1276WriteBuffer@size 000B                        __end_of_PMD_Initialize 4EA4  
                       SPI1_ExchangeByte@data 0002                      nwkDataReqTaskHandler@req 0033  
                          _spi1_configuration FFFA                            __size_of_enableCrc 0012  
              __size_of_nwkDataReqTaskHandler 00A2                    __size_of_UART1_tx_vect_isr 002E  
                           ?_DIO0_Receive_ISR 0001                 __end_of_nwkDataReqTaskHandler 4024  
                            ??_get_timer0base 0004                          __size_of_SX1276Write 0016  
                             ?_nwkDataReqInit 0001                                     ?_SYS_Init 0001  
                              _nwkFrameFrames 03BD                     _UART1_FramingErrorHandler 00ED  
                          ??_DIO0_Receive_ISR 001A                          ??_getSpreadingFactor 0013  
                                ??_SX1276Read 000D                          ??_setSpreadingFactor 0023  
                   __end_of_SYSTEM_Initialize 4EC6                      __end_of_SYS_TimerStarted 44EA  
                             __CFG_IVT1WAY$ON 000000                                       ??_srand 0004  
                               ?_setFrequency 0023                        __end_of_SPI1_ReadBlock 4978  
                                  __pbssBANK0 0060                                    __pbssBANK1 0100  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
               ?_UART1_SetOverrunErrorHandler 0002                        ?_UART1_SetErrorHandler 0002  
                       __end_of_nwkRouteFrame 35E2                        _nwkRouteSendRouteError 3412  
                                  _appDataInd 5126                            __size_of_initRadio 015E  
                                  __pnvCOMRAM 005B                  __size_of_nwkTxBroadcastFrame 0152  
                 nwkTxBroadcastFrame@newFrame 0027                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                             setTxPower@power 0011                       setPreambleLength@length 0011  
                                     ?___flge 0010              __end_of_TMR0_SetInterruptHandler 50DC  
                          _explicitHeaderMode 5010                                       ?___omul 0002  
                             _nwkDataReqQueue 003F                                    ??_TMR0_ISR 0001  
                             __CFG_PPS1WAY$ON 000000                            NWK_OpenEndpoint@id 0004  
                        _nwkRxRejectDuplicate 0D54                             _nwkDataReqConfirm 3848  
                     __size_of_set_timer0base 0020                                    ??_PHY_Init 003A  
                   __size_of_PHY_SetShortAddr 0002                           nwkTxAckReceived@ind 0008  
                                     ?_memcpy 0002                                       ?_memset 0002  
              __size_of_nwkRxHandleIndication 0108                           ___omul@multiplicand 000A  
                                  ??_NWK_Init 0006                            __end_of_SX1276Read 4FE2  
                           _SX1276WriteBuffer 4DE8                 __end_of_nwkRxHandleIndication 311A  
                    __end_of_nwkTxTaskHandler 1266                            ?_nwkDataReqConfirm 0002  
                                     _CRCACCH 003963                                       _CRCACCL 003962  
                             ?_PMD_Initialize 0001                                       _CRCDATH 003961  
                                     _CRCDATL 003960                             _UART1_Receive_ISR 39D2  
                                     _CRCCON0 003968                                       _CRCCON1 003969  
                          __size_of_nwkRxInit 0058                           _nwkRxServiceDataInd 4024  
                          __size_of_nwkTxInit 0044                           ?_explicitHeaderMode 0001  
                                     _CRCXORH 003967                                       _CRCXORL 003966  
                               ?_nwkFrameFree 0002                            ?_SX1276WriteBuffer 0009  
                               ?_nwkFrameInit 0001                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                                 ?_nwkFrameNext 0002  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0002  
                               computeFRF@num 002B                                 appDataInd@ind 0012  
                          __size_of_test_init 0034                                    ??_SYS_Init 003A  
                          __size_of_test_send 0038                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                       nwkRouteNormalizeRanks@i 0003  
                         ??_nwkDataReqConfirm 0004                                       _IVTLOCK 003FD4  
                                     _TBLPTRH 003FF7                                       _TBLPTRL 003FF6  
                                     _SPI1CLK 003D1C                                       _TBLPTRU 003FF8  
                                     _SPI1RXB 003D10                                       _NVMADRH 0039E1  
                                     _NVMADRL 0039E0                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _NVMCON2 0039E6  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                             ?_NWK_RouteNextHop 0008  
                         ??_SX1276WriteBuffer 000C                                ??_setFrequency 0027  
                         ??_UART1_Receive_ISR 0001                               placeTimer@timer 0002  
                     __end_of_PHY_TaskHandler 511A                         nwkTxAckReceived@frame 000E  
                             ?_SPI1_ReadBlock 0003                            ??_NWK_RouteNextHop 000B  
                                  _computeFRF 1FC6                                     NWK_Init@i 0006  
                               ?_nwkGroupInit 0001                       __size_of_nwkRouteRemove 0046  
                            ??_setCodingRate4 0011                          ?_nwkRxServiceDataInd 0012  
                        ??_explicitHeaderMode 0011                                       _TXPower 00A3  
                   __size_of_NWK_OpenEndpoint 0020                     INTERRUPT_Initialize@state 0002  
                           __end_of_enableCrc 504E                                    _dwellTimer 00A2  
                                  _packetRSSI 004E                                       __Hparam 0000  
                            ??_SYS_TimerStart 0012                                       __Lparam 0000  
                    __end_of_UART1_Initialize 3F82                     __end_of_nwkDataReqConfirm 390E  
                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                             ??_SPI1_WriteBlock 0007  
                               ?_PHY_DataConf 0001                                 ?_nwkRxSendAck 002A  
                               ?_nwkTxConfirm 0002                                       cad@RSSI 0012  
                         _nwkDataReqSendFrame 09EC                               __size_of___flge 0104  
                       ?_nwkRxRejectDuplicate 0012                           nwkRouteRemove@entry 000B  
                    __size_of_NWK_TaskHandler 000E                                       _cadDone 0052  
                   __end_of_SX1276WriteBuffer 4E10                               __size_of___omul 00AE  
                                     ___lldiv 3E30                                       ___llmod 414E  
                      __size_of_SYS_TimerInit 000A                         nwkRxIndicateFrame@ind 0026  
                   __end_of_UART1_Receive_ISR 3A96                                       cad@temp 0014  
                        __size_of_PHY_DataInd 0186                          __size_of_PHY_DataReq 005A  
                                  _current_sf 004C                               _start_radio_cad 504E  
                                     _channel 004B                                       __pcinit 36B4  
                             __size_of_memcpy 0062                               __size_of_memset 0198  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0048  
                     __size_of_PHY_SetChannel 003E                                ??_nwkFrameFree 0004  
                                     __ptext0 478E                                       __ptext1 4B38  
                                     __ptext2 41DE                                       __ptext3 4C16  
                                     __ptext4 5106                                       __ptext5 4A7E  
                                     __ptext6 4F28                                       __ptext7 512C  
                                     __ptext8 4F46                                       __ptext9 512E  
                              ??_nwkFrameInit 0002                                ??_nwkFrameNext 0004  
                    SPI1_WriteBlock@blockSize 0005                                       _fhssReg 0300  
                           __end_of_initRadio 243E                               __CFG_WRTAPP$OFF 000000  
                       _OSCILLATOR_Initialize 4FE2                                 ?_nwkRouteInit 0001  
                                __size_of_cad 010E                                    _placeTimer 18EE  
                                  ??___xxtofl 0006                            _NWK_RouteFindEntry 40BE  
                                     _message 00F7                                       _receive 4744  
                    nwkFrameCommandInit@frame 0002                               _radio_state_var 0049  
                    ??_PIN_MANAGER_Initialize 0002                               __CFG_WRTSAF$OFF 000000  
           __size_of_nwkRxHandleReceivedFrame 0486                          __end_of_radio_engine 1E2E  
                   ?_nwkRxHandleReceivedFrame 0029                          ?_nwkDataReqSendFrame 002A  
                               ?_PHY_SetPanId 0002                            _NWK_RouteFreeEntry 48F0  
                     __size_of_PHY_SetRxState 0008                    __size_of_SYSTEM_Initialize 0022  
                         SYS_TimerStart@timer 0010                          end_of_initialization 3778  
                         ?_NWK_RouteFindEntry 0002                                     _SCANHADRH 00397A  
                                   _SCANHADRL 003979                                     _SCANHADRU 00397B  
                         __implicitHeaderMode 0054                                ??_nwkGroupInit 0002  
                        __size_of_NWK_DataReq 008E                                     _SCANLADRH 003977  
                                   _SCANLADRL 003976                                     _SCANLADRU 003978  
                                  _nwkDataReq 00A4          nwkRxDuplicateRejectionTimerHandler@i 0015  
                              ___omul@product 0012                         ??_nwkRxServiceDataInd 0014  
                                     memcpy@d 0008                                       memcpy@n 0006  
                                     memcpy@s 000A                                   ?_appDataInd 0012  
                                     memset@c 0004                                       memset@k 000A  
                                     memset@n 0006                                       memset@s 000C  
         __end_of_UART1_SetTxInterruptHandler 5096                   _UART1_SetTxInterruptHandler 5088  
                         ?_NWK_RouteFreeEntry 0002                             __end_of_nwkRxInit 45F6  
                          _nwkRxIndicateFrame 1266                   nwkTxDelayTimerHandler@frame 0017  
                           __end_of_nwkTxInit 49BC                                    _setTxPower 4ABC  
                       NWK_RouteNewEntry@iter 0007                           nwkRxSendAck@command 002C  
                 nwkTxDelayTimerHandler@timer 0012                          __size_of_NWK_SetAddr 001E  
              ??_UART1_SetOverrunErrorHandler 0004                               ___lldiv@divisor 001A  
                             ___lldiv@counter 0022                             __end_of_test_init 4C4A  
                              ??_PHY_DataConf 0005                             __end_of_test_send 4B70  
                              ??_nwkRxSendAck 002C                                ??_nwkTxConfirm 0005  
                    ??_nwkRouteNormalizeRanks 0002                                    _nwkTxFrame 1AC0  
                                   _SPI1TCNTL 003D12                           ?_nwkRxIndicateFrame 0018  
                 __size_of_implicitHeaderMode 0016                                       postdec1 003FE5  
                                     postdec2 003FDD                                     _SPI1SSPPS 003AE0  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                         nwkDataReqTxConf@frame 0004  
                        ??_NWK_RouteFindEntry 0005                        __size_of_Timer0Handler 0036  
                            fp__Timer0Handler 0000                     __size_of_nwkDataReqTxConf 00C0  
                         _UART1_RxDataHandler 4D92                         __CFG_WDTCPS$WDTCPS_31 000000  
                  __end_of_getSignalBandwidth 2594                             initRadio@wideRSSI 0038  
                  __end_of_setSignalBandwidth 0566                         nwkTxTaskHandler@frame 0016  
                           ?_nwkRxTaskHandler 0001                    nwkRxHandleIndication@frame 0032  
                    _TMR0_SetInterruptHandler 50CE                                     _PORTBbits 003FCB  
                        ??_NWK_RouteFreeEntry 0004                                ??_nwkRouteInit 0002  
                          ??_nwkRxTaskHandler 0037                                    _test_timer 005D  
                       setFrequency@frequency 0023                                 ___xxtofl@sign 000A  
                         SPI1_ReadBlock@block 0003                                     _TRISCbits 003FC4  
                              ??_PHY_SetPanId 0004                         ??_nwkDataReqSendFrame 002C  
                        ??_nwkRxIndicateFrame 001A                           _nwkFrameCommandInit 49FE  
                               ?_NWK_SetPanId 0004                             placeTimer@timeout 0008  
                       nwkRxRejectDuplicate@i 0019                       nwkTxAckReceived@command 000C  
                               _SYS_TimerInit 50F2                              __CFG_FEXTOSC$OFF 000000  
                        ?_UART1_RxDataHandler 0001                              ?_PHY_TaskHandler 0001  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                       _nwkRxIndicateFrame$3634 001E  
                     _nwkRxIndicateFrame$3635 001F                       _nwkRxIndicateFrame$3636 0020  
                     _nwkRxIndicateFrame$3637 0021                       _nwkRxIndicateFrame$3638 0022  
                     _nwkRxIndicateFrame$3639 0023                __size_of_nwkRouteErrorReceived 006C  
                       setSignalBandwidth@sbw 0023                               _SPI1_Initialize 4F98  
               __end_of_nwkRouteErrorReceived 43CA                             _nwkTxAckWaitTimer 00C4  
                    ??_nwkTxDelayTimerHandler 0014                       __end_of_start_radio_cad 505E  
                      ??_nwkRxRejectDuplicate 0014                    __size_of_nwkDataReqConfirm 00C6  
                        _timer0ReloadVal16bit 005B                          ?_nwkFrameCommandInit 0002  
                  __size_of_SX1276WriteBuffer 0028                             ?_SX1276ReadBuffer 0009  
                              _set_timer0base 4EC6                  __end_of_INTERRUPT_Initialize 4A7E  
                     nwkRouteRemove@multicast 000A                              _PHY_SetShortAddr 512E  
                              __end_of___flge 321E                    __size_of_UART1_Receive_ISR 00C4  
                        __end_of_setFrequency 2BCA                                __end_of___omul 3E30  
                            ??_nwkDataReqInit 0002                            ??_SX1276ReadBuffer 000C  
                               __pidataCOMRAM 512A                        __size_of_nwkFrameAlloc 00CA  
                           __size_of_TMR0_ISR 0020                             __size_of_PHY_Init 0006  
                              __end_of_memcpy 442C                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_memset 1FC6                     __size_of_nwkTxAckReceived 00F4  
                              SX1276Read@addr 000D                               setFrequency@num 002B  
                              SX1276Read@data 000E                           __size_of_appDataInd 0004  
                          NWK_RouteNewEntry@i 0006                             __size_of_NWK_Init 0062  
                           ??_NWK_TaskHandler 003B                           _nwkTxBroadcastFrame 2594  
                                 ?_placeTimer 0002                           start_initialization 36B4  
                                _SCANCON0bits 00397C                      __size_of_TMR0_Initialize 003E  
                       _nwkTxConvertPhyStatus 46A4               __size_of_PIN_MANAGER_Initialize 0080  
                              ??_NWK_SetPanId 0006                                   __end_of_cad 2F08  
                               nwkFrameInit@i 0002                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0004                                ?_SYS_TimerInit 0001  
                       _nwkRouteFrameReceived 14CC                       __size_of_CRC_Initialize 005A  
                     ?_nwkRouteSendRouteError 002A                      __size_of_SYS_TaskHandler 000E  
                           __size_of_SYS_Init 000E                         ??_UART1_RxDataHandler 0001  
                               _Timer0Handler 4BE0                                    ivt0x8_base 0008  
               __size_of_SYS_TimerTaskHandler 014C                       NWK_RouteFreeEntry@entry 0002  
                           ?_SYS_TimerStarted 0002                                _nwkRouteRemove 4866  
                               _uart1RxBuffer 0200                            ??_SYS_TimerStarted 0004  
                           ___omul@multiplier 0002                                 _uart1TxBuffer 0240  
                            _NWK_OpenEndpoint 4EE6                               ___llmod@divisor 0006  
                        __end_of_nwkFrameFree 4F7E                          __end_of_nwkFrameInit 4D92  
                   __size_of_DIO0_Receive_ISR 00BC                                   ?_setTxPower 0001  
                        __end_of_nwkFrameNext 39D2                          ?_nwkTxBroadcastFrame 0024  
                             ___llmod@counter 000A                        nwkRouteFrameSent@frame 0008  
                      nwkRouteFrameSent@entry 000C                              __CFG_LPBOREN$OFF 000000  
                           _nwkRouteFrameSent 296E                        __end_of_set_timer0base 4EE6  
                       ??_nwkFrameCommandInit 0004                               NWK_SetAddr@addr 0004  
                                 ?_nwkTxFrame 0024                             nwkRouteRemove@dst 0008  
                                    ??___flge 0018                 nwkTxDelayTimerHandler@restart 0016  
                            ??_PMD_Initialize 0002               __size_of_nwkRouteNormalizeRanks 0044  
                                    ??___omul 0012                            ?_nwkRouteFrameSent 0008  
                    _nwkTxAckWaitTimerHandler 3C12                        __size_of_TMR0_CallBack 002E  
                           NWK_SetPanId@panId 0004                   fp__nwkTxAckWaitTimerHandler 0000  
                                 __pdataBANK0 00F6                                   __pdataBANK1 01B8  
                                    ??_memcpy 0008                             SYS_TimerStarted@t 0004  
                                    ??_memset 0008                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 4A7E                          __end_of_nwkGroupInit 4CAC  
                                  memset@dest 0002                           __size_of_computeFRF 0194  
                           ?_nwkTxTaskHandler 0001                         __size_of_radio_engine 01A2  
                         ??_nwkRouteFrameSent 000A                         PHY_SetChannel@channel 002F  
                              _symbolDuration 009C                                   __pbssBIGRAM 03BD  
                          ??_nwkTxTaskHandler 0014                                   __pbssCOMRAM 003B  
                            ??_SPI1_ReadBlock 0007                            _UART1_ErrorHandler 00E9  
                               __pcstackBANK0 00FC                __end_of_nwkRouteSendRouteError 3500  
                     nwkRoutePrepareTx@header 0011                          setSpreadingFactor@sf 002B  
                                 _CRCCON0bits 003968                                   _CRCCON1bits 003969  
                       _nwkDataReqTaskHandler 3F82                          __end_of_PHY_DataConf 4BA8  
                              _PHY_SetRxState 5106                          __end_of_nwkRxSendAck 3012  
                                 _appDataConf 000000                          __end_of_nwkTxConfirm 4E5C  
                           __size_of___xxtofl 01D8                                ?_Timer0Handler 0001  
                     __end_of_SPI1_Initialize 4FB2                      _UART1_RxInterruptHandler 00F3  
                      __end_of_nwkRouteRemove 48AC                 nwkRxHandleReceivedFrame@frame 0029  
                     nwkRxIndicateFrame@frame 0018                   __size_of_getSpreadingFactor 001A  
                   SYS_TimerTaskHandler@timer 0022                   __size_of_setSpreadingFactor 011E  
                             _SPI1_WriteBlock 49BC                                 _nwkFrameAlloc 377E  
                           _nwkRoutePrepareTx 2832                           _nwkTxPhyActiveFrame 003D  
                fp__UART1_DefaultErrorHandler 0000                         ??_nwkTxBroadcastFrame 0026  
                ?_UART1_SetRxInterruptHandler 0002               nwkRouteSendRouteError@multicast 002E  
                       _TMR0_InterruptHandler 00EF                            ?_nwkRoutePrepareTx 000D  
                   __end_of_nwkRouteFrameSent 2AA0                                     __pnvBANK0 00E9  
                        __end_of_nwkRouteInit 464E                           __size_of_placeTimer 01D2  
                      _PIN_MANAGER_Initialize 426C                              ?_start_radio_cad 0001  
                             ?_set_timer0base 0002               __size_of_nwkTxDelayTimerHandler 00B6  
                           ?_UART1_Initialize 0001                     __size_of_NWK_RouteNextHop 0056  
        __end_of_UART1_SetFramingErrorHandler 50C0         __size_of_UART1_SetFramingErrorHandler 000E  
                _UART1_SetFramingErrorHandler 50B2                                  _radio_engine 1C8C  
                        __end_of_PHY_SetPanId 512E                                 __pmediumconst FEF4  
                                   _enableCrc 503C                           ??_nwkRoutePrepareTx 000F  
                                   __ptext100 4978                                     __ptext101 459E  
                               nwkGroupInit@i 0002                                     __ptext110 5096  
                                   __ptext102 4EE6                                     __ptext111 50A4  
                                   __ptext103 45F6                                     __ptext120 4A3E  
                                   __ptext112 50B2                                     __ptext104 4C7C  
                                   __ptext121 4544                                     __ptext113 50C0  
                                   __ptext105 4D66                                     __ptext130 39D2  
                                   __ptext122 4F08                                     __ptext114 4AFA  
                                   __ptext106 50FC                                     __ptext131 5136  
                                   __ptext123 4CAC                                     __ptext115 50CE  
                                   __ptext107 4EA4                                     __ptext132 5138  
                                   __ptext124 5130                                     __ptext116 4F98  
                                   __ptext108 3EDC                                     __ptext133 5120  
                                   __ptext125 4BE0                                     __ptext117 4E80  
                                   __ptext109 5088                                     __ptext134 4D92  
                                   __ptext126 5134                                     __ptext118 426C  
                                   __ptext135 0000                                     __ptext127 4CDC  
                                   __ptext119 4FE2                                     __ptext128 481E  
                                   __ptext129 4D0C                        __end_of_PHY_SetChannel 4ABC  
                                    ?___lldiv 0016                                      ?___llmod 0002  
                          ??_UART1_Initialize 0004                              _nwkDataReqTxConf 3A96  
                       NWK_RouteNextHop@entry 000B                              _uart1RxLastError 00A1  
                      __size_of_nwkRouteFrame 00E2                        __CFG_BBSIZE$BBSIZE_512 000000  
                       _nwkRxHandleIndication 3012                                     _fhssdebug 004A  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 5138  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5136  
                         __size_of_setTxPower 003E                        ?_nwkTxConvertPhyStatus 0001  
                      __end_of_PHY_SetRxState 510E                                      ?_receive 0001  
                             ??_SYS_TimerInit 0002                        ?_nwkRouteFrameReceived 000B  
                         __end_of_SX1276Write 503C                        _nwkRouteNormalizeRanks 48AC  
                                   _initRadio 22E0                           __size_of_nwkTxFrame 01CC  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                               _TMR0_CallBack 4CAC                     __end_of_nwkRoutePrepareTx 296E  
                   nwkRxRejectDuplicate@shift 0018                                   _U1ERRIRbits 003DF9  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                        _INTERRUPT_Initialize 4A3E                              __cadBackoffTimer 0059  
                        SX1276ReadBuffer@addr 000C                                  ??_appDataInd 0014  
                                  nwkRxInit@i 0005                             ??_TMR0_Initialize 0004  
                     __size_of_get_timer0base 002C                          SX1276ReadBuffer@size 000B  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0002  
                                    _LATCbits 003FBC      nwkRxDuplicateRejectionTimerHandler@timer 0012  
                 __size_of_explicitHeaderMode 0016                                      _SCANCON0 00397C  
                           ??_SYS_TaskHandler 003B                                      _IPR3bits 003983  
                                    _SCANTRIG 00397D                                      _PIE3bits 003993  
                         __CFG_BORV$VBOR_2P45 000000                                  _SPI1CON0bits 003D14  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                             _NWK_RouteNewEntry 321E  
               ??_UART1_SetRxInterruptHandler 0004                         __size_of_setFrequency 012A  
                                    i1u535_20 4BF2                                      i1u535_21 4BEE  
                                    i1u536_20 4C0A                                      i1u536_21 4C06  
                                    i1u545_20 4CC0                                      i1u545_21 4CBC  
                                    i1u546_28 4CC6                                      i1u546_29 4CD8  
                                    i2u501_40 4DB6                    ??_TMR0_SetInterruptHandler 0004  
                                    i2u501_41 4DB2                                      _PIR0bits 0039A0  
                                   _nwkGroups 0088                   nwkRouteFrameReceived@header 0015  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                                    i2u552_40 4830                                      i2u552_41 482C  
                                    i2u553_40 4854                                      i2u553_41 4850  
                               ??_PHY_DataInd 0015                                      i2u554_40 39F2  
                                    i2u554_41 39EE                                      i2u563_40 4CF0  
                                    i2u563_41 4CEC                                      i2u556_40 3A2C  
                                    i2u555_48 3A08                                      i2u556_41 3A28  
                                    i2u555_49 3A1C                                     _nwkRxInit 459E  
                                    i2u565_40 4D20                                      i2u564_48 4CF6  
                                    i2u565_41 4D1C                                      i2u564_49 4D08  
                               ??_PHY_DataReq 0014                                      i2u558_40 3A72  
                                    i2u557_48 3A42                                      i2u558_41 3A6E  
                                    i2u557_49 3A56                                      i2u566_48 4D26  
                                    i2u566_49 4D38                                      i2u559_48 3A78  
                                    i2u559_49 3A8C                                     _nwkTxInit 4978  
                          ?_NWK_RouteNewEntry 0002                          __end_of_NWK_SetPanId 4F46  
                                  ?_enableCrc 0001                       _setSignalBandwidth$6799 002B  
                                    _TMR0_ISR 4F08                               ?_PHY_SetChannel 0001  
                  __end_of_UART1_Transmit_ISR 4866                                      _PHY_Init 511A  
               ?_UART1_SetFramingErrorHandler 0002                                     _test_init 4C16  
                                   _test_send 4B38                              initRadio@version 0037  
                                    _NWK_Init 442C                                     _txTimeOut 0055  
                          SPI1_ReadBlock@data 0007                            NWK_GroupIsMember@i 0006  
                         ??_NWK_RouteNewEntry 0004                              _nwkTxAckReceived 331E  
                        getSignalBandwidth@bw 0015             nwkRxHandleReceivedFrame@broadcast 002D  
                      nwkDataReqSendFrame@req 002A                            __end_of_appDataInd 512A  
                        setSignalBandwidth@bw 002F                               ?_PHY_SetRxState 0001  
                      ?_nwkDataReqTaskHandler 0001                       __end_of_SPI1_WriteBlock 49FE  
                             ??_Timer0Handler 0001                        _nwkTxDelayTimerHandler 3CCC  
                                    _SYS_Init 507A                                 ??_NWK_DataReq 0004  
                 __end_of_nwkRxServiceDataInd 40BE                                    ?_initRadio 0001  
                              _CRC_Initialize 4544                                ?_TMR0_CallBack 0001  
                            ?_SPI1_Initialize 0001                            _getSignalBandwidth 243E  
                          _setSignalBandwidth 00B2                                   _INTCON0bits 003FD2  
                       __size_of_nwkFrameFree 001A                                     copy_data0 36C8  
                                   copy_data1 36EA                         __size_of_nwkFrameInit 002C  
                       ?_INTERRUPT_Initialize 0001                         __size_of_nwkFrameNext 00C4  
                 nwkDataReqSendFrame@mcHeader 002D                      __end_of_PHY_SetShortAddr 5130  
                        fp__UART1_Receive_ISR 0000                                  ??_computeFRF 0023  
               nwkRxRejectDuplicate@freeEntry 001B                                  _setFrequency 2AA0  
                   __size_of_nwkRxTaskHandler 00D2                                 ??_NWK_SetAddr 0006  
                      _uart1TxBufferRemaining 00F5                  _nwkRxDuplicateRejectionTable 0186  
                _nwkRxDuplicateRejectionTimer 00D1                     __end_of_NWK_RouteNewEntry 331E  
                               _nwkRouteFrame 3500                              _DIO0_Receive_ISR 3B56  
                               _nwkRouteTable 0140                           ?_getSignalBandwidth 000F  
                         ?_setSignalBandwidth 0023                    __size_of_nwkRouteFrameSent 0132  
                                _uart1RxCount 0044                    __end_of_implicitHeaderMode 5010  
                                    __Hrparam 0000                             computeFRF@num_mod 0027  
                                   memcpy@tmp 000C                                    ?_nwkRxInit 0001  
                                    __Lrparam 0000                                    ?_nwkTxInit 0001  
                             _NWK_TaskHandler 506C                         __size_of_nwkGroupInit 0030  
                          __CFG_BOREN$SBORDIS 000000                               _nwkRxAckControl 0043  
                     ??_OSCILLATOR_Initialize 0002                       __size_of_setCodingRate4 004E  
                nwkRouteErrorReceived@command 0010                   __size_of_NWK_RouteFindEntry 0090  
                                  ?_test_init 0001                                    ?_test_send 0001  
                            __size_of___lldiv 00AC                              __size_of___llmod 0090  
                       SYS_TimerStarted@timer 0002                         nwkRxTaskHandler@frame 0039  
      fp__nwkRxDuplicateRejectionTimerHandler 0000   __end_of_nwkRxDuplicateRejectionTimerHandler 435E  
__size_of_nwkRxDuplicateRejectionTimerHandler 0072         ??_nwkRxDuplicateRejectionTimerHandler 0014  
        ?_nwkRxDuplicateRejectionTimerHandler 0012           _nwkRxDuplicateRejectionTimerHandler 42EC  
                      nwkRoutePrepareTx@frame 000D                                   _SX1276Write 5026  
                         __end_of_PHY_DataInd 22E0                        ?_nwkRxHandleIndication 0032  
                         __end_of_PHY_DataReq 4544                   __end_of_nwkDataReqSendFrame 0D54  
                         NWK_LinearizeLqi@val FFF1                       __size_of_SYS_TimerStart 0032  
                        ??_getSignalBandwidth 0013                   __size_of_NWK_RouteFreeEntry 0044  
                    __end_of_NWK_OpenEndpoint 4F06                          ??_setSignalBandwidth 0027  
                          __end_of_computeFRF 215A                         __size_of_PHY_DataConf 0038  
                       __size_of_nwkRxSendAck 010A                         __size_of_nwkTxConfirm 0024  
                    _nwkRxHandleReceivedFrame 0566                                  _nwkFrameFree 4F64  
        __size_of_UART1_SetRxInterruptHandler 000E                                  _nwkFrameInit 4D66  
                                ??_placeTimer 0004                                  _nwkFrameNext 390E  
                                    ___xxtofl 1716                        __end_of_CRC_Initialize 459E  
                                  _T0CON0bits 003FB8                                      __pivt0x8 0008  
                            __size_of_receive 004A                   nwkRouteSendRouteError@frame 0031  
                             ??_nwkFrameAlloc 0010                     __size_of_SX1276ReadBuffer 0028  
                                    __ptext10 505E                                      __ptext11 26E6  
                                    __ptext20 4EC6                                      __ptext12 3C12  
                                    __ptext21 4D3A                                      __ptext13 42EC  
                                    __ptext30 3A96                                      __ptext22 4B70  
                                    __ptext14 3CCC                                      __ptext31 44EA  
                                    __ptext23 46A4                                      __ptext15 4E38  
                                    __ptext40 14CC                                      __ptext32 50DC  
                                    __ptext24 3B56                                      __ptext16 5114  
                                    __ptext41 321E                                      __ptext33 35E2  
                                    __ptext25 215A                                      __ptext17 1C8C  
                                    __ptext50 435E                                      __ptext42 3012  
                                    __ptext34 0566                                      __ptext26 506C  
                                    __ptext18 2DFA                                      __ptext51 4866  
                                    __ptext43 2F08                                      __ptext35 2594  
                                    __ptext27 0FF0                                      __ptext19 504E  
                                    __ptext60 2CE8                                      __ptext52 48F0  
                                    __ptext44 1266                                      __ptext36 0D54  
                                    __ptext28 296E                                      __ptext61 3D82  
                                    __ptext53 3500                                      __ptext45 4DBE  
                                    __ptext37 4C4A                                      __ptext29 48AC  
                                    __ptext70 507A                                      __ptext62 2832  
                                    __ptext54 3412                                      __ptext46 5126  
                                    __ptext38 18EE                                      __ptext71 50F2  
                                    __ptext63 464E                                      __ptext55 49FE  
                                    __ptext47 4024                                      __ptext39 448E  
                                    __ptext80 1716                                      __ptext72 511A  
                                    __ptext64 40BE                                      __ptext56 4F64  
                                    __ptext48 331E                                      __ptext81 311A  
                                    __ptext73 22E0                                      __ptext65 47D6  
                                    __ptext57 3F82                                      __ptext49 390E  
                                    __ptext90 4DE8                                      __ptext82 4FB2  
                                    __ptext74 4BA8                                      __ptext66 377E  
                                    __ptext58 09EC                                      __ptext91 49BC  
                                    __ptext83 2AA0                                      __ptext75 4ABC  
                                    __ptext67 1E2E                                      __ptext59 1AC0  
                                    __ptext92 4FCA                                      __ptext84 46F6  
                                    __ptext76 2BCA                                      __ptext68 43CA  
                                    __ptext93 4E10                                      __ptext85 4744  
                                    __ptext77 00B2                                      __ptext69 3848  
                                    __ptext94 4934                                      __ptext86 4FFA  
                                    __ptext78 4F7E                                      __ptext95 4E5C  
                                    __ptext87 5010                                      __ptext79 243E  
                                    __ptext96 1FC6                                      __ptext88 503C  
                                    __ptext97 414E                                      __ptext89 5026  
                                    __ptext98 3E30                                      __ptext99 442C  
                 __size_of_nwkRxIndicateFrame 0266                    __size_of_nwkRoutePrepareTx 013C  
              __size_of_UART1_SetErrorHandler 000E                                      _fhssList FEF5  
               __end_of_UART1_SetErrorHandler 50CE                         __size_of_nwkRouteInit 0058  
                               nwkRouteInit@i 0002                      nwkTxBroadcastFrame@frame 0024  
                              ?_nwkRouteFrame 0033                                  _nwkGroupInit 4C7C  
                         __end_of_NWK_DataReq 426C                                 __size_of_idle 000C  
                               __size_of_main 0048                                 __size_of_rand 0112  
                  ??_nwkTxAckWaitTimerHandler 0014                                  ??_setTxPower 0011  
                       __size_of_PHY_SetPanId 0002          __end_of_TMR0_DefaultInterruptHandler 5132  
       __size_of_TMR0_DefaultInterruptHandler 0002                  _TMR0_DefaultInterruptHandler 5130  
                        __CFG_WDTCWS$WDTCWS_7 000000                           get_timer0base@timer 0002  
                                 _IVTLOCKbits 003FD4                           set_timer0base@timer 0002  
                       _nwkRouteErrorReceived 435E                        SX1276ReadBuffer@buffer 0009  
                    __size_of_PHY_TaskHandler 0006              nwkRxHandleReceivedFrame@mcHeader 002F  
                                ??_nwkTxFrame 0026                    nwkRouteFrameReceived@frame 000B  
                   _UART1_OverrunErrorHandler 00EB                           __end_of_NWK_SetAddr 4F64  
                          __end_of_placeTimer 1AC0                              _NWK_RouteNextHop 464E  
UART1_SetOverrunErrorHandler@interruptHandler 0002                    nwkRouteFrameReceived@entry 0013  
          __size_of_UART1_DefaultErrorHandler 0006                                   ??_enableCrc 0011  
                                _PHY_DataConf 4B70                                  _nwkRxSendAck 2F08  
                                _nwkTxConfirm 4E38                  __end_of_SYS_TimerTaskHandler 2832  
                   __size_of_SYS_TimerStarted 005C                    ?_UART1_DefaultErrorHandler 0001  
               __size_of_nwkRxRejectDuplicate 029C                 nwkTxAckWaitTimerHandler@frame 0017  
                                    _syncList 01B8                 nwkTxAckWaitTimerHandler@timer 0012  
                         setFrequency@num_mod 0027                         fp__UART1_Transmit_ISR 0000  
                         fp__nwkDataReqTxConf 0000                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0004                   __end_of_UART1_RxDataHandler 4DBE  
                                _nwkRouteInit 45F6                                   _uart1RxHead 0046  
                   setCodingRate4@denominator 0013                               ?_CRC_Initialize 0001  
                                 _uart1TxHead 0048                               ??_TMR0_CallBack 0001  
                                 _uart1RxTail 0045                                   _NVMCON1bits 0039E5  
                                 _phyRxBuffer 0280                              ?_SPI1_WriteBlock 0003  
                                 _uart1TxTail 0047                                      memcpy@d1 0002  
                          __end_of_setTxPower 4AFA                                      memcpy@s1 0004  
                                 ??_initRadio 0033                          SPI1_WriteBlock@block 0003  
                      ??_INTERRUPT_Initialize 0002                           DIO0_Receive_ISR@ind 001C  
                                _PHY_SetPanId 512C                                    _SX1276Read 4FCA  
                          __end_of_nwkTxFrame 1C8C                      __end_of_nwkDataReqTxConf 3B56  
                                    intlevel1 0000                                      intlevel2 0000  
                   nwkRouteSendRouteError@dst 002C                     nwkRouteSendRouteError@src 002A  
                              _get_timer0base 4D3A                     __size_of_nwkTxTaskHandler 0276  
                      NWK_RouteNewEntry@entry 0009                       __end_of_NWK_TaskHandler 507A  
                            ??_set_timer0base 0006                   __end_of_nwkFrameCommandInit 4A3E  
                            ___lldiv@dividend 0016                       ?_PIN_MANAGER_Initialize 0001  
                  __size_of_NWK_RouteNewEntry 0100                             __CFG_CLKOUTEN$OFF 000000  
                       __size_of_NWK_SetPanId 001E                                 _test_send_ctl 00A0  
                          get_timer0base@tval 0004                   NWK_RouteFindEntry@multicast 0004  
                      nwkRxServiceDataInd@ind 0012                                 fp__appDataInd 0000  
                          set_timer0base@tval 0004                       NWK_OpenEndpoint@handler 0002  
                         _uart1RxStatusBuffer 0100               fp__TMR0_DefaultInterruptHandler 0000  
               ?_TMR0_DefaultInterruptHandler 0001                                   ??_nwkRxInit 0005  
                                 ??_nwkTxInit 0002                               _nwkTxDelayTimer 00B7  
                           _setPreambleLength 4FB2                                   _PHY_DataInd 215A  
                                 _PHY_DataReq 44EA                          PHY_SetShortAddr@addr 0002  
                                  _SPI1SCKPPS 003ADE                                    _SPI1SDIPPS 003ADF  
UART1_SetFramingErrorHandler@interruptHandler 0002                            ?_setPreambleLength 0011  
                                 ??_test_init 0030             __end_of_UART1_DefaultErrorHandler 5126  
                                 ??_test_send 0004                      nwkRouteErrorReceived@ind 000D  
                         SPI1_WriteBlock@data 0007                       ??_nwkTxConvertPhyStatus 0002  
                     ??_nwkRouteFrameReceived 000D                       ?_nwkRouteNormalizeRanks 0001  
      nwkFrame@nwkFramePayloadSize@frame_3186 0002                              ??_nwkRouteRemove 000B  
                            _halTimerIrqCount 0041                           ??_setPreambleLength 0013  
                            ___lldiv@quotient 001E                               _TMR0_Initialize 4AFA  
                  __end_of_getSpreadingFactor 4F98                    __end_of_setSpreadingFactor 2CE8  
                   __size_of_UART1_Initialize 00A6                      DIO0_Receive_ISR@irqFlags 001B  
                             _SYS_TaskHandler 505E                     fp__nwkTxDelayTimerHandler 0000  
                                 _NWK_DataReq 41DE                       __size_of_nwkDataReqInit 000A  
                    _UART1_TxInterruptHandler 00F1                   __end_of_nwkTxBroadcastFrame 26E6  
                                _NWK_SetPanId 4F28                        __end_of_get_timer0base 4D66  
                         __end_of_Default_ISR 5136                               ??_nwkRouteFrame 0035  
                            _nwkRxTaskHandler 35E2                __end_of_PIN_MANAGER_Initialize 42EC  
                     SPI1_ReadBlock@blockSize 0005                         NWK_RouteFindEntry@dst 0002  
                                 _NWK_SetAddr 4F46           __end_ofnwkFrame@nwkFramePayloadSize 4DE8  
                 nwkFrame@nwkFramePayloadSize 4DBE                      __end_of_nwkTxAckReceived 3412  
                ?_UART1_SetTxInterruptHandler 0002                        ?_nwkRouteErrorReceived 000D  
                            ??_PHY_SetChannel 002F                     __end_of_setPreambleLength 4FCA  
                         NWK_RouteFindEntry@i 0007                    __end_of_spi1_configuration FFFF  
                  nwkRxRejectDuplicate@header 0012  
