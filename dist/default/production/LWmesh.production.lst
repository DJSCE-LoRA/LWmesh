

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 06 22:48:37 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1,group=2
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=2
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=2
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=2
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=2
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1,group=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1,group=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1,group=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=4,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=4,class=CODE,delta=1
   242                           	psect	text217,global,reloc=4,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=4,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text225,global,reloc=2,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254  0000                     
   255                           ; Version 2.10
   256                           ; Generated 31/07/2019 GMT
   257                           ; 
   258                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   259                           ; All rights reserved.
   260                           ; 
   261                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   262                           ; 
   263                           ; Redistribution and use in source and binary forms, with or without modification, are
   264                           ; permitted provided that the following conditions are met:
   265                           ; 
   266                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   267                           ;        conditions and the following disclaimer.
   268                           ; 
   269                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   270                           ;        of conditions and the following disclaimer in the documentation and/or other
   271                           ;        materials provided with the distribution.
   272                           ; 
   273                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   274                           ;        software without specific prior written permission.
   275                           ; 
   276                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   277                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   278                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   279                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   280                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   281                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   282                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   283                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   284                           ; 
   285                           ; 
   286                           ; Code-generator required, PIC18F26K42 Definitions
   287                           ; 
   288                           ; SFR Addresses
   289  0000                     
   290 ;; Function _appDataConf is unused but had its address taken
   291  0000                     
   292                           	psect	idataBANK0
   293  009D0E                     __pidataBANK0:
   294                           	opt callstack 0
   295                           
   296                           ;initializer for _RSSITarget
   297  009D0E  B0                 	db	176
   298                           
   299                           ;initializer for _currentNetID
   300  009D0F  55                 	db	85
   301                           
   302                           ;initializer for _ATTimeoutTimer
   303  009D10  03E8               	dw	1000
   304                           
   305                           	psect	idataBANK1
   306  009BC0                     __pidataBANK1:
   307                           	opt callstack 0
   308                           
   309                           ;initializer for stoa@F1139
   310  009BC0  28                 	db	40
   311  009BC1  6E                 	db	110
   312  009BC2  75                 	db	117
   313  009BC3  6C                 	db	108
   314  009BC4  6C                 	db	108
   315  009BC5  29                 	db	41
   316  009BC6  00                 	db	0
   317                           
   318                           ;initializer for sendOKMessage@F16603
   319  009BC7  4F                 	db	79
   320  009BC8  4B                 	db	75
   321  009BC9  0D                 	db	13
   322  009BCA  0A                 	db	10
   323  009BCB  00                 	db	0
   324                           
   325                           ;initializer for _test_timer
   326  009BCC  1388               	dw	5000
   327                           
   328                           ;initializer for _currentAddr1
   329  009BCE  34                 	db	52
   330                           
   331                           ;initializer for _currentAddr0
   332  009BCF  12                 	db	18
   333                           
   334                           	psect	idataBANK2
   335  009CD2                     __pidataBANK2:
   336                           	opt callstack 0
   337                           
   338                           ;initializer for _syncList
   339  009CD2  12                 	db	18
   340  009CD3  23                 	db	35
   341  009CD4  45                 	db	69
   342  009CD5  56                 	db	86
   343  009CD6  67                 	db	103
   344  009CD7  78                 	db	120
   345  009CD8  89                 	db	137
   346  009CD9  9A                 	db	154
   347  009CDA  AB                 	db	171
   348  009CDB  BC                 	db	188
   349                           
   350                           	psect	mediumconst
   351  00FCC8                     __pmediumconst:
   352                           	opt callstack 0
   353  00FCC8  00                 	db	0
   354  00FCC9                     _fhssList:
   355                           	opt callstack 0
   356  00FCC9  7680               	dw	30336
   357  00FCCB  3600               	dw	13824
   358  00FCCD  FB00               	dw	64256
   359  00FCCF  361E               	dw	13854
   360  00FCD1  7F80               	dw	32640
   361  00FCD3  363D               	dw	13885
   362  00FCD5  0400               	dw	1024
   363  00FCD7  365C               	dw	13916
   364  00FCD9  8880               	dw	34944
   365  00FCDB  367A               	dw	13946
   366  00FCDD  0D00               	dw	3328
   367  00FCDF  3699               	dw	13977
   368  00FCE1  9180               	dw	37248
   369  00FCE3  36B7               	dw	14007
   370  00FCE5  1600               	dw	5632
   371  00FCE7  36D6               	dw	14038
   372  00FCE9  9A80               	dw	39552
   373  00FCEB  36F4               	dw	14068
   374  00FCED  1F00               	dw	7936
   375  00FCEF  3713               	dw	14099
   376  00FCF1  DCC0               	dw	56512
   377  00FCF3  3703               	dw	14083
   378  00FCF5  5840               	dw	22592
   379  00FCF7  36E5               	dw	14053
   380  00FCF9  D3C0               	dw	54208
   381  00FCFB  36C6               	dw	14022
   382  00FCFD  4F40               	dw	20288
   383  00FCFF  36A8               	dw	13992
   384  00FD01  CAC0               	dw	51904
   385  00FD03  3689               	dw	13961
   386  00FD05  4640               	dw	17984
   387  00FD07  366B               	dw	13931
   388  00FD09  C1C0               	dw	49600
   389  00FD0B  364C               	dw	13900
   390  00FD0D  3D40               	dw	15680
   391  00FD0F  362E               	dw	13870
   392  00FD11  B8C0               	dw	47296
   393  00FD13  360F               	dw	13839
   394  00FD15  3440               	dw	13376
   395  00FD17  35F1               	dw	13809
   396  00FD19  AFC0               	dw	44992
   397  00FD1B  35D2               	dw	13778
   398  00FD1D  D560               	dw	54624
   399  00FD1F  35F8               	dw	13816
   400  00FD21  59E0               	dw	23008
   401  00FD23  3617               	dw	13847
   402  00FD25  DE60               	dw	56928
   403  00FD27  3635               	dw	13877
   404  00FD29  6BE0               	dw	27616
   405  00FD2B  3691               	dw	13969
   406  00FD2D  F060               	dw	61536
   407  00FD2F  36AF               	dw	13999
   408  00FD31  74E0               	dw	29920
   409  00FD33  36CE               	dw	14030
   410  00FD35  F960               	dw	63840
   411  00FD37  36EC               	dw	14060
   412  00FD39  7DE0               	dw	32224
   413  00FD3B  370B               	dw	14091
   414  00FD3D  C020               	dw	49184
   415  00FD3F  371A               	dw	14106
   416  00FD41  4710               	dw	18192
   417  00FD43  3604               	dw	13828
   418  00FD45  6CB0               	dw	27824
   419  00FD47  362A               	dw	13866
   420  00FD49  5010               	dw	20496
   421  00FD4B  3641               	dw	13889
   422  00FD4D  75B0               	dw	30128
   423  00FD4F  3667               	dw	13927
   424  00FD51  5910               	dw	22800
   425  00FD53  367E               	dw	13950
   426  00FD55  7EB0               	dw	32432
   427  00FD57  36A4               	dw	13988
   428  00FD59  6210               	dw	25104
   429  00FD5B  36BB               	dw	14011
   430  00FD5D  87B0               	dw	34736
   431  00FD5F  36E1               	dw	14049
   432  00FD61  6B10               	dw	27408
   433  00FD63  36F8               	dw	14072
   434  00FD65  90B0               	dw	37040
   435  00FD67  371E               	dw	14110
   436  00FD69  AD50               	dw	44368
   437  00FD6B  3707               	dw	14087
   438  00FD6D  28D0               	dw	10448
   439  00FD6F  36E9               	dw	14057
   440  00FD71  A450               	dw	42064
   441  00FD73  36CA               	dw	14026
   442  00FD75  C0F0               	dw	49392
   443  00FD77  36B3               	dw	14003
   444  00FD79  9B50               	dw	39760
   445  00FD7B  368D               	dw	13965
   446  00FD7D  B7F0               	dw	47088
   447  00FD7F  3676               	dw	13942
   448  00FD81  9250               	dw	37456
   449  00FD83  3650               	dw	13904
   450  00FD85  AEF0               	dw	44784
   451  00FD87  3639               	dw	13881
   452  00FD89  8950               	dw	35152
   453  00FD8B  3613               	dw	13843
   454  00FD8D  A5F0               	dw	42480
   455  00FD8F  35FC               	dw	13820
   456  00FD91  50E0               	dw	20704
   457  00FD93  35DA               	dw	13786
   458  00FD95  04D0               	dw	1232
   459  00FD97  35F5               	dw	13813
   460  00FD99  2A70               	dw	10864
   461  00FD9B  361B               	dw	13851
   462  00FD9D  0DD0               	dw	3536
   463  00FD9F  3632               	dw	13874
   464  00FDA1  3C70               	dw	15472
   465  00FDA3  3695               	dw	13973
   466  00FDA5  1FD0               	dw	8144
   467  00FDA7  36AC               	dw	13996
   468  00FDA9  4570               	dw	17776
   469  00FDAB  36D2               	dw	14034
   470  00FDAD  28D0               	dw	10448
   471  00FDAF  36E9               	dw	14057
   472  00FDB1  4E70               	dw	20080
   473  00FDB3  370F               	dw	14095
   474  00FDB5  0E40               	dw	3648
   475  00FDB7  371B               	dw	14107
   476  00FDB9  A5F0               	dw	42480
   477  00FDBB  35FC               	dw	13820
   478  00FDBD  F130               	dw	61744
   479  00FDBF  3648               	dw	13896
   480  00FDC1  75B0               	dw	30128
   481  00FDC3  3667               	dw	13927
   482  00FDC5                     __end_of_fhssList:
   483                           	opt callstack 0
   484  00FDC5  03                 	db	3
   485  00FDC6  08                 	db	8
   486  00FDC7  1A                 	db	26
   487  00FDC8  40                 	db	64
   488  00FDC9  80                 	db	128
   489  00FDCA  BE                 	db	190
   490  00FDCB  E6                 	db	230
   491  00FDCC  F7                 	db	247
   492  00FDCD  FC                 	db	252
   493  00FDCE                     __end_ofNWK_LinearizeLqi@val:
   494                           	opt callstack 0
   495  00FDCE                     _spi1_configuration:
   496                           	opt callstack 0
   497  00FDCE  82                 	db	130
   498  00FDCF  C0                 	db	192
   499  00FDD0  03                 	db	3
   500  00FDD1  03                 	db	3
   501  00FDD2  00                 	db	0
   502  00FDD3                     __end_of_spi1_configuration:
   503                           	opt callstack 0
   504  00FDD3  01                 	db	1
   505  00FDD4                     __end_of_FirmwareVersionMinor:
   506                           	opt callstack 0
   507  00FDD4  02                 	db	2
   508  00FDD5                     __end_of_FirmwareVersionMajor:
   509                           	opt callstack 0
   510  00FDD5  00                 	db	0
   511  00FDD6                     __end_of_ATVersionMinor:
   512                           	opt callstack 0
   513  00FDD6  01                 	db	1
   514  00FDD7                     __end_of_ATVersionMajor:
   515                           	opt callstack 0
   516  00FDD7                     STR_131:
   517                           
   518                           ; BSR set to: 0
   519  00FDD7  46                 	db	70	;'F'
   520  00FDD8  69                 	db	105	;'i'
   521  00FDD9  72                 	db	114	;'r'
   522  00FDDA  6D                 	db	109	;'m'
   523  00FDDB  77                 	db	119	;'w'
   524  00FDDC  61                 	db	97	;'a'
   525  00FDDD  72                 	db	114	;'r'
   526  00FDDE  65                 	db	101	;'e'
   527  00FDDF  20                 	db	32
   528  00FDE0  56                 	db	86	;'V'
   529  00FDE1  65                 	db	101	;'e'
   530  00FDE2  72                 	db	114	;'r'
   531  00FDE3  73                 	db	115	;'s'
   532  00FDE4  69                 	db	105	;'i'
   533  00FDE5  6F                 	db	111	;'o'
   534  00FDE6  6E                 	db	110	;'n'
   535  00FDE7  20                 	db	32
   536  00FDE8  25                 	db	37
   537  00FDE9  31                 	db	49	;'1'
   538  00FDEA  75                 	db	117	;'u'
   539  00FDEB  2E                 	db	46
   540  00FDEC  25                 	db	37
   541  00FDED  30                 	db	48	;'0'
   542  00FDEE  32                 	db	50	;'2'
   543  00FDEF  75                 	db	117	;'u'
   544  00FDF0  0D                 	db	13
   545  00FDF1  0A                 	db	10
   546  00FDF2  00                 	db	0
   547  00FDF3                     STR_130:
   548                           
   549                           ; BSR set to: 0
   550  00FDF3  41                 	db	65	;'A'
   551  00FDF4  54                 	db	84	;'T'
   552  00FDF5  20                 	db	32
   553  00FDF6  43                 	db	67	;'C'
   554  00FDF7  6F                 	db	111	;'o'
   555  00FDF8  6D                 	db	109	;'m'
   556  00FDF9  6D                 	db	109	;'m'
   557  00FDFA  61                 	db	97	;'a'
   558  00FDFB  6E                 	db	110	;'n'
   559  00FDFC  64                 	db	100	;'d'
   560  00FDFD  20                 	db	32
   561  00FDFE  53                 	db	83	;'S'
   562  00FDFF  65                 	db	101	;'e'
   563  00FE00  74                 	db	116	;'t'
   564  00FE01  20                 	db	32
   565  00FE02  25                 	db	37
   566  00FE03  31                 	db	49	;'1'
   567  00FE04  75                 	db	117	;'u'
   568  00FE05  2E                 	db	46
   569  00FE06  25                 	db	37
   570  00FE07  30                 	db	48	;'0'
   571  00FE08  32                 	db	50	;'2'
   572  00FE09  75                 	db	117	;'u'
   573  00FE0A  0D                 	db	13
   574  00FE0B  0A                 	db	10
   575  00FE0C  00                 	db	0
   576  00FE0D                     STR_27:
   577                           
   578                           ; BSR set to: 0
   579  00FE0D  43                 	db	67	;'C'
   580  00FE0E  41                 	db	65	;'A'
   581  00FE0F  44                 	db	68	;'D'
   582  00FE10  20                 	db	32
   583  00FE11  43                 	db	67	;'C'
   584  00FE12  4F                 	db	79	;'O'
   585  00FE13  55                 	db	85	;'U'
   586  00FE14  4E                 	db	78	;'N'
   587  00FE15  54                 	db	84	;'T'
   588  00FE16  45                 	db	69	;'E'
   589  00FE17  52                 	db	82	;'R'
   590  00FE18  20                 	db	32
   591  00FE19  3D                 	db	61	;'='
   592  00FE1A  20                 	db	32
   593  00FE1B  25                 	db	37
   594  00FE1C  30                 	db	48	;'0'
   595  00FE1D  32                 	db	50	;'2'
   596  00FE1E  58                 	db	88	;'X'
   597  00FE1F  0D                 	db	13
   598  00FE20  0A                 	db	10
   599  00FE21  00                 	db	0
   600  00FE22                     
   601                           ; BSR set to: 0
   602  00FE22  4D                 	db	77	;'M'
   603  00FE23  4F                 	db	79	;'O'
   604  00FE24  44                 	db	68	;'D'
   605  00FE25  45                 	db	69	;'E'
   606  00FE26  20                 	db	32
   607  00FE27  3D                 	db	61	;'='
   608  00FE28  20                 	db	32
   609  00FE29  45                 	db	69	;'E'
   610  00FE2A  4E                 	db	78	;'N'
   611  00FE2B  44                 	db	68	;'D'
   612  00FE2C  20                 	db	32
   613  00FE2D  4E                 	db	78	;'N'
   614  00FE2E  4F                 	db	79	;'O'
   615  00FE2F  44                 	db	68	;'D'
   616  00FE30  45                 	db	69	;'E'
   617  00FE31  0D                 	db	13
   618  00FE32  0A                 	db	10
   619  00FE33  00                 	db	0
   620  00FE34                     STR_29:
   621                           
   622                           ; BSR set to: 0
   623  00FE34  4D                 	db	77	;'M'
   624  00FE35  4F                 	db	79	;'O'
   625  00FE36  44                 	db	68	;'D'
   626  00FE37  45                 	db	69	;'E'
   627  00FE38  20                 	db	32
   628  00FE39  3D                 	db	61	;'='
   629  00FE3A  20                 	db	32
   630  00FE3B  52                 	db	82	;'R'
   631  00FE3C  45                 	db	69	;'E'
   632  00FE3D  50                 	db	80	;'P'
   633  00FE3E  45                 	db	69	;'E'
   634  00FE3F  41                 	db	65	;'A'
   635  00FE40  54                 	db	84	;'T'
   636  00FE41  45                 	db	69	;'E'
   637  00FE42  52                 	db	82	;'R'
   638  00FE43  0D                 	db	13
   639  00FE44  0A                 	db	10
   640  00FE45  00                 	db	0
   641  00FE46                     STR_9:
   642                           
   643                           ; BSR set to: 0
   644  00FE46  41                 	db	65	;'A'
   645  00FE47  44                 	db	68	;'D'
   646  00FE48  44                 	db	68	;'D'
   647  00FE49  52                 	db	82	;'R'
   648  00FE4A  3D                 	db	61	;'='
   649  00FE4B  25                 	db	37
   650  00FE4C  30                 	db	48	;'0'
   651  00FE4D  32                 	db	50	;'2'
   652  00FE4E  58                 	db	88	;'X'
   653  00FE4F  25                 	db	37
   654  00FE50  30                 	db	48	;'0'
   655  00FE51  32                 	db	50	;'2'
   656  00FE52  58                 	db	88	;'X'
   657  00FE53  0D                 	db	13
   658  00FE54  0A                 	db	10
   659  00FE55  00                 	db	0
   660  00FE56                     STR_86:
   661                           
   662                           ; BSR set to: 0
   663  00FE56  2B                 	db	43
   664  00FE57  43                 	db	67	;'C'
   665  00FE58  41                 	db	65	;'A'
   666  00FE59  44                 	db	68	;'D'
   667  00FE5A  43                 	db	67	;'C'
   668  00FE5B  4F                 	db	79	;'O'
   669  00FE5C  55                 	db	85	;'U'
   670  00FE5D  4E                 	db	78	;'N'
   671  00FE5E  54                 	db	84	;'T'
   672  00FE5F  45                 	db	69	;'E'
   673  00FE60  52                 	db	82	;'R'
   674  00FE61  52                 	db	82	;'R'
   675  00FE62  53                 	db	83	;'S'
   676  00FE63  54                 	db	84	;'T'
   677  00FE64  00                 	db	0
   678  00FE65                     STR_35:
   679                           
   680                           ; BSR set to: 0
   681  00FE65  54                 	db	84	;'T'
   682  00FE66  58                 	db	88	;'X'
   683  00FE67  20                 	db	32
   684  00FE68  50                 	db	80	;'P'
   685  00FE69  4F                 	db	79	;'O'
   686  00FE6A  57                 	db	87	;'W'
   687  00FE6B  45                 	db	69	;'E'
   688  00FE6C  52                 	db	82	;'R'
   689  00FE6D  3D                 	db	61	;'='
   690  00FE6E  25                 	db	37
   691  00FE6F  75                 	db	117	;'u'
   692  00FE70  0D                 	db	13
   693  00FE71  0A                 	db	10
   694  00FE72  00                 	db	0
   695  00FE73                     STR_13:
   696                           
   697                           ; BSR set to: 0
   698  00FE73  4E                 	db	78	;'N'
   699  00FE74  41                 	db	65	;'A'
   700  00FE75  44                 	db	68	;'D'
   701  00FE76  44                 	db	68	;'D'
   702  00FE77  52                 	db	82	;'R'
   703  00FE78  3D                 	db	61	;'='
   704  00FE79  25                 	db	37
   705  00FE7A  30                 	db	48	;'0'
   706  00FE7B  32                 	db	50	;'2'
   707  00FE7C  58                 	db	88	;'X'
   708  00FE7D  0D                 	db	13
   709  00FE7E  0A                 	db	10
   710  00FE7F  00                 	db	0
   711  00FE80                     STR_40:
   712                           
   713                           ; BSR set to: 0
   714  00FE80  43                 	db	67	;'C'
   715  00FE81  41                 	db	65	;'A'
   716  00FE82  44                 	db	68	;'D'
   717  00FE83  20                 	db	32
   718  00FE84  52                 	db	82	;'R'
   719  00FE85  53                 	db	83	;'S'
   720  00FE86  53                 	db	83	;'S'
   721  00FE87  3D                 	db	61	;'='
   722  00FE88  25                 	db	37
   723  00FE89  69                 	db	105	;'i'
   724  00FE8A  0D                 	db	13
   725  00FE8B  0A                 	db	10
   726  00FE8C  00                 	db	0
   727  00FE8D                     STR_1:
   728                           
   729                           ; BSR set to: 0
   730  00FE8D  52                 	db	82	;'R'
   731  00FE8E  58                 	db	88	;'X'
   732  00FE8F  3A                 	db	58	;':'
   733  00FE90  25                 	db	37
   734  00FE91  30                 	db	48	;'0'
   735  00FE92  34                 	db	52	;'4'
   736  00FE93  58                 	db	88	;'X'
   737  00FE94  3A                 	db	58	;':'
   738  00FE95  25                 	db	37
   739  00FE96  73                 	db	115	;'s'
   740  00FE97  0D                 	db	13
   741  00FE98  0A                 	db	10
   742  00FE99  00                 	db	0
   743  00FE9A                     STR_31:
   744                           
   745                           ; BSR set to: 0
   746  00FE9A  43                 	db	67	;'C'
   747  00FE9B  48                 	db	72	;'H'
   748  00FE9C  41                 	db	65	;'A'
   749  00FE9D  4E                 	db	78	;'N'
   750  00FE9E  4E                 	db	78	;'N'
   751  00FE9F  45                 	db	69	;'E'
   752  00FEA0  4C                 	db	76	;'L'
   753  00FEA1  3D                 	db	61	;'='
   754  00FEA2  25                 	db	37
   755  00FEA3  75                 	db	117	;'u'
   756  00FEA4  0D                 	db	13
   757  00FEA5  0A                 	db	10
   758  00FEA6  00                 	db	0
   759  00FEA7                     STR_84:
   760                           
   761                           ; BSR set to: 0
   762  00FEA7  2B                 	db	43
   763  00FEA8  43                 	db	67	;'C'
   764  00FEA9  41                 	db	65	;'A'
   765  00FEAA  44                 	db	68	;'D'
   766  00FEAB  43                 	db	67	;'C'
   767  00FEAC  4F                 	db	79	;'O'
   768  00FEAD  55                 	db	85	;'U'
   769  00FEAE  4E                 	db	78	;'N'
   770  00FEAF  54                 	db	84	;'T'
   771  00FEB0  45                 	db	69	;'E'
   772  00FEB1  52                 	db	82	;'R'
   773  00FEB2  3F                 	db	63	;'?'
   774  00FEB3  00                 	db	0
   775  00FEB4                     STR_58:
   776                           
   777                           ; BSR set to: 0
   778  00FEB4  48                 	db	72	;'H'
   779  00FEB5  6F                 	db	111	;'o'
   780  00FEB6  70                 	db	112	;'p'
   781  00FEB7  20                 	db	32
   782  00FEB8  74                 	db	116	;'t'
   783  00FEB9  61                 	db	97	;'a'
   784  00FEBA  62                 	db	98	;'b'
   785  00FEBB  6C                 	db	108	;'l'
   786  00FEBC  65                 	db	101	;'e'
   787  00FEBD  0D                 	db	13
   788  00FEBE  0A                 	db	10
   789  00FEBF  00                 	db	0
   790  00FEC0                     STR_129:
   791                           
   792                           ; BSR set to: 0
   793  00FEC0  4C                 	db	76	;'L'
   794  00FEC1  6F                 	db	111	;'o'
   795  00FEC2  52                 	db	82	;'R'
   796  00FEC3  61                 	db	97	;'a'
   797  00FEC4  20                 	db	32
   798  00FEC5  4D                 	db	77	;'M'
   799  00FEC6  65                 	db	101	;'e'
   800  00FEC7  73                 	db	115	;'s'
   801  00FEC8  68                 	db	104	;'h'
   802  00FEC9  0D                 	db	13
   803  00FECA  0A                 	db	10
   804  00FECB  00                 	db	0
   805  00FECC                     STR_4:
   806                           
   807                           ; BSR set to: 0
   808  00FECC  4E                 	db	78	;'N'
   809  00FECD  4F                 	db	79	;'O'
   810  00FECE  54                 	db	84	;'T'
   811  00FECF  20                 	db	32
   812  00FED0  4F                 	db	79	;'O'
   813  00FED1  4B                 	db	75	;'K'
   814  00FED2  3A                 	db	58	;':'
   815  00FED3  25                 	db	37
   816  00FED4  75                 	db	117	;'u'
   817  00FED5  0D                 	db	13
   818  00FED6  0A                 	db	10
   819  00FED7  00                 	db	0
   820  00FED8                     STR_70:
   821                           
   822                           ; BSR set to: 0
   823  00FED8  2B                 	db	43
   824  00FED9  53                 	db	83	;'S'
   825  00FEDA  48                 	db	72	;'H'
   826  00FEDB  4F                 	db	79	;'O'
   827  00FEDC  57                 	db	87	;'W'
   828  00FEDD  48                 	db	72	;'H'
   829  00FEDE  4F                 	db	79	;'O'
   830  00FEDF  50                 	db	80	;'P'
   831  00FEE0  53                 	db	83	;'S'
   832  00FEE1  3F                 	db	63	;'?'
   833  00FEE2  00                 	db	0
   834  00FEE3                     STR_90:
   835                           
   836                           ; BSR set to: 0
   837  00FEE3  2B                 	db	43
   838  00FEE4  43                 	db	67	;'C'
   839  00FEE5  41                 	db	65	;'A'
   840  00FEE6  44                 	db	68	;'D'
   841  00FEE7  52                 	db	82	;'R'
   842  00FEE8  53                 	db	83	;'S'
   843  00FEE9  53                 	db	83	;'S'
   844  00FEEA  49                 	db	73	;'I'
   845  00FEEB  3D                 	db	61	;'='
   846  00FEEC  00                 	db	0
   847  00FEED                     STR_126:
   848                           
   849                           ; BSR set to: 0
   850  00FEED  2B                 	db	43
   851  00FEEE  54                 	db	84	;'T'
   852  00FEEF  58                 	db	88	;'X'
   853  00FEF0  50                 	db	80	;'P'
   854  00FEF1  4F                 	db	79	;'O'
   855  00FEF2  57                 	db	87	;'W'
   856  00FEF3  45                 	db	69	;'E'
   857  00FEF4  52                 	db	82	;'R'
   858  00FEF5  3D                 	db	61	;'='
   859  00FEF6  00                 	db	0
   860  00FEF7                     STR_88:
   861                           
   862                           ; BSR set to: 0
   863  00FEF7  2B                 	db	43
   864  00FEF8  43                 	db	67	;'C'
   865  00FEF9  41                 	db	65	;'A'
   866  00FEFA  44                 	db	68	;'D'
   867  00FEFB  52                 	db	82	;'R'
   868  00FEFC  53                 	db	83	;'S'
   869  00FEFD  53                 	db	83	;'S'
   870  00FEFE  49                 	db	73	;'I'
   871  00FEFF  3F                 	db	63	;'?'
   872  00FF00  00                 	db	0
   873  00FF01                     STR_124:
   874                           
   875                           ; BSR set to: 0
   876  00FF01  2B                 	db	43
   877  00FF02  54                 	db	84	;'T'
   878  00FF03  58                 	db	88	;'X'
   879  00FF04  50                 	db	80	;'P'
   880  00FF05  4F                 	db	79	;'O'
   881  00FF06  57                 	db	87	;'W'
   882  00FF07  45                 	db	69	;'E'
   883  00FF08  52                 	db	82	;'R'
   884  00FF09  3F                 	db	63	;'?'
   885  00FF0A  00                 	db	0
   886  00FF0B                     STR_76:
   887                           
   888                           ; BSR set to: 0
   889  00FF0B  2B                 	db	43
   890  00FF0C  42                 	db	66	;'B'
   891  00FF0D  4F                 	db	79	;'O'
   892  00FF0E  4F                 	db	79	;'O'
   893  00FF0F  54                 	db	84	;'T'
   894  00FF10  4C                 	db	76	;'L'
   895  00FF11  4F                 	db	79	;'O'
   896  00FF12  41                 	db	65	;'A'
   897  00FF13  44                 	db	68	;'D'
   898  00FF14  00                 	db	0
   899  00FF15                     STR_82:
   900                           
   901                           ; BSR set to: 0
   902  00FF15  2B                 	db	43
   903  00FF16  41                 	db	65	;'A'
   904  00FF17  45                 	db	69	;'E'
   905  00FF18  53                 	db	83	;'S'
   906  00FF19  4B                 	db	75	;'K'
   907  00FF1A  45                 	db	69	;'E'
   908  00FF1B  59                 	db	89	;'Y'
   909  00FF1C  3A                 	db	58	;':'
   910  00FF1D  00                 	db	0
   911  00FF1E                     STR_96:
   912                           
   913                           ; BSR set to: 0
   914  00FF1E  2B                 	db	43
   915  00FF1F  48                 	db	72	;'H'
   916  00FF20  4F                 	db	79	;'O'
   917  00FF21  50                 	db	80	;'P'
   918  00FF22  54                 	db	84	;'T'
   919  00FF23  54                 	db	84	;'T'
   920  00FF24  4C                 	db	76	;'L'
   921  00FF25  3D                 	db	61	;'='
   922  00FF26  00                 	db	0
   923  00FF27                     STR_108:
   924                           
   925                           ; BSR set to: 0
   926  00FF27  2B                 	db	43
   927  00FF28  50                 	db	80	;'P'
   928  00FF29  41                 	db	65	;'A'
   929  00FF2A  52                 	db	82	;'R'
   930  00FF2B  49                 	db	73	;'I'
   931  00FF2C  54                 	db	84	;'T'
   932  00FF2D  59                 	db	89	;'Y'
   933  00FF2E  3D                 	db	61	;'='
   934  00FF2F  00                 	db	0
   935  00FF30                     STR_62:
   936                           
   937                           ; BSR set to: 0
   938  00FF30  2B                 	db	43
   939  00FF31  53                 	db	83	;'S'
   940  00FF32  45                 	db	69	;'E'
   941  00FF33  54                 	db	84	;'T'
   942  00FF34  53                 	db	83	;'S'
   943  00FF35  49                 	db	73	;'I'
   944  00FF36  4E                 	db	78	;'N'
   945  00FF37  4B                 	db	75	;'K'
   946  00FF38  00                 	db	0
   947  00FF39                     STR_54:
   948                           
   949                           ; BSR set to: 0
   950  00FF39  53                 	db	83	;'S'
   951  00FF3A  46                 	db	70	;'F'
   952  00FF3B  3D                 	db	61	;'='
   953  00FF3C  25                 	db	37
   954  00FF3D  75                 	db	117	;'u'
   955  00FF3E  0D                 	db	13
   956  00FF3F  0A                 	db	10
   957  00FF40  00                 	db	0
   958  00FF41                     STR_132:
   959                           
   960                           ; BSR set to: 0
   961  00FF41  52                 	db	82	;'R'
   962  00FF42  65                 	db	101	;'e'
   963  00FF43  67                 	db	103	;'g'
   964  00FF44  69                 	db	105	;'i'
   965  00FF45  6F                 	db	111	;'o'
   966  00FF46  6E                 	db	110	;'n'
   967  00FF47  20                 	db	32
   968  00FF48  00                 	db	0
   969  00FF49                     STR_106:
   970                           
   971                           ; BSR set to: 0
   972  00FF49  2B                 	db	43
   973  00FF4A  4E                 	db	78	;'N'
   974  00FF4B  41                 	db	65	;'A'
   975  00FF4C  44                 	db	68	;'D'
   976  00FF4D  44                 	db	68	;'D'
   977  00FF4E  52                 	db	82	;'R'
   978  00FF4F  3D                 	db	61	;'='
   979  00FF50  00                 	db	0
   980  00FF51                     STR_72:
   981                           
   982                           ; BSR set to: 0
   983  00FF51  2B                 	db	43
   984  00FF52  42                 	db	66	;'B'
   985  00FF53  43                 	db	67	;'C'
   986  00FF54  41                 	db	65	;'A'
   987  00FF55  53                 	db	83	;'S'
   988  00FF56  54                 	db	84	;'T'
   989  00FF57  3D                 	db	61	;'='
   990  00FF58  00                 	db	0
   991  00FF59                     STR_104:
   992                           
   993                           ; BSR set to: 0
   994  00FF59  2B                 	db	43
   995  00FF5A  4E                 	db	78	;'N'
   996  00FF5B  41                 	db	65	;'A'
   997  00FF5C  44                 	db	68	;'D'
   998  00FF5D  44                 	db	68	;'D'
   999  00FF5E  52                 	db	82	;'R'
  1000  00FF5F  3F                 	db	63	;'?'
  1001  00FF60  00                 	db	0
  1002  00FF61                     STR_60:
  1003                           
  1004                           ; BSR set to: 0
  1005  00FF61  2B                 	db	43
  1006  00FF62  53                 	db	83	;'S'
  1007  00FF63  45                 	db	69	;'E'
  1008  00FF64  4E                 	db	78	;'N'
  1009  00FF65  44                 	db	68	;'D'
  1010  00FF66  3A                 	db	58	;':'
  1011  00FF67  00                 	db	0
  1012  00FF68                     STR_74:
  1013                           
  1014                           ; BSR set to: 0
  1015  00FF68  2B                 	db	43
  1016  00FF69  42                 	db	66	;'B'
  1017  00FF6A  41                 	db	65	;'A'
  1018  00FF6B  55                 	db	85	;'U'
  1019  00FF6C  44                 	db	68	;'D'
  1020  00FF6D  3D                 	db	61	;'='
  1021  00FF6E  00                 	db	0
  1022  00FF6F                     STR_114:
  1023                           
  1024                           ; BSR set to: 0
  1025  00FF6F  2B                 	db	43
  1026  00FF70  52                 	db	82	;'R'
  1027  00FF71  46                 	db	70	;'F'
  1028  00FF72  43                 	db	67	;'C'
  1029  00FF73  48                 	db	72	;'H'
  1030  00FF74  3D                 	db	61	;'='
  1031  00FF75  00                 	db	0
  1032  00FF76                     STR_80:
  1033                           
  1034                           ; BSR set to: 0
  1035  00FF76  2B                 	db	43
  1036  00FF77  41                 	db	65	;'A'
  1037  00FF78  44                 	db	68	;'D'
  1038  00FF79  44                 	db	68	;'D'
  1039  00FF7A  52                 	db	82	;'R'
  1040  00FF7B  3D                 	db	61	;'='
  1041  00FF7C  00                 	db	0
  1042  00FF7D                     STR_94:
  1043                           
  1044                           ; BSR set to: 0
  1045  00FF7D  2B                 	db	43
  1046  00FF7E  48                 	db	72	;'H'
  1047  00FF7F  4F                 	db	79	;'O'
  1048  00FF80  50                 	db	80	;'P'
  1049  00FF81  53                 	db	83	;'S'
  1050  00FF82  3D                 	db	61	;'='
  1051  00FF83  00                 	db	0
  1052  00FF84                     STR_102:
  1053                           
  1054                           ; BSR set to: 0
  1055  00FF84  2B                 	db	43
  1056  00FF85  4D                 	db	77	;'M'
  1057  00FF86  4F                 	db	79	;'O'
  1058  00FF87  44                 	db	68	;'D'
  1059  00FF88  45                 	db	69	;'E'
  1060  00FF89  3F                 	db	63	;'?'
  1061  00FF8A  00                 	db	0
  1062  00FF8B                     STR_112:
  1063                           
  1064                           ; BSR set to: 0
  1065  00FF8B  2B                 	db	43
  1066  00FF8C  52                 	db	82	;'R'
  1067  00FF8D  46                 	db	70	;'F'
  1068  00FF8E  43                 	db	67	;'C'
  1069  00FF8F  48                 	db	72	;'H'
  1070  00FF90  3F                 	db	63	;'?'
  1071  00FF91  00                 	db	0
  1072  00FF92                     STR_78:
  1073                           
  1074                           ; BSR set to: 0
  1075  00FF92  2B                 	db	43
  1076  00FF93  41                 	db	65	;'A'
  1077  00FF94  44                 	db	68	;'D'
  1078  00FF95  44                 	db	68	;'D'
  1079  00FF96  52                 	db	82	;'R'
  1080  00FF97  3F                 	db	63	;'?'
  1081  00FF98  00                 	db	0
  1082  00FF99                     STR_92:
  1083                           
  1084                           ; BSR set to: 0
  1085  00FF99  2B                 	db	43
  1086  00FF9A  48                 	db	72	;'H'
  1087  00FF9B  4F                 	db	79	;'O'
  1088  00FF9C  50                 	db	80	;'P'
  1089  00FF9D  53                 	db	83	;'S'
  1090  00FF9E  3F                 	db	63	;'?'
  1091  00FF9F  00                 	db	0
  1092  00FFA0                     STR_118:
  1093                           
  1094                           ; BSR set to: 0
  1095  00FFA0  2B                 	db	43
  1096  00FFA1  52                 	db	82	;'R'
  1097  00FFA2  58                 	db	88	;'X'
  1098  00FFA3  43                 	db	67	;'C'
  1099  00FFA4  54                 	db	84	;'T'
  1100  00FFA5  3F                 	db	63	;'?'
  1101  00FFA6  00                 	db	0
  1102  00FFA7                     STR_64:
  1103                           
  1104                           ; BSR set to: 0
  1105  00FFA7  2B                 	db	43
  1106  00FFA8  53                 	db	83	;'S'
  1107  00FFA9  53                 	db	83	;'S'
  1108  00FFAA  49                 	db	73	;'I'
  1109  00FFAB  4E                 	db	78	;'N'
  1110  00FFAC  4B                 	db	75	;'K'
  1111  00FFAD  00                 	db	0
  1112  00FFAE                     STR_122:
  1113                           
  1114                           ; BSR set to: 0
  1115  00FFAE  2B                 	db	43
  1116  00FFAF  54                 	db	84	;'T'
  1117  00FFB0  54                 	db	84	;'T'
  1118  00FFB1  4C                 	db	76	;'L'
  1119  00FFB2  3D                 	db	61	;'='
  1120  00FFB3  00                 	db	0
  1121  00FFB4                     STR_100:
  1122                           
  1123                           ; BSR set to: 0
  1124  00FFB4  2B                 	db	43
  1125  00FFB5  4D                 	db	77	;'M'
  1126  00FFB6  41                 	db	65	;'A'
  1127  00FFB7  43                 	db	67	;'C'
  1128  00FFB8  3F                 	db	63	;'?'
  1129  00FFB9  00                 	db	0
  1130  00FFBA                     STR_120:
  1131                           
  1132                           ; BSR set to: 0
  1133  00FFBA  2B                 	db	43
  1134  00FFBB  54                 	db	84	;'T'
  1135  00FFBC  54                 	db	84	;'T'
  1136  00FFBD  4C                 	db	76	;'L'
  1137  00FFBE  3F                 	db	63	;'?'
  1138  00FFBF  00                 	db	0
  1139  00FFC0                     STR_46:
  1140                           
  1141                           ; BSR set to: 0
  1142  00FFC0  3D                 	db	61	;'='
  1143  00FFC1  4E                 	db	78	;'N'
  1144  00FFC2  4F                 	db	79	;'O'
  1145  00FFC3  4E                 	db	78	;'N'
  1146  00FFC4  45                 	db	69	;'E'
  1147  00FFC5  00                 	db	0
  1148  00FFC6                     STR_48:
  1149                           
  1150                           ; BSR set to: 0
  1151  00FFC6  3D                 	db	61	;'='
  1152  00FFC7  45                 	db	69	;'E'
  1153  00FFC8  56                 	db	86	;'V'
  1154  00FFC9  45                 	db	69	;'E'
  1155  00FFCA  4E                 	db	78	;'N'
  1156  00FFCB  00                 	db	0
  1157  00FFCC                     STR_110:
  1158                           
  1159                           ; BSR set to: 0
  1160  00FFCC  2B                 	db	43
  1161  00FFCD  52                 	db	82	;'R'
  1162  00FFCE  45                 	db	69	;'E'
  1163  00FFCF  43                 	db	67	;'C'
  1164  00FFD0  56                 	db	86	;'V'
  1165  00FFD1  00                 	db	0
  1166  00FFD2                     STR_133:
  1167                           
  1168                           ; BSR set to: 0
  1169  00FFD2  4E                 	db	78	;'N'
  1170  00FFD3  41                 	db	65	;'A'
  1171  00FFD4  0D                 	db	13
  1172  00FFD5  0A                 	db	10
  1173  00FFD6  00                 	db	0
  1174  00FFD7                     STR_11:
  1175                           
  1176                           ; BSR set to: 0
  1177  00FFD7  4F                 	db	79	;'O'
  1178  00FFD8  4B                 	db	75	;'K'
  1179  00FFD9  0D                 	db	13
  1180  00FFDA  0A                 	db	10
  1181  00FFDB  00                 	db	0
  1182  00FFDC                     STR_16:
  1183                           
  1184                           ; BSR set to: 0
  1185  00FFDC  4D                 	db	77	;'M'
  1186  00FFDD  41                 	db	65	;'A'
  1187  00FFDE  43                 	db	67	;'C'
  1188  00FFDF  3D                 	db	61	;'='
  1189  00FFE0  00                 	db	0
  1190  00FFE1                     STR_68:
  1191                           
  1192                           ; BSR set to: 0
  1193  00FFE1  2B                 	db	43
  1194  00FFE2  53                 	db	83	;'S'
  1195  00FFE3  46                 	db	70	;'F'
  1196  00FFE4  3D                 	db	61	;'='
  1197  00FFE5  00                 	db	0
  1198  00FFE6                     STR_66:
  1199                           
  1200                           ; BSR set to: 0
  1201  00FFE6  2B                 	db	43
  1202  00FFE7  53                 	db	83	;'S'
  1203  00FFE8  46                 	db	70	;'F'
  1204  00FFE9  3F                 	db	63	;'?'
  1205  00FFEA  00                 	db	0
  1206  00FFEB                     STR_44:
  1207                           
  1208                           ; BSR set to: 0
  1209  00FFEB  3D                 	db	61	;'='
  1210  00FFEC  4F                 	db	79	;'O'
  1211  00FFED  44                 	db	68	;'D'
  1212  00FFEE  44                 	db	68	;'D'
  1213  00FFEF  00                 	db	0
  1214  00FFF0                     STR_116:
  1215                           
  1216                           ; BSR set to: 0
  1217  00FFF0  2B                 	db	43
  1218  00FFF1  52                 	db	82	;'R'
  1219  00FFF2  53                 	db	83	;'S'
  1220  00FFF3  54                 	db	84	;'T'
  1221  00FFF4  00                 	db	0
  1222  00FFF5                     STR_17:
  1223                           
  1224                           ; BSR set to: 0
  1225  00FFF5  25                 	db	37
  1226  00FFF6  30                 	db	48	;'0'
  1227  00FFF7  32                 	db	50	;'2'
  1228  00FFF8  58                 	db	88	;'X'
  1229  00FFF9  00                 	db	0
  1230  00FFFA                     STR_98:
  1231                           
  1232                           ; BSR set to: 0
  1233  00FFFA  2B                 	db	43
  1234  00FFFB  49                 	db	73	;'I'
  1235  00FFFC  00                 	db	0
  1236  00FFFD                     STR_53:
  1237                           
  1238                           ; BSR set to: 0
  1239  00FFFD  0D                 	db	13
  1240  00FFFE  00                 	db	0
  1241  0000                     
  1242                           ; #config settings
  1243  00FFFF  00                 	db	0	; dummy byte at the end
  1244  0000                     
  1245                           	psect	nvBANK1
  1246  0001EC                     __pnvBANK1:
  1247                           	opt callstack 0
  1248  0001EC                     _UART1_ErrorHandler:
  1249                           	opt callstack 0
  1250  0001EC                     	ds	2
  1251  0001EE                     _UART1_OverrunErrorHandler:
  1252                           	opt callstack 0
  1253  0001EE                     	ds	2
  1254  0001F0                     _UART1_FramingErrorHandler:
  1255                           	opt callstack 0
  1256  0001F0                     	ds	2
  1257  0001F2                     _TMR0_InterruptHandler:
  1258                           	opt callstack 0
  1259  0001F2                     	ds	2
  1260  0001F4                     _timer0ReloadVal16bit:
  1261                           	opt callstack 0
  1262  0001F4                     	ds	2
  1263  0001F6                     _UART1_TxInterruptHandler:
  1264                           	opt callstack 0
  1265  0001F6                     	ds	2
  1266  0001F8                     _UART1_RxInterruptHandler:
  1267                           	opt callstack 0
  1268  0001F8                     	ds	2
  1269  0001FA                     _uart1TxBufferRemaining:
  1270                           	opt callstack 0
  1271  0001FA                     	ds	1
  1272  0000                     _SCANCON0bits	set	14716
  1273  0000                     _CRCDATH	set	14689
  1274  0000                     _CRCDATL	set	14688
  1275  0000                     _CRCCON1bits	set	14697
  1276  0000                     _CRCXORL	set	14694
  1277  0000                     _CRCXORH	set	14695
  1278  0000                     _SCANTRIG	set	14717
  1279  0000                     _SCANHADRL	set	14713
  1280  0000                     _SCANHADRH	set	14714
  1281  0000                     _SCANHADRU	set	14715
  1282  0000                     _SCANLADRL	set	14710
  1283  0000                     _SCANLADRH	set	14711
  1284  0000                     _SCANLADRU	set	14712
  1285  0000                     _SCANCON0	set	14716
  1286  0000                     _CRCCON1	set	14697
  1287  0000                     _CRCCON0	set	14696
  1288  0000                     _PMD7	set	14791
  1289  0000                     _PMD6	set	14790
  1290  0000                     _PMD5	set	14789
  1291  0000                     _PMD4	set	14788
  1292  0000                     _PMD3	set	14787
  1293  0000                     _PMD2	set	14786
  1294  0000                     _PMD1	set	14785
  1295  0000                     _PMD0	set	14784
  1296  0000                     _OSCTUNE	set	14814
  1297  0000                     _OSCFRQ	set	14815
  1298  0000                     _OSCEN	set	14813
  1299  0000                     _OSCCON3	set	14811
  1300  0000                     _OSCCON1	set	14809
  1301  0000                     _IPR3bits	set	14723
  1302  0000                     _PIR0bits	set	14752
  1303  0000                     _NVMCON2	set	14822
  1304  0000                     _NVMDAT	set	14819
  1305  0000                     _NVMADRL	set	14816
  1306  0000                     _NVMADRH	set	14817
  1307  0000                     _NVMCON1bits	set	14821
  1308  0000                     _PIR3bits	set	14755
  1309  0000                     _PIR2bits	set	14754
  1310  0000                     _PIE3bits	set	14739
  1311  0000                     _CRCCON0bits	set	14696
  1312  0000                     _CRCACCH	set	14691
  1313  0000                     _CRCACCL	set	14690
  1314  0000                     _SPI1SDIPPS	set	15071
  1315  0000                     _RC7PPS	set	14871
  1316  0000                     _U1CTSPPS	set	15078
  1317  0000                     _U1RXPPS	set	15077
  1318  0000                     _RC1PPS	set	14865
  1319  0000                     _RB0PPS	set	14856
  1320  0000                     _SPI1SSPPS	set	15072
  1321  0000                     _SPI1SCKPPS	set	15070
  1322  0000                     _RC0PPS	set	14864
  1323  0000                     _INLVLE	set	14980
  1324  0000                     _INLVLC	set	14948
  1325  0000                     _INLVLB	set	14932
  1326  0000                     _INLVLA	set	14916
  1327  0000                     _SLRCONC	set	14947
  1328  0000                     _SLRCONB	set	14931
  1329  0000                     _SLRCONA	set	14915
  1330  0000                     _ODCONC	set	14946
  1331  0000                     _ODCONB	set	14930
  1332  0000                     _ODCONA	set	14914
  1333  0000                     _RC4I2C	set	14955
  1334  0000                     _RC3I2C	set	14954
  1335  0000                     _RB2I2C	set	14939
  1336  0000                     _RB1I2C	set	14938
  1337  0000                     _WPUC	set	14945
  1338  0000                     _WPUA	set	14913
  1339  0000                     _WPUB	set	14929
  1340  0000                     _WPUE	set	14977
  1341  0000                     _ANSELA	set	14912
  1342  0000                     _ANSELB	set	14928
  1343  0000                     _ANSELC	set	14944
  1344  0000                     _U1TXB	set	15850
  1345  0000                     _U1ERRIE	set	15866
  1346  0000                     _U1UIR	set	15864
  1347  0000                     _U1P3H	set	15857
  1348  0000                     _U1P3L	set	15856
  1349  0000                     _U1P2H	set	15855
  1350  0000                     _U1P2L	set	15854
  1351  0000                     _U1P1H	set	15853
  1352  0000                     _U1P1L	set	15852
  1353  0000                     _SPI1RXB	set	15632
  1354  0000                     _SPI1TXB	set	15633
  1355  0000                     _SPI1TCNTL	set	15634
  1356  0000                     _SPI1CON0bits	set	15636
  1357  0000                     _SPI1BAUD	set	15641
  1358  0000                     _SPI1CLK	set	15644
  1359  0000                     _SPI1CON2	set	15638
  1360  0000                     _SPI1CON1	set	15637
  1361  0000                     _SPI1CON0	set	15636
  1362  0000                     _U1ERRIR	set	15865
  1363  0000                     _U1FIFO	set	15863
  1364  0000                     _U1ERRIRbits	set	15865
  1365  0000                     _U1BRGH	set	15862
  1366  0000                     _U1BRGL	set	15861
  1367  0000                     _U1CON2	set	15860
  1368  0000                     _U1CON0	set	15858
  1369  0000                     _U1CON1	set	15859
  1370  0000                     _U1RXB	set	15848
  1371  0000                     _PORTBbits	set	16331
  1372  0000                     _LATCbits	set	16316
  1373  0000                     _TRISC	set	16324
  1374  0000                     _TRISB	set	16323
  1375  0000                     _TRISA	set	16322
  1376  0000                     _LATC	set	16316
  1377  0000                     _LATB	set	16315
  1378  0000                     _LATA	set	16314
  1379  0000                     _IVTBASEL	set	16341
  1380  0000                     _IVTBASEH	set	16342
  1381  0000                     _IVTBASEU	set	16343
  1382  0000                     _IVTLOCKbits	set	16340
  1383  0000                     _IVTLOCK	set	16340
  1384  0000                     _INTCON0bits	set	16338
  1385  0000                     _TABLAT	set	16373
  1386  0000                     _TBLPTRL	set	16374
  1387  0000                     _TBLPTRH	set	16375
  1388  0000                     _TBLPTRU	set	16376
  1389  0000                     _T0CON0bits	set	16312
  1390  0000                     _T0CON0	set	16312
  1391  0000                     _TMR0L	set	16310
  1392  0000                     _TMR0H	set	16311
  1393  0000                     _T0CON1	set	16313
  1394  0000                     _TRISBbits	set	16323
  1395  0000                     _LATAbits	set	16314
  1396  0000                     _GIE	set	130711
  1397                           
  1398                           	psect	cinit
  1399  006F86                     __pcinit:
  1400                           	opt callstack 0
  1401  006F86                     start_initialization:
  1402                           	opt callstack 0
  1403  006F86                     __initialization:
  1404                           	opt callstack 0
  1405                           
  1406                           ; Initialize objects allocated to BANK2 (10 bytes)
  1407                           ; load TBLPTR registers with __pidataBANK2
  1408  006F86  0ED2               	movlw	low __pidataBANK2
  1409  006F88  6EF6               	movwf	tblptrl,c
  1410  006F8A  0E9C               	movlw	high __pidataBANK2
  1411  006F8C  6EF7               	movwf	tblptrh,c
  1412  006F8E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1413  006F90  6EF8               	movwf	tblptru,c
  1414  006F92  EE00  F2E6         	lfsr	0,__pdataBANK2
  1415  006F96  EE10 F00A          	lfsr	1,10
  1416  006F9A                     copy_data0:
  1417  006F9A  0009               	tblrd		*+
  1418  006F9C  006F FFD7 FFEE     	movff	tablat,postinc0
  1419  006FA2  50E5               	movf	postdec1,w,c
  1420  006FA4  50E1               	movf	fsr1l,w,c
  1421  006FA6  E1F9               	bnz	copy_data0
  1422                           
  1423                           ; Initialize objects allocated to BANK1 (16 bytes)
  1424                           ; load TBLPTR registers with __pidataBANK1
  1425  006FA8  0EC0               	movlw	low __pidataBANK1
  1426  006FAA  6EF6               	movwf	tblptrl,c
  1427  006FAC  0E9B               	movlw	high __pidataBANK1
  1428  006FAE  6EF7               	movwf	tblptrh,c
  1429  006FB0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1430  006FB2  6EF8               	movwf	tblptru,c
  1431  006FB4  EE00  F1DC         	lfsr	0,__pdataBANK1
  1432  006FB8  EE10 F010          	lfsr	1,16
  1433  006FBC                     copy_data1:
  1434  006FBC  0009               	tblrd		*+
  1435  006FBE  006F FFD7 FFEE     	movff	tablat,postinc0
  1436  006FC4  50E5               	movf	postdec1,w,c
  1437  006FC6  50E1               	movf	fsr1l,w,c
  1438  006FC8  E1F9               	bnz	copy_data1
  1439                           
  1440                           ; Initialize objects allocated to BANK0 (4 bytes)
  1441                           ; load TBLPTR registers with __pidataBANK0
  1442  006FCA  0E0E               	movlw	low __pidataBANK0
  1443  006FCC  6EF6               	movwf	tblptrl,c
  1444  006FCE  0E9D               	movlw	high __pidataBANK0
  1445  006FD0  6EF7               	movwf	tblptrh,c
  1446  006FD2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1447  006FD4  6EF8               	movwf	tblptru,c
  1448  006FD6  EE00  F0FB         	lfsr	0,__pdataBANK0
  1449  006FDA  EE10 F004          	lfsr	1,4
  1450  006FDE                     copy_data2:
  1451  006FDE  0009               	tblrd		*+
  1452  006FE0  006F FFD7 FFEE     	movff	tablat,postinc0
  1453  006FE6  50E5               	movf	postdec1,w,c
  1454  006FE8  50E1               	movf	fsr1l,w,c
  1455  006FEA  E1F9               	bnz	copy_data2
  1456                           
  1457                           ; Clear objects allocated to BIGRAM (685 bytes)
  1458  006FEC  EE01  F1BD         	lfsr	0,__pbssBIGRAM
  1459  006FF0  EE10 F2AD          	lfsr	1,685
  1460  006FF4                     clear_0:
  1461  006FF4  6AEE               	clrf	postinc0,c
  1462  006FF6  50E5               	movf	postdec1,w,c
  1463  006FF8  50E1               	movf	fsr1l,w,c
  1464  006FFA  E1FC               	bnz	clear_0
  1465  006FFC  50E2               	movf	fsr1h,w,c
  1466  006FFE  E1FA               	bnz	clear_0
  1467                           
  1468                           ; Clear objects allocated to BANK5 (189 bytes)
  1469  007000  EE01  F100         	lfsr	0,__pbssBANK5
  1470  007004  0EBD               	movlw	189
  1471  007006                     clear_1:
  1472  007006  6AEE               	clrf	postinc0,c
  1473  007008  06E8               	decf	wreg,f,c
  1474  00700A  E1FD               	bnz	clear_1
  1475                           
  1476                           ; Clear objects allocated to BANK4 (128 bytes)
  1477  00700C  EE01  F000         	lfsr	0,__pbssBANK4
  1478  007010  0E80               	movlw	128
  1479  007012                     clear_2:
  1480  007012  6AEE               	clrf	postinc0,c
  1481  007014  06E8               	decf	wreg,f,c
  1482  007016  E1FD               	bnz	clear_2
  1483                           
  1484                           ; Clear objects allocated to BANK3 (210 bytes)
  1485  007018  EE00  F300         	lfsr	0,__pbssBANK3
  1486  00701C  0ED2               	movlw	210
  1487  00701E                     clear_3:
  1488  00701E  6AEE               	clrf	postinc0,c
  1489  007020  06E8               	decf	wreg,f,c
  1490  007022  E1FD               	bnz	clear_3
  1491                           
  1492                           ; Clear objects allocated to BANK2 (230 bytes)
  1493  007024  EE00  F200         	lfsr	0,__pbssBANK2
  1494  007028  0EE6               	movlw	230
  1495  00702A                     clear_4:
  1496  00702A  6AEE               	clrf	postinc0,c
  1497  00702C  06E8               	decf	wreg,f,c
  1498  00702E  E1FD               	bnz	clear_4
  1499                           
  1500                           ; Clear objects allocated to BANK1 (220 bytes)
  1501  007030  EE00  F100         	lfsr	0,__pbssBANK1
  1502  007034  0EDC               	movlw	220
  1503  007036                     clear_5:
  1504  007036  6AEE               	clrf	postinc0,c
  1505  007038  06E8               	decf	wreg,f,c
  1506  00703A  E1FD               	bnz	clear_5
  1507                           
  1508                           ; Clear objects allocated to BANK0 (25 bytes)
  1509  00703C  EE00  F0E2         	lfsr	0,__pbssBANK0
  1510  007040  0E19               	movlw	25
  1511  007042                     clear_6:
  1512  007042  6AEE               	clrf	postinc0,c
  1513  007044  06E8               	decf	wreg,f,c
  1514  007046  E1FD               	bnz	clear_6
  1515                           
  1516                           ; Clear objects allocated to COMRAM (1 bytes)
  1517  007048  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1518                           
  1519                           ;
  1520                           ; Setup IVTBASE
  1521                           ;
  1522  00704A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1523  00704C  6ED5               	movwf	213,c
  1524  00704E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1525  007050  6ED6               	movwf	214,c
  1526  007052  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1527  007054  6ED7               	movwf	215,c
  1528  007056                     end_of_initialization:
  1529                           	opt callstack 0
  1530  007056                     __end_of__initialization:
  1531                           	opt callstack 0
  1532  007056  0100               	movlb	0
  1533  007058  EF2B  F04B         	goto	_main	;jump to C main() function
  1534                           
  1535                           	psect	bssCOMRAM
  1536  00005E                     __pbssCOMRAM:
  1537                           	opt callstack 0
  1538  00005E                     _uart1RxHead:
  1539                           	opt callstack 0
  1540  00005E                     	ds	1
  1541                           
  1542                           	psect	bssBANK0
  1543  0000E2                     __pbssBANK0:
  1544                           	opt callstack 0
  1545  0000E2                     _prec:
  1546                           	opt callstack 0
  1547  0000E2                     	ds	2
  1548  0000E4                     _flags:
  1549                           	opt callstack 0
  1550  0000E4                     	ds	2
  1551  0000E6                     _timers:
  1552                           	opt callstack 0
  1553  0000E6                     	ds	2
  1554  0000E8                     _nwkDataReqQueue:
  1555                           	opt callstack 0
  1556  0000E8                     	ds	2
  1557  0000EA                     _eeprom_write_flags:
  1558                           	opt callstack 0
  1559  0000EA                     	ds	2
  1560  0000EC                     _uart1RxCount:
  1561                           	opt callstack 0
  1562  0000EC                     	ds	1
  1563  0000ED                     _uart1RxTail:
  1564                           	opt callstack 0
  1565  0000ED                     	ds	1
  1566  0000EE                     _uart1TxTail:
  1567                           	opt callstack 0
  1568  0000EE                     	ds	1
  1569  0000EF                     _uart1TxHead:
  1570                           	opt callstack 0
  1571  0000EF                     	ds	1
  1572  0000F0                     _TXPower:
  1573                           	opt callstack 0
  1574  0000F0                     	ds	1
  1575  0000F1                     _channel:
  1576                           	opt callstack 0
  1577  0000F1                     	ds	1
  1578  0000F2                     _current_sf:
  1579                           	opt callstack 0
  1580  0000F2                     	ds	1
  1581  0000F3                     _ledtimer:
  1582                           	opt callstack 0
  1583  0000F3                     	ds	2
  1584  0000F5                     _txTimeOut:
  1585                           	opt callstack 0
  1586  0000F5                     	ds	2
  1587  0000F7                     _cadTimeOut:
  1588                           	opt callstack 0
  1589  0000F7                     	ds	2
  1590  0000F9                     __cadBackoffTimer:
  1591                           	opt callstack 0
  1592  0000F9                     	ds	2
  1593                           
  1594                           	psect	dataBANK0
  1595  0000FB                     __pdataBANK0:
  1596                           	opt callstack 0
  1597  0000FB                     _RSSITarget:
  1598                           	opt callstack 0
  1599  0000FB                     	ds	1
  1600  0000FC                     _currentNetID:
  1601                           	opt callstack 0
  1602  0000FC                     	ds	1
  1603  0000FD                     _ATTimeoutTimer:
  1604                           	opt callstack 0
  1605  0000FD                     	ds	2
  1606                           
  1607                           	psect	bssBANK1
  1608  000100                     __pbssBANK1:
  1609                           	opt callstack 0
  1610  000100                     _nwkIb:
  1611                           	opt callstack 0
  1612  000100                     	ds	40
  1613  000128                     _nwkGroups:
  1614                           	opt callstack 0
  1615  000128                     	ds	20
  1616  00013C                     _uart1RxStatusBuffer:
  1617                           	opt callstack 0
  1618  00013C                     	ds	16
  1619  00014C                     _uartmsg:
  1620                           	opt callstack 0
  1621  00014C                     	ds	6
  1622  000152                     _symbolDuration:
  1623                           	opt callstack 0
  1624  000152                     	ds	4
  1625  000156                     _current_baud_rate:
  1626                           	opt callstack 0
  1627  000156                     	ds	3
  1628  000159                     _errno:
  1629                           	opt callstack 0
  1630  000159                     	ds	2
  1631  00015B                     strtok@p:
  1632                           	opt callstack 0
  1633  00015B                     	ds	2
  1634  00015D                     _nout:
  1635                           	opt callstack 0
  1636  00015D                     	ds	2
  1637  00015F                     _width:
  1638                           	opt callstack 0
  1639  00015F                     	ds	2
  1640  000161                     _nwkTxPhyActiveFrame:
  1641                           	opt callstack 0
  1642  000161                     	ds	2
  1643  000163                     _ledTimerVar:
  1644                           	opt callstack 0
  1645  000163                     	ds	2
  1646  000165                     _halTimerIrqCount:
  1647                           	opt callstack 0
  1648  000165                     	ds	2
  1649  000167                     _nwkRxAckControl:
  1650                           	opt callstack 0
  1651  000167                     	ds	1
  1652  000168                     _uart1RxLastError:
  1653                           	opt callstack 0
  1654  000168                     	ds	1
  1655  000169                     _ledStateVar:
  1656                           	opt callstack 0
  1657  000169                     	ds	1
  1658  00016A                     _radio_state_var:
  1659                           	opt callstack 0
  1660  00016A                     	ds	1
  1661  00016B                     _dwellTimer:
  1662                           	opt callstack 0
  1663  00016B                     	ds	1
  1664  00016C                     _fhssdebug:
  1665                           	opt callstack 0
  1666  00016C                     	ds	1
  1667  00016D                     _SNR:
  1668                           	opt callstack 0
  1669  00016D                     	ds	1
  1670  00016E                     _packetRSSI:
  1671                           	opt callstack 0
  1672  00016E                     	ds	1
  1673  00016F                     _RSSI:
  1674                           	opt callstack 0
  1675  00016F                     	ds	1
  1676  000170                     _need_radio_reset:
  1677                           	opt callstack 0
  1678  000170                     	ds	1
  1679  000171                     _cadCounter:
  1680                           	opt callstack 0
  1681  000171                     	ds	1
  1682  000172                     _cadDone:
  1683                           	opt callstack 0
  1684  000172                     	ds	1
  1685  000173                     __packetIndex:
  1686                           	opt callstack 0
  1687  000173                     	ds	1
  1688  000174                     __implicitHeaderMode:
  1689                           	opt callstack 0
  1690  000174                     	ds	1
  1691  000175                     _atStateVar:
  1692                           	opt callstack 0
  1693  000175                     	ds	1
  1694  000176                     _commandByteCounter:
  1695                           	opt callstack 0
  1696  000176                     	ds	1
  1697  000177                     _tx_done:
  1698                           	opt callstack 0
  1699  000177                     	ds	1
  1700  000178                     _msgIDCounter:
  1701                           	opt callstack 0
  1702  000178                     	ds	1
  1703  000179                     _currentMode:
  1704                           	opt callstack 0
  1705  000179                     	ds	1
  1706  00017A                     _sinkAddr1:
  1707                           	opt callstack 0
  1708  00017A                     	ds	1
  1709  00017B                     _sinkAddr0:
  1710                           	opt callstack 0
  1711  00017B                     	ds	1
  1712  00017C                     _currentMsgID:
  1713                           	opt callstack 0
  1714  00017C                     	ds	1
  1715  00017D                     _curent_parity:
  1716                           	opt callstack 0
  1717  00017D                     	ds	1
  1718  00017E                     _uart_parity:
  1719                           	opt callstack 0
  1720  00017E                     	ds	1
  1721  00017F                     _uart_baud_rate:
  1722                           	opt callstack 0
  1723  00017F                     	ds	1
  1724  000180                     _eeprom_write_flags_enum:
  1725                           	opt callstack 0
  1726  000180                     	ds	1
  1727  000181                     _nwkDataReq:
  1728                           	opt callstack 0
  1729  000181                     	ds	19
  1730  000194                     _nwkTxDelayTimer:
  1731                           	opt callstack 0
  1732  000194                     	ds	13
  1733  0001A1                     _nwkTxAckWaitTimer:
  1734                           	opt callstack 0
  1735  0001A1                     	ds	13
  1736  0001AE                     _nwkRxDuplicateRejectionTimer:
  1737                           	opt callstack 0
  1738  0001AE                     	ds	13
  1739  0001BB                     _EUIDbyte:
  1740                           	opt callstack 0
  1741  0001BB                     	ds	12
  1742  0001C7                     _ledtasksbuf:
  1743                           	opt callstack 0
  1744  0001C7                     	ds	10
  1745  0001D1                     _seed:
  1746                           	opt callstack 0
  1747  0001D1                     	ds	8
  1748  0001D9                     _crcObj:
  1749                           	opt callstack 0
  1750  0001D9                     	ds	3
  1751                           
  1752                           	psect	dataBANK1
  1753  0001DC                     __pdataBANK1:
  1754                           	opt callstack 0
  1755  0001DC                     stoa@F1139:
  1756                           	opt callstack 0
  1757  0001DC                     	ds	7
  1758  0001E3                     sendOKMessage@F16603:
  1759                           	opt callstack 0
  1760  0001E3                     	ds	5
  1761  0001E8                     _test_timer:
  1762                           	opt callstack 0
  1763  0001E8                     	ds	2
  1764  0001EA                     _currentAddr1:
  1765                           	opt callstack 0
  1766  0001EA                     	ds	1
  1767  0001EB                     _currentAddr0:
  1768                           	opt callstack 0
  1769  0001EB                     	ds	1
  1770                           
  1771                           	psect	bssBANK2
  1772  000200                     __pbssBANK2:
  1773                           	opt callstack 0
  1774  000200                     _uart1RxBuffer:
  1775                           	opt callstack 0
  1776  000200                     	ds	16
  1777  000210                     _net_key:
  1778                           	opt callstack 0
  1779  000210                     	ds	16
  1780  000220                     _aes_key:
  1781                           	opt callstack 0
  1782  000220                     	ds	16
  1783  000230                     _atCommand:
  1784                           	opt callstack 0
  1785  000230                     	ds	80
  1786  000280                     _nwkRouteTable:
  1787                           	opt callstack 0
  1788  000280                     	ds	70
  1789  0002C6                     _dbuf:
  1790                           	opt callstack 0
  1791  0002C6                     	ds	32
  1792                           
  1793                           	psect	dataBANK2
  1794  0002E6                     __pdataBANK2:
  1795                           	opt callstack 0
  1796  0002E6                     _syncList:
  1797                           	opt callstack 0
  1798  0002E6                     	ds	10
  1799                           
  1800                           	psect	bssBANK3
  1801  000300                     __pbssBANK3:
  1802                           	opt callstack 0
  1803  000300                     _uart1TxBuffer:
  1804                           	opt callstack 0
  1805  000300                     	ds	64
  1806  000340                     _ledqueue:
  1807                           	opt callstack 0
  1808  000340                     	ds	96
  1809  0003A0                     _nwkRxDuplicateRejectionTable:
  1810                           	opt callstack 0
  1811  0003A0                     	ds	50
  1812                           
  1813                           	psect	bssBANK4
  1814  000400                     __pbssBANK4:
  1815                           	opt callstack 0
  1816  000400                     _phyRxBuffer:
  1817                           	opt callstack 0
  1818  000400                     	ds	128
  1819                           
  1820                           	psect	bssBANK5
  1821  000500                     __pbssBANK5:
  1822                           	opt callstack 0
  1823  000500                     _fhssReg:
  1824                           	opt callstack 0
  1825  000500                     	ds	189
  1826                           
  1827                           	psect	bssBIGRAM
  1828  0005BD                     __pbssBIGRAM:
  1829                           	opt callstack 0
  1830  0005BD                     _nwkFrameFrames:
  1831                           	opt callstack 0
  1832  0005BD                     	ds	685
  1833                           
  1834                           	psect	cstackBANK1
  1835  0001FB                     __pcstackBANK1:
  1836                           	opt callstack 0
  1837  0001FB                     nwkRxTaskHandler@frame:
  1838                           	opt callstack 0
  1839                           
  1840                           ; 2 bytes @ 0x0
  1841  0001FB                     	ds	2
  1842                           
  1843                           	psect	cstackBANK0
  1844  000060                     __pcstackBANK0:
  1845                           	opt callstack 0
  1846  000060                     vfpfcnvrt@ll:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 8 bytes @ 0x0
  1850  000060                     	ds	8
  1851  000068                     vfpfcnvrt@cp:
  1852                           	opt callstack 0
  1853                           
  1854                           ; 2 bytes @ 0x8
  1855  000068                     	ds	2
  1856  00006A                     vfpfcnvrt@c:
  1857                           	opt callstack 0
  1858                           
  1859                           ; 1 bytes @ 0xA
  1860  00006A                     	ds	1
  1861  00006B                     vfpfcnvrt@done:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 2 bytes @ 0xB
  1865  00006B                     	ds	2
  1866  00006D                     _vfpfcnvrt$6952:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 2 bytes @ 0xD
  1870  00006D                     	ds	2
  1871  00006F                     vfpfcnvrt@llu:
  1872                           	opt callstack 0
  1873                           
  1874                           ; 8 bytes @ 0xF
  1875  00006F                     	ds	8
  1876  000077                     ?_printf:
  1877                           	opt callstack 0
  1878  000077                     printf@fmt:
  1879                           	opt callstack 0
  1880                           
  1881                           ; 2 bytes @ 0x17
  1882  000077                     	ds	6
  1883  00007D                     appDataInd@ind:
  1884                           	opt callstack 0
  1885  00007D                     cmdSend@cmd:
  1886                           	opt callstack 0
  1887  00007D                     cmdBcast@cmd:
  1888                           	opt callstack 0
  1889  00007D                     cmdSetAddr@cmd:
  1890                           	opt callstack 0
  1891  00007D                     cmdSetNaddr@cmd:
  1892                           	opt callstack 0
  1893  00007D                     cmdSetAES@cmd:
  1894                           	opt callstack 0
  1895  00007D                     cmdSetRFCH@cmd:
  1896                           	opt callstack 0
  1897  00007D                     cmdSetTX@cmd:
  1898                           	opt callstack 0
  1899  00007D                     cmdSetCADRSSI@atCommand:
  1900                           	opt callstack 0
  1901  00007D                     cmdSetParity@atCommand:
  1902                           	opt callstack 0
  1903  00007D                     cmdSetSF@atCommand:
  1904                           	opt callstack 0
  1905  00007D                     print_hop_table@atCommand:
  1906                           	opt callstack 0
  1907  00007D                     set_hop_table_ttl@cmd:
  1908                           	opt callstack 0
  1909  00007D                     nwkRxServiceDataInd@ind:
  1910                           	opt callstack 0
  1911                           
  1912                           ; 2 bytes @ 0x1D
  1913  00007D                     	ds	2
  1914  00007F                     ??_nwkRxServiceDataInd:
  1915  00007F                     cmdSetAddr@p2:
  1916                           	opt callstack 0
  1917  00007F                     cmdSetNaddr@p2:
  1918                           	opt callstack 0
  1919  00007F                     cmdSetRFCH@p1:
  1920                           	opt callstack 0
  1921  00007F                     cmdSetTX@p2:
  1922                           	opt callstack 0
  1923  00007F                     cmdSetCADRSSI@p1:
  1924                           	opt callstack 0
  1925  00007F                     cmdSetSF@p1:
  1926                           	opt callstack 0
  1927  00007F                     cmdSetAES@AESstr:
  1928                           	opt callstack 0
  1929  00007F                     cmdSend@msgstr:
  1930                           	opt callstack 0
  1931  00007F                     cmdBcast@msgstr:
  1932                           	opt callstack 0
  1933  00007F                     appDataInd@data:
  1934                           	opt callstack 0
  1935                           
  1936                           ; 65 bytes @ 0x1F
  1937  00007F                     	ds	2
  1938  000081                     cmdSetAddr@p1:
  1939                           	opt callstack 0
  1940  000081                     cmdSetNaddr@p1:
  1941                           	opt callstack 0
  1942  000081                     cmdSetTX@p1:
  1943                           	opt callstack 0
  1944  000081                     cmdSetRFCH@CHstr:
  1945                           	opt callstack 0
  1946  000081                     cmdSetCADRSSI@CHstr:
  1947                           	opt callstack 0
  1948  000081                     cmdSetSF@CHstr:
  1949                           	opt callstack 0
  1950                           
  1951                           ; 3 bytes @ 0x21
  1952  000081                     	ds	2
  1953  000083                     cmdSetNaddr@tempaddr:
  1954                           	opt callstack 0
  1955  000083                     cmdSetTX@temp:
  1956                           	opt callstack 0
  1957  000083                     cmdSetAddr@tempaddr:
  1958                           	opt callstack 0
  1959                           
  1960                           ; 2 bytes @ 0x23
  1961  000083                     	ds	1
  1962  000084                     cmdSetRFCH@p2:
  1963                           	opt callstack 0
  1964  000084                     cmdSetCADRSSI@p2:
  1965                           	opt callstack 0
  1966  000084                     cmdSetSF@p2:
  1967                           	opt callstack 0
  1968  000084                     cmdSetTX@CHstr:
  1969                           	opt callstack 0
  1970                           
  1971                           ; 3 bytes @ 0x24
  1972  000084                     	ds	2
  1973  000086                     cmdSetRFCH@temp:
  1974                           	opt callstack 0
  1975  000086                     cmdSetCADRSSI@temp:
  1976                           	opt callstack 0
  1977  000086                     cmdSetSF@temp:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 1 bytes @ 0x26
  1981  000086                     	ds	25
  1982  00009F                     cmdSetAES@p2:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 2 bytes @ 0x3F
  1986  00009F                     	ds	2
  1987  0000A1                     cmdSetAES@temp:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 3 bytes @ 0x41
  1991  0000A1                     	ds	3
  1992  0000A4                     cmdSetAES@key_type:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 1 bytes @ 0x44
  1996  0000A4                     	ds	1
  1997  0000A5                     cmdSetAES@byte:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 1 bytes @ 0x45
  2001  0000A5                     	ds	1
  2002  0000A6                     cmdSetAES@p1:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x46
  2006  0000A6                     	ds	2
  2007  0000A8                     cmdSetAES@i:
  2008                           	opt callstack 0
  2009                           
  2010                           ; 1 bytes @ 0x48
  2011  0000A8                     	ds	23
  2012  0000BF                     cmdBcast@p1:
  2013                           	opt callstack 0
  2014  0000BF                     cmdSend@destaddr:
  2015                           	opt callstack 0
  2016                           
  2017                           ; 5 bytes @ 0x5F
  2018  0000BF                     	ds	1
  2019  0000C0                     appDataInd@dataptr:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 2 bytes @ 0x60
  2023  0000C0                     	ds	2
  2024  0000C2                     appDataInd@i:
  2025                           	opt callstack 0
  2026                           
  2027                           ; 1 bytes @ 0x62
  2028  0000C2                     	ds	1
  2029  0000C3                     nwkRxIndicateFrame@frame:
  2030                           	opt callstack 0
  2031                           
  2032                           ; 2 bytes @ 0x63
  2033  0000C3                     	ds	1
  2034  0000C4                     cmdSend@msgid:
  2035                           	opt callstack 0
  2036                           
  2037                           ; 1 bytes @ 0x64
  2038  0000C4                     	ds	1
  2039  0000C5                     ??_nwkRxIndicateFrame:
  2040  0000C5                     cmdSend@tempaddr:
  2041                           	opt callstack 0
  2042                           
  2043                           ; 2 bytes @ 0x65
  2044  0000C5                     	ds	2
  2045  0000C7                     cmdSend@p2:
  2046                           	opt callstack 0
  2047                           
  2048                           ; 2 bytes @ 0x67
  2049  0000C7                     	ds	2
  2050  0000C9                     _nwkRxIndicateFrame$4889:
  2051                           	opt callstack 0
  2052  0000C9                     cmdSend@p1:
  2053                           	opt callstack 0
  2054                           
  2055                           ; 2 bytes @ 0x69
  2056  0000C9                     	ds	1
  2057  0000CA                     _nwkRxIndicateFrame$4890:
  2058                           	opt callstack 0
  2059                           
  2060                           ; 1 bytes @ 0x6A
  2061  0000CA                     	ds	1
  2062  0000CB                     _nwkRxIndicateFrame$4891:
  2063                           	opt callstack 0
  2064  0000CB                     executeATCommand@cmd:
  2065                           	opt callstack 0
  2066                           
  2067                           ; 2 bytes @ 0x6B
  2068  0000CB                     	ds	1
  2069  0000CC                     _nwkRxIndicateFrame$4892:
  2070                           	opt callstack 0
  2071                           
  2072                           ; 1 bytes @ 0x6C
  2073  0000CC                     	ds	1
  2074  0000CD                     ??_executeATCommand:
  2075  0000CD                     _nwkRxIndicateFrame$4893:
  2076                           	opt callstack 0
  2077                           
  2078                           ; 1 bytes @ 0x6D
  2079  0000CD                     	ds	1
  2080  0000CE                     _nwkRxIndicateFrame$4894:
  2081                           	opt callstack 0
  2082                           
  2083                           ; 1 bytes @ 0x6E
  2084  0000CE                     	ds	1
  2085  0000CF                     nwkRxIndicateFrame@header:
  2086                           	opt callstack 0
  2087                           
  2088                           ; 2 bytes @ 0x6F
  2089  0000CF                     	ds	1
  2090  0000D0                     ??_processATCommand:
  2091                           
  2092                           ; 1 bytes @ 0x70
  2093  0000D0                     	ds	1
  2094  0000D1                     nwkRxIndicateFrame@ind:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 12 bytes @ 0x71
  2098  0000D1                     	ds	1
  2099  0000D2                     processATCommand@data_785:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 1 bytes @ 0x72
  2103  0000D2                     	ds	1
  2104  0000D3                     processATCommand@data:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 1 bytes @ 0x73
  2108  0000D3                     	ds	10
  2109  0000DD                     nwkRxHandleIndication@frame:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 2 bytes @ 0x7D
  2113  0000DD                     	ds	2
  2114  0000DF                     nwkRxHandleIndication@ack:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 1 bytes @ 0x7F
  2118  0000DF                     	ds	1
  2119  0000E0                     ??_nwkRxTaskHandler:
  2120                           
  2121                           ; 1 bytes @ 0x80
  2122  0000E0                     	ds	2
  2123                           
  2124                           	psect	cstackCOMRAM
  2125  000001                     __pcstackCOMRAM:
  2126                           	opt callstack 0
  2127  000001                     ??_TMR0_ISR:
  2128  000001                     
  2129                           ; 1 bytes @ 0x0
  2130  000001                     	ds	1
  2131  000002                     ??_CRC_Initialize:
  2132  000002                     ??_nwkRouteNormalizeRanks:
  2133  000002                     ??_set_parity:
  2134  000002                     ??_set_uart_baud:
  2135  000002                     ??_nwkTxConvertPhyStatus:
  2136  000002                     ?_strlen:
  2137                           	opt callstack 0
  2138  000002                     ?_get_timer0base:
  2139                           	opt callstack 0
  2140  000002                     ?_nwkFrameNext:
  2141                           	opt callstack 0
  2142  000002                     ?_NWK_RouteFindEntry:
  2143                           	opt callstack 0
  2144  000002                     ?_NWK_RouteNewEntry:
  2145                           	opt callstack 0
  2146  000002                     ?_isupper:
  2147                           	opt callstack 0
  2148  000002                     ?_isalpha:
  2149                           	opt callstack 0
  2150  000002                     ?_isdigit:
  2151                           	opt callstack 0
  2152  000002                     ?_isspace:
  2153                           	opt callstack 0
  2154  000002                     ?_strncmp:
  2155                           	opt callstack 0
  2156  000002                     ?_strchr:
  2157                           	opt callstack 0
  2158  000002                     ?_islower:
  2159                           	opt callstack 0
  2160  000002                     ?_CircularBufferSize:
  2161                           	opt callstack 0
  2162  000002                     ?_CRC_ReverseValue:
  2163                           	opt callstack 0
  2164  000002                     ?___wmul:
  2165                           	opt callstack 0
  2166  000002                     ?___lmul:
  2167                           	opt callstack 0
  2168  000002                     ?___llmod:
  2169                           	opt callstack 0
  2170  000002                     ?___xxtofl:
  2171                           	opt callstack 0
  2172  000002                     ?___omul:
  2173                           	opt callstack 0
  2174  000002                     ?___aodiv:
  2175                           	opt callstack 0
  2176  000002                     ?___aomod:
  2177                           	opt callstack 0
  2178  000002                     ?___lodiv:
  2179                           	opt callstack 0
  2180  000002                     ?___lomod:
  2181                           	opt callstack 0
  2182  000002                     SPI1_ExchangeByte@data:
  2183                           	opt callstack 0
  2184  000002                     INTERRUPT_Initialize@state:
  2185                           	opt callstack 0
  2186  000002                     UART1_Read@readValue:
  2187                           	opt callstack 0
  2188  000002                     UART1_Write@txData:
  2189                           	opt callstack 0
  2190  000002                     CRC_8BitDataWrite@data:
  2191                           	opt callstack 0
  2192  000002                     nwkFrameInit@i:
  2193                           	opt callstack 0
  2194  000002                     nwkGroupInit@i:
  2195                           	opt callstack 0
  2196  000002                     nwkRouteInit@i:
  2197                           	opt callstack 0
  2198  000002                     cmdSendSink@cmd:
  2199                           	opt callstack 0
  2200  000002                     cmdSetTTL@cmd:
  2201                           	opt callstack 0
  2202  000002                     cmdGetRxCnt@atCommand:
  2203                           	opt callstack 0
  2204  000002                     CircularBufferSize@ctx:
  2205                           	opt callstack 0
  2206  000002                     get_timer0base@timer:
  2207                           	opt callstack 0
  2208  000002                     set_timer0base@timer:
  2209                           	opt callstack 0
  2210  000002                     TMR0_SetInterruptHandler@InterruptHandler:
  2211                           	opt callstack 0
  2212  000002                     DATAEE_WriteByte@bAdd:
  2213                           	opt callstack 0
  2214  000002                     DATAEE_ReadByte@bAdd:
  2215                           	opt callstack 0
  2216  000002                     UART1_SetFramingErrorHandler@interruptHandler:
  2217                           	opt callstack 0
  2218  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
  2219                           	opt callstack 0
  2220  000002                     UART1_SetErrorHandler@interruptHandler:
  2221                           	opt callstack 0
  2222  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
  2223                           	opt callstack 0
  2224  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
  2225                           	opt callstack 0
  2226  000002                     CRC_ReverseValue@crc:
  2227                           	opt callstack 0
  2228  000002                     NWK_OpenEndpoint@handler:
  2229                           	opt callstack 0
  2230  000002                     NWK_DataReq@req:
  2231                           	opt callstack 0
  2232  000002                     nwkDataReqConfirm@req:
  2233                           	opt callstack 0
  2234  000002                     nwkFrameFree@frame:
  2235                           	opt callstack 0
  2236  000002                     nwkFrameNext@frame:
  2237                           	opt callstack 0
  2238  000002                     nwkFrameCommandInit@frame:
  2239                           	opt callstack 0
  2240  000002                     NWK_GroupIsMember@group:
  2241                           	opt callstack 0
  2242  000002                     NWK_RouteFindEntry@dst:
  2243                           	opt callstack 0
  2244  000002                     NWK_RouteFreeEntry@entry:
  2245                           	opt callstack 0
  2246  000002                     nwkFrame@nwkFramePayloadSize@frame_4442:
  2247                           	opt callstack 0
  2248  000002                     nwkTxConfirm@frame:
  2249                           	opt callstack 0
  2250  000002                     PHY_SetPanId@panId:
  2251                           	opt callstack 0
  2252  000002                     PHY_SetShortAddr@addr:
  2253                           	opt callstack 0
  2254  000002                     SYS_TimerStarted@timer:
  2255                           	opt callstack 0
  2256  000002                     placeTimer@timer:
  2257                           	opt callstack 0
  2258  000002                     ___wmul@multiplier:
  2259                           	opt callstack 0
  2260  000002                     isalpha@c:
  2261                           	opt callstack 0
  2262  000002                     isdigit@c:
  2263                           	opt callstack 0
  2264  000002                     isspace@c:
  2265                           	opt callstack 0
  2266  000002                     isupper@c:
  2267                           	opt callstack 0
  2268  000002                     memset@dest:
  2269                           	opt callstack 0
  2270  000002                     srand@s:
  2271                           	opt callstack 0
  2272  000002                     strlen@s:
  2273                           	opt callstack 0
  2274  000002                     islower@c:
  2275                           	opt callstack 0
  2276  000002                     strchr@s:
  2277                           	opt callstack 0
  2278  000002                     strncmp@_l:
  2279                           	opt callstack 0
  2280  000002                     DIA_ReadByte@flashAddr:
  2281                           	opt callstack 0
  2282  000002                     ___lmul@multiplier:
  2283                           	opt callstack 0
  2284  000002                     ___llmod@dividend:
  2285                           	opt callstack 0
  2286  000002                     ___xxtofl@val:
  2287                           	opt callstack 0
  2288  000002                     ___omul@multiplier:
  2289                           	opt callstack 0
  2290  000002                     ___aodiv@dividend:
  2291                           	opt callstack 0
  2292  000002                     ___aomod@dividend:
  2293                           	opt callstack 0
  2294  000002                     ___lodiv@dividend:
  2295                           	opt callstack 0
  2296  000002                     ___lomod@dividend:
  2297                           	opt callstack 0
  2298                           
  2299                           ; 8 bytes @ 0x1
  2300  000002                     	ds	1
  2301  000003                     putch@txData:
  2302                           	opt callstack 0
  2303  000003                     nwkRouteNormalizeRanks@i:
  2304                           	opt callstack 0
  2305  000003                     SPI1_WriteBlock@block:
  2306                           	opt callstack 0
  2307  000003                     SPI1_ReadBlock@block:
  2308                           	opt callstack 0
  2309                           
  2310                           ; 2 bytes @ 0x2
  2311  000003                     	ds	1
  2312  000004                     ??_nwkFrameNext:
  2313  000004                     ??_srand:
  2314  000004                     ??_isupper:
  2315  000004                     ??_isalpha:
  2316  000004                     ??_isdigit:
  2317  000004                     ??_isspace:
  2318  000004                     ??_islower:
  2319  000004                     ??_CircularBufferSize:
  2320  000004                     ??_TMR0_Initialize:
  2321  000004                     ??_CRC_ReverseValue:
  2322  000004                     ??_nwkDataReqConfirm:
  2323  000004                     ??strspn@nwkFrame@nwkFramePayloadSize:
  2324  000004                     set_parity@parity:
  2325                           	opt callstack 0
  2326  000004                     set_uart_baud@i:
  2327                           	opt callstack 0
  2328  000004                     DATAEE_WriteByte@bData:
  2329                           	opt callstack 0
  2330  000004                     NWK_OpenEndpoint@id:
  2331                           	opt callstack 0
  2332  000004                     NWK_RouteFindEntry@multicast:
  2333                           	opt callstack 0
  2334  000004                     nwkTxConfirm@status:
  2335                           	opt callstack 0
  2336  000004                     nwkTxConvertPhyStatus@status:
  2337                           	opt callstack 0
  2338  000004                     get_timer0base@tval:
  2339                           	opt callstack 0
  2340  000004                     set_timer0base@tval:
  2341                           	opt callstack 0
  2342  000004                     NWK_SetAddr@addr:
  2343                           	opt callstack 0
  2344  000004                     NWK_SetPanId@panId:
  2345                           	opt callstack 0
  2346  000004                     nwkDataReqTxConf@frame:
  2347                           	opt callstack 0
  2348  000004                     SYS_TimerStarted@t:
  2349                           	opt callstack 0
  2350  000004                     ___wmul@multiplicand:
  2351                           	opt callstack 0
  2352  000004                     memset@c:
  2353                           	opt callstack 0
  2354  000004                     fputc@c:
  2355                           	opt callstack 0
  2356  000004                     strlen@a:
  2357                           	opt callstack 0
  2358  000004                     strchr@c:
  2359                           	opt callstack 0
  2360  000004                     strncmp@_r:
  2361                           	opt callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x3
  2364  000004                     	ds	1
  2365  000005                     DATAEE_WriteByte@GIEBitValue:
  2366                           	opt callstack 0
  2367  000005                     nwkRxInit@i:
  2368                           	opt callstack 0
  2369  000005                     PHY_DataConf@status:
  2370                           	opt callstack 0
  2371  000005                     SPI1_WriteBlock@blockSize:
  2372                           	opt callstack 0
  2373  000005                     SPI1_ReadBlock@blockSize:
  2374                           	opt callstack 0
  2375  000005                     CRC_ReverseValue@reverse:
  2376                           	opt callstack 0
  2377                           
  2378                           ; 2 bytes @ 0x4
  2379  000005                     	ds	1
  2380  000006                     ??_strchr:
  2381  000006                     ??___xxtofl:
  2382  000006                     loadMACAddr@i:
  2383                           	opt callstack 0
  2384  000006                     NWK_Init@i:
  2385                           	opt callstack 0
  2386  000006                     NWK_GroupIsMember@i:
  2387                           	opt callstack 0
  2388  000006                     NWK_RouteNewEntry@i:
  2389                           	opt callstack 0
  2390  000006                     DATAEE_ReadByte_Platform@addr:
  2391                           	opt callstack 0
  2392  000006                     DATAEE_WriteByte_Platform@addr:
  2393                           	opt callstack 0
  2394  000006                     nwkDataReqConfirm@prev:
  2395                           	opt callstack 0
  2396  000006                     ___wmul@product:
  2397                           	opt callstack 0
  2398  000006                     memset@n:
  2399                           	opt callstack 0
  2400  000006                     fputc@fp:
  2401                           	opt callstack 0
  2402  000006                     strncmp@n:
  2403                           	opt callstack 0
  2404  000006                     ___lmul@multiplicand:
  2405                           	opt callstack 0
  2406  000006                     ___llmod@divisor:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 4 bytes @ 0x5
  2410  000006                     	ds	1
  2411  000007                     NWK_RouteFindEntry@i:
  2412                           	opt callstack 0
  2413  000007                     SPI1_WriteBlock@data:
  2414                           	opt callstack 0
  2415  000007                     SPI1_ReadBlock@data:
  2416                           	opt callstack 0
  2417  000007                     CRC_ReverseValue@mask:
  2418                           	opt callstack 0
  2419  000007                     NWK_RouteNewEntry@iter:
  2420                           	opt callstack 0
  2421                           
  2422                           ; 2 bytes @ 0x6
  2423  000007                     	ds	1
  2424  000008                     ??_memset:
  2425  000008                     ??_fputc:
  2426  000008                     ??_strncmp:
  2427  000008                     ?_toupper:
  2428                           	opt callstack 0
  2429  000008                     ?_strspn:
  2430                           	opt callstack 0
  2431  000008                     ?_strcspn:
  2432                           	opt callstack 0
  2433  000008                     ?_NWK_RouteNextHop:
  2434                           	opt callstack 0
  2435  000008                     DATAEE_ReadByte_Platform@copy3:
  2436                           	opt callstack 0
  2437  000008                     DATAEE_WriteByte_Platform@data:
  2438                           	opt callstack 0
  2439  000008                     _isspace$7439:
  2440                           	opt callstack 0
  2441  000008                     nwkDataReqTxConf@req:
  2442                           	opt callstack 0
  2443  000008                     NWK_RouteNextHop@dst:
  2444                           	opt callstack 0
  2445  000008                     nwkRouteRemove@dst:
  2446                           	opt callstack 0
  2447  000008                     nwkRouteFrameSent@frame:
  2448                           	opt callstack 0
  2449  000008                     nwkTxAckReceived@ind:
  2450                           	opt callstack 0
  2451  000008                     memcpy@d1:
  2452                           	opt callstack 0
  2453  000008                     toupper@c:
  2454                           	opt callstack 0
  2455  000008                     strcspn@s:
  2456                           	opt callstack 0
  2457  000008                     strspn@s:
  2458                           	opt callstack 0
  2459  000008                     placeTimer@timeout:
  2460                           	opt callstack 0
  2461                           
  2462                           ; 4 bytes @ 0x7
  2463  000008                     	ds	1
  2464  000009                     ?_CRC_CalculatedResultGet:
  2465                           	opt callstack 0
  2466  000009                     ?_atoi:
  2467                           	opt callstack 0
  2468  000009                     DATAEE_ReadByte_Platform@copy2:
  2469                           	opt callstack 0
  2470  000009                     CRC_CalculatedResultGet@xorValue:
  2471                           	opt callstack 0
  2472  000009                     NWK_RouteNewEntry@entry:
  2473                           	opt callstack 0
  2474  000009                     SX1276ReadBuffer@buffer:
  2475                           	opt callstack 0
  2476  000009                     SX1276WriteBuffer@buffer:
  2477                           	opt callstack 0
  2478  000009                     atoi@s:
  2479                           	opt callstack 0
  2480  000009                     strncmp@l:
  2481                           	opt callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x8
  2484  000009                     	ds	1
  2485  00000A                     ??_toupper:
  2486  00000A                     ??_nwkRouteFrameSent:
  2487  00000A                     ?_CircularBufferSpace:
  2488                           	opt callstack 0
  2489  00000A                     DATAEE_ReadByte_Platform@copy1:
  2490                           	opt callstack 0
  2491  00000A                     NWK_RouteNextHop@multicast:
  2492                           	opt callstack 0
  2493  00000A                     nwkRouteRemove@multicast:
  2494                           	opt callstack 0
  2495  00000A                     ___llmod@counter:
  2496                           	opt callstack 0
  2497  00000A                     ___xxtofl@sign:
  2498                           	opt callstack 0
  2499  00000A                     CircularBufferSpace@ctx:
  2500                           	opt callstack 0
  2501  00000A                     memcpy@s1:
  2502                           	opt callstack 0
  2503  00000A                     memset@k:
  2504                           	opt callstack 0
  2505  00000A                     strcspn@c:
  2506                           	opt callstack 0
  2507  00000A                     strspn@c:
  2508                           	opt callstack 0
  2509  00000A                     ___lmul@product:
  2510                           	opt callstack 0
  2511  00000A                     ___omul@multiplicand:
  2512                           	opt callstack 0
  2513  00000A                     ___aodiv@divisor:
  2514                           	opt callstack 0
  2515  00000A                     ___aomod@divisor:
  2516                           	opt callstack 0
  2517  00000A                     ___lodiv@divisor:
  2518                           	opt callstack 0
  2519  00000A                     ___lomod@divisor:
  2520                           	opt callstack 0
  2521                           
  2522                           ; 8 bytes @ 0x9
  2523  00000A                     	ds	1
  2524  00000B                     ??_CRC_CalculatedResultGet:
  2525  00000B                     ??_atoi:
  2526  00000B                     SX1276ReadBuffer@size:
  2527                           	opt callstack 0
  2528  00000B                     SX1276WriteBuffer@size:
  2529                           	opt callstack 0
  2530  00000B                     ___xxtofl@exp:
  2531                           	opt callstack 0
  2532  00000B                     NWK_RouteNextHop@entry:
  2533                           	opt callstack 0
  2534  00000B                     nwkRouteRemove@entry:
  2535                           	opt callstack 0
  2536  00000B                     nwkRouteFrameReceived@frame:
  2537                           	opt callstack 0
  2538  00000B                     strncmp@r:
  2539                           	opt callstack 0
  2540                           
  2541                           ; 2 bytes @ 0xA
  2542  00000B                     	ds	1
  2543  00000C                     ??_strspn:
  2544  00000C                     ??_strcspn:
  2545  00000C                     ??_CircularBufferSpace:
  2546  00000C                     SX1276ReadBuffer@addr:
  2547                           	opt callstack 0
  2548  00000C                     SX1276WriteBuffer@addr:
  2549                           	opt callstack 0
  2550  00000C                     nwkRouteFrameSent@entry:
  2551                           	opt callstack 0
  2552  00000C                     nwkTxAckReceived@command:
  2553                           	opt callstack 0
  2554  00000C                     placeTimer@prev:
  2555                           	opt callstack 0
  2556  00000C                     memcpy@n:
  2557                           	opt callstack 0
  2558  00000C                     memset@s:
  2559                           	opt callstack 0
  2560  00000C                     ___xxtofl@arg:
  2561                           	opt callstack 0
  2562                           
  2563                           ; 4 bytes @ 0xB
  2564  00000C                     	ds	1
  2565  00000D                     ??_nwkRouteFrameReceived:
  2566  00000D                     ?_strstr:
  2567                           	opt callstack 0
  2568  00000D                     ?_stoa:
  2569                           	opt callstack 0
  2570  00000D                     SX1276Read@addr:
  2571                           	opt callstack 0
  2572  00000D                     nwkRoutePrepareTx@frame:
  2573                           	opt callstack 0
  2574  00000D                     nwkRouteErrorReceived@ind:
  2575                           	opt callstack 0
  2576  00000D                     stoa@fp:
  2577                           	opt callstack 0
  2578  00000D                     fputs@s:
  2579                           	opt callstack 0
  2580  00000D                     strstr@h:
  2581                           	opt callstack 0
  2582  00000D                     strcspn@i:
  2583                           	opt callstack 0
  2584  00000D                     strspn@i:
  2585                           	opt callstack 0
  2586                           
  2587                           ; 2 bytes @ 0xC
  2588  00000D                     	ds	1
  2589  00000E                     ?_nwkFrameAlloc:
  2590                           	opt callstack 0
  2591  00000E                     SX1276Read@data:
  2592                           	opt callstack 0
  2593  00000E                     memcpy@tmp:
  2594                           	opt callstack 0
  2595  00000E                     CRC_CalculatedResultGet@mask:
  2596                           	opt callstack 0
  2597  00000E                     nwkTxAckReceived@frame:
  2598                           	opt callstack 0
  2599  00000E                     placeTimer@t:
  2600                           	opt callstack 0
  2601  00000E                     _toupper$7578:
  2602                           	opt callstack 0
  2603                           
  2604                           ; 2 bytes @ 0xD
  2605  00000E                     	ds	1
  2606  00000F                     ?_strtok:
  2607                           	opt callstack 0
  2608  00000F                     ?_getSignalBandwidth:
  2609                           	opt callstack 0
  2610  00000F                     ?_getSpreadingFactor:
  2611                           	opt callstack 0
  2612  00000F                     SX1276Write@data:
  2613                           	opt callstack 0
  2614  00000F                     stoa@s:
  2615                           	opt callstack 0
  2616  00000F                     atoi@neg:
  2617                           	opt callstack 0
  2618  00000F                     memcpy@d:
  2619                           	opt callstack 0
  2620  00000F                     fputs@fp:
  2621                           	opt callstack 0
  2622  00000F                     strstr@n:
  2623                           	opt callstack 0
  2624  00000F                     strtok@s:
  2625                           	opt callstack 0
  2626                           
  2627                           ; 2 bytes @ 0xE
  2628  00000F                     	ds	1
  2629  000010                     ??_nwkFrameAlloc:
  2630  000010                     ?___strtoxl:
  2631                           	opt callstack 0
  2632  000010                     CRC_CalculatedResultGet@reverse:
  2633                           	opt callstack 0
  2634  000010                     SX1276Write@addr:
  2635                           	opt callstack 0
  2636  000010                     nwkRouteErrorReceived@command:
  2637                           	opt callstack 0
  2638  000010                     SYS_TimerStart@timer:
  2639                           	opt callstack 0
  2640  000010                     ___strtoxl@s:
  2641                           	opt callstack 0
  2642  000010                     ___flge@ff1:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 4 bytes @ 0xF
  2646  000010                     	ds	1
  2647  000011                     ??_setCodingRate4:
  2648  000011                     ??_cad:
  2649  000011                     ??_stoa:
  2650  000011                     nwkRouteFrameReceived@discovery:
  2651                           	opt callstack 0
  2652  000011                     setTxPower@power:
  2653                           	opt callstack 0
  2654  000011                     setSyncWord@sw:
  2655                           	opt callstack 0
  2656  000011                     receive@size:
  2657                           	opt callstack 0
  2658  000011                     fputs@c:
  2659                           	opt callstack 0
  2660  000011                     CRC_CalculatedResultGet@result:
  2661                           	opt callstack 0
  2662  000011                     nwkRoutePrepareTx@header:
  2663                           	opt callstack 0
  2664  000011                     setPreambleLength@length:
  2665                           	opt callstack 0
  2666  000011                     PHY_DataReq@data:
  2667                           	opt callstack 0
  2668  000011                     _atoi$7412:
  2669                           	opt callstack 0
  2670  000011                     memcpy@s:
  2671                           	opt callstack 0
  2672  000011                     strstr@nl:
  2673                           	opt callstack 0
  2674  000011                     strtok@sep:
  2675                           	opt callstack 0
  2676                           
  2677                           ; 2 bytes @ 0x10
  2678  000011                     	ds	1
  2679  000012                     nwkFrameAlloc@i:
  2680                           	opt callstack 0
  2681  000012                     _nwkRouteFrameReceived$3856:
  2682                           	opt callstack 0
  2683  000012                     setCodingRate4@cr:
  2684                           	opt callstack 0
  2685  000012                     ___aodiv@counter:
  2686                           	opt callstack 0
  2687  000012                     ___aomod@counter:
  2688                           	opt callstack 0
  2689  000012                     ___lomod@counter:
  2690                           	opt callstack 0
  2691  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  2692                           	opt callstack 0
  2693  000012                     nwkRxRejectDuplicate@header:
  2694                           	opt callstack 0
  2695  000012                     nwkTxAckWaitTimerHandler@timer:
  2696                           	opt callstack 0
  2697  000012                     nwkTxDelayTimerHandler@timer:
  2698                           	opt callstack 0
  2699  000012                     cad@RSSI:
  2700                           	opt callstack 0
  2701  000012                     fputs@i:
  2702                           	opt callstack 0
  2703  000012                     ___strtoxl@endptr:
  2704                           	opt callstack 0
  2705  000012                     stoa@nuls:
  2706                           	opt callstack 0
  2707  000012                     ___omul@product:
  2708                           	opt callstack 0
  2709  000012                     ___lodiv@quotient:
  2710                           	opt callstack 0
  2711                           
  2712                           ; 8 bytes @ 0x11
  2713  000012                     	ds	1
  2714  000013                     ??_getSignalBandwidth:
  2715  000013                     ??_getSpreadingFactor:
  2716  000013                     ?_crc16_app:
  2717                           	opt callstack 0
  2718  000013                     setCodingRate4@denominator:
  2719                           	opt callstack 0
  2720  000013                     PHY_DataReq@size:
  2721                           	opt callstack 0
  2722  000013                     ___aodiv@sign:
  2723                           	opt callstack 0
  2724  000013                     ___aomod@sign:
  2725                           	opt callstack 0
  2726  000013                     CircularBufferPushBack@ctx:
  2727                           	opt callstack 0
  2728  000013                     crc16_app@dptr:
  2729                           	opt callstack 0
  2730  000013                     nwkRouteFrameReceived@entry:
  2731                           	opt callstack 0
  2732  000013                     PHY_DataInd@ind:
  2733                           	opt callstack 0
  2734  000013                     _atoi$7414:
  2735                           	opt callstack 0
  2736                           
  2737                           ; 2 bytes @ 0x12
  2738  000013                     	ds	1
  2739  000014                     ??_nwkTxTaskHandler:
  2740  000014                     ??_nwkRxRejectDuplicate:
  2741  000014                     ?_abs:
  2742                           	opt callstack 0
  2743  000014                     ?_pad:
  2744                           	opt callstack 0
  2745  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  2746                           	opt callstack 0
  2747  000014                     cad@temp:
  2748                           	opt callstack 0
  2749  000014                     pad@fp:
  2750                           	opt callstack 0
  2751  000014                     abs@a:
  2752                           	opt callstack 0
  2753  000014                     ___strtoxl@base:
  2754                           	opt callstack 0
  2755  000014                     ___flge@ff2:
  2756                           	opt callstack 0
  2757  000014                     ___aodiv@quotient:
  2758                           	opt callstack 0
  2759                           
  2760                           ; 8 bytes @ 0x13
  2761  000014                     	ds	1
  2762  000015                     ??_PHY_DataInd:
  2763  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  2764                           	opt callstack 0
  2765  000015                     getSignalBandwidth@bw:
  2766                           	opt callstack 0
  2767  000015                     _atoi$7413:
  2768                           	opt callstack 0
  2769  000015                     CircularBufferPushBack@val:
  2770                           	opt callstack 0
  2771  000015                     crc16_app@len:
  2772                           	opt callstack 0
  2773  000015                     nwkRouteFrameReceived@header:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 2 bytes @ 0x14
  2777  000015                     	ds	1
  2778  000016                     ??_abs:
  2779  000016                     ?___lldiv:
  2780                           	opt callstack 0
  2781  000016                     nwkTxAckWaitTimerHandler@restart:
  2782                           	opt callstack 0
  2783  000016                     nwkTxDelayTimerHandler@restart:
  2784                           	opt callstack 0
  2785  000016                     ___strtoxl@is_signed:
  2786                           	opt callstack 0
  2787  000016                     nwkTxTaskHandler@frame:
  2788                           	opt callstack 0
  2789  000016                     pad@buf:
  2790                           	opt callstack 0
  2791  000016                     atoi@n:
  2792                           	opt callstack 0
  2793  000016                     ___lldiv@dividend:
  2794                           	opt callstack 0
  2795                           
  2796                           ; 4 bytes @ 0x15
  2797  000016                     	ds	1
  2798  000017                     ??___strtoxl:
  2799  000017                     ??_CircularBufferPushBack:
  2800  000017                     crc16_app@seed:
  2801                           	opt callstack 0
  2802  000017                     nwkTxAckWaitTimerHandler@frame:
  2803                           	opt callstack 0
  2804  000017                     nwkTxDelayTimerHandler@frame:
  2805                           	opt callstack 0
  2806                           
  2807                           ; 2 bytes @ 0x16
  2808  000017                     	ds	1
  2809  000018                     ??___flge:
  2810  000018                     nwkRxRejectDuplicate@shift:
  2811                           	opt callstack 0
  2812  000018                     PHY_DataInd@frame:
  2813                           	opt callstack 0
  2814  000018                     pad@p:
  2815                           	opt callstack 0
  2816                           
  2817                           ; 2 bytes @ 0x17
  2818  000018                     	ds	1
  2819  000019                     ??_SYS_TimerTaskHandler:
  2820  000019                     nwkRxRejectDuplicate@i:
  2821                           	opt callstack 0
  2822  000019                     crc16_app@result:
  2823                           	opt callstack 0
  2824  000019                     stoa@i:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x18
  2828  000019                     	ds	1
  2829  00001A                     ??_pad:
  2830  00001A                     ?_rand:
  2831                           	opt callstack 0
  2832  00001A                     nwkRxRejectDuplicate@diff:
  2833                           	opt callstack 0
  2834  00001A                     DIO0_Receive_ISR@packetLength:
  2835                           	opt callstack 0
  2836  00001A                     ___lodiv@counter:
  2837                           	opt callstack 0
  2838  00001A                     ___lldiv@divisor:
  2839                           	opt callstack 0
  2840                           
  2841                           ; 4 bytes @ 0x19
  2842  00001A                     	ds	1
  2843  00001B                     DIO0_Receive_ISR@irqFlags:
  2844                           	opt callstack 0
  2845  00001B                     CircularBufferPushBack@write_pos:
  2846                           	opt callstack 0
  2847  00001B                     crc16_app@ptr:
  2848                           	opt callstack 0
  2849  00001B                     nwkRxRejectDuplicate@freeEntry:
  2850                           	opt callstack 0
  2851  00001B                     pad@i:
  2852                           	opt callstack 0
  2853  00001B                     stoa@w:
  2854                           	opt callstack 0
  2855  00001B                     ___strtoxl@prev_a:
  2856                           	opt callstack 0
  2857                           
  2858                           ; 4 bytes @ 0x1A
  2859  00001B                     	ds	1
  2860  00001C                     ??_rand:
  2861  00001C                     DIO0_Receive_ISR@ind:
  2862                           	opt callstack 0
  2863                           
  2864                           ; 5 bytes @ 0x1B
  2865  00001C                     	ds	1
  2866  00001D                     SYS_TimerTaskHandler@cnt:
  2867                           	opt callstack 0
  2868  00001D                     crc16_app@i:
  2869                           	opt callstack 0
  2870  00001D                     queueLedEvent@duration:
  2871                           	opt callstack 0
  2872  00001D                     nwkRxRejectDuplicate@entry:
  2873                           	opt callstack 0
  2874  00001D                     pad@w:
  2875                           	opt callstack 0
  2876  00001D                     stoa@cp:
  2877                           	opt callstack 0
  2878                           
  2879                           ; 2 bytes @ 0x1C
  2880  00001D                     	ds	1
  2881  00001E                     SYS_TimerTaskHandler@elapsed:
  2882                           	opt callstack 0
  2883  00001E                     ___lldiv@quotient:
  2884                           	opt callstack 0
  2885                           
  2886                           ; 4 bytes @ 0x1D
  2887  00001E                     	ds	1
  2888  00001F                     ?_dtoa:
  2889                           	opt callstack 0
  2890  00001F                     ?_utoa:
  2891                           	opt callstack 0
  2892  00001F                     ?_xtoa:
  2893                           	opt callstack 0
  2894  00001F                     queueLedEvent@LEDState:
  2895                           	opt callstack 0
  2896  00001F                     dtoa@fp:
  2897                           	opt callstack 0
  2898  00001F                     stoa@p:
  2899                           	opt callstack 0
  2900  00001F                     utoa@fp:
  2901                           	opt callstack 0
  2902  00001F                     xtoa@fp:
  2903                           	opt callstack 0
  2904  00001F                     ___strtoxl$7600:
  2905                           	opt callstack 0
  2906                           
  2907                           ; 2 bytes @ 0x1E
  2908  00001F                     	ds	1
  2909  000020                     queueLedEvent@temp:
  2910                           	opt callstack 0
  2911                           
  2912                           ; 3 bytes @ 0x1F
  2913  000020                     	ds	1
  2914  000021                     stoa@l:
  2915                           	opt callstack 0
  2916  000021                     ___strtoxl$7602:
  2917                           	opt callstack 0
  2918  000021                     dtoa@d:
  2919                           	opt callstack 0
  2920  000021                     utoa@d:
  2921                           	opt callstack 0
  2922  000021                     xtoa@d:
  2923                           	opt callstack 0
  2924                           
  2925                           ; 8 bytes @ 0x20
  2926  000021                     	ds	1
  2927  000022                     ___lldiv@counter:
  2928                           	opt callstack 0
  2929  000022                     SYS_TimerTaskHandler@timer:
  2930                           	opt callstack 0
  2931                           
  2932                           ; 2 bytes @ 0x21
  2933  000022                     	ds	1
  2934  000023                     ??_setSpreadingFactor:
  2935  000023                     queue_serial_led_event@i:
  2936                           	opt callstack 0
  2937  000023                     ___strtoxl$7603:
  2938                           	opt callstack 0
  2939  000023                     setFrequency@frequency:
  2940                           	opt callstack 0
  2941  000023                     setSignalBandwidth@sbw:
  2942                           	opt callstack 0
  2943  000023                     computeFRF@frequency:
  2944                           	opt callstack 0
  2945                           
  2946                           ; 4 bytes @ 0x22
  2947  000023                     	ds	1
  2948  000024                     nwkTxFrame@frame:
  2949                           	opt callstack 0
  2950  000024                     nwkTxBroadcastFrame@frame:
  2951                           	opt callstack 0
  2952                           
  2953                           ; 2 bytes @ 0x23
  2954  000024                     	ds	1
  2955  000025                     ___strtoxl$7601:
  2956                           	opt callstack 0
  2957                           
  2958                           ; 1 bytes @ 0x24
  2959  000025                     	ds	1
  2960  000026                     ??_nwkTxBroadcastFrame:
  2961  000026                     ___strtoxl@conv_done:
  2962                           	opt callstack 0
  2963                           
  2964                           ; 1 bytes @ 0x25
  2965  000026                     	ds	1
  2966  000027                     ??_setSignalBandwidth:
  2967  000027                     nwkTxBroadcastFrame@newFrame:
  2968                           	opt callstack 0
  2969  000027                     setFrequency@num_mod:
  2970                           	opt callstack 0
  2971  000027                     computeFRF@num_mod:
  2972                           	opt callstack 0
  2973  000027                     ___strtoxl@limit:
  2974                           	opt callstack 0
  2975  000027                     _setSpreadingFactor$8334:
  2976                           	opt callstack 0
  2977                           
  2978                           ; 4 bytes @ 0x26
  2979  000027                     	ds	1
  2980  000028                     nwkTxFrame@header:
  2981                           	opt callstack 0
  2982                           
  2983                           ; 2 bytes @ 0x27
  2984  000028                     	ds	1
  2985  000029                     ??_dtoa:
  2986  000029                     ??_utoa:
  2987  000029                     xtoa@x:
  2988                           	opt callstack 0
  2989  000029                     nwkRxHandleReceivedFrame@frame:
  2990                           	opt callstack 0
  2991                           
  2992                           ; 2 bytes @ 0x28
  2993  000029                     	ds	1
  2994  00002A                     ??_xtoa:
  2995  00002A                     nwkDataReqSendFrame@req:
  2996                           	opt callstack 0
  2997  00002A                     nwkRouteSendRouteError@src:
  2998                           	opt callstack 0
  2999  00002A                     nwkRxSendAck@frame:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 2 bytes @ 0x29
  3003  00002A                     	ds	1
  3004  00002B                     ??_nwkRxHandleReceivedFrame:
  3005  00002B                     setSpreadingFactor@sf:
  3006                           	opt callstack 0
  3007  00002B                     ___strtoxl@sign:
  3008                           	opt callstack 0
  3009  00002B                     setFrequency@num:
  3010                           	opt callstack 0
  3011  00002B                     computeFRF@num:
  3012                           	opt callstack 0
  3013  00002B                     _setSignalBandwidth$8335:
  3014                           	opt callstack 0
  3015                           
  3016                           ; 4 bytes @ 0x2A
  3017  00002B                     	ds	1
  3018  00002C                     ??_nwkDataReqSendFrame:
  3019  00002C                     ___strtoxl@skip:
  3020                           	opt callstack 0
  3021  00002C                     nwkRouteSendRouteError@dst:
  3022                           	opt callstack 0
  3023  00002C                     nwkRxSendAck@command:
  3024                           	opt callstack 0
  3025                           
  3026                           ; 2 bytes @ 0x2B
  3027  00002C                     	ds	1
  3028  00002D                     nwkRxHandleReceivedFrame@broadcast:
  3029                           	opt callstack 0
  3030  00002D                     nwkDataReqSendFrame@mcHeader:
  3031                           	opt callstack 0
  3032  00002D                     ___strtoxl@a:
  3033                           	opt callstack 0
  3034                           
  3035                           ; 4 bytes @ 0x2C
  3036  00002D                     	ds	1
  3037  00002E                     nwkRouteSendRouteError@multicast:
  3038                           	opt callstack 0
  3039  00002E                     nwkRxHandleReceivedFrame@member:
  3040                           	opt callstack 0
  3041  00002E                     nwkRxSendAck@ack:
  3042                           	opt callstack 0
  3043                           
  3044                           ; 2 bytes @ 0x2D
  3045  00002E                     	ds	1
  3046  00002F                     computeFRF@i:
  3047                           	opt callstack 0
  3048  00002F                     PHY_SetChannel@channel:
  3049                           	opt callstack 0
  3050  00002F                     nwkDataReqSendFrame@frame:
  3051                           	opt callstack 0
  3052  00002F                     nwkRouteSendRouteError@command:
  3053                           	opt callstack 0
  3054  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  3055                           	opt callstack 0
  3056  00002F                     setSignalBandwidth@bw:
  3057                           	opt callstack 0
  3058                           
  3059                           ; 4 bytes @ 0x2E
  3060  00002F                     	ds	1
  3061  000030                     ??_bootLoadApplication:
  3062                           
  3063                           ; 1 bytes @ 0x2F
  3064  000030                     	ds	1
  3065  000031                     ??_nwkDataReqTaskHandler:
  3066  000031                     nwkRouteSendRouteError@frame:
  3067                           	opt callstack 0
  3068  000031                     nwkRxHandleReceivedFrame@header:
  3069                           	opt callstack 0
  3070  000031                     _dtoa$6909:
  3071                           	opt callstack 0
  3072  000031                     utoa@p:
  3073                           	opt callstack 0
  3074  000031                     ___strtoxl@cp:
  3075                           	opt callstack 0
  3076                           
  3077                           ; 2 bytes @ 0x30
  3078  000031                     	ds	1
  3079  000032                     bootLoadApplication@temp:
  3080                           	opt callstack 0
  3081  000032                     _xtoa$6937:
  3082                           	opt callstack 0
  3083                           
  3084                           ; 2 bytes @ 0x31
  3085  000032                     	ds	1
  3086  000033                     ??_initRadio:
  3087  000033                     ___strtoxl@c:
  3088                           	opt callstack 0
  3089  000033                     nwkDataReqTaskHandler@req:
  3090                           	opt callstack 0
  3091  000033                     nwkRouteFrame@frame:
  3092                           	opt callstack 0
  3093  000033                     dtoa@p:
  3094                           	opt callstack 0
  3095  000033                     utoa@w:
  3096                           	opt callstack 0
  3097                           
  3098                           ; 2 bytes @ 0x32
  3099  000033                     	ds	1
  3100  000034                     ?_strtoul:
  3101                           	opt callstack 0
  3102  000034                     ?_strtol:
  3103                           	opt callstack 0
  3104  000034                     bootLoadApplication@i:
  3105                           	opt callstack 0
  3106  000034                     _xtoa$6938:
  3107                           	opt callstack 0
  3108  000034                     strtol@s:
  3109                           	opt callstack 0
  3110  000034                     strtoul@s:
  3111                           	opt callstack 0
  3112                           
  3113                           ; 2 bytes @ 0x33
  3114  000034                     	ds	1
  3115  000035                     nwkRouteFrame@header:
  3116                           	opt callstack 0
  3117  000035                     dtoa@w:
  3118                           	opt callstack 0
  3119  000035                     utoa@n:
  3120                           	opt callstack 0
  3121                           
  3122                           ; 8 bytes @ 0x34
  3123  000035                     	ds	1
  3124  000036                     xtoa@p:
  3125                           	opt callstack 0
  3126  000036                     strtol@endptr:
  3127                           	opt callstack 0
  3128  000036                     strtoul@endptr:
  3129                           	opt callstack 0
  3130                           
  3131                           ; 2 bytes @ 0x35
  3132  000036                     	ds	1
  3133  000037                     initRadio@version:
  3134                           	opt callstack 0
  3135  000037                     dtoa@s:
  3136                           	opt callstack 0
  3137                           
  3138                           ; 2 bytes @ 0x36
  3139  000037                     	ds	1
  3140  000038                     initRadio@wideRSSI:
  3141                           	opt callstack 0
  3142  000038                     xtoa@w:
  3143                           	opt callstack 0
  3144  000038                     strtol@base:
  3145                           	opt callstack 0
  3146  000038                     strtoul@base:
  3147                           	opt callstack 0
  3148                           
  3149                           ; 2 bytes @ 0x37
  3150  000038                     	ds	1
  3151  000039                     dtoa@n:
  3152                           	opt callstack 0
  3153                           
  3154                           ; 8 bytes @ 0x38
  3155  000039                     	ds	1
  3156  00003A                     ??_radio_engine:
  3157  00003A                     cmdSetBaud@atCommand:
  3158                           	opt callstack 0
  3159  00003A                     xtoa@n:
  3160                           	opt callstack 0
  3161                           
  3162                           ; 8 bytes @ 0x39
  3163  00003A                     	ds	2
  3164  00003C                     cmdSetBaud@tempbaud:
  3165                           	opt callstack 0
  3166                           
  3167                           ; 1 bytes @ 0x3B
  3168  00003C                     	ds	1
  3169  00003D                     cmdSetBaud@ptr:
  3170                           	opt callstack 0
  3171  00003D                     utoa@i:
  3172                           	opt callstack 0
  3173                           
  3174                           ; 2 bytes @ 0x3C
  3175  00003D                     	ds	4
  3176  000041                     dtoa@i:
  3177                           	opt callstack 0
  3178                           
  3179                           ; 2 bytes @ 0x40
  3180  000041                     	ds	1
  3181  000042                     xtoa@i:
  3182                           	opt callstack 0
  3183                           
  3184                           ; 2 bytes @ 0x41
  3185  000042                     	ds	2
  3186  000044                     xtoa@c:
  3187                           	opt callstack 0
  3188                           
  3189                           ; 2 bytes @ 0x43
  3190  000044                     	ds	2
  3191  000046                     ?_vfpfcnvrt:
  3192                           	opt callstack 0
  3193  000046                     vfpfcnvrt@fp:
  3194                           	opt callstack 0
  3195                           
  3196                           ; 2 bytes @ 0x45
  3197  000046                     	ds	2
  3198  000048                     vfpfcnvrt@fmt:
  3199                           	opt callstack 0
  3200                           
  3201                           ; 2 bytes @ 0x47
  3202  000048                     	ds	2
  3203  00004A                     vfpfcnvrt@ap:
  3204                           	opt callstack 0
  3205                           
  3206                           ; 2 bytes @ 0x49
  3207  00004A                     	ds	2
  3208  00004C                     ??_vfpfcnvrt:
  3209                           
  3210                           ; 1 bytes @ 0x4B
  3211  00004C                     	ds	4
  3212  000050                     ?_vfprintf:
  3213                           	opt callstack 0
  3214  000050                     vfprintf@fp:
  3215                           	opt callstack 0
  3216                           
  3217                           ; 2 bytes @ 0x4F
  3218  000050                     	ds	2
  3219  000052                     vfprintf@fmt:
  3220                           	opt callstack 0
  3221                           
  3222                           ; 2 bytes @ 0x51
  3223  000052                     	ds	2
  3224  000054                     vfprintf@ap:
  3225                           	opt callstack 0
  3226                           
  3227                           ; 2 bytes @ 0x53
  3228  000054                     	ds	2
  3229  000056                     vfprintf@cfmt:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 2 bytes @ 0x55
  3233  000056                     	ds	2
  3234  000058                     
  3235                           ; 1 bytes @ 0x57
  3236  000058                     	ds	2
  3237  00005A                     printf@ap:
  3238                           	opt callstack 0
  3239                           
  3240                           ; 2 bytes @ 0x59
  3241  00005A                     	ds	2
  3242  00005C                     ??_cmdMac:
  3243  00005C                     ??_cmdSetAES:
  3244  00005C                     ??_cmdBootLoad:
  3245  00005C                     
  3246                           ; 1 bytes @ 0x5B
  3247  00005C                     	ds	1
  3248  00005D                     cmdMac@i:
  3249                           	opt callstack 0
  3250                           
  3251                           ; 1 bytes @ 0x5C
  3252  00005D                     	ds	1
  3253  00005E                     
  3254                           ; 1 bytes @ 0x5D
  3255 ;;
  3256 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3257 ;;
  3258 ;; *************** function _main *****************
  3259 ;; Defined at:
  3260 ;;		line 51 in file "main.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels required when called:   22
  3280 ;; This function calls:
  3281 ;;		_SYSTEM_Initialize
  3282 ;;		_SYS_Init
  3283 ;;		_SYS_TaskHandler
  3284 ;;		_TMR0_SetInterruptHandler
  3285 ;;		_bootLoadApplication
  3286 ;;		_processATCommand
  3287 ;; This function is called by:
  3288 ;;		Startup code after reset
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text0
  3293  009656                     __ptext0:
  3294                           	opt callstack 0
  3295  009656                     _main:
  3296                           	opt callstack 9
  3297  009656                     
  3298                           ;main.c: 54:     SYSTEM_Initialize();
  3299  009656  EC7B  F04C         	call	_SYSTEM_Initialize	;wreg free
  3300  00965A                     
  3301                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  3302  00965A  8ED2               	bsf	210,7,c	;volatile
  3303  00965C                     
  3304                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  3305  00965C  8CD2               	bsf	210,6,c	;volatile
  3306                           
  3307                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  3308  00965E  0EFE               	movlw	low _Timer0Handler
  3309  009660  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3310  009662  0E7D               	movlw	high _Timer0Handler
  3311  009664  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3312  009666  EC50  F04E         	call	_TMR0_SetInterruptHandler	;wreg free
  3313  00966A                     
  3314                           ;main.c: 73:     SYS_Init();
  3315  00966A  EC26  F04E         	call	_SYS_Init	;wreg free
  3316  00966E                     
  3317                           ;main.c: 74:     bootLoadApplication();
  3318  00966E  ECBB  F013         	call	_bootLoadApplication	;wreg free
  3319  009672  86BA               	bsf	186,3,c	;volatile
  3320  009674                     l17511:
  3321                           
  3322                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  3323  009674  EC18  F04E         	call	_SYS_TaskHandler	;wreg free
  3324  009678                     
  3325                           ;main.c: 79:         processATCommand();
  3326  009678  EC69  F01C         	call	_processATCommand	;wreg free
  3327  00967C  EF3A  F04B         	goto	l17511
  3328  009680  EF57  F000         	goto	start
  3329  009684                     __end_of_main:
  3330                           	opt callstack 0
  3331                           
  3332 ;; *************** function _processATCommand *****************
  3333 ;; Defined at:
  3334 ;;		line 976 in file "app/app_src/application.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  data            1  114[BANK0 ] unsigned char 
  3339 ;;  data            1  115[BANK0 ] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        4 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:   19
  3356 ;; This function calls:
  3357 ;;		_UART1_Read
  3358 ;;		_UART1_is_rx_ready
  3359 ;;		_executeATCommand
  3360 ;;		_get_timer0base
  3361 ;;		_memset
  3362 ;;		_queue_serial_led_event
  3363 ;;		_set_timer0base
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text1
  3370  0038D2                     __ptext1:
  3371                           	opt callstack 0
  3372  0038D2                     _processATCommand:
  3373                           	opt callstack 11
  3374  0038D2                     
  3375                           ;app/app_src/application.c: 979:     if(tx_done && U1ERRIRbits.TXMTIF){
  3376  0038D2  0101               	movlb	1	; () banked
  3377  0038D4  5177               	movf	_tx_done& (0+255),w,b	;volatile
  3378  0038D6  B4D8               	btfsc	status,2,c
  3379  0038D8  EF70  F01C         	goto	u17261
  3380  0038DC  EF72  F01C         	goto	u17260
  3381  0038E0                     u17261:
  3382  0038E0  EF7D  F01C         	goto	l17025
  3383  0038E4                     u17260:
  3384  0038E4                     
  3385                           ; BSR set to: 1
  3386  0038E4  013D               	movlb	61	; () banked
  3387  0038E6  AFF9               	btfss	249,7,b	;volatile
  3388  0038E8  EF78  F01C         	goto	u17271
  3389  0038EC  EF7A  F01C         	goto	u17270
  3390  0038F0                     u17271:
  3391  0038F0  EF7D  F01C         	goto	l17025
  3392  0038F4                     u17270:
  3393  0038F4                     
  3394                           ; BSR set to: 61
  3395                           ;app/app_src/application.c: 981:        tx_done = 0;
  3396  0038F4  0E00               	movlw	0
  3397  0038F6  0101               	movlb	1	; () banked
  3398  0038F8  6F77               	movwf	_tx_done& (0+255),b	;volatile
  3399  0038FA                     l17025:
  3400                           
  3401                           ;app/app_src/application.c: 984:     if(((atStateVar != lookingForA) || (atStateVar != p
      +                          rocessCommand)) &&
  3402  0038FA  0101               	movlb	1	; () banked
  3403  0038FC  0575               	decf	_atStateVar& (0+255),w,b
  3404  0038FE  A4D8               	btfss	status,2,c
  3405  003900  EF84  F01C         	goto	u17281
  3406  003904  EF86  F01C         	goto	u17280
  3407  003908                     u17281:
  3408  003908  EF8F  F01C         	goto	l17029
  3409  00390C                     u17280:
  3410  00390C                     
  3411                           ; BSR set to: 1
  3412  00390C  0E05               	movlw	5
  3413  00390E  1975               	xorwf	_atStateVar& (0+255),w,b
  3414  003910  B4D8               	btfsc	status,2,c
  3415  003912  EF8D  F01C         	goto	u17291
  3416  003916  EF8F  F01C         	goto	u17290
  3417  00391A                     u17291:
  3418  00391A  EF5E  F01D         	goto	l17095
  3419  00391E                     u17290:
  3420  00391E                     l17029:
  3421                           
  3422                           ; BSR set to: 1
  3423  00391E  0EFD               	movlw	low _ATTimeoutTimer
  3424  003920  6E02               	movwf	get_timer0base@timer^0,c
  3425  003922  0E00               	movlw	high _ATTimeoutTimer
  3426  003924  6E03               	movwf	(get_timer0base@timer+1)^0,c
  3427  003926  ECB6  F04B         	call	_get_timer0base	;wreg free
  3428  00392A  5002               	movf	?_get_timer0base^0,w,c
  3429  00392C  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3430  00392E  A4D8               	btfss	status,2,c
  3431  003930  EF9C  F01C         	goto	u17301
  3432  003934  EF9E  F01C         	goto	u17300
  3433  003938                     u17301:
  3434  003938  EF5E  F01D         	goto	l17095
  3435  00393C                     u17300:
  3436  00393C                     
  3437                           ;app/app_src/application.c: 985:             (!get_timer0base(&ATTimeoutTimer))) {;app/a
      +                          pp_src/application.c: 986:         atStateVar = resetATMachine;
  3438  00393C  0E06               	movlw	6
  3439  00393E  0101               	movlb	1	; () banked
  3440  003940  6F75               	movwf	_atStateVar& (0+255),b
  3441  003942  EF5E  F01D         	goto	l17095
  3442  003946                     l17033:
  3443                           
  3444                           ;app/app_src/application.c: 990:             atStateVar = resetATMachine;
  3445  003946  0E06               	movlw	6
  3446  003948  0101               	movlb	1	; () banked
  3447  00394A  6F75               	movwf	_atStateVar& (0+255),b
  3448                           
  3449                           ;app/app_src/application.c: 991:             break;
  3450  00394C  EF89  F01D         	goto	l489
  3451  003950                     l17035:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;app/app_src/application.c: 994:             if(UART1_is_rx_ready()){
  3455  003950  EC79  F04D         	call	_UART1_is_rx_ready	;wreg free
  3456  003954  0900               	iorlw	0
  3457  003956  B4D8               	btfsc	status,2,c
  3458  003958  EFB0  F01C         	goto	u17311
  3459  00395C  EFB2  F01C         	goto	u17310
  3460  003960                     u17311:
  3461  003960  EF89  F01D         	goto	l489
  3462  003964                     u17310:
  3463  003964                     
  3464                           ;app/app_src/application.c: 996:                 if(UART1_Read() == 'A')
  3465  003964  EC07  F045         	call	_UART1_Read	;wreg free
  3466  003968  0A41               	xorlw	65
  3467  00396A  A4D8               	btfss	status,2,c
  3468  00396C  EFBA  F01C         	goto	u17321
  3469  003970  EFBC  F01C         	goto	u17320
  3470  003974                     u17321:
  3471  003974  EF89  F01D         	goto	l489
  3472  003978                     u17320:
  3473  003978                     
  3474                           ;app/app_src/application.c: 997:                 {;app/app_src/application.c: 999:      
      +                                         atStateVar = lookingForT;
  3475  003978  0E02               	movlw	2
  3476  00397A  0101               	movlb	1	; () banked
  3477  00397C  6F75               	movwf	_atStateVar& (0+255),b
  3478  00397E                     l17041:
  3479                           
  3480                           ;app/app_src/application.c: 1000:                     set_timer0base(&ATTimeoutTimer, 10
      +                          00);
  3481  00397E  0EFD               	movlw	low _ATTimeoutTimer
  3482  003980  6E02               	movwf	set_timer0base@timer^0,c
  3483  003982  0E00               	movlw	high _ATTimeoutTimer
  3484  003984  6E03               	movwf	(set_timer0base@timer+1)^0,c
  3485  003986  0E03               	movlw	3
  3486  003988  6E05               	movwf	(set_timer0base@tval+1)^0,c
  3487  00398A  0EE8               	movlw	232
  3488  00398C  6E04               	movwf	set_timer0base@tval^0,c
  3489  00398E  ECAD  F04C         	call	_set_timer0base	;wreg free
  3490  003992  EF89  F01D         	goto	l489
  3491  003996                     l17043:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;app/app_src/application.c: 1005:             if(UART1_is_rx_ready()){
  3495  003996  EC79  F04D         	call	_UART1_is_rx_ready	;wreg free
  3496  00399A  0900               	iorlw	0
  3497  00399C  B4D8               	btfsc	status,2,c
  3498  00399E  EFD3  F01C         	goto	u17331
  3499  0039A2  EFD5  F01C         	goto	u17330
  3500  0039A6                     u17331:
  3501  0039A6  EF89  F01D         	goto	l489
  3502  0039AA                     u17330:
  3503  0039AA                     
  3504                           ;app/app_src/application.c: 1007:                 if(UART1_Read() == 'T')
  3505  0039AA  EC07  F045         	call	_UART1_Read	;wreg free
  3506  0039AE  0A54               	xorlw	84
  3507  0039B0  A4D8               	btfss	status,2,c
  3508  0039B2  EFDD  F01C         	goto	u17341
  3509  0039B6  EFDF  F01C         	goto	u17340
  3510  0039BA                     u17341:
  3511  0039BA  EFE4  F01C         	goto	l17049
  3512  0039BE                     u17340:
  3513  0039BE                     
  3514                           ;app/app_src/application.c: 1008:                 {;app/app_src/application.c: 1010:    
      +                                           atStateVar = readingCommand;
  3515  0039BE  0E03               	movlw	3
  3516  0039C0  0101               	movlb	1	; () banked
  3517  0039C2  6F75               	movwf	_atStateVar& (0+255),b
  3518                           
  3519                           ;app/app_src/application.c: 1011:                 }
  3520  0039C4  EF89  F01D         	goto	l489
  3521  0039C8                     l17049:
  3522                           
  3523                           ;app/app_src/application.c: 1013:                 {;app/app_src/application.c: 1014:    
      +                                           atStateVar = lookingForA;
  3524  0039C8  0E01               	movlw	1
  3525  0039CA  0101               	movlb	1	; () banked
  3526  0039CC  6F75               	movwf	_atStateVar& (0+255),b
  3527  0039CE  EF89  F01D         	goto	l489
  3528  0039D2                     l17051:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;app/app_src/application.c: 1020:             if(UART1_is_rx_ready())
  3532  0039D2  EC79  F04D         	call	_UART1_is_rx_ready	;wreg free
  3533  0039D6  0900               	iorlw	0
  3534  0039D8  B4D8               	btfsc	status,2,c
  3535  0039DA  EFF1  F01C         	goto	u17351
  3536  0039DE  EFF3  F01C         	goto	u17350
  3537  0039E2                     u17351:
  3538  0039E2  EF89  F01D         	goto	l489
  3539  0039E6                     u17350:
  3540  0039E6                     
  3541                           ;app/app_src/application.c: 1021:             {;app/app_src/application.c: 1022:        
      +                                   uint8_t data = UART1_Read();
  3542  0039E6  EC07  F045         	call	_UART1_Read	;wreg free
  3543  0039EA  0100               	movlb	0	; () banked
  3544  0039EC  6FD3               	movwf	processATCommand@data& (0+255),b
  3545  0039EE                     
  3546                           ; BSR set to: 0
  3547                           ;app/app_src/application.c: 1023:                 if(data == '\r')
  3548  0039EE  0E0D               	movlw	13
  3549  0039F0  19D3               	xorwf	processATCommand@data& (0+255),w,b
  3550  0039F2  A4D8               	btfss	status,2,c
  3551  0039F4  EFFE  F01C         	goto	u17361
  3552  0039F8  EF00  F01D         	goto	u17360
  3553  0039FC                     u17361:
  3554  0039FC  EF0E  F01D         	goto	l17063
  3555  003A00                     u17360:
  3556  003A00                     
  3557                           ; BSR set to: 0
  3558                           ;app/app_src/application.c: 1024:                 {;app/app_src/application.c: 1026:    
      +                                           atStateVar = endingCommand;
  3559  003A00  0E04               	movlw	4
  3560  003A02  0101               	movlb	1	; () banked
  3561  003A04  6F75               	movwf	_atStateVar& (0+255),b
  3562  003A06                     
  3563                           ; BSR set to: 1
  3564                           ;app/app_src/application.c: 1028:                     atCommand[commandByteCounter++] = 
      +                          '\0';
  3565  003A06  0E30               	movlw	low _atCommand
  3566  003A08  2576               	addwf	_commandByteCounter& (0+255),w,b
  3567  003A0A  6ED9               	movwf	fsr2l,c
  3568  003A0C  6ADA               	clrf	fsr2h,c
  3569  003A0E  0E02               	movlw	high _atCommand
  3570  003A10  22DA               	addwfc	fsr2h,f,c
  3571  003A12  0E00               	movlw	0
  3572  003A14  6EDF               	movwf	indf2,c
  3573  003A16                     
  3574                           ; BSR set to: 1
  3575  003A16  2B76               	incf	_commandByteCounter& (0+255),f,b
  3576                           
  3577                           ;app/app_src/application.c: 1029:                 }
  3578  003A18  EF89  F01D         	goto	l489
  3579  003A1C                     l17063:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;app/app_src/application.c: 1031:                 {;app/app_src/application.c: 1032:    
      +                                           atCommand[commandByteCounter++] = data;
  3583  003A1C  0E30               	movlw	low _atCommand
  3584  003A1E  0101               	movlb	1	; () banked
  3585  003A20  2576               	addwf	_commandByteCounter& (0+255),w,b
  3586  003A22  6ED9               	movwf	fsr2l,c
  3587  003A24  6ADA               	clrf	fsr2h,c
  3588  003A26  0E02               	movlw	high _atCommand
  3589  003A28  22DA               	addwfc	fsr2h,f,c
  3590  003A2A  0060  F34F  FFDF   	movff	processATCommand@data,indf2
  3591  003A30                     
  3592                           ; BSR set to: 1
  3593  003A30  2B76               	incf	_commandByteCounter& (0+255),f,b
  3594  003A32                     
  3595                           ; BSR set to: 1
  3596                           ;app/app_src/application.c: 1033:                     if(commandByteCounter >= 80)
  3597  003A32  0E4F               	movlw	79
  3598  003A34  6576               	cpfsgt	_commandByteCounter& (0+255),b
  3599  003A36  EF1F  F01D         	goto	u17371
  3600  003A3A  EF21  F01D         	goto	u17370
  3601  003A3E                     u17371:
  3602  003A3E  EF89  F01D         	goto	l489
  3603  003A42                     u17370:
  3604  003A42  EFA3  F01C         	goto	l17033
  3605  003A46                     l17071:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;app/app_src/application.c: 1043:             if(UART1_is_rx_ready())
  3609  003A46  EC79  F04D         	call	_UART1_is_rx_ready	;wreg free
  3610  003A4A  0900               	iorlw	0
  3611  003A4C  B4D8               	btfsc	status,2,c
  3612  003A4E  EF2B  F01D         	goto	u17381
  3613  003A52  EF2D  F01D         	goto	u17380
  3614  003A56                     u17381:
  3615  003A56  EF89  F01D         	goto	l489
  3616  003A5A                     u17380:
  3617  003A5A                     
  3618                           ;app/app_src/application.c: 1044:             {;app/app_src/application.c: 1045:        
      +                                   uint8_t data = UART1_Read();
  3619  003A5A  EC07  F045         	call	_UART1_Read	;wreg free
  3620  003A5E  0100               	movlb	0	; () banked
  3621  003A60  6FD2               	movwf	processATCommand@data_785& (0+255),b
  3622  003A62                     
  3623                           ; BSR set to: 0
  3624                           ;app/app_src/application.c: 1046:                 if(data == '\n')
  3625  003A62  0E0A               	movlw	10
  3626  003A64  19D2               	xorwf	processATCommand@data_785& (0+255),w,b
  3627  003A66  A4D8               	btfss	status,2,c
  3628  003A68  EF38  F01D         	goto	u17391
  3629  003A6C  EF3A  F01D         	goto	u17390
  3630  003A70                     u17391:
  3631  003A70  EFA3  F01C         	goto	l17033
  3632  003A74                     u17390:
  3633  003A74                     
  3634                           ; BSR set to: 0
  3635                           ;app/app_src/application.c: 1047:                 {;app/app_src/application.c: 1049:    
      +                                           atStateVar = processCommand;
  3636  003A74  0E05               	movlw	5
  3637  003A76  0101               	movlb	1	; () banked
  3638  003A78  6F75               	movwf	_atStateVar& (0+255),b
  3639                           
  3640                           ;app/app_src/application.c: 1050:                 }
  3641  003A7A  EF89  F01D         	goto	l489
  3642  003A7E                     l17081:
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;app/app_src/application.c: 1060:             executeATCommand(atCommand);
  3646  003A7E  0E30               	movlw	low _atCommand
  3647  003A80  6FCB               	movwf	executeATCommand@cmd& (0+255),b
  3648  003A82  0E02               	movlw	high _atCommand
  3649  003A84  6FCC               	movwf	(executeATCommand@cmd+1)& (0+255),b
  3650  003A86  EC59  F000         	call	_executeATCommand	;wreg free
  3651  003A8A                     
  3652                           ;app/app_src/application.c: 1061:             queue_serial_led_event();
  3653  003A8A  ECA9  F044         	call	_queue_serial_led_event	;wreg free
  3654  003A8E  EFA3  F01C         	goto	l17033
  3655  003A92                     l17087:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;app/app_src/application.c: 1065:             atStateVar = lookingForA;
  3659  003A92  0E01               	movlw	1
  3660  003A94  0101               	movlb	1	; () banked
  3661  003A96  6F75               	movwf	_atStateVar& (0+255),b
  3662                           
  3663                           ;app/app_src/application.c: 1066:             commandByteCounter = 0;
  3664  003A98  0E00               	movlw	0
  3665  003A9A  6F76               	movwf	_commandByteCounter& (0+255),b
  3666  003A9C                     
  3667                           ; BSR set to: 1
  3668                           ;app/app_src/application.c: 1068:             memset(atCommand,0,sizeof(atCommand));
  3669  003A9C  0E30               	movlw	low _atCommand
  3670  003A9E  6E02               	movwf	memset@dest^0,c
  3671  003AA0  0E02               	movlw	high _atCommand
  3672  003AA2  6E03               	movwf	(memset@dest+1)^0,c
  3673  003AA4  0E00               	movlw	0
  3674  003AA6  6E05               	movwf	(memset@c+1)^0,c
  3675  003AA8  0E00               	movlw	0
  3676  003AAA  6E04               	movwf	memset@c^0,c
  3677  003AAC  0E00               	movlw	0
  3678  003AAE  6E07               	movwf	(memset@n+1)^0,c
  3679  003AB0  0E50               	movlw	80
  3680  003AB2  6E06               	movwf	memset@n^0,c
  3681  003AB4  ECA5  F023         	call	_memset	;wreg free
  3682  003AB8  EFBF  F01C         	goto	l17041
  3683  003ABC                     l17095:
  3684  003ABC  0101               	movlb	1	; () banked
  3685  003ABE  5175               	movf	_atStateVar& (0+255),w,b
  3686  003AC0  0100               	movlb	0	; () banked
  3687  003AC2  6FD0               	movwf	??_processATCommand& (0+255),b
  3688  003AC4  6BD1               	clrf	(??_processATCommand+1)& (0+255),b
  3689                           
  3690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3691                           ; Switch size 1, requested type "simple"
  3692                           ; Number of cases is 1, Range of values is 0 to 0
  3693                           ; switch strategies available:
  3694                           ; Name         Instructions Cycles
  3695                           ; simple_byte            4     3 (average)
  3696                           ;	Chosen strategy is simple_byte
  3697  003AC6  51D1               	movf	(??_processATCommand+1)& (0+255),w,b
  3698  003AC8  0A00               	xorlw	0	; case 0
  3699  003ACA  B4D8               	btfsc	status,2,c
  3700  003ACC  EF6A  F01D         	goto	l17825
  3701  003AD0  EFA3  F01C         	goto	l17033
  3702  003AD4                     l17825:
  3703                           
  3704                           ; BSR set to: 0
  3705                           ; Switch size 1, requested type "simple"
  3706                           ; Number of cases is 7, Range of values is 0 to 6
  3707                           ; switch strategies available:
  3708                           ; Name         Instructions Cycles
  3709                           ; simple_byte           22    12 (average)
  3710                           ;	Chosen strategy is simple_byte
  3711  003AD4  51D0               	movf	??_processATCommand& (0+255),w,b
  3712  003AD6  0A00               	xorlw	0	; case 0
  3713  003AD8  B4D8               	btfsc	status,2,c
  3714  003ADA  EFA3  F01C         	goto	l17033
  3715  003ADE  0A01               	xorlw	1	; case 1
  3716  003AE0  B4D8               	btfsc	status,2,c
  3717  003AE2  EFA8  F01C         	goto	l17035
  3718  003AE6  0A03               	xorlw	3	; case 2
  3719  003AE8  B4D8               	btfsc	status,2,c
  3720  003AEA  EFCB  F01C         	goto	l17043
  3721  003AEE  0A01               	xorlw	1	; case 3
  3722  003AF0  B4D8               	btfsc	status,2,c
  3723  003AF2  EFE9  F01C         	goto	l17051
  3724  003AF6  0A07               	xorlw	7	; case 4
  3725  003AF8  B4D8               	btfsc	status,2,c
  3726  003AFA  EF23  F01D         	goto	l17071
  3727  003AFE  0A01               	xorlw	1	; case 5
  3728  003B00  B4D8               	btfsc	status,2,c
  3729  003B02  EF3F  F01D         	goto	l17081
  3730  003B06  0A03               	xorlw	3	; case 6
  3731  003B08  B4D8               	btfsc	status,2,c
  3732  003B0A  EF49  F01D         	goto	l17087
  3733  003B0E  EFA3  F01C         	goto	l17033
  3734  003B12                     l489:
  3735  003B12  0012               	return		;funcret
  3736  003B14                     __end_of_processATCommand:
  3737                           	opt callstack 0
  3738                           
  3739 ;; *************** function _queue_serial_led_event *****************
  3740 ;; Defined at:
  3741 ;;		line 96 in file "app/app_src/led.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  i               1   34[COMRAM] unsigned char 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;Total ram usage:        1 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:   10
  3762 ;; This function calls:
  3763 ;;		_queueLedEvent
  3764 ;; This function is called by:
  3765 ;;		_processATCommand
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text2
  3770  008952                     __ptext2:
  3771                           	opt callstack 0
  3772  008952                     _queue_serial_led_event:
  3773                           	opt callstack 19
  3774  008952                     
  3775                           ;app/app_src/led.c: 98:     queueLedEvent(0,400);
  3776  008952  0E01               	movlw	1
  3777  008954  6E1E               	movwf	(queueLedEvent@duration+1)^0,c
  3778  008956  0E90               	movlw	144
  3779  008958  6E1D               	movwf	queueLedEvent@duration^0,c
  3780  00895A  0E00               	movlw	0
  3781  00895C  ECD4  F047         	call	_queueLedEvent
  3782  008960                     
  3783                           ;app/app_src/led.c: 99:     for(uint8_t i = 0; i < 2; i++)
  3784  008960  0E00               	movlw	0
  3785  008962  6E23               	movwf	queue_serial_led_event@i^0,c
  3786  008964                     l16895:
  3787                           
  3788                           ;app/app_src/led.c: 100:     {;app/app_src/led.c: 101:         queueLedEvent(1,100);
  3789  008964  0E00               	movlw	0
  3790  008966  6E1E               	movwf	(queueLedEvent@duration+1)^0,c
  3791  008968  0E64               	movlw	100
  3792  00896A  6E1D               	movwf	queueLedEvent@duration^0,c
  3793  00896C  0E01               	movlw	1
  3794  00896E  ECD4  F047         	call	_queueLedEvent
  3795                           
  3796                           ;app/app_src/led.c: 102:         queueLedEvent(0,100);
  3797  008972  0E00               	movlw	0
  3798  008974  6E1E               	movwf	(queueLedEvent@duration+1)^0,c
  3799  008976  0E64               	movlw	100
  3800  008978  6E1D               	movwf	queueLedEvent@duration^0,c
  3801  00897A  0E00               	movlw	0
  3802  00897C  ECD4  F047         	call	_queueLedEvent
  3803  008980                     
  3804                           ;app/app_src/led.c: 103:     }
  3805  008980  2A23               	incf	queue_serial_led_event@i^0,f,c
  3806  008982  0E01               	movlw	1
  3807  008984  6423               	cpfsgt	queue_serial_led_event@i^0,c
  3808  008986  EFC7  F044         	goto	u17101
  3809  00898A  EFC9  F044         	goto	u17100
  3810  00898E                     u17101:
  3811  00898E  EFB2  F044         	goto	l16895
  3812  008992                     u17100:
  3813  008992                     
  3814                           ;app/app_src/led.c: 104:     queueLedEvent(0,100);
  3815  008992  0E00               	movlw	0
  3816  008994  6E1E               	movwf	(queueLedEvent@duration+1)^0,c
  3817  008996  0E64               	movlw	100
  3818  008998  6E1D               	movwf	queueLedEvent@duration^0,c
  3819  00899A  0E00               	movlw	0
  3820  00899C  ECD4  F047         	call	_queueLedEvent
  3821                           
  3822                           ;app/app_src/led.c: 105:     queueLedEvent(1,100);
  3823  0089A0  0E00               	movlw	0
  3824  0089A2  6E1E               	movwf	(queueLedEvent@duration+1)^0,c
  3825  0089A4  0E64               	movlw	100
  3826  0089A6  6E1D               	movwf	queueLedEvent@duration^0,c
  3827  0089A8  0E01               	movlw	1
  3828  0089AA  ECD4  F047         	call	_queueLedEvent
  3829  0089AE  0012               	return		;funcret
  3830  0089B0                     __end_of_queue_serial_led_event:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function _queueLedEvent *****************
  3834 ;; Defined at:
  3835 ;;		line 53 in file "app/app_src/led.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  LEDState        1    wreg     unsigned char 
  3838 ;;  duration        2   28[COMRAM] unsigned short 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  LEDState        1   30[COMRAM] unsigned char 
  3841 ;;  temp            3   31[COMRAM] struct ledEvent
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      char 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;Total ram usage:        6 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    9
  3858 ;; This function calls:
  3859 ;;		_CircularBufferPushBack
  3860 ;;		_CircularBufferSpace
  3861 ;; This function is called by:
  3862 ;;		_queue_serial_led_event
  3863 ;;		_ledInit
  3864 ;;		_queue_tx_led_event
  3865 ;;		_queue_rx_led_event
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text3
  3870  008FA8                     __ptext3:
  3871                           	opt callstack 0
  3872  008FA8                     _queueLedEvent:
  3873                           	opt callstack 19
  3874                           
  3875                           ;incstack = 0
  3876                           ;queueLedEvent@LEDState stored from wreg
  3877  008FA8  6E1F               	movwf	queueLedEvent@LEDState^0,c
  3878  008FAA                     
  3879                           ;app/app_src/led.c: 53: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);app/app
      +                          _src/led.c: 54: {;app/app_src/led.c: 55:     if(0 != CircularBufferSpace(&ledtasksbuf))
  3880  008FAA  0EC7               	movlw	low _ledtasksbuf
  3881  008FAC  6E0A               	movwf	CircularBufferSpace@ctx^0,c
  3882  008FAE  0E01               	movlw	high _ledtasksbuf
  3883  008FB0  6E0B               	movwf	(CircularBufferSpace@ctx+1)^0,c
  3884  008FB2  ECDF  F04A         	call	_CircularBufferSpace	;wreg free
  3885  008FB6  500A               	movf	?_CircularBufferSpace^0,w,c
  3886  008FB8  100B               	iorwf	(?_CircularBufferSpace+1)^0,w,c
  3887  008FBA  B4D8               	btfsc	status,2,c
  3888  008FBC  EFE2  F047         	goto	u16451
  3889  008FC0  EFE4  F047         	goto	u16450
  3890  008FC4                     u16451:
  3891  008FC4  EFF7  F047         	goto	l819
  3892  008FC8                     u16450:
  3893  008FC8                     
  3894                           ;app/app_src/led.c: 56:     {;app/app_src/led.c: 57:         struct ledEvent temp;;app/a
      +                          pp_src/led.c: 58:         temp.LEDCondition = LEDState;
  3895  008FC8  0060  F07C  F020   	movff	queueLedEvent@LEDState,queueLedEvent@temp
  3896                           
  3897                           ;app/app_src/led.c: 59:         temp.eventDuration = duration;
  3898  008FCE  0060  F074  F021   	movff	queueLedEvent@duration,queueLedEvent@temp+1
  3899  008FD4  0060  F078  F022   	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
  3900  008FDA                     
  3901                           ;app/app_src/led.c: 60:         CircularBufferPushBack(&ledtasksbuf,&temp);
  3902  008FDA  0EC7               	movlw	low _ledtasksbuf
  3903  008FDC  6E13               	movwf	CircularBufferPushBack@ctx^0,c
  3904  008FDE  0E01               	movlw	high _ledtasksbuf
  3905  008FE0  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
  3906  008FE2  0E20               	movlw	low queueLedEvent@temp
  3907  008FE4  6E15               	movwf	CircularBufferPushBack@val^0,c
  3908  008FE6  0E00               	movlw	high queueLedEvent@temp
  3909  008FE8  6E16               	movwf	(CircularBufferPushBack@val+1)^0,c
  3910  008FEA  EC94  F031         	call	_CircularBufferPushBack	;wreg free
  3911  008FEE                     l819:
  3912  008FEE  0012               	return		;funcret
  3913  008FF0                     __end_of_queueLedEvent:
  3914                           	opt callstack 0
  3915                           
  3916 ;; *************** function _CircularBufferSpace *****************
  3917 ;; Defined at:
  3918 ;;		line 126 in file "app/app_src/circular buffer.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  ctx             2    9[COMRAM] PTR const struct .
  3921 ;;		 -> ledtasksbuf(10), 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2    9[COMRAM] unsigned int 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;Total ram usage:        4 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    8
  3940 ;; This function calls:
  3941 ;;		_CircularBufferSize
  3942 ;; This function is called by:
  3943 ;;		_queueLedEvent
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text4
  3948  0095BE                     __ptext4:
  3949                           	opt callstack 0
  3950  0095BE                     _CircularBufferSpace:
  3951                           	opt callstack 19
  3952  0095BE                     
  3953                           ;app/app_src/circular buffer.c: 128:     return (ctx->max_size - CircularBufferSize(ctx)
      +                          );
  3954  0095BE  0060  F028  F002   	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
  3955  0095C4  0060  F02C  F003   	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
  3956  0095CA  ECD8  F044         	call	_CircularBufferSize	;wreg free
  3957  0095CE  EE20 F008          	lfsr	2,8
  3958  0095D2  500A               	movf	CircularBufferSpace@ctx^0,w,c
  3959  0095D4  26D9               	addwf	fsr2l,f,c
  3960  0095D6  500B               	movf	(CircularBufferSpace@ctx+1)^0,w,c
  3961  0095D8  22DA               	addwfc	fsr2h,f,c
  3962  0095DA  006F FF78  F00C    	movff	postinc2,??_CircularBufferSpace
  3963  0095E0  006F FF74  F00D    	movff	postdec2,??_CircularBufferSpace+1
  3964  0095E6  5002               	movf	?_CircularBufferSize^0,w,c
  3965  0095E8  5C0C               	subwf	??_CircularBufferSpace^0,w,c
  3966  0095EA  6E0A               	movwf	?_CircularBufferSpace^0,c
  3967  0095EC  5003               	movf	(?_CircularBufferSize+1)^0,w,c
  3968  0095EE  580D               	subwfb	(??_CircularBufferSpace+1)^0,w,c
  3969  0095F0  6E0B               	movwf	(?_CircularBufferSpace+1)^0,c
  3970  0095F2  0012               	return		;funcret
  3971  0095F4                     __end_of_CircularBufferSpace:
  3972                           	opt callstack 0
  3973                           
  3974 ;; *************** function _CircularBufferSize *****************
  3975 ;; Defined at:
  3976 ;;		line 122 in file "app/app_src/circular buffer.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  ctx             2    1[COMRAM] PTR const struct .
  3979 ;;		 -> ledtasksbuf(10), 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  2    1[COMRAM] unsigned int 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:        8 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    7
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_CircularBufferSpace
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text5
  4006  0089B0                     __ptext5:
  4007                           	opt callstack 0
  4008  0089B0                     _CircularBufferSize:
  4009                           	opt callstack 19
  4010  0089B0                     
  4011                           ;app/app_src/circular buffer.c: 123:     return ((ctx->write_pos - ctx->read_pos) & ctx-
      +                          >max_size);
  4012  0089B0  EE20 F008          	lfsr	2,8
  4013  0089B4  5002               	movf	CircularBufferSize@ctx^0,w,c
  4014  0089B6  26D9               	addwf	fsr2l,f,c
  4015  0089B8  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4016  0089BA  22DA               	addwfc	fsr2h,f,c
  4017  0089BC  006F FF78  F004    	movff	postinc2,??_CircularBufferSize
  4018  0089C2  006F FF74  F005    	movff	postdec2,??_CircularBufferSize+1
  4019  0089C8  EE20 F004          	lfsr	2,4
  4020  0089CC  5002               	movf	CircularBufferSize@ctx^0,w,c
  4021  0089CE  26D9               	addwf	fsr2l,f,c
  4022  0089D0  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4023  0089D2  22DA               	addwfc	fsr2h,f,c
  4024  0089D4  006F FF78  F006    	movff	postinc2,??_CircularBufferSize+2
  4025  0089DA  006F FF74  F007    	movff	postdec2,??_CircularBufferSize+3
  4026  0089E0  EE20 F002          	lfsr	2,2
  4027  0089E4  5002               	movf	CircularBufferSize@ctx^0,w,c
  4028  0089E6  26D9               	addwf	fsr2l,f,c
  4029  0089E8  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4030  0089EA  22DA               	addwfc	fsr2h,f,c
  4031  0089EC  006F FF78  F008    	movff	postinc2,??_CircularBufferSize+4
  4032  0089F2  006F FF74  F009    	movff	postdec2,??_CircularBufferSize+5
  4033  0089F8  5006               	movf	(??_CircularBufferSize+2)^0,w,c
  4034  0089FA  5E08               	subwf	(??_CircularBufferSize+4)^0,f,c
  4035  0089FC  5007               	movf	(??_CircularBufferSize+3)^0,w,c
  4036  0089FE  5A09               	subwfb	(??_CircularBufferSize+5)^0,f,c
  4037  008A00  5004               	movf	??_CircularBufferSize^0,w,c
  4038  008A02  1408               	andwf	(??_CircularBufferSize+4)^0,w,c
  4039  008A04  6E02               	movwf	?_CircularBufferSize^0,c
  4040  008A06  5005               	movf	(??_CircularBufferSize+1)^0,w,c
  4041  008A08  1409               	andwf	(??_CircularBufferSize+5)^0,w,c
  4042  008A0A  6E03               	movwf	(?_CircularBufferSize+1)^0,c
  4043  008A0C  0012               	return		;funcret
  4044  008A0E                     __end_of_CircularBufferSize:
  4045                           	opt callstack 0
  4046                           
  4047 ;; *************** function _CircularBufferPushBack *****************
  4048 ;; Defined at:
  4049 ;;		line 71 in file "app/app_src/circular buffer.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  ctx             2   18[COMRAM] PTR struct .
  4052 ;;		 -> ledtasksbuf(10), 
  4053 ;;  val             2   20[COMRAM] PTR void 
  4054 ;;		 -> queueLedEvent@temp(3), 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  write_pos       2   26[COMRAM] unsigned int 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      char 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;Total ram usage:       10 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    8
  4073 ;; This function calls:
  4074 ;;		___wmul
  4075 ;;		_memcpy
  4076 ;; This function is called by:
  4077 ;;		_queueLedEvent
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text6
  4082  006328                     __ptext6:
  4083                           	opt callstack 0
  4084  006328                     _CircularBufferPushBack:
  4085                           	opt callstack 19
  4086  006328                     
  4087                           ;app/app_src/circular buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx->m
      +                          ax_size;
  4088  006328  EE20 F008          	lfsr	2,8
  4089  00632C  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4090  00632E  26D9               	addwf	fsr2l,f,c
  4091  006330  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4092  006332  22DA               	addwfc	fsr2h,f,c
  4093  006334  006F FF78  F017    	movff	postinc2,??_CircularBufferPushBack
  4094  00633A  006F FF74  F018    	movff	postdec2,??_CircularBufferPushBack+1
  4095  006340  EE20 F002          	lfsr	2,2
  4096  006344  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4097  006346  26D9               	addwf	fsr2l,f,c
  4098  006348  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4099  00634A  22DA               	addwfc	fsr2h,f,c
  4100  00634C  006F FF78  F019    	movff	postinc2,??_CircularBufferPushBack+2
  4101  006352  006F FF74  F01A    	movff	postdec2,??_CircularBufferPushBack+3
  4102  006358  0E01               	movlw	1
  4103  00635A  2619               	addwf	(??_CircularBufferPushBack+2)^0,f,c
  4104  00635C  0E00               	movlw	0
  4105  00635E  221A               	addwfc	(??_CircularBufferPushBack+3)^0,f,c
  4106  006360  5017               	movf	??_CircularBufferPushBack^0,w,c
  4107  006362  1419               	andwf	(??_CircularBufferPushBack+2)^0,w,c
  4108  006364  6E1B               	movwf	CircularBufferPushBack@write_pos^0,c
  4109  006366  5018               	movf	(??_CircularBufferPushBack+1)^0,w,c
  4110  006368  141A               	andwf	(??_CircularBufferPushBack+3)^0,w,c
  4111  00636A  6E1C               	movwf	(CircularBufferPushBack@write_pos+1)^0,c
  4112                           
  4113                           ;app/app_src/circular buffer.c: 75:     if (write_pos == ctx->read_pos) {
  4114  00636C  EE20 F004          	lfsr	2,4
  4115  006370  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4116  006372  26D9               	addwf	fsr2l,f,c
  4117  006374  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4118  006376  22DA               	addwfc	fsr2h,f,c
  4119  006378  501B               	movf	CircularBufferPushBack@write_pos^0,w,c
  4120  00637A  18DE               	xorwf	postinc2,w,c
  4121  00637C  E107               	bnz	u15591
  4122  00637E  501C               	movf	(CircularBufferPushBack@write_pos+1)^0,w,c
  4123  006380  18DE               	xorwf	postinc2,w,c
  4124  006382  A4D8               	btfss	status,2,c
  4125  006384  EFC6  F031         	goto	u15591
  4126  006388  EFC8  F031         	goto	u15590
  4127  00638C                     u15591:
  4128  00638C  EFCA  F031         	goto	l15835
  4129  006390                     u15590:
  4130  006390  EF16  F032         	goto	l547
  4131  006394                     l15835:
  4132                           
  4133                           ;app/app_src/circular buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->element_s
      +                          ize], val,
  4134  006394  EE20 F002          	lfsr	2,2
  4135  006398  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4136  00639A  26D9               	addwf	fsr2l,f,c
  4137  00639C  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4138  00639E  22DA               	addwfc	fsr2h,f,c
  4139  0063A0  006F FF78  F002    	movff	postinc2,___wmul@multiplier
  4140  0063A6  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
  4141  0063AC  EE20 F006          	lfsr	2,6
  4142  0063B0  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4143  0063B2  26D9               	addwf	fsr2l,f,c
  4144  0063B4  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4145  0063B6  22DA               	addwfc	fsr2h,f,c
  4146  0063B8  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
  4147  0063BE  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
  4148  0063C4  EC42  F04B         	call	___wmul	;wreg free
  4149  0063C8  0060  F04F  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
  4150  0063CE  0060  F053  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
  4151  0063D4  006F FF78  F017    	movff	postinc2,??_CircularBufferPushBack
  4152  0063DA  006F FF74  F018    	movff	postdec2,??_CircularBufferPushBack+1
  4153  0063E0  5002               	movf	?___wmul^0,w,c
  4154  0063E2  2417               	addwf	??_CircularBufferPushBack^0,w,c
  4155  0063E4  6E08               	movwf	memcpy@d1^0,c
  4156  0063E6  5003               	movf	(?___wmul+1)^0,w,c
  4157  0063E8  2018               	addwfc	(??_CircularBufferPushBack+1)^0,w,c
  4158  0063EA  6E09               	movwf	(memcpy@d1+1)^0,c
  4159  0063EC  0060  F054  F00A   	movff	CircularBufferPushBack@val,memcpy@s1
  4160  0063F2  0060  F058  F00B   	movff	CircularBufferPushBack@val+1,memcpy@s1+1
  4161  0063F8  EE20 F006          	lfsr	2,6
  4162  0063FC  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4163  0063FE  26D9               	addwf	fsr2l,f,c
  4164  006400  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4165  006402  22DA               	addwfc	fsr2h,f,c
  4166  006404  006F FF78  F00C    	movff	postinc2,memcpy@n
  4167  00640A  006F FF74  F00D    	movff	postdec2,memcpy@n+1
  4168  006410  ECD7  F041         	call	_memcpy	;wreg free
  4169  006414                     
  4170                           ;app/app_src/circular buffer.c: 82:     ctx->write_pos = write_pos;
  4171  006414  EE20 F002          	lfsr	2,2
  4172  006418  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4173  00641A  26D9               	addwf	fsr2l,f,c
  4174  00641C  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4175  00641E  22DA               	addwfc	fsr2h,f,c
  4176  006420  0060  F06F  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
  4177  006426  0060  F073  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
  4178  00642C                     l547:
  4179  00642C  0012               	return		;funcret
  4180  00642E                     __end_of_CircularBufferPushBack:
  4181                           	opt callstack 0
  4182                           
  4183 ;; *************** function _executeATCommand *****************
  4184 ;; Defined at:
  4185 ;;		line 799 in file "app/app_src/application.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  cmd             2  107[BANK0 ] PTR unsigned char 
  4188 ;;		 -> atCommand(80), 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  retcode         1    0        unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      unsigned char 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;Total ram usage:        5 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:   18
  4207 ;; This function calls:
  4208 ;;		_cmdAddr
  4209 ;;		_cmdBcast
  4210 ;;		_cmdBootLoad
  4211 ;;		_cmdGetCAD
  4212 ;;		_cmdGetCADRSSI
  4213 ;;		_cmdGetMode
  4214 ;;		_cmdGetRFCH
  4215 ;;		_cmdGetRxCnt
  4216 ;;		_cmdGetSF
  4217 ;;		_cmdGetTTL
  4218 ;;		_cmdGetTX
  4219 ;;		_cmdI
  4220 ;;		_cmdMac
  4221 ;;		_cmdNaddr
  4222 ;;		_cmdRecv
  4223 ;;		_cmdReset
  4224 ;;		_cmdRstCAD
  4225 ;;		_cmdSend
  4226 ;;		_cmdSendSink
  4227 ;;		_cmdSetAES
  4228 ;;		_cmdSetAddr
  4229 ;;		_cmdSetBaud
  4230 ;;		_cmdSetCADRSSI
  4231 ;;		_cmdSetNaddr
  4232 ;;		_cmdSetParity
  4233 ;;		_cmdSetRFCH
  4234 ;;		_cmdSetSF
  4235 ;;		_cmdSetSink
  4236 ;;		_cmdSetTTL
  4237 ;;		_cmdSetTX
  4238 ;;		_print_hop_table
  4239 ;;		_printf
  4240 ;;		_set_hop_table_ttl
  4241 ;;		_strstr
  4242 ;; This function is called by:
  4243 ;;		_processATCommand
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text7
  4248  0000B2                     __ptext7:
  4249                           	opt callstack 0
  4250  0000B2                     _executeATCommand:
  4251                           	opt callstack 11
  4252  0000B2                     
  4253                           ;app/app_src/application.c: 802:     switch(*(cmd+1))
  4254  0000B2  EFC0  F003         	goto	l16881
  4255  0000B6                     l16741:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;app/app_src/application.c: 805:          if(strstr(atCommand,"+SEND:")){
  4259  0000B6  0E30               	movlw	low _atCommand
  4260  0000B8  6E0D               	movwf	strstr@h^0,c
  4261  0000BA  0E02               	movlw	high _atCommand
  4262  0000BC  6E0E               	movwf	(strstr@h+1)^0,c
  4263  0000BE  0E61               	movlw	low STR_60
  4264  0000C0  6E0F               	movwf	strstr@n^0,c
  4265  0000C2  0EFF               	movlw	high STR_60
  4266  0000C4  6E10               	movwf	(strstr@n+1)^0,c
  4267  0000C6  EC17  F032         	call	_strstr	;wreg free
  4268  0000CA  500D               	movf	?_strstr^0,w,c
  4269  0000CC  100E               	iorwf	(?_strstr+1)^0,w,c
  4270  0000CE  B4D8               	btfsc	status,2,c
  4271  0000D0  EF6C  F000         	goto	u16761
  4272  0000D4  EF6E  F000         	goto	u16760
  4273  0000D8                     u16761:
  4274  0000D8  EF78  F000         	goto	l16745
  4275  0000DC                     u16760:
  4276  0000DC                     
  4277                           ;app/app_src/application.c: 806:           cmdSend(cmd);
  4278  0000DC  0060  F32C  F07D   	movff	executeATCommand@cmd,cmdSend@cmd
  4279  0000E2  0060  F330  F07E   	movff	executeATCommand@cmd+1,cmdSend@cmd+1
  4280  0000E8  EC3B  F025         	call	_cmdSend	;wreg free
  4281                           
  4282                           ;app/app_src/application.c: 807:          }
  4283  0000EC  EF00  F004         	goto	l460
  4284  0000F0                     l16745:
  4285  0000F0  0E30               	movlw	low _atCommand
  4286  0000F2  6E0D               	movwf	strstr@h^0,c
  4287  0000F4  0E02               	movlw	high _atCommand
  4288  0000F6  6E0E               	movwf	(strstr@h+1)^0,c
  4289  0000F8  0E30               	movlw	low STR_62
  4290  0000FA  6E0F               	movwf	strstr@n^0,c
  4291  0000FC  0EFF               	movlw	high STR_62
  4292  0000FE  6E10               	movwf	(strstr@n+1)^0,c
  4293  000100  EC17  F032         	call	_strstr	;wreg free
  4294  000104  500D               	movf	?_strstr^0,w,c
  4295  000106  100E               	iorwf	(?_strstr+1)^0,w,c
  4296  000108  B4D8               	btfsc	status,2,c
  4297  00010A  EF89  F000         	goto	u16771
  4298  00010E  EF8B  F000         	goto	u16770
  4299  000112                     u16771:
  4300  000112  EF8F  F000         	goto	l16749
  4301  000116                     u16770:
  4302  000116                     
  4303                           ;app/app_src/application.c: 809:           cmdSetSink();
  4304  000116  ECF8  F04D         	call	_cmdSetSink	;wreg free
  4305                           
  4306                           ;app/app_src/application.c: 810:          }
  4307  00011A  EF00  F004         	goto	l460
  4308  00011E                     l16749:
  4309  00011E  0E30               	movlw	low _atCommand
  4310  000120  6E0D               	movwf	strstr@h^0,c
  4311  000122  0E02               	movlw	high _atCommand
  4312  000124  6E0E               	movwf	(strstr@h+1)^0,c
  4313  000126  0EA7               	movlw	low STR_64
  4314  000128  6E0F               	movwf	strstr@n^0,c
  4315  00012A  0EFF               	movlw	high STR_64
  4316  00012C  6E10               	movwf	(strstr@n+1)^0,c
  4317  00012E  EC17  F032         	call	_strstr	;wreg free
  4318  000132  500D               	movf	?_strstr^0,w,c
  4319  000134  100E               	iorwf	(?_strstr+1)^0,w,c
  4320  000136  B4D8               	btfsc	status,2,c
  4321  000138  EFA0  F000         	goto	u16781
  4322  00013C  EFA2  F000         	goto	u16780
  4323  000140                     u16781:
  4324  000140  EFAA  F000         	goto	l16753
  4325  000144                     u16780:
  4326  000144                     
  4327                           ;app/app_src/application.c: 812:           cmdSendSink(atCommand);
  4328  000144  0E30               	movlw	low _atCommand
  4329  000146  6E02               	movwf	cmdSendSink@cmd^0,c
  4330  000148  0E02               	movlw	high _atCommand
  4331  00014A  6E03               	movwf	(cmdSendSink@cmd+1)^0,c
  4332  00014C  EC8A  F04E         	call	_cmdSendSink	;wreg free
  4333                           
  4334                           ;app/app_src/application.c: 813:          }
  4335  000150  EF00  F004         	goto	l460
  4336  000154                     l16753:
  4337  000154  0E30               	movlw	low _atCommand
  4338  000156  6E0D               	movwf	strstr@h^0,c
  4339  000158  0E02               	movlw	high _atCommand
  4340  00015A  6E0E               	movwf	(strstr@h+1)^0,c
  4341  00015C  0EE6               	movlw	low STR_66
  4342  00015E  6E0F               	movwf	strstr@n^0,c
  4343  000160  0EFF               	movlw	high STR_66
  4344  000162  6E10               	movwf	(strstr@n+1)^0,c
  4345  000164  EC17  F032         	call	_strstr	;wreg free
  4346  000168  500D               	movf	?_strstr^0,w,c
  4347  00016A  100E               	iorwf	(?_strstr+1)^0,w,c
  4348  00016C  B4D8               	btfsc	status,2,c
  4349  00016E  EFBB  F000         	goto	u16791
  4350  000172  EFBD  F000         	goto	u16790
  4351  000176                     u16791:
  4352  000176  EFC1  F000         	goto	l16757
  4353  00017A                     u16790:
  4354  00017A                     
  4355                           ;app/app_src/application.c: 815:           cmdGetSF();
  4356  00017A  EC61  F04D         	call	_cmdGetSF	;wreg free
  4357                           
  4358                           ;app/app_src/application.c: 816:          }
  4359  00017E  EF00  F004         	goto	l460
  4360  000182                     l16757:
  4361  000182  0E30               	movlw	low _atCommand
  4362  000184  6E0D               	movwf	strstr@h^0,c
  4363  000186  0E02               	movlw	high _atCommand
  4364  000188  6E0E               	movwf	(strstr@h+1)^0,c
  4365  00018A  0EE1               	movlw	low STR_68
  4366  00018C  6E0F               	movwf	strstr@n^0,c
  4367  00018E  0EFF               	movlw	high STR_68
  4368  000190  6E10               	movwf	(strstr@n+1)^0,c
  4369  000192  EC17  F032         	call	_strstr	;wreg free
  4370  000196  500D               	movf	?_strstr^0,w,c
  4371  000198  100E               	iorwf	(?_strstr+1)^0,w,c
  4372  00019A  B4D8               	btfsc	status,2,c
  4373  00019C  EFD2  F000         	goto	u16801
  4374  0001A0  EFD4  F000         	goto	u16800
  4375  0001A4                     u16801:
  4376  0001A4  EFDD  F000         	goto	l16761
  4377  0001A8                     u16800:
  4378  0001A8                     
  4379                           ;app/app_src/application.c: 818:           cmdSetSF(atCommand);
  4380  0001A8  0E30               	movlw	low _atCommand
  4381  0001AA  0100               	movlb	0	; () banked
  4382  0001AC  6F7D               	movwf	cmdSetSF@atCommand& (0+255),b
  4383  0001AE  0E02               	movlw	high _atCommand
  4384  0001B0  6F7E               	movwf	(cmdSetSF@atCommand+1)& (0+255),b
  4385  0001B2  EC2E  F038         	call	_cmdSetSF	;wreg free
  4386                           
  4387                           ;app/app_src/application.c: 819:          }
  4388  0001B6  EF00  F004         	goto	l460
  4389  0001BA                     l16761:
  4390  0001BA  0E30               	movlw	low _atCommand
  4391  0001BC  6E0D               	movwf	strstr@h^0,c
  4392  0001BE  0E02               	movlw	high _atCommand
  4393  0001C0  6E0E               	movwf	(strstr@h+1)^0,c
  4394  0001C2  0ED8               	movlw	low STR_70
  4395  0001C4  6E0F               	movwf	strstr@n^0,c
  4396  0001C6  0EFE               	movlw	high STR_70
  4397  0001C8  6E10               	movwf	(strstr@n+1)^0,c
  4398  0001CA  EC17  F032         	call	_strstr	;wreg free
  4399  0001CE  500D               	movf	?_strstr^0,w,c
  4400  0001D0  100E               	iorwf	(?_strstr+1)^0,w,c
  4401  0001D2  B4D8               	btfsc	status,2,c
  4402  0001D4  EFEE  F000         	goto	u16811
  4403  0001D8  EFF0  F000         	goto	u16810
  4404  0001DC                     u16811:
  4405  0001DC  EFB3  F003         	goto	l16877
  4406  0001E0                     u16810:
  4407  0001E0                     
  4408                           ;app/app_src/application.c: 821:                 print_hop_table(atCommand);
  4409  0001E0  0E30               	movlw	low _atCommand
  4410  0001E2  0100               	movlb	0	; () banked
  4411  0001E4  6F7D               	movwf	print_hop_table@atCommand& (0+255),b
  4412  0001E6  0E02               	movlw	high _atCommand
  4413  0001E8  6F7E               	movwf	(print_hop_table@atCommand+1)& (0+255),b
  4414  0001EA  ECF0  F04D         	call	_print_hop_table	;wreg free
  4415                           
  4416                           ;app/app_src/application.c: 822:             }
  4417  0001EE  EF00  F004         	goto	l460
  4418  0001F2                     l16765:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;app/app_src/application.c: 828:          if(strstr(atCommand,"+BCAST=")){
  4422  0001F2  0E30               	movlw	low _atCommand
  4423  0001F4  6E0D               	movwf	strstr@h^0,c
  4424  0001F6  0E02               	movlw	high _atCommand
  4425  0001F8  6E0E               	movwf	(strstr@h+1)^0,c
  4426  0001FA  0E51               	movlw	low STR_72
  4427  0001FC  6E0F               	movwf	strstr@n^0,c
  4428  0001FE  0EFF               	movlw	high STR_72
  4429  000200  6E10               	movwf	(strstr@n+1)^0,c
  4430  000202  EC17  F032         	call	_strstr	;wreg free
  4431  000206  500D               	movf	?_strstr^0,w,c
  4432  000208  100E               	iorwf	(?_strstr+1)^0,w,c
  4433  00020A  B4D8               	btfsc	status,2,c
  4434  00020C  EF0A  F001         	goto	u16821
  4435  000210  EF0C  F001         	goto	u16820
  4436  000214                     u16821:
  4437  000214  EF16  F001         	goto	l16769
  4438  000218                     u16820:
  4439  000218                     
  4440                           ;app/app_src/application.c: 829:     cmdBcast(cmd);
  4441  000218  0060  F32C  F07D   	movff	executeATCommand@cmd,cmdBcast@cmd
  4442  00021E  0060  F330  F07E   	movff	executeATCommand@cmd+1,cmdBcast@cmd+1
  4443  000224  EC47  F02D         	call	_cmdBcast	;wreg free
  4444                           
  4445                           ;app/app_src/application.c: 830:    }
  4446  000228  EF00  F004         	goto	l460
  4447  00022C                     l16769:
  4448  00022C  0E30               	movlw	low _atCommand
  4449  00022E  6E0D               	movwf	strstr@h^0,c
  4450  000230  0E02               	movlw	high _atCommand
  4451  000232  6E0E               	movwf	(strstr@h+1)^0,c
  4452  000234  0E68               	movlw	low STR_74
  4453  000236  6E0F               	movwf	strstr@n^0,c
  4454  000238  0EFF               	movlw	high STR_74
  4455  00023A  6E10               	movwf	(strstr@n+1)^0,c
  4456  00023C  EC17  F032         	call	_strstr	;wreg free
  4457  000240  500D               	movf	?_strstr^0,w,c
  4458  000242  100E               	iorwf	(?_strstr+1)^0,w,c
  4459  000244  B4D8               	btfsc	status,2,c
  4460  000246  EF27  F001         	goto	u16831
  4461  00024A  EF29  F001         	goto	u16830
  4462  00024E                     u16831:
  4463  00024E  EF31  F001         	goto	l16773
  4464  000252                     u16830:
  4465  000252                     
  4466                           ;app/app_src/application.c: 832:                 cmdSetBaud(atCommand);
  4467  000252  0E30               	movlw	low _atCommand
  4468  000254  6E3A               	movwf	cmdSetBaud@atCommand^0,c
  4469  000256  0E02               	movlw	high _atCommand
  4470  000258  6E3B               	movwf	(cmdSetBaud@atCommand+1)^0,c
  4471  00025A  EC73  F043         	call	_cmdSetBaud	;wreg free
  4472                           
  4473                           ;app/app_src/application.c: 833:             }
  4474  00025E  EF00  F004         	goto	l460
  4475  000262                     l16773:
  4476  000262  0E30               	movlw	low _atCommand
  4477  000264  6E0D               	movwf	strstr@h^0,c
  4478  000266  0E02               	movlw	high _atCommand
  4479  000268  6E0E               	movwf	(strstr@h+1)^0,c
  4480  00026A  0E0B               	movlw	low STR_76
  4481  00026C  6E0F               	movwf	strstr@n^0,c
  4482  00026E  0EFF               	movlw	high STR_76
  4483  000270  6E10               	movwf	(strstr@n+1)^0,c
  4484  000272  EC17  F032         	call	_strstr	;wreg free
  4485  000276  500D               	movf	?_strstr^0,w,c
  4486  000278  100E               	iorwf	(?_strstr+1)^0,w,c
  4487  00027A  B4D8               	btfsc	status,2,c
  4488  00027C  EF42  F001         	goto	u16841
  4489  000280  EF44  F001         	goto	u16840
  4490  000284                     u16841:
  4491  000284  EFB3  F003         	goto	l16877
  4492  000288                     u16840:
  4493  000288                     
  4494                           ;app/app_src/application.c: 835:                 cmdBootLoad();
  4495  000288  EC89  F04A         	call	_cmdBootLoad	;wreg free
  4496                           
  4497                           ;app/app_src/application.c: 836:             }
  4498  00028C  EF00  F004         	goto	l460
  4499  000290                     l16777:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;app/app_src/application.c: 842:          if(strstr(atCommand,"+ADDR?")){
  4503  000290  0E30               	movlw	low _atCommand
  4504  000292  6E0D               	movwf	strstr@h^0,c
  4505  000294  0E02               	movlw	high _atCommand
  4506  000296  6E0E               	movwf	(strstr@h+1)^0,c
  4507  000298  0E92               	movlw	low STR_78
  4508  00029A  6E0F               	movwf	strstr@n^0,c
  4509  00029C  0EFF               	movlw	high STR_78
  4510  00029E  6E10               	movwf	(strstr@n+1)^0,c
  4511  0002A0  EC17  F032         	call	_strstr	;wreg free
  4512  0002A4  500D               	movf	?_strstr^0,w,c
  4513  0002A6  100E               	iorwf	(?_strstr+1)^0,w,c
  4514  0002A8  B4D8               	btfsc	status,2,c
  4515  0002AA  EF59  F001         	goto	u16851
  4516  0002AE  EF5B  F001         	goto	u16850
  4517  0002B2                     u16851:
  4518  0002B2  EF5F  F001         	goto	l16781
  4519  0002B6                     u16850:
  4520  0002B6                     
  4521                           ;app/app_src/application.c: 843:           cmdAddr();
  4522  0002B6  EC9D  F04C         	call	_cmdAddr	;wreg free
  4523                           
  4524                           ;app/app_src/application.c: 844:          }
  4525  0002BA  EF00  F004         	goto	l460
  4526  0002BE                     l16781:
  4527  0002BE  0E30               	movlw	low _atCommand
  4528  0002C0  6E0D               	movwf	strstr@h^0,c
  4529  0002C2  0E02               	movlw	high _atCommand
  4530  0002C4  6E0E               	movwf	(strstr@h+1)^0,c
  4531  0002C6  0E76               	movlw	low STR_80
  4532  0002C8  6E0F               	movwf	strstr@n^0,c
  4533  0002CA  0EFF               	movlw	high STR_80
  4534  0002CC  6E10               	movwf	(strstr@n+1)^0,c
  4535  0002CE  EC17  F032         	call	_strstr	;wreg free
  4536  0002D2  500D               	movf	?_strstr^0,w,c
  4537  0002D4  100E               	iorwf	(?_strstr+1)^0,w,c
  4538  0002D6  B4D8               	btfsc	status,2,c
  4539  0002D8  EF70  F001         	goto	u16861
  4540  0002DC  EF72  F001         	goto	u16860
  4541  0002E0                     u16861:
  4542  0002E0  EF7B  F001         	goto	l16785
  4543  0002E4                     u16860:
  4544  0002E4                     
  4545                           ;app/app_src/application.c: 846:     cmdSetAddr(atCommand);
  4546  0002E4  0E30               	movlw	low _atCommand
  4547  0002E6  0100               	movlb	0	; () banked
  4548  0002E8  6F7D               	movwf	cmdSetAddr@cmd& (0+255),b
  4549  0002EA  0E02               	movlw	high _atCommand
  4550  0002EC  6F7E               	movwf	(cmdSetAddr@cmd+1)& (0+255),b
  4551  0002EE  ECB6  F03D         	call	_cmdSetAddr	;wreg free
  4552                           
  4553                           ;app/app_src/application.c: 847:    }
  4554  0002F2  EF00  F004         	goto	l460
  4555  0002F6                     l16785:
  4556  0002F6  0E30               	movlw	low _atCommand
  4557  0002F8  6E0D               	movwf	strstr@h^0,c
  4558  0002FA  0E02               	movlw	high _atCommand
  4559  0002FC  6E0E               	movwf	(strstr@h+1)^0,c
  4560  0002FE  0E15               	movlw	low STR_82
  4561  000300  6E0F               	movwf	strstr@n^0,c
  4562  000302  0EFF               	movlw	high STR_82
  4563  000304  6E10               	movwf	(strstr@n+1)^0,c
  4564  000306  EC17  F032         	call	_strstr	;wreg free
  4565  00030A  500D               	movf	?_strstr^0,w,c
  4566  00030C  100E               	iorwf	(?_strstr+1)^0,w,c
  4567  00030E  B4D8               	btfsc	status,2,c
  4568  000310  EF8C  F001         	goto	u16871
  4569  000314  EF8E  F001         	goto	u16870
  4570  000318                     u16871:
  4571  000318  EFB3  F003         	goto	l16877
  4572  00031C                     u16870:
  4573  00031C                     
  4574                           ;app/app_src/application.c: 849:           cmdSetAES(atCommand);
  4575  00031C  0E30               	movlw	low _atCommand
  4576  00031E  0100               	movlb	0	; () banked
  4577  000320  6F7D               	movwf	cmdSetAES@cmd& (0+255),b
  4578  000322  0E02               	movlw	high _atCommand
  4579  000324  6F7E               	movwf	(cmdSetAES@cmd+1)& (0+255),b
  4580  000326  EC18  F01A         	call	_cmdSetAES	;wreg free
  4581                           
  4582                           ;app/app_src/application.c: 850:          }
  4583  00032A  EF00  F004         	goto	l460
  4584  00032E                     l16789:
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;app/app_src/application.c: 856:          if(strstr(atCommand,"+CADCOUNTER?")){
  4588  00032E  0E30               	movlw	low _atCommand
  4589  000330  6E0D               	movwf	strstr@h^0,c
  4590  000332  0E02               	movlw	high _atCommand
  4591  000334  6E0E               	movwf	(strstr@h+1)^0,c
  4592  000336  0EA7               	movlw	low STR_84
  4593  000338  6E0F               	movwf	strstr@n^0,c
  4594  00033A  0EFE               	movlw	high STR_84
  4595  00033C  6E10               	movwf	(strstr@n+1)^0,c
  4596  00033E  EC17  F032         	call	_strstr	;wreg free
  4597  000342  500D               	movf	?_strstr^0,w,c
  4598  000344  100E               	iorwf	(?_strstr+1)^0,w,c
  4599  000346  B4D8               	btfsc	status,2,c
  4600  000348  EFA8  F001         	goto	u16881
  4601  00034C  EFAA  F001         	goto	u16880
  4602  000350                     u16881:
  4603  000350  EFAE  F001         	goto	l16793
  4604  000354                     u16880:
  4605  000354                     
  4606                           ;app/app_src/application.c: 857:           cmdGetCAD();
  4607  000354  EC6D  F04D         	call	_cmdGetCAD	;wreg free
  4608                           
  4609                           ;app/app_src/application.c: 858:          }
  4610  000358  EF00  F004         	goto	l460
  4611  00035C                     l16793:
  4612  00035C  0E30               	movlw	low _atCommand
  4613  00035E  6E0D               	movwf	strstr@h^0,c
  4614  000360  0E02               	movlw	high _atCommand
  4615  000362  6E0E               	movwf	(strstr@h+1)^0,c
  4616  000364  0E56               	movlw	low STR_86
  4617  000366  6E0F               	movwf	strstr@n^0,c
  4618  000368  0EFE               	movlw	high STR_86
  4619  00036A  6E10               	movwf	(strstr@n+1)^0,c
  4620  00036C  EC17  F032         	call	_strstr	;wreg free
  4621  000370  500D               	movf	?_strstr^0,w,c
  4622  000372  100E               	iorwf	(?_strstr+1)^0,w,c
  4623  000374  B4D8               	btfsc	status,2,c
  4624  000376  EFBF  F001         	goto	u16891
  4625  00037A  EFC1  F001         	goto	u16890
  4626  00037E                     u16891:
  4627  00037E  EFC5  F001         	goto	l16797
  4628  000382                     u16890:
  4629  000382                     
  4630                           ;app/app_src/application.c: 860:           cmdRstCAD();
  4631  000382  ECC1  F04D         	call	_cmdRstCAD	;wreg free
  4632                           
  4633                           ;app/app_src/application.c: 861:          }
  4634  000386  EF00  F004         	goto	l460
  4635  00038A                     l16797:
  4636  00038A  0E30               	movlw	low _atCommand
  4637  00038C  6E0D               	movwf	strstr@h^0,c
  4638  00038E  0E02               	movlw	high _atCommand
  4639  000390  6E0E               	movwf	(strstr@h+1)^0,c
  4640  000392  0EF7               	movlw	low STR_88
  4641  000394  6E0F               	movwf	strstr@n^0,c
  4642  000396  0EFE               	movlw	high STR_88
  4643  000398  6E10               	movwf	(strstr@n+1)^0,c
  4644  00039A  EC17  F032         	call	_strstr	;wreg free
  4645  00039E  500D               	movf	?_strstr^0,w,c
  4646  0003A0  100E               	iorwf	(?_strstr+1)^0,w,c
  4647  0003A2  B4D8               	btfsc	status,2,c
  4648  0003A4  EFD6  F001         	goto	u16901
  4649  0003A8  EFD8  F001         	goto	u16900
  4650  0003AC                     u16901:
  4651  0003AC  EFDC  F001         	goto	l16801
  4652  0003B0                     u16900:
  4653  0003B0                     
  4654                           ;app/app_src/application.c: 863:           cmdGetCADRSSI();
  4655  0003B0  EC08  F04D         	call	_cmdGetCADRSSI	;wreg free
  4656                           
  4657                           ;app/app_src/application.c: 864:          }
  4658  0003B4  EF00  F004         	goto	l460
  4659  0003B8                     l16801:
  4660  0003B8  0E30               	movlw	low _atCommand
  4661  0003BA  6E0D               	movwf	strstr@h^0,c
  4662  0003BC  0E02               	movlw	high _atCommand
  4663  0003BE  6E0E               	movwf	(strstr@h+1)^0,c
  4664  0003C0  0EE3               	movlw	low STR_90
  4665  0003C2  6E0F               	movwf	strstr@n^0,c
  4666  0003C4  0EFE               	movlw	high STR_90
  4667  0003C6  6E10               	movwf	(strstr@n+1)^0,c
  4668  0003C8  EC17  F032         	call	_strstr	;wreg free
  4669  0003CC  500D               	movf	?_strstr^0,w,c
  4670  0003CE  100E               	iorwf	(?_strstr+1)^0,w,c
  4671  0003D0  B4D8               	btfsc	status,2,c
  4672  0003D2  EFED  F001         	goto	u16911
  4673  0003D6  EFEF  F001         	goto	u16910
  4674  0003DA                     u16911:
  4675  0003DA  EFB3  F003         	goto	l16877
  4676  0003DE                     u16910:
  4677  0003DE                     
  4678                           ;app/app_src/application.c: 866:           cmdSetCADRSSI(atCommand);
  4679  0003DE  0E30               	movlw	low _atCommand
  4680  0003E0  0100               	movlb	0	; () banked
  4681  0003E2  6F7D               	movwf	cmdSetCADRSSI@atCommand& (0+255),b
  4682  0003E4  0E02               	movlw	high _atCommand
  4683  0003E6  6F7E               	movwf	(cmdSetCADRSSI@atCommand+1)& (0+255),b
  4684  0003E8  EC96  F038         	call	_cmdSetCADRSSI	;wreg free
  4685                           
  4686                           ;app/app_src/application.c: 867:          }
  4687  0003EC  EF00  F004         	goto	l460
  4688  0003F0                     l16805:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;app/app_src/application.c: 873:             if(strstr(atCommand,"+HOPS?")){
  4692  0003F0  0E30               	movlw	low _atCommand
  4693  0003F2  6E0D               	movwf	strstr@h^0,c
  4694  0003F4  0E02               	movlw	high _atCommand
  4695  0003F6  6E0E               	movwf	(strstr@h+1)^0,c
  4696  0003F8  0E99               	movlw	low STR_92
  4697  0003FA  6E0F               	movwf	strstr@n^0,c
  4698  0003FC  0EFF               	movlw	high STR_92
  4699  0003FE  6E10               	movwf	(strstr@n+1)^0,c
  4700  000400  EC17  F032         	call	_strstr	;wreg free
  4701  000404  500D               	movf	?_strstr^0,w,c
  4702  000406  100E               	iorwf	(?_strstr+1)^0,w,c
  4703  000408  B4D8               	btfsc	status,2,c
  4704  00040A  EF09  F002         	goto	u16921
  4705  00040E  EF0B  F002         	goto	u16920
  4706  000412                     u16921:
  4707  000412  EF0F  F002         	goto	l16809
  4708  000416                     u16920:
  4709  000416                     l16807:
  4710                           
  4711                           ;app/app_src/application.c: 874:                 cmdGetTTL();
  4712  000416  EC8C  F04E         	call	_cmdGetTTL	;wreg free
  4713                           
  4714                           ;app/app_src/application.c: 875:             }
  4715  00041A  EF00  F004         	goto	l460
  4716  00041E                     l16809:
  4717  00041E  0E30               	movlw	low _atCommand
  4718  000420  6E0D               	movwf	strstr@h^0,c
  4719  000422  0E02               	movlw	high _atCommand
  4720  000424  6E0E               	movwf	(strstr@h+1)^0,c
  4721  000426  0E7D               	movlw	low STR_94
  4722  000428  6E0F               	movwf	strstr@n^0,c
  4723  00042A  0EFF               	movlw	high STR_94
  4724  00042C  6E10               	movwf	(strstr@n+1)^0,c
  4725  00042E  EC17  F032         	call	_strstr	;wreg free
  4726  000432  500D               	movf	?_strstr^0,w,c
  4727  000434  100E               	iorwf	(?_strstr+1)^0,w,c
  4728  000436  B4D8               	btfsc	status,2,c
  4729  000438  EF20  F002         	goto	u16931
  4730  00043C  EF22  F002         	goto	u16930
  4731  000440                     u16931:
  4732  000440  EF2A  F002         	goto	l16813
  4733  000444                     u16930:
  4734  000444                     l16811:
  4735                           
  4736                           ;app/app_src/application.c: 877:                 cmdSetTTL(atCommand);
  4737  000444  0E30               	movlw	low _atCommand
  4738  000446  6E02               	movwf	cmdSetTTL@cmd^0,c
  4739  000448  0E02               	movlw	high _atCommand
  4740  00044A  6E03               	movwf	(cmdSetTTL@cmd+1)^0,c
  4741  00044C  EC89  F04E         	call	_cmdSetTTL	;wreg free
  4742                           
  4743                           ;app/app_src/application.c: 878:             }
  4744  000450  EF00  F004         	goto	l460
  4745  000454                     l16813:
  4746  000454  0E30               	movlw	low _atCommand
  4747  000456  6E0D               	movwf	strstr@h^0,c
  4748  000458  0E02               	movlw	high _atCommand
  4749  00045A  6E0E               	movwf	(strstr@h+1)^0,c
  4750  00045C  0E1E               	movlw	low STR_96
  4751  00045E  6E0F               	movwf	strstr@n^0,c
  4752  000460  0EFF               	movlw	high STR_96
  4753  000462  6E10               	movwf	(strstr@n+1)^0,c
  4754  000464  EC17  F032         	call	_strstr	;wreg free
  4755  000468  500D               	movf	?_strstr^0,w,c
  4756  00046A  100E               	iorwf	(?_strstr+1)^0,w,c
  4757  00046C  B4D8               	btfsc	status,2,c
  4758  00046E  EF3B  F002         	goto	u16941
  4759  000472  EF3D  F002         	goto	u16940
  4760  000476                     u16941:
  4761  000476  EFB3  F003         	goto	l16877
  4762  00047A                     u16940:
  4763  00047A                     
  4764                           ;app/app_src/application.c: 880:                 set_hop_table_ttl(atCommand);
  4765  00047A  0E30               	movlw	low _atCommand
  4766  00047C  0100               	movlb	0	; () banked
  4767  00047E  6F7D               	movwf	set_hop_table_ttl@cmd& (0+255),b
  4768  000480  0E02               	movlw	high _atCommand
  4769  000482  6F7E               	movwf	(set_hop_table_ttl@cmd+1)& (0+255),b
  4770  000484  ECE8  F04D         	call	_set_hop_table_ttl	;wreg free
  4771                           
  4772                           ;app/app_src/application.c: 881:             }
  4773  000488  EF00  F004         	goto	l460
  4774  00048C                     l16817:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;app/app_src/application.c: 887:             if(strstr(cmd,"+I")){
  4778  00048C  0060  F32C  F00D   	movff	executeATCommand@cmd,strstr@h
  4779  000492  0060  F330  F00E   	movff	executeATCommand@cmd+1,strstr@h+1
  4780  000498  0EFA               	movlw	low STR_98
  4781  00049A  6E0F               	movwf	strstr@n^0,c
  4782  00049C  0EFF               	movlw	high STR_98
  4783  00049E  6E10               	movwf	(strstr@n+1)^0,c
  4784  0004A0  EC17  F032         	call	_strstr	;wreg free
  4785  0004A4  500D               	movf	?_strstr^0,w,c
  4786  0004A6  100E               	iorwf	(?_strstr+1)^0,w,c
  4787  0004A8  B4D8               	btfsc	status,2,c
  4788  0004AA  EF59  F002         	goto	u16951
  4789  0004AE  EF5B  F002         	goto	u16950
  4790  0004B2                     u16951:
  4791  0004B2  EFB3  F003         	goto	l16877
  4792  0004B6                     u16950:
  4793  0004B6                     
  4794                           ;app/app_src/application.c: 888:                 cmdI();
  4795  0004B6  EC7B  F04E         	call	_cmdI	;wreg free
  4796                           
  4797                           ;app/app_src/application.c: 889:             }
  4798  0004BA  EF00  F004         	goto	l460
  4799  0004BE                     l16821:
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;app/app_src/application.c: 895:          if(strstr(atCommand,"+MAC?")){
  4803  0004BE  0E30               	movlw	low _atCommand
  4804  0004C0  6E0D               	movwf	strstr@h^0,c
  4805  0004C2  0E02               	movlw	high _atCommand
  4806  0004C4  6E0E               	movwf	(strstr@h+1)^0,c
  4807  0004C6  0EB4               	movlw	low STR_100
  4808  0004C8  6E0F               	movwf	strstr@n^0,c
  4809  0004CA  0EFF               	movlw	high STR_100
  4810  0004CC  6E10               	movwf	(strstr@n+1)^0,c
  4811  0004CE  EC17  F032         	call	_strstr	;wreg free
  4812  0004D2  500D               	movf	?_strstr^0,w,c
  4813  0004D4  100E               	iorwf	(?_strstr+1)^0,w,c
  4814  0004D6  B4D8               	btfsc	status,2,c
  4815  0004D8  EF70  F002         	goto	u16961
  4816  0004DC  EF72  F002         	goto	u16960
  4817  0004E0                     u16961:
  4818  0004E0  EF76  F002         	goto	l16825
  4819  0004E4                     u16960:
  4820  0004E4                     
  4821                           ;app/app_src/application.c: 896:           cmdMac();
  4822  0004E4  ECEC  F045         	call	_cmdMac	;wreg free
  4823                           
  4824                           ;app/app_src/application.c: 897:          }
  4825  0004E8  EF00  F004         	goto	l460
  4826  0004EC                     l16825:
  4827  0004EC  0E30               	movlw	low _atCommand
  4828  0004EE  6E0D               	movwf	strstr@h^0,c
  4829  0004F0  0E02               	movlw	high _atCommand
  4830  0004F2  6E0E               	movwf	(strstr@h+1)^0,c
  4831  0004F4  0E84               	movlw	low STR_102
  4832  0004F6  6E0F               	movwf	strstr@n^0,c
  4833  0004F8  0EFF               	movlw	high STR_102
  4834  0004FA  6E10               	movwf	(strstr@n+1)^0,c
  4835  0004FC  EC17  F032         	call	_strstr	;wreg free
  4836  000500  500D               	movf	?_strstr^0,w,c
  4837  000502  100E               	iorwf	(?_strstr+1)^0,w,c
  4838  000504  B4D8               	btfsc	status,2,c
  4839  000506  EF87  F002         	goto	u16971
  4840  00050A  EF89  F002         	goto	u16970
  4841  00050E                     u16971:
  4842  00050E  EFB3  F003         	goto	l16877
  4843  000512                     u16970:
  4844  000512                     
  4845                           ;app/app_src/application.c: 899:           cmdGetMode();
  4846  000512  EC08  F04E         	call	_cmdGetMode	;wreg free
  4847                           
  4848                           ;app/app_src/application.c: 900:          }
  4849  000516  EF00  F004         	goto	l460
  4850  00051A                     l16829:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;app/app_src/application.c: 906:          if(strstr(atCommand,"+NADDR?")){
  4854  00051A  0E30               	movlw	low _atCommand
  4855  00051C  6E0D               	movwf	strstr@h^0,c
  4856  00051E  0E02               	movlw	high _atCommand
  4857  000520  6E0E               	movwf	(strstr@h+1)^0,c
  4858  000522  0E59               	movlw	low STR_104
  4859  000524  6E0F               	movwf	strstr@n^0,c
  4860  000526  0EFF               	movlw	high STR_104
  4861  000528  6E10               	movwf	(strstr@n+1)^0,c
  4862  00052A  EC17  F032         	call	_strstr	;wreg free
  4863  00052E  500D               	movf	?_strstr^0,w,c
  4864  000530  100E               	iorwf	(?_strstr+1)^0,w,c
  4865  000532  B4D8               	btfsc	status,2,c
  4866  000534  EF9E  F002         	goto	u16981
  4867  000538  EFA0  F002         	goto	u16980
  4868  00053C                     u16981:
  4869  00053C  EFA4  F002         	goto	l16833
  4870  000540                     u16980:
  4871  000540                     
  4872                           ;app/app_src/application.c: 907:     cmdNaddr();
  4873  000540  EC49  F04D         	call	_cmdNaddr	;wreg free
  4874                           
  4875                           ;app/app_src/application.c: 908:    }
  4876  000544  EF00  F004         	goto	l460
  4877  000548                     l16833:
  4878  000548  0E30               	movlw	low _atCommand
  4879  00054A  6E0D               	movwf	strstr@h^0,c
  4880  00054C  0E02               	movlw	high _atCommand
  4881  00054E  6E0E               	movwf	(strstr@h+1)^0,c
  4882  000550  0E49               	movlw	low STR_106
  4883  000552  6E0F               	movwf	strstr@n^0,c
  4884  000554  0EFF               	movlw	high STR_106
  4885  000556  6E10               	movwf	(strstr@n+1)^0,c
  4886  000558  EC17  F032         	call	_strstr	;wreg free
  4887  00055C  500D               	movf	?_strstr^0,w,c
  4888  00055E  100E               	iorwf	(?_strstr+1)^0,w,c
  4889  000560  B4D8               	btfsc	status,2,c
  4890  000562  EFB5  F002         	goto	u16991
  4891  000566  EFB7  F002         	goto	u16990
  4892  00056A                     u16991:
  4893  00056A  EFB3  F003         	goto	l16877
  4894  00056E                     u16990:
  4895  00056E                     
  4896                           ;app/app_src/application.c: 910:     cmdSetNaddr(atCommand);
  4897  00056E  0E30               	movlw	low _atCommand
  4898  000570  0100               	movlb	0	; () banked
  4899  000572  6F7D               	movwf	cmdSetNaddr@cmd& (0+255),b
  4900  000574  0E02               	movlw	high _atCommand
  4901  000576  6F7E               	movwf	(cmdSetNaddr@cmd+1)& (0+255),b
  4902  000578  EC98  F041         	call	_cmdSetNaddr	;wreg free
  4903                           
  4904                           ;app/app_src/application.c: 911:    }
  4905  00057C  EF00  F004         	goto	l460
  4906  000580                     l16837:
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;app/app_src/application.c: 917:             if(strstr(atCommand,"+PARITY=")){
  4910  000580  0E30               	movlw	low _atCommand
  4911  000582  6E0D               	movwf	strstr@h^0,c
  4912  000584  0E02               	movlw	high _atCommand
  4913  000586  6E0E               	movwf	(strstr@h+1)^0,c
  4914  000588  0E27               	movlw	low STR_108
  4915  00058A  6E0F               	movwf	strstr@n^0,c
  4916  00058C  0EFF               	movlw	high STR_108
  4917  00058E  6E10               	movwf	(strstr@n+1)^0,c
  4918  000590  EC17  F032         	call	_strstr	;wreg free
  4919  000594  500D               	movf	?_strstr^0,w,c
  4920  000596  100E               	iorwf	(?_strstr+1)^0,w,c
  4921  000598  B4D8               	btfsc	status,2,c
  4922  00059A  EFD1  F002         	goto	u17001
  4923  00059E  EFD3  F002         	goto	u17000
  4924  0005A2                     u17001:
  4925  0005A2  EFB3  F003         	goto	l16877
  4926  0005A6                     u17000:
  4927  0005A6                     
  4928                           ;app/app_src/application.c: 918:                 cmdSetParity(atCommand);
  4929  0005A6  0E30               	movlw	low _atCommand
  4930  0005A8  0100               	movlb	0	; () banked
  4931  0005AA  6F7D               	movwf	cmdSetParity@atCommand& (0+255),b
  4932  0005AC  0E02               	movlw	high _atCommand
  4933  0005AE  6F7E               	movwf	(cmdSetParity@atCommand+1)& (0+255),b
  4934  0005B0  EC5B  F03C         	call	_cmdSetParity	;wreg free
  4935  0005B4                     l16841:
  4936                           
  4937                           ;app/app_src/application.c: 924:          if(strstr(atCommand,"+RECV")){
  4938  0005B4  0E30               	movlw	low _atCommand
  4939  0005B6  6E0D               	movwf	strstr@h^0,c
  4940  0005B8  0E02               	movlw	high _atCommand
  4941  0005BA  6E0E               	movwf	(strstr@h+1)^0,c
  4942  0005BC  0ECC               	movlw	low STR_110
  4943  0005BE  6E0F               	movwf	strstr@n^0,c
  4944  0005C0  0EFF               	movlw	high STR_110
  4945  0005C2  6E10               	movwf	(strstr@n+1)^0,c
  4946  0005C4  EC17  F032         	call	_strstr	;wreg free
  4947  0005C8  500D               	movf	?_strstr^0,w,c
  4948  0005CA  100E               	iorwf	(?_strstr+1)^0,w,c
  4949  0005CC  B4D8               	btfsc	status,2,c
  4950  0005CE  EFEB  F002         	goto	u17011
  4951  0005D2  EFED  F002         	goto	u17010
  4952  0005D6                     u17011:
  4953  0005D6  EFF1  F002         	goto	l16845
  4954  0005DA                     u17010:
  4955  0005DA                     
  4956                           ;app/app_src/application.c: 925:           cmdRecv();
  4957  0005DA  EC8B  F04E         	call	_cmdRecv	;wreg free
  4958                           
  4959                           ;app/app_src/application.c: 926:          }
  4960  0005DE  EF00  F004         	goto	l460
  4961  0005E2                     l16845:
  4962  0005E2  0E30               	movlw	low _atCommand
  4963  0005E4  6E0D               	movwf	strstr@h^0,c
  4964  0005E6  0E02               	movlw	high _atCommand
  4965  0005E8  6E0E               	movwf	(strstr@h+1)^0,c
  4966  0005EA  0E8B               	movlw	low STR_112
  4967  0005EC  6E0F               	movwf	strstr@n^0,c
  4968  0005EE  0EFF               	movlw	high STR_112
  4969  0005F0  6E10               	movwf	(strstr@n+1)^0,c
  4970  0005F2  EC17  F032         	call	_strstr	;wreg free
  4971  0005F6  500D               	movf	?_strstr^0,w,c
  4972  0005F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4973  0005FA  B4D8               	btfsc	status,2,c
  4974  0005FC  EF02  F003         	goto	u17021
  4975  000600  EF04  F003         	goto	u17020
  4976  000604                     u17021:
  4977  000604  EF08  F003         	goto	l16849
  4978  000608                     u17020:
  4979  000608                     
  4980                           ;app/app_src/application.c: 928:           cmdGetRFCH();
  4981  000608  ECFA  F04C         	call	_cmdGetRFCH	;wreg free
  4982                           
  4983                           ;app/app_src/application.c: 929:          }
  4984  00060C  EF00  F004         	goto	l460
  4985  000610                     l16849:
  4986  000610  0E30               	movlw	low _atCommand
  4987  000612  6E0D               	movwf	strstr@h^0,c
  4988  000614  0E02               	movlw	high _atCommand
  4989  000616  6E0E               	movwf	(strstr@h+1)^0,c
  4990  000618  0E6F               	movlw	low STR_114
  4991  00061A  6E0F               	movwf	strstr@n^0,c
  4992  00061C  0EFF               	movlw	high STR_114
  4993  00061E  6E10               	movwf	(strstr@n+1)^0,c
  4994  000620  EC17  F032         	call	_strstr	;wreg free
  4995  000624  500D               	movf	?_strstr^0,w,c
  4996  000626  100E               	iorwf	(?_strstr+1)^0,w,c
  4997  000628  B4D8               	btfsc	status,2,c
  4998  00062A  EF19  F003         	goto	u17031
  4999  00062E  EF1B  F003         	goto	u17030
  5000  000632                     u17031:
  5001  000632  EF24  F003         	goto	l16853
  5002  000636                     u17030:
  5003  000636                     
  5004                           ;app/app_src/application.c: 931:           cmdSetRFCH(atCommand);
  5005  000636  0E30               	movlw	low _atCommand
  5006  000638  0100               	movlb	0	; () banked
  5007  00063A  6F7D               	movwf	cmdSetRFCH@cmd& (0+255),b
  5008  00063C  0E02               	movlw	high _atCommand
  5009  00063E  6F7E               	movwf	(cmdSetRFCH@cmd+1)& (0+255),b
  5010  000640  EC01  F03C         	call	_cmdSetRFCH	;wreg free
  5011                           
  5012                           ;app/app_src/application.c: 932:          }
  5013  000644  EF00  F004         	goto	l460
  5014  000648                     l16853:
  5015  000648  0E30               	movlw	low _atCommand
  5016  00064A  6E0D               	movwf	strstr@h^0,c
  5017  00064C  0E02               	movlw	high _atCommand
  5018  00064E  6E0E               	movwf	(strstr@h+1)^0,c
  5019  000650  0EF0               	movlw	low STR_116
  5020  000652  6E0F               	movwf	strstr@n^0,c
  5021  000654  0EFF               	movlw	high STR_116
  5022  000656  6E10               	movwf	(strstr@n+1)^0,c
  5023  000658  EC17  F032         	call	_strstr	;wreg free
  5024  00065C  500D               	movf	?_strstr^0,w,c
  5025  00065E  100E               	iorwf	(?_strstr+1)^0,w,c
  5026  000660  B4D8               	btfsc	status,2,c
  5027  000662  EF35  F003         	goto	u17041
  5028  000666  EF37  F003         	goto	u17040
  5029  00066A                     u17041:
  5030  00066A  EF3B  F003         	goto	l16857
  5031  00066E                     u17040:
  5032  00066E                     
  5033                           ;app/app_src/application.c: 934:           cmdReset();
  5034  00066E  EC73  F04E         	call	_cmdReset	;wreg free
  5035                           
  5036                           ;app/app_src/application.c: 935:          }
  5037  000672  EF00  F004         	goto	l460
  5038  000676                     l16857:
  5039  000676  0E30               	movlw	low _atCommand
  5040  000678  6E0D               	movwf	strstr@h^0,c
  5041  00067A  0E02               	movlw	high _atCommand
  5042  00067C  6E0E               	movwf	(strstr@h+1)^0,c
  5043  00067E  0EA0               	movlw	low STR_118
  5044  000680  6E0F               	movwf	strstr@n^0,c
  5045  000682  0EFF               	movlw	high STR_118
  5046  000684  6E10               	movwf	(strstr@n+1)^0,c
  5047  000686  EC17  F032         	call	_strstr	;wreg free
  5048  00068A  500D               	movf	?_strstr^0,w,c
  5049  00068C  100E               	iorwf	(?_strstr+1)^0,w,c
  5050  00068E  B4D8               	btfsc	status,2,c
  5051  000690  EF4C  F003         	goto	u17051
  5052  000694  EF4E  F003         	goto	u17050
  5053  000698                     u17051:
  5054  000698  EFB3  F003         	goto	l16877
  5055  00069C                     u17050:
  5056  00069C                     
  5057                           ;app/app_src/application.c: 937:           cmdGetRxCnt(atCommand);
  5058  00069C  0E30               	movlw	low _atCommand
  5059  00069E  6E02               	movwf	cmdGetRxCnt@atCommand^0,c
  5060  0006A0  0E02               	movlw	high _atCommand
  5061  0006A2  6E03               	movwf	(cmdGetRxCnt@atCommand+1)^0,c
  5062  0006A4  EC8D  F04E         	call	_cmdGetRxCnt	;wreg free
  5063                           
  5064                           ;app/app_src/application.c: 938:          }
  5065  0006A8  EF00  F004         	goto	l460
  5066  0006AC                     l16861:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;app/app_src/application.c: 944:          if(strstr(atCommand,"+TTL?")){
  5070  0006AC  0E30               	movlw	low _atCommand
  5071  0006AE  6E0D               	movwf	strstr@h^0,c
  5072  0006B0  0E02               	movlw	high _atCommand
  5073  0006B2  6E0E               	movwf	(strstr@h+1)^0,c
  5074  0006B4  0EBA               	movlw	low STR_120
  5075  0006B6  6E0F               	movwf	strstr@n^0,c
  5076  0006B8  0EFF               	movlw	high STR_120
  5077  0006BA  6E10               	movwf	(strstr@n+1)^0,c
  5078  0006BC  EC17  F032         	call	_strstr	;wreg free
  5079  0006C0  500D               	movf	?_strstr^0,w,c
  5080  0006C2  100E               	iorwf	(?_strstr+1)^0,w,c
  5081  0006C4  B4D8               	btfsc	status,2,c
  5082  0006C6  EF67  F003         	goto	u17061
  5083  0006CA  EF69  F003         	goto	u17060
  5084  0006CE                     u17061:
  5085  0006CE  EF6B  F003         	goto	l16865
  5086  0006D2                     u17060:
  5087  0006D2  EF0B  F002         	goto	l16807
  5088  0006D6                     l16865:
  5089  0006D6  0E30               	movlw	low _atCommand
  5090  0006D8  6E0D               	movwf	strstr@h^0,c
  5091  0006DA  0E02               	movlw	high _atCommand
  5092  0006DC  6E0E               	movwf	(strstr@h+1)^0,c
  5093  0006DE  0EAE               	movlw	low STR_122
  5094  0006E0  6E0F               	movwf	strstr@n^0,c
  5095  0006E2  0EFF               	movlw	high STR_122
  5096  0006E4  6E10               	movwf	(strstr@n+1)^0,c
  5097  0006E6  EC17  F032         	call	_strstr	;wreg free
  5098  0006EA  500D               	movf	?_strstr^0,w,c
  5099  0006EC  100E               	iorwf	(?_strstr+1)^0,w,c
  5100  0006EE  B4D8               	btfsc	status,2,c
  5101  0006F0  EF7C  F003         	goto	u17071
  5102  0006F4  EF7E  F003         	goto	u17070
  5103  0006F8                     u17071:
  5104  0006F8  EF80  F003         	goto	l16869
  5105  0006FC                     u17070:
  5106  0006FC  EF22  F002         	goto	l16811
  5107  000700                     l16869:
  5108  000700  0E30               	movlw	low _atCommand
  5109  000702  6E0D               	movwf	strstr@h^0,c
  5110  000704  0E02               	movlw	high _atCommand
  5111  000706  6E0E               	movwf	(strstr@h+1)^0,c
  5112  000708  0E01               	movlw	low STR_124
  5113  00070A  6E0F               	movwf	strstr@n^0,c
  5114  00070C  0EFF               	movlw	high STR_124
  5115  00070E  6E10               	movwf	(strstr@n+1)^0,c
  5116  000710  EC17  F032         	call	_strstr	;wreg free
  5117  000714  500D               	movf	?_strstr^0,w,c
  5118  000716  100E               	iorwf	(?_strstr+1)^0,w,c
  5119  000718  B4D8               	btfsc	status,2,c
  5120  00071A  EF91  F003         	goto	u17081
  5121  00071E  EF93  F003         	goto	u17080
  5122  000722                     u17081:
  5123  000722  EF97  F003         	goto	l16873
  5124  000726                     u17080:
  5125  000726                     
  5126                           ;app/app_src/application.c: 951:           cmdGetTX();
  5127  000726  EC55  F04D         	call	_cmdGetTX	;wreg free
  5128                           
  5129                           ;app/app_src/application.c: 952:          }
  5130  00072A  EF00  F004         	goto	l460
  5131  00072E                     l16873:
  5132  00072E  0E30               	movlw	low _atCommand
  5133  000730  6E0D               	movwf	strstr@h^0,c
  5134  000732  0E02               	movlw	high _atCommand
  5135  000734  6E0E               	movwf	(strstr@h+1)^0,c
  5136  000736  0EED               	movlw	low STR_126
  5137  000738  6E0F               	movwf	strstr@n^0,c
  5138  00073A  0EFE               	movlw	high STR_126
  5139  00073C  6E10               	movwf	(strstr@n+1)^0,c
  5140  00073E  EC17  F032         	call	_strstr	;wreg free
  5141  000742  500D               	movf	?_strstr^0,w,c
  5142  000744  100E               	iorwf	(?_strstr+1)^0,w,c
  5143  000746  B4D8               	btfsc	status,2,c
  5144  000748  EFA8  F003         	goto	u17091
  5145  00074C  EFAA  F003         	goto	u17090
  5146  000750                     u17091:
  5147  000750  EFB3  F003         	goto	l16877
  5148  000754                     u17090:
  5149  000754                     
  5150                           ;app/app_src/application.c: 954:           cmdSetTX(atCommand);
  5151  000754  0E30               	movlw	low _atCommand
  5152  000756  0100               	movlb	0	; () banked
  5153  000758  6F7D               	movwf	cmdSetTX@cmd& (0+255),b
  5154  00075A  0E02               	movlw	high _atCommand
  5155  00075C  6F7E               	movwf	(cmdSetTX@cmd+1)& (0+255),b
  5156  00075E  EC05  F030         	call	_cmdSetTX	;wreg free
  5157                           
  5158                           ;app/app_src/application.c: 955:          }
  5159  000762  EF00  F004         	goto	l460
  5160  000766                     l16877:
  5161                           
  5162                           ;app/app_src/application.c: 964:             printf("NOT OK:%u\r\n", (uint16_t)UNDEFCMD)
      +                          ;
  5163  000766  0ECC               	movlw	low STR_4
  5164  000768  0100               	movlb	0	; () banked
  5165  00076A  6F77               	movwf	printf@fmt& (0+255),b
  5166  00076C  0EFE               	movlw	high STR_4
  5167  00076E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5168  000770  0E00               	movlw	0
  5169  000772  6F7A               	movwf	(?_printf+3)& (0+255),b
  5170  000774  0E09               	movlw	9
  5171  000776  6F79               	movwf	(?_printf+2)& (0+255),b
  5172  000778  ECF7  F04B         	call	_printf	;wreg free
  5173                           
  5174                           ;app/app_src/application.c: 965:             break;
  5175  00077C  EF00  F004         	goto	l460
  5176  000780                     l16881:
  5177  000780  0100               	movlb	0	; () banked
  5178  000782  EE20 F001          	lfsr	2,1
  5179  000786  51CB               	movf	executeATCommand@cmd& (0+255),w,b
  5180  000788  26D9               	addwf	fsr2l,f,c
  5181  00078A  51CC               	movf	(executeATCommand@cmd+1)& (0+255),w,b
  5182  00078C  22DA               	addwfc	fsr2h,f,c
  5183  00078E  50DF               	movf	indf2,w,c
  5184  000790  6FCD               	movwf	??_executeATCommand& (0+255),b
  5185  000792  6BCE               	clrf	(??_executeATCommand+1)& (0+255),b
  5186                           
  5187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5188                           ; Switch size 1, requested type "simple"
  5189                           ; Number of cases is 1, Range of values is 0 to 0
  5190                           ; switch strategies available:
  5191                           ; Name         Instructions Cycles
  5192                           ; simple_byte            4     3 (average)
  5193                           ;	Chosen strategy is simple_byte
  5194  000794  51CE               	movf	(??_executeATCommand+1)& (0+255),w,b
  5195  000796  0A00               	xorlw	0	; case 0
  5196  000798  B4D8               	btfsc	status,2,c
  5197  00079A  EFD1  F003         	goto	l17827
  5198  00079E  EFB3  F003         	goto	l16877
  5199  0007A2                     l17827:
  5200                           
  5201                           ; BSR set to: 0
  5202                           ; Switch size 1, requested type "simple"
  5203                           ; Number of cases is 11, Range of values is 65 to 84
  5204                           ; switch strategies available:
  5205                           ; Name         Instructions Cycles
  5206                           ; simple_byte           34    18 (average)
  5207                           ;	Chosen strategy is simple_byte
  5208  0007A2  51CD               	movf	??_executeATCommand& (0+255),w,b
  5209  0007A4  0A41               	xorlw	65	; case 65
  5210  0007A6  B4D8               	btfsc	status,2,c
  5211  0007A8  EF48  F001         	goto	l16777
  5212  0007AC  0A03               	xorlw	3	; case 66
  5213  0007AE  B4D8               	btfsc	status,2,c
  5214  0007B0  EFF9  F000         	goto	l16765
  5215  0007B4  0A01               	xorlw	1	; case 67
  5216  0007B6  B4D8               	btfsc	status,2,c
  5217  0007B8  EF97  F001         	goto	l16789
  5218  0007BC  0A0B               	xorlw	11	; case 72
  5219  0007BE  B4D8               	btfsc	status,2,c
  5220  0007C0  EFF8  F001         	goto	l16805
  5221  0007C4  0A01               	xorlw	1	; case 73
  5222  0007C6  B4D8               	btfsc	status,2,c
  5223  0007C8  EF46  F002         	goto	l16817
  5224  0007CC  0A04               	xorlw	4	; case 77
  5225  0007CE  B4D8               	btfsc	status,2,c
  5226  0007D0  EF5F  F002         	goto	l16821
  5227  0007D4  0A03               	xorlw	3	; case 78
  5228  0007D6  B4D8               	btfsc	status,2,c
  5229  0007D8  EF8D  F002         	goto	l16829
  5230  0007DC  0A1E               	xorlw	30	; case 80
  5231  0007DE  B4D8               	btfsc	status,2,c
  5232  0007E0  EFC0  F002         	goto	l16837
  5233  0007E4  0A02               	xorlw	2	; case 82
  5234  0007E6  B4D8               	btfsc	status,2,c
  5235  0007E8  EFDA  F002         	goto	l16841
  5236  0007EC  0A01               	xorlw	1	; case 83
  5237  0007EE  B4D8               	btfsc	status,2,c
  5238  0007F0  EF5B  F000         	goto	l16741
  5239  0007F4  0A07               	xorlw	7	; case 84
  5240  0007F6  B4D8               	btfsc	status,2,c
  5241  0007F8  EF56  F003         	goto	l16861
  5242  0007FC  EFB3  F003         	goto	l16877
  5243  000800                     l460:
  5244  000800  0012               	return		;funcret
  5245  000802                     __end_of_executeATCommand:
  5246                           	opt callstack 0
  5247                           
  5248 ;; *************** function _set_hop_table_ttl *****************
  5249 ;; Defined at:
  5250 ;;		line 777 in file "app/app_src/application.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  cmd             2   29[BANK0 ] PTR unsigned char 
  5253 ;;		 -> atCommand(80), 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;Total ram usage:        2 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:   16
  5272 ;; This function calls:
  5273 ;;		_printf
  5274 ;; This function is called by:
  5275 ;;		_executeATCommand
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text8
  5280  009BD0                     __ptext8:
  5281                           	opt callstack 0
  5282  009BD0                     _set_hop_table_ttl:
  5283                           	opt callstack 12
  5284  009BD0                     
  5285                           ;app/app_src/application.c: 790:     printf("OK\r\n");
  5286  009BD0  0ED7               	movlw	low STR_11
  5287  009BD2  0100               	movlb	0	; () banked
  5288  009BD4  6F77               	movwf	printf@fmt& (0+255),b
  5289  009BD6  0EFF               	movlw	high STR_11
  5290  009BD8  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5291  009BDA  ECF7  F04B         	call	_printf	;wreg free
  5292  009BDE  0012               	return		;funcret
  5293  009BE0                     __end_of_set_hop_table_ttl:
  5294                           	opt callstack 0
  5295                           
  5296 ;; *************** function _print_hop_table *****************
  5297 ;; Defined at:
  5298 ;;		line 761 in file "app/app_src/application.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  atCommand       2   29[BANK0 ] PTR unsigned char 
  5301 ;;		 -> atCommand(80), 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5313 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;Total ram usage:        2 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:   16
  5320 ;; This function calls:
  5321 ;;		_printf
  5322 ;; This function is called by:
  5323 ;;		_executeATCommand
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text9
  5328  009BE0                     __ptext9:
  5329                           	opt callstack 0
  5330  009BE0                     _print_hop_table:
  5331                           	opt callstack 12
  5332  009BE0                     
  5333                           ;app/app_src/application.c: 762:     printf("Hop table\r\n");
  5334  009BE0  0EB4               	movlw	low STR_58
  5335  009BE2  0100               	movlb	0	; () banked
  5336  009BE4  6F77               	movwf	printf@fmt& (0+255),b
  5337  009BE6  0EFE               	movlw	high STR_58
  5338  009BE8  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5339  009BEA  ECF7  F04B         	call	_printf	;wreg free
  5340  009BEE  0012               	return		;funcret
  5341  009BF0                     __end_of_print_hop_table:
  5342                           	opt callstack 0
  5343                           
  5344 ;; *************** function _cmdSetTX *****************
  5345 ;; Defined at:
  5346 ;;		line 584 in file "app/app_src/application.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  cmd             2   29[BANK0 ] PTR unsigned char 
  5349 ;;		 -> atCommand(80), 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  CHstr           3   36[BANK0 ] unsigned char [3]
  5352 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  5353 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  5354 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  5355 ;;		 -> cmdSetSF@CHstr(3), STR_53(2), STR_52(2), cmdSetCADRSSI@CHstr(3), 
  5356 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5357 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5358 ;;  temp            1   35[BANK0 ] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;Total ram usage:       10 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:   16
  5375 ;; This function calls:
  5376 ;;		_DATAEE_WriteByte_Platform
  5377 ;;		_initRadio
  5378 ;;		_memcpy
  5379 ;;		_memset
  5380 ;;		_printf
  5381 ;;		_strstr
  5382 ;;		_strtoul
  5383 ;; This function is called by:
  5384 ;;		_executeATCommand
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text10
  5389  00600A                     __ptext10:
  5390                           	opt callstack 0
  5391  00600A                     _cmdSetTX:
  5392                           	opt callstack 12
  5393  00600A                     
  5394                           ;app/app_src/application.c: 585:  char *p1,*p2;;app/app_src/application.c: 586:  char CH
      +                          str[3];;app/app_src/application.c: 587:  uint8_t temp;;app/app_src/application.c: 588:  
      +                          p1 = strstr(atCommand,"=") + 1;
  5395  00600A  0E30               	movlw	low _atCommand
  5396  00600C  6E0D               	movwf	strstr@h^0,c
  5397  00600E  0E02               	movlw	high _atCommand
  5398  006010  6E0E               	movwf	(strstr@h+1)^0,c
  5399  006012  0EDF               	movlw	low (STR_16+3)
  5400  006014  6E0F               	movwf	strstr@n^0,c
  5401  006016  0EFF               	movlw	high (STR_16+3)
  5402  006018  6E10               	movwf	(strstr@n+1)^0,c
  5403  00601A  EC17  F032         	call	_strstr	;wreg free
  5404  00601E  0E01               	movlw	1
  5405  006020  240D               	addwf	?_strstr^0,w,c
  5406  006022  0100               	movlb	0	; () banked
  5407  006024  6F81               	movwf	cmdSetTX@p1& (0+255),b
  5408  006026  0E00               	movlw	0
  5409  006028  200E               	addwfc	(?_strstr+1)^0,w,c
  5410  00602A  6F82               	movwf	(cmdSetTX@p1+1)& (0+255),b
  5411  00602C                     
  5412                           ; BSR set to: 0
  5413                           ;app/app_src/application.c: 589:     if(!p1){
  5414  00602C  5181               	movf	cmdSetTX@p1& (0+255),w,b
  5415  00602E  1182               	iorwf	(cmdSetTX@p1+1)& (0+255),w,b
  5416  006030  A4D8               	btfss	status,2,c
  5417  006032  EF1D  F030         	goto	u16351
  5418  006036  EF1F  F030         	goto	u16350
  5419  00603A                     u16351:
  5420  00603A  EF29  F030         	goto	l16385
  5421  00603E                     u16350:
  5422  00603E                     
  5423                           ; BSR set to: 0
  5424                           ;app/app_src/application.c: 590:         printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS)
      +                          ;
  5425  00603E  0ECC               	movlw	low STR_4
  5426  006040  6F77               	movwf	printf@fmt& (0+255),b
  5427  006042  0EFE               	movlw	high STR_4
  5428  006044  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5429  006046  0E00               	movlw	0
  5430  006048  6F7A               	movwf	(?_printf+3)& (0+255),b
  5431  00604A  0E0B               	movlw	11
  5432  00604C  6F79               	movwf	(?_printf+2)& (0+255),b
  5433  00604E  ECF7  F04B         	call	_printf	;wreg free
  5434  006052                     l16385:
  5435                           
  5436                           ;app/app_src/application.c: 592:     memset(CHstr, 0 , sizeof(CHstr));
  5437  006052  0E84               	movlw	low cmdSetTX@CHstr
  5438  006054  6E02               	movwf	memset@dest^0,c
  5439  006056  0E00               	movlw	high cmdSetTX@CHstr
  5440  006058  6E03               	movwf	(memset@dest+1)^0,c
  5441  00605A  0E00               	movlw	0
  5442  00605C  6E05               	movwf	(memset@c+1)^0,c
  5443  00605E  0E00               	movlw	0
  5444  006060  6E04               	movwf	memset@c^0,c
  5445  006062  0E00               	movlw	0
  5446  006064  6E07               	movwf	(memset@n+1)^0,c
  5447  006066  0E03               	movlw	3
  5448  006068  6E06               	movwf	memset@n^0,c
  5449  00606A  ECA5  F023         	call	_memset	;wreg free
  5450  00606E                     
  5451                           ;app/app_src/application.c: 593:  memcpy(CHstr,p1,2);
  5452  00606E  0E84               	movlw	low cmdSetTX@CHstr
  5453  006070  6E08               	movwf	memcpy@d1^0,c
  5454  006072  0E00               	movlw	high cmdSetTX@CHstr
  5455  006074  6E09               	movwf	(memcpy@d1+1)^0,c
  5456  006076  0060  F204  F00A   	movff	cmdSetTX@p1,memcpy@s1
  5457  00607C  0060  F208  F00B   	movff	cmdSetTX@p1+1,memcpy@s1+1
  5458  006082  0E00               	movlw	0
  5459  006084  6E0D               	movwf	(memcpy@n+1)^0,c
  5460  006086  0E02               	movlw	2
  5461  006088  6E0C               	movwf	memcpy@n^0,c
  5462  00608A  ECD7  F041         	call	_memcpy	;wreg free
  5463  00608E                     
  5464                           ;app/app_src/application.c: 594:  temp = (uint8_t)strtoul(CHstr,&p2,10);
  5465  00608E  0E84               	movlw	low cmdSetTX@CHstr
  5466  006090  6E34               	movwf	strtoul@s^0,c
  5467  006092  0E00               	movlw	high cmdSetTX@CHstr
  5468  006094  6E35               	movwf	(strtoul@s+1)^0,c
  5469  006096  0E7F               	movlw	low cmdSetTX@p2
  5470  006098  6E36               	movwf	strtoul@endptr^0,c
  5471  00609A  0E00               	movlw	high cmdSetTX@p2
  5472  00609C  6E37               	movwf	(strtoul@endptr+1)^0,c
  5473  00609E  0E00               	movlw	0
  5474  0060A0  6E39               	movwf	(strtoul@base+1)^0,c
  5475  0060A2  0E0A               	movlw	10
  5476  0060A4  6E38               	movwf	strtoul@base^0,c
  5477  0060A6  EC3F  F048         	call	_strtoul	;wreg free
  5478  0060AA  5034               	movf	?_strtoul^0,w,c
  5479  0060AC  0100               	movlb	0	; () banked
  5480  0060AE  6F83               	movwf	cmdSetTX@temp& (0+255),b
  5481  0060B0                     
  5482                           ; BSR set to: 0
  5483                           ;app/app_src/application.c: 595:  if((temp > 5) || (temp < 2)){
  5484  0060B0  0E06               	movlw	6
  5485  0060B2  6183               	cpfslt	cmdSetTX@temp& (0+255),b
  5486  0060B4  EF5E  F030         	goto	u16361
  5487  0060B8  EF60  F030         	goto	u16360
  5488  0060BC                     u16361:
  5489  0060BC  EF68  F030         	goto	l16395
  5490  0060C0                     u16360:
  5491  0060C0                     
  5492                           ; BSR set to: 0
  5493  0060C0  0E02               	movlw	2
  5494  0060C2  6183               	cpfslt	cmdSetTX@temp& (0+255),b
  5495  0060C4  EF66  F030         	goto	u16371
  5496  0060C8  EF68  F030         	goto	u16370
  5497  0060CC                     u16371:
  5498  0060CC  EF74  F030         	goto	l320
  5499  0060D0                     u16370:
  5500  0060D0                     l16395:
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;app/app_src/application.c: 596:   printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS);
  5504  0060D0  0ECC               	movlw	low STR_4
  5505  0060D2  6F77               	movwf	printf@fmt& (0+255),b
  5506  0060D4  0EFE               	movlw	high STR_4
  5507  0060D6  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5508  0060D8  0E00               	movlw	0
  5509  0060DA  6F7A               	movwf	(?_printf+3)& (0+255),b
  5510  0060DC  0E0B               	movlw	11
  5511  0060DE  6F79               	movwf	(?_printf+2)& (0+255),b
  5512  0060E0  ECF7  F04B         	call	_printf	;wreg free
  5513                           
  5514                           ;app/app_src/application.c: 597:  }
  5515  0060E4  EF89  F030         	goto	l324
  5516  0060E8                     l320:
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;app/app_src/application.c: 599:   TXPower = temp;
  5520  0060E8  0060  F20C  F0F0   	movff	cmdSetTX@temp,_TXPower
  5521  0060EE                     
  5522                           ; BSR set to: 0
  5523                           ;app/app_src/application.c: 600:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1,TXPower);
  5524  0060EE  0E00               	movlw	0
  5525  0060F0  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5526  0060F2  0E1D               	movlw	29
  5527  0060F4  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5528  0060F6  0060  F3C0  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
  5529  0060FC  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
  5530  006100                     
  5531                           ;app/app_src/application.c: 601:   initRadio();
  5532  006100  EC7D  F027         	call	_initRadio	;wreg free
  5533  006104                     
  5534                           ;app/app_src/application.c: 602:   printf("OK\r\n");
  5535  006104  0ED7               	movlw	low STR_11
  5536  006106  0100               	movlb	0	; () banked
  5537  006108  6F77               	movwf	printf@fmt& (0+255),b
  5538  00610A  0EFF               	movlw	high STR_11
  5539  00610C  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5540  00610E  ECF7  F04B         	call	_printf	;wreg free
  5541  006112                     l324:
  5542  006112  0012               	return		;funcret
  5543  006114                     __end_of_cmdSetTX:
  5544                           	opt callstack 0
  5545                           
  5546 ;; *************** function _cmdSetTTL *****************
  5547 ;; Defined at:
  5548 ;;		line 482 in file "app/app_src/application.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  5551 ;;		 -> atCommand(80), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		None
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;Total ram usage:        2 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    7
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_executeATCommand
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text11
  5578  009D12                     __ptext11:
  5579                           	opt callstack 0
  5580  009D12                     _cmdSetTTL:
  5581                           	opt callstack 21
  5582  009D12  0012               	return		;funcret
  5583  009D14                     __end_of_cmdSetTTL:
  5584                           	opt callstack 0
  5585                           
  5586 ;; *************** function _cmdSetSink *****************
  5587 ;; Defined at:
  5588 ;;		line 371 in file "app/app_src/application.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      void 
  5595 ;; Registers used:
  5596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;Total ram usage:        0 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; Hardware stack levels required when called:   16
  5609 ;; This function calls:
  5610 ;;		_printf
  5611 ;; This function is called by:
  5612 ;;		_executeATCommand
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text12
  5617  009BF0                     __ptext12:
  5618                           	opt callstack 0
  5619  009BF0                     _cmdSetSink:
  5620                           	opt callstack 12
  5621  009BF0                     
  5622                           ;app/app_src/application.c: 385:  printf("OK\r\n");
  5623  009BF0  0ED7               	movlw	low STR_11
  5624  009BF2  0100               	movlb	0	; () banked
  5625  009BF4  6F77               	movwf	printf@fmt& (0+255),b
  5626  009BF6  0EFF               	movlw	high STR_11
  5627  009BF8  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5628  009BFA  ECF7  F04B         	call	_printf	;wreg free
  5629  009BFE  0012               	return		;funcret
  5630  009C00                     __end_of_cmdSetSink:
  5631                           	opt callstack 0
  5632                           
  5633 ;; *************** function _cmdSetSF *****************
  5634 ;; Defined at:
  5635 ;;		line 725 in file "app/app_src/application.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  atCommand       2   29[BANK0 ] PTR unsigned char 
  5638 ;;		 -> atCommand(80), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  5641 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  5642 ;;		 -> cmdSetSF@CHstr(3), STR_53(2), STR_52(2), cmdSetCADRSSI@CHstr(3), 
  5643 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5644 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5645 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  5646 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  5647 ;;  temp            1   38[BANK0 ] char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  1    wreg      void 
  5650 ;; Registers used:
  5651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;Total ram usage:       10 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:   16
  5664 ;; This function calls:
  5665 ;;		_DATAEE_WriteByte_Platform
  5666 ;;		_initRadio
  5667 ;;		_memcpy
  5668 ;;		_printf
  5669 ;;		_strstr
  5670 ;;		_strtol
  5671 ;; This function is called by:
  5672 ;;		_executeATCommand
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text13
  5677  00705C                     __ptext13:
  5678                           	opt callstack 0
  5679  00705C                     _cmdSetSF:
  5680                           	opt callstack 12
  5681  00705C                     
  5682                           ;app/app_src/application.c: 726:  char *p1,*p2;;app/app_src/application.c: 727:  char CH
      +                          str[3];;app/app_src/application.c: 728:  int8_t temp;;app/app_src/application.c: 729:  p
      +                          1 = strstr(atCommand,"=") + 1;
  5683  00705C  0060  F1F4  F00D   	movff	cmdSetSF@atCommand,strstr@h
  5684  007062  0060  F1F8  F00E   	movff	cmdSetSF@atCommand+1,strstr@h+1
  5685  007068  0EDF               	movlw	low (STR_16+3)
  5686  00706A  6E0F               	movwf	strstr@n^0,c
  5687  00706C  0EFF               	movlw	high (STR_16+3)
  5688  00706E  6E10               	movwf	(strstr@n+1)^0,c
  5689  007070  EC17  F032         	call	_strstr	;wreg free
  5690  007074  0E01               	movlw	1
  5691  007076  240D               	addwf	?_strstr^0,w,c
  5692  007078  0100               	movlb	0	; () banked
  5693  00707A  6F7F               	movwf	cmdSetSF@p1& (0+255),b
  5694  00707C  0E00               	movlw	0
  5695  00707E  200E               	addwfc	(?_strstr+1)^0,w,c
  5696  007080  6F80               	movwf	(cmdSetSF@p1+1)& (0+255),b
  5697  007082                     
  5698                           ; BSR set to: 0
  5699                           ;app/app_src/application.c: 730:  memcpy(CHstr,p1,2);
  5700  007082  0E81               	movlw	low cmdSetSF@CHstr
  5701  007084  6E08               	movwf	memcpy@d1^0,c
  5702  007086  0E00               	movlw	high cmdSetSF@CHstr
  5703  007088  6E09               	movwf	(memcpy@d1+1)^0,c
  5704  00708A  0060  F1FC  F00A   	movff	cmdSetSF@p1,memcpy@s1
  5705  007090  0060  F200  F00B   	movff	cmdSetSF@p1+1,memcpy@s1+1
  5706  007096  0E00               	movlw	0
  5707  007098  6E0D               	movwf	(memcpy@n+1)^0,c
  5708  00709A  0E02               	movlw	2
  5709  00709C  6E0C               	movwf	memcpy@n^0,c
  5710  00709E  ECD7  F041         	call	_memcpy	;wreg free
  5711  0070A2                     
  5712                           ;app/app_src/application.c: 731:  temp = (uint8_t)strtol(CHstr,&p2,16);
  5713  0070A2  0E81               	movlw	low cmdSetSF@CHstr
  5714  0070A4  6E34               	movwf	strtol@s^0,c
  5715  0070A6  0E00               	movlw	high cmdSetSF@CHstr
  5716  0070A8  6E35               	movwf	(strtol@s+1)^0,c
  5717  0070AA  0E84               	movlw	low cmdSetSF@p2
  5718  0070AC  6E36               	movwf	strtol@endptr^0,c
  5719  0070AE  0E00               	movlw	high cmdSetSF@p2
  5720  0070B0  6E37               	movwf	(strtol@endptr+1)^0,c
  5721  0070B2  0E00               	movlw	0
  5722  0070B4  6E39               	movwf	(strtol@base+1)^0,c
  5723  0070B6  0E10               	movlw	16
  5724  0070B8  6E38               	movwf	strtol@base^0,c
  5725  0070BA  EC1C  F048         	call	_strtol	;wreg free
  5726  0070BE  5034               	movf	?_strtol^0,w,c
  5727  0070C0  0100               	movlb	0	; () banked
  5728  0070C2  6F86               	movwf	cmdSetSF@temp& (0+255),b
  5729  0070C4                     
  5730                           ; BSR set to: 0
  5731                           ;app/app_src/application.c: 732:  if((temp > 12) || (temp < 7)){
  5732  0070C4  5186               	movf	cmdSetSF@temp& (0+255),w,b
  5733  0070C6  0A80               	xorlw	128
  5734  0070C8  0F73               	addlw	-141
  5735  0070CA  B0D8               	btfsc	status,0,c
  5736  0070CC  EF6A  F038         	goto	u16431
  5737  0070D0  EF6C  F038         	goto	u16430
  5738  0070D4                     u16431:
  5739  0070D4  EF76  F038         	goto	l16469
  5740  0070D8                     u16430:
  5741  0070D8                     
  5742                           ; BSR set to: 0
  5743  0070D8  5186               	movf	cmdSetSF@temp& (0+255),w,b
  5744  0070DA  0A80               	xorlw	128
  5745  0070DC  0F79               	addlw	-135
  5746  0070DE  B0D8               	btfsc	status,0,c
  5747  0070E0  EF74  F038         	goto	u16441
  5748  0070E4  EF76  F038         	goto	u16440
  5749  0070E8                     u16441:
  5750  0070E8  EF80  F038         	goto	l361
  5751  0070EC                     u16440:
  5752  0070EC                     l16469:
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;app/app_src/application.c: 733:   printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  5756  0070EC  0ECC               	movlw	low STR_4
  5757  0070EE  6F77               	movwf	printf@fmt& (0+255),b
  5758  0070F0  0EFE               	movlw	high STR_4
  5759  0070F2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5760  0070F4  0E0D               	movlw	13
  5761  0070F6  6F79               	movwf	(?_printf+2)& (0+255),b
  5762  0070F8  ECF7  F04B         	call	_printf	;wreg free
  5763                           
  5764                           ;app/app_src/application.c: 734:  }
  5765  0070FC  EF95  F038         	goto	l365
  5766  007100                     l361:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;app/app_src/application.c: 736:   current_sf = temp;
  5770  007100  0060  F218  F0F2   	movff	cmdSetSF@temp,_current_sf
  5771  007106                     
  5772                           ; BSR set to: 0
  5773                           ;app/app_src/application.c: 737:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1,temp);
  5774  007106  0E00               	movlw	0
  5775  007108  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5776  00710A  0E21               	movlw	33
  5777  00710C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5778  00710E  0060  F218  F008   	movff	cmdSetSF@temp,DATAEE_WriteByte_Platform@data
  5779  007114  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
  5780  007118                     
  5781                           ;app/app_src/application.c: 738:   initRadio();
  5782  007118  EC7D  F027         	call	_initRadio	;wreg free
  5783  00711C                     
  5784                           ;app/app_src/application.c: 739:   printf("OK\r\n");
  5785  00711C  0ED7               	movlw	low STR_11
  5786  00711E  0100               	movlb	0	; () banked
  5787  007120  6F77               	movwf	printf@fmt& (0+255),b
  5788  007122  0EFF               	movlw	high STR_11
  5789  007124  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5790  007126  ECF7  F04B         	call	_printf	;wreg free
  5791  00712A                     l365:
  5792  00712A  0012               	return		;funcret
  5793  00712C                     __end_of_cmdSetSF:
  5794                           	opt callstack 0
  5795                           
  5796 ;; *************** function _cmdSetRFCH *****************
  5797 ;; Defined at:
  5798 ;;		line 548 in file "app/app_src/application.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  cmd             2   29[BANK0 ] PTR unsigned char 
  5801 ;;		 -> atCommand(80), 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  5804 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  5805 ;;		 -> cmdSetSF@CHstr(3), STR_53(2), STR_52(2), cmdSetCADRSSI@CHstr(3), 
  5806 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5807 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5808 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  5809 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  5810 ;;  temp            1   38[BANK0 ] unsigned char 
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;Total ram usage:       10 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:   16
  5827 ;; This function calls:
  5828 ;;		_DATAEE_WriteByte_Platform
  5829 ;;		_initRadio
  5830 ;;		_memcpy
  5831 ;;		_printf
  5832 ;;		_strstr
  5833 ;;		_strtoul
  5834 ;; This function is called by:
  5835 ;;		_executeATCommand
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text14
  5840  007802                     __ptext14:
  5841                           	opt callstack 0
  5842  007802                     _cmdSetRFCH:
  5843                           	opt callstack 12
  5844  007802                     
  5845                           ;app/app_src/application.c: 549:  char *p1,*p2;;app/app_src/application.c: 550:  char CH
      +                          str[3];;app/app_src/application.c: 551:  uint8_t temp;;app/app_src/application.c: 552:  
      +                          p1 = strstr(atCommand,"=") + 1;
  5846  007802  0E30               	movlw	low _atCommand
  5847  007804  6E0D               	movwf	strstr@h^0,c
  5848  007806  0E02               	movlw	high _atCommand
  5849  007808  6E0E               	movwf	(strstr@h+1)^0,c
  5850  00780A  0EDF               	movlw	low (STR_16+3)
  5851  00780C  6E0F               	movwf	strstr@n^0,c
  5852  00780E  0EFF               	movlw	high (STR_16+3)
  5853  007810  6E10               	movwf	(strstr@n+1)^0,c
  5854  007812  EC17  F032         	call	_strstr	;wreg free
  5855  007816  0E01               	movlw	1
  5856  007818  240D               	addwf	?_strstr^0,w,c
  5857  00781A  0100               	movlb	0	; () banked
  5858  00781C  6F7F               	movwf	cmdSetRFCH@p1& (0+255),b
  5859  00781E  0E00               	movlw	0
  5860  007820  200E               	addwfc	(?_strstr+1)^0,w,c
  5861  007822  6F80               	movwf	(cmdSetRFCH@p1+1)& (0+255),b
  5862  007824                     
  5863                           ; BSR set to: 0
  5864                           ;app/app_src/application.c: 553:  memcpy(CHstr,p1,2);
  5865  007824  0E81               	movlw	low cmdSetRFCH@CHstr
  5866  007826  6E08               	movwf	memcpy@d1^0,c
  5867  007828  0E00               	movlw	high cmdSetRFCH@CHstr
  5868  00782A  6E09               	movwf	(memcpy@d1+1)^0,c
  5869  00782C  0060  F1FC  F00A   	movff	cmdSetRFCH@p1,memcpy@s1
  5870  007832  0060  F200  F00B   	movff	cmdSetRFCH@p1+1,memcpy@s1+1
  5871  007838  0E00               	movlw	0
  5872  00783A  6E0D               	movwf	(memcpy@n+1)^0,c
  5873  00783C  0E02               	movlw	2
  5874  00783E  6E0C               	movwf	memcpy@n^0,c
  5875  007840  ECD7  F041         	call	_memcpy	;wreg free
  5876  007844                     
  5877                           ;app/app_src/application.c: 554:  temp = (uint8_t)strtoul(CHstr,&p2,16) - 1;
  5878  007844  0E81               	movlw	low cmdSetRFCH@CHstr
  5879  007846  6E34               	movwf	strtoul@s^0,c
  5880  007848  0E00               	movlw	high cmdSetRFCH@CHstr
  5881  00784A  6E35               	movwf	(strtoul@s+1)^0,c
  5882  00784C  0E84               	movlw	low cmdSetRFCH@p2
  5883  00784E  6E36               	movwf	strtoul@endptr^0,c
  5884  007850  0E00               	movlw	high cmdSetRFCH@p2
  5885  007852  6E37               	movwf	(strtoul@endptr+1)^0,c
  5886  007854  0E00               	movlw	0
  5887  007856  6E39               	movwf	(strtoul@base+1)^0,c
  5888  007858  0E10               	movlw	16
  5889  00785A  6E38               	movwf	strtoul@base^0,c
  5890  00785C  EC3F  F048         	call	_strtoul	;wreg free
  5891  007860  0434               	decf	?_strtoul^0,w,c
  5892  007862  0100               	movlb	0	; () banked
  5893  007864  6F86               	movwf	cmdSetRFCH@temp& (0+255),b
  5894  007866                     
  5895                           ; BSR set to: 0
  5896                           ;app/app_src/application.c: 555:  if(temp > sizeof(fhssList)){
  5897  007866  0EFC               	movlw	252
  5898  007868  6586               	cpfsgt	cmdSetRFCH@temp& (0+255),b
  5899  00786A  EF39  F03C         	goto	u16341
  5900  00786E  EF3B  F03C         	goto	u16340
  5901  007872                     u16341:
  5902  007872  EF45  F03C         	goto	l311
  5903  007876                     u16340:
  5904  007876                     
  5905                           ; BSR set to: 0
  5906                           ;app/app_src/application.c: 556:   printf("NOT OK:%u\r\n",CHOUTOFBOUNDS);
  5907  007876  0ECC               	movlw	low STR_4
  5908  007878  6F77               	movwf	printf@fmt& (0+255),b
  5909  00787A  0EFE               	movlw	high STR_4
  5910  00787C  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5911  00787E  0E0A               	movlw	10
  5912  007880  6F79               	movwf	(?_printf+2)& (0+255),b
  5913  007882  ECF7  F04B         	call	_printf	;wreg free
  5914                           
  5915                           ;app/app_src/application.c: 557:  }
  5916  007886  EF5A  F03C         	goto	l313
  5917  00788A                     l311:
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;app/app_src/application.c: 559:   channel = temp;
  5921  00788A  0060  F218  F0F1   	movff	cmdSetRFCH@temp,_channel
  5922  007890                     
  5923                           ; BSR set to: 0
  5924                           ;app/app_src/application.c: 560:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1,channel);
  5925  007890  0E00               	movlw	0
  5926  007892  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5927  007894  0E1C               	movlw	28
  5928  007896  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5929  007898  0060  F3C4  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
  5930  00789E  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
  5931  0078A2                     
  5932                           ;app/app_src/application.c: 561:   initRadio();
  5933  0078A2  EC7D  F027         	call	_initRadio	;wreg free
  5934  0078A6                     
  5935                           ;app/app_src/application.c: 562:         printf("OK\r\n");
  5936  0078A6  0ED7               	movlw	low STR_11
  5937  0078A8  0100               	movlb	0	; () banked
  5938  0078AA  6F77               	movwf	printf@fmt& (0+255),b
  5939  0078AC  0EFF               	movlw	high STR_11
  5940  0078AE  6F78               	movwf	(printf@fmt+1)& (0+255),b
  5941  0078B0  ECF7  F04B         	call	_printf	;wreg free
  5942  0078B4                     l313:
  5943  0078B4  0012               	return		;funcret
  5944  0078B6                     __end_of_cmdSetRFCH:
  5945                           	opt callstack 0
  5946                           
  5947 ;; *************** function _cmdSetParity *****************
  5948 ;; Defined at:
  5949 ;;		line 660 in file "app/app_src/application.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  atCommand       2   29[BANK0 ] PTR unsigned char 
  5952 ;;		 -> atCommand(80), 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      void 
  5957 ;; Registers used:
  5958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;Total ram usage:        2 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:   16
  5971 ;; This function calls:
  5972 ;;		_printf
  5973 ;;		_set_parity
  5974 ;;		_strstr
  5975 ;; This function is called by:
  5976 ;;		_executeATCommand
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text15
  5981  0078B6                     __ptext15:
  5982                           	opt callstack 0
  5983  0078B6                     _cmdSetParity:
  5984                           	opt callstack 12
  5985  0078B6                     
  5986                           ;app/app_src/application.c: 661:     if(strstr(atCommand,"=ODD"))
  5987  0078B6  0060  F1F4  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5988  0078BC  0060  F1F8  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5989  0078C2  0EEB               	movlw	low STR_44
  5990  0078C4  6E0F               	movwf	strstr@n^0,c
  5991  0078C6  0EFF               	movlw	high STR_44
  5992  0078C8  6E10               	movwf	(strstr@n+1)^0,c
  5993  0078CA  EC17  F032         	call	_strstr	;wreg free
  5994  0078CE  500D               	movf	?_strstr^0,w,c
  5995  0078D0  100E               	iorwf	(?_strstr+1)^0,w,c
  5996  0078D2  B4D8               	btfsc	status,2,c
  5997  0078D4  EF6E  F03C         	goto	u16401
  5998  0078D8  EF70  F03C         	goto	u16400
  5999  0078DC                     u16401:
  6000  0078DC  EF75  F03C         	goto	l16435
  6001  0078E0                     u16400:
  6002  0078E0                     
  6003                           ;app/app_src/application.c: 662:     {;app/app_src/application.c: 663:         set_parit
      +                          y(UART_9BIT_ODD_PARITY);
  6004  0078E0  0E02               	movlw	2
  6005  0078E2  EC7C  F040         	call	_set_parity
  6006                           
  6007                           ;app/app_src/application.c: 664:     }
  6008  0078E6  EFB2  F03C         	goto	l349
  6009  0078EA                     l16435:
  6010  0078EA  0060  F1F4  F00D   	movff	cmdSetParity@atCommand,strstr@h
  6011  0078F0  0060  F1F8  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  6012  0078F6  0EC0               	movlw	low STR_46
  6013  0078F8  6E0F               	movwf	strstr@n^0,c
  6014  0078FA  0EFF               	movlw	high STR_46
  6015  0078FC  6E10               	movwf	(strstr@n+1)^0,c
  6016  0078FE  EC17  F032         	call	_strstr	;wreg free
  6017  007902  500D               	movf	?_strstr^0,w,c
  6018  007904  100E               	iorwf	(?_strstr+1)^0,w,c
  6019  007906  B4D8               	btfsc	status,2,c
  6020  007908  EF88  F03C         	goto	u16411
  6021  00790C  EF8A  F03C         	goto	u16410
  6022  007910                     u16411:
  6023  007910  EF8F  F03C         	goto	l16439
  6024  007914                     u16410:
  6025  007914                     
  6026                           ;app/app_src/application.c: 666:     {;app/app_src/application.c: 667:         set_parit
      +                          y(UART_8BIT_NO_PARITY);
  6027  007914  0E00               	movlw	0
  6028  007916  EC7C  F040         	call	_set_parity
  6029                           
  6030                           ;app/app_src/application.c: 668:     }
  6031  00791A  EFB2  F03C         	goto	l349
  6032  00791E                     l16439:
  6033  00791E  0060  F1F4  F00D   	movff	cmdSetParity@atCommand,strstr@h
  6034  007924  0060  F1F8  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  6035  00792A  0EC6               	movlw	low STR_48
  6036  00792C  6E0F               	movwf	strstr@n^0,c
  6037  00792E  0EFF               	movlw	high STR_48
  6038  007930  6E10               	movwf	(strstr@n+1)^0,c
  6039  007932  EC17  F032         	call	_strstr	;wreg free
  6040  007936  500D               	movf	?_strstr^0,w,c
  6041  007938  100E               	iorwf	(?_strstr+1)^0,w,c
  6042  00793A  B4D8               	btfsc	status,2,c
  6043  00793C  EFA2  F03C         	goto	u16421
  6044  007940  EFA4  F03C         	goto	u16420
  6045  007944                     u16421:
  6046  007944  EFA9  F03C         	goto	l16443
  6047  007948                     u16420:
  6048  007948                     
  6049                           ;app/app_src/application.c: 670:     {;app/app_src/application.c: 671:         set_parit
      +                          y(UART_9BIT_EVEN_PARITY);
  6050  007948  0E03               	movlw	3
  6051  00794A  EC7C  F040         	call	_set_parity
  6052                           
  6053                           ;app/app_src/application.c: 672:     }
  6054  00794E  EFB2  F03C         	goto	l349
  6055  007952                     l16443:
  6056                           
  6057                           ;app/app_src/application.c: 674:     {;app/app_src/application.c: 675:         printf("N
      +                          OT OK:%u\r\n",ILLEGALPARAMETER);
  6058  007952  0ECC               	movlw	low STR_4
  6059  007954  0100               	movlb	0	; () banked
  6060  007956  6F77               	movwf	printf@fmt& (0+255),b
  6061  007958  0EFE               	movlw	high STR_4
  6062  00795A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  6063  00795C  0E0D               	movlw	13
  6064  00795E  6F79               	movwf	(?_printf+2)& (0+255),b
  6065  007960  ECF7  F04B         	call	_printf	;wreg free
  6066  007964                     l349:
  6067  007964  0012               	return		;funcret
  6068  007966                     __end_of_cmdSetParity:
  6069                           	opt callstack 0
  6070                           
  6071 ;; *************** function _cmdSetNaddr *****************
  6072 ;; Defined at:
  6073 ;;		line 311 in file "app/app_src/application.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  cmd             2   29[BANK0 ] PTR unsigned char 
  6076 ;;		 -> atCommand(80), 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  6079 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  6080 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  6081 ;;  tempaddr        1   35[BANK0 ] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      void 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6091 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;Total ram usage:        7 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:   16
  6098 ;; This function calls:
  6099 ;;		_DATAEE_WriteByte_Platform
  6100 ;;		_initRadio
  6101 ;;		_printf
  6102 ;;		_setSyncWord
  6103 ;;		_strstr
  6104 ;;		_strtoul
  6105 ;; This function is called by:
  6106 ;;		_executeATCommand
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text16
  6111  008330                     __ptext16:
  6112                           	opt callstack 0
  6113  008330                     _cmdSetNaddr:
  6114                           	opt callstack 12
  6115  008330                     
  6116                           ;app/app_src/application.c: 312:  uint8_t tempaddr;;app/app_src/application.c: 313:  cha
      +                          r *p1,*p2;;app/app_src/application.c: 314:  p1 = strstr(atCommand,"=") + 1;
  6117  008330  0E30               	movlw	low _atCommand
  6118  008332  6E0D               	movwf	strstr@h^0,c
  6119  008334  0E02               	movlw	high _atCommand
  6120  008336  6E0E               	movwf	(strstr@h+1)^0,c
  6121  008338  0EDF               	movlw	low (STR_16+3)
  6122  00833A  6E0F               	movwf	strstr@n^0,c
  6123  00833C  0EFF               	movlw	high (STR_16+3)
  6124  00833E  6E10               	movwf	(strstr@n+1)^0,c
  6125  008340  EC17  F032         	call	_strstr	;wreg free
  6126  008344  0E01               	movlw	1
  6127  008346  240D               	addwf	?_strstr^0,w,c
  6128  008348  0100               	movlb	0	; () banked
  6129  00834A  6F81               	movwf	cmdSetNaddr@p1& (0+255),b
  6130  00834C  0E00               	movlw	0
  6131  00834E  200E               	addwfc	(?_strstr+1)^0,w,c
  6132  008350  6F82               	movwf	(cmdSetNaddr@p1+1)& (0+255),b
  6133  008352                     
  6134                           ; BSR set to: 0
  6135                           ;app/app_src/application.c: 316:  tempaddr = strtoul(p1,p2,16);
  6136  008352  0060  F204  F034   	movff	cmdSetNaddr@p1,strtoul@s
  6137  008358  0060  F208  F035   	movff	cmdSetNaddr@p1+1,strtoul@s+1
  6138  00835E  0060  F1FC  F036   	movff	cmdSetNaddr@p2,strtoul@endptr
  6139  008364  0060  F200  F037   	movff	cmdSetNaddr@p2+1,strtoul@endptr+1
  6140  00836A  0E00               	movlw	0
  6141  00836C  6E39               	movwf	(strtoul@base+1)^0,c
  6142  00836E  0E10               	movlw	16
  6143  008370  6E38               	movwf	strtoul@base^0,c
  6144  008372  EC3F  F048         	call	_strtoul	;wreg free
  6145  008376  5034               	movf	?_strtoul^0,w,c
  6146  008378  0100               	movlb	0	; () banked
  6147  00837A  6F83               	movwf	cmdSetNaddr@tempaddr& (0+255),b
  6148  00837C                     
  6149                           ; BSR set to: 0
  6150                           ;app/app_src/application.c: 317:  currentNetID = tempaddr;
  6151  00837C  0060  F20C  F0FC   	movff	cmdSetNaddr@tempaddr,_currentNetID
  6152  008382                     
  6153                           ; BSR set to: 0
  6154                           ;app/app_src/application.c: 318:  setSyncWord(currentNetID);
  6155  008382  51FC               	movf	_currentNetID& (0+255),w,b
  6156  008384  EC00  F04E         	call	_setSyncWord
  6157                           
  6158                           ;app/app_src/application.c: 320:  DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,currentNet
      +                          ID);
  6159  008388  0E00               	movlw	0
  6160  00838A  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6161  00838C  0E19               	movlw	25
  6162  00838E  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6163  008390  0060  F3F0  F008   	movff	_currentNetID,DATAEE_WriteByte_Platform@data
  6164  008396  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
  6165  00839A                     
  6166                           ;app/app_src/application.c: 321:     initRadio();
  6167  00839A  EC7D  F027         	call	_initRadio	;wreg free
  6168  00839E                     
  6169                           ;app/app_src/application.c: 322:  printf("OK\r\n");
  6170  00839E  0ED7               	movlw	low STR_11
  6171  0083A0  0100               	movlb	0	; () banked
  6172  0083A2  6F77               	movwf	printf@fmt& (0+255),b
  6173  0083A4  0EFF               	movlw	high STR_11
  6174  0083A6  6F78               	movwf	(printf@fmt+1)& (0+255),b
  6175  0083A8  ECF7  F04B         	call	_printf	;wreg free
  6176  0083AC  0012               	return		;funcret
  6177  0083AE                     __end_of_cmdSetNaddr:
  6178                           	opt callstack 0
  6179                           
  6180 ;; *************** function _setSyncWord *****************
  6181 ;; Defined at:
  6182 ;;		line 329 in file "phy/sx1216/phy_src/phy.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  sw              1    wreg     unsigned char 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  sw              1   16[COMRAM] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;Total ram usage:        1 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:   11
  6203 ;; This function calls:
  6204 ;;		_SX1276Write
  6205 ;; This function is called by:
  6206 ;;		_cmdSetNaddr
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text17
  6211  009C00                     __ptext17:
  6212                           	opt callstack 0
  6213  009C00                     _setSyncWord:
  6214                           	opt callstack 16
  6215                           
  6216                           ;incstack = 0
  6217                           ;setSyncWord@sw stored from wreg
  6218  009C00  6E11               	movwf	setSyncWord@sw^0,c
  6219  009C02                     
  6220                           ;phy/sx1216/phy_src/phy.c: 329: void setSyncWord(uint8_t sw);phy/sx1216/phy_src/phy.c: 3
      +                          30: {;phy/sx1216/phy_src/phy.c: 331:   SX1276Write(0x39, sw);
  6221  009C02  0060  F044  F00F   	movff	setSyncWord@sw,SX1276Write@data
  6222  009C08  0E39               	movlw	57
  6223  009C0A  ECCC  F04D         	call	_SX1276Write
  6224  009C0E  0012               	return		;funcret
  6225  009C10                     __end_of_setSyncWord:
  6226                           	opt callstack 0
  6227                           
  6228 ;; *************** function _cmdSetCADRSSI *****************
  6229 ;; Defined at:
  6230 ;;		line 624 in file "app/app_src/application.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  atCommand       2   29[BANK0 ] PTR unsigned char 
  6233 ;;		 -> atCommand(80), 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  6236 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  6237 ;;		 -> cmdSetSF@CHstr(3), STR_53(2), STR_52(2), cmdSetCADRSSI@CHstr(3), 
  6238 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6239 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6240 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  6241 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  6242 ;;  temp            1   38[BANK0 ] char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6255 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;Total ram usage:       10 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:   16
  6259 ;; This function calls:
  6260 ;;		_DATAEE_WriteByte_Platform
  6261 ;;		_initRadio
  6262 ;;		_memcpy
  6263 ;;		_printf
  6264 ;;		_strstr
  6265 ;;		_strtol
  6266 ;; This function is called by:
  6267 ;;		_executeATCommand
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text18
  6272  00712C                     __ptext18:
  6273                           	opt callstack 0
  6274  00712C                     _cmdSetCADRSSI:
  6275                           	opt callstack 12
  6276  00712C                     
  6277                           ;app/app_src/application.c: 625:  char *p1,*p2;;app/app_src/application.c: 626:  char CH
      +                          str[3];;app/app_src/application.c: 627:  int8_t temp;;app/app_src/application.c: 628:  p
      +                          1 = strstr(atCommand,"=") + 1;
  6278  00712C  0060  F1F4  F00D   	movff	cmdSetCADRSSI@atCommand,strstr@h
  6279  007132  0060  F1F8  F00E   	movff	cmdSetCADRSSI@atCommand+1,strstr@h+1
  6280  007138  0EDF               	movlw	low (STR_16+3)
  6281  00713A  6E0F               	movwf	strstr@n^0,c
  6282  00713C  0EFF               	movlw	high (STR_16+3)
  6283  00713E  6E10               	movwf	(strstr@n+1)^0,c
  6284  007140  EC17  F032         	call	_strstr	;wreg free
  6285  007144  0E01               	movlw	1
  6286  007146  240D               	addwf	?_strstr^0,w,c
  6287  007148  0100               	movlb	0	; () banked
  6288  00714A  6F7F               	movwf	cmdSetCADRSSI@p1& (0+255),b
  6289  00714C  0E00               	movlw	0
  6290  00714E  200E               	addwfc	(?_strstr+1)^0,w,c
  6291  007150  6F80               	movwf	(cmdSetCADRSSI@p1+1)& (0+255),b
  6292  007152                     
  6293                           ; BSR set to: 0
  6294                           ;app/app_src/application.c: 629:  memcpy(CHstr,p1,3);
  6295  007152  0E81               	movlw	low cmdSetCADRSSI@CHstr
  6296  007154  6E08               	movwf	memcpy@d1^0,c
  6297  007156  0E00               	movlw	high cmdSetCADRSSI@CHstr
  6298  007158  6E09               	movwf	(memcpy@d1+1)^0,c
  6299  00715A  0060  F1FC  F00A   	movff	cmdSetCADRSSI@p1,memcpy@s1
  6300  007160  0060  F200  F00B   	movff	cmdSetCADRSSI@p1+1,memcpy@s1+1
  6301  007166  0E00               	movlw	0
  6302  007168  6E0D               	movwf	(memcpy@n+1)^0,c
  6303  00716A  0E03               	movlw	3
  6304  00716C  6E0C               	movwf	memcpy@n^0,c
  6305  00716E  ECD7  F041         	call	_memcpy	;wreg free
  6306  007172                     
  6307                           ;app/app_src/application.c: 630:  temp = (uint8_t)strtol(CHstr,&p2,10);
  6308  007172  0E81               	movlw	low cmdSetCADRSSI@CHstr
  6309  007174  6E34               	movwf	strtol@s^0,c
  6310  007176  0E00               	movlw	high cmdSetCADRSSI@CHstr
  6311  007178  6E35               	movwf	(strtol@s+1)^0,c
  6312  00717A  0E84               	movlw	low cmdSetCADRSSI@p2
  6313  00717C  6E36               	movwf	strtol@endptr^0,c
  6314  00717E  0E00               	movlw	high cmdSetCADRSSI@p2
  6315  007180  6E37               	movwf	(strtol@endptr+1)^0,c
  6316  007182  0E00               	movlw	0
  6317  007184  6E39               	movwf	(strtol@base+1)^0,c
  6318  007186  0E0A               	movlw	10
  6319  007188  6E38               	movwf	strtol@base^0,c
  6320  00718A  EC1C  F048         	call	_strtol	;wreg free
  6321  00718E  5034               	movf	?_strtol^0,w,c
  6322  007190  0100               	movlb	0	; () banked
  6323  007192  6F86               	movwf	cmdSetCADRSSI@temp& (0+255),b
  6324  007194                     
  6325                           ; BSR set to: 0
  6326                           ;app/app_src/application.c: 631:  if((temp > 0) || (temp < -120)){
  6327  007194  5186               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6328  007196  0A80               	xorlw	128
  6329  007198  0F7F               	addlw	-129
  6330  00719A  B0D8               	btfsc	status,0,c
  6331  00719C  EFD2  F038         	goto	u16381
  6332  0071A0  EFD4  F038         	goto	u16380
  6333  0071A4                     u16381:
  6334  0071A4  EFDE  F038         	goto	l16419
  6335  0071A8                     u16380:
  6336  0071A8                     
  6337                           ; BSR set to: 0
  6338  0071A8  5186               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6339  0071AA  0A80               	xorlw	128
  6340  0071AC  0FF8               	addlw	248
  6341  0071AE  B0D8               	btfsc	status,0,c
  6342  0071B0  EFDC  F038         	goto	u16391
  6343  0071B4  EFDE  F038         	goto	u16390
  6344  0071B8                     u16391:
  6345  0071B8  EFE8  F038         	goto	l330
  6346  0071BC                     u16390:
  6347  0071BC                     l16419:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;app/app_src/application.c: 632:   printf("NOT OK:%u\r\n",TXOUTOFBOUNDS);
  6351  0071BC  0ECC               	movlw	low STR_4
  6352  0071BE  6F77               	movwf	printf@fmt& (0+255),b
  6353  0071C0  0EFE               	movlw	high STR_4
  6354  0071C2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  6355  0071C4  0E0B               	movlw	11
  6356  0071C6  6F79               	movwf	(?_printf+2)& (0+255),b
  6357  0071C8  ECF7  F04B         	call	_printf	;wreg free
  6358                           
  6359                           ;app/app_src/application.c: 633:  }
  6360  0071CC  EFFD  F038         	goto	l334
  6361  0071D0                     l330:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;app/app_src/application.c: 635:   RSSITarget = temp;
  6365  0071D0  0060  F218  F0FB   	movff	cmdSetCADRSSI@temp,_RSSITarget
  6366  0071D6                     
  6367                           ; BSR set to: 0
  6368                           ;app/app_src/application.c: 636:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1,RSSITarget);
  6369  0071D6  0E00               	movlw	0
  6370  0071D8  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6371  0071DA  0E1E               	movlw	30
  6372  0071DC  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6373  0071DE  0060  F3EC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  6374  0071E4  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
  6375  0071E8                     
  6376                           ;app/app_src/application.c: 637:   initRadio();
  6377  0071E8  EC7D  F027         	call	_initRadio	;wreg free
  6378  0071EC                     
  6379                           ;app/app_src/application.c: 638:   printf("OK\r\n");
  6380  0071EC  0ED7               	movlw	low STR_11
  6381  0071EE  0100               	movlb	0	; () banked
  6382  0071F0  6F77               	movwf	printf@fmt& (0+255),b
  6383  0071F2  0EFF               	movlw	high STR_11
  6384  0071F4  6F78               	movwf	(printf@fmt+1)& (0+255),b
  6385  0071F6  ECF7  F04B         	call	_printf	;wreg free
  6386  0071FA                     l334:
  6387  0071FA  0012               	return		;funcret
  6388  0071FC                     __end_of_cmdSetCADRSSI:
  6389                           	opt callstack 0
  6390                           
  6391 ;; *************** function _strtol *****************
  6392 ;; Defined at:
  6393 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtol.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  s               2   51[COMRAM] PTR const unsigned char 
  6396 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), 
  6397 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  6398 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), 
  6399 ;;  base            2   55[COMRAM] int 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  4   51[COMRAM] long 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6411 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;Total ram usage:        6 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:   10
  6418 ;; This function calls:
  6419 ;;		___strtoxl
  6420 ;; This function is called by:
  6421 ;;		_cmdSetCADRSSI
  6422 ;;		_cmdSetSF
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text19
  6427  009038                     __ptext19:
  6428                           	opt callstack 0
  6429  009038                     _strtol:
  6430                           	opt callstack 17
  6431  009038  0060  F0D0  F010   	movff	strtol@s,___strtoxl@s
  6432  00903E  0060  F0D4  F011   	movff	strtol@s+1,___strtoxl@s+1
  6433  009044  0060  F0D8  F012   	movff	strtol@endptr,___strtoxl@endptr
  6434  00904A  0060  F0DC  F013   	movff	strtol@endptr+1,___strtoxl@endptr+1
  6435  009050  0060  F0E0  F014   	movff	strtol@base,___strtoxl@base
  6436  009056  0060  F0E4  F015   	movff	strtol@base+1,___strtoxl@base+1
  6437  00905C  0E01               	movlw	1
  6438  00905E  6E16               	movwf	___strtoxl@is_signed^0,c
  6439  009060  EC79  F007         	call	___strtoxl	;wreg free
  6440  009064  0060  F040  F034   	movff	?___strtoxl,?_strtol
  6441  00906A  0060  F044  F035   	movff	?___strtoxl+1,?_strtol+1
  6442  009070  0060  F048  F036   	movff	?___strtoxl+2,?_strtol+2
  6443  009076  0060  F04C  F037   	movff	?___strtoxl+3,?_strtol+3
  6444  00907C  0012               	return		;funcret
  6445  00907E                     __end_of_strtol:
  6446                           	opt callstack 0
  6447                           
  6448 ;; *************** function _cmdSetBaud *****************
  6449 ;; Defined at:
  6450 ;;		line 699 in file "app/app_src/application.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  atCommand       2   57[COMRAM] PTR unsigned char 
  6453 ;;		 -> atCommand(80), 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  ptr             2   60[COMRAM] PTR unsigned char 
  6456 ;;		 -> atCommand(80), NULL(0), 
  6457 ;;  tempbaud        1   59[COMRAM] unsigned char 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;Total ram usage:        5 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:   11
  6474 ;; This function calls:
  6475 ;;		_strtok
  6476 ;;		_strtoul
  6477 ;; This function is called by:
  6478 ;;		_executeATCommand
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text20
  6483  0086E6                     __ptext20:
  6484                           	opt callstack 0
  6485  0086E6                     _cmdSetBaud:
  6486                           	opt callstack 17
  6487  0086E6                     
  6488                           ;app/app_src/application.c: 699: static void cmdSetBaud(char* atCommand);app/app_src/app
      +                          lication.c: 700: {;app/app_src/application.c: 701:     uint8_t tempbaud;;app/app_src/app
      +                          lication.c: 702:     char *ptr;;app/app_src/application.c: 703:     ptr = strtok(atComma
      +                          nd,"=");
  6489  0086E6  0060  F0E8  F00F   	movff	cmdSetBaud@atCommand,strtok@s
  6490  0086EC  0060  F0EC  F010   	movff	cmdSetBaud@atCommand+1,strtok@s+1
  6491  0086F2  0EDF               	movlw	low (STR_16+3)
  6492  0086F4  6E11               	movwf	strtok@sep^0,c
  6493  0086F6  0EFF               	movlw	high (STR_16+3)
  6494  0086F8  6E12               	movwf	(strtok@sep+1)^0,c
  6495  0086FA  EC8A  F030         	call	_strtok	;wreg free
  6496  0086FE  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6497  008704  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6498                           
  6499                           ;app/app_src/application.c: 704:     ptr = strtok(((void*)0),"\r");
  6500  00870A  0E00               	movlw	0
  6501  00870C  6E0F               	movwf	strtok@s^0,c
  6502  00870E  0E00               	movlw	0
  6503  008710  6E10               	movwf	(strtok@s+1)^0,c
  6504  008712  0EFD               	movlw	low STR_53
  6505  008714  6E11               	movwf	strtok@sep^0,c
  6506  008716  0EFF               	movlw	high STR_53
  6507  008718  6E12               	movwf	(strtok@sep+1)^0,c
  6508  00871A  EC8A  F030         	call	_strtok	;wreg free
  6509  00871E  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6510  008724  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6511                           
  6512                           ;app/app_src/application.c: 705:     tempbaud = (uint8_t)strtoul(ptr,((void*)0),10);
  6513  00872A  0060  F0F4  F034   	movff	cmdSetBaud@ptr,strtoul@s
  6514  008730  0060  F0F8  F035   	movff	cmdSetBaud@ptr+1,strtoul@s+1
  6515  008736  0E00               	movlw	0
  6516  008738  6E36               	movwf	strtoul@endptr^0,c
  6517  00873A  0E00               	movlw	0
  6518  00873C  6E37               	movwf	(strtoul@endptr+1)^0,c
  6519  00873E  0E00               	movlw	0
  6520  008740  6E39               	movwf	(strtoul@base+1)^0,c
  6521  008742  0E0A               	movlw	10
  6522  008744  6E38               	movwf	strtoul@base^0,c
  6523  008746  EC3F  F048         	call	_strtoul	;wreg free
  6524  00874A  5034               	movf	?_strtoul^0,w,c
  6525  00874C  6E3C               	movwf	cmdSetBaud@tempbaud^0,c
  6526  00874E                     
  6527                           ;app/app_src/application.c: 706:     tempbaud++;
  6528  00874E  2A3C               	incf	cmdSetBaud@tempbaud^0,f,c
  6529  008750  0012               	return		;funcret
  6530  008752                     __end_of_cmdSetBaud:
  6531                           	opt callstack 0
  6532                           
  6533 ;; *************** function _strtok *****************
  6534 ;; Defined at:
  6535 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtok.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  s               2   14[COMRAM] PTR unsigned char 
  6538 ;;		 -> atCommand(80), NULL(0), 
  6539 ;;  sep             2   16[COMRAM] PTR const unsigned char 
  6540 ;;		 -> STR_53(2), STR_52(2), 
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  2   14[COMRAM] PTR unsigned char 
  6545 ;; Registers used:
  6546 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;Total ram usage:        4 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    9
  6559 ;; This function calls:
  6560 ;;		_strcspn
  6561 ;;		_strspn
  6562 ;; This function is called by:
  6563 ;;		_cmdSetBaud
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           	psect	text21
  6568  006114                     __ptext21:
  6569                           	opt callstack 0
  6570  006114                     _strtok:
  6571                           	opt callstack 18
  6572  006114  500F               	movf	strtok@s^0,w,c
  6573  006116  1010               	iorwf	(strtok@s+1)^0,w,c
  6574  006118  A4D8               	btfss	status,2,c
  6575  00611A  EF91  F030         	goto	u15551
  6576  00611E  EF93  F030         	goto	u15550
  6577  006122                     u15551:
  6578  006122  EFA8  F030         	goto	l15811
  6579  006126                     u15550:
  6580  006126  0060  F56C  F00F   	movff	strtok@p,strtok@s
  6581  00612C  0060  F570  F010   	movff	strtok@p+1,strtok@s+1
  6582  006132  500F               	movf	strtok@s^0,w,c
  6583  006134  1010               	iorwf	(strtok@s+1)^0,w,c
  6584  006136  A4D8               	btfss	status,2,c
  6585  006138  EFA0  F030         	goto	u15561
  6586  00613C  EFA2  F030         	goto	u15560
  6587  006140                     u15561:
  6588  006140  EFA8  F030         	goto	l15811
  6589  006144                     u15560:
  6590  006144  0E00               	movlw	0
  6591  006146  6E0F               	movwf	?_strtok^0,c
  6592  006148  0E00               	movlw	0
  6593  00614A  6E10               	movwf	(?_strtok+1)^0,c
  6594  00614C  EF0E  F031         	goto	l3990
  6595  006150                     l15811:
  6596  006150  0060  F03C  F008   	movff	strtok@s,strspn@s
  6597  006156  0060  F040  F009   	movff	strtok@s+1,strspn@s+1
  6598  00615C  0060  F044  F00A   	movff	strtok@sep,strspn@c
  6599  006162  0060  F048  F00B   	movff	strtok@sep+1,strspn@c+1
  6600  006168  EC52  F042         	call	_strspn	;wreg free
  6601  00616C  5008               	movf	?_strspn^0,w,c
  6602  00616E  260F               	addwf	strtok@s^0,f,c
  6603  006170  5009               	movf	(?_strspn+1)^0,w,c
  6604  006172  2210               	addwfc	(strtok@s+1)^0,f,c
  6605  006174  0060  F03F  FFD9   	movff	strtok@s,fsr2l
  6606  00617A  0060  F043  FFDA   	movff	strtok@s+1,fsr2h
  6607  006180  50DF               	movf	indf2,w,c
  6608  006182  A4D8               	btfss	status,2,c
  6609  006184  EFC6  F030         	goto	u15571
  6610  006188  EFC8  F030         	goto	u15570
  6611  00618C                     u15571:
  6612  00618C  EFD5  F030         	goto	l15819
  6613  006190                     u15570:
  6614  006190  0E00               	movlw	0
  6615  006192  0101               	movlb	1	; () banked
  6616  006194  6F5B               	movwf	strtok@p& (0+255),b
  6617  006196  0E00               	movlw	0
  6618  006198  6F5C               	movwf	(strtok@p+1)& (0+255),b
  6619  00619A  0060  F56C  F00F   	movff	strtok@p,?_strtok
  6620  0061A0  0060  F570  F010   	movff	strtok@p+1,?_strtok+1
  6621  0061A6  EF0E  F031         	goto	l3990
  6622  0061AA                     l15819:
  6623  0061AA  0060  F03C  F008   	movff	strtok@s,strcspn@s
  6624  0061B0  0060  F040  F009   	movff	strtok@s+1,strcspn@s+1
  6625  0061B6  0060  F044  F00A   	movff	strtok@sep,strcspn@c
  6626  0061BC  0060  F048  F00B   	movff	strtok@sep+1,strcspn@c+1
  6627  0061C2  EC8D  F042         	call	_strcspn	;wreg free
  6628  0061C6  5008               	movf	?_strcspn^0,w,c
  6629  0061C8  240F               	addwf	strtok@s^0,w,c
  6630  0061CA  0101               	movlb	1	; () banked
  6631  0061CC  6F5B               	movwf	strtok@p& (0+255),b
  6632  0061CE  5009               	movf	(?_strcspn+1)^0,w,c
  6633  0061D0  2010               	addwfc	(strtok@s+1)^0,w,c
  6634  0061D2  6F5C               	movwf	(strtok@p+1)& (0+255),b
  6635  0061D4                     
  6636                           ; BSR set to: 1
  6637  0061D4  0060  F56F  FFD9   	movff	strtok@p,fsr2l
  6638  0061DA  0060  F573  FFDA   	movff	strtok@p+1,fsr2h
  6639  0061E0  50DF               	movf	indf2,w,c
  6640  0061E2  B4D8               	btfsc	status,2,c
  6641  0061E4  EFF6  F030         	goto	u15581
  6642  0061E8  EFF8  F030         	goto	u15580
  6643  0061EC                     u15581:
  6644  0061EC  EF04  F031         	goto	l15827
  6645  0061F0                     u15580:
  6646  0061F0                     
  6647                           ; BSR set to: 1
  6648  0061F0  0060  F56F  FFD9   	movff	strtok@p,fsr2l
  6649  0061F6  0060  F573  FFDA   	movff	strtok@p+1,fsr2h
  6650  0061FC  0E00               	movlw	0
  6651  0061FE  6EDF               	movwf	indf2,c
  6652  006200                     
  6653                           ; BSR set to: 1
  6654  006200  4B5B               	infsnz	strtok@p& (0+255),f,b
  6655  006202  2B5C               	incf	(strtok@p+1)& (0+255),f,b
  6656  006204  EF08  F031         	goto	l3993
  6657  006208                     l15827:
  6658                           
  6659                           ; BSR set to: 1
  6660  006208  0E00               	movlw	0
  6661  00620A  6F5B               	movwf	strtok@p& (0+255),b
  6662  00620C  0E00               	movlw	0
  6663  00620E  6F5C               	movwf	(strtok@p+1)& (0+255),b
  6664  006210                     l3993:
  6665                           
  6666                           ; BSR set to: 1
  6667  006210  0060  F03C  F00F   	movff	strtok@s,?_strtok
  6668  006216  0060  F040  F010   	movff	strtok@s+1,?_strtok+1
  6669  00621C                     l3990:
  6670  00621C  0012               	return		;funcret
  6671  00621E                     __end_of_strtok:
  6672                           	opt callstack 0
  6673                           
  6674 ;; *************** function _strspn *****************
  6675 ;; Defined at:
  6676 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strspn.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6679 ;;		 -> atCommand(80), NULL(0), 
  6680 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6681 ;;		 -> STR_53(2), STR_52(2), 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  i               2   12[COMRAM] unsigned int 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  2    7[COMRAM] unsigned int 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;Total ram usage:        7 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:    8
  6700 ;; This function calls:
  6701 ;;		_strchr
  6702 ;; This function is called by:
  6703 ;;		_strtok
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text22
  6708  0084A4                     __ptext22:
  6709                           	opt callstack 0
  6710  0084A4                     _strspn:
  6711                           	opt callstack 18
  6712  0084A4  0E00               	movlw	0
  6713  0084A6  6E0E               	movwf	(strspn@i+1)^0,c
  6714  0084A8  0E00               	movlw	0
  6715  0084AA  6E0D               	movwf	strspn@i^0,c
  6716  0084AC  EF5C  F042         	goto	l15537
  6717  0084B0                     l15535:
  6718  0084B0  4A08               	infsnz	strspn@s^0,f,c
  6719  0084B2  2A09               	incf	(strspn@s+1)^0,f,c
  6720  0084B4  4A0D               	infsnz	strspn@i^0,f,c
  6721  0084B6  2A0E               	incf	(strspn@i+1)^0,f,c
  6722  0084B8                     l15537:
  6723  0084B8  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6724  0084BE  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6725  0084C4  50DF               	movf	indf2,w,c
  6726  0084C6  B4D8               	btfsc	status,2,c
  6727  0084C8  EF68  F042         	goto	u15051
  6728  0084CC  EF6A  F042         	goto	u15050
  6729  0084D0                     u15051:
  6730  0084D0  EF86  F042         	goto	l4124
  6731  0084D4                     u15050:
  6732  0084D4  0060  F028  F002   	movff	strspn@c,strchr@s
  6733  0084DA  0060  F02C  F003   	movff	strspn@c+1,strchr@s+1
  6734  0084E0  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6735  0084E6  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6736  0084EC  50DF               	movf	indf2,w,c
  6737  0084EE  6E0C               	movwf	??_strspn^0,c
  6738  0084F0  500C               	movf	??_strspn^0,w,c
  6739  0084F2  6E04               	movwf	strchr@c^0,c
  6740  0084F4  6A05               	clrf	(strchr@c+1)^0,c
  6741  0084F6  EC9C  F03F         	call	_strchr	;wreg free
  6742  0084FA  5002               	movf	?_strchr^0,w,c
  6743  0084FC  1003               	iorwf	(?_strchr+1)^0,w,c
  6744  0084FE  A4D8               	btfss	status,2,c
  6745  008500  EF84  F042         	goto	u15061
  6746  008504  EF86  F042         	goto	u15060
  6747  008508                     u15061:
  6748  008508  EF58  F042         	goto	l15535
  6749  00850C                     u15060:
  6750  00850C                     l4124:
  6751  00850C  0060  F034  F008   	movff	strspn@i,?_strspn
  6752  008512  0060  F038  F009   	movff	strspn@i+1,?_strspn+1
  6753  008518  0012               	return		;funcret
  6754  00851A                     __end_of_strspn:
  6755                           	opt callstack 0
  6756                           
  6757 ;; *************** function _strcspn *****************
  6758 ;; Defined at:
  6759 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcspn.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6762 ;;		 -> atCommand(80), NULL(0), 
  6763 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6764 ;;		 -> STR_53(2), STR_52(2), 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  i               2   12[COMRAM] unsigned int 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  2    7[COMRAM] unsigned int 
  6769 ;; Registers used:
  6770 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;Total ram usage:        7 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:    8
  6783 ;; This function calls:
  6784 ;;		_strchr
  6785 ;; This function is called by:
  6786 ;;		_strtok
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text23
  6791  00851A                     __ptext23:
  6792                           	opt callstack 0
  6793  00851A                     _strcspn:
  6794                           	opt callstack 18
  6795  00851A  0E00               	movlw	0
  6796  00851C  6E0E               	movwf	(strcspn@i+1)^0,c
  6797  00851E  0E00               	movlw	0
  6798  008520  6E0D               	movwf	strcspn@i^0,c
  6799  008522  EF97  F042         	goto	l15545
  6800  008526                     l15543:
  6801  008526  4A08               	infsnz	strcspn@s^0,f,c
  6802  008528  2A09               	incf	(strcspn@s+1)^0,f,c
  6803  00852A  4A0D               	infsnz	strcspn@i^0,f,c
  6804  00852C  2A0E               	incf	(strcspn@i+1)^0,f,c
  6805  00852E                     l15545:
  6806  00852E  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6807  008534  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6808  00853A  50DF               	movf	indf2,w,c
  6809  00853C  B4D8               	btfsc	status,2,c
  6810  00853E  EFA3  F042         	goto	u15071
  6811  008542  EFA5  F042         	goto	u15070
  6812  008546                     u15071:
  6813  008546  EFC1  F042         	goto	l4105
  6814  00854A                     u15070:
  6815  00854A  0060  F028  F002   	movff	strcspn@c,strchr@s
  6816  008550  0060  F02C  F003   	movff	strcspn@c+1,strchr@s+1
  6817  008556  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6818  00855C  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6819  008562  50DF               	movf	indf2,w,c
  6820  008564  6E0C               	movwf	??_strcspn^0,c
  6821  008566  500C               	movf	??_strcspn^0,w,c
  6822  008568  6E04               	movwf	strchr@c^0,c
  6823  00856A  6A05               	clrf	(strchr@c+1)^0,c
  6824  00856C  EC9C  F03F         	call	_strchr	;wreg free
  6825  008570  5002               	movf	?_strchr^0,w,c
  6826  008572  1003               	iorwf	(?_strchr+1)^0,w,c
  6827  008574  B4D8               	btfsc	status,2,c
  6828  008576  EFBF  F042         	goto	u15081
  6829  00857A  EFC1  F042         	goto	u15080
  6830  00857E                     u15081:
  6831  00857E  EF93  F042         	goto	l15543
  6832  008582                     u15080:
  6833  008582                     l4105:
  6834  008582  0060  F034  F008   	movff	strcspn@i,?_strcspn
  6835  008588  0060  F038  F009   	movff	strcspn@i+1,?_strcspn+1
  6836  00858E  0012               	return		;funcret
  6837  008590                     __end_of_strcspn:
  6838                           	opt callstack 0
  6839                           
  6840 ;; *************** function _cmdSetAddr *****************
  6841 ;; Defined at:
  6842 ;;		line 276 in file "app/app_src/application.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  cmd             2   29[BANK0 ] PTR unsigned char 
  6845 ;;		 -> atCommand(80), 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;  tempaddr        2   35[BANK0 ] unsigned short 
  6848 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  6849 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  6850 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;Total ram usage:        8 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:   16
  6867 ;; This function calls:
  6868 ;;		_printf
  6869 ;;		_strstr
  6870 ;;		_strtoul
  6871 ;; This function is called by:
  6872 ;;		_executeATCommand
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text24
  6877  007B6C                     __ptext24:
  6878                           	opt callstack 0
  6879  007B6C                     _cmdSetAddr:
  6880                           	opt callstack 12
  6881  007B6C                     
  6882                           ;app/app_src/application.c: 277:  uint16_t tempaddr;;app/app_src/application.c: 278:  ch
      +                          ar *p1,*p2;;app/app_src/application.c: 279:  p1 = strstr(atCommand,"=") + 1;
  6883  007B6C  0E30               	movlw	low _atCommand
  6884  007B6E  6E0D               	movwf	strstr@h^0,c
  6885  007B70  0E02               	movlw	high _atCommand
  6886  007B72  6E0E               	movwf	(strstr@h+1)^0,c
  6887  007B74  0EDF               	movlw	low (STR_16+3)
  6888  007B76  6E0F               	movwf	strstr@n^0,c
  6889  007B78  0EFF               	movlw	high (STR_16+3)
  6890  007B7A  6E10               	movwf	(strstr@n+1)^0,c
  6891  007B7C  EC17  F032         	call	_strstr	;wreg free
  6892  007B80  0E01               	movlw	1
  6893  007B82  240D               	addwf	?_strstr^0,w,c
  6894  007B84  0100               	movlb	0	; () banked
  6895  007B86  6F81               	movwf	cmdSetAddr@p1& (0+255),b
  6896  007B88  0E00               	movlw	0
  6897  007B8A  200E               	addwfc	(?_strstr+1)^0,w,c
  6898  007B8C  6F82               	movwf	(cmdSetAddr@p1+1)& (0+255),b
  6899  007B8E                     
  6900                           ; BSR set to: 0
  6901                           ;app/app_src/application.c: 281:  tempaddr = strtoul(p1,p2,16);
  6902  007B8E  0060  F204  F034   	movff	cmdSetAddr@p1,strtoul@s
  6903  007B94  0060  F208  F035   	movff	cmdSetAddr@p1+1,strtoul@s+1
  6904  007B9A  0060  F1FC  F036   	movff	cmdSetAddr@p2,strtoul@endptr
  6905  007BA0  0060  F200  F037   	movff	cmdSetAddr@p2+1,strtoul@endptr+1
  6906  007BA6  0E00               	movlw	0
  6907  007BA8  6E39               	movwf	(strtoul@base+1)^0,c
  6908  007BAA  0E10               	movlw	16
  6909  007BAC  6E38               	movwf	strtoul@base^0,c
  6910  007BAE  EC3F  F048         	call	_strtoul	;wreg free
  6911  007BB2  0060  F0D0  F083   	movff	?_strtoul,cmdSetAddr@tempaddr
  6912  007BB8  0060  F0D4  F084   	movff	?_strtoul+1,cmdSetAddr@tempaddr+1
  6913  007BBE                     
  6914                           ;app/app_src/application.c: 283:  if((tempaddr != 0x0000) && (tempaddr != 0xFFFF)){
  6915  007BBE  0100               	movlb	0	; () banked
  6916  007BC0  5183               	movf	cmdSetAddr@tempaddr& (0+255),w,b
  6917  007BC2  1184               	iorwf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6918  007BC4  B4D8               	btfsc	status,2,c
  6919  007BC6  EFE7  F03D         	goto	u16251
  6920  007BCA  EFE9  F03D         	goto	u16250
  6921  007BCE                     u16251:
  6922  007BCE  EF02  F03E         	goto	l16217
  6923  007BD2                     u16250:
  6924  007BD2                     
  6925                           ; BSR set to: 0
  6926  007BD2  2983               	incf	cmdSetAddr@tempaddr& (0+255),w,b
  6927  007BD4  E108               	bnz	u16260
  6928  007BD6  2984               	incf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6929  007BD8  B4D8               	btfsc	status,2,c
  6930  007BDA  EFF1  F03D         	goto	u16261
  6931  007BDE  EFF3  F03D         	goto	u16260
  6932  007BE2                     u16261:
  6933  007BE2  EF02  F03E         	goto	l16217
  6934  007BE6                     u16260:
  6935  007BE6                     
  6936                           ; BSR set to: 0
  6937                           ;app/app_src/application.c: 284:   currentAddr0 = (uint8_t)(tempaddr >> 8);
  6938  007BE6  5184               	movf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6939  007BE8  0101               	movlb	1	; () banked
  6940  007BEA  6FEB               	movwf	_currentAddr0& (0+255),b
  6941  007BEC                     
  6942                           ; BSR set to: 1
  6943                           ;app/app_src/application.c: 285:   currentAddr1 = (uint8_t)(tempaddr & 0xFF);
  6944  007BEC  0060  F20C  F1EA   	movff	cmdSetAddr@tempaddr,_currentAddr1
  6945  007BF2                     
  6946                           ; BSR set to: 1
  6947                           ;app/app_src/application.c: 286:   printf("OK\r\n");
  6948  007BF2  0ED7               	movlw	low STR_11
  6949  007BF4  0100               	movlb	0	; () banked
  6950  007BF6  6F77               	movwf	printf@fmt& (0+255),b
  6951  007BF8  0EFF               	movlw	high STR_11
  6952  007BFA  6F78               	movwf	(printf@fmt+1)& (0+255),b
  6953  007BFC  ECF7  F04B         	call	_printf	;wreg free
  6954                           
  6955                           ;app/app_src/application.c: 287:  }
  6956  007C00  EF0A  F03E         	goto	l253
  6957  007C04                     l16217:
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;app/app_src/application.c: 289:   printf("NOT OK:%u\r\n", NOT_VADLID_ADDR);
  6961  007C04  0ECC               	movlw	low STR_4
  6962  007C06  6F77               	movwf	printf@fmt& (0+255),b
  6963  007C08  0EFE               	movlw	high STR_4
  6964  007C0A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  6965  007C0C  0E05               	movlw	5
  6966  007C0E  6F79               	movwf	(?_printf+2)& (0+255),b
  6967  007C10  ECF7  F04B         	call	_printf	;wreg free
  6968  007C14                     l253:
  6969  007C14  0012               	return		;funcret
  6970  007C16                     __end_of_cmdSetAddr:
  6971                           	opt callstack 0
  6972                           
  6973 ;; *************** function _cmdSetAES *****************
  6974 ;; Defined at:
  6975 ;;		line 417 in file "app/app_src/application.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  cmd             2   29[BANK0 ] PTR unsigned char 
  6978 ;;		 -> atCommand(80), 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  temp            3   65[BANK0 ] unsigned char [3]
  6981 ;;  p2              2   63[BANK0 ] PTR unsigned char 
  6982 ;;		 -> cmdSetSF@CHstr(3), STR_53(2), STR_52(2), cmdSetCADRSSI@CHstr(3), 
  6983 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6984 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6985 ;;  byte            1   69[BANK0 ] unsigned char 
  6986 ;;  i               1   72[BANK0 ] unsigned char 
  6987 ;;  AESstr         32   31[BANK0 ] unsigned char [32]
  6988 ;;  p1              2   70[BANK0 ] PTR unsigned char 
  6989 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  6990 ;;  key_type        1   68[BANK0 ] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;      Totals:         2      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7004 ;;Total ram usage:       46 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:   16
  7007 ;; This function calls:
  7008 ;;		_DATAEE_WriteByte_Platform
  7009 ;;		_memcpy
  7010 ;;		_printf
  7011 ;;		_strlen
  7012 ;;		_strstr
  7013 ;;		_strtoul
  7014 ;; This function is called by:
  7015 ;;		_executeATCommand
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text25
  7020  003430                     __ptext25:
  7021                           	opt callstack 0
  7022  003430                     _cmdSetAES:
  7023                           	opt callstack 12
  7024  003430                     
  7025                           ;app/app_src/application.c: 421:  p1 = strstr(atCommand,":") + 1;
  7026  003430  0E30               	movlw	low _atCommand
  7027  003432  6E0D               	movwf	strstr@h^0,c
  7028  003434  0E02               	movlw	high _atCommand
  7029  003436  6E0E               	movwf	(strstr@h+1)^0,c
  7030  003438  0E66               	movlw	low (STR_60+5)
  7031  00343A  6E0F               	movwf	strstr@n^0,c
  7032  00343C  0EFF               	movlw	high (STR_60+5)
  7033  00343E  6E10               	movwf	(strstr@n+1)^0,c
  7034  003440  EC17  F032         	call	_strstr	;wreg free
  7035  003444  0E01               	movlw	1
  7036  003446  240D               	addwf	?_strstr^0,w,c
  7037  003448  0100               	movlb	0	; () banked
  7038  00344A  6FA6               	movwf	cmdSetAES@p1& (0+255),b
  7039  00344C  0E00               	movlw	0
  7040  00344E  200E               	addwfc	(?_strstr+1)^0,w,c
  7041  003450  6FA7               	movwf	(cmdSetAES@p1+1)& (0+255),b
  7042  003452                     
  7043                           ; BSR set to: 0
  7044                           ;app/app_src/application.c: 422:     if(!p1){
  7045  003452  51A6               	movf	cmdSetAES@p1& (0+255),w,b
  7046  003454  11A7               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  7047  003456  A4D8               	btfss	status,2,c
  7048  003458  EF30  F01A         	goto	u16281
  7049  00345C  EF32  F01A         	goto	u16280
  7050  003460                     u16281:
  7051  003460  EF51  F01A         	goto	l16281
  7052  003464                     u16280:
  7053  003464                     
  7054                           ; BSR set to: 0
  7055                           ;app/app_src/application.c: 423:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7056  003464  0ECC               	movlw	low STR_4
  7057  003466  6F77               	movwf	printf@fmt& (0+255),b
  7058  003468  0EFE               	movlw	high STR_4
  7059  00346A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  7060  00346C  0E09               	movlw	9
  7061  00346E  6F79               	movwf	(?_printf+2)& (0+255),b
  7062  003470  ECF7  F04B         	call	_printf	;wreg free
  7063  003474  EF43  F01B         	goto	l277
  7064  003478                     l16271:
  7065  003478  0E4E               	movlw	78
  7066  00347A  0100               	movlb	0	; () banked
  7067  00347C  6FA4               	movwf	cmdSetAES@key_type& (0+255),b
  7068  00347E  EF7A  F01A         	goto	l16283
  7069  003482                     l16273:
  7070  003482  0E41               	movlw	65
  7071  003484  0100               	movlb	0	; () banked
  7072  003486  6FA4               	movwf	cmdSetAES@key_type& (0+255),b
  7073  003488  EF7A  F01A         	goto	l16283
  7074  00348C                     l16275:
  7075                           
  7076                           ;app/app_src/application.c: 430:             printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  7077  00348C  0ECC               	movlw	low STR_4
  7078  00348E  0100               	movlb	0	; () banked
  7079  003490  6F77               	movwf	printf@fmt& (0+255),b
  7080  003492  0EFE               	movlw	high STR_4
  7081  003494  6F78               	movwf	(printf@fmt+1)& (0+255),b
  7082  003496  0E0D               	movlw	13
  7083  003498  6F79               	movwf	(?_printf+2)& (0+255),b
  7084  00349A  ECF7  F04B         	call	_printf	;wreg free
  7085  00349E  EF43  F01B         	goto	l277
  7086  0034A2                     l16281:
  7087                           
  7088                           ; BSR set to: 0
  7089  0034A2  0060  F29B  FFF6   	movff	cmdSetAES@p1,tblptrl
  7090  0034A8  0060  F29F  FFF7   	movff	cmdSetAES@p1+1,tblptrh
  7091  0034AE  0E00               	movlw	low (__mediumconst shr (0+16))
  7092  0034B0  6EF8               	movwf	tblptru,c
  7093  0034B2  0E0F               	movlw	(high __ramtop+-1)
  7094  0034B4  64F7               	cpfsgt	tblptrh,c
  7095  0034B6  D003               	bra	u16297
  7096  0034B8  0008               	tblrd		*
  7097  0034BA  50F5               	movf	tablat,w,c
  7098  0034BC  D007               	bra	u16290
  7099  0034BE                     u16297:
  7100  0034BE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7101  0034C4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7102  0034CA  50EF               	movf	indf0,w,c
  7103  0034CC                     u16290:
  7104  0034CC  6E5C               	movwf	??_cmdSetAES^0,c
  7105  0034CE  6A5D               	clrf	(??_cmdSetAES+1)^0,c
  7106                           
  7107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7108                           ; Switch size 1, requested type "simple"
  7109                           ; Number of cases is 1, Range of values is 0 to 0
  7110                           ; switch strategies available:
  7111                           ; Name         Instructions Cycles
  7112                           ; simple_byte            4     3 (average)
  7113                           ;	Chosen strategy is simple_byte
  7114  0034D0  505D               	movf	(??_cmdSetAES+1)^0,w,c
  7115  0034D2  0A00               	xorlw	0	; case 0
  7116  0034D4  B4D8               	btfsc	status,2,c
  7117  0034D6  EF6F  F01A         	goto	l17829
  7118  0034DA  EF46  F01A         	goto	l16275
  7119  0034DE                     l17829:
  7120                           
  7121                           ; Switch size 1, requested type "simple"
  7122                           ; Number of cases is 2, Range of values is 65 to 78
  7123                           ; switch strategies available:
  7124                           ; Name         Instructions Cycles
  7125                           ; simple_byte            7     4 (average)
  7126                           ;	Chosen strategy is simple_byte
  7127  0034DE  505C               	movf	??_cmdSetAES^0,w,c
  7128  0034E0  0A41               	xorlw	65	; case 65
  7129  0034E2  B4D8               	btfsc	status,2,c
  7130  0034E4  EF41  F01A         	goto	l16273
  7131  0034E8  0A0F               	xorlw	15	; case 78
  7132  0034EA  B4D8               	btfsc	status,2,c
  7133  0034EC  EF3C  F01A         	goto	l16271
  7134  0034F0  EF46  F01A         	goto	l16275
  7135  0034F4                     l16283:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;app/app_src/application.c: 433:     p1 = strstr(atCommand,"=") + 1;
  7139  0034F4  0E30               	movlw	low _atCommand
  7140  0034F6  6E0D               	movwf	strstr@h^0,c
  7141  0034F8  0E02               	movlw	high _atCommand
  7142  0034FA  6E0E               	movwf	(strstr@h+1)^0,c
  7143  0034FC  0EDF               	movlw	low (STR_16+3)
  7144  0034FE  6E0F               	movwf	strstr@n^0,c
  7145  003500  0EFF               	movlw	high (STR_16+3)
  7146  003502  6E10               	movwf	(strstr@n+1)^0,c
  7147  003504  EC17  F032         	call	_strstr	;wreg free
  7148  003508  0E01               	movlw	1
  7149  00350A  240D               	addwf	?_strstr^0,w,c
  7150  00350C  0100               	movlb	0	; () banked
  7151  00350E  6FA6               	movwf	cmdSetAES@p1& (0+255),b
  7152  003510  0E00               	movlw	0
  7153  003512  200E               	addwfc	(?_strstr+1)^0,w,c
  7154  003514  6FA7               	movwf	(cmdSetAES@p1+1)& (0+255),b
  7155  003516                     
  7156                           ; BSR set to: 0
  7157                           ;app/app_src/application.c: 434:     if(!p1){
  7158  003516  51A6               	movf	cmdSetAES@p1& (0+255),w,b
  7159  003518  11A7               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  7160  00351A  A4D8               	btfss	status,2,c
  7161  00351C  EF92  F01A         	goto	u16301
  7162  003520  EF94  F01A         	goto	u16300
  7163  003524                     u16301:
  7164  003524  EF9E  F01A         	goto	l16291
  7165  003528                     u16300:
  7166  003528                     
  7167                           ; BSR set to: 0
  7168                           ;app/app_src/application.c: 435:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7169  003528  0ECC               	movlw	low STR_4
  7170  00352A  6F77               	movwf	printf@fmt& (0+255),b
  7171  00352C  0EFE               	movlw	high STR_4
  7172  00352E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  7173  003530  0E09               	movlw	9
  7174  003532  6F79               	movwf	(?_printf+2)& (0+255),b
  7175  003534  ECF7  F04B         	call	_printf	;wreg free
  7176  003538  EF43  F01B         	goto	l277
  7177  00353C                     l16291:
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;app/app_src/application.c: 439:  if(strlen(p1) != 32){
  7181  00353C  0060  F298  F002   	movff	cmdSetAES@p1,strlen@s
  7182  003542  0060  F29C  F003   	movff	cmdSetAES@p1+1,strlen@s+1
  7183  003548  EC91  F045         	call	_strlen	;wreg free
  7184  00354C  0E20               	movlw	32
  7185  00354E  1802               	xorwf	?_strlen^0,w,c
  7186  003550  1003               	iorwf	(?_strlen+1)^0,w,c
  7187  003552  B4D8               	btfsc	status,2,c
  7188  003554  EFAE  F01A         	goto	u16311
  7189  003558  EFB0  F01A         	goto	u16310
  7190  00355C                     u16311:
  7191  00355C  EFBB  F01A         	goto	l16297
  7192  003560                     u16310:
  7193  003560                     
  7194                           ;app/app_src/application.c: 440:   printf("NOT OK:%u\r\n",KEYLENERROR);
  7195  003560  0ECC               	movlw	low STR_4
  7196  003562  0100               	movlb	0	; () banked
  7197  003564  6F77               	movwf	printf@fmt& (0+255),b
  7198  003566  0EFE               	movlw	high STR_4
  7199  003568  6F78               	movwf	(printf@fmt+1)& (0+255),b
  7200  00356A  0E08               	movlw	8
  7201  00356C  6F79               	movwf	(?_printf+2)& (0+255),b
  7202  00356E  ECF7  F04B         	call	_printf	;wreg free
  7203  003572  EF43  F01B         	goto	l277
  7204  003576                     l16297:
  7205                           
  7206                           ;app/app_src/application.c: 443:  memcpy(AESstr,p1,32);
  7207  003576  0E7F               	movlw	low cmdSetAES@AESstr
  7208  003578  6E08               	movwf	memcpy@d1^0,c
  7209  00357A  0E00               	movlw	high cmdSetAES@AESstr
  7210  00357C  6E09               	movwf	(memcpy@d1+1)^0,c
  7211  00357E  0060  F298  F00A   	movff	cmdSetAES@p1,memcpy@s1
  7212  003584  0060  F29C  F00B   	movff	cmdSetAES@p1+1,memcpy@s1+1
  7213  00358A  0E00               	movlw	0
  7214  00358C  6E0D               	movwf	(memcpy@n+1)^0,c
  7215  00358E  0E20               	movlw	32
  7216  003590  6E0C               	movwf	memcpy@n^0,c
  7217  003592  ECD7  F041         	call	_memcpy	;wreg free
  7218  003596                     
  7219                           ;app/app_src/application.c: 445:  for(uint8_t i = 0; i < 16; i++){
  7220  003596  0E00               	movlw	0
  7221  003598  0100               	movlb	0	; () banked
  7222  00359A  6FA8               	movwf	cmdSetAES@i& (0+255),b
  7223  00359C                     l16305:
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;app/app_src/application.c: 446:   char temp[3];;app/app_src/application.c: 447:   char 
      +                          *p2;;app/app_src/application.c: 448:   uint8_t byte;;app/app_src/application.c: 449:   m
      +                          emcpy(temp,0,sizeof(temp));
  7227  00359C  0EA1               	movlw	low cmdSetAES@temp
  7228  00359E  6E08               	movwf	memcpy@d1^0,c
  7229  0035A0  0E00               	movlw	high cmdSetAES@temp
  7230  0035A2  6E09               	movwf	(memcpy@d1+1)^0,c
  7231  0035A4  0E00               	movlw	0
  7232  0035A6  6E0A               	movwf	memcpy@s1^0,c
  7233  0035A8  0E00               	movlw	0
  7234  0035AA  6E0B               	movwf	(memcpy@s1+1)^0,c
  7235  0035AC  0E00               	movlw	0
  7236  0035AE  6E0D               	movwf	(memcpy@n+1)^0,c
  7237  0035B0  0E03               	movlw	3
  7238  0035B2  6E0C               	movwf	memcpy@n^0,c
  7239  0035B4  ECD7  F041         	call	_memcpy	;wreg free
  7240  0035B8                     
  7241                           ;app/app_src/application.c: 450:   memcpy(temp,(AESstr + i*2),2);
  7242  0035B8  0EA1               	movlw	low cmdSetAES@temp
  7243  0035BA  6E08               	movwf	memcpy@d1^0,c
  7244  0035BC  0E00               	movlw	high cmdSetAES@temp
  7245  0035BE  6E09               	movwf	(memcpy@d1+1)^0,c
  7246  0035C0  0100               	movlb	0	; () banked
  7247  0035C2  51A8               	movf	cmdSetAES@i& (0+255),w,b
  7248  0035C4  0D02               	mullw	2
  7249  0035C6  0E7F               	movlw	low cmdSetAES@AESstr
  7250  0035C8  24F3               	addwf	243,w,c
  7251  0035CA  6E0A               	movwf	memcpy@s1^0,c
  7252  0035CC  0E00               	movlw	high cmdSetAES@AESstr
  7253  0035CE  20F4               	addwfc	prodh,w,c
  7254  0035D0  6E0B               	movwf	(memcpy@s1+1)^0,c
  7255  0035D2  0E00               	movlw	0
  7256  0035D4  6E0D               	movwf	(memcpy@n+1)^0,c
  7257  0035D6  0E02               	movlw	2
  7258  0035D8  6E0C               	movwf	memcpy@n^0,c
  7259  0035DA  ECD7  F041         	call	_memcpy	;wreg free
  7260  0035DE                     
  7261                           ;app/app_src/application.c: 451:   byte = (uint8_t)strtoul(temp,&p2,16);
  7262  0035DE  0EA1               	movlw	low cmdSetAES@temp
  7263  0035E0  6E34               	movwf	strtoul@s^0,c
  7264  0035E2  0E00               	movlw	high cmdSetAES@temp
  7265  0035E4  6E35               	movwf	(strtoul@s+1)^0,c
  7266  0035E6  0E9F               	movlw	low cmdSetAES@p2
  7267  0035E8  6E36               	movwf	strtoul@endptr^0,c
  7268  0035EA  0E00               	movlw	high cmdSetAES@p2
  7269  0035EC  6E37               	movwf	(strtoul@endptr+1)^0,c
  7270  0035EE  0E00               	movlw	0
  7271  0035F0  6E39               	movwf	(strtoul@base+1)^0,c
  7272  0035F2  0E10               	movlw	16
  7273  0035F4  6E38               	movwf	strtoul@base^0,c
  7274  0035F6  EC3F  F048         	call	_strtoul	;wreg free
  7275  0035FA  5034               	movf	?_strtoul^0,w,c
  7276  0035FC  0100               	movlb	0	; () banked
  7277  0035FE  6FA5               	movwf	cmdSetAES@byte& (0+255),b
  7278  003600                     
  7279                           ; BSR set to: 0
  7280                           ;app/app_src/application.c: 452:         if('A' == key_type){
  7281  003600  0E41               	movlw	65
  7282  003602  19A4               	xorwf	cmdSetAES@key_type& (0+255),w,b
  7283  003604  A4D8               	btfss	status,2,c
  7284  003606  EF07  F01B         	goto	u16321
  7285  00360A  EF09  F01B         	goto	u16320
  7286  00360E                     u16321:
  7287  00360E  EF1F  F01B         	goto	l16317
  7288  003612                     u16320:
  7289  003612                     
  7290                           ; BSR set to: 0
  7291                           ;app/app_src/application.c: 453:             aes_key[i] = byte;
  7292  003612  0E20               	movlw	low _aes_key
  7293  003614  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7294  003616  6ED9               	movwf	fsr2l,c
  7295  003618  6ADA               	clrf	fsr2h,c
  7296  00361A  0E02               	movlw	high _aes_key
  7297  00361C  22DA               	addwfc	fsr2h,f,c
  7298  00361E  0060  F297  FFDF   	movff	cmdSetAES@byte,indf2
  7299  003624                     
  7300                           ; BSR set to: 0
  7301                           ;app/app_src/application.c: 454:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7302  003624  0E09               	movlw	9
  7303  003626  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7304  003628  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7305  00362A  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7306  00362C  0E00               	movlw	0
  7307  00362E  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7308  003630  0060  F294  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7309  003636  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
  7310                           
  7311                           ;app/app_src/application.c: 455:         }
  7312  00363A  EF33  F01B         	goto	l16321
  7313  00363E                     l16317:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;app/app_src/application.c: 457:             net_key[i] = byte;
  7317  00363E  0E10               	movlw	low _net_key
  7318  003640  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7319  003642  6ED9               	movwf	fsr2l,c
  7320  003644  6ADA               	clrf	fsr2h,c
  7321  003646  0E02               	movlw	high _net_key
  7322  003648  22DA               	addwfc	fsr2h,f,c
  7323  00364A  0060  F297  FFDF   	movff	cmdSetAES@byte,indf2
  7324  003650                     
  7325                           ; BSR set to: 0
  7326                           ;app/app_src/application.c: 458:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7327  003650  0E23               	movlw	35
  7328  003652  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7329  003654  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7330  003656  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7331  003658  0E00               	movlw	0
  7332  00365A  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7333  00365C  0060  F294  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7334  003662  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
  7335  003666                     l16321:
  7336                           
  7337                           ;app/app_src/application.c: 460:  }
  7338  003666  0100               	movlb	0	; () banked
  7339  003668  2BA8               	incf	cmdSetAES@i& (0+255),f,b
  7340  00366A                     
  7341                           ; BSR set to: 0
  7342  00366A  0E0F               	movlw	15
  7343  00366C  65A8               	cpfsgt	cmdSetAES@i& (0+255),b
  7344  00366E  EF3B  F01B         	goto	u16331
  7345  003672  EF3D  F01B         	goto	u16330
  7346  003676                     u16331:
  7347  003676  EFCE  F01A         	goto	l16305
  7348  00367A                     u16330:
  7349  00367A                     
  7350                           ; BSR set to: 0
  7351                           ;app/app_src/application.c: 461:  printf("OK\r\n");
  7352  00367A  0ED7               	movlw	low STR_11
  7353  00367C  6F77               	movwf	printf@fmt& (0+255),b
  7354  00367E  0EFF               	movlw	high STR_11
  7355  003680  6F78               	movwf	(printf@fmt+1)& (0+255),b
  7356  003682  ECF7  F04B         	call	_printf	;wreg free
  7357  003686                     l277:
  7358  003686  0012               	return		;funcret
  7359  003688                     __end_of_cmdSetAES:
  7360                           	opt callstack 0
  7361                           
  7362 ;; *************** function _cmdSendSink *****************
  7363 ;; Defined at:
  7364 ;;		line 396 in file "app/app_src/application.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  7367 ;;		 -> atCommand(80), 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;		None
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		None
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7383 ;;Total ram usage:        2 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    7
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_executeATCommand
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text26
  7394  009D14                     __ptext26:
  7395                           	opt callstack 0
  7396  009D14                     _cmdSendSink:
  7397                           	opt callstack 21
  7398  009D14  0012               	return		;funcret
  7399  009D16                     __end_of_cmdSendSink:
  7400                           	opt callstack 0
  7401                           
  7402 ;; *************** function _cmdSend *****************
  7403 ;; Defined at:
  7404 ;;		line 195 in file "app/app_src/application.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  cmd             2   29[BANK0 ] PTR unsigned char 
  7407 ;;		 -> atCommand(80), 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;  msgstr         64   31[BANK0 ] unsigned char [64]
  7410 ;;  msgid           1  100[BANK0 ] unsigned char 
  7411 ;;  destaddr        5   95[BANK0 ] unsigned char [5]
  7412 ;;  p1              2  105[BANK0 ] PTR unsigned char 
  7413 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  7414 ;;  p2              2  103[BANK0 ] PTR unsigned char 
  7415 ;;		 -> cmdSetSF@CHstr(3), STR_53(2), STR_52(2), cmdSetCADRSSI@CHstr(3), 
  7416 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7417 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7418 ;;  tempaddr        2  101[BANK0 ] unsigned short 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Locals:         0      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Totals:         0      78       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;Total ram usage:       78 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:   16
  7435 ;; This function calls:
  7436 ;;		_NWK_DataReq
  7437 ;;		_memcpy
  7438 ;;		_memset
  7439 ;;		_printf
  7440 ;;		_strlen
  7441 ;;		_strstr
  7442 ;;		_strtoul
  7443 ;; This function is called by:
  7444 ;;		_executeATCommand
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text27
  7449  004A76                     __ptext27:
  7450                           	opt callstack 0
  7451  004A76                     _cmdSend:
  7452                           	opt callstack 12
  7453  004A76                     
  7454                           ;app/app_src/application.c: 196:  uint16_t tempaddr;;app/app_src/application.c: 197:  ch
      +                          ar *p1,*p2;;app/app_src/application.c: 198:  char destaddr[5];;app/app_src/application.c
      +                          : 199:         destaddr[4] = 0;
  7455  004A76  0E00               	movlw	0
  7456  004A78  0100               	movlb	0	; () banked
  7457  004A7A  6FC3               	movwf	(cmdSend@destaddr+4)& (0+255),b
  7458  004A7C                     
  7459                           ; BSR set to: 0
  7460                           ;app/app_src/application.c: 200:  p1 = strstr(cmd,":") + 1;
  7461  004A7C  0060  F1F4  F00D   	movff	cmdSend@cmd,strstr@h
  7462  004A82  0060  F1F8  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7463  004A88  0E66               	movlw	low (STR_60+5)
  7464  004A8A  6E0F               	movwf	strstr@n^0,c
  7465  004A8C  0EFF               	movlw	high (STR_60+5)
  7466  004A8E  6E10               	movwf	(strstr@n+1)^0,c
  7467  004A90  EC17  F032         	call	_strstr	;wreg free
  7468  004A94  0E01               	movlw	1
  7469  004A96  240D               	addwf	?_strstr^0,w,c
  7470  004A98  0100               	movlb	0	; () banked
  7471  004A9A  6FC9               	movwf	cmdSend@p1& (0+255),b
  7472  004A9C  0E00               	movlw	0
  7473  004A9E  200E               	addwfc	(?_strstr+1)^0,w,c
  7474  004AA0  6FCA               	movwf	(cmdSend@p1+1)& (0+255),b
  7475  004AA2                     
  7476                           ; BSR set to: 0
  7477                           ;app/app_src/application.c: 201:  memcpy(destaddr,p1,4);
  7478  004AA2  0EBF               	movlw	low cmdSend@destaddr
  7479  004AA4  6E08               	movwf	memcpy@d1^0,c
  7480  004AA6  0E00               	movlw	high cmdSend@destaddr
  7481  004AA8  6E09               	movwf	(memcpy@d1+1)^0,c
  7482  004AAA  0060  F324  F00A   	movff	cmdSend@p1,memcpy@s1
  7483  004AB0  0060  F328  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7484  004AB6  0E00               	movlw	0
  7485  004AB8  6E0D               	movwf	(memcpy@n+1)^0,c
  7486  004ABA  0E04               	movlw	4
  7487  004ABC  6E0C               	movwf	memcpy@n^0,c
  7488  004ABE  ECD7  F041         	call	_memcpy	;wreg free
  7489  004AC2                     
  7490                           ;app/app_src/application.c: 203:  tempaddr = strtoul(destaddr,&p2,16);
  7491  004AC2  0EBF               	movlw	low cmdSend@destaddr
  7492  004AC4  6E34               	movwf	strtoul@s^0,c
  7493  004AC6  0E00               	movlw	high cmdSend@destaddr
  7494  004AC8  6E35               	movwf	(strtoul@s+1)^0,c
  7495  004ACA  0EC7               	movlw	low cmdSend@p2
  7496  004ACC  6E36               	movwf	strtoul@endptr^0,c
  7497  004ACE  0E00               	movlw	high cmdSend@p2
  7498  004AD0  6E37               	movwf	(strtoul@endptr+1)^0,c
  7499  004AD2  0E00               	movlw	0
  7500  004AD4  6E39               	movwf	(strtoul@base+1)^0,c
  7501  004AD6  0E10               	movlw	16
  7502  004AD8  6E38               	movwf	strtoul@base^0,c
  7503  004ADA  EC3F  F048         	call	_strtoul	;wreg free
  7504  004ADE  0060  F0D0  F0C5   	movff	?_strtoul,cmdSend@tempaddr
  7505  004AE4  0060  F0D4  F0C6   	movff	?_strtoul+1,cmdSend@tempaddr+1
  7506  004AEA                     
  7507                           ;app/app_src/application.c: 205:  p1 = strstr(cmd,"=") + 1;
  7508  004AEA  0060  F1F4  F00D   	movff	cmdSend@cmd,strstr@h
  7509  004AF0  0060  F1F8  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7510  004AF6  0EDF               	movlw	low (STR_16+3)
  7511  004AF8  6E0F               	movwf	strstr@n^0,c
  7512  004AFA  0EFF               	movlw	high (STR_16+3)
  7513  004AFC  6E10               	movwf	(strstr@n+1)^0,c
  7514  004AFE  EC17  F032         	call	_strstr	;wreg free
  7515  004B02  0E01               	movlw	1
  7516  004B04  240D               	addwf	?_strstr^0,w,c
  7517  004B06  0100               	movlb	0	; () banked
  7518  004B08  6FC9               	movwf	cmdSend@p1& (0+255),b
  7519  004B0A  0E00               	movlw	0
  7520  004B0C  200E               	addwfc	(?_strstr+1)^0,w,c
  7521  004B0E  6FCA               	movwf	(cmdSend@p1+1)& (0+255),b
  7522  004B10                     
  7523                           ; BSR set to: 0
  7524                           ;app/app_src/application.c: 206:  if(strlen(p1) > 64){
  7525  004B10  0060  F324  F002   	movff	cmdSend@p1,strlen@s
  7526  004B16  0060  F328  F003   	movff	cmdSend@p1+1,strlen@s+1
  7527  004B1C  EC91  F045         	call	_strlen	;wreg free
  7528  004B20  5003               	movf	(?_strlen+1)^0,w,c
  7529  004B22  E109               	bnz	u16220
  7530  004B24  0E41               	movlw	65
  7531  004B26  5C02               	subwf	?_strlen^0,w,c
  7532  004B28  A0D8               	btfss	status,0,c
  7533  004B2A  EF99  F025         	goto	u16221
  7534  004B2E  EF9B  F025         	goto	u16220
  7535  004B32                     u16221:
  7536  004B32  EFA6  F025         	goto	l16143
  7537  004B36                     u16220:
  7538  004B36                     
  7539                           ;app/app_src/application.c: 207:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  7540  004B36  0ECC               	movlw	low STR_4
  7541  004B38  0100               	movlb	0	; () banked
  7542  004B3A  6F77               	movwf	printf@fmt& (0+255),b
  7543  004B3C  0EFE               	movlw	high STR_4
  7544  004B3E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  7545  004B40  0E07               	movlw	7
  7546  004B42  6F79               	movwf	(?_printf+2)& (0+255),b
  7547  004B44  ECF7  F04B         	call	_printf	;wreg free
  7548                           
  7549                           ;app/app_src/application.c: 208:  }
  7550  004B48  EFFF  F025         	goto	l238
  7551  004B4C                     l16143:
  7552                           
  7553                           ;app/app_src/application.c: 210:         char msgstr[64];;app/app_src/application.c: 211
      +                          :         uint8_t msgid;;app/app_src/application.c: 212:         memset(msgstr, 0, sizeo
      +                          f(msgstr));
  7554  004B4C  0E7F               	movlw	low cmdSend@msgstr
  7555  004B4E  6E02               	movwf	memset@dest^0,c
  7556  004B50  0E00               	movlw	high cmdSend@msgstr
  7557  004B52  6E03               	movwf	(memset@dest+1)^0,c
  7558  004B54  0E00               	movlw	0
  7559  004B56  6E05               	movwf	(memset@c+1)^0,c
  7560  004B58  0E00               	movlw	0
  7561  004B5A  6E04               	movwf	memset@c^0,c
  7562  004B5C  0E00               	movlw	0
  7563  004B5E  6E07               	movwf	(memset@n+1)^0,c
  7564  004B60  0E40               	movlw	64
  7565  004B62  6E06               	movwf	memset@n^0,c
  7566  004B64  ECA5  F023         	call	_memset	;wreg free
  7567  004B68                     
  7568                           ;app/app_src/application.c: 213:   memcpy(msgstr,p1,strlen(p1));
  7569  004B68  0E7F               	movlw	low cmdSend@msgstr
  7570  004B6A  6E08               	movwf	memcpy@d1^0,c
  7571  004B6C  0E00               	movlw	high cmdSend@msgstr
  7572  004B6E  6E09               	movwf	(memcpy@d1+1)^0,c
  7573  004B70  0060  F324  F00A   	movff	cmdSend@p1,memcpy@s1
  7574  004B76  0060  F328  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7575  004B7C  0060  F324  F002   	movff	cmdSend@p1,strlen@s
  7576  004B82  0060  F328  F003   	movff	cmdSend@p1+1,strlen@s+1
  7577  004B88  EC91  F045         	call	_strlen	;wreg free
  7578  004B8C  0060  F008  F00C   	movff	?_strlen,memcpy@n
  7579  004B92  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  7580  004B98  ECD7  F041         	call	_memcpy	;wreg free
  7581  004B9C                     
  7582                           ;app/app_src/application.c: 214:   nwkDataReq.dstAddr = tempaddr;
  7583  004B9C  0060  F314  F186   	movff	cmdSend@tempaddr,_nwkDataReq+5
  7584  004BA2  0060  F318  F187   	movff	cmdSend@tempaddr+1,_nwkDataReq+6
  7585  004BA8                     
  7586                           ;app/app_src/application.c: 215:         nwkDataReq.dstEndpoint = 1;
  7587  004BA8  0E01               	movlw	1
  7588  004BAA  0101               	movlb	1	; () banked
  7589  004BAC  6F88               	movwf	(_nwkDataReq+7)& (0+255),b
  7590  004BAE                     
  7591                           ; BSR set to: 1
  7592                           ;app/app_src/application.c: 216:         nwkDataReq.srcEndpoint = 1;
  7593  004BAE  0E01               	movlw	1
  7594  004BB0  6F89               	movwf	(_nwkDataReq+8)& (0+255),b
  7595  004BB2                     
  7596                           ; BSR set to: 1
  7597                           ;app/app_src/application.c: 217:         nwkDataReq.options = NWK_OPT_ACK_REQUEST;
  7598  004BB2  0E01               	movlw	1
  7599  004BB4  6F8A               	movwf	(_nwkDataReq+9)& (0+255),b
  7600  004BB6                     
  7601                           ; BSR set to: 1
  7602                           ;app/app_src/application.c: 218:         nwkDataReq.data = &msgstr;
  7603  004BB6  0E7F               	movlw	low cmdSend@msgstr
  7604  004BB8  6F8D               	movwf	(_nwkDataReq+12)& (0+255),b
  7605  004BBA  0E00               	movlw	high cmdSend@msgstr
  7606  004BBC  6F8E               	movwf	(_nwkDataReq+13)& (0+255),b
  7607  004BBE                     
  7608                           ; BSR set to: 1
  7609                           ;app/app_src/application.c: 219:         nwkDataReq.size = strlen(p1);
  7610  004BBE  0060  F324  F002   	movff	cmdSend@p1,strlen@s
  7611  004BC4  0060  F328  F003   	movff	cmdSend@p1+1,strlen@s+1
  7612  004BCA  EC91  F045         	call	_strlen	;wreg free
  7613  004BCE  5002               	movf	?_strlen^0,w,c
  7614  004BD0  0101               	movlb	1	; () banked
  7615  004BD2  6F8F               	movwf	(_nwkDataReq+14)& (0+255),b
  7616  004BD4                     
  7617                           ; BSR set to: 1
  7618                           ;app/app_src/application.c: 220:         nwkDataReq.confirm = &appDataConf;
  7619  004BD4  0E00               	movlw	0
  7620  004BD6  6F90               	movwf	(_nwkDataReq+15)& (0+255),b
  7621  004BD8  0E00               	movlw	0
  7622  004BDA  6F91               	movwf	(_nwkDataReq+16)& (0+255),b
  7623  004BDC                     
  7624                           ; BSR set to: 1
  7625                           ;app/app_src/application.c: 221:         NWK_DataReq(&nwkDataReq);
  7626  004BDC  0E81               	movlw	low _nwkDataReq
  7627  004BDE  6E02               	movwf	NWK_DataReq@req^0,c
  7628  004BE0  0E01               	movlw	high _nwkDataReq
  7629  004BE2  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  7630  004BE4  EC34  F040         	call	_NWK_DataReq	;wreg free
  7631  004BE8                     
  7632                           ;app/app_src/application.c: 222:   printf("OK:%u\r\n",(uint16_t)msgid);
  7633  004BE8  0ED0               	movlw	low (STR_4+4)
  7634  004BEA  0100               	movlb	0	; () banked
  7635  004BEC  6F77               	movwf	printf@fmt& (0+255),b
  7636  004BEE  0EFE               	movlw	high (STR_4+4)
  7637  004BF0  6F78               	movwf	(printf@fmt+1)& (0+255),b
  7638  004BF2  0060  F310  F079   	movff	cmdSend@msgid,?_printf+2
  7639  004BF8  6B7A               	clrf	(?_printf+3)& (0+255),b
  7640  004BFA  ECF7  F04B         	call	_printf	;wreg free
  7641  004BFE                     l238:
  7642  004BFE  0012               	return		;funcret
  7643  004C00                     __end_of_cmdSend:
  7644                           	opt callstack 0
  7645                           
  7646 ;; *************** function _strtoul *****************
  7647 ;; Defined at:
  7648 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtoul.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  s               2   51[COMRAM] PTR const unsigned char 
  7651 ;;		 -> STR_53(2), STR_52(2), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
  7652 ;;		 -> cmdSetAES@temp(3), atCommand(80), NULL(0), cmdSend@destaddr(5), 
  7653 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  7654 ;;		 -> cmdSetTX@p2(2), cmdSetRFCH@p2(2), cmdSetAES@p2(2), NULL(0), 
  7655 ;;		 -> cmdSend@p2(2), 
  7656 ;;  base            2   55[COMRAM] int 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  4   51[COMRAM] unsigned long 
  7661 ;; Registers used:
  7662 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7668 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7671 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;Total ram usage:        6 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:   10
  7675 ;; This function calls:
  7676 ;;		___strtoxl
  7677 ;; This function is called by:
  7678 ;;		_cmdSend
  7679 ;;		_cmdSetAddr
  7680 ;;		_cmdSetNaddr
  7681 ;;		_cmdSetAES
  7682 ;;		_cmdSetRFCH
  7683 ;;		_cmdSetTX
  7684 ;;		_cmdSetBaud
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text28
  7689  00907E                     __ptext28:
  7690                           	opt callstack 0
  7691  00907E                     _strtoul:
  7692                           	opt callstack 17
  7693  00907E  0060  F0D0  F010   	movff	strtoul@s,___strtoxl@s
  7694  009084  0060  F0D4  F011   	movff	strtoul@s+1,___strtoxl@s+1
  7695  00908A  0060  F0D8  F012   	movff	strtoul@endptr,___strtoxl@endptr
  7696  009090  0060  F0DC  F013   	movff	strtoul@endptr+1,___strtoxl@endptr+1
  7697  009096  0060  F0E0  F014   	movff	strtoul@base,___strtoxl@base
  7698  00909C  0060  F0E4  F015   	movff	strtoul@base+1,___strtoxl@base+1
  7699  0090A2  0E00               	movlw	0
  7700  0090A4  6E16               	movwf	___strtoxl@is_signed^0,c
  7701  0090A6  EC79  F007         	call	___strtoxl	;wreg free
  7702  0090AA  0060  F040  F034   	movff	?___strtoxl,?_strtoul
  7703  0090B0  0060  F044  F035   	movff	?___strtoxl+1,?_strtoul+1
  7704  0090B6  0060  F048  F036   	movff	?___strtoxl+2,?_strtoul+2
  7705  0090BC  0060  F04C  F037   	movff	?___strtoxl+3,?_strtoul+3
  7706  0090C2  0012               	return		;funcret
  7707  0090C4                     __end_of_strtoul:
  7708                           	opt callstack 0
  7709                           
  7710 ;; *************** function ___strtoxl *****************
  7711 ;; Defined at:
  7712 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__strtoxl.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7715 ;;		 -> cmdSetSF@CHstr(3), STR_53(2), STR_52(2), cmdSetCADRSSI@CHstr(3), 
  7716 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7717 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7718 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
  7719 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), cmdSetTX@p2(2), cmdSetRFCH@p2(2), 
  7720 ;;		 -> cmdSetAES@p2(2), NULL(0), cmdSend@p2(2), 
  7721 ;;  base            2   19[COMRAM] int 
  7722 ;;  is_signed       1   21[COMRAM] unsigned char 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  a               4   44[COMRAM] unsigned long 
  7725 ;;  limit           4   38[COMRAM] unsigned long 
  7726 ;;  prev_a          4   26[COMRAM] unsigned long 
  7727 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  7728 ;;		 -> cmdSetSF@CHstr(3), STR_53(2), STR_52(2), cmdSetCADRSSI@CHstr(3), 
  7729 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7730 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7731 ;;  c               1   50[COMRAM] unsigned char 
  7732 ;;  skip            1   43[COMRAM] unsigned char 
  7733 ;;  sign            1   42[COMRAM] unsigned char 
  7734 ;;  conv_done       1   37[COMRAM] unsigned char 
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  4   15[COMRAM] unsigned long 
  7737 ;; Registers used:
  7738 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7744 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;Total ram usage:       36 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; Hardware stack levels required when called:    9
  7751 ;; This function calls:
  7752 ;;		___lmul
  7753 ;;		_isalpha
  7754 ;;		_isdigit
  7755 ;;		_isspace
  7756 ;;		_toupper
  7757 ;; This function is called by:
  7758 ;;		_strtol
  7759 ;;		_strtoul
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text29
  7764  000EF2                     __ptext29:
  7765                           	opt callstack 0
  7766  000EF2                     ___strtoxl:
  7767                           	opt callstack 17
  7768  000EF2  0E00               	movlw	0
  7769  000EF4  6E2D               	movwf	___strtoxl@a^0,c
  7770  000EF6  0E00               	movlw	0
  7771  000EF8  6E2E               	movwf	(___strtoxl@a+1)^0,c
  7772  000EFA  0E00               	movlw	0
  7773  000EFC  6E2F               	movwf	(___strtoxl@a+2)^0,c
  7774  000EFE  0E00               	movlw	0
  7775  000F00  6E30               	movwf	(___strtoxl@a+3)^0,c
  7776  000F02  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  7777  000F08  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  7778  000F0E  5031               	movf	___strtoxl@cp^0,w,c
  7779  000F10  1032               	iorwf	(___strtoxl@cp+1)^0,w,c
  7780  000F12  B4D8               	btfsc	status,2,c
  7781  000F14  EF8E  F007         	goto	u15091
  7782  000F18  EF90  F007         	goto	u15090
  7783  000F1C                     u15091:
  7784  000F1C  EFFE  F009         	goto	l15661
  7785  000F20                     u15090:
  7786  000F20  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7787  000F26  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7788  000F2C  0E00               	movlw	low (__mediumconst shr (0+16))
  7789  000F2E  6EF8               	movwf	tblptru,c
  7790  000F30  0E0F               	movlw	(high __ramtop+-1)
  7791  000F32  64F7               	cpfsgt	tblptrh,c
  7792  000F34  D003               	bra	u15107
  7793  000F36  0008               	tblrd		*
  7794  000F38  50F5               	movf	tablat,w,c
  7795  000F3A  D007               	bra	u15100
  7796  000F3C                     u15107:
  7797  000F3C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7798  000F42  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7799  000F48  50EF               	movf	indf0,w,c
  7800  000F4A                     u15100:
  7801  000F4A  0900               	iorlw	0
  7802  000F4C  A4D8               	btfss	status,2,c
  7803  000F4E  EFAB  F007         	goto	u15111
  7804  000F52  EFAD  F007         	goto	u15110
  7805  000F56                     u15111:
  7806  000F56  EFAF  F007         	goto	l15557
  7807  000F5A                     u15110:
  7808  000F5A  EFFE  F009         	goto	l15661
  7809  000F5E                     l15557:
  7810  000F5E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7811  000F64  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7812  000F6A  0E00               	movlw	low (__mediumconst shr (0+16))
  7813  000F6C  6EF8               	movwf	tblptru,c
  7814  000F6E  0E0F               	movlw	(high __ramtop+-1)
  7815  000F70  64F7               	cpfsgt	tblptrh,c
  7816  000F72  D003               	bra	u15127
  7817  000F74  0008               	tblrd		*
  7818  000F76  50F5               	movf	tablat,w,c
  7819  000F78  D007               	bra	u15120
  7820  000F7A                     u15127:
  7821  000F7A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7822  000F80  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7823  000F86  50EF               	movf	indf0,w,c
  7824  000F88                     u15120:
  7825  000F88  6E33               	movwf	___strtoxl@c^0,c
  7826  000F8A  EFDF  F007         	goto	l15561
  7827  000F8E                     l15559:
  7828  000F8E  4A31               	infsnz	___strtoxl@cp^0,f,c
  7829  000F90  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7830  000F92  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7831  000F98  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7832  000F9E  0E00               	movlw	low (__mediumconst shr (0+16))
  7833  000FA0  6EF8               	movwf	tblptru,c
  7834  000FA2  0E0F               	movlw	(high __ramtop+-1)
  7835  000FA4  64F7               	cpfsgt	tblptrh,c
  7836  000FA6  D003               	bra	u15137
  7837  000FA8  0008               	tblrd		*
  7838  000FAA  50F5               	movf	tablat,w,c
  7839  000FAC  D007               	bra	u15130
  7840  000FAE                     u15137:
  7841  000FAE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7842  000FB4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7843  000FBA  50EF               	movf	indf0,w,c
  7844  000FBC                     u15130:
  7845  000FBC  6E33               	movwf	___strtoxl@c^0,c
  7846  000FBE                     l15561:
  7847  000FBE  0E01               	movlw	1
  7848  000FC0  6E25               	movwf	___strtoxl$7601^0,c
  7849  000FC2  0E20               	movlw	32
  7850  000FC4  1833               	xorwf	___strtoxl@c^0,w,c
  7851  000FC6  B4D8               	btfsc	status,2,c
  7852  000FC8  EFE8  F007         	goto	u15141
  7853  000FCC  EFEA  F007         	goto	u15140
  7854  000FD0                     u15141:
  7855  000FD0  EF02  F008         	goto	l15569
  7856  000FD4                     u15140:
  7857  000FD4  0EF7               	movlw	247
  7858  000FD6  6E17               	movwf	??___strtoxl^0,c
  7859  000FD8  0EFF               	movlw	255
  7860  000FDA  6E18               	movwf	(??___strtoxl+1)^0,c
  7861  000FDC  5033               	movf	___strtoxl@c^0,w,c
  7862  000FDE  6E19               	movwf	(??___strtoxl+2)^0,c
  7863  000FE0  6A1A               	clrf	(??___strtoxl+3)^0,c
  7864  000FE2  5017               	movf	??___strtoxl^0,w,c
  7865  000FE4  2619               	addwf	(??___strtoxl+2)^0,f,c
  7866  000FE6  5018               	movf	(??___strtoxl+1)^0,w,c
  7867  000FE8  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7868  000FEA  501A               	movf	(??___strtoxl+3)^0,w,c
  7869  000FEC  E109               	bnz	u15150
  7870  000FEE  0E05               	movlw	5
  7871  000FF0  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7872  000FF2  A0D8               	btfss	status,0,c
  7873  000FF4  EFFE  F007         	goto	u15151
  7874  000FF8  EF00  F008         	goto	u15150
  7875  000FFC                     u15151:
  7876  000FFC  EF02  F008         	goto	l15569
  7877  001000                     u15150:
  7878  001000  0E00               	movlw	0
  7879  001002  6E25               	movwf	___strtoxl$7601^0,c
  7880  001004                     l15569:
  7881  001004  0060  F094  F01F   	movff	___strtoxl$7601,___strtoxl$7600
  7882  00100A  6A20               	clrf	(___strtoxl$7600+1)^0,c
  7883  00100C  501F               	movf	___strtoxl$7600^0,w,c
  7884  00100E  1020               	iorwf	(___strtoxl$7600+1)^0,w,c
  7885  001010  A4D8               	btfss	status,2,c
  7886  001012  EF0D  F008         	goto	u15161
  7887  001016  EF0F  F008         	goto	u15160
  7888  00101A                     u15161:
  7889  00101A  EFC7  F007         	goto	l15559
  7890  00101E                     u15160:
  7891  00101E  0E00               	movlw	0
  7892  001020  6E2B               	movwf	___strtoxl@sign^0,c
  7893  001022  0E00               	movlw	0
  7894  001024  6E26               	movwf	___strtoxl@conv_done^0,c
  7895  001026  0E00               	movlw	0
  7896  001028  6E2C               	movwf	___strtoxl@skip^0,c
  7897  00102A  0E2D               	movlw	45
  7898  00102C  1833               	xorwf	___strtoxl@c^0,w,c
  7899  00102E  A4D8               	btfss	status,2,c
  7900  001030  EF1C  F008         	goto	u15171
  7901  001034  EF1E  F008         	goto	u15170
  7902  001038                     u15171:
  7903  001038  EF3A  F008         	goto	l15583
  7904  00103C                     u15170:
  7905  00103C  0E01               	movlw	1
  7906  00103E  6E2B               	movwf	___strtoxl@sign^0,c
  7907  001040                     l15581:
  7908  001040  4A31               	infsnz	___strtoxl@cp^0,f,c
  7909  001042  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7910  001044  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7911  00104A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7912  001050  0E00               	movlw	low (__mediumconst shr (0+16))
  7913  001052  6EF8               	movwf	tblptru,c
  7914  001054  0E0F               	movlw	(high __ramtop+-1)
  7915  001056  64F7               	cpfsgt	tblptrh,c
  7916  001058  D003               	bra	u15187
  7917  00105A  0008               	tblrd		*
  7918  00105C  50F5               	movf	tablat,w,c
  7919  00105E  D007               	bra	u15180
  7920  001060                     u15187:
  7921  001060  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7922  001066  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7923  00106C  50EF               	movf	indf0,w,c
  7924  00106E                     u15180:
  7925  00106E  6E33               	movwf	___strtoxl@c^0,c
  7926  001070  EF45  F008         	goto	l15587
  7927  001074                     l15583:
  7928  001074  0E2B               	movlw	43
  7929  001076  1833               	xorwf	___strtoxl@c^0,w,c
  7930  001078  A4D8               	btfss	status,2,c
  7931  00107A  EF41  F008         	goto	u15191
  7932  00107E  EF43  F008         	goto	u15190
  7933  001082                     u15191:
  7934  001082  EF45  F008         	goto	l15587
  7935  001086                     u15190:
  7936  001086  EF20  F008         	goto	l15581
  7937  00108A                     l15587:
  7938  00108A  0E30               	movlw	48
  7939  00108C  1833               	xorwf	___strtoxl@c^0,w,c
  7940  00108E  A4D8               	btfss	status,2,c
  7941  001090  EF4C  F008         	goto	u15201
  7942  001094  EF4E  F008         	goto	u15200
  7943  001098                     u15201:
  7944  001098  EFB8  F008         	goto	l15609
  7945  00109C                     u15200:
  7946  00109C  4A31               	infsnz	___strtoxl@cp^0,f,c
  7947  00109E  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7948  0010A0  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7949  0010A6  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7950  0010AC  0E00               	movlw	low (__mediumconst shr (0+16))
  7951  0010AE  6EF8               	movwf	tblptru,c
  7952  0010B0  0E0F               	movlw	(high __ramtop+-1)
  7953  0010B2  64F7               	cpfsgt	tblptrh,c
  7954  0010B4  D003               	bra	u15217
  7955  0010B6  0008               	tblrd		*
  7956  0010B8  50F5               	movf	tablat,w,c
  7957  0010BA  D007               	bra	u15210
  7958  0010BC                     u15217:
  7959  0010BC  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7960  0010C2  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7961  0010C8  50EF               	movf	indf0,w,c
  7962  0010CA                     u15210:
  7963  0010CA  6E33               	movwf	___strtoxl@c^0,c
  7964  0010CC  5014               	movf	___strtoxl@base^0,w,c
  7965  0010CE  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7966  0010D0  B4D8               	btfsc	status,2,c
  7967  0010D2  EF6D  F008         	goto	u15221
  7968  0010D6  EF6F  F008         	goto	u15220
  7969  0010DA                     u15221:
  7970  0010DA  EF79  F008         	goto	l15595
  7971  0010DE                     u15220:
  7972  0010DE  0E10               	movlw	16
  7973  0010E0  1814               	xorwf	___strtoxl@base^0,w,c
  7974  0010E2  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7975  0010E4  A4D8               	btfss	status,2,c
  7976  0010E6  EF77  F008         	goto	u15231
  7977  0010EA  EF79  F008         	goto	u15230
  7978  0010EE                     u15231:
  7979  0010EE  EFA9  F008         	goto	l15603
  7980  0010F2                     u15230:
  7981  0010F2                     l15595:
  7982  0010F2  0E78               	movlw	120
  7983  0010F4  1833               	xorwf	___strtoxl@c^0,w,c
  7984  0010F6  B4D8               	btfsc	status,2,c
  7985  0010F8  EF80  F008         	goto	u15241
  7986  0010FC  EF82  F008         	goto	u15240
  7987  001100                     u15241:
  7988  001100  EF8B  F008         	goto	l15599
  7989  001104                     u15240:
  7990  001104  0E58               	movlw	88
  7991  001106  1833               	xorwf	___strtoxl@c^0,w,c
  7992  001108  A4D8               	btfss	status,2,c
  7993  00110A  EF89  F008         	goto	u15251
  7994  00110E  EF8B  F008         	goto	u15250
  7995  001112                     u15251:
  7996  001112  EFA9  F008         	goto	l15603
  7997  001116                     u15250:
  7998  001116                     l15599:
  7999  001116  0E00               	movlw	0
  8000  001118  6E15               	movwf	(___strtoxl@base+1)^0,c
  8001  00111A  0E10               	movlw	16
  8002  00111C  6E14               	movwf	___strtoxl@base^0,c
  8003  00111E  4A31               	infsnz	___strtoxl@cp^0,f,c
  8004  001120  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8005  001122  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8006  001128  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8007  00112E  0E00               	movlw	low (__mediumconst shr (0+16))
  8008  001130  6EF8               	movwf	tblptru,c
  8009  001132  0E0F               	movlw	(high __ramtop+-1)
  8010  001134  64F7               	cpfsgt	tblptrh,c
  8011  001136  D003               	bra	u15267
  8012  001138  0008               	tblrd		*
  8013  00113A  50F5               	movf	tablat,w,c
  8014  00113C  D007               	bra	u15260
  8015  00113E                     u15267:
  8016  00113E  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8017  001144  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8018  00114A  50EF               	movf	indf0,w,c
  8019  00114C                     u15260:
  8020  00114C  6E33               	movwf	___strtoxl@c^0,c
  8021  00114E  EFB8  F008         	goto	l15609
  8022  001152                     l15603:
  8023  001152  0E01               	movlw	1
  8024  001154  6E26               	movwf	___strtoxl@conv_done^0,c
  8025  001156  5014               	movf	___strtoxl@base^0,w,c
  8026  001158  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8027  00115A  A4D8               	btfss	status,2,c
  8028  00115C  EFB2  F008         	goto	u15271
  8029  001160  EFB4  F008         	goto	u15270
  8030  001164                     u15271:
  8031  001164  EFB8  F008         	goto	l15609
  8032  001168                     u15270:
  8033  001168  0E00               	movlw	0
  8034  00116A  6E15               	movwf	(___strtoxl@base+1)^0,c
  8035  00116C  0E08               	movlw	8
  8036  00116E  6E14               	movwf	___strtoxl@base^0,c
  8037  001170                     l15609:
  8038  001170  5014               	movf	___strtoxl@base^0,w,c
  8039  001172  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8040  001174  A4D8               	btfss	status,2,c
  8041  001176  EFBF  F008         	goto	u15281
  8042  00117A  EFC1  F008         	goto	u15280
  8043  00117E                     u15281:
  8044  00117E  EFC5  F008         	goto	l4053
  8045  001182                     u15280:
  8046  001182  0E00               	movlw	0
  8047  001184  6E15               	movwf	(___strtoxl@base+1)^0,c
  8048  001186  0E0A               	movlw	10
  8049  001188  6E14               	movwf	___strtoxl@base^0,c
  8050  00118A                     l4053:
  8051  00118A  5016               	movf	___strtoxl@is_signed^0,w,c
  8052  00118C  B4D8               	btfsc	status,2,c
  8053  00118E  EFCB  F008         	goto	u15291
  8054  001192  EFCD  F008         	goto	u15290
  8055  001196                     u15291:
  8056  001196  EFE9  F008         	goto	l4054
  8057  00119A                     u15290:
  8058  00119A  502B               	movf	___strtoxl@sign^0,w,c
  8059  00119C  A4D8               	btfss	status,2,c
  8060  00119E  EFD3  F008         	goto	u15301
  8061  0011A2  EFD5  F008         	goto	u15300
  8062  0011A6                     u15301:
  8063  0011A6  EFDF  F008         	goto	l15617
  8064  0011AA                     u15300:
  8065  0011AA  0EFF               	movlw	255
  8066  0011AC  6E27               	movwf	___strtoxl@limit^0,c
  8067  0011AE  0EFF               	movlw	255
  8068  0011B0  6E28               	movwf	(___strtoxl@limit+1)^0,c
  8069  0011B2  0EFF               	movlw	255
  8070  0011B4  6E29               	movwf	(___strtoxl@limit+2)^0,c
  8071  0011B6  0E7F               	movlw	127
  8072  0011B8  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  8073  0011BA  EFED  F008         	goto	l4060
  8074  0011BE                     l15617:
  8075  0011BE  0E00               	movlw	0
  8076  0011C0  6E27               	movwf	___strtoxl@limit^0,c
  8077  0011C2  0E00               	movlw	0
  8078  0011C4  6E28               	movwf	(___strtoxl@limit+1)^0,c
  8079  0011C6  0E00               	movlw	0
  8080  0011C8  6E29               	movwf	(___strtoxl@limit+2)^0,c
  8081  0011CA  0E80               	movlw	128
  8082  0011CC  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  8083  0011CE  EFED  F008         	goto	l4060
  8084  0011D2                     l4054:
  8085  0011D2  6827               	setf	___strtoxl@limit^0,c
  8086  0011D4  6828               	setf	(___strtoxl@limit+1)^0,c
  8087  0011D6  6829               	setf	(___strtoxl@limit+2)^0,c
  8088  0011D8  682A               	setf	(___strtoxl@limit+3)^0,c
  8089  0011DA                     l4060:
  8090  0011DA  0060  F0B4  F01B   	movff	___strtoxl@a,___strtoxl@prev_a
  8091  0011E0  0060  F0B8  F01C   	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  8092  0011E6  0060  F0BC  F01D   	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  8093  0011EC  0060  F0C0  F01E   	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  8094  0011F2  0E9F               	movlw	159
  8095  0011F4  6E17               	movwf	??___strtoxl^0,c
  8096  0011F6  0EFF               	movlw	255
  8097  0011F8  6E18               	movwf	(??___strtoxl+1)^0,c
  8098  0011FA  5033               	movf	___strtoxl@c^0,w,c
  8099  0011FC  6E19               	movwf	(??___strtoxl+2)^0,c
  8100  0011FE  6A1A               	clrf	(??___strtoxl+3)^0,c
  8101  001200  0E20               	movlw	32
  8102  001202  1219               	iorwf	(??___strtoxl+2)^0,f,c
  8103  001204  0E00               	movlw	0
  8104  001206  121A               	iorwf	(??___strtoxl+3)^0,f,c
  8105  001208  5017               	movf	??___strtoxl^0,w,c
  8106  00120A  2619               	addwf	(??___strtoxl+2)^0,f,c
  8107  00120C  5018               	movf	(??___strtoxl+1)^0,w,c
  8108  00120E  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8109  001210  501A               	movf	(??___strtoxl+3)^0,w,c
  8110  001212  E10A               	bnz	u15310
  8111  001214  0E1A               	movlw	26
  8112  001216  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8113  001218  A0D8               	btfss	status,0,c
  8114  00121A  EF11  F009         	goto	u15311
  8115  00121E  EF14  F009         	goto	u15310
  8116  001222                     u15311:
  8117  001222  0E01               	movlw	1
  8118  001224  EF15  F009         	goto	u15320
  8119  001228                     u15310:
  8120  001228  0E00               	movlw	0
  8121  00122A                     u15320:
  8122  00122A  6E21               	movwf	___strtoxl$7602^0,c
  8123  00122C  6A22               	clrf	(___strtoxl$7602+1)^0,c
  8124  00122E  5021               	movf	___strtoxl$7602^0,w,c
  8125  001230  1022               	iorwf	(___strtoxl$7602+1)^0,w,c
  8126  001232  B4D8               	btfsc	status,2,c
  8127  001234  EF1E  F009         	goto	u15331
  8128  001238  EF20  F009         	goto	u15330
  8129  00123C                     u15331:
  8130  00123C  EF2B  F009         	goto	l15627
  8131  001240                     u15330:
  8132  001240  0060  F0CC  F008   	movff	___strtoxl@c,toupper@c
  8133  001246  6A09               	clrf	(toupper@c+1)^0,c
  8134  001248  EC13  F044         	call	_toupper	;wreg free
  8135  00124C  5008               	movf	?_toupper^0,w,c
  8136  00124E  0FC9               	addlw	201
  8137  001250  6E33               	movwf	___strtoxl@c^0,c
  8138  001252  EF50  F009         	goto	l15635
  8139  001256                     l15627:
  8140  001256  0ED0               	movlw	208
  8141  001258  6E17               	movwf	??___strtoxl^0,c
  8142  00125A  0EFF               	movlw	255
  8143  00125C  6E18               	movwf	(??___strtoxl+1)^0,c
  8144  00125E  5033               	movf	___strtoxl@c^0,w,c
  8145  001260  6E19               	movwf	(??___strtoxl+2)^0,c
  8146  001262  6A1A               	clrf	(??___strtoxl+3)^0,c
  8147  001264  5017               	movf	??___strtoxl^0,w,c
  8148  001266  2619               	addwf	(??___strtoxl+2)^0,f,c
  8149  001268  5018               	movf	(??___strtoxl+1)^0,w,c
  8150  00126A  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8151  00126C  501A               	movf	(??___strtoxl+3)^0,w,c
  8152  00126E  E10A               	bnz	u15340
  8153  001270  0E0A               	movlw	10
  8154  001272  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8155  001274  A0D8               	btfss	status,0,c
  8156  001276  EF3F  F009         	goto	u15341
  8157  00127A  EF42  F009         	goto	u15340
  8158  00127E                     u15341:
  8159  00127E  0E01               	movlw	1
  8160  001280  EF43  F009         	goto	u15350
  8161  001284                     u15340:
  8162  001284  0E00               	movlw	0
  8163  001286                     u15350:
  8164  001286  6E23               	movwf	___strtoxl$7603^0,c
  8165  001288  6A24               	clrf	(___strtoxl$7603+1)^0,c
  8166  00128A  5023               	movf	___strtoxl$7603^0,w,c
  8167  00128C  1024               	iorwf	(___strtoxl$7603+1)^0,w,c
  8168  00128E  B4D8               	btfsc	status,2,c
  8169  001290  EF4C  F009         	goto	u15361
  8170  001294  EF4E  F009         	goto	u15360
  8171  001298                     u15361:
  8172  001298  EFE6  F009         	goto	l15655
  8173  00129C                     u15360:
  8174  00129C  0E30               	movlw	48
  8175  00129E  5E33               	subwf	___strtoxl@c^0,f,c
  8176  0012A0                     l15635:
  8177  0012A0  5033               	movf	___strtoxl@c^0,w,c
  8178  0012A2  6E17               	movwf	??___strtoxl^0,c
  8179  0012A4  6A18               	clrf	(??___strtoxl+1)^0,c
  8180  0012A6  5014               	movf	___strtoxl@base^0,w,c
  8181  0012A8  5C17               	subwf	??___strtoxl^0,w,c
  8182  0012AA  5018               	movf	(??___strtoxl+1)^0,w,c
  8183  0012AC  0A80               	xorlw	128
  8184  0012AE  6E19               	movwf	(??___strtoxl+2)^0,c
  8185  0012B0  5015               	movf	(___strtoxl@base+1)^0,w,c
  8186  0012B2  0A80               	xorlw	128
  8187  0012B4  5819               	subwfb	(??___strtoxl+2)^0,w,c
  8188  0012B6  A0D8               	btfss	status,0,c
  8189  0012B8  EF60  F009         	goto	u15371
  8190  0012BC  EF62  F009         	goto	u15370
  8191  0012C0                     u15371:
  8192  0012C0  EF64  F009         	goto	l15639
  8193  0012C4                     u15370:
  8194  0012C4  EFE6  F009         	goto	l15655
  8195  0012C8                     l15639:
  8196  0012C8  502C               	movf	___strtoxl@skip^0,w,c
  8197  0012CA  A4D8               	btfss	status,2,c
  8198  0012CC  EF6A  F009         	goto	u15381
  8199  0012D0  EF6C  F009         	goto	u15380
  8200  0012D4                     u15381:
  8201  0012D4  EFCA  F009         	goto	l15651
  8202  0012D8                     u15380:
  8203  0012D8  0060  F050  F002   	movff	___strtoxl@base,___lmul@multiplier
  8204  0012DE  0060  F054  F003   	movff	___strtoxl@base+1,___lmul@multiplier+1
  8205  0012E4  0E00               	movlw	0
  8206  0012E6  BE03               	btfsc	(___lmul@multiplier+1)^0,7,c
  8207  0012E8  0EFF               	movlw	-1
  8208  0012EA  6E04               	movwf	(___lmul@multiplier+2)^0,c
  8209  0012EC  6E05               	movwf	(___lmul@multiplier+3)^0,c
  8210  0012EE  0060  F0B4  F006   	movff	___strtoxl@a,___lmul@multiplicand
  8211  0012F4  0060  F0B8  F007   	movff	___strtoxl@a+1,___lmul@multiplicand+1
  8212  0012FA  0060  F0BC  F008   	movff	___strtoxl@a+2,___lmul@multiplicand+2
  8213  001300  0060  F0C0  F009   	movff	___strtoxl@a+3,___lmul@multiplicand+3
  8214  001306  ECC8  F042         	call	___lmul	;wreg free
  8215  00130A  5033               	movf	___strtoxl@c^0,w,c
  8216  00130C  2402               	addwf	?___lmul^0,w,c
  8217  00130E  6E2D               	movwf	___strtoxl@a^0,c
  8218  001310  0E00               	movlw	0
  8219  001312  2003               	addwfc	(?___lmul+1)^0,w,c
  8220  001314  6E2E               	movwf	(___strtoxl@a+1)^0,c
  8221  001316  0E00               	movlw	0
  8222  001318  2004               	addwfc	(?___lmul+2)^0,w,c
  8223  00131A  6E2F               	movwf	(___strtoxl@a+2)^0,c
  8224  00131C  0E00               	movlw	0
  8225  00131E  2005               	addwfc	(?___lmul+3)^0,w,c
  8226  001320  6E30               	movwf	(___strtoxl@a+3)^0,c
  8227  001322  501B               	movf	___strtoxl@prev_a^0,w,c
  8228  001324  5C2D               	subwf	___strtoxl@a^0,w,c
  8229  001326  501C               	movf	(___strtoxl@prev_a+1)^0,w,c
  8230  001328  582E               	subwfb	(___strtoxl@a+1)^0,w,c
  8231  00132A  501D               	movf	(___strtoxl@prev_a+2)^0,w,c
  8232  00132C  582F               	subwfb	(___strtoxl@a+2)^0,w,c
  8233  00132E  501E               	movf	(___strtoxl@prev_a+3)^0,w,c
  8234  001330  5830               	subwfb	(___strtoxl@a+3)^0,w,c
  8235  001332  A0D8               	btfss	status,0,c
  8236  001334  EF9E  F009         	goto	u15391
  8237  001338  EFA0  F009         	goto	u15390
  8238  00133C                     u15391:
  8239  00133C  EFB7  F009         	goto	l4078
  8240  001340                     u15390:
  8241  001340  5016               	movf	___strtoxl@is_signed^0,w,c
  8242  001342  B4D8               	btfsc	status,2,c
  8243  001344  EFA6  F009         	goto	u15401
  8244  001348  EFA8  F009         	goto	u15400
  8245  00134C                     u15401:
  8246  00134C  EFCA  F009         	goto	l15651
  8247  001350                     u15400:
  8248  001350  502D               	movf	___strtoxl@a^0,w,c
  8249  001352  5C27               	subwf	___strtoxl@limit^0,w,c
  8250  001354  502E               	movf	(___strtoxl@a+1)^0,w,c
  8251  001356  5828               	subwfb	(___strtoxl@limit+1)^0,w,c
  8252  001358  502F               	movf	(___strtoxl@a+2)^0,w,c
  8253  00135A  5829               	subwfb	(___strtoxl@limit+2)^0,w,c
  8254  00135C  5030               	movf	(___strtoxl@a+3)^0,w,c
  8255  00135E  582A               	subwfb	(___strtoxl@limit+3)^0,w,c
  8256  001360  B0D8               	btfsc	status,0,c
  8257  001362  EFB5  F009         	goto	u15411
  8258  001366  EFB7  F009         	goto	u15410
  8259  00136A                     u15411:
  8260  00136A  EFCA  F009         	goto	l15651
  8261  00136E                     u15410:
  8262  00136E                     l4078:
  8263  00136E  0060  F09C  F02D   	movff	___strtoxl@limit,___strtoxl@a
  8264  001374  0060  F0A0  F02E   	movff	___strtoxl@limit+1,___strtoxl@a+1
  8265  00137A  0060  F0A4  F02F   	movff	___strtoxl@limit+2,___strtoxl@a+2
  8266  001380  0060  F0A8  F030   	movff	___strtoxl@limit+3,___strtoxl@a+3
  8267  001386  0E00               	movlw	0
  8268  001388  0101               	movlb	1	; () banked
  8269  00138A  6F5A               	movwf	(_errno+1)& (0+255),b
  8270  00138C  0E22               	movlw	34
  8271  00138E  6F59               	movwf	_errno& (0+255),b
  8272  001390  0E01               	movlw	1
  8273  001392  6E2C               	movwf	___strtoxl@skip^0,c
  8274  001394                     l15651:
  8275  001394  4A31               	infsnz	___strtoxl@cp^0,f,c
  8276  001396  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8277  001398  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8278  00139E  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8279  0013A4  0E00               	movlw	low (__mediumconst shr (0+16))
  8280  0013A6  6EF8               	movwf	tblptru,c
  8281  0013A8  0E0F               	movlw	(high __ramtop+-1)
  8282  0013AA  64F7               	cpfsgt	tblptrh,c
  8283  0013AC  D003               	bra	u15427
  8284  0013AE  0008               	tblrd		*
  8285  0013B0  50F5               	movf	tablat,w,c
  8286  0013B2  D007               	bra	u15420
  8287  0013B4                     u15427:
  8288  0013B4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8289  0013BA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8290  0013C0  50EF               	movf	indf0,w,c
  8291  0013C2                     u15420:
  8292  0013C2  6E33               	movwf	___strtoxl@c^0,c
  8293  0013C4  0E01               	movlw	1
  8294  0013C6  6E26               	movwf	___strtoxl@conv_done^0,c
  8295  0013C8  EFED  F008         	goto	l4060
  8296  0013CC                     l15655:
  8297  0013CC  502C               	movf	___strtoxl@skip^0,w,c
  8298  0013CE  A4D8               	btfss	status,2,c
  8299  0013D0  EFEC  F009         	goto	u15431
  8300  0013D4  EFEE  F009         	goto	u15430
  8301  0013D8                     u15431:
  8302  0013D8  EFFE  F009         	goto	l15661
  8303  0013DC                     u15430:
  8304  0013DC  502B               	movf	___strtoxl@sign^0,w,c
  8305  0013DE  B4D8               	btfsc	status,2,c
  8306  0013E0  EFF4  F009         	goto	u15441
  8307  0013E4  EFF6  F009         	goto	u15440
  8308  0013E8                     u15441:
  8309  0013E8  EFFE  F009         	goto	l15661
  8310  0013EC                     u15440:
  8311  0013EC  1E30               	comf	(___strtoxl@a+3)^0,f,c
  8312  0013EE  1E2F               	comf	(___strtoxl@a+2)^0,f,c
  8313  0013F0  1E2E               	comf	(___strtoxl@a+1)^0,f,c
  8314  0013F2  6C2D               	negf	___strtoxl@a^0,c
  8315  0013F4  0E00               	movlw	0
  8316  0013F6  222E               	addwfc	(___strtoxl@a+1)^0,f,c
  8317  0013F8  222F               	addwfc	(___strtoxl@a+2)^0,f,c
  8318  0013FA  2230               	addwfc	(___strtoxl@a+3)^0,f,c
  8319  0013FC                     l15661:
  8320  0013FC  5012               	movf	___strtoxl@endptr^0,w,c
  8321  0013FE  1013               	iorwf	(___strtoxl@endptr+1)^0,w,c
  8322  001400  B4D8               	btfsc	status,2,c
  8323  001402  EF05  F00A         	goto	u15451
  8324  001406  EF07  F00A         	goto	u15450
  8325  00140A                     u15451:
  8326  00140A  EF21  F00A         	goto	l15669
  8327  00140E                     u15450:
  8328  00140E  5026               	movf	___strtoxl@conv_done^0,w,c
  8329  001410  A4D8               	btfss	status,2,c
  8330  001412  EF0D  F00A         	goto	u15461
  8331  001416  EF0F  F00A         	goto	u15460
  8332  00141A                     u15461:
  8333  00141A  EF15  F00A         	goto	l15667
  8334  00141E                     u15460:
  8335  00141E  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  8336  001424  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  8337  00142A                     l15667:
  8338  00142A  0060  F04B  FFD9   	movff	___strtoxl@endptr,fsr2l
  8339  001430  0060  F04F  FFDA   	movff	___strtoxl@endptr+1,fsr2h
  8340  001436  0060  F0C7  FFDE   	movff	___strtoxl@cp,postinc2
  8341  00143C  0060  F0CB  FFDD   	movff	___strtoxl@cp+1,postdec2
  8342  001442                     l15669:
  8343  001442  0060  F0B4  F010   	movff	___strtoxl@a,?___strtoxl
  8344  001448  0060  F0B8  F011   	movff	___strtoxl@a+1,?___strtoxl+1
  8345  00144E  0060  F0BC  F012   	movff	___strtoxl@a+2,?___strtoxl+2
  8346  001454  0060  F0C0  F013   	movff	___strtoxl@a+3,?___strtoxl+3
  8347  00145A  0012               	return		;funcret
  8348  00145C                     __end_of___strtoxl:
  8349                           	opt callstack 0
  8350                           
  8351 ;; *************** function ___lmul *****************
  8352 ;; Defined at:
  8353 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  multiplier      4    1[COMRAM] unsigned long 
  8356 ;;  multiplicand    4    5[COMRAM] unsigned long 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  product         4    9[COMRAM] unsigned long 
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  4    1[COMRAM] unsigned long 
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8368 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;Total ram usage:       12 bytes
  8373 ;; Hardware stack levels used:    1
  8374 ;; Hardware stack levels required when called:    7
  8375 ;; This function calls:
  8376 ;;		Nothing
  8377 ;; This function is called by:
  8378 ;;		___strtoxl
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           	psect	text30
  8383  008590                     __ptext30:
  8384                           	opt callstack 0
  8385  008590                     ___lmul:
  8386                           	opt callstack 18
  8387  008590  0E00               	movlw	0
  8388  008592  6E0A               	movwf	___lmul@product^0,c
  8389  008594  0E00               	movlw	0
  8390  008596  6E0B               	movwf	(___lmul@product+1)^0,c
  8391  008598  0E00               	movlw	0
  8392  00859A  6E0C               	movwf	(___lmul@product+2)^0,c
  8393  00859C  0E00               	movlw	0
  8394  00859E  6E0D               	movwf	(___lmul@product+3)^0,c
  8395  0085A0                     l14935:
  8396  0085A0  A002               	btfss	___lmul@multiplier^0,0,c
  8397  0085A2  EFD5  F042         	goto	u14111
  8398  0085A6  EFD7  F042         	goto	u14110
  8399  0085AA                     u14111:
  8400  0085AA  EFDF  F042         	goto	l14939
  8401  0085AE                     u14110:
  8402  0085AE  5006               	movf	___lmul@multiplicand^0,w,c
  8403  0085B0  260A               	addwf	___lmul@product^0,f,c
  8404  0085B2  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  8405  0085B4  220B               	addwfc	(___lmul@product+1)^0,f,c
  8406  0085B6  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  8407  0085B8  220C               	addwfc	(___lmul@product+2)^0,f,c
  8408  0085BA  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  8409  0085BC  220D               	addwfc	(___lmul@product+3)^0,f,c
  8410  0085BE                     l14939:
  8411  0085BE  90D8               	bcf	status,0,c
  8412  0085C0  3606               	rlcf	___lmul@multiplicand^0,f,c
  8413  0085C2  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8414  0085C4  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8415  0085C6  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8416  0085C8  90D8               	bcf	status,0,c
  8417  0085CA  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  8418  0085CC  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  8419  0085CE  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  8420  0085D0  3202               	rrcf	___lmul@multiplier^0,f,c
  8421  0085D2  5002               	movf	___lmul@multiplier^0,w,c
  8422  0085D4  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  8423  0085D6  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  8424  0085D8  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  8425  0085DA  A4D8               	btfss	status,2,c
  8426  0085DC  EFF2  F042         	goto	u14121
  8427  0085E0  EFF4  F042         	goto	u14120
  8428  0085E4                     u14121:
  8429  0085E4  EFD0  F042         	goto	l14935
  8430  0085E8                     u14120:
  8431  0085E8  0060  F028  F002   	movff	___lmul@product,?___lmul
  8432  0085EE  0060  F02C  F003   	movff	___lmul@product+1,?___lmul+1
  8433  0085F4  0060  F030  F004   	movff	___lmul@product+2,?___lmul+2
  8434  0085FA  0060  F034  F005   	movff	___lmul@product+3,?___lmul+3
  8435  008600  0012               	return		;funcret
  8436  008602                     __end_of___lmul:
  8437                           	opt callstack 0
  8438                           
  8439 ;; *************** function _cmdRstCAD *****************
  8440 ;; Defined at:
  8441 ;;		line 509 in file "app/app_src/application.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;		None
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      void 
  8448 ;; Registers used:
  8449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;Total ram usage:        0 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:   16
  8462 ;; This function calls:
  8463 ;;		_printf
  8464 ;; This function is called by:
  8465 ;;		_executeATCommand
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text31
  8470  009B82                     __ptext31:
  8471                           	opt callstack 0
  8472  009B82                     _cmdRstCAD:
  8473                           	opt callstack 12
  8474  009B82                     
  8475                           ;app/app_src/application.c: 510:  cadCounter = 0;
  8476  009B82  0E00               	movlw	0
  8477  009B84  0101               	movlb	1	; () banked
  8478  009B86  6F71               	movwf	_cadCounter& (0+255),b
  8479  009B88                     
  8480                           ; BSR set to: 1
  8481                           ;app/app_src/application.c: 511:  printf("OK\r\n");
  8482  009B88  0ED7               	movlw	low STR_11
  8483  009B8A  0100               	movlb	0	; () banked
  8484  009B8C  6F77               	movwf	printf@fmt& (0+255),b
  8485  009B8E  0EFF               	movlw	high STR_11
  8486  009B90  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8487  009B92  ECF7  F04B         	call	_printf	;wreg free
  8488  009B96  0012               	return		;funcret
  8489  009B98                     __end_of_cmdRstCAD:
  8490                           	opt callstack 0
  8491                           
  8492 ;; *************** function _cmdReset *****************
  8493 ;; Defined at:
  8494 ;;		line 649 in file "app/app_src/application.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;		None
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		None
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;Total ram usage:        0 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    7
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_executeATCommand
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	text32
  8523  009CE6                     __ptext32:
  8524                           	opt callstack 0
  8525  009CE6                     _cmdReset:
  8526                           	opt callstack 21
  8527  009CE6  00FF               	reset		;# 
  8528  009CE8                     l337:
  8529  009CE8  EF74  F04E         	goto	l337
  8530  009CEC  0012               	return		;funcret
  8531  009CEE                     __end_of_cmdReset:
  8532                           	opt callstack 0
  8533                           
  8534 ;; *************** function _cmdRecv *****************
  8535 ;; Defined at:
  8536 ;;		line 332 in file "app/app_src/application.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;		None
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		None
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:    7
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_executeATCommand
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text33
  8565  009D16                     __ptext33:
  8566                           	opt callstack 0
  8567  009D16                     _cmdRecv:
  8568                           	opt callstack 21
  8569  009D16  0012               	return		;funcret
  8570  009D18                     __end_of_cmdRecv:
  8571                           	opt callstack 0
  8572                           
  8573 ;; *************** function _cmdNaddr *****************
  8574 ;; Defined at:
  8575 ;;		line 300 in file "app/app_src/application.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;		None
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8593 ;;Total ram usage:        0 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:   16
  8596 ;; This function calls:
  8597 ;;		_printf
  8598 ;; This function is called by:
  8599 ;;		_executeATCommand
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text34
  8604  009A92                     __ptext34:
  8605                           	opt callstack 0
  8606  009A92                     _cmdNaddr:
  8607                           	opt callstack 12
  8608  009A92                     
  8609                           ;app/app_src/application.c: 301:  printf("NADDR=%02X\r\n",currentNetID);
  8610  009A92  0E73               	movlw	low STR_13
  8611  009A94  0100               	movlb	0	; () banked
  8612  009A96  6F77               	movwf	printf@fmt& (0+255),b
  8613  009A98  0EFE               	movlw	high STR_13
  8614  009A9A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8615  009A9C  0060  F3F0  F079   	movff	_currentNetID,?_printf+2
  8616  009AA2  6B7A               	clrf	(?_printf+3)& (0+255),b
  8617  009AA4  ECF7  F04B         	call	_printf	;wreg free
  8618  009AA8  0012               	return		;funcret
  8619  009AAA                     __end_of_cmdNaddr:
  8620                           	opt callstack 0
  8621                           
  8622 ;; *************** function _cmdMac *****************
  8623 ;; Defined at:
  8624 ;;		line 355 in file "app/app_src/application.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;  i               1   92[COMRAM] unsigned char 
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;Total ram usage:        2 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:   16
  8645 ;; This function calls:
  8646 ;;		_printf
  8647 ;; This function is called by:
  8648 ;;		_executeATCommand
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text35
  8653  008BD8                     __ptext35:
  8654                           	opt callstack 0
  8655  008BD8                     _cmdMac:
  8656                           	opt callstack 12
  8657  008BD8                     
  8658                           ;app/app_src/application.c: 356:  printf("MAC=");
  8659  008BD8  0EDC               	movlw	low STR_16
  8660  008BDA  0100               	movlb	0	; () banked
  8661  008BDC  6F77               	movwf	printf@fmt& (0+255),b
  8662  008BDE  0EFF               	movlw	high STR_16
  8663  008BE0  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8664  008BE2  ECF7  F04B         	call	_printf	;wreg free
  8665  008BE6                     
  8666                           ;app/app_src/application.c: 357:  for(uint8_t i = 0; i < sizeof(EUIDbyte); i++){
  8667  008BE6  0E00               	movlw	0
  8668  008BE8  6E5D               	movwf	cmdMac@i^0,c
  8669  008BEA                     l16249:
  8670                           
  8671                           ;app/app_src/application.c: 358:   printf("%02X", EUIDbyte[i]);
  8672  008BEA  0EF5               	movlw	low STR_17
  8673  008BEC  0100               	movlb	0	; () banked
  8674  008BEE  6F77               	movwf	printf@fmt& (0+255),b
  8675  008BF0  0EFF               	movlw	high STR_17
  8676  008BF2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8677  008BF4  0EBB               	movlw	low _EUIDbyte
  8678  008BF6  245D               	addwf	cmdMac@i^0,w,c
  8679  008BF8  6ED9               	movwf	fsr2l,c
  8680  008BFA  6ADA               	clrf	fsr2h,c
  8681  008BFC  0E01               	movlw	high _EUIDbyte
  8682  008BFE  22DA               	addwfc	fsr2h,f,c
  8683  008C00  50DF               	movf	indf2,w,c
  8684  008C02  6E5C               	movwf	??_cmdMac^0,c
  8685  008C04  505C               	movf	??_cmdMac^0,w,c
  8686  008C06  6F79               	movwf	(?_printf+2)& (0+255),b
  8687  008C08  6B7A               	clrf	(?_printf+3)& (0+255),b
  8688  008C0A  ECF7  F04B         	call	_printf	;wreg free
  8689  008C0E                     
  8690                           ;app/app_src/application.c: 359:  }
  8691  008C0E  2A5D               	incf	cmdMac@i^0,f,c
  8692  008C10  0E0B               	movlw	11
  8693  008C12  645D               	cpfsgt	cmdMac@i^0,c
  8694  008C14  EF0E  F046         	goto	u16271
  8695  008C18  EF10  F046         	goto	u16270
  8696  008C1C                     u16271:
  8697  008C1C  EFF5  F045         	goto	l16249
  8698  008C20                     u16270:
  8699  008C20                     
  8700                           ;app/app_src/application.c: 360:  printf("\r\n");
  8701  008C20  0ED4               	movlw	low (STR_133+2)
  8702  008C22  0100               	movlb	0	; () banked
  8703  008C24  6F77               	movwf	printf@fmt& (0+255),b
  8704  008C26  0EFF               	movlw	high (STR_133+2)
  8705  008C28  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8706  008C2A  ECF7  F04B         	call	_printf	;wreg free
  8707  008C2E  0012               	return		;funcret
  8708  008C30                     __end_of_cmdMac:
  8709                           	opt callstack 0
  8710                           
  8711 ;; *************** function _cmdI *****************
  8712 ;; Defined at:
  8713 ;;		line 183 in file "app/app_src/application.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;		None
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  1    wreg      void 
  8720 ;; Registers used:
  8721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;Total ram usage:        0 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; Hardware stack levels required when called:   17
  8734 ;; This function calls:
  8735 ;;		_sendInfo
  8736 ;; This function is called by:
  8737 ;;		_executeATCommand
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text36
  8742  009CF6                     __ptext36:
  8743                           	opt callstack 0
  8744  009CF6                     _cmdI:
  8745                           	opt callstack 11
  8746  009CF6                     
  8747                           ;app/app_src/application.c: 185:     sendInfo();
  8748  009CF6  ECDF  F043         	call	_sendInfo	;wreg free
  8749  009CFA  0012               	return		;funcret
  8750  009CFC                     __end_of_cmdI:
  8751                           	opt callstack 0
  8752                           
  8753 ;; *************** function _sendInfo *****************
  8754 ;; Defined at:
  8755 ;;		line 1114 in file "app/app_src/application.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;		None
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;Total ram usage:        0 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:   16
  8776 ;; This function calls:
  8777 ;;		_printf
  8778 ;; This function is called by:
  8779 ;;		_cmdI
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text37
  8784  0087BE                     __ptext37:
  8785                           	opt callstack 0
  8786  0087BE                     _sendInfo:
  8787                           	opt callstack 11
  8788  0087BE                     
  8789                           ;app/app_src/application.c: 1116:     printf("LoRa Mesh\r\n");
  8790  0087BE  0EC0               	movlw	low STR_129
  8791  0087C0  0100               	movlb	0	; () banked
  8792  0087C2  6F77               	movwf	printf@fmt& (0+255),b
  8793  0087C4  0EFE               	movlw	high STR_129
  8794  0087C6  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8795  0087C8  ECF7  F04B         	call	_printf	;wreg free
  8796  0087CC  0EF3               	movlw	low STR_130
  8797  0087CE  0100               	movlb	0	; () banked
  8798  0087D0  6F77               	movwf	printf@fmt& (0+255),b
  8799  0087D2  0EFD               	movlw	high STR_130
  8800  0087D4  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8801  0087D6  0E00               	movlw	0
  8802  0087D8  6F7A               	movwf	(?_printf+3)& (0+255),b
  8803  0087DA  0E01               	movlw	1
  8804  0087DC  6F79               	movwf	(?_printf+2)& (0+255),b
  8805  0087DE  0E00               	movlw	0
  8806  0087E0  6F7C               	movwf	(?_printf+5)& (0+255),b
  8807  0087E2  0E00               	movlw	0
  8808  0087E4  6F7B               	movwf	(?_printf+4)& (0+255),b
  8809  0087E6  ECF7  F04B         	call	_printf	;wreg free
  8810  0087EA  0ED7               	movlw	low STR_131
  8811  0087EC  0100               	movlb	0	; () banked
  8812  0087EE  6F77               	movwf	printf@fmt& (0+255),b
  8813  0087F0  0EFD               	movlw	high STR_131
  8814  0087F2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8815  0087F4  0E00               	movlw	0
  8816  0087F6  6F7A               	movwf	(?_printf+3)& (0+255),b
  8817  0087F8  0E02               	movlw	2
  8818  0087FA  6F79               	movwf	(?_printf+2)& (0+255),b
  8819  0087FC  0E00               	movlw	0
  8820  0087FE  6F7C               	movwf	(?_printf+5)& (0+255),b
  8821  008800  0E01               	movlw	1
  8822  008802  6F7B               	movwf	(?_printf+4)& (0+255),b
  8823  008804  ECF7  F04B         	call	_printf	;wreg free
  8824                           
  8825                           ;app/app_src/application.c: 1120:     printf("Region ");
  8826  008808  0E41               	movlw	low STR_132
  8827  00880A  0100               	movlb	0	; () banked
  8828  00880C  6F77               	movwf	printf@fmt& (0+255),b
  8829  00880E  0EFF               	movlw	high STR_132
  8830  008810  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8831  008812  ECF7  F04B         	call	_printf	;wreg free
  8832                           
  8833                           ;app/app_src/application.c: 1122:     printf("NA\r\n");
  8834  008816  0ED2               	movlw	low STR_133
  8835  008818  0100               	movlb	0	; () banked
  8836  00881A  6F77               	movwf	printf@fmt& (0+255),b
  8837  00881C  0EFF               	movlw	high STR_133
  8838  00881E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8839  008820  ECF7  F04B         	call	_printf	;wreg free
  8840  008824  0012               	return		;funcret
  8841  008826                     __end_of_sendInfo:
  8842                           	opt callstack 0
  8843                           
  8844 ;; *************** function _cmdGetTX *****************
  8845 ;; Defined at:
  8846 ;;		line 573 in file "app/app_src/application.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;Total ram usage:        0 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:   16
  8867 ;; This function calls:
  8868 ;;		_printf
  8869 ;; This function is called by:
  8870 ;;		_executeATCommand
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text38
  8875  009AAA                     __ptext38:
  8876                           	opt callstack 0
  8877  009AAA                     _cmdGetTX:
  8878                           	opt callstack 12
  8879  009AAA                     
  8880                           ;app/app_src/application.c: 574:  printf("TX POWER=%u\r\n",(uint16_t)TXPower);
  8881  009AAA  0E65               	movlw	low STR_35
  8882  009AAC  0100               	movlb	0	; () banked
  8883  009AAE  6F77               	movwf	printf@fmt& (0+255),b
  8884  009AB0  0EFE               	movlw	high STR_35
  8885  009AB2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8886  009AB4  0060  F3C0  F079   	movff	_TXPower,?_printf+2
  8887  009ABA  6B7A               	clrf	(?_printf+3)& (0+255),b
  8888  009ABC  ECF7  F04B         	call	_printf	;wreg free
  8889  009AC0  0012               	return		;funcret
  8890  009AC2                     __end_of_cmdGetTX:
  8891                           	opt callstack 0
  8892                           
  8893 ;; *************** function _cmdGetTTL *****************
  8894 ;; Defined at:
  8895 ;;		line 471 in file "app/app_src/application.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;		None
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;		None
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1    wreg      void 
  8902 ;; Registers used:
  8903 ;;		None
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;Total ram usage:        0 bytes
  8914 ;; Hardware stack levels used:    1
  8915 ;; Hardware stack levels required when called:    7
  8916 ;; This function calls:
  8917 ;;		Nothing
  8918 ;; This function is called by:
  8919 ;;		_executeATCommand
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text39
  8924  009D18                     __ptext39:
  8925                           	opt callstack 0
  8926  009D18                     _cmdGetTTL:
  8927                           	opt callstack 21
  8928  009D18  0012               	return		;funcret
  8929  009D1A                     __end_of_cmdGetTTL:
  8930                           	opt callstack 0
  8931                           
  8932 ;; *************** function _cmdGetSF *****************
  8933 ;; Defined at:
  8934 ;;		line 715 in file "app/app_src/application.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8952 ;;Total ram usage:        0 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:   16
  8955 ;; This function calls:
  8956 ;;		_printf
  8957 ;; This function is called by:
  8958 ;;		_executeATCommand
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text40
  8963  009AC2                     __ptext40:
  8964                           	opt callstack 0
  8965  009AC2                     _cmdGetSF:
  8966                           	opt callstack 12
  8967  009AC2                     
  8968                           ;app/app_src/application.c: 716:     printf("SF=%u\r\n", current_sf);
  8969  009AC2  0E39               	movlw	low STR_54
  8970  009AC4  0100               	movlb	0	; () banked
  8971  009AC6  6F77               	movwf	printf@fmt& (0+255),b
  8972  009AC8  0EFF               	movlw	high STR_54
  8973  009ACA  6F78               	movwf	(printf@fmt+1)& (0+255),b
  8974  009ACC  0060  F3C8  F079   	movff	_current_sf,?_printf+2
  8975  009AD2  6B7A               	clrf	(?_printf+3)& (0+255),b
  8976  009AD4  ECF7  F04B         	call	_printf	;wreg free
  8977  009AD8  0012               	return		;funcret
  8978  009ADA                     __end_of_cmdGetSF:
  8979                           	opt callstack 0
  8980                           
  8981 ;; *************** function _cmdGetRxCnt *****************
  8982 ;; Defined at:
  8983 ;;		line 750 in file "app/app_src/application.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;  atCommand       2    1[COMRAM] PTR unsigned char 
  8986 ;;		 -> atCommand(80), 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      void 
  8991 ;; Registers used:
  8992 ;;		None
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;Total ram usage:        2 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    7
  9005 ;; This function calls:
  9006 ;;		Nothing
  9007 ;; This function is called by:
  9008 ;;		_executeATCommand
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text41
  9013  009D1A                     __ptext41:
  9014                           	opt callstack 0
  9015  009D1A                     _cmdGetRxCnt:
  9016                           	opt callstack 21
  9017  009D1A  0012               	return		;funcret
  9018  009D1C                     __end_of_cmdGetRxCnt:
  9019                           	opt callstack 0
  9020                           
  9021 ;; *************** function _cmdGetRFCH *****************
  9022 ;; Defined at:
  9023 ;;		line 537 in file "app/app_src/application.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;		None
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;		None
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  1    wreg      void 
  9030 ;; Registers used:
  9031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;Total ram usage:        0 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:   16
  9044 ;; This function calls:
  9045 ;;		_printf
  9046 ;; This function is called by:
  9047 ;;		_executeATCommand
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text42
  9052  0099F4                     __ptext42:
  9053                           	opt callstack 0
  9054  0099F4                     _cmdGetRFCH:
  9055                           	opt callstack 12
  9056  0099F4                     
  9057                           ;app/app_src/application.c: 538:  printf("CHANNEL=%u\r\n",(channel + 1));
  9058  0099F4  0E9A               	movlw	low STR_31
  9059  0099F6  0100               	movlb	0	; () banked
  9060  0099F8  6F77               	movwf	printf@fmt& (0+255),b
  9061  0099FA  0EFE               	movlw	high STR_31
  9062  0099FC  6F78               	movwf	(printf@fmt+1)& (0+255),b
  9063  0099FE  0E01               	movlw	1
  9064  009A00  25F1               	addwf	_channel& (0+255),w,b
  9065  009A02  6F79               	movwf	(?_printf+2)& (0+255),b
  9066  009A04  6B7A               	clrf	(?_printf+3)& (0+255),b
  9067  009A06  0E00               	movlw	0
  9068  009A08  237A               	addwfc	(?_printf+3)& (0+255),f,b
  9069  009A0A  ECF7  F04B         	call	_printf	;wreg free
  9070  009A0E  0012               	return		;funcret
  9071  009A10                     __end_of_cmdGetRFCH:
  9072                           	opt callstack 0
  9073                           
  9074 ;; *************** function _cmdGetMode *****************
  9075 ;; Defined at:
  9076 ;;		line 521 in file "app/app_src/application.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;		None
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;		None
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;Total ram usage:        0 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:   16
  9097 ;; This function calls:
  9098 ;;		_printf
  9099 ;; This function is called by:
  9100 ;;		_executeATCommand
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text43
  9105  009C10                     __ptext43:
  9106                           	opt callstack 0
  9107  009C10                     _cmdGetMode:
  9108                           	opt callstack 12
  9109  009C10                     
  9110                           ;app/app_src/application.c: 523:   printf("MODE = REPEATER\r\n");
  9111  009C10  0E34               	movlw	low STR_29
  9112  009C12  0100               	movlb	0	; () banked
  9113  009C14  6F77               	movwf	printf@fmt& (0+255),b
  9114  009C16  0EFE               	movlw	high STR_29
  9115  009C18  6F78               	movwf	(printf@fmt+1)& (0+255),b
  9116  009C1A  ECF7  F04B         	call	_printf	;wreg free
  9117  009C1E  0012               	return		;funcret
  9118  009C20                     __end_of_cmdGetMode:
  9119                           	opt callstack 0
  9120                           
  9121 ;; *************** function _cmdGetCADRSSI *****************
  9122 ;; Defined at:
  9123 ;;		line 613 in file "app/app_src/application.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;		None
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;		None
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  1    wreg      void 
  9130 ;; Registers used:
  9131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;Total ram usage:        0 bytes
  9142 ;; Hardware stack levels used:    1
  9143 ;; Hardware stack levels required when called:   16
  9144 ;; This function calls:
  9145 ;;		_printf
  9146 ;; This function is called by:
  9147 ;;		_executeATCommand
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text44
  9152  009A10                     __ptext44:
  9153                           	opt callstack 0
  9154  009A10                     _cmdGetCADRSSI:
  9155                           	opt callstack 12
  9156  009A10                     
  9157                           ;app/app_src/application.c: 614:  printf("CAD RSS=%i\r\n",RSSITarget);
  9158  009A10  0E80               	movlw	low STR_40
  9159  009A12  0100               	movlb	0	; () banked
  9160  009A14  6F77               	movwf	printf@fmt& (0+255),b
  9161  009A16  0EFE               	movlw	high STR_40
  9162  009A18  6F78               	movwf	(printf@fmt+1)& (0+255),b
  9163  009A1A  51FB               	movf	_RSSITarget& (0+255),w,b
  9164  009A1C  6F79               	movwf	(?_printf+2)& (0+255),b
  9165  009A1E  6B7A               	clrf	(?_printf+3)& (0+255),b
  9166  009A20  BF79               	btfsc	(?_printf+2)& (0+255),7,b
  9167  009A22  077A               	decf	(?_printf+3)& (0+255),f,b
  9168  009A24  ECF7  F04B         	call	_printf	;wreg free
  9169  009A28  0012               	return		;funcret
  9170  009A2A                     __end_of_cmdGetCADRSSI:
  9171                           	opt callstack 0
  9172                           
  9173 ;; *************** function _cmdGetCAD *****************
  9174 ;; Defined at:
  9175 ;;		line 498 in file "app/app_src/application.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      void 
  9182 ;; Registers used:
  9183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;Total ram usage:        0 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:   16
  9196 ;; This function calls:
  9197 ;;		_printf
  9198 ;; This function is called by:
  9199 ;;		_executeATCommand
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text45
  9204  009ADA                     __ptext45:
  9205                           	opt callstack 0
  9206  009ADA                     _cmdGetCAD:
  9207                           	opt callstack 12
  9208  009ADA                     
  9209                           ;app/app_src/application.c: 499:  printf("CAD COUNTER = %02X\r\n",cadCounter);
  9210  009ADA  0E0D               	movlw	low STR_27
  9211  009ADC  0100               	movlb	0	; () banked
  9212  009ADE  6F77               	movwf	printf@fmt& (0+255),b
  9213  009AE0  0EFE               	movlw	high STR_27
  9214  009AE2  6F78               	movwf	(printf@fmt+1)& (0+255),b
  9215  009AE4  0060  F5C4  F079   	movff	_cadCounter,?_printf+2
  9216  009AEA  6B7A               	clrf	(?_printf+3)& (0+255),b
  9217  009AEC  ECF7  F04B         	call	_printf	;wreg free
  9218  009AF0  0012               	return		;funcret
  9219  009AF2                     __end_of_cmdGetCAD:
  9220                           	opt callstack 0
  9221                           
  9222 ;; *************** function _cmdBootLoad *****************
  9223 ;; Defined at:
  9224 ;;		line 686 in file "app/app_src/application.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;		None
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;		None
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;Total ram usage:        2 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; Hardware stack levels required when called:   16
  9245 ;; This function calls:
  9246 ;;		_DATAEE_WriteByte_Platform
  9247 ;;		_printf
  9248 ;; This function is called by:
  9249 ;;		_executeATCommand
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text46
  9254  009512                     __ptext46:
  9255                           	opt callstack 0
  9256  009512                     _cmdBootLoad:
  9257                           	opt callstack 12
  9258  009512                     
  9259                           ;app/app_src/application.c: 687:     DATAEE_WriteByte_Platform(0 + 0,0x00);
  9260  009512  0E00               	movlw	0
  9261  009514  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  9262  009516  0E00               	movlw	0
  9263  009518  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  9264  00951A  0E00               	movlw	0
  9265  00951C  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
  9266  00951E  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
  9267  009522                     
  9268                           ;app/app_src/application.c: 688:     printf("OK\r\n");
  9269  009522  0ED7               	movlw	low STR_11
  9270  009524  0100               	movlb	0	; () banked
  9271  009526  6F77               	movwf	printf@fmt& (0+255),b
  9272  009528  0EFF               	movlw	high STR_11
  9273  00952A  6F78               	movwf	(printf@fmt+1)& (0+255),b
  9274  00952C  ECF7  F04B         	call	_printf	;wreg free
  9275  009530                     
  9276                           ;app/app_src/application.c: 689:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9277  009530  0E52               	movlw	82
  9278  009532  6E5D               	movwf	(??_cmdBootLoad+1)^0,c
  9279  009534  0E2B               	movlw	43
  9280  009536  6E5C               	movwf	??_cmdBootLoad^0,c
  9281  009538  0E00               	movlw	0
  9282  00953A                     u17897:
  9283  00953A  2EE8               	decfsz	wreg,f,c
  9284  00953C  D7FE               	bra	u17897
  9285  00953E  2E5C               	decfsz	??_cmdBootLoad^0,f,c
  9286  009540  D7FC               	bra	u17897
  9287  009542  2E5D               	decfsz	(??_cmdBootLoad+1)^0,f,c
  9288  009544  D7FA               	bra	u17897
  9289  009546  D000               	nop2	
  9290  009548  00FF               	reset		;# 
  9291  00954A  0012               	return		;funcret
  9292  00954C                     __end_of_cmdBootLoad:
  9293                           	opt callstack 0
  9294                           
  9295 ;; *************** function _cmdBcast *****************
  9296 ;; Defined at:
  9297 ;;		line 233 in file "app/app_src/application.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  cmd             2   29[BANK0 ] PTR unsigned char 
  9300 ;;		 -> atCommand(80), 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  msgstr         64   31[BANK0 ] unsigned char [64]
  9303 ;;  msgid           1    0        unsigned char 
  9304 ;;  p2              3    0        PTR unsigned char 
  9305 ;;  p1              2   95[BANK0 ] PTR unsigned char 
  9306 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9316 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;      Locals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;Total ram usage:       68 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:   16
  9323 ;; This function calls:
  9324 ;;		_NWK_DataReq
  9325 ;;		_memcpy
  9326 ;;		_memset
  9327 ;;		_printf
  9328 ;;		_strlen
  9329 ;;		_strstr
  9330 ;; This function is called by:
  9331 ;;		_executeATCommand
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text47
  9336  005A8E                     __ptext47:
  9337                           	opt callstack 0
  9338  005A8E                     _cmdBcast:
  9339                           	opt callstack 12
  9340  005A8E                     
  9341                           ;app/app_src/application.c: 234:  char *p1,*p2;;app/app_src/application.c: 236:  p1 = st
      +                          rstr(cmd,"=") + 1;
  9342  005A8E  0060  F1F4  F00D   	movff	cmdBcast@cmd,strstr@h
  9343  005A94  0060  F1F8  F00E   	movff	cmdBcast@cmd+1,strstr@h+1
  9344  005A9A  0EDF               	movlw	low (STR_16+3)
  9345  005A9C  6E0F               	movwf	strstr@n^0,c
  9346  005A9E  0EFF               	movlw	high (STR_16+3)
  9347  005AA0  6E10               	movwf	(strstr@n+1)^0,c
  9348  005AA2  EC17  F032         	call	_strstr	;wreg free
  9349  005AA6  0E01               	movlw	1
  9350  005AA8  240D               	addwf	?_strstr^0,w,c
  9351  005AAA  0100               	movlb	0	; () banked
  9352  005AAC  6FBF               	movwf	cmdBcast@p1& (0+255),b
  9353  005AAE  0E00               	movlw	0
  9354  005AB0  200E               	addwfc	(?_strstr+1)^0,w,c
  9355  005AB2  6FC0               	movwf	(cmdBcast@p1+1)& (0+255),b
  9356  005AB4                     
  9357                           ; BSR set to: 0
  9358                           ;app/app_src/application.c: 238:  if((!p1) || (strlen(p1) > 64)){
  9359  005AB4  51BF               	movf	cmdBcast@p1& (0+255),w,b
  9360  005AB6  11C0               	iorwf	(cmdBcast@p1+1)& (0+255),w,b
  9361  005AB8  B4D8               	btfsc	status,2,c
  9362  005ABA  EF61  F02D         	goto	u16231
  9363  005ABE  EF63  F02D         	goto	u16230
  9364  005AC2                     u16231:
  9365  005AC2  EF76  F02D         	goto	l16173
  9366  005AC6                     u16230:
  9367  005AC6                     
  9368                           ; BSR set to: 0
  9369  005AC6  0060  F2FC  F002   	movff	cmdBcast@p1,strlen@s
  9370  005ACC  0060  F300  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9371  005AD2  EC91  F045         	call	_strlen	;wreg free
  9372  005AD6  5003               	movf	(?_strlen+1)^0,w,c
  9373  005AD8  E109               	bnz	u16240
  9374  005ADA  0E41               	movlw	65
  9375  005ADC  5C02               	subwf	?_strlen^0,w,c
  9376  005ADE  A0D8               	btfss	status,0,c
  9377  005AE0  EF74  F02D         	goto	u16241
  9378  005AE4  EF76  F02D         	goto	u16240
  9379  005AE8                     u16241:
  9380  005AE8  EF81  F02D         	goto	l16175
  9381  005AEC                     u16240:
  9382  005AEC                     l16173:
  9383                           
  9384                           ;app/app_src/application.c: 239:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  9385  005AEC  0ECC               	movlw	low STR_4
  9386  005AEE  0100               	movlb	0	; () banked
  9387  005AF0  6F77               	movwf	printf@fmt& (0+255),b
  9388  005AF2  0EFE               	movlw	high STR_4
  9389  005AF4  6F78               	movwf	(printf@fmt+1)& (0+255),b
  9390  005AF6  0E07               	movlw	7
  9391  005AF8  6F79               	movwf	(?_printf+2)& (0+255),b
  9392  005AFA  ECF7  F04B         	call	_printf	;wreg free
  9393                           
  9394                           ;app/app_src/application.c: 240:  }
  9395  005AFE  EFD5  F02D         	goto	l245
  9396  005B02                     l16175:
  9397                           
  9398                           ;app/app_src/application.c: 242:   char msgstr[64];;app/app_src/application.c: 243:     
      +                              uint8_t msgid;;app/app_src/application.c: 244:         memset(msgstr, 0, sizeof(msgs
      +                          tr));
  9399  005B02  0E7F               	movlw	low cmdBcast@msgstr
  9400  005B04  6E02               	movwf	memset@dest^0,c
  9401  005B06  0E00               	movlw	high cmdBcast@msgstr
  9402  005B08  6E03               	movwf	(memset@dest+1)^0,c
  9403  005B0A  0E00               	movlw	0
  9404  005B0C  6E05               	movwf	(memset@c+1)^0,c
  9405  005B0E  0E00               	movlw	0
  9406  005B10  6E04               	movwf	memset@c^0,c
  9407  005B12  0E00               	movlw	0
  9408  005B14  6E07               	movwf	(memset@n+1)^0,c
  9409  005B16  0E40               	movlw	64
  9410  005B18  6E06               	movwf	memset@n^0,c
  9411  005B1A  ECA5  F023         	call	_memset	;wreg free
  9412  005B1E                     
  9413                           ;app/app_src/application.c: 245:   memcpy(msgstr,p1,strlen(p1));
  9414  005B1E  0E7F               	movlw	low cmdBcast@msgstr
  9415  005B20  6E08               	movwf	memcpy@d1^0,c
  9416  005B22  0E00               	movlw	high cmdBcast@msgstr
  9417  005B24  6E09               	movwf	(memcpy@d1+1)^0,c
  9418  005B26  0060  F2FC  F00A   	movff	cmdBcast@p1,memcpy@s1
  9419  005B2C  0060  F300  F00B   	movff	cmdBcast@p1+1,memcpy@s1+1
  9420  005B32  0060  F2FC  F002   	movff	cmdBcast@p1,strlen@s
  9421  005B38  0060  F300  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9422  005B3E  EC91  F045         	call	_strlen	;wreg free
  9423  005B42  0060  F008  F00C   	movff	?_strlen,memcpy@n
  9424  005B48  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  9425  005B4E  ECD7  F041         	call	_memcpy	;wreg free
  9426  005B52                     
  9427                           ;app/app_src/application.c: 246:   nwkDataReq.dstAddr = 0xFFFF;
  9428  005B52  0101               	movlb	1	; () banked
  9429  005B54  6986               	setf	(_nwkDataReq+5)& (0+255),b
  9430  005B56  6987               	setf	(_nwkDataReq+6)& (0+255),b
  9431  005B58                     
  9432                           ; BSR set to: 1
  9433                           ;app/app_src/application.c: 247:         nwkDataReq.dstEndpoint = 1;
  9434  005B58  0E01               	movlw	1
  9435  005B5A  6F88               	movwf	(_nwkDataReq+7)& (0+255),b
  9436  005B5C                     
  9437                           ; BSR set to: 1
  9438                           ;app/app_src/application.c: 248:         nwkDataReq.srcEndpoint = 1;
  9439  005B5C  0E01               	movlw	1
  9440  005B5E  6F89               	movwf	(_nwkDataReq+8)& (0+255),b
  9441  005B60                     
  9442                           ; BSR set to: 1
  9443                           ;app/app_src/application.c: 249:         nwkDataReq.options = 0;
  9444  005B60  0E00               	movlw	0
  9445  005B62  6F8A               	movwf	(_nwkDataReq+9)& (0+255),b
  9446  005B64                     
  9447                           ; BSR set to: 1
  9448                           ;app/app_src/application.c: 250:         nwkDataReq.data = &msgstr;
  9449  005B64  0E7F               	movlw	low cmdBcast@msgstr
  9450  005B66  6F8D               	movwf	(_nwkDataReq+12)& (0+255),b
  9451  005B68  0E00               	movlw	high cmdBcast@msgstr
  9452  005B6A  6F8E               	movwf	(_nwkDataReq+13)& (0+255),b
  9453  005B6C                     
  9454                           ; BSR set to: 1
  9455                           ;app/app_src/application.c: 251:         nwkDataReq.size = strlen(p1);
  9456  005B6C  0060  F2FC  F002   	movff	cmdBcast@p1,strlen@s
  9457  005B72  0060  F300  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9458  005B78  EC91  F045         	call	_strlen	;wreg free
  9459  005B7C  5002               	movf	?_strlen^0,w,c
  9460  005B7E  0101               	movlb	1	; () banked
  9461  005B80  6F8F               	movwf	(_nwkDataReq+14)& (0+255),b
  9462  005B82                     
  9463                           ; BSR set to: 1
  9464                           ;app/app_src/application.c: 252:         nwkDataReq.confirm = &appDataConf;
  9465  005B82  0E00               	movlw	0
  9466  005B84  6F90               	movwf	(_nwkDataReq+15)& (0+255),b
  9467  005B86  0E00               	movlw	0
  9468  005B88  6F91               	movwf	(_nwkDataReq+16)& (0+255),b
  9469  005B8A                     
  9470                           ; BSR set to: 1
  9471                           ;app/app_src/application.c: 253:         NWK_DataReq(&nwkDataReq);
  9472  005B8A  0E81               	movlw	low _nwkDataReq
  9473  005B8C  6E02               	movwf	NWK_DataReq@req^0,c
  9474  005B8E  0E01               	movlw	high _nwkDataReq
  9475  005B90  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  9476  005B92  EC34  F040         	call	_NWK_DataReq	;wreg free
  9477  005B96                     
  9478                           ;app/app_src/application.c: 254:   printf("OK:%u\r\n",(uint16_t)(msgIDCounter - 1));
  9479  005B96  0ED0               	movlw	low (STR_4+4)
  9480  005B98  0100               	movlb	0	; () banked
  9481  005B9A  6F77               	movwf	printf@fmt& (0+255),b
  9482  005B9C  0EFE               	movlw	high (STR_4+4)
  9483  005B9E  6F78               	movwf	(printf@fmt+1)& (0+255),b
  9484  005BA0  0EFF               	movlw	255
  9485  005BA2  6F7A               	movwf	(?_printf+3)& (0+255),b
  9486  005BA4  6979               	setf	(?_printf+2)& (0+255),b
  9487  005BA6  ECF7  F04B         	call	_printf	;wreg free
  9488  005BAA                     l245:
  9489  005BAA  0012               	return		;funcret
  9490  005BAC                     __end_of_cmdBcast:
  9491                           	opt callstack 0
  9492                           
  9493 ;; *************** function _strstr *****************
  9494 ;; Defined at:
  9495 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strstr.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  h               2   12[COMRAM] PTR const unsigned char 
  9498 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  9499 ;;  n               2   14[COMRAM] PTR const unsigned char 
  9500 ;;		 -> STR_127(10), STR_125(10), STR_123(6), STR_121(6), 
  9501 ;;		 -> STR_119(7), STR_117(5), STR_115(7), STR_113(7), 
  9502 ;;		 -> STR_111(6), STR_109(9), STR_107(8), STR_105(8), 
  9503 ;;		 -> STR_103(7), STR_101(6), STR_99(3), STR_97(9), 
  9504 ;;		 -> STR_95(7), STR_93(7), STR_91(10), STR_89(10), 
  9505 ;;		 -> STR_87(15), STR_85(13), STR_83(9), STR_81(7), 
  9506 ;;		 -> STR_79(7), STR_77(10), STR_75(7), STR_73(8), 
  9507 ;;		 -> STR_71(11), STR_69(5), STR_67(5), STR_65(7), 
  9508 ;;		 -> STR_63(9), STR_61(7), STR_55(2), STR_49(6), 
  9509 ;;		 -> STR_47(6), STR_45(5), STR_41(2), STR_36(2), 
  9510 ;;		 -> STR_32(2), STR_23(2), STR_20(2), STR_14(2), 
  9511 ;;		 -> STR_10(2), STR_6(2), STR_3(2), STR_2(2), 
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;  nl              2   16[COMRAM] unsigned int 
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  2   12[COMRAM] PTR unsigned char 
  9516 ;; Registers used:
  9517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;Total ram usage:        6 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    8
  9530 ;; This function calls:
  9531 ;;		_strchr
  9532 ;;		_strlen
  9533 ;;		_strncmp
  9534 ;; This function is called by:
  9535 ;;		_cmdSend
  9536 ;;		_cmdBcast
  9537 ;;		_cmdSetAddr
  9538 ;;		_cmdSetNaddr
  9539 ;;		_cmdSetAES
  9540 ;;		_cmdSetRFCH
  9541 ;;		_cmdSetTX
  9542 ;;		_cmdSetCADRSSI
  9543 ;;		_cmdSetParity
  9544 ;;		_cmdSetSF
  9545 ;;		_executeATCommand
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text48
  9550  00642E                     __ptext48:
  9551                           	opt callstack 0
  9552  00642E                     _strstr:
  9553                           	opt callstack 20
  9554  00642E  500F               	movf	strstr@n^0,w,c
  9555  006430  1010               	iorwf	(strstr@n+1)^0,w,c
  9556  006432  B4D8               	btfsc	status,2,c
  9557  006434  EF1E  F032         	goto	u15491
  9558  006438  EF20  F032         	goto	u15490
  9559  00643C                     u15491:
  9560  00643C  EF94  F032         	goto	l15719
  9561  006440                     u15490:
  9562  006440  0060  F03C  F002   	movff	strstr@n,strlen@s
  9563  006446  0060  F040  F003   	movff	strstr@n+1,strlen@s+1
  9564  00644C  EC91  F045         	call	_strlen	;wreg free
  9565  006450  0060  F008  F011   	movff	?_strlen,strstr@nl
  9566  006456  0060  F00C  F012   	movff	?_strlen+1,strstr@nl+1
  9567  00645C  EF6E  F032         	goto	l15715
  9568  006460                     l15707:
  9569  006460  0060  F034  F002   	movff	strstr@h,strncmp@_l
  9570  006466  0060  F038  F003   	movff	strstr@h+1,strncmp@_l+1
  9571  00646C  0060  F03C  F004   	movff	strstr@n,strncmp@_r
  9572  006472  0060  F040  F005   	movff	strstr@n+1,strncmp@_r+1
  9573  006478  0060  F044  F006   	movff	strstr@nl,strncmp@n
  9574  00647E  0060  F048  F007   	movff	strstr@nl+1,strncmp@n+1
  9575  006484  ECD7  F028         	call	_strncmp	;wreg free
  9576  006488  5002               	movf	?_strncmp^0,w,c
  9577  00648A  1003               	iorwf	(?_strncmp+1)^0,w,c
  9578  00648C  A4D8               	btfss	status,2,c
  9579  00648E  EF4B  F032         	goto	u15501
  9580  006492  EF4D  F032         	goto	u15500
  9581  006496                     u15501:
  9582  006496  EF55  F032         	goto	l15713
  9583  00649A                     u15500:
  9584  00649A  0060  F034  F00D   	movff	strstr@h,?_strstr
  9585  0064A0  0060  F038  F00E   	movff	strstr@h+1,?_strstr+1
  9586  0064A6  EF98  F032         	goto	l3977
  9587  0064AA                     l15713:
  9588  0064AA  0E01               	movlw	1
  9589  0064AC  240D               	addwf	strstr@h^0,w,c
  9590  0064AE  6E02               	movwf	strchr@s^0,c
  9591  0064B0  0E00               	movlw	0
  9592  0064B2  200E               	addwfc	(strstr@h+1)^0,w,c
  9593  0064B4  6E03               	movwf	(strchr@s+1)^0,c
  9594  0064B6  0060  F03F  FFF6   	movff	strstr@n,tblptrl
  9595  0064BC  0060  F043  FFF7   	movff	strstr@n+1,tblptrh
  9596  0064C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9597  0064C2  6AF8               	clrf	tblptru,c
  9598  0064C4                     	endif
  9599  0064C4                     	if	0	;tblptru may be non-zero
  9600  0064C4                     	endif
  9601  0064C4  0008               	tblrd		*
  9602  0064C6  50F5               	movf	tablat,w,c
  9603  0064C8  6E04               	movwf	strchr@c^0,c
  9604  0064CA  6A05               	clrf	(strchr@c+1)^0,c
  9605  0064CC  EC9C  F03F         	call	_strchr	;wreg free
  9606  0064D0  0060  F008  F00D   	movff	?_strchr,strstr@h
  9607  0064D6  0060  F00C  F00E   	movff	?_strchr+1,strstr@h+1
  9608  0064DC                     l15715:
  9609  0064DC  500D               	movf	strstr@h^0,w,c
  9610  0064DE  100E               	iorwf	(strstr@h+1)^0,w,c
  9611  0064E0  B4D8               	btfsc	status,2,c
  9612  0064E2  EF75  F032         	goto	u15511
  9613  0064E6  EF77  F032         	goto	u15510
  9614  0064EA                     u15511:
  9615  0064EA  EF94  F032         	goto	l15719
  9616  0064EE                     u15510:
  9617  0064EE  0060  F037  FFF6   	movff	strstr@h,tblptrl
  9618  0064F4  0060  F03B  FFF7   	movff	strstr@h+1,tblptrh
  9619  0064FA  0E00               	movlw	low (__mediumconst shr (0+16))
  9620  0064FC  6EF8               	movwf	tblptru,c
  9621  0064FE  0E0F               	movlw	(high __ramtop+-1)
  9622  006500  64F7               	cpfsgt	tblptrh,c
  9623  006502  D003               	bra	u15527
  9624  006504  0008               	tblrd		*
  9625  006506  50F5               	movf	tablat,w,c
  9626  006508  D007               	bra	u15520
  9627  00650A                     u15527:
  9628  00650A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9629  006510  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9630  006516  50EF               	movf	indf0,w,c
  9631  006518                     u15520:
  9632  006518  0900               	iorlw	0
  9633  00651A  A4D8               	btfss	status,2,c
  9634  00651C  EF92  F032         	goto	u15531
  9635  006520  EF94  F032         	goto	u15530
  9636  006524                     u15531:
  9637  006524  EF30  F032         	goto	l15707
  9638  006528                     u15530:
  9639  006528                     l15719:
  9640  006528  0E00               	movlw	0
  9641  00652A  6E0D               	movwf	?_strstr^0,c
  9642  00652C  0E00               	movlw	0
  9643  00652E  6E0E               	movwf	(?_strstr+1)^0,c
  9644  006530                     l3977:
  9645  006530  0012               	return		;funcret
  9646  006532                     __end_of_strstr:
  9647                           	opt callstack 0
  9648                           
  9649 ;; *************** function _strncmp *****************
  9650 ;; Defined at:
  9651 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  9654 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  9655 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  9656 ;;		 -> STR_127(10), STR_125(10), STR_123(6), STR_121(6), 
  9657 ;;		 -> STR_119(7), STR_117(5), STR_115(7), STR_113(7), 
  9658 ;;		 -> STR_111(6), STR_109(9), STR_107(8), STR_105(8), 
  9659 ;;		 -> STR_103(7), STR_101(6), STR_99(3), STR_97(9), 
  9660 ;;		 -> STR_95(7), STR_93(7), STR_91(10), STR_89(10), 
  9661 ;;		 -> STR_87(15), STR_85(13), STR_83(9), STR_81(7), 
  9662 ;;		 -> STR_79(7), STR_77(10), STR_75(7), STR_73(8), 
  9663 ;;		 -> STR_71(11), STR_69(5), STR_67(5), STR_65(7), 
  9664 ;;		 -> STR_63(9), STR_61(7), STR_55(2), STR_49(6), 
  9665 ;;		 -> STR_47(6), STR_45(5), STR_41(2), STR_36(2), 
  9666 ;;		 -> STR_32(2), STR_23(2), STR_20(2), STR_14(2), 
  9667 ;;		 -> STR_10(2), STR_6(2), STR_3(2), STR_2(2), 
  9668 ;;  n               2    5[COMRAM] unsigned int 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  r               2   10[COMRAM] PTR const unsigned char 
  9671 ;;		 -> STR_127(10), STR_125(10), STR_123(6), STR_121(6), 
  9672 ;;		 -> STR_119(7), STR_117(5), STR_115(7), STR_113(7), 
  9673 ;;		 -> STR_111(6), STR_109(9), STR_107(8), STR_105(8), 
  9674 ;;		 -> STR_103(7), STR_101(6), STR_99(3), STR_97(9), 
  9675 ;;		 -> STR_95(7), STR_93(7), STR_91(10), STR_89(10), 
  9676 ;;		 -> STR_87(15), STR_85(13), STR_83(9), STR_81(7), 
  9677 ;;		 -> STR_79(7), STR_77(10), STR_75(7), STR_73(8), 
  9678 ;;		 -> STR_71(11), STR_69(5), STR_67(5), STR_65(7), 
  9679 ;;		 -> STR_63(9), STR_61(7), STR_55(2), STR_49(6), 
  9680 ;;		 -> STR_47(6), STR_45(5), STR_41(2), STR_36(2), 
  9681 ;;		 -> STR_32(2), STR_23(2), STR_20(2), STR_14(2), 
  9682 ;;		 -> STR_10(2), STR_6(2), STR_3(2), STR_2(2), 
  9683 ;;  l               2    8[COMRAM] PTR const unsigned char 
  9684 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  2    1[COMRAM] int 
  9687 ;; Registers used:
  9688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9694 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9695 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;Total ram usage:       11 bytes
  9699 ;; Hardware stack levels used:    1
  9700 ;; Hardware stack levels required when called:    7
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_strstr
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text49
  9709  0051AE                     __ptext49:
  9710                           	opt callstack 0
  9711  0051AE                     _strncmp:
  9712                           	opt callstack 20
  9713  0051AE  0060  F008  F009   	movff	strncmp@_l,strncmp@l
  9714  0051B4  0060  F00C  F00A   	movff	strncmp@_l+1,strncmp@l+1
  9715  0051BA  0060  F010  F00B   	movff	strncmp@_r,strncmp@r
  9716  0051C0  0060  F014  F00C   	movff	strncmp@_r+1,strncmp@r+1
  9717  0051C6  0606               	decf	strncmp@n^0,f,c
  9718  0051C8  A0D8               	btfss	status,0,c
  9719  0051CA  0607               	decf	(strncmp@n+1)^0,f,c
  9720  0051CC  2806               	incf	strncmp@n^0,w,c
  9721  0051CE  E106               	bnz	u14981
  9722  0051D0  2807               	incf	(strncmp@n+1)^0,w,c
  9723  0051D2  A4D8               	btfss	status,2,c
  9724  0051D4  EFEE  F028         	goto	u14981
  9725  0051D8  EFF0  F028         	goto	u14980
  9726  0051DC                     u14981:
  9727  0051DC  EFFD  F028         	goto	l15521
  9728  0051E0                     u14980:
  9729  0051E0  0E00               	movlw	0
  9730  0051E2  6E03               	movwf	(?_strncmp+1)^0,c
  9731  0051E4  0E00               	movlw	0
  9732  0051E6  6E02               	movwf	?_strncmp^0,c
  9733  0051E8  EF80  F029         	goto	l4110
  9734  0051EC                     l15519:
  9735  0051EC  4A09               	infsnz	strncmp@l^0,f,c
  9736  0051EE  2A0A               	incf	(strncmp@l+1)^0,f,c
  9737  0051F0  4A0B               	infsnz	strncmp@r^0,f,c
  9738  0051F2  2A0C               	incf	(strncmp@r+1)^0,f,c
  9739  0051F4  0606               	decf	strncmp@n^0,f,c
  9740  0051F6  A0D8               	btfss	status,0,c
  9741  0051F8  0607               	decf	(strncmp@n+1)^0,f,c
  9742  0051FA                     l15521:
  9743  0051FA  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9744  005200  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9745  005206  0E00               	movlw	low (__mediumconst shr (0+16))
  9746  005208  6EF8               	movwf	tblptru,c
  9747  00520A  0E0F               	movlw	(high __ramtop+-1)
  9748  00520C  64F7               	cpfsgt	tblptrh,c
  9749  00520E  D003               	bra	u14997
  9750  005210  0008               	tblrd		*
  9751  005212  50F5               	movf	tablat,w,c
  9752  005214  D007               	bra	u14990
  9753  005216                     u14997:
  9754  005216  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9755  00521C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9756  005222  50EF               	movf	indf0,w,c
  9757  005224                     u14990:
  9758  005224  0900               	iorlw	0
  9759  005226  B4D8               	btfsc	status,2,c
  9760  005228  EF18  F029         	goto	u15001
  9761  00522C  EF1A  F029         	goto	u15000
  9762  005230                     u15001:
  9763  005230  EF5C  F029         	goto	l15529
  9764  005234                     u15000:
  9765  005234  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9766  00523A  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9767  005240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9768  005240  6AF8               	clrf	tblptru,c
  9769  005242                     	endif
  9770  005242                     	if	0	;tblptru may be non-zero
  9771  005242                     	endif
  9772  005242  0008               	tblrd		*
  9773  005244  50F5               	movf	tablat,w,c
  9774  005246  0900               	iorlw	0
  9775  005248  B4D8               	btfsc	status,2,c
  9776  00524A  EF29  F029         	goto	u15011
  9777  00524E  EF2B  F029         	goto	u15010
  9778  005252                     u15011:
  9779  005252  EF5C  F029         	goto	l15529
  9780  005256                     u15010:
  9781  005256  5006               	movf	strncmp@n^0,w,c
  9782  005258  1007               	iorwf	(strncmp@n+1)^0,w,c
  9783  00525A  B4D8               	btfsc	status,2,c
  9784  00525C  EF32  F029         	goto	u15021
  9785  005260  EF34  F029         	goto	u15020
  9786  005264                     u15021:
  9787  005264  EF5C  F029         	goto	l15529
  9788  005268                     u15020:
  9789  005268  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9790  00526E  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9791  005274                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9792  005274  6AF8               	clrf	tblptru,c
  9793  005276                     	endif
  9794  005276                     	if	0	;tblptru may be non-zero
  9795  005276                     	endif
  9796  005276  0008               	tblrd		*
  9797  005278  006F FFD4  F008    	movff	tablat,??_strncmp
  9798  00527E  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9799  005284  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9800  00528A  0E00               	movlw	low (__mediumconst shr (0+16))
  9801  00528C  6EF8               	movwf	tblptru,c
  9802  00528E  0E0F               	movlw	(high __ramtop+-1)
  9803  005290  64F7               	cpfsgt	tblptrh,c
  9804  005292  D003               	bra	u15037
  9805  005294  0008               	tblrd		*
  9806  005296  50F5               	movf	tablat,w,c
  9807  005298  D007               	bra	u15035
  9808  00529A                     u15037:
  9809  00529A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9810  0052A0  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9811  0052A6  50EF               	movf	indf0,w,c
  9812  0052A8                     u15035:
  9813  0052A8  1808               	xorwf	??_strncmp^0,w,c
  9814  0052AA  B4D8               	btfsc	status,2,c
  9815  0052AC  EF5A  F029         	goto	u15031
  9816  0052B0  EF5C  F029         	goto	u15030
  9817  0052B4                     u15031:
  9818  0052B4  EFF6  F028         	goto	l15519
  9819  0052B8                     u15030:
  9820  0052B8                     l15529:
  9821  0052B8  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9822  0052BE  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9823  0052C4  0E00               	movlw	low (__mediumconst shr (0+16))
  9824  0052C6  6EF8               	movwf	tblptru,c
  9825  0052C8  0E0F               	movlw	(high __ramtop+-1)
  9826  0052CA  64F7               	cpfsgt	tblptrh,c
  9827  0052CC  D003               	bra	u15047
  9828  0052CE  0008               	tblrd		*
  9829  0052D0  50F5               	movf	tablat,w,c
  9830  0052D2  D007               	bra	u15040
  9831  0052D4                     u15047:
  9832  0052D4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9833  0052DA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9834  0052E0  50EF               	movf	indf0,w,c
  9835  0052E2                     u15040:
  9836  0052E2  6E08               	movwf	??_strncmp^0,c
  9837  0052E4  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9838  0052EA  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9839  0052F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9840  0052F0  6AF8               	clrf	tblptru,c
  9841  0052F2                     	endif
  9842  0052F2                     	if	0	;tblptru may be non-zero
  9843  0052F2                     	endif
  9844  0052F2  0008               	tblrd		*
  9845  0052F4  50F5               	movf	tablat,w,c
  9846  0052F6  5C08               	subwf	??_strncmp^0,w,c
  9847  0052F8  6E02               	movwf	?_strncmp^0,c
  9848  0052FA  6A03               	clrf	(?_strncmp+1)^0,c
  9849  0052FC  A0D8               	btfss	status,0,c
  9850  0052FE  0603               	decf	(?_strncmp+1)^0,f,c
  9851  005300                     l4110:
  9852  005300  0012               	return		;funcret
  9853  005302                     __end_of_strncmp:
  9854                           	opt callstack 0
  9855                           
  9856 ;; *************** function _strchr *****************
  9857 ;; Defined at:
  9858 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strchr.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  s               2    1[COMRAM] PTR const unsigned char 
  9861 ;;		 -> STR_53(2), STR_52(2), atCommand(80), NULL(0), 
  9862 ;;  c               2    3[COMRAM] int 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  2    1[COMRAM] PTR unsigned char 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;Total ram usage:        6 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    7
  9881 ;; This function calls:
  9882 ;;		Nothing
  9883 ;; This function is called by:
  9884 ;;		_strstr
  9885 ;;		_strcspn
  9886 ;;		_strspn
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text50
  9891  007F38                     __ptext50:
  9892                           	opt callstack 0
  9893  007F38                     _strchr:
  9894                           	opt callstack 20
  9895  007F38                     l4093:
  9896  007F38  0060  F00B  FFF6   	movff	strchr@s,tblptrl
  9897  007F3E  0060  F00F  FFF7   	movff	strchr@s+1,tblptrh
  9898  007F44  0E00               	movlw	low (__mediumconst shr (0+16))
  9899  007F46  6EF8               	movwf	tblptru,c
  9900  007F48  0E0F               	movlw	(high __ramtop+-1)
  9901  007F4A  64F7               	cpfsgt	tblptrh,c
  9902  007F4C  D003               	bra	u14347
  9903  007F4E  0008               	tblrd		*
  9904  007F50  50F5               	movf	tablat,w,c
  9905  007F52  D007               	bra	u14340
  9906  007F54                     u14347:
  9907  007F54  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9908  007F5A  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9909  007F60  50EF               	movf	indf0,w,c
  9910  007F62                     u14340:
  9911  007F62  1804               	xorwf	strchr@c^0,w,c
  9912  007F64  A4D8               	btfss	status,2,c
  9913  007F66  EFB7  F03F         	goto	u14351
  9914  007F6A  EFB9  F03F         	goto	u14350
  9915  007F6E                     u14351:
  9916  007F6E  EFC1  F03F         	goto	l15055
  9917  007F72                     u14350:
  9918  007F72  0060  F008  F002   	movff	strchr@s,?_strchr
  9919  007F78  0060  F00C  F003   	movff	strchr@s+1,?_strchr+1
  9920  007F7E  EFE8  F03F         	goto	l4095
  9921  007F82                     l15055:
  9922  007F82  5002               	movf	strchr@s^0,w,c
  9923  007F84  6E06               	movwf	??_strchr^0,c
  9924  007F86  5003               	movf	(strchr@s+1)^0,w,c
  9925  007F88  6E07               	movwf	(??_strchr+1)^0,c
  9926  007F8A  4A02               	infsnz	strchr@s^0,f,c
  9927  007F8C  2A03               	incf	(strchr@s+1)^0,f,c
  9928  007F8E  0060  F01B  FFF6   	movff	??_strchr,tblptrl
  9929  007F94  0060  F01F  FFF7   	movff	??_strchr+1,tblptrh
  9930  007F9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9931  007F9C  6EF8               	movwf	tblptru,c
  9932  007F9E  0E0F               	movlw	(high __ramtop+-1)
  9933  007FA0  64F7               	cpfsgt	tblptrh,c
  9934  007FA2  D003               	bra	u14367
  9935  007FA4  0008               	tblrd		*
  9936  007FA6  50F5               	movf	tablat,w,c
  9937  007FA8  D007               	bra	u14360
  9938  007FAA                     u14367:
  9939  007FAA  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9940  007FB0  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9941  007FB6  50EF               	movf	indf0,w,c
  9942  007FB8                     u14360:
  9943  007FB8  0900               	iorlw	0
  9944  007FBA  A4D8               	btfss	status,2,c
  9945  007FBC  EFE2  F03F         	goto	u14371
  9946  007FC0  EFE4  F03F         	goto	u14370
  9947  007FC4                     u14371:
  9948  007FC4  EF9C  F03F         	goto	l4093
  9949  007FC8                     u14370:
  9950  007FC8  0E00               	movlw	0
  9951  007FCA  6E02               	movwf	?_strchr^0,c
  9952  007FCC  0E00               	movlw	0
  9953  007FCE  6E03               	movwf	(?_strchr+1)^0,c
  9954  007FD0                     l4095:
  9955  007FD0  0012               	return		;funcret
  9956  007FD2                     __end_of_strchr:
  9957                           	opt callstack 0
  9958                           
  9959 ;; *************** function _NWK_DataReq *****************
  9960 ;; Defined at:
  9961 ;;		line 87 in file "nwk/nwk_src/nwkDataReq.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
  9964 ;;		 -> nwkDataReq(19), 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;		None
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      void 
  9969 ;; Registers used:
  9970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9980 ;;Total ram usage:        2 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; Hardware stack levels required when called:    7
  9983 ;; This function calls:
  9984 ;;		Nothing
  9985 ;; This function is called by:
  9986 ;;		_cmdSend
  9987 ;;		_cmdBcast
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text51
  9992  008068                     __ptext51:
  9993                           	opt callstack 0
  9994  008068                     _NWK_DataReq:
  9995                           	opt callstack 20
  9996  008068                     
  9997                           ;nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);nwk/nwk_src/nwkDataR
      +                          eq.c: 88: {;nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INITIAL;
  9998  008068  EE20 F004          	lfsr	2,4
  9999  00806C  5002               	movf	NWK_DataReq@req^0,w,c
 10000  00806E  26D9               	addwf	fsr2l,f,c
 10001  008070  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10002  008072  22DA               	addwfc	fsr2h,f,c
 10003  008074  0E00               	movlw	0
 10004  008076  6EDF               	movwf	indf2,c
 10005                           
 10006                           ;nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 10007  008078  EE20 F011          	lfsr	2,17
 10008  00807C  5002               	movf	NWK_DataReq@req^0,w,c
 10009  00807E  26D9               	addwf	fsr2l,f,c
 10010  008080  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10011  008082  22DA               	addwfc	fsr2h,f,c
 10012  008084  0E00               	movlw	0
 10013  008086  6EDF               	movwf	indf2,c
 10014                           
 10015                           ;nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
 10016  008088  EE20 F002          	lfsr	2,2
 10017  00808C  5002               	movf	NWK_DataReq@req^0,w,c
 10018  00808E  26D9               	addwf	fsr2l,f,c
 10019  008090  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10020  008092  22DA               	addwfc	fsr2h,f,c
 10021  008094  0E00               	movlw	0
 10022  008096  6EDE               	movwf	postinc2,c
 10023  008098  0E00               	movlw	0
 10024  00809A  6EDD               	movwf	postdec2,c
 10025  00809C                     
 10026                           ;nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 10027  00809C  0101               	movlb	1	; () banked
 10028  00809E  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 10029  0080A0  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 10030  0080A2                     
 10031                           ; BSR set to: 1
 10032                           ;nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
 10033  0080A2  0100               	movlb	0	; () banked
 10034  0080A4  51E8               	movf	_nwkDataReqQueue& (0+255),w,b
 10035  0080A6  11E9               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 10036  0080A8  A4D8               	btfss	status,2,c
 10037  0080AA  EF59  F040         	goto	u15541
 10038  0080AE  EF5B  F040         	goto	u15540
 10039  0080B2                     u15541:
 10040  0080B2  EF6D  F040         	goto	l15737
 10041  0080B6                     u15540:
 10042  0080B6                     
 10043                           ; BSR set to: 0
 10044                           ;nwk/nwk_src/nwkDataReq.c: 96:   {;nwk/nwk_src/nwkDataReq.c: 97:     req->next = ((void*
      +                          )0);
 10045  0080B6  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10046  0080BC  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10047  0080C2  0E00               	movlw	0
 10048  0080C4  6EDE               	movwf	postinc2,c
 10049  0080C6  0E00               	movlw	0
 10050  0080C8  6EDD               	movwf	postdec2,c
 10051  0080CA                     l15735:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 10055  0080CA  0060  F008  F0E8   	movff	NWK_DataReq@req,_nwkDataReqQueue
 10056  0080D0  0060  F00C  F0E9   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 10057                           
 10058                           ;nwk/nwk_src/nwkDataReq.c: 99:   }
 10059  0080D6  EF7B  F040         	goto	l1741
 10060  0080DA                     l15737:
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;nwk/nwk_src/nwkDataReq.c: 101:   {;nwk/nwk_src/nwkDataReq.c: 102:     req->next = nwkDa
      +                          taReqQueue;
 10064  0080DA  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10065  0080E0  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10066  0080E6  0060  F3A3  FFDE   	movff	_nwkDataReqQueue,postinc2
 10067  0080EC  0060  F3A7  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 10068  0080F2  EF65  F040         	goto	l15735
 10069  0080F6                     l1741:
 10070                           
 10071                           ; BSR set to: 0
 10072  0080F6  0012               	return		;funcret
 10073  0080F8                     __end_of_NWK_DataReq:
 10074                           	opt callstack 0
 10075                           
 10076 ;; *************** function _cmdAddr *****************
 10077 ;; Defined at:
 10078 ;;		line 265 in file "app/app_src/application.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;		None
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;Total ram usage:        0 bytes
 10097 ;; Hardware stack levels used:    1
 10098 ;; Hardware stack levels required when called:   16
 10099 ;; This function calls:
 10100 ;;		_printf
 10101 ;; This function is called by:
 10102 ;;		_executeATCommand
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           	psect	text52
 10107  00993A                     __ptext52:
 10108                           	opt callstack 0
 10109  00993A                     _cmdAddr:
 10110                           	opt callstack 12
 10111  00993A                     
 10112                           ;app/app_src/application.c: 266:  printf("ADDR=%02X%02X\r\n",currentAddr0,currentAddr1);
 10113  00993A  0E46               	movlw	low STR_9
 10114  00993C  0100               	movlb	0	; () banked
 10115  00993E  6F77               	movwf	printf@fmt& (0+255),b
 10116  009940  0EFE               	movlw	high STR_9
 10117  009942  6F78               	movwf	(printf@fmt+1)& (0+255),b
 10118  009944  0060  F7AC  F079   	movff	_currentAddr0,?_printf+2
 10119  00994A  6B7A               	clrf	(?_printf+3)& (0+255),b
 10120  00994C  0060  F7A8  F07B   	movff	_currentAddr1,?_printf+4
 10121  009952  6B7C               	clrf	(?_printf+5)& (0+255),b
 10122  009954  ECF7  F04B         	call	_printf	;wreg free
 10123  009958  0012               	return		;funcret
 10124  00995A                     __end_of_cmdAddr:
 10125                           	opt callstack 0
 10126                           
 10127 ;; *************** function _UART1_is_rx_ready *****************
 10128 ;; Defined at:
 10129 ;;		line 169 in file "mcc_generated_files/uart1.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;		None
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;		None
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      _Bool 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;Total ram usage:        0 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:    7
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_processATCommand
 10154 ;;		_UART_error_handler
 10155 ;; This function uses a non-reentrant model
 10156 ;;
 10157                           
 10158                           	psect	text53
 10159  009AF2                     __ptext53:
 10160                           	opt callstack 0
 10161  009AF2                     _UART1_is_rx_ready:
 10162                           	opt callstack 22
 10163  009AF2                     
 10164                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 10165  009AF2  0100               	movlb	0	; () banked
 10166  009AF4  51EC               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10167  009AF6  A4D8               	btfss	status,2,c
 10168  009AF8  EF80  F04D         	goto	u10831
 10169  009AFC  EF83  F04D         	goto	u10830
 10170  009B00                     u10831:
 10171  009B00  0E01               	movlw	1
 10172  009B02  EF84  F04D         	goto	u10840
 10173  009B06                     u10830:
 10174  009B06  0E00               	movlw	0
 10175  009B08                     u10840:
 10176  009B08                     
 10177                           ; BSR set to: 0
 10178  009B08  0012               	return		;funcret
 10179  009B0A                     __end_of_UART1_is_rx_ready:
 10180                           	opt callstack 0
 10181                           
 10182 ;; *************** function _UART1_Read *****************
 10183 ;; Defined at:
 10184 ;;		line 188 in file "mcc_generated_files/uart1.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;		None
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;  readValue       1    1[COMRAM] unsigned char 
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  1    wreg      unsigned char 
 10191 ;; Registers used:
 10192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10202 ;;Total ram usage:        1 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:    7
 10205 ;; This function calls:
 10206 ;;		Nothing
 10207 ;; This function is called by:
 10208 ;;		_processATCommand
 10209 ;;		_UART_error_handler
 10210 ;;		_getch
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text54
 10215  008A0E                     __ptext54:
 10216                           	opt callstack 0
 10217  008A0E                     _UART1_Read:
 10218                           	opt callstack 22
 10219  008A0E                     l12259:
 10220                           
 10221                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10222  008A0E  0100               	movlb	0	; () banked
 10223  008A10  51EC               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10224  008A12  B4D8               	btfsc	status,2,c
 10225  008A14  EF0E  F045         	goto	u10811
 10226  008A18  EF10  F045         	goto	u10810
 10227  008A1C                     u10811:
 10228  008A1C  EF07  F045         	goto	l12259
 10229  008A20                     u10810:
 10230  008A20                     
 10231                           ; BSR set to: 0
 10232                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10233  008A20  0E3C               	movlw	low _uart1RxStatusBuffer
 10234  008A22  25ED               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10235  008A24  6ED9               	movwf	fsr2l,c
 10236  008A26  6ADA               	clrf	fsr2h,c
 10237  008A28  0E01               	movlw	high _uart1RxStatusBuffer
 10238  008A2A  22DA               	addwfc	fsr2h,f,c
 10239  008A2C  50DF               	movf	indf2,w,c
 10240  008A2E  0101               	movlb	1	; () banked
 10241  008A30  6F68               	movwf	_uart1RxLastError& (0+255),b	;volatile
 10242                           
 10243                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 10244  008A32  0E00               	movlw	low _uart1RxBuffer
 10245  008A34  0100               	movlb	0	; () banked
 10246  008A36  25ED               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10247  008A38  6ED9               	movwf	fsr2l,c
 10248  008A3A  6ADA               	clrf	fsr2h,c
 10249  008A3C  0E02               	movlw	high _uart1RxBuffer
 10250  008A3E  22DA               	addwfc	fsr2h,f,c
 10251  008A40  50DF               	movf	indf2,w,c
 10252  008A42  6E02               	movwf	UART1_Read@readValue^0,c
 10253  008A44                     
 10254                           ; BSR set to: 0
 10255  008A44  2BED               	incf	_uart1RxTail& (0+255),f,b	;volatile
 10256  008A46                     
 10257                           ; BSR set to: 0
 10258                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10259  008A46  0E0F               	movlw	15
 10260  008A48  65ED               	cpfsgt	_uart1RxTail& (0+255),b	;volatile
 10261  008A4A  EF29  F045         	goto	u10821
 10262  008A4E  EF2B  F045         	goto	u10820
 10263  008A52                     u10821:
 10264  008A52  EF2D  F045         	goto	l12269
 10265  008A56                     u10820:
 10266  008A56                     
 10267                           ; BSR set to: 0
 10268                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 10269  008A56  0E00               	movlw	0
 10270  008A58  6FED               	movwf	_uart1RxTail& (0+255),b	;volatile
 10271  008A5A                     l12269:
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 10275  008A5A  0139               	movlb	57	; () banked
 10276  008A5C  9793               	bcf	147,3,b	;volatile
 10277  008A5E                     
 10278                           ; BSR set to: 57
 10279                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 10280  008A5E  0100               	movlb	0	; () banked
 10281  008A60  07EC               	decf	_uart1RxCount& (0+255),f,b	;volatile
 10282  008A62                     
 10283                           ; BSR set to: 0
 10284                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 10285  008A62  0139               	movlb	57	; () banked
 10286  008A64  8793               	bsf	147,3,b	;volatile
 10287  008A66                     
 10288                           ; BSR set to: 57
 10289                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 10290  008A66  5002               	movf	UART1_Read@readValue^0,w,c
 10291  008A68                     
 10292                           ; BSR set to: 57
 10293  008A68  0012               	return		;funcret
 10294  008A6A                     __end_of_UART1_Read:
 10295                           	opt callstack 0
 10296                           
 10297 ;; *************** function _bootLoadApplication *****************
 10298 ;; Defined at:
 10299 ;;		line 1245 in file "app/app_src/application.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;		None
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  temp            2   49[COMRAM] unsigned short 
 10304 ;;  i               1   51[COMRAM] unsigned char 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      void 
 10307 ;; Registers used:
 10308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10317 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;Total ram usage:        5 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; Hardware stack levels required when called:   14
 10321 ;; This function calls:
 10322 ;;		_DATAEE_ReadByte_Platform
 10323 ;;		_DATAEE_WriteByte_Platform
 10324 ;;		_NWK_OpenEndpoint
 10325 ;;		_NWK_SetAddr
 10326 ;;		_NWK_SetPanId
 10327 ;;		_PHY_SetChannel
 10328 ;;		_PHY_SetRxState
 10329 ;;		_crc16_app
 10330 ;;		_loadMACAddr
 10331 ;;		_set_parity
 10332 ;;		_set_uart_baud
 10333 ;; This function is called by:
 10334 ;;		_main
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text55
 10339  002776                     __ptext55:
 10340                           	opt callstack 0
 10341  002776                     _bootLoadApplication:
 10342                           	opt callstack 16
 10343  002776                     
 10344                           ;app/app_src/application.c: 1247:     uint16_t temp;;app/app_src/application.c: 1248:   
      +                            uint8_t i;;app/app_src/application.c: 1253:     loadMACAddr();
 10345  002776  EC62  F048         	call	_loadMACAddr	;wreg free
 10346                           
 10347                           ;app/app_src/application.c: 1255:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte), 0
      +                          );
 10348  00277A  0EBB               	movlw	low _EUIDbyte
 10349  00277C  6E13               	movwf	crc16_app@dptr^0,c
 10350  00277E  0E01               	movlw	high _EUIDbyte
 10351  002780  6E14               	movwf	(crc16_app@dptr+1)^0,c
 10352  002782  0E00               	movlw	0
 10353  002784  6E16               	movwf	(crc16_app@len+1)^0,c
 10354  002786  0E0C               	movlw	12
 10355  002788  6E15               	movwf	crc16_app@len^0,c
 10356  00278A  0E00               	movlw	0
 10357  00278C  6E18               	movwf	(crc16_app@seed+1)^0,c
 10358  00278E  0E00               	movlw	0
 10359  002790  6E17               	movwf	crc16_app@seed^0,c
 10360  002792  EC0B  F03E         	call	_crc16_app	;wreg free
 10361  002796  0060  F04C  F032   	movff	?_crc16_app,bootLoadApplication@temp
 10362  00279C  0060  F050  F033   	movff	?_crc16_app+1,bootLoadApplication@temp+1
 10363  0027A2                     
 10364                           ;app/app_src/application.c: 1256:     currentAddr0 = (temp >> 8) & 0xFF;
 10365  0027A2  5033               	movf	(bootLoadApplication@temp+1)^0,w,c
 10366  0027A4  0101               	movlb	1	; () banked
 10367  0027A6  6FEB               	movwf	_currentAddr0& (0+255),b
 10368  0027A8                     
 10369                           ; BSR set to: 1
 10370                           ;app/app_src/application.c: 1257:     currentAddr1 = (temp) & 0xFF;
 10371  0027A8  0060  F0C8  F1EA   	movff	bootLoadApplication@temp,_currentAddr1
 10372  0027AE                     
 10373                           ; BSR set to: 1
 10374                           ;app/app_src/application.c: 1260:     currentNetID = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1);
 10375  0027AE  0E00               	movlw	0
 10376  0027B0  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10377  0027B2  0E19               	movlw	25
 10378  0027B4  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10379  0027B6  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10380  0027BA  0100               	movlb	0	; () banked
 10381  0027BC  6FFC               	movwf	_currentNetID& (0+255),b
 10382  0027BE                     
 10383                           ; BSR set to: 0
 10384                           ;app/app_src/application.c: 1263:     for(i = 0; i < 16; i++){
 10385  0027BE  0E00               	movlw	0
 10386  0027C0  6E34               	movwf	bootLoadApplication@i^0,c
 10387  0027C2                     l17115:
 10388                           
 10389                           ;app/app_src/application.c: 1264:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10390  0027C2  0E20               	movlw	low _aes_key
 10391  0027C4  2434               	addwf	bootLoadApplication@i^0,w,c
 10392  0027C6  6ED9               	movwf	fsr2l,c
 10393  0027C8  6ADA               	clrf	fsr2h,c
 10394  0027CA  0E02               	movlw	high _aes_key
 10395  0027CC  22DA               	addwfc	fsr2h,f,c
 10396  0027CE  0E09               	movlw	9
 10397  0027D0  2434               	addwf	bootLoadApplication@i^0,w,c
 10398  0027D2  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10399  0027D4  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10400  0027D6  0E00               	movlw	0
 10401  0027D8  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10402  0027DA  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10403  0027DE  6EDF               	movwf	indf2,c
 10404  0027E0                     
 10405                           ;app/app_src/application.c: 1265:     }
 10406  0027E0  2A34               	incf	bootLoadApplication@i^0,f,c
 10407  0027E2  0E0F               	movlw	15
 10408  0027E4  6434               	cpfsgt	bootLoadApplication@i^0,c
 10409  0027E6  EFF7  F013         	goto	u17401
 10410  0027EA  EFF9  F013         	goto	u17400
 10411  0027EE                     u17401:
 10412  0027EE  EFE1  F013         	goto	l17115
 10413  0027F2                     u17400:
 10414  0027F2                     
 10415                           ;app/app_src/application.c: 1266:     for(i = 0; i < 16; i++){
 10416  0027F2  0E00               	movlw	0
 10417  0027F4  6E34               	movwf	bootLoadApplication@i^0,c
 10418  0027F6                     l17127:
 10419                           
 10420                           ;app/app_src/application.c: 1267:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10421  0027F6  0E10               	movlw	low _net_key
 10422  0027F8  2434               	addwf	bootLoadApplication@i^0,w,c
 10423  0027FA  6ED9               	movwf	fsr2l,c
 10424  0027FC  6ADA               	clrf	fsr2h,c
 10425  0027FE  0E02               	movlw	high _net_key
 10426  002800  22DA               	addwfc	fsr2h,f,c
 10427  002802  0E23               	movlw	35
 10428  002804  2434               	addwf	bootLoadApplication@i^0,w,c
 10429  002806  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10430  002808  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10431  00280A  0E00               	movlw	0
 10432  00280C  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10433  00280E  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10434  002812  6EDF               	movwf	indf2,c
 10435  002814                     
 10436                           ;app/app_src/application.c: 1268:     }
 10437  002814  2A34               	incf	bootLoadApplication@i^0,f,c
 10438  002816  0E0F               	movlw	15
 10439  002818  6434               	cpfsgt	bootLoadApplication@i^0,c
 10440  00281A  EF11  F014         	goto	u17411
 10441  00281E  EF13  F014         	goto	u17410
 10442  002822                     u17411:
 10443  002822  EFFB  F013         	goto	l17127
 10444  002826                     u17410:
 10445  002826                     
 10446                           ;app/app_src/application.c: 1275:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1);
 10447  002826  0E00               	movlw	0
 10448  002828  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10449  00282A  0E1A               	movlw	26
 10450  00282C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10451  00282E  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10452  002832  0101               	movlb	1	; () banked
 10453  002834  6F7B               	movwf	_sinkAddr0& (0+255),b
 10454                           
 10455                           ;app/app_src/application.c: 1276:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1);
 10456  002836  0E00               	movlw	0
 10457  002838  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10458  00283A  0E1B               	movlw	27
 10459  00283C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10460  00283E  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10461  002842  0101               	movlb	1	; () banked
 10462  002844  6F7A               	movwf	_sinkAddr1& (0+255),b
 10463                           
 10464                           ;app/app_src/application.c: 1279:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1);
 10465  002846  0E00               	movlw	0
 10466  002848  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10467  00284A  0E1C               	movlw	28
 10468  00284C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10469  00284E  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10470  002852  0100               	movlb	0	; () banked
 10471  002854  6FF1               	movwf	_channel& (0+255),b
 10472  002856                     
 10473                           ; BSR set to: 0
 10474                           ;app/app_src/application.c: 1280:     if(channel > sizeof(fhssList)){
 10475  002856  0EFC               	movlw	252
 10476  002858  65F1               	cpfsgt	_channel& (0+255),b
 10477  00285A  EF31  F014         	goto	u17421
 10478  00285E  EF33  F014         	goto	u17420
 10479  002862                     u17421:
 10480  002862  EF3E  F014         	goto	l17141
 10481  002866                     u17420:
 10482  002866                     
 10483                           ; BSR set to: 0
 10484                           ;app/app_src/application.c: 1281:         channel = 0;
 10485  002866  0E00               	movlw	0
 10486  002868  6FF1               	movwf	_channel& (0+255),b
 10487  00286A                     
 10488                           ; BSR set to: 0
 10489                           ;app/app_src/application.c: 1282:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1,channel);
 10490  00286A  0E00               	movlw	0
 10491  00286C  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10492  00286E  0E1C               	movlw	28
 10493  002870  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10494  002872  0060  F3C4  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
 10495  002878  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
 10496  00287C                     l17141:
 10497                           
 10498                           ;app/app_src/application.c: 1286:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1);
 10499  00287C  0E00               	movlw	0
 10500  00287E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10501  002880  0E1D               	movlw	29
 10502  002882  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10503  002884  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10504  002888  0100               	movlb	0	; () banked
 10505  00288A  6FF0               	movwf	_TXPower& (0+255),b
 10506  00288C                     
 10507                           ; BSR set to: 0
 10508                           ;app/app_src/application.c: 1287:     if((TXPower < 2) || (TXPower > 5)){
 10509  00288C  0E01               	movlw	1
 10510  00288E  65F0               	cpfsgt	_TXPower& (0+255),b
 10511  002890  EF4C  F014         	goto	u17431
 10512  002894  EF4E  F014         	goto	u17430
 10513  002898                     u17431:
 10514  002898  EF56  F014         	goto	l17147
 10515  00289C                     u17430:
 10516  00289C                     
 10517                           ; BSR set to: 0
 10518  00289C  0E05               	movlw	5
 10519  00289E  65F0               	cpfsgt	_TXPower& (0+255),b
 10520  0028A0  EF54  F014         	goto	u17441
 10521  0028A4  EF56  F014         	goto	u17440
 10522  0028A8                     u17441:
 10523  0028A8  EF61  F014         	goto	l17151
 10524  0028AC                     u17440:
 10525  0028AC                     l17147:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;app/app_src/application.c: 1288:         TXPower = 5;
 10529  0028AC  0E05               	movlw	5
 10530  0028AE  6FF0               	movwf	_TXPower& (0+255),b
 10531  0028B0                     
 10532                           ; BSR set to: 0
 10533                           ;app/app_src/application.c: 1289:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1,TXPower);
 10534  0028B0  0E00               	movlw	0
 10535  0028B2  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10536  0028B4  0E1D               	movlw	29
 10537  0028B6  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10538  0028B8  0060  F3C0  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
 10539  0028BE  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
 10540  0028C2                     l17151:
 10541                           
 10542                           ;app/app_src/application.c: 1293:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10543  0028C2  0E00               	movlw	0
 10544  0028C4  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10545  0028C6  0E21               	movlw	33
 10546  0028C8  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10547  0028CA  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10548  0028CE  0100               	movlb	0	; () banked
 10549  0028D0  6FF2               	movwf	_current_sf& (0+255),b
 10550  0028D2                     
 10551                           ; BSR set to: 0
 10552                           ;app/app_src/application.c: 1294:     if((current_sf < 7) || (current_sf > 12)){
 10553  0028D2  0E06               	movlw	6
 10554  0028D4  65F2               	cpfsgt	_current_sf& (0+255),b
 10555  0028D6  EF6F  F014         	goto	u17451
 10556  0028DA  EF71  F014         	goto	u17450
 10557  0028DE                     u17451:
 10558  0028DE  EF79  F014         	goto	l17157
 10559  0028E2                     u17450:
 10560  0028E2                     
 10561                           ; BSR set to: 0
 10562  0028E2  0E0C               	movlw	12
 10563  0028E4  65F2               	cpfsgt	_current_sf& (0+255),b
 10564  0028E6  EF77  F014         	goto	u17461
 10565  0028EA  EF79  F014         	goto	u17460
 10566  0028EE                     u17461:
 10567  0028EE  EF84  F014         	goto	l17161
 10568  0028F2                     u17460:
 10569  0028F2                     l17157:
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;app/app_src/application.c: 1295:         current_sf = 7;
 10573  0028F2  0E07               	movlw	7
 10574  0028F4  6FF2               	movwf	_current_sf& (0+255),b
 10575  0028F6                     
 10576                           ; BSR set to: 0
 10577                           ;app/app_src/application.c: 1296:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
 10578  0028F6  0E00               	movlw	0
 10579  0028F8  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10580  0028FA  0E21               	movlw	33
 10581  0028FC  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10582  0028FE  0060  F3C8  F008   	movff	_current_sf,DATAEE_WriteByte_Platform@data
 10583  002904  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
 10584  002908                     l17161:
 10585                           
 10586                           ;app/app_src/application.c: 1300:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1);
 10587  002908  0E00               	movlw	0
 10588  00290A  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10589  00290C  0E1E               	movlw	30
 10590  00290E  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10591  002910  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10592  002914  0100               	movlb	0	; () banked
 10593  002916  6FFB               	movwf	_RSSITarget& (0+255),b
 10594  002918                     
 10595                           ; BSR set to: 0
 10596                           ;app/app_src/application.c: 1301:     if((RSSITarget >= -30) || (RSSITarget < -120)){
 10597  002918  51FB               	movf	_RSSITarget& (0+255),w,b
 10598  00291A  0A80               	xorlw	128
 10599  00291C  0F9E               	addlw	158
 10600  00291E  B0D8               	btfsc	status,0,c
 10601  002920  EF94  F014         	goto	u17471
 10602  002924  EF96  F014         	goto	u17470
 10603  002928                     u17471:
 10604  002928  EFA0  F014         	goto	l17167
 10605  00292C                     u17470:
 10606  00292C                     
 10607                           ; BSR set to: 0
 10608  00292C  51FB               	movf	_RSSITarget& (0+255),w,b
 10609  00292E  0A80               	xorlw	128
 10610  002930  0FF8               	addlw	248
 10611  002932  B0D8               	btfsc	status,0,c
 10612  002934  EF9E  F014         	goto	u17481
 10613  002938  EFA0  F014         	goto	u17480
 10614  00293C                     u17481:
 10615  00293C  EFAB  F014         	goto	l17171
 10616  002940                     u17480:
 10617  002940                     l17167:
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;app/app_src/application.c: 1302:         RSSITarget = -80;
 10621  002940  0EB0               	movlw	176
 10622  002942  6FFB               	movwf	_RSSITarget& (0+255),b
 10623  002944                     
 10624                           ; BSR set to: 0
 10625                           ;app/app_src/application.c: 1303:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1,RSSITarget);
 10626  002944  0E00               	movlw	0
 10627  002946  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10628  002948  0E1E               	movlw	30
 10629  00294A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10630  00294C  0060  F3EC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
 10631  002952  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
 10632  002956                     l17171:
 10633                           
 10634                           ;app/app_src/application.c: 1307:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1);
 10635  002956  0E00               	movlw	0
 10636  002958  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10637  00295A  0E1F               	movlw	31
 10638  00295C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10639  00295E  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10640  002962  6E34               	movwf	bootLoadApplication@i^0,c
 10641  002964                     
 10642                           ;app/app_src/application.c: 1308:     if((i > UART_9BIT_EVEN_PARITY) | (UART_7BIT_MODE =
      +                          = i)){
 10643  002964  0E04               	movlw	4
 10644  002966  6034               	cpfslt	bootLoadApplication@i^0,c
 10645  002968  EFB8  F014         	goto	u17491
 10646  00296C  EFBA  F014         	goto	u17490
 10647  002970                     u17491:
 10648  002970  EFC2  F014         	goto	l17177
 10649  002974                     u17490:
 10650  002974  0434               	decf	bootLoadApplication@i^0,w,c
 10651  002976  A4D8               	btfss	status,2,c
 10652  002978  EFC0  F014         	goto	u17501
 10653  00297C  EFC2  F014         	goto	u17500
 10654  002980                     u17501:
 10655  002980  EFCC  F014         	goto	l17181
 10656  002984                     u17500:
 10657  002984                     l17177:
 10658                           
 10659                           ;app/app_src/application.c: 1309:         i = UART_9BIT_EVEN_PARITY;
 10660  002984  0E03               	movlw	3
 10661  002986  6E34               	movwf	bootLoadApplication@i^0,c
 10662  002988                     
 10663                           ;app/app_src/application.c: 1310:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
 10664  002988  0E00               	movlw	0
 10665  00298A  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10666  00298C  0E1F               	movlw	31
 10667  00298E  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10668  002990  0E03               	movlw	3
 10669  002992  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10670  002994  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
 10671  002998                     l17181:
 10672                           
 10673                           ;app/app_src/application.c: 1313:     set_parity(i);
 10674  002998  5034               	movf	bootLoadApplication@i^0,w,c
 10675  00299A  EC7C  F040         	call	_set_parity
 10676  00299E                     
 10677                           ;app/app_src/application.c: 1316:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1);
 10678  00299E  0E00               	movlw	0
 10679  0029A0  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10680  0029A2  0E20               	movlw	32
 10681  0029A4  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10682  0029A6  ECD4  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10683  0029AA  6E34               	movwf	bootLoadApplication@i^0,c
 10684  0029AC                     
 10685                           ;app/app_src/application.c: 1317:     if(i > UART_BAUD_19200){
 10686  0029AC  0E01               	movlw	1
 10687  0029AE  6434               	cpfsgt	bootLoadApplication@i^0,c
 10688  0029B0  EFDC  F014         	goto	u17511
 10689  0029B4  EFDE  F014         	goto	u17510
 10690  0029B8                     u17511:
 10691  0029B8  EFE8  F014         	goto	l17191
 10692  0029BC                     u17510:
 10693  0029BC                     
 10694                           ;app/app_src/application.c: 1318:         i = UART_BAUD_19200;
 10695  0029BC  0E01               	movlw	1
 10696  0029BE  6E34               	movwf	bootLoadApplication@i^0,c
 10697  0029C0                     
 10698                           ;app/app_src/application.c: 1319:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
 10699  0029C0  0E00               	movlw	0
 10700  0029C2  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10701  0029C4  0E20               	movlw	32
 10702  0029C6  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10703  0029C8  0E01               	movlw	1
 10704  0029CA  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10705  0029CC  ECA8  F048         	call	_DATAEE_WriteByte_Platform	;wreg free
 10706  0029D0                     l17191:
 10707                           
 10708                           ;app/app_src/application.c: 1321:     set_uart_baud(i);
 10709  0029D0  5034               	movf	bootLoadApplication@i^0,w,c
 10710  0029D2  EC15  F035         	call	_set_uart_baud
 10711  0029D6                     
 10712                           ;app/app_src/application.c: 1359:     temp = (currentAddr0 << 8) | currentAddr1;
 10713  0029D6  0101               	movlb	1	; () banked
 10714  0029D8  51EA               	movf	_currentAddr1& (0+255),w,b
 10715  0029DA  0060  F7AC  F030   	movff	_currentAddr0,??_bootLoadApplication
 10716  0029E0  6A31               	clrf	(??_bootLoadApplication+1)^0,c
 10717  0029E2  0060  F0C0  F031   	movff	??_bootLoadApplication,??_bootLoadApplication+1
 10718  0029E8  6A30               	clrf	??_bootLoadApplication^0,c
 10719  0029EA  1030               	iorwf	??_bootLoadApplication^0,w,c
 10720  0029EC  6E32               	movwf	bootLoadApplication@temp^0,c
 10721  0029EE  5031               	movf	(??_bootLoadApplication+1)^0,w,c
 10722  0029F0  6E33               	movwf	(bootLoadApplication@temp+1)^0,c
 10723  0029F2                     
 10724                           ; BSR set to: 1
 10725                           ;app/app_src/application.c: 1360:     if(temp < 0x8000){
 10726  0029F2  0E80               	movlw	128
 10727  0029F4  5C33               	subwf	(bootLoadApplication@temp+1)^0,w,c
 10728  0029F6  B0D8               	btfsc	status,0,c
 10729  0029F8  EF00  F015         	goto	u17521
 10730  0029FC  EF02  F015         	goto	u17520
 10731  002A00                     u17521:
 10732  002A00  EF09  F015         	goto	l17203
 10733  002A04                     u17520:
 10734  002A04                     
 10735                           ; BSR set to: 1
 10736                           ;app/app_src/application.c: 1361:         temp += 0x8000;
 10737  002A04  0E80               	movlw	128
 10738  002A06  2633               	addwf	(bootLoadApplication@temp+1)^0,f,c
 10739  002A08                     
 10740                           ; BSR set to: 1
 10741                           ;app/app_src/application.c: 1362:         currentAddr0 = (temp >> 8) & 0xFF;
 10742  002A08  5033               	movf	(bootLoadApplication@temp+1)^0,w,c
 10743  002A0A  6FEB               	movwf	_currentAddr0& (0+255),b
 10744  002A0C                     
 10745                           ; BSR set to: 1
 10746                           ;app/app_src/application.c: 1363:         currentAddr1 = temp & 0xFF;
 10747  002A0C  0060  F0C8  F1EA   	movff	bootLoadApplication@temp,_currentAddr1
 10748  002A12                     l17203:
 10749                           
 10750                           ; BSR set to: 1
 10751                           ;app/app_src/application.c: 1365:     NWK_SetAddr(temp);
 10752  002A12  0060  F0C8  F004   	movff	bootLoadApplication@temp,NWK_SetAddr@addr
 10753  002A18  0060  F0CC  F005   	movff	bootLoadApplication@temp+1,NWK_SetAddr@addr+1
 10754  002A1E  ECDC  F04C         	call	_NWK_SetAddr	;wreg free
 10755  002A22                     
 10756                           ;app/app_src/application.c: 1366:     NWK_SetPanId(0x1234);
 10757  002A22  0E12               	movlw	18
 10758  002A24  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
 10759  002A26  0E34               	movlw	52
 10760  002A28  6E04               	movwf	NWK_SetPanId@panId^0,c
 10761  002A2A  ECCD  F04C         	call	_NWK_SetPanId	;wreg free
 10762  002A2E                     
 10763                           ;app/app_src/application.c: 1367:     PHY_SetChannel(0x00);
 10764  002A2E  0E00               	movlw	0
 10765  002A30  ECD3  F049         	call	_PHY_SetChannel
 10766  002A34                     
 10767                           ;app/app_src/application.c: 1368:     PHY_SetRxState(1);
 10768  002A34  0E01               	movlw	1
 10769  002A36  EC77  F04E         	call	_PHY_SetRxState
 10770  002A3A                     
 10771                           ;app/app_src/application.c: 1369:     NWK_OpenEndpoint(1, appDataInd);
 10772  002A3A  0E5E               	movlw	low _appDataInd
 10773  002A3C  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 10774  002A3E  0E7D               	movlw	high _appDataInd
 10775  002A40  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 10776  002A42  0E01               	movlw	1
 10777  002A44  ECBD  F04C         	call	_NWK_OpenEndpoint
 10778  002A48  0012               	return		;funcret
 10779  002A4A                     __end_of_bootLoadApplication:
 10780                           	opt callstack 0
 10781                           
 10782 ;; *************** function _set_uart_baud *****************
 10783 ;; Defined at:
 10784 ;;		line 124 in file "app/app_src/application.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;  i               1    wreg     unsigned char 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;  i               1    3[COMRAM] unsigned char 
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      unsigned char 
 10791 ;; Registers used:
 10792 ;;		wreg, status,2, status,0
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10802 ;;Total ram usage:        3 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:    7
 10805 ;; This function calls:
 10806 ;;		Nothing
 10807 ;; This function is called by:
 10808 ;;		_bootLoadApplication
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text56
 10813  006A2A                     __ptext56:
 10814                           	opt callstack 0
 10815  006A2A                     _set_uart_baud:
 10816                           	opt callstack 22
 10817                           
 10818                           ;incstack = 0
 10819                           ;set_uart_baud@i stored from wreg
 10820  006A2A  6E04               	movwf	set_uart_baud@i^0,c
 10821  006A2C                     
 10822                           ;app/app_src/application.c: 124: static uint8_t set_uart_baud(uint8_t i);app/app_src/app
      +                          lication.c: 125: {;app/app_src/application.c: 126:     U1CON1 &= ~(1<<7);
 10823  006A2C  013D               	movlb	61	; () banked
 10824  006A2E  9FF3               	bcf	243,7,b	;volatile
 10825                           
 10826                           ;app/app_src/application.c: 127:     switch(i)
 10827  006A30  EF6A  F035         	goto	l12337
 10828  006A34                     l12285:
 10829                           
 10830                           ; BSR set to: 61
 10831                           ;app/app_src/application.c: 131:             U1CON0 &=~ (1<<7);
 10832  006A34  9FF2               	bcf	242,7,b	;volatile
 10833  006A36                     
 10834                           ; BSR set to: 61
 10835                           ;app/app_src/application.c: 132:             U1BRGL = 0xA0;
 10836  006A36  0EA0               	movlw	160
 10837  006A38  6FF5               	movwf	245,b	;volatile
 10838  006A3A                     
 10839                           ; BSR set to: 61
 10840                           ;app/app_src/application.c: 133:             U1BRGH = 0x01;
 10841  006A3A  0E01               	movlw	1
 10842  006A3C  6FF6               	movwf	246,b	;volatile
 10843  006A3E                     
 10844                           ; BSR set to: 61
 10845                           ;app/app_src/application.c: 134:             current_baud_rate = 9600;
 10846  006A3E  0E80               	movlw	128
 10847  006A40  0101               	movlb	1	; () banked
 10848  006A42  6F56               	movwf	_current_baud_rate& (0+255),b
 10849  006A44  0E25               	movlw	37
 10850  006A46  6F57               	movwf	(_current_baud_rate+1)& (0+255),b
 10851  006A48  0E00               	movlw	0
 10852  006A4A  6F58               	movwf	(_current_baud_rate+2)& (0+255),b
 10853  006A4C                     
 10854                           ; BSR set to: 1
 10855                           ;app/app_src/application.c: 135:             uart_baud_rate = UART_BAUD_9600;
 10856  006A4C  0E00               	movlw	0
 10857  006A4E  6F7F               	movwf	_uart_baud_rate& (0+255),b
 10858                           
 10859                           ;app/app_src/application.c: 136:             break;
 10860  006A50  EF8B  F035         	goto	l12339
 10861  006A54                     l12295:
 10862                           
 10863                           ; BSR set to: 61
 10864                           ;app/app_src/application.c: 139:             U1CON0 &=~ (1<<7);
 10865  006A54  9FF2               	bcf	242,7,b	;volatile
 10866  006A56                     
 10867                           ; BSR set to: 61
 10868                           ;app/app_src/application.c: 140:             U1BRGL = 0xCF;
 10869  006A56  0ECF               	movlw	207
 10870  006A58  6FF5               	movwf	245,b	;volatile
 10871  006A5A                     
 10872                           ; BSR set to: 61
 10873                           ;app/app_src/application.c: 141:             U1BRGH = 0x00;
 10874  006A5A  0E00               	movlw	0
 10875  006A5C  6FF6               	movwf	246,b	;volatile
 10876  006A5E                     
 10877                           ; BSR set to: 61
 10878                           ;app/app_src/application.c: 142:             current_baud_rate = 19200;
 10879  006A5E  0E00               	movlw	0
 10880  006A60  0101               	movlb	1	; () banked
 10881  006A62  6F56               	movwf	_current_baud_rate& (0+255),b
 10882  006A64  0E4B               	movlw	75
 10883  006A66  6F57               	movwf	(_current_baud_rate+1)& (0+255),b
 10884  006A68  0E00               	movlw	0
 10885  006A6A  6F58               	movwf	(_current_baud_rate+2)& (0+255),b
 10886  006A6C                     
 10887                           ; BSR set to: 1
 10888                           ;app/app_src/application.c: 143:             uart_baud_rate = UART_BAUD_19200;
 10889  006A6C  0E01               	movlw	1
 10890  006A6E  6F7F               	movwf	_uart_baud_rate& (0+255),b
 10891                           
 10892                           ;app/app_src/application.c: 144:             break;
 10893  006A70  EF8B  F035         	goto	l12339
 10894  006A74                     l12305:
 10895                           
 10896                           ; BSR set to: 61
 10897                           ;app/app_src/application.c: 147:             U1CON0 &=~ (1<<7);
 10898  006A74  9FF2               	bcf	242,7,b	;volatile
 10899  006A76                     
 10900                           ; BSR set to: 61
 10901                           ;app/app_src/application.c: 148:             U1BRGL = 0x67;
 10902  006A76  0E67               	movlw	103
 10903  006A78  6FF5               	movwf	245,b	;volatile
 10904  006A7A                     
 10905                           ; BSR set to: 61
 10906                           ;app/app_src/application.c: 149:             U1BRGH = 0x00;
 10907  006A7A  0E00               	movlw	0
 10908  006A7C  6FF6               	movwf	246,b	;volatile
 10909  006A7E                     
 10910                           ; BSR set to: 61
 10911                           ;app/app_src/application.c: 150:             current_baud_rate = 38400;
 10912  006A7E  0E00               	movlw	0
 10913  006A80  0101               	movlb	1	; () banked
 10914  006A82  6F56               	movwf	_current_baud_rate& (0+255),b
 10915  006A84  0E96               	movlw	150
 10916  006A86  6F57               	movwf	(_current_baud_rate+1)& (0+255),b
 10917  006A88  0E00               	movlw	0
 10918  006A8A  6F58               	movwf	(_current_baud_rate+2)& (0+255),b
 10919  006A8C                     
 10920                           ; BSR set to: 1
 10921                           ;app/app_src/application.c: 151:             uart_baud_rate = UART_BAUD_38400;
 10922  006A8C  0E02               	movlw	2
 10923  006A8E  6F7F               	movwf	_uart_baud_rate& (0+255),b
 10924                           
 10925                           ;app/app_src/application.c: 152:             break;
 10926  006A90  EF8B  F035         	goto	l12339
 10927  006A94                     l12315:
 10928                           
 10929                           ; BSR set to: 61
 10930                           ;app/app_src/application.c: 155:             U1CON0 |= (1<<7);
 10931  006A94  8FF2               	bsf	242,7,b	;volatile
 10932  006A96                     
 10933                           ; BSR set to: 61
 10934                           ;app/app_src/application.c: 156:             U1BRGL = 0x14;
 10935  006A96  0E14               	movlw	20
 10936  006A98  6FF5               	movwf	245,b	;volatile
 10937  006A9A                     
 10938                           ; BSR set to: 61
 10939                           ;app/app_src/application.c: 157:             U1BRGH = 0x01;
 10940  006A9A  0E01               	movlw	1
 10941  006A9C  6FF6               	movwf	246,b	;volatile
 10942  006A9E                     
 10943                           ; BSR set to: 61
 10944                           ;app/app_src/application.c: 158:             current_baud_rate = 57600;
 10945  006A9E  0E00               	movlw	0
 10946  006AA0  0101               	movlb	1	; () banked
 10947  006AA2  6F56               	movwf	_current_baud_rate& (0+255),b
 10948  006AA4  0EE1               	movlw	225
 10949  006AA6  6F57               	movwf	(_current_baud_rate+1)& (0+255),b
 10950  006AA8  0E00               	movlw	0
 10951  006AAA  6F58               	movwf	(_current_baud_rate+2)& (0+255),b
 10952  006AAC                     
 10953                           ; BSR set to: 1
 10954                           ;app/app_src/application.c: 159:             uart_baud_rate = UART_BAUD_57600;
 10955  006AAC  0E03               	movlw	3
 10956  006AAE  6F7F               	movwf	_uart_baud_rate& (0+255),b
 10957                           
 10958                           ;app/app_src/application.c: 160:             break;
 10959  006AB0  EF8B  F035         	goto	l12339
 10960  006AB4                     l12325:
 10961                           
 10962                           ; BSR set to: 61
 10963                           ;app/app_src/application.c: 163:             U1CON0 |= (1<<7);
 10964  006AB4  8FF2               	bsf	242,7,b	;volatile
 10965  006AB6                     
 10966                           ; BSR set to: 61
 10967                           ;app/app_src/application.c: 164:             U1BRGL = 0x89;
 10968  006AB6  0E89               	movlw	137
 10969  006AB8  6FF5               	movwf	245,b	;volatile
 10970  006ABA                     
 10971                           ; BSR set to: 61
 10972                           ;app/app_src/application.c: 165:             U1BRGH = 0x00;
 10973  006ABA  0E00               	movlw	0
 10974  006ABC  6FF6               	movwf	246,b	;volatile
 10975  006ABE                     
 10976                           ; BSR set to: 61
 10977                           ;app/app_src/application.c: 166:             current_baud_rate = 115200;
 10978  006ABE  0E00               	movlw	0
 10979  006AC0  0101               	movlb	1	; () banked
 10980  006AC2  6F56               	movwf	_current_baud_rate& (0+255),b
 10981  006AC4  0EC2               	movlw	194
 10982  006AC6  6F57               	movwf	(_current_baud_rate+1)& (0+255),b
 10983  006AC8  0E01               	movlw	1
 10984  006ACA  6F58               	movwf	(_current_baud_rate+2)& (0+255),b
 10985  006ACC                     
 10986                           ; BSR set to: 1
 10987                           ;app/app_src/application.c: 167:             uart_baud_rate = UART_BAUD_115200;
 10988  006ACC  0E04               	movlw	4
 10989  006ACE  6F7F               	movwf	_uart_baud_rate& (0+255),b
 10990                           
 10991                           ;app/app_src/application.c: 168:             break;
 10992  006AD0  EF8B  F035         	goto	l12339
 10993  006AD4                     l12337:
 10994                           
 10995                           ; BSR set to: 61
 10996  006AD4  5004               	movf	set_uart_baud@i^0,w,c
 10997  006AD6  6E02               	movwf	??_set_uart_baud^0,c
 10998  006AD8  6A03               	clrf	(??_set_uart_baud+1)^0,c
 10999                           
 11000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11001                           ; Switch size 1, requested type "simple"
 11002                           ; Number of cases is 1, Range of values is 0 to 0
 11003                           ; switch strategies available:
 11004                           ; Name         Instructions Cycles
 11005                           ; simple_byte            4     3 (average)
 11006                           ;	Chosen strategy is simple_byte
 11007  006ADA  5003               	movf	(??_set_uart_baud+1)^0,w,c
 11008  006ADC  0A00               	xorlw	0	; case 0
 11009  006ADE  B4D8               	btfsc	status,2,c
 11010  006AE0  EF74  F035         	goto	l17831
 11011  006AE4  EF8D  F035         	goto	l230
 11012  006AE8                     l17831:
 11013                           
 11014                           ; BSR set to: 61
 11015                           ; Switch size 1, requested type "simple"
 11016                           ; Number of cases is 5, Range of values is 0 to 4
 11017                           ; switch strategies available:
 11018                           ; Name         Instructions Cycles
 11019                           ; simple_byte           16     9 (average)
 11020                           ;	Chosen strategy is simple_byte
 11021  006AE8  5002               	movf	??_set_uart_baud^0,w,c
 11022  006AEA  0A00               	xorlw	0	; case 0
 11023  006AEC  B4D8               	btfsc	status,2,c
 11024  006AEE  EF1A  F035         	goto	l12285
 11025  006AF2  0A01               	xorlw	1	; case 1
 11026  006AF4  B4D8               	btfsc	status,2,c
 11027  006AF6  EF2A  F035         	goto	l12295
 11028  006AFA  0A03               	xorlw	3	; case 2
 11029  006AFC  B4D8               	btfsc	status,2,c
 11030  006AFE  EF3A  F035         	goto	l12305
 11031  006B02  0A01               	xorlw	1	; case 3
 11032  006B04  B4D8               	btfsc	status,2,c
 11033  006B06  EF4A  F035         	goto	l12315
 11034  006B0A  0A07               	xorlw	7	; case 4
 11035  006B0C  B4D8               	btfsc	status,2,c
 11036  006B0E  EF5A  F035         	goto	l12325
 11037  006B12  EF8D  F035         	goto	l230
 11038  006B16                     l12339:
 11039                           
 11040                           ; BSR set to: 1
 11041                           ;app/app_src/application.c: 172:     U1CON1 |= (1<<7);
 11042  006B16  013D               	movlb	61	; () banked
 11043  006B18  8FF3               	bsf	243,7,b	;volatile
 11044  006B1A                     l230:
 11045                           
 11046                           ; BSR set to: 61
 11047  006B1A  0012               	return		;funcret
 11048  006B1C                     __end_of_set_uart_baud:
 11049                           	opt callstack 0
 11050                           
 11051 ;; *************** function _set_parity *****************
 11052 ;; Defined at:
 11053 ;;		line 80 in file "app/app_src/application.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;  parity          1    wreg     unsigned char 
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;  parity          1    3[COMRAM] unsigned char 
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  1    wreg      unsigned char 
 11060 ;; Registers used:
 11061 ;;		wreg, status,2, status,0
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11070 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11071 ;;Total ram usage:        3 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:    7
 11074 ;; This function calls:
 11075 ;;		Nothing
 11076 ;; This function is called by:
 11077 ;;		_cmdSetParity
 11078 ;;		_bootLoadApplication
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           	psect	text57
 11083  0080F8                     __ptext57:
 11084                           	opt callstack 0
 11085  0080F8                     _set_parity:
 11086                           	opt callstack 20
 11087                           
 11088                           ; BSR set to: 61
 11089                           ;incstack = 0
 11090                           ;set_parity@parity stored from wreg
 11091  0080F8  6E04               	movwf	set_parity@parity^0,c
 11092  0080FA                     
 11093                           ;app/app_src/application.c: 80: static uint8_t set_parity(uint8_t parity);app/app_src/ap
      +                          plication.c: 81: {;app/app_src/application.c: 82:     if((parity >= UART_PARITY_SENTINAL
      +                          ) || (UART_7BIT_MODE == parity)){
 11094  0080FA  0E04               	movlw	4
 11095  0080FC  6004               	cpfslt	set_parity@parity^0,c
 11096  0080FE  EF83  F040         	goto	u15471
 11097  008102  EF85  F040         	goto	u15470
 11098  008106                     u15471:
 11099  008106  EFC3  F040         	goto	l213
 11100  00810A                     u15470:
 11101  00810A  0404               	decf	set_parity@parity^0,w,c
 11102  00810C  A4D8               	btfss	status,2,c
 11103  00810E  EF8B  F040         	goto	u15481
 11104  008112  EF8D  F040         	goto	u15480
 11105  008116                     u15481:
 11106  008116  EF8F  F040         	goto	l15677
 11107  00811A                     u15480:
 11108  00811A  EFC3  F040         	goto	l213
 11109  00811E                     l15677:
 11110                           
 11111                           ;app/app_src/application.c: 85:     U1CON1 &= 0b01111111;
 11112  00811E  013D               	movlb	61	; () banked
 11113  008120  9FF3               	bcf	243,7,b	;volatile
 11114  008122                     
 11115                           ; BSR set to: 61
 11116                           ;app/app_src/application.c: 86:     U1CON0 &= 0b11110000;
 11117  008122  0EF0               	movlw	240
 11118  008124  17F2               	andwf	242,f,b	;volatile
 11119  008126                     
 11120                           ; BSR set to: 61
 11121                           ;app/app_src/application.c: 87:     U1CON0 |= (parity & 0b00001111);
 11122  008126  5004               	movf	set_parity@parity^0,w,c
 11123  008128  0B0F               	andlw	15
 11124  00812A  13F2               	iorwf	242,f,b	;volatile
 11125  00812C                     
 11126                           ; BSR set to: 61
 11127                           ;app/app_src/application.c: 88:     U1CON2 &=~ (0b00110000);
 11128  00812C  0ECF               	movlw	207
 11129  00812E  17F4               	andwf	244,f,b	;volatile
 11130  008130                     
 11131                           ; BSR set to: 61
 11132                           ;app/app_src/application.c: 89:     U1CON1 |= 0b10000000;
 11133  008130  8FF3               	bsf	243,7,b	;volatile
 11134                           
 11135                           ;app/app_src/application.c: 90:     switch(parity){
 11136  008132  EFAA  F040         	goto	l15695
 11137  008136                     l15687:
 11138                           
 11139                           ; BSR set to: 61
 11140                           ;app/app_src/application.c: 92:             uart_parity = UART_8BIT_NO_PARITY;
 11141  008136  0E00               	movlw	0
 11142  008138  0101               	movlb	1	; () banked
 11143  00813A  6F7E               	movwf	_uart_parity& (0+255),b
 11144                           
 11145                           ;app/app_src/application.c: 96:             break;
 11146  00813C  EFC3  F040         	goto	l213
 11147  008140                     l15689:
 11148                           
 11149                           ; BSR set to: 61
 11150                           ;app/app_src/application.c: 98:             uart_parity = UART_9BIT_ODD_PARITY;
 11151  008140  0E02               	movlw	2
 11152  008142  0101               	movlb	1	; () banked
 11153  008144  6F7E               	movwf	_uart_parity& (0+255),b
 11154                           
 11155                           ;app/app_src/application.c: 102:             break;
 11156  008146  EFC3  F040         	goto	l213
 11157  00814A                     l15691:
 11158                           
 11159                           ; BSR set to: 61
 11160                           ;app/app_src/application.c: 104:             uart_parity = UART_9BIT_EVEN_PARITY;
 11161  00814A  0E03               	movlw	3
 11162  00814C  0101               	movlb	1	; () banked
 11163  00814E  6F7E               	movwf	_uart_parity& (0+255),b
 11164                           
 11165                           ;app/app_src/application.c: 108:             break;
 11166  008150  EFC3  F040         	goto	l213
 11167  008154                     l15695:
 11168                           
 11169                           ; BSR set to: 61
 11170  008154  5004               	movf	set_parity@parity^0,w,c
 11171  008156  6E02               	movwf	??_set_parity^0,c
 11172  008158  6A03               	clrf	(??_set_parity+1)^0,c
 11173                           
 11174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11175                           ; Switch size 1, requested type "simple"
 11176                           ; Number of cases is 1, Range of values is 0 to 0
 11177                           ; switch strategies available:
 11178                           ; Name         Instructions Cycles
 11179                           ; simple_byte            4     3 (average)
 11180                           ;	Chosen strategy is simple_byte
 11181  00815A  5003               	movf	(??_set_parity+1)^0,w,c
 11182  00815C  0A00               	xorlw	0	; case 0
 11183  00815E  B4D8               	btfsc	status,2,c
 11184  008160  EFB4  F040         	goto	l17833
 11185  008164  EF9B  F040         	goto	l15687
 11186  008168                     l17833:
 11187                           
 11188                           ; BSR set to: 61
 11189                           ; Switch size 1, requested type "simple"
 11190                           ; Number of cases is 3, Range of values is 0 to 3
 11191                           ; switch strategies available:
 11192                           ; Name         Instructions Cycles
 11193                           ; simple_byte           10     6 (average)
 11194                           ;	Chosen strategy is simple_byte
 11195  008168  5002               	movf	??_set_parity^0,w,c
 11196  00816A  0A00               	xorlw	0	; case 0
 11197  00816C  B4D8               	btfsc	status,2,c
 11198  00816E  EF9B  F040         	goto	l15687
 11199  008172  0A02               	xorlw	2	; case 2
 11200  008174  B4D8               	btfsc	status,2,c
 11201  008176  EFA0  F040         	goto	l15689
 11202  00817A  0A01               	xorlw	1	; case 3
 11203  00817C  B4D8               	btfsc	status,2,c
 11204  00817E  EFA5  F040         	goto	l15691
 11205  008182  EF9B  F040         	goto	l15687
 11206  008186                     l213:
 11207  008186  0012               	return		;funcret
 11208  008188                     __end_of_set_parity:
 11209                           	opt callstack 0
 11210                           
 11211 ;; *************** function _loadMACAddr *****************
 11212 ;; Defined at:
 11213 ;;		line 1226 in file "app/app_src/application.c"
 11214 ;; Parameters:    Size  Location     Type
 11215 ;;		None
 11216 ;; Auto vars:     Size  Location     Type
 11217 ;;  i               1    5[COMRAM] unsigned char 
 11218 ;; Return value:  Size  Location     Type
 11219 ;;                  1    wreg      void 
 11220 ;; Registers used:
 11221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11222 ;; Tracked objects:
 11223 ;;		On entry : 0/0
 11224 ;;		On exit  : 0/0
 11225 ;;		Unchanged: 0/0
 11226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11231 ;;Total ram usage:        1 bytes
 11232 ;; Hardware stack levels used:    1
 11233 ;; Hardware stack levels required when called:    8
 11234 ;; This function calls:
 11235 ;;		_DIA_ReadByte
 11236 ;; This function is called by:
 11237 ;;		_bootLoadApplication
 11238 ;; This function uses a non-reentrant model
 11239 ;;
 11240                           
 11241                           	psect	text58
 11242  0090C4                     __ptext58:
 11243                           	opt callstack 0
 11244  0090C4                     _loadMACAddr:
 11245                           	opt callstack 21
 11246  0090C4                     
 11247                           ;app/app_src/application.c: 1229:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
 11248  0090C4  0E00               	movlw	0
 11249  0090C6  6E06               	movwf	loadMACAddr@i^0,c
 11250  0090C8                     l12517:
 11251                           
 11252                           ;app/app_src/application.c: 1230:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8_t)
      +                          DIA_ReadByte(0x3F0000 + i);
 11253  0090C8  5006               	movf	loadMACAddr@i^0,w,c
 11254  0090CA  08C6               	sublw	low (_EUIDbyte+11)
 11255  0090CC  6ED9               	movwf	fsr2l,c
 11256  0090CE  0E00               	movlw	0
 11257  0090D0  A0D8               	btfss	status,0,c
 11258  0090D2  2AE8               	incf	wreg,f,c
 11259  0090D4  0801               	sublw	high (_EUIDbyte+11)
 11260  0090D6  6EDA               	movwf	fsr2h,c
 11261  0090D8  0E00               	movlw	0
 11262  0090DA  2406               	addwf	loadMACAddr@i^0,w,c
 11263  0090DC  6E02               	movwf	DIA_ReadByte@flashAddr^0,c
 11264  0090DE  6A03               	clrf	(DIA_ReadByte@flashAddr+1)^0,c
 11265  0090E0  0E00               	movlw	0
 11266  0090E2  2203               	addwfc	(DIA_ReadByte@flashAddr+1)^0,f,c
 11267  0090E4  6A04               	clrf	(DIA_ReadByte@flashAddr+2)^0,c
 11268  0090E6  0E3F               	movlw	63
 11269  0090E8  2204               	addwfc	(DIA_ReadByte@flashAddr+2)^0,f,c
 11270  0090EA  6A05               	clrf	(DIA_ReadByte@flashAddr+3)^0,c
 11271  0090EC  0E00               	movlw	0
 11272  0090EE  2205               	addwfc	(DIA_ReadByte@flashAddr+3)^0,f,c
 11273  0090F0  EC6A  F04C         	call	_DIA_ReadByte	;wreg free
 11274  0090F4  6EDF               	movwf	indf2,c
 11275  0090F6                     
 11276                           ;app/app_src/application.c: 1231:     }
 11277  0090F6  2A06               	incf	loadMACAddr@i^0,f,c
 11278  0090F8  0E0B               	movlw	11
 11279  0090FA  6406               	cpfsgt	loadMACAddr@i^0,c
 11280  0090FC  EF82  F048         	goto	u11201
 11281  009100  EF84  F048         	goto	u11200
 11282  009104                     u11201:
 11283  009104  EF64  F048         	goto	l12517
 11284  009108                     u11200:
 11285  009108  0012               	return		;funcret
 11286  00910A                     __end_of_loadMACAddr:
 11287                           	opt callstack 0
 11288                           
 11289 ;; *************** function _DIA_ReadByte *****************
 11290 ;; Defined at:
 11291 ;;		line 212 in file "mcc_generated_files/memory.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;  flashAddr       4    1[COMRAM] unsigned long 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;		None
 11296 ;; Return value:  Size  Location     Type
 11297 ;;                  1    wreg      unsigned char 
 11298 ;; Registers used:
 11299 ;;		wreg, status,2
 11300 ;; Tracked objects:
 11301 ;;		On entry : 0/0
 11302 ;;		On exit  : 0/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;Total ram usage:        4 bytes
 11310 ;; Hardware stack levels used:    1
 11311 ;; Hardware stack levels required when called:    7
 11312 ;; This function calls:
 11313 ;;		Nothing
 11314 ;; This function is called by:
 11315 ;;		_loadMACAddr
 11316 ;; This function uses a non-reentrant model
 11317 ;;
 11318                           
 11319                           	psect	text59
 11320  0098D4                     __ptext59:
 11321                           	opt callstack 0
 11322  0098D4                     _DIA_ReadByte:
 11323                           	opt callstack 21
 11324  0098D4                     
 11325                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
 11326  0098D4  0139               	movlb	57	; () banked
 11327  0098D6  51E5               	movf	229,w,b	;volsfr
 11328  0098D8  0B3F               	andlw	-193
 11329  0098DA  0940               	iorlw	64
 11330  0098DC  6FE5               	movwf	229,b	;volsfr
 11331  0098DE                     
 11332                           ; BSR set to: 57
 11333                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
 11334  0098DE  0060  F013  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
 11335  0098E4                     
 11336                           ; BSR set to: 57
 11337                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
 11338  0098E4  0060  F00F  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
 11339  0098EA                     
 11340                           ; BSR set to: 57
 11341                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 11342  0098EA  0060  F00B  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
 11343  0098F0  0008               	tblrd		*	;# 
 11344                           
 11345                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
 11346  0098F2  50F5               	movf	245,w,c	;volatile
 11347  0098F4  0012               	return		;funcret
 11348  0098F6                     __end_of_DIA_ReadByte:
 11349                           	opt callstack 0
 11350                           
 11351 ;; *************** function _crc16_app *****************
 11352 ;; Defined at:
 11353 ;;		line 4 in file "app/app_src/crc.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;  dptr            2   18[COMRAM] PTR void 
 11356 ;;		 -> EUIDbyte(12), 
 11357 ;;  len             2   20[COMRAM] unsigned short 
 11358 ;;  seed            2   22[COMRAM] unsigned short 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;  i               2   28[COMRAM] unsigned short 
 11361 ;;  ptr             2   26[COMRAM] PTR unsigned char 
 11362 ;;		 -> EUIDbyte(12), 
 11363 ;;  result          2   24[COMRAM] unsigned short 
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  2   18[COMRAM] unsigned short 
 11366 ;; Registers used:
 11367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11373 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;Total ram usage:       12 bytes
 11378 ;; Hardware stack levels used:    1
 11379 ;; Hardware stack levels required when called:    9
 11380 ;; This function calls:
 11381 ;;		_CRC_8BitDataWrite
 11382 ;;		_CRC_CalculatedResultGet
 11383 ;; This function is called by:
 11384 ;;		_bootLoadApplication
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text60
 11389  007C16                     __ptext60:
 11390                           	opt callstack 0
 11391  007C16                     _crc16_app:
 11392                           	opt callstack 20
 11393  007C16                     
 11394                           ;app/app_src/crc.c: 5:     uint8_t* ptr = (uint8_t*)dptr;
 11395  007C16  0060  F04C  F01B   	movff	crc16_app@dptr,crc16_app@ptr
 11396  007C1C  0060  F050  F01C   	movff	crc16_app@dptr+1,crc16_app@ptr+1
 11397  007C22                     
 11398                           ;app/app_src/crc.c: 6:     uint16_t result;;app/app_src/crc.c: 8:     CRCACCL = seed;
 11399  007C22  0060  F05F  F962   	movff	crc16_app@seed,14690	;volatile
 11400  007C28                     
 11401                           ;app/app_src/crc.c: 9:     CRCACCH = seed >> 8;
 11402  007C28  5018               	movf	(crc16_app@seed+1)^0,w,c
 11403  007C2A  0139               	movlb	57	; () banked
 11404  007C2C  6F63               	movwf	99,b	;volatile
 11405  007C2E                     
 11406                           ; BSR set to: 57
 11407                           ;app/app_src/crc.c: 12:     CRCCON0bits.EN = 1;
 11408  007C2E  8F68               	bsf	104,7,b	;volatile
 11409  007C30                     
 11410                           ; BSR set to: 57
 11411                           ;app/app_src/crc.c: 13:     CRCCON0bits.CRCGO = 1;
 11412  007C30  8D68               	bsf	104,6,b	;volatile
 11413  007C32                     
 11414                           ; BSR set to: 57
 11415                           ;app/app_src/crc.c: 14:     for(uint16_t i = 0; i < len; i++ )
 11416  007C32  0E00               	movlw	0
 11417  007C34  6E1E               	movwf	(crc16_app@i+1)^0,c
 11418  007C36  0E00               	movlw	0
 11419  007C38  6E1D               	movwf	crc16_app@i^0,c
 11420  007C3A  EF34  F03E         	goto	l12541
 11421  007C3E                     l586:
 11422  007C3E  0139               	movlb	57	; () banked
 11423  007C40  B168               	btfsc	104,0,b	;volatile
 11424  007C42  EF25  F03E         	goto	u11211
 11425  007C46  EF27  F03E         	goto	u11210
 11426  007C4A                     u11211:
 11427  007C4A  EF1F  F03E         	goto	l586
 11428  007C4E                     u11210:
 11429  007C4E                     
 11430                           ; BSR set to: 57
 11431                           ;app/app_src/crc.c: 17:         CRC_8BitDataWrite(*ptr);
 11432  007C4E  0060  F06F  FFD9   	movff	crc16_app@ptr,fsr2l
 11433  007C54  0060  F073  FFDA   	movff	crc16_app@ptr+1,fsr2h
 11434  007C5A  50DF               	movf	indf2,w,c
 11435  007C5C  EC15  F04D         	call	_CRC_8BitDataWrite
 11436  007C60                     
 11437                           ;app/app_src/crc.c: 18:         ptr++;
 11438  007C60  4A1B               	infsnz	crc16_app@ptr^0,f,c
 11439  007C62  2A1C               	incf	(crc16_app@ptr+1)^0,f,c
 11440  007C64                     
 11441                           ;app/app_src/crc.c: 19:     }
 11442  007C64  4A1D               	infsnz	crc16_app@i^0,f,c
 11443  007C66  2A1E               	incf	(crc16_app@i+1)^0,f,c
 11444  007C68                     l12541:
 11445  007C68  5015               	movf	crc16_app@len^0,w,c
 11446  007C6A  5C1D               	subwf	crc16_app@i^0,w,c
 11447  007C6C  5016               	movf	(crc16_app@len+1)^0,w,c
 11448  007C6E  581E               	subwfb	(crc16_app@i+1)^0,w,c
 11449  007C70  A0D8               	btfss	status,0,c
 11450  007C72  EF3D  F03E         	goto	u11221
 11451  007C76  EF3F  F03E         	goto	u11220
 11452  007C7A                     u11221:
 11453  007C7A  EF1F  F03E         	goto	l586
 11454  007C7E                     u11220:
 11455  007C7E                     l590:
 11456  007C7E  0139               	movlb	57	; () banked
 11457  007C80  BB68               	btfsc	104,5,b	;volatile
 11458  007C82  EF45  F03E         	goto	u11231
 11459  007C86  EF47  F03E         	goto	u11230
 11460  007C8A                     u11231:
 11461  007C8A  EF3F  F03E         	goto	l590
 11462  007C8E                     u11230:
 11463  007C8E                     
 11464                           ; BSR set to: 57
 11465                           ;app/app_src/crc.c: 22:     result = CRC_CalculatedResultGet(0,0);
 11466  007C8E  0E00               	movlw	0
 11467  007C90  6E0A               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
 11468  007C92  0E00               	movlw	0
 11469  007C94  6E09               	movwf	CRC_CalculatedResultGet@xorValue^0,c
 11470  007C96  0E00               	movlw	0
 11471  007C98  EC1B  F033         	call	_CRC_CalculatedResultGet
 11472  007C9C  0060  F024  F019   	movff	?_CRC_CalculatedResultGet,crc16_app@result
 11473  007CA2  0060  F028  F01A   	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 11474  007CA8                     
 11475                           ;app/app_src/crc.c: 23:     CRCCON0bits.CRCGO = 0;
 11476  007CA8  0139               	movlb	57	; () banked
 11477  007CAA  9D68               	bcf	104,6,b	;volatile
 11478  007CAC                     
 11479                           ; BSR set to: 57
 11480                           ;app/app_src/crc.c: 24:     CRCCON0bits.EN = 0;
 11481  007CAC  9F68               	bcf	104,7,b	;volatile
 11482  007CAE                     
 11483                           ; BSR set to: 57
 11484                           ;app/app_src/crc.c: 25:     return(result);
 11485  007CAE  0060  F064  F013   	movff	crc16_app@result,?_crc16_app
 11486  007CB4  0060  F068  F014   	movff	crc16_app@result+1,?_crc16_app+1
 11487  007CBA                     
 11488                           ; BSR set to: 57
 11489  007CBA  0012               	return		;funcret
 11490  007CBC                     __end_of_crc16_app:
 11491                           	opt callstack 0
 11492                           
 11493 ;; *************** function _CRC_CalculatedResultGet *****************
 11494 ;; Defined at:
 11495 ;;		line 159 in file "mcc_generated_files/crc.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  reverse         1    wreg     _Bool 
 11498 ;;  xorValue        2    8[COMRAM] unsigned short 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  reverse         1   15[COMRAM] _Bool 
 11501 ;;  result          2   16[COMRAM] unsigned short 
 11502 ;;  mask            2   13[COMRAM] unsigned short 
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  2    8[COMRAM] unsigned short 
 11505 ;; Registers used:
 11506 ;;		wreg, status,2, status,0, cstack
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11515 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11516 ;;Total ram usage:       10 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; Hardware stack levels required when called:    8
 11519 ;; This function calls:
 11520 ;;		_CRC_ReverseValue
 11521 ;; This function is called by:
 11522 ;;		_crc16_app
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text61
 11527  006636                     __ptext61:
 11528                           	opt callstack 0
 11529  006636                     _CRC_CalculatedResultGet:
 11530                           	opt callstack 20
 11531                           
 11532                           ; BSR set to: 57
 11533                           ;incstack = 0
 11534                           ;CRC_CalculatedResultGet@reverse stored from wreg
 11535  006636  6E10               	movwf	CRC_CalculatedResultGet@reverse^0,c
 11536  006638                     
 11537                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11538  006638  0139               	movlb	57	; () banked
 11539  00663A  9D68               	bcf	104,6,b	;volatile
 11540                           
 11541                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11542  00663C  9DA0               	bcf	160,6,b	;volatile
 11543  00663E                     
 11544                           ; BSR set to: 57
 11545                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11546  00663E  5169               	movf	105,w,b	;volatile
 11547  006640  0B0F               	andlw	15
 11548  006642  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11549  006644  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11550  006646  5169               	movf	105,w,b	;volatile
 11551  006648  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11552  00664A  0B0F               	andlw	-241
 11553  00664C  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11554  00664E  6F69               	movwf	105,b	;volatile
 11555                           
 11556                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11557  006650  0E08               	movlw	8
 11558  006652  0101               	movlb	1	; () banked
 11559  006654  65DA               	cpfsgt	(_crcObj+1)& (0+255),b
 11560  006656  EF2F  F033         	goto	u10411
 11561  00665A  EF31  F033         	goto	u10410
 11562  00665E                     u10411:
 11563  00665E  EF38  F033         	goto	l11903
 11564  006662                     u10410:
 11565  006662                     
 11566                           ; BSR set to: 1
 11567                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11568  006662  0E00               	movlw	0
 11569  006664  0139               	movlb	57	; () banked
 11570  006666  6F61               	movwf	97,b	;volatile
 11571                           
 11572                           ;mcc_generated_files/crc.c: 171:          CRCDATL = 0;
 11573  006668  0E00               	movlw	0
 11574  00666A  6F60               	movwf	96,b	;volatile
 11575                           
 11576                           ;mcc_generated_files/crc.c: 172:      }
 11577  00666C  EF3B  F033         	goto	l11905
 11578  006670                     l11903:
 11579                           
 11580                           ; BSR set to: 1
 11581                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11582  006670  0E00               	movlw	0
 11583  006672  0139               	movlb	57	; () banked
 11584  006674  6F60               	movwf	96,b	;volatile
 11585  006676                     l11905:
 11586                           
 11587                           ; BSR set to: 57
 11588                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11589  006676  8D68               	bsf	104,6,b	;volatile
 11590  006678                     l1571:
 11591                           
 11592                           ; BSR set to: 57
 11593  006678  ADA0               	btfss	160,6,b	;volatile
 11594  00667A  EF41  F033         	goto	u10421
 11595  00667E  EF43  F033         	goto	u10420
 11596  006682                     u10421:
 11597  006682  EF3C  F033         	goto	l1571
 11598  006686                     u10420:
 11599  006686                     
 11600                           ; BSR set to: 57
 11601                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11602  006686  9DA0               	bcf	160,6,b	;volatile
 11603                           
 11604                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11605  006688  9D68               	bcf	104,6,b	;volatile
 11606  00668A                     
 11607                           ; BSR set to: 57
 11608                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11609  00668A  0060  F764  F00B   	movff	_crcObj,??_CRC_CalculatedResultGet
 11610  006690  0EFF               	movlw	255
 11611  006692  260B               	addwf	??_CRC_CalculatedResultGet^0,f,c
 11612  006694  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11613  006696  5169               	movf	105,w,b	;volatile
 11614  006698  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11615  00669A  0B0F               	andlw	-241
 11616  00669C  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11617  00669E  6F69               	movwf	105,b	;volatile
 11618  0066A0                     
 11619                           ; BSR set to: 57
 11620                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11621  0066A0  5163               	movf	99,w,b	;volatile
 11622  0066A2  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11623  0066A4  5162               	movf	98,w,b	;volatile
 11624  0066A6  6E11               	movwf	CRC_CalculatedResultGet@result^0,c
 11625  0066A8  0060  F02C  F012   	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 11626  0066AE                     
 11627                           ; BSR set to: 57
 11628                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11629  0066AE  0E10               	movlw	16
 11630  0066B0  0101               	movlb	1	; () banked
 11631  0066B2  61DA               	cpfslt	(_crcObj+1)& (0+255),b
 11632  0066B4  EF5E  F033         	goto	u10431
 11633  0066B8  EF60  F033         	goto	u10430
 11634  0066BC                     u10431:
 11635  0066BC  EF7A  F033         	goto	l11915
 11636  0066C0                     u10430:
 11637  0066C0                     
 11638                           ; BSR set to: 1
 11639                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11640  0066C0  0060  F768  F00B   	movff	_crcObj+1,??_CRC_CalculatedResultGet
 11641  0066C6  0E01               	movlw	1
 11642  0066C8  6E0C               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 11643  0066CA  0E00               	movlw	0
 11644  0066CC  6E0D               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 11645  0066CE  2A0B               	incf	??_CRC_CalculatedResultGet^0,f,c
 11646  0066D0  EF6D  F033         	goto	u10444
 11647  0066D4                     u10445:
 11648  0066D4  90D8               	bcf	status,0,c
 11649  0066D6  360C               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 11650  0066D8  360D               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 11651  0066DA                     u10444:
 11652  0066DA  2E0B               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 11653  0066DC  EF6A  F033         	goto	u10445
 11654  0066E0  0EFF               	movlw	255
 11655  0066E2  240C               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 11656  0066E4  6E0E               	movwf	CRC_CalculatedResultGet@mask^0,c
 11657  0066E6  0EFF               	movlw	255
 11658  0066E8  200D               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 11659  0066EA  6E0F               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 11660                           
 11661                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11662  0066EC  500E               	movf	CRC_CalculatedResultGet@mask^0,w,c
 11663  0066EE  1611               	andwf	CRC_CalculatedResultGet@result^0,f,c
 11664  0066F0  500F               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 11665  0066F2  1612               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11666  0066F4                     l11915:
 11667                           
 11668                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11669  0066F4  5010               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 11670  0066F6  B4D8               	btfsc	status,2,c
 11671  0066F8  EF80  F033         	goto	u10451
 11672  0066FC  EF82  F033         	goto	u10450
 11673  006700                     u10451:
 11674  006700  EF90  F033         	goto	l11919
 11675  006704                     u10450:
 11676  006704                     
 11677                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11678  006704  0060  F044  F002   	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 11679  00670A  0060  F048  F003   	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 11680  006710  EC01  F043         	call	_CRC_ReverseValue	;wreg free
 11681  006714  0060  F008  F011   	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 11682  00671A  0060  F00C  F012   	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 11683  006720                     l11919:
 11684                           
 11685                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11686  006720  5009               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 11687  006722  1A11               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 11688  006724  500A               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 11689  006726  1A12               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11690  006728                     
 11691                           ;mcc_generated_files/crc.c: 198:     return result;
 11692  006728  0060  F044  F009   	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 11693  00672E  0060  F048  F00A   	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 11694  006734  0012               	return		;funcret
 11695  006736                     __end_of_CRC_CalculatedResultGet:
 11696                           	opt callstack 0
 11697                           
 11698 ;; *************** function _CRC_ReverseValue *****************
 11699 ;; Defined at:
 11700 ;;		line 138 in file "mcc_generated_files/crc.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;  crc             2    1[COMRAM] unsigned short 
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;  mask            2    6[COMRAM] unsigned short 
 11705 ;;  reverse         2    4[COMRAM] unsigned short 
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  2    1[COMRAM] unsigned short 
 11708 ;; Registers used:
 11709 ;;		wreg, status,2, status,0
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;Total ram usage:        7 bytes
 11720 ;; Hardware stack levels used:    1
 11721 ;; Hardware stack levels required when called:    7
 11722 ;; This function calls:
 11723 ;;		Nothing
 11724 ;; This function is called by:
 11725 ;;		_CRC_CalculatedResultGet
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729                           	psect	text62
 11730  008602                     __ptext62:
 11731                           	opt callstack 0
 11732  008602                     _CRC_ReverseValue:
 11733                           	opt callstack 20
 11734  008602                     
 11735                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11736  008602  0E00               	movlw	0
 11737  008604  6E08               	movwf	(CRC_ReverseValue@mask+1)^0,c
 11738  008606  0E01               	movlw	1
 11739  008608  6E07               	movwf	CRC_ReverseValue@mask^0,c
 11740  00860A                     
 11741                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11742  00860A  0060  F768  F004   	movff	_crcObj+1,??_CRC_ReverseValue
 11743  008610  0EFF               	movlw	255
 11744  008612  2604               	addwf	??_CRC_ReverseValue^0,f,c
 11745  008614  2804               	incf	??_CRC_ReverseValue^0,w,c
 11746  008616  EF10  F043         	goto	u9500
 11747  00861A                     u9505:
 11748  00861A  90D8               	bcf	status,0,c
 11749  00861C  3607               	rlcf	CRC_ReverseValue@mask^0,f,c
 11750  00861E  3608               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 11751  008620                     u9500:
 11752  008620  2EE8               	decfsz	wreg,f,c
 11753  008622  EF0D  F043         	goto	u9505
 11754  008626                     
 11755                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11756  008626  0E00               	movlw	0
 11757  008628  6E06               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 11758  00862A  0E00               	movlw	0
 11759  00862C  6E05               	movwf	CRC_ReverseValue@reverse^0,c
 11760                           
 11761                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11762  00862E  EF2A  F043         	goto	l1562
 11763  008632                     l1563:
 11764                           
 11765                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11766  008632  A002               	btfss	CRC_ReverseValue@crc^0,0,c
 11767  008634  EF1E  F043         	goto	u9511
 11768  008638  EF20  F043         	goto	u9510
 11769  00863C                     u9511:
 11770  00863C  EF24  F043         	goto	l11207
 11771  008640                     u9510:
 11772  008640                     
 11773                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11774  008640  5007               	movf	CRC_ReverseValue@mask^0,w,c
 11775  008642  1205               	iorwf	CRC_ReverseValue@reverse^0,f,c
 11776  008644  5008               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 11777  008646  1206               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 11778  008648                     l11207:
 11779                           
 11780                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11781  008648  90D8               	bcf	status,0,c
 11782  00864A  3208               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 11783  00864C  3207               	rrcf	CRC_ReverseValue@mask^0,f,c
 11784  00864E                     
 11785                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11786  00864E  90D8               	bcf	status,0,c
 11787  008650  3203               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 11788  008652  3202               	rrcf	CRC_ReverseValue@crc^0,f,c
 11789  008654                     l1562:
 11790                           
 11791                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11792  008654  5002               	movf	CRC_ReverseValue@crc^0,w,c
 11793  008656  1003               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 11794  008658  A4D8               	btfss	status,2,c
 11795  00865A  EF31  F043         	goto	u9521
 11796  00865E  EF33  F043         	goto	u9520
 11797  008662                     u9521:
 11798  008662  EF19  F043         	goto	l1563
 11799  008666                     u9520:
 11800  008666                     
 11801                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11802  008666  0060  F014  F002   	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 11803  00866C  0060  F018  F003   	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 11804  008672  0012               	return		;funcret
 11805  008674                     __end_of_CRC_ReverseValue:
 11806                           	opt callstack 0
 11807                           
 11808 ;; *************** function _CRC_8BitDataWrite *****************
 11809 ;; Defined at:
 11810 ;;		line 125 in file "mcc_generated_files/crc.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;  data            1    wreg     unsigned char 
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;  data            1    1[COMRAM] unsigned char 
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  1    wreg      _Bool 
 11817 ;; Registers used:
 11818 ;;		wreg
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;Total ram usage:        1 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; Hardware stack levels required when called:    7
 11831 ;; This function calls:
 11832 ;;		Nothing
 11833 ;; This function is called by:
 11834 ;;		_crc16_app
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text63
 11839  009A2A                     __ptext63:
 11840                           	opt callstack 0
 11841  009A2A                     _CRC_8BitDataWrite:
 11842                           	opt callstack 21
 11843                           
 11844                           ;incstack = 0
 11845                           ;CRC_8BitDataWrite@data stored from wreg
 11846  009A2A  6E02               	movwf	CRC_8BitDataWrite@data^0,c
 11847  009A2C                     
 11848                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11849  009A2C  0139               	movlb	57	; () banked
 11850  009A2E  B168               	btfsc	104,0,b	;volatile
 11851  009A30  EF1C  F04D         	goto	u10401
 11852  009A34  EF1E  F04D         	goto	u10400
 11853  009A38                     u10401:
 11854  009A38  EF21  F04D         	goto	l1558
 11855  009A3C                     u10400:
 11856  009A3C                     
 11857                           ; BSR set to: 57
 11858                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11859  009A3C  0060  F00B  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 11860  009A42                     l1558:
 11861                           
 11862                           ; BSR set to: 57
 11863  009A42  0012               	return		;funcret
 11864  009A44                     __end_of_CRC_8BitDataWrite:
 11865                           	opt callstack 0
 11866                           
 11867 ;; *************** function _PHY_SetRxState *****************
 11868 ;; Defined at:
 11869 ;;		line 834 in file "phy/sx1216/phy_src/phy.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;  rx              1    wreg     _Bool 
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;  rx              1    0[COMRAM] _Bool 
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  1    wreg      void 
 11876 ;; Registers used:
 11877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/0
 11880 ;;		On exit  : 0/0
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11887 ;;Total ram usage:        0 bytes
 11888 ;; Hardware stack levels used:    1
 11889 ;; Hardware stack levels required when called:   13
 11890 ;; This function calls:
 11891 ;;		_receive
 11892 ;; This function is called by:
 11893 ;;		_bootLoadApplication
 11894 ;; This function uses a non-reentrant model
 11895 ;;
 11896                           
 11897                           	psect	text64
 11898  009CEE                     __ptext64:
 11899                           	opt callstack 0
 11900  009CEE                     _PHY_SetRxState:
 11901                           	opt callstack 16
 11902  009CEE                     
 11903                           ;phy/sx1216/phy_src/phy.c: 835:     receive(0);
 11904  009CEE  0E00               	movlw	0
 11905  009CF0  ECAF  F047         	call	_receive
 11906  009CF4  0012               	return		;funcret
 11907  009CF6                     __end_of_PHY_SetRxState:
 11908                           	opt callstack 0
 11909                           
 11910 ;; *************** function _PHY_SetChannel *****************
 11911 ;; Defined at:
 11912 ;;		line 838 in file "phy/sx1216/phy_src/phy.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  channel         1    wreg     unsigned char 
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;  channel         1   46[COMRAM] unsigned char 
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11930 ;;Total ram usage:        1 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:   12
 11933 ;; This function calls:
 11934 ;;		_setFrequency
 11935 ;; This function is called by:
 11936 ;;		_bootLoadApplication
 11937 ;; This function uses a non-reentrant model
 11938 ;;
 11939                           
 11940                           	psect	text65
 11941  0093A6                     __ptext65:
 11942                           	opt callstack 0
 11943  0093A6                     _PHY_SetChannel:
 11944                           	opt callstack 17
 11945                           
 11946                           ;incstack = 0
 11947                           ;PHY_SetChannel@channel stored from wreg
 11948  0093A6  6E2F               	movwf	PHY_SetChannel@channel^0,c
 11949  0093A8                     
 11950                           ;phy/sx1216/phy_src/phy.c: 839:     setFrequency(fhssList[channel]);
 11951  0093A8  502F               	movf	PHY_SetChannel@channel^0,w,c
 11952  0093AA  0D04               	mullw	4
 11953  0093AC  0EC9               	movlw	low _fhssList
 11954  0093AE  24F3               	addwf	243,w,c
 11955  0093B0  6EF6               	movwf	tblptrl,c
 11956  0093B2  0EFC               	movlw	high _fhssList
 11957  0093B4  20F4               	addwfc	244,w,c
 11958  0093B6  6EF7               	movwf	tblptrh,c
 11959  0093B8                     	if	1	;There are 3 active tblptr bytes
 11960  0093B8  6AF8               	clrf	tblptru,c
 11961  0093BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11962  0093BC  22F8               	addwfc	tblptru,f,c
 11963  0093BE                     	endif
 11964  0093BE  0009               	tblrd		*+
 11965  0093C0  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 11966  0093C6  0009               	tblrd		*+
 11967  0093C8  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 11968  0093CE  0009               	tblrd		*+
 11969  0093D0  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 11970  0093D6  000A               	tblrd		*-
 11971  0093D8  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 11972  0093DE  ECB2  F02C         	call	_setFrequency	;wreg free
 11973  0093E2  0012               	return		;funcret
 11974  0093E4                     __end_of_PHY_SetChannel:
 11975                           	opt callstack 0
 11976                           
 11977 ;; *************** function _NWK_SetPanId *****************
 11978 ;; Defined at:
 11979 ;;		line 116 in file "nwk/nwk_src/nwk.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;  panId           2    3[COMRAM] unsigned short 
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;		None
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  1    wreg      void 
 11986 ;; Registers used:
 11987 ;;		cstack
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;Total ram usage:        2 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:    8
 12000 ;; This function calls:
 12001 ;;		_PHY_SetPanId
 12002 ;; This function is called by:
 12003 ;;		_bootLoadApplication
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           
 12007                           	psect	text66
 12008  00999A                     __ptext66:
 12009                           	opt callstack 0
 12010  00999A                     _NWK_SetPanId:
 12011                           	opt callstack 21
 12012  00999A                     
 12013                           ;nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);nwk/nwk_src/nwk.c: 117: {;nwk
      +                          /nwk_src/nwk.c: 118:   nwkIb.panId = panId;
 12014  00999A  0060  F010  F102   	movff	NWK_SetPanId@panId,_nwkIb+2
 12015  0099A0  0060  F014  F103   	movff	NWK_SetPanId@panId+1,_nwkIb+3
 12016  0099A6                     
 12017                           ;nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
 12018  0099A6  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
 12019  0099AC  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
 12020  0099B2  EC8E  F04E         	call	_PHY_SetPanId	;wreg free
 12021  0099B6  0012               	return		;funcret
 12022  0099B8                     __end_of_NWK_SetPanId:
 12023                           	opt callstack 0
 12024                           
 12025 ;; *************** function _PHY_SetPanId *****************
 12026 ;; Defined at:
 12027 ;;		line 842 in file "phy/sx1216/phy_src/phy.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;  panId           2    1[COMRAM] unsigned short 
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;		None
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  1    wreg      void 
 12034 ;; Registers used:
 12035 ;;		None
 12036 ;; Tracked objects:
 12037 ;;		On entry : 0/0
 12038 ;;		On exit  : 0/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12045 ;;Total ram usage:        2 bytes
 12046 ;; Hardware stack levels used:    1
 12047 ;; Hardware stack levels required when called:    7
 12048 ;; This function calls:
 12049 ;;		Nothing
 12050 ;; This function is called by:
 12051 ;;		_NWK_SetPanId
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055                           	psect	text67
 12056  009D1C                     __ptext67:
 12057                           	opt callstack 0
 12058  009D1C                     _PHY_SetPanId:
 12059                           	opt callstack 21
 12060  009D1C  0012               	return		;funcret
 12061  009D1E                     __end_of_PHY_SetPanId:
 12062                           	opt callstack 0
 12063                           
 12064 ;; *************** function _NWK_SetAddr *****************
 12065 ;; Defined at:
 12066 ;;		line 106 in file "nwk/nwk_src/nwk.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;  addr            2    3[COMRAM] unsigned short 
 12069 ;; Auto vars:     Size  Location     Type
 12070 ;;		None
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  1    wreg      void 
 12073 ;; Registers used:
 12074 ;;		cstack
 12075 ;; Tracked objects:
 12076 ;;		On entry : 0/0
 12077 ;;		On exit  : 0/0
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12084 ;;Total ram usage:        2 bytes
 12085 ;; Hardware stack levels used:    1
 12086 ;; Hardware stack levels required when called:    8
 12087 ;; This function calls:
 12088 ;;		_PHY_SetShortAddr
 12089 ;; This function is called by:
 12090 ;;		_bootLoadApplication
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094                           	psect	text68
 12095  0099B8                     __ptext68:
 12096                           	opt callstack 0
 12097  0099B8                     _NWK_SetAddr:
 12098                           	opt callstack 21
 12099  0099B8                     
 12100                           ;nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);nwk/nwk_src/nwk.c: 107: {;nwk/n
      +                          wk_src/nwk.c: 108:   nwkIb.addr = addr;
 12101  0099B8  0060  F010  F100   	movff	NWK_SetAddr@addr,_nwkIb
 12102  0099BE  0060  F014  F101   	movff	NWK_SetAddr@addr+1,_nwkIb+1
 12103  0099C4                     
 12104                           ;nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
 12105  0099C4  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
 12106  0099CA  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
 12107  0099D0  EC8F  F04E         	call	_PHY_SetShortAddr	;wreg free
 12108  0099D4  0012               	return		;funcret
 12109  0099D6                     __end_of_NWK_SetAddr:
 12110                           	opt callstack 0
 12111                           
 12112 ;; *************** function _PHY_SetShortAddr *****************
 12113 ;; Defined at:
 12114 ;;		line 846 in file "phy/sx1216/phy_src/phy.c"
 12115 ;; Parameters:    Size  Location     Type
 12116 ;;  addr            2    1[COMRAM] unsigned short 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;		None
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  1    wreg      void 
 12121 ;; Registers used:
 12122 ;;		None
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12132 ;;Total ram usage:        2 bytes
 12133 ;; Hardware stack levels used:    1
 12134 ;; Hardware stack levels required when called:    7
 12135 ;; This function calls:
 12136 ;;		Nothing
 12137 ;; This function is called by:
 12138 ;;		_NWK_SetAddr
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           
 12142                           	psect	text69
 12143  009D1E                     __ptext69:
 12144                           	opt callstack 0
 12145  009D1E                     _PHY_SetShortAddr:
 12146                           	opt callstack 21
 12147  009D1E  0012               	return		;funcret
 12148  009D20                     __end_of_PHY_SetShortAddr:
 12149                           	opt callstack 0
 12150                           
 12151 ;; *************** function _DATAEE_WriteByte_Platform *****************
 12152 ;; Defined at:
 12153 ;;		line 40 in file "app/app_src/EEPROM.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;  addr            2    5[COMRAM] unsigned short 
 12156 ;;  data            1    7[COMRAM] unsigned char 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;		None
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, status,2, status,0, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12168 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12172 ;;Total ram usage:        3 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    8
 12175 ;; This function calls:
 12176 ;;		_DATAEE_WriteByte
 12177 ;; This function is called by:
 12178 ;;		_cmdSetNaddr
 12179 ;;		_cmdSetAES
 12180 ;;		_cmdSetRFCH
 12181 ;;		_cmdSetTX
 12182 ;;		_cmdSetCADRSSI
 12183 ;;		_cmdBootLoad
 12184 ;;		_cmdSetSF
 12185 ;;		_bootLoadApplication
 12186 ;;		_sync_eeprom
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text70
 12191  009150                     __ptext70:
 12192                           	opt callstack 0
 12193  009150                     _DATAEE_WriteByte_Platform:
 12194                           	opt callstack 19
 12195  009150                     
 12196                           ;app/app_src/EEPROM.c: 42:     DATAEE_WriteByte(addr, data);
 12197  009150  0060  F018  F002   	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 12198  009156  0060  F01C  F003   	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12199  00915C  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12200  009162  EC65  F047         	call	_DATAEE_WriteByte	;wreg free
 12201                           
 12202                           ;app/app_src/EEPROM.c: 43:     DATAEE_WriteByte(addr + 256, data);
 12203  009166  0E00               	movlw	0
 12204  009168  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12205  00916A  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12206  00916C  0E01               	movlw	1
 12207  00916E  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12208  009170  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12209  009172  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12210  009178  EC65  F047         	call	_DATAEE_WriteByte	;wreg free
 12211                           
 12212                           ;app/app_src/EEPROM.c: 44:     DATAEE_WriteByte(addr + 512, data);
 12213  00917C  0E00               	movlw	0
 12214  00917E  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12215  009180  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12216  009182  0E02               	movlw	2
 12217  009184  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12218  009186  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12219  009188  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12220  00918E  EC65  F047         	call	_DATAEE_WriteByte	;wreg free
 12221  009192  0012               	return		;funcret
 12222  009194                     __end_of_DATAEE_WriteByte_Platform:
 12223                           	opt callstack 0
 12224                           
 12225 ;; *************** function _DATAEE_ReadByte_Platform *****************
 12226 ;; Defined at:
 12227 ;;		line 6 in file "app/app_src/EEPROM.c"
 12228 ;; Parameters:    Size  Location     Type
 12229 ;;  addr            2    5[COMRAM] unsigned short 
 12230 ;; Auto vars:     Size  Location     Type
 12231 ;;  copy1           1    9[COMRAM] unsigned char 
 12232 ;;  copy2           1    8[COMRAM] unsigned char 
 12233 ;;  copy3           1    7[COMRAM] unsigned char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      unsigned char 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0, cstack
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12244 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12246 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12247 ;;Total ram usage:        5 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    8
 12250 ;; This function calls:
 12251 ;;		_DATAEE_ReadByte
 12252 ;;		_DATAEE_WriteByte
 12253 ;; This function is called by:
 12254 ;;		_bootLoadApplication
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           	psect	text71
 12259  0055A8                     __ptext71:
 12260                           	opt callstack 0
 12261  0055A8                     _DATAEE_ReadByte_Platform:
 12262                           	opt callstack 21
 12263  0055A8                     
 12264                           ;app/app_src/EEPROM.c: 7:     uint8_t copy1, copy2, copy3;;app/app_src/EEPROM.c: 8:     
      +                          copy1 = DATAEE_ReadByte(addr);
 12265  0055A8  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
 12266  0055AE  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
 12267  0055B4  ECEB  F04C         	call	_DATAEE_ReadByte	;wreg free
 12268  0055B8  6E0A               	movwf	DATAEE_ReadByte_Platform@copy1^0,c
 12269                           
 12270                           ;app/app_src/EEPROM.c: 9:     copy2 = DATAEE_ReadByte(addr + 256);
 12271  0055BA  0E00               	movlw	0
 12272  0055BC  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12273  0055BE  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12274  0055C0  0E01               	movlw	1
 12275  0055C2  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12276  0055C4  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12277  0055C6  ECEB  F04C         	call	_DATAEE_ReadByte	;wreg free
 12278  0055CA  6E09               	movwf	DATAEE_ReadByte_Platform@copy2^0,c
 12279                           
 12280                           ;app/app_src/EEPROM.c: 10:     copy3 = DATAEE_ReadByte(addr + 512);
 12281  0055CC  0E00               	movlw	0
 12282  0055CE  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12283  0055D0  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12284  0055D2  0E02               	movlw	2
 12285  0055D4  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12286  0055D6  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12287  0055D8  ECEB  F04C         	call	_DATAEE_ReadByte	;wreg free
 12288  0055DC  6E08               	movwf	DATAEE_ReadByte_Platform@copy3^0,c
 12289  0055DE                     
 12290                           ;app/app_src/EEPROM.c: 13:     if((copy1 == copy2) && (copy2 == copy3)){
 12291  0055DE  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12292  0055E0  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12293  0055E2  A4D8               	btfss	status,2,c
 12294  0055E4  EFF6  F02A         	goto	u17111
 12295  0055E8  EFF8  F02A         	goto	u17110
 12296  0055EC                     u17111:
 12297  0055EC  EF04  F02B         	goto	l16915
 12298  0055F0                     u17110:
 12299  0055F0  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12300  0055F2  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12301  0055F4  A4D8               	btfss	status,2,c
 12302  0055F6  EFFF  F02A         	goto	u17121
 12303  0055FA  EF01  F02B         	goto	u17120
 12304  0055FE                     u17121:
 12305  0055FE  EF04  F02B         	goto	l16915
 12306  005602                     u17120:
 12307  005602                     l16909:
 12308                           
 12309                           ;app/app_src/EEPROM.c: 14:         return copy1;
 12310  005602  500A               	movf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12311  005604  EF7A  F02B         	goto	l703
 12312  005608                     l16915:
 12313  005608  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12314  00560A  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12315  00560C  A4D8               	btfss	status,2,c
 12316  00560E  EF0B  F02B         	goto	u17131
 12317  005612  EF0D  F02B         	goto	u17130
 12318  005616                     u17131:
 12319  005616  EF23  F02B         	goto	l16927
 12320  00561A                     u17130:
 12321  00561A  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12322  00561C  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12323  00561E  B4D8               	btfsc	status,2,c
 12324  005620  EF14  F02B         	goto	u17141
 12325  005624  EF16  F02B         	goto	u17140
 12326  005628                     u17141:
 12327  005628  EF23  F02B         	goto	l16927
 12328  00562C                     u17140:
 12329  00562C                     
 12330                           ;app/app_src/EEPROM.c: 18:         DATAEE_WriteByte(addr + 512, copy1);
 12331  00562C  0E00               	movlw	0
 12332  00562E  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12333  005630  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12334  005632  0E02               	movlw	2
 12335  005634  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12336  005636  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12337  005638  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12338  00563E  EC65  F047         	call	_DATAEE_WriteByte	;wreg free
 12339  005642  EF01  F02B         	goto	l16909
 12340  005646                     l16927:
 12341  005646  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12342  005648  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12343  00564A  B4D8               	btfsc	status,2,c
 12344  00564C  EF2A  F02B         	goto	u17151
 12345  005650  EF2C  F02B         	goto	u17150
 12346  005654                     u17151:
 12347  005654  EF43  F02B         	goto	l16939
 12348  005658                     u17150:
 12349  005658  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12350  00565A  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12351  00565C  A4D8               	btfss	status,2,c
 12352  00565E  EF33  F02B         	goto	u17161
 12353  005662  EF35  F02B         	goto	u17160
 12354  005666                     u17161:
 12355  005666  EF43  F02B         	goto	l16939
 12356  00566A                     u17160:
 12357  00566A                     
 12358                           ;app/app_src/EEPROM.c: 23:         DATAEE_WriteByte(addr , copy2);
 12359  00566A  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
 12360  005670  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12361  005676  0060  F024  F004   	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
 12362  00567C  EC65  F047         	call	_DATAEE_WriteByte	;wreg free
 12363  005680                     
 12364                           ;app/app_src/EEPROM.c: 24:         return copy2;
 12365  005680  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12366  005682  EF7A  F02B         	goto	l703
 12367  005686                     l16939:
 12368  005686  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12369  005688  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12370  00568A  A4D8               	btfss	status,2,c
 12371  00568C  EF4A  F02B         	goto	u17171
 12372  005690  EF4C  F02B         	goto	u17170
 12373  005694                     u17171:
 12374  005694  EF62  F02B         	goto	l16951
 12375  005698                     u17170:
 12376  005698  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12377  00569A  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12378  00569C  B4D8               	btfsc	status,2,c
 12379  00569E  EF53  F02B         	goto	u17181
 12380  0056A2  EF55  F02B         	goto	u17180
 12381  0056A6                     u17181:
 12382  0056A6  EF62  F02B         	goto	l16951
 12383  0056AA                     u17180:
 12384  0056AA                     
 12385                           ;app/app_src/EEPROM.c: 28:         DATAEE_WriteByte(addr + 256, copy1);
 12386  0056AA  0E00               	movlw	0
 12387  0056AC  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12388  0056AE  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12389  0056B0  0E01               	movlw	1
 12390  0056B2  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12391  0056B4  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12392  0056B6  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12393  0056BC  EC65  F047         	call	_DATAEE_WriteByte	;wreg free
 12394  0056C0  EF01  F02B         	goto	l16909
 12395  0056C4                     l16951:
 12396                           
 12397                           ;app/app_src/EEPROM.c: 34:         DATAEE_WriteByte(addr + 256, copy1);
 12398  0056C4  0E00               	movlw	0
 12399  0056C6  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12400  0056C8  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12401  0056CA  0E01               	movlw	1
 12402  0056CC  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12403  0056CE  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12404  0056D0  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12405  0056D6  EC65  F047         	call	_DATAEE_WriteByte	;wreg free
 12406                           
 12407                           ;app/app_src/EEPROM.c: 35:         DATAEE_WriteByte(addr + 512, copy1);
 12408  0056DA  0E00               	movlw	0
 12409  0056DC  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12410  0056DE  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12411  0056E0  0E02               	movlw	2
 12412  0056E2  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12413  0056E4  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12414  0056E6  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12415  0056EC  EC65  F047         	call	_DATAEE_WriteByte	;wreg free
 12416  0056F0  EF01  F02B         	goto	l16909
 12417  0056F4                     l703:
 12418  0056F4  0012               	return		;funcret
 12419  0056F6                     __end_of_DATAEE_ReadByte_Platform:
 12420                           	opt callstack 0
 12421                           
 12422 ;; *************** function _DATAEE_WriteByte *****************
 12423 ;; Defined at:
 12424 ;;		line 172 in file "mcc_generated_files/memory.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;  bAdd            2    1[COMRAM] unsigned short 
 12427 ;;  bData           1    3[COMRAM] unsigned char 
 12428 ;; Auto vars:     Size  Location     Type
 12429 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
 12430 ;; Return value:  Size  Location     Type
 12431 ;;                  1    wreg      void 
 12432 ;; Registers used:
 12433 ;;		wreg, status,2, status,0
 12434 ;; Tracked objects:
 12435 ;;		On entry : 0/0
 12436 ;;		On exit  : 0/0
 12437 ;;		Unchanged: 0/0
 12438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12439 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12443 ;;Total ram usage:        4 bytes
 12444 ;; Hardware stack levels used:    1
 12445 ;; Hardware stack levels required when called:    7
 12446 ;; This function calls:
 12447 ;;		Nothing
 12448 ;; This function is called by:
 12449 ;;		_DATAEE_ReadByte_Platform
 12450 ;;		_DATAEE_WriteByte_Platform
 12451 ;; This function uses a non-reentrant model
 12452 ;;
 12453                           
 12454                           	psect	text72
 12455  008ECA                     __ptext72:
 12456                           	opt callstack 0
 12457  008ECA                     _DATAEE_WriteByte:
 12458                           	opt callstack 19
 12459  008ECA                     
 12460                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 12461  008ECA  0E00               	movlw	0
 12462  008ECC  BED2               	btfsc	210,7,c	;volatile
 12463  008ECE  0E01               	movlw	1
 12464  008ED0  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 12465  008ED2                     
 12466                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 12467  008ED2  5003               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 12468  008ED4  0B03               	andlw	3
 12469  008ED6  0139               	movlb	57	; () banked
 12470  008ED8  6FE1               	movwf	225,b	;volatile
 12471  008EDA                     
 12472                           ; BSR set to: 57
 12473                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12474  008EDA  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 12475  008EE0                     
 12476                           ; BSR set to: 57
 12477                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 12478  008EE0  0060  F013  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 12479  008EE6                     
 12480                           ; BSR set to: 57
 12481                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 12482  008EE6  0E3F               	movlw	-193
 12483  008EE8  17E5               	andwf	229,f,b	;volsfr
 12484  008EEA                     
 12485                           ; BSR set to: 57
 12486                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 12487  008EEA  85E5               	bsf	229,2,b	;volsfr
 12488  008EEC                     
 12489                           ; BSR set to: 57
 12490                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 12491  008EEC  9ED2               	bcf	210,7,c	;volatile
 12492  008EEE                     
 12493                           ; BSR set to: 57
 12494                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 12495  008EEE  0E55               	movlw	85
 12496  008EF0  6FE6               	movwf	230,b	;volsfr
 12497  008EF2                     
 12498                           ; BSR set to: 57
 12499                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 12500  008EF2  0EAA               	movlw	170
 12501  008EF4  6FE6               	movwf	230,b	;volsfr
 12502  008EF6                     
 12503                           ; BSR set to: 57
 12504                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 12505  008EF6  83E5               	bsf	229,1,b	;volsfr
 12506  008EF8                     l1151:
 12507                           
 12508                           ; BSR set to: 57
 12509                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 12510  008EF8  B3E5               	btfsc	229,1,b	;volsfr
 12511  008EFA  EF81  F047         	goto	u14381
 12512  008EFE  EF83  F047         	goto	u14380
 12513  008F02                     u14381:
 12514  008F02  EF7C  F047         	goto	l1151
 12515  008F06                     u14380:
 12516  008F06                     
 12517                           ; BSR set to: 57
 12518                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 12519  008F06  95E5               	bcf	229,2,b	;volsfr
 12520                           
 12521                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 12522  008F08  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 12523  008F0A  D002               	bra	u14395
 12524  008F0C  9ED2               	bcf	210,7,c	;volatile
 12525  008F0E  D001               	bra	u14396
 12526  008F10                     u14395:
 12527  008F10  8ED2               	bsf	210,7,c	;volatile
 12528  008F12                     u14396:
 12529  008F12  0012               	return		;funcret
 12530  008F14                     __end_of_DATAEE_WriteByte:
 12531                           	opt callstack 0
 12532                           
 12533 ;; *************** function _DATAEE_ReadByte *****************
 12534 ;; Defined at:
 12535 ;;		line 194 in file "mcc_generated_files/memory.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  bAdd            2    1[COMRAM] unsigned short 
 12538 ;; Auto vars:     Size  Location     Type
 12539 ;;		None
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  1    wreg      unsigned char 
 12542 ;; Registers used:
 12543 ;;		wreg, status,2, status,0
 12544 ;; Tracked objects:
 12545 ;;		On entry : 0/0
 12546 ;;		On exit  : 0/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12553 ;;Total ram usage:        2 bytes
 12554 ;; Hardware stack levels used:    1
 12555 ;; Hardware stack levels required when called:    7
 12556 ;; This function calls:
 12557 ;;		Nothing
 12558 ;; This function is called by:
 12559 ;;		_DATAEE_ReadByte_Platform
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           	psect	text73
 12564  0099D6                     __ptext73:
 12565                           	opt callstack 0
 12566  0099D6                     _DATAEE_ReadByte:
 12567                           	opt callstack 21
 12568  0099D6                     
 12569                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 12570  0099D6  5003               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 12571  0099D8  0B03               	andlw	3
 12572  0099DA  0139               	movlb	57	; () banked
 12573  0099DC  6FE1               	movwf	225,b	;volatile
 12574  0099DE                     
 12575                           ; BSR set to: 57
 12576                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12577  0099DE  0060  F00B  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 12578  0099E4                     
 12579                           ; BSR set to: 57
 12580                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
 12581  0099E4  0E3F               	movlw	-193
 12582  0099E6  17E5               	andwf	229,f,b	;volsfr
 12583  0099E8                     
 12584                           ; BSR set to: 57
 12585                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
 12586  0099E8  81E5               	bsf	229,0,b	;volsfr
 12587  0099EA                     
 12588                           ; BSR set to: 57
 12589                           ;mcc_generated_files/memory.c: 200:     __nop();
 12590  0099EA  F000               	nop	
 12591  0099EC                     
 12592                           ;mcc_generated_files/memory.c: 201:     __nop();
 12593  0099EC  F000               	nop	
 12594  0099EE                     
 12595                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
 12596  0099EE  0139               	movlb	57	; () banked
 12597  0099F0  51E3               	movf	227,w,b	;volatile
 12598  0099F2                     
 12599                           ; BSR set to: 57
 12600  0099F2  0012               	return		;funcret
 12601  0099F4                     __end_of_DATAEE_ReadByte:
 12602                           	opt callstack 0
 12603                           
 12604 ;; *************** function _SYS_TaskHandler *****************
 12605 ;; Defined at:
 12606 ;;		line 67 in file "sys/sys_src/sys.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;		None
 12609 ;; Auto vars:     Size  Location     Type
 12610 ;;		None
 12611 ;; Return value:  Size  Location     Type
 12612 ;;                  1    wreg      void 
 12613 ;; Registers used:
 12614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 12615 ;; Tracked objects:
 12616 ;;		On entry : 0/0
 12617 ;;		On exit  : 0/0
 12618 ;;		Unchanged: 0/0
 12619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;Total ram usage:        0 bytes
 12625 ;; Hardware stack levels used:    1
 12626 ;; Hardware stack levels required when called:   21
 12627 ;; This function calls:
 12628 ;;		_NWK_TaskHandler
 12629 ;;		_PHY_TaskHandler
 12630 ;;		_SYS_TimerTaskHandler
 12631 ;; This function is called by:
 12632 ;;		_main
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text74
 12637  009C30                     __ptext74:
 12638                           	opt callstack 0
 12639  009C30                     _SYS_TaskHandler:
 12640                           	opt callstack 9
 12641  009C30                     
 12642                           ;sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 12643  009C30  EC7E  F04E         	call	_PHY_TaskHandler	;wreg free
 12644  009C34                     
 12645                           ;sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 12646  009C34  EC1F  F04E         	call	_NWK_TaskHandler	;wreg free
 12647  009C38                     
 12648                           ;sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 12649  009C38  EC81  F029         	call	_SYS_TimerTaskHandler	;wreg free
 12650  009C3C  0012               	return		;funcret
 12651  009C3E                     __end_of_SYS_TaskHandler:
 12652                           	opt callstack 0
 12653                           
 12654 ;; *************** function _SYS_TimerTaskHandler *****************
 12655 ;; Defined at:
 12656 ;;		line 112 in file "sys/sys_src/sysTimer.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;		None
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
 12661 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12662 ;;  elapsed         4   29[COMRAM] unsigned long 
 12663 ;;  cnt             1   28[COMRAM] unsigned char 
 12664 ;; Return value:  Size  Location     Type
 12665 ;;                  1    wreg      void 
 12666 ;; Registers used:
 12667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12668 ;; Tracked objects:
 12669 ;;		On entry : 0/0
 12670 ;;		On exit  : 0/0
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12674 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12675 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12676 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12677 ;;Total ram usage:       11 bytes
 12678 ;; Hardware stack levels used:    1
 12679 ;; Hardware stack levels required when called:   10
 12680 ;; This function calls:
 12681 ;;		_nwkRxDuplicateRejectionTimerHandler
 12682 ;;		_nwkTxAckWaitTimerHandler
 12683 ;;		_nwkTxDelayTimerHandler
 12684 ;;		_placeTimer
 12685 ;; This function is called by:
 12686 ;;		_SYS_TaskHandler
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           	psect	text75
 12691  005302                     __ptext75:
 12692                           	opt callstack 0
 12693  005302                     _SYS_TimerTaskHandler:
 12694                           	opt callstack 19
 12695  005302                     
 12696                           ;sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;sys/sys_src/sysTimer.c: 115:     uin
      +                          t8_t cnt;;sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 12697  005302  0101               	movlb	1	; () banked
 12698  005304  5165               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 12699  005306  1166               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 12700  005308  A4D8               	btfss	status,2,c
 12701  00530A  EF89  F029         	goto	u17201
 12702  00530E  EF8B  F029         	goto	u17200
 12703  005312                     u17201:
 12704  005312  EF8D  F029         	goto	l2835
 12705  005316                     u17200:
 12706  005316  EF2A  F02A         	goto	l2836
 12707  00531A                     l2835:
 12708                           
 12709                           ; BSR set to: 1
 12710                           ;sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 12711  00531A  0139               	movlb	57	; () banked
 12712  00531C  9F93               	bcf	147,7,b	;volatile
 12713                           
 12714                           ;sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 12715  00531E  0060  F594  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 12716  005324                     
 12717                           ; BSR set to: 57
 12718                           ;sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 12719  005324  0E00               	movlw	0
 12720  005326  0101               	movlb	1	; () banked
 12721  005328  6F66               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 12722  00532A  0E00               	movlw	0
 12723  00532C  6F65               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 12724  00532E                     
 12725                           ; BSR set to: 1
 12726                           ;sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 12727  00532E  0139               	movlb	57	; () banked
 12728  005330  8F93               	bsf	147,7,b	;volatile
 12729                           
 12730                           ;sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 12731  005332  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
 12732  005334  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
 12733  005336  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
 12734  005338  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
 12735  00533A  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
 12736                           
 12737                           ;sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12738  00533C  EFF4  F029         	goto	l17011
 12739  005340                     l17001:
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;sys/sys_src/sysTimer.c: 129:     {;sys/sys_src/sysTimer.c: 130:         SYS_Timer_t *ti
      +                          mer = timers;
 12743  005340  0060  F398  F022   	movff	_timers,SYS_TimerTaskHandler@timer
 12744  005346  0060  F39C  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 12745  00534C                     
 12746                           ; BSR set to: 0
 12747                           ;sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 12748  00534C  EE20 F002          	lfsr	2,2
 12749  005350  51E6               	movf	_timers& (0+255),w,b
 12750  005352  26D9               	addwf	fsr2l,f,c
 12751  005354  51E7               	movf	(_timers+1)& (0+255),w,b
 12752  005356  22DA               	addwfc	fsr2h,f,c
 12753  005358  50DE               	movf	postinc2,w,c
 12754  00535A  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
 12755  00535C  50DE               	movf	postinc2,w,c
 12756  00535E  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
 12757  005360  50DE               	movf	postinc2,w,c
 12758  005362  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
 12759  005364  50DD               	movf	postdec2,w,c
 12760  005366  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
 12761                           
 12762                           ;sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 12763  005368  0060  F39B  FFD9   	movff	_timers,fsr2l
 12764  00536E  0060  F39F  FFDA   	movff	_timers+1,fsr2h
 12765  005374  006F FF78  F0E6    	movff	postinc2,_timers
 12766  00537A  006F FF74  F0E7    	movff	postdec2,_timers+1
 12767  005380                     
 12768                           ; BSR set to: 0
 12769                           ;sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 12770  005380  EE20 F00A          	lfsr	2,10
 12771  005384  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12772  005386  26D9               	addwf	fsr2l,f,c
 12773  005388  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12774  00538A  22DA               	addwfc	fsr2h,f,c
 12775  00538C  04DE               	decf	postinc2,w,c
 12776  00538E  A4D8               	btfss	status,2,c
 12777  005390  EFCC  F029         	goto	u17211
 12778  005394  EFCE  F029         	goto	u17210
 12779  005398                     u17211:
 12780  005398  EFD6  F029         	goto	l17009
 12781  00539C                     u17210:
 12782  00539C                     
 12783                           ; BSR set to: 0
 12784                           ;sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 12785  00539C  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 12786  0053A2  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 12787  0053A8  EC76  F01E         	call	_placeTimer	;wreg free
 12788  0053AC                     l17009:
 12789                           
 12790                           ;sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 12791  0053AC  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 12792  0053B2  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 12793  0053B8  EE20 F00B          	lfsr	2,11
 12794  0053BC  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12795  0053BE  26D9               	addwf	fsr2l,f,c
 12796  0053C0  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12797  0053C2  22DA               	addwfc	fsr2h,f,c
 12798  0053C4  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
 12799  0053CA  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
 12800  0053D0  D802               	call	u17228
 12801  0053D2  EFF4  F029         	goto	u17229
 12802  0053D6                     u17228:
 12803  0053D6  0005               	push	
 12804  0053D8  6EFA               	movwf	pclath,c
 12805  0053DA  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
 12806  0053DC  6EFD               	movwf	tosl,c
 12807  0053DE  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
 12808  0053E0  6EFE               	movwf	tosh,c
 12809  0053E2  6AFF               	clrf	tosu,c
 12810  0053E4  50FA               	movf	pclath,w,c
 12811  0053E6  0012               	return		;indir
 12812  0053E8                     u17229:
 12813  0053E8                     l17011:
 12814                           
 12815                           ;sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12816  0053E8  0100               	movlb	0	; () banked
 12817  0053EA  51E6               	movf	_timers& (0+255),w,b
 12818  0053EC  11E7               	iorwf	(_timers+1)& (0+255),w,b
 12819  0053EE  B4D8               	btfsc	status,2,c
 12820  0053F0  EFFC  F029         	goto	u17231
 12821  0053F4  EFFE  F029         	goto	u17230
 12822  0053F8                     u17231:
 12823  0053F8  EF13  F02A         	goto	l17015
 12824  0053FC                     u17230:
 12825  0053FC                     
 12826                           ; BSR set to: 0
 12827  0053FC  EE20 F002          	lfsr	2,2
 12828  005400  51E6               	movf	_timers& (0+255),w,b
 12829  005402  26D9               	addwf	fsr2l,f,c
 12830  005404  51E7               	movf	(_timers+1)& (0+255),w,b
 12831  005406  22DA               	addwfc	fsr2h,f,c
 12832  005408  50DE               	movf	postinc2,w,c
 12833  00540A  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
 12834  00540C  50DE               	movf	postinc2,w,c
 12835  00540E  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12836  005410  50DE               	movf	postinc2,w,c
 12837  005412  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12838  005414  50DE               	movf	postinc2,w,c
 12839  005416  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12840  005418  B0D8               	btfsc	status,0,c
 12841  00541A  EF11  F02A         	goto	u17241
 12842  00541E  EF13  F02A         	goto	u17240
 12843  005422                     u17241:
 12844  005422  EFA0  F029         	goto	l17001
 12845  005426                     u17240:
 12846  005426                     l17015:
 12847                           
 12848                           ; BSR set to: 0
 12849                           ;sys/sys_src/sysTimer.c: 139:     if (timers){
 12850  005426  51E6               	movf	_timers& (0+255),w,b
 12851  005428  11E7               	iorwf	(_timers+1)& (0+255),w,b
 12852  00542A  B4D8               	btfsc	status,2,c
 12853  00542C  EF1A  F02A         	goto	u17251
 12854  005430  EF1C  F02A         	goto	u17250
 12855  005434                     u17251:
 12856  005434  EF2A  F02A         	goto	l2836
 12857  005438                     u17250:
 12858  005438                     
 12859                           ; BSR set to: 0
 12860                           ;sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 12861  005438  EE20 F002          	lfsr	2,2
 12862  00543C  51E6               	movf	_timers& (0+255),w,b
 12863  00543E  26D9               	addwf	fsr2l,f,c
 12864  005440  51E7               	movf	(_timers+1)& (0+255),w,b
 12865  005442  22DA               	addwfc	fsr2h,f,c
 12866  005444  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
 12867  005446  5EDE               	subwf	postinc2,f,c
 12868  005448  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12869  00544A  5ADE               	subwfb	postinc2,f,c
 12870  00544C  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12871  00544E  5ADE               	subwfb	postinc2,f,c
 12872  005450  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12873  005452  5ADE               	subwfb	postinc2,f,c
 12874  005454                     l2836:
 12875  005454  0012               	return		;funcret
 12876  005456                     __end_of_SYS_TimerTaskHandler:
 12877                           	opt callstack 0
 12878                           
 12879 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 12880 ;; Defined at:
 12881 ;;		line 205 in file "nwk/nwk_src/nwkTx.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 12884 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 12887 ;;		 -> nwkFrameFrames(685), NULL(0), 
 12888 ;;  restart         1   21[COMRAM] _Bool 
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      void 
 12891 ;; Registers used:
 12892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12901 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12902 ;;Total ram usage:        7 bytes
 12903 ;; Hardware stack levels used:    1
 12904 ;; Hardware stack levels required when called:    9
 12905 ;; This function calls:
 12906 ;;		_SYS_TimerStart
 12907 ;;		_nwkFrameNext
 12908 ;;		_nwkTxConfirm
 12909 ;; This function is called by:
 12910 ;;		_nwkTxInit
 12911 ;;		_SYS_TimerTaskHandler
 12912 ;; This function uses a non-reentrant model
 12913 ;;
 12914                           
 12915                           	psect	text76
 12916  007692                     __ptext76:
 12917                           	opt callstack 0
 12918  007692                     _nwkTxAckWaitTimerHandler:
 12919                           	opt callstack 19
 12920  007692                     
 12921                           ;nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);nwk/
      +                          nwk_src/nwkTx.c: 206: {;nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*)0);
 12922  007692  0E00               	movlw	0
 12923  007694  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
 12924  007696  0E00               	movlw	0
 12925  007698  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
 12926  00769A                     
 12927                           ;nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 12928  00769A  0E00               	movlw	0
 12929  00769C  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 12930                           
 12931                           ;nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 12932  00769E  EF7E  F03B         	goto	l2284
 12933  0076A2                     l16645:
 12934                           
 12935                           ;nwk/nwk_src/nwkTx.c: 211:   {;nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT_ACK =
      +                          = frame->state)
 12936  0076A2  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 12937  0076A8  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 12938  0076AE  0E16               	movlw	22
 12939  0076B0  18DE               	xorwf	postinc2,w,c
 12940  0076B2  A4D8               	btfss	status,2,c
 12941  0076B4  EF5E  F03B         	goto	u16601
 12942  0076B8  EF60  F03B         	goto	u16600
 12943  0076BC                     u16601:
 12944  0076BC  EF7E  F03B         	goto	l2284
 12945  0076C0                     u16600:
 12946  0076C0                     
 12947                           ;nwk/nwk_src/nwkTx.c: 213:     {;nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 12948  0076C0  0E01               	movlw	1
 12949  0076C2  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 12950  0076C4                     
 12951                           ;nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 12952  0076C4  EE20 F084          	lfsr	2,132
 12953  0076C8  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 12954  0076CA  26D9               	addwf	fsr2l,f,c
 12955  0076CC  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 12956  0076CE  22DA               	addwfc	fsr2h,f,c
 12957  0076D0  06DE               	decf	postinc2,f,c
 12958  0076D2  0E00               	movlw	0
 12959  0076D4  5ADD               	subwfb	postdec2,f,c
 12960  0076D6  50DE               	movf	postinc2,w,c
 12961  0076D8  10DE               	iorwf	postinc2,w,c
 12962  0076DA  A4D8               	btfss	status,2,c
 12963  0076DC  EF72  F03B         	goto	u16611
 12964  0076E0  EF74  F03B         	goto	u16610
 12965  0076E4                     u16611:
 12966  0076E4  EF7E  F03B         	goto	l2284
 12967  0076E8                     u16610:
 12968  0076E8                     
 12969                           ;nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 12970  0076E8  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 12971  0076EE  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 12972  0076F4  0E10               	movlw	16
 12973  0076F6  6E04               	movwf	nwkTxConfirm@status^0,c
 12974  0076F8  EC34  F04C         	call	_nwkTxConfirm	;wreg free
 12975  0076FC                     l2284:
 12976                           
 12977                           ;nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 12978  0076FC  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 12979  007702  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 12980  007708  ECC7  F039         	call	_nwkFrameNext	;wreg free
 12981  00770C  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 12982  007712  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 12983  007718  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 12984  00771A  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 12985  00771C  A4D8               	btfss	status,2,c
 12986  00771E  EF93  F03B         	goto	u16621
 12987  007722  EF95  F03B         	goto	u16620
 12988  007726                     u16621:
 12989  007726  EF51  F03B         	goto	l16645
 12990  00772A                     u16620:
 12991  00772A                     
 12992                           ;nwk/nwk_src/nwkTx.c: 221:   if (restart)
 12993  00772A  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
 12994  00772C  B4D8               	btfsc	status,2,c
 12995  00772E  EF9B  F03B         	goto	u16631
 12996  007732  EF9D  F03B         	goto	u16630
 12997  007736                     u16631:
 12998  007736  EFA5  F03B         	goto	l2290
 12999  00773A                     u16630:
 13000  00773A                     
 13001                           ;nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 13002  00773A  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 13003  007740  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 13004  007746  ECFA  F04A         	call	_SYS_TimerStart	;wreg free
 13005  00774A                     l2290:
 13006  00774A  0012               	return		;funcret
 13007  00774C                     __end_of_nwkTxAckWaitTimerHandler:
 13008                           	opt callstack 0
 13009                           
 13010 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 13011 ;; Defined at:
 13012 ;;		line 181 in file "nwk/nwk_src/nwkRx.c"
 13013 ;; Parameters:    Size  Location     Type
 13014 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 13015 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;  i               1   20[COMRAM] unsigned char 
 13018 ;;  restart         1   19[COMRAM] _Bool 
 13019 ;; Return value:  Size  Location     Type
 13020 ;;                  1    wreg      void 
 13021 ;; Registers used:
 13022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13023 ;; Tracked objects:
 13024 ;;		On entry : 0/0
 13025 ;;		On exit  : 0/0
 13026 ;;		Unchanged: 0/0
 13027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;Total ram usage:        4 bytes
 13033 ;; Hardware stack levels used:    1
 13034 ;; Hardware stack levels required when called:    9
 13035 ;; This function calls:
 13036 ;;		_SYS_TimerStart
 13037 ;; This function is called by:
 13038 ;;		_nwkRxInit
 13039 ;;		_SYS_TimerTaskHandler
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043                           	psect	text77
 13044  008674                     __ptext77:
 13045                           	opt callstack 0
 13046  008674                     _nwkRxDuplicateRejectionTimerHandler:
 13047                           	opt callstack 19
 13048  008674                     
 13049                           ;nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_t *
      +                          timer);nwk/nwk_src/nwkRx.c: 182: {;nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 0;
 13050  008674  0E00               	movlw	0
 13051  008676  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 13052                           
 13053                           ;nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
 13054  008678  0E00               	movlw	0
 13055  00867A  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13056  00867C                     l16627:
 13057                           
 13058                           ;nwk/nwk_src/nwkRx.c: 186:   {;nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRejection
      +                          Table[i].ttl)
 13059  00867C  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 13060  00867E  0D05               	mullw	5
 13061  008680  0EA4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 13062  008682  24F3               	addwf	243,w,c
 13063  008684  6ED9               	movwf	fsr2l,c
 13064  008686  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 13065  008688  20F4               	addwfc	prodh,w,c
 13066  00868A  6EDA               	movwf	fsr2h,c
 13067  00868C  50DF               	movf	indf2,w,c
 13068  00868E  B4D8               	btfsc	status,2,c
 13069  008690  EF4C  F043         	goto	u16571
 13070  008694  EF4E  F043         	goto	u16570
 13071  008698                     u16571:
 13072  008698  EF59  F043         	goto	l16633
 13073  00869C                     u16570:
 13074  00869C                     
 13075                           ;nwk/nwk_src/nwkRx.c: 188:     {;nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRejection
      +                          Table[i].ttl--;
 13076  00869C  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 13077  00869E  0D05               	mullw	5
 13078  0086A0  0EA4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 13079  0086A2  24F3               	addwf	243,w,c
 13080  0086A4  6ED9               	movwf	fsr2l,c
 13081  0086A6  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 13082  0086A8  20F4               	addwfc	prodh,w,c
 13083  0086AA  6EDA               	movwf	fsr2h,c
 13084  0086AC  06DF               	decf	indf2,f,c
 13085  0086AE                     
 13086                           ;nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 13087  0086AE  0E01               	movlw	1
 13088  0086B0  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 13089  0086B2                     l16633:
 13090                           
 13091                           ;nwk/nwk_src/nwkRx.c: 192:   }
 13092  0086B2  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
 13093  0086B4  0E09               	movlw	9
 13094  0086B6  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13095  0086B8  EF60  F043         	goto	u16581
 13096  0086BC  EF62  F043         	goto	u16580
 13097  0086C0                     u16581:
 13098  0086C0  EF3E  F043         	goto	l16627
 13099  0086C4                     u16580:
 13100  0086C4                     
 13101                           ;nwk/nwk_src/nwkRx.c: 194:   if (restart)
 13102  0086C4  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
 13103  0086C6  B4D8               	btfsc	status,2,c
 13104  0086C8  EF68  F043         	goto	u16591
 13105  0086CC  EF6A  F043         	goto	u16590
 13106  0086D0                     u16591:
 13107  0086D0  EF72  F043         	goto	l2072
 13108  0086D4                     u16590:
 13109  0086D4                     
 13110                           ;nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 13111  0086D4  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 13112  0086DA  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 13113  0086E0  ECFA  F04A         	call	_SYS_TimerStart	;wreg free
 13114  0086E4                     l2072:
 13115  0086E4  0012               	return		;funcret
 13116  0086E6                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 13117                           	opt callstack 0
 13118                           
 13119 ;; *************** function _nwkTxDelayTimerHandler *****************
 13120 ;; Defined at:
 13121 ;;		line 244 in file "nwk/nwk_src/nwkTx.c"
 13122 ;; Parameters:    Size  Location     Type
 13123 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 13124 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 13125 ;; Auto vars:     Size  Location     Type
 13126 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 13127 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13128 ;;  restart         1   21[COMRAM] _Bool 
 13129 ;; Return value:  Size  Location     Type
 13130 ;;                  1    wreg      void 
 13131 ;; Registers used:
 13132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13133 ;; Tracked objects:
 13134 ;;		On entry : 0/0
 13135 ;;		On exit  : 0/0
 13136 ;;		Unchanged: 0/0
 13137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13139 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13141 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13142 ;;Total ram usage:        7 bytes
 13143 ;; Hardware stack levels used:    1
 13144 ;; Hardware stack levels required when called:    9
 13145 ;; This function calls:
 13146 ;;		_SYS_TimerStart
 13147 ;;		_nwkFrameNext
 13148 ;; This function is called by:
 13149 ;;		_nwkTxInit
 13150 ;;		_SYS_TimerTaskHandler
 13151 ;; This function uses a non-reentrant model
 13152 ;;
 13153                           
 13154                           	psect	text78
 13155  00774C                     __ptext78:
 13156                           	opt callstack 0
 13157  00774C                     _nwkTxDelayTimerHandler:
 13158                           	opt callstack 19
 13159  00774C                     
 13160                           ;nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);nwk/nw
      +                          k_src/nwkTx.c: 245: {;nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0);
 13161  00774C  0E00               	movlw	0
 13162  00774E  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
 13163  007750  0E00               	movlw	0
 13164  007752  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
 13165  007754                     
 13166                           ;nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 13167  007754  0E00               	movlw	0
 13168  007756  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13169                           
 13170                           ;nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13171  007758  EFD9  F03B         	goto	l16669
 13172  00775C                     l16661:
 13173                           
 13174                           ;nwk/nwk_src/nwkTx.c: 250:   {;nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT_DELAY
      +                           == frame->state)
 13175  00775C  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13176  007762  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13177  007768  0E11               	movlw	17
 13178  00776A  18DE               	xorwf	postinc2,w,c
 13179  00776C  A4D8               	btfss	status,2,c
 13180  00776E  EFBB  F03B         	goto	u16641
 13181  007772  EFBD  F03B         	goto	u16640
 13182  007776                     u16641:
 13183  007776  EFD9  F03B         	goto	l16669
 13184  00777A                     u16640:
 13185  00777A                     
 13186                           ;nwk/nwk_src/nwkTx.c: 252:     {;nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 13187  00777A  0E01               	movlw	1
 13188  00777C  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13189  00777E                     
 13190                           ;nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 13191  00777E  EE20 F084          	lfsr	2,132
 13192  007782  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13193  007784  26D9               	addwf	fsr2l,f,c
 13194  007786  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13195  007788  22DA               	addwfc	fsr2h,f,c
 13196  00778A  06DE               	decf	postinc2,f,c
 13197  00778C  0E00               	movlw	0
 13198  00778E  5ADD               	subwfb	postdec2,f,c
 13199  007790  50DE               	movf	postinc2,w,c
 13200  007792  10DE               	iorwf	postinc2,w,c
 13201  007794  A4D8               	btfss	status,2,c
 13202  007796  EFCF  F03B         	goto	u16651
 13203  00779A  EFD1  F03B         	goto	u16650
 13204  00779E                     u16651:
 13205  00779E  EFD9  F03B         	goto	l16669
 13206  0077A2                     u16650:
 13207  0077A2                     
 13208                           ;nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 13209  0077A2  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13210  0077A8  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13211  0077AE  0E13               	movlw	19
 13212  0077B0  6EDF               	movwf	indf2,c
 13213  0077B2                     l16669:
 13214                           
 13215                           ;nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13216  0077B2  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 13217  0077B8  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 13218  0077BE  ECC7  F039         	call	_nwkFrameNext	;wreg free
 13219  0077C2  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 13220  0077C8  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 13221  0077CE  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13222  0077D0  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13223  0077D2  A4D8               	btfss	status,2,c
 13224  0077D4  EFEE  F03B         	goto	u16661
 13225  0077D8  EFF0  F03B         	goto	u16660
 13226  0077DC                     u16661:
 13227  0077DC  EFAE  F03B         	goto	l16661
 13228  0077E0                     u16660:
 13229  0077E0                     
 13230                           ;nwk/nwk_src/nwkTx.c: 260:   if (restart)
 13231  0077E0  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
 13232  0077E2  B4D8               	btfsc	status,2,c
 13233  0077E4  EFF6  F03B         	goto	u16671
 13234  0077E8  EFF8  F03B         	goto	u16670
 13235  0077EC                     u16671:
 13236  0077EC  EF00  F03C         	goto	l2302
 13237  0077F0                     u16670:
 13238  0077F0                     
 13239                           ;nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 13240  0077F0  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 13241  0077F6  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 13242  0077FC  ECFA  F04A         	call	_SYS_TimerStart	;wreg free
 13243  007800                     l2302:
 13244  007800  0012               	return		;funcret
 13245  007802                     __end_of_nwkTxDelayTimerHandler:
 13246                           	opt callstack 0
 13247                           
 13248 ;; *************** function _nwkTxConfirm *****************
 13249 ;; Defined at:
 13250 ;;		line 227 in file "nwk/nwk_src/nwkTx.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 13253 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13254 ;;  status          1    3[COMRAM] unsigned char 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1    wreg      void 
 13259 ;; Registers used:
 13260 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13266 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13270 ;;Total ram usage:        3 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    7
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_nwkTxAckWaitTimerHandler
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280                           	psect	text79
 13281  009868                     __ptext79:
 13282                           	opt callstack 0
 13283  009868                     _nwkTxConfirm:
 13284                           	opt callstack 20
 13285  009868                     
 13286                           ;nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);nwk/nwk_
      +                          src/nwkTx.c: 228: {;nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CONFIRM;
 13287  009868  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 13288  00986E  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 13289  009874  0E17               	movlw	23
 13290  009876  6EDF               	movwf	indf2,c
 13291  009878                     
 13292                           ;nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 13293  009878  EE20 F083          	lfsr	2,131
 13294  00987C  5002               	movf	nwkTxConfirm@frame^0,w,c
 13295  00987E  26D9               	addwf	fsr2l,f,c
 13296  009880  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
 13297  009882  22DA               	addwfc	fsr2h,f,c
 13298  009884  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
 13299  00988A  0012               	return		;funcret
 13300  00988C                     __end_of_nwkTxConfirm:
 13301                           	opt callstack 0
 13302                           
 13303 ;; *************** function _PHY_TaskHandler *****************
 13304 ;; Defined at:
 13305 ;;		line 879 in file "phy/sx1216/phy_src/phy.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;		None
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;		None
 13310 ;; Return value:  Size  Location     Type
 13311 ;;                  1    wreg      void 
 13312 ;; Registers used:
 13313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13314 ;; Tracked objects:
 13315 ;;		On entry : 0/0
 13316 ;;		On exit  : 0/0
 13317 ;;		Unchanged: 0/0
 13318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13323 ;;Total ram usage:        0 bytes
 13324 ;; Hardware stack levels used:    1
 13325 ;; Hardware stack levels required when called:   15
 13326 ;; This function calls:
 13327 ;;		_radio_engine
 13328 ;; This function is called by:
 13329 ;;		_SYS_TaskHandler
 13330 ;; This function uses a non-reentrant model
 13331 ;;
 13332                           
 13333                           	psect	text80
 13334  009CFC                     __ptext80:
 13335                           	opt callstack 0
 13336  009CFC                     _PHY_TaskHandler:
 13337                           	opt callstack 14
 13338  009CFC                     
 13339                           ;phy/sx1216/phy_src/phy.c: 880:     radio_engine();
 13340  009CFC  EC02  F022         	call	_radio_engine	;wreg free
 13341  009D00  0012               	return		;funcret
 13342  009D02                     __end_of_PHY_TaskHandler:
 13343                           	opt callstack 0
 13344                           
 13345 ;; *************** function _radio_engine *****************
 13346 ;; Defined at:
 13347 ;;		line 762 in file "phy/sx1216/phy_src/phy.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;		None
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;		None
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  1    wreg      void 
 13354 ;; Registers used:
 13355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13365 ;;Total ram usage:        2 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:   14
 13368 ;; This function calls:
 13369 ;;		_DIO0_Receive_ISR
 13370 ;;		_PHY_DataConf
 13371 ;;		_SX1276Read
 13372 ;;		_cad
 13373 ;;		_get_timer0base
 13374 ;;		_initRadio
 13375 ;;		_receive
 13376 ;;		_set_timer0base
 13377 ;; This function is called by:
 13378 ;;		_PHY_TaskHandler
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text81
 13383  004404                     __ptext81:
 13384                           	opt callstack 0
 13385  004404                     _radio_engine:
 13386                           	opt callstack 14
 13387  004404                     
 13388                           ;phy/sx1216/phy_src/phy.c: 763:     switch(radio_state_var){
 13389  004404  EFAE  F022         	goto	l16731
 13390  004408                     l16677:
 13391                           
 13392                           ; BSR set to: 1
 13393                           ;phy/sx1216/phy_src/phy.c: 765:             initRadio();
 13394  004408  EC7D  F027         	call	_initRadio	;wreg free
 13395  00440C                     
 13396                           ;phy/sx1216/phy_src/phy.c: 766:             radio_state_var = START_RX;
 13397  00440C  0E01               	movlw	1
 13398  00440E  0101               	movlb	1	; () banked
 13399  004410  6F6A               	movwf	_radio_state_var& (0+255),b
 13400  004412                     
 13401                           ; BSR set to: 1
 13402                           ;phy/sx1216/phy_src/phy.c: 767:             need_radio_reset = 0;
 13403  004412  0E00               	movlw	0
 13404  004414  6F70               	movwf	_need_radio_reset& (0+255),b
 13405                           
 13406                           ;phy/sx1216/phy_src/phy.c: 768:             break;
 13407  004416  EFD8  F022         	goto	l2636
 13408  00441A                     l16683:
 13409                           
 13410                           ; BSR set to: 1
 13411                           ;phy/sx1216/phy_src/phy.c: 770:             if(need_radio_reset){
 13412  00441A  5170               	movf	_need_radio_reset& (0+255),w,b
 13413  00441C  B4D8               	btfsc	status,2,c
 13414  00441E  EF13  F022         	goto	u16681
 13415  004422  EF15  F022         	goto	u16680
 13416  004426                     u16681:
 13417  004426  EF19  F022         	goto	l16687
 13418  00442A                     u16680:
 13419  00442A                     l16685:
 13420                           
 13421                           ; BSR set to: 1
 13422                           ;phy/sx1216/phy_src/phy.c: 771:                 radio_state_var = INIT_RADIO;
 13423  00442A  0E00               	movlw	0
 13424  00442C  6F6A               	movwf	_radio_state_var& (0+255),b
 13425                           
 13426                           ;phy/sx1216/phy_src/phy.c: 772:                 break;
 13427  00442E  EFD8  F022         	goto	l2636
 13428  004432                     l16687:
 13429                           
 13430                           ; BSR set to: 1
 13431                           ;phy/sx1216/phy_src/phy.c: 774:             receive(0);
 13432  004432  0E00               	movlw	0
 13433  004434  ECAF  F047         	call	_receive
 13434  004438                     
 13435                           ;phy/sx1216/phy_src/phy.c: 775:             radio_state_var = WAIT_FOR_RX;
 13436  004438  0E02               	movlw	2
 13437  00443A  0101               	movlb	1	; () banked
 13438  00443C  6F6A               	movwf	_radio_state_var& (0+255),b
 13439                           
 13440                           ;phy/sx1216/phy_src/phy.c: 776:             break;
 13441  00443E  EFD8  F022         	goto	l2636
 13442  004442                     l2619:
 13443                           
 13444                           ; BSR set to: 1
 13445                           ;phy/sx1216/phy_src/phy.c: 778:             if(PORTBbits.RB4){
 13446  004442  A8CB               	btfss	203,4,c	;volatile
 13447  004444  EF26  F022         	goto	u16691
 13448  004448  EF28  F022         	goto	u16690
 13449  00444C                     u16691:
 13450  00444C  EFD8  F022         	goto	l2636
 13451  004450                     u16690:
 13452  004450                     
 13453                           ; BSR set to: 1
 13454                           ;phy/sx1216/phy_src/phy.c: 779:                 radio_state_var = RX_MESSAGE;
 13455  004450  0E03               	movlw	3
 13456  004452  6F6A               	movwf	_radio_state_var& (0+255),b
 13457  004454  EFD8  F022         	goto	l2636
 13458  004458                     l16693:
 13459                           
 13460                           ; BSR set to: 1
 13461                           ;phy/sx1216/phy_src/phy.c: 783:             DIO0_Receive_ISR();
 13462  004458  EC29  F03A         	call	_DIO0_Receive_ISR	;wreg free
 13463  00445C                     l16695:
 13464                           
 13465                           ;phy/sx1216/phy_src/phy.c: 784:             radio_state_var = START_RX;
 13466  00445C  0E01               	movlw	1
 13467  00445E  0101               	movlb	1	; () banked
 13468  004460  6F6A               	movwf	_radio_state_var& (0+255),b
 13469                           
 13470                           ;phy/sx1216/phy_src/phy.c: 785:             break;
 13471  004462  EFD8  F022         	goto	l2636
 13472  004466                     l16697:
 13473                           
 13474                           ; BSR set to: 1
 13475                           ;phy/sx1216/phy_src/phy.c: 787:             if(!get_timer0base(&_cadBackoffTimer)){
 13476  004466  0EF9               	movlw	low __cadBackoffTimer
 13477  004468  6E02               	movwf	get_timer0base@timer^0,c
 13478  00446A  0E00               	movlw	high __cadBackoffTimer
 13479  00446C  6E03               	movwf	(get_timer0base@timer+1)^0,c
 13480  00446E  ECB6  F04B         	call	_get_timer0base	;wreg free
 13481  004472  5002               	movf	?_get_timer0base^0,w,c
 13482  004474  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13483  004476  A4D8               	btfss	status,2,c
 13484  004478  EF40  F022         	goto	u16701
 13485  00447C  EF42  F022         	goto	u16700
 13486  004480                     u16701:
 13487  004480  EF2E  F022         	goto	l16695
 13488  004484                     u16700:
 13489  004484                     
 13490                           ;phy/sx1216/phy_src/phy.c: 788:                 if(cad()){
 13491  004484  EC65  F02E         	call	_cad	;wreg free
 13492  004488  0900               	iorlw	0
 13493  00448A  B4D8               	btfsc	status,2,c
 13494  00448C  EF4A  F022         	goto	u16711
 13495  004490  EF4C  F022         	goto	u16710
 13496  004494                     u16711:
 13497  004494  EF64  F022         	goto	l16709
 13498  004498                     u16710:
 13499  004498                     
 13500                           ;phy/sx1216/phy_src/phy.c: 790:                     set_timer0base(&_cadBackoffTimer, 20
      +                          00);
 13501  004498  0EF9               	movlw	low __cadBackoffTimer
 13502  00449A  6E02               	movwf	set_timer0base@timer^0,c
 13503  00449C  0E00               	movlw	high __cadBackoffTimer
 13504  00449E  6E03               	movwf	(set_timer0base@timer+1)^0,c
 13505  0044A0  0E07               	movlw	7
 13506  0044A2  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13507  0044A4  0ED0               	movlw	208
 13508  0044A6  6E04               	movwf	set_timer0base@tval^0,c
 13509  0044A8  ECAD  F04C         	call	_set_timer0base	;wreg free
 13510  0044AC                     
 13511                           ;phy/sx1216/phy_src/phy.c: 792:                     radio_state_var = START_RX;
 13512  0044AC  0E01               	movlw	1
 13513  0044AE  0101               	movlb	1	; () banked
 13514  0044B0  6F6A               	movwf	_radio_state_var& (0+255),b
 13515  0044B2                     
 13516                           ; BSR set to: 1
 13517                           ;phy/sx1216/phy_src/phy.c: 793:                     if(cadCounter < 10)
 13518  0044B2  0E0A               	movlw	10
 13519  0044B4  6171               	cpfslt	_cadCounter& (0+255),b
 13520  0044B6  EF5F  F022         	goto	u16721
 13521  0044BA  EF61  F022         	goto	u16720
 13522  0044BE                     u16721:
 13523  0044BE  EFD8  F022         	goto	l2636
 13524  0044C2                     u16720:
 13525  0044C2                     
 13526                           ; BSR set to: 1
 13527                           ;phy/sx1216/phy_src/phy.c: 794:                     {;phy/sx1216/phy_src/phy.c: 795:    
      +                                               cadCounter++;
 13528  0044C2  2B71               	incf	_cadCounter& (0+255),f,b
 13529  0044C4  EFD8  F022         	goto	l2636
 13530  0044C8                     l16709:
 13531                           
 13532                           ;phy/sx1216/phy_src/phy.c: 800:                 radio_state_var = START_TX;
 13533  0044C8  0E06               	movlw	6
 13534  0044CA  0101               	movlb	1	; () banked
 13535  0044CC  6F6A               	movwf	_radio_state_var& (0+255),b
 13536  0044CE  EFD8  F022         	goto	l2636
 13537  0044D2                     l16713:
 13538                           
 13539                           ; BSR set to: 1
 13540                           ;phy/sx1216/phy_src/phy.c: 809:             set_timer0base(&txTimeOut, 1000);
 13541  0044D2  0EF5               	movlw	low _txTimeOut
 13542  0044D4  6E02               	movwf	set_timer0base@timer^0,c
 13543  0044D6  0E00               	movlw	high _txTimeOut
 13544  0044D8  6E03               	movwf	(set_timer0base@timer+1)^0,c
 13545  0044DA  0E03               	movlw	3
 13546  0044DC  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13547  0044DE  0EE8               	movlw	232
 13548  0044E0  6E04               	movwf	set_timer0base@tval^0,c
 13549  0044E2  ECAD  F04C         	call	_set_timer0base	;wreg free
 13550  0044E6                     
 13551                           ;phy/sx1216/phy_src/phy.c: 810:             radio_state_var = WAIT_FOR_TX;
 13552  0044E6  0E07               	movlw	7
 13553  0044E8  0101               	movlb	1	; () banked
 13554  0044EA  6F6A               	movwf	_radio_state_var& (0+255),b
 13555                           
 13556                           ;phy/sx1216/phy_src/phy.c: 811:             break;
 13557  0044EC  EFD8  F022         	goto	l2636
 13558  0044F0                     l16717:
 13559                           
 13560                           ; BSR set to: 1
 13561                           ;phy/sx1216/phy_src/phy.c: 813:             if((!get_timer0base(&txTimeOut)) || ((SX1276
      +                          Read(0x12) & 0x08))){
 13562  0044F0  0EF5               	movlw	low _txTimeOut
 13563  0044F2  6E02               	movwf	get_timer0base@timer^0,c
 13564  0044F4  0E00               	movlw	high _txTimeOut
 13565  0044F6  6E03               	movwf	(get_timer0base@timer+1)^0,c
 13566  0044F8  ECB6  F04B         	call	_get_timer0base	;wreg free
 13567  0044FC  5002               	movf	?_get_timer0base^0,w,c
 13568  0044FE  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13569  004500  B4D8               	btfsc	status,2,c
 13570  004502  EF85  F022         	goto	u16731
 13571  004506  EF87  F022         	goto	u16730
 13572  00450A                     u16731:
 13573  00450A  EF92  F022         	goto	l16721
 13574  00450E                     u16730:
 13575  00450E  0E12               	movlw	18
 13576  004510  ECA9  F04D         	call	_SX1276Read
 13577  004514  6E3A               	movwf	??_radio_engine^0,c
 13578  004516  A63A               	btfss	??_radio_engine^0,3,c
 13579  004518  EF90  F022         	goto	u16741
 13580  00451C  EF92  F022         	goto	u16740
 13581  004520                     u16741:
 13582  004520  EFD8  F022         	goto	l2636
 13583  004524                     u16740:
 13584  004524                     l16721:
 13585                           
 13586                           ;phy/sx1216/phy_src/phy.c: 814:                 radio_state_var = START_RX;
 13587  004524  0E01               	movlw	1
 13588  004526  0101               	movlb	1	; () banked
 13589  004528  6F6A               	movwf	_radio_state_var& (0+255),b
 13590  00452A                     
 13591                           ; BSR set to: 1
 13592                           ;phy/sx1216/phy_src/phy.c: 815:                 if(get_timer0base(&txTimeOut)){
 13593  00452A  0EF5               	movlw	low _txTimeOut
 13594  00452C  6E02               	movwf	get_timer0base@timer^0,c
 13595  00452E  0E00               	movlw	high _txTimeOut
 13596  004530  6E03               	movwf	(get_timer0base@timer+1)^0,c
 13597  004532  ECB6  F04B         	call	_get_timer0base	;wreg free
 13598  004536  5002               	movf	?_get_timer0base^0,w,c
 13599  004538  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13600  00453A  B4D8               	btfsc	status,2,c
 13601  00453C  EFA2  F022         	goto	u16751
 13602  004540  EFA4  F022         	goto	u16750
 13603  004544                     u16751:
 13604  004544  EFA9  F022         	goto	l16727
 13605  004548                     u16750:
 13606  004548                     
 13607                           ;phy/sx1216/phy_src/phy.c: 816:                     PHY_DataConf(PHY_STATUS_SUCCESS);
 13608  004548  0E00               	movlw	0
 13609  00454A  ECA6  F04A         	call	_PHY_DataConf
 13610                           
 13611                           ;phy/sx1216/phy_src/phy.c: 817:                 }
 13612  00454E  EFD8  F022         	goto	l2636
 13613  004552                     l16727:
 13614                           
 13615                           ;phy/sx1216/phy_src/phy.c: 819:                     PHY_DataConf(PHY_STATUS_NO_ACK);
 13616  004552  0E02               	movlw	2
 13617  004554  ECA6  F04A         	call	_PHY_DataConf
 13618  004558  EFD8  F022         	goto	l2636
 13619  00455C                     l16731:
 13620  00455C  0101               	movlb	1	; () banked
 13621  00455E  516A               	movf	_radio_state_var& (0+255),w,b
 13622  004560  6E3A               	movwf	??_radio_engine^0,c
 13623  004562  6A3B               	clrf	(??_radio_engine+1)^0,c
 13624                           
 13625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13626                           ; Switch size 1, requested type "simple"
 13627                           ; Number of cases is 1, Range of values is 0 to 0
 13628                           ; switch strategies available:
 13629                           ; Name         Instructions Cycles
 13630                           ; simple_byte            4     3 (average)
 13631                           ;	Chosen strategy is simple_byte
 13632  004564  503B               	movf	(??_radio_engine+1)^0,w,c
 13633  004566  0A00               	xorlw	0	; case 0
 13634  004568  B4D8               	btfsc	status,2,c
 13635  00456A  EFB9  F022         	goto	l17835
 13636  00456E  EF15  F022         	goto	l16685
 13637  004572                     l17835:
 13638                           
 13639                           ; BSR set to: 1
 13640                           ; Switch size 1, requested type "simple"
 13641                           ; Number of cases is 7, Range of values is 0 to 7
 13642                           ; switch strategies available:
 13643                           ; Name         Instructions Cycles
 13644                           ; simple_byte           22    12 (average)
 13645                           ;	Chosen strategy is simple_byte
 13646  004572  503A               	movf	??_radio_engine^0,w,c
 13647  004574  0A00               	xorlw	0	; case 0
 13648  004576  B4D8               	btfsc	status,2,c
 13649  004578  EF04  F022         	goto	l16677
 13650  00457C  0A01               	xorlw	1	; case 1
 13651  00457E  B4D8               	btfsc	status,2,c
 13652  004580  EF0D  F022         	goto	l16683
 13653  004584  0A03               	xorlw	3	; case 2
 13654  004586  B4D8               	btfsc	status,2,c
 13655  004588  EF21  F022         	goto	l2619
 13656  00458C  0A01               	xorlw	1	; case 3
 13657  00458E  B4D8               	btfsc	status,2,c
 13658  004590  EF2C  F022         	goto	l16693
 13659  004594  0A07               	xorlw	7	; case 4
 13660  004596  B4D8               	btfsc	status,2,c
 13661  004598  EF33  F022         	goto	l16697
 13662  00459C  0A02               	xorlw	2	; case 6
 13663  00459E  B4D8               	btfsc	status,2,c
 13664  0045A0  EF69  F022         	goto	l16713
 13665  0045A4  0A01               	xorlw	1	; case 7
 13666  0045A6  B4D8               	btfsc	status,2,c
 13667  0045A8  EF78  F022         	goto	l16717
 13668  0045AC  EF15  F022         	goto	l16685
 13669  0045B0                     l2636:
 13670  0045B0  0012               	return		;funcret
 13671  0045B2                     __end_of_radio_engine:
 13672                           	opt callstack 0
 13673                           
 13674 ;; *************** function _cad *****************
 13675 ;; Defined at:
 13676 ;;		line 556 in file "phy/sx1216/phy_src/phy.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;		None
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;  RSSI            2   17[COMRAM] short 
 13681 ;;  temp            1   19[COMRAM] unsigned char 
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  1    wreg      unsigned char 
 13684 ;; Registers used:
 13685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13692 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13695 ;;Total ram usage:        4 bytes
 13696 ;; Hardware stack levels used:    1
 13697 ;; Hardware stack levels required when called:   13
 13698 ;; This function calls:
 13699 ;;		_SX1276Read
 13700 ;;		_SX1276Write
 13701 ;;		_get_timer0base
 13702 ;;		_set_timer0base
 13703 ;;		_start_radio_cad
 13704 ;; This function is called by:
 13705 ;;		_radio_engine
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           	psect	text82
 13710  005CCA                     __ptext82:
 13711                           	opt callstack 0
 13712  005CCA                     _cad:
 13713                           	opt callstack 14
 13714  005CCA                     
 13715                           ;phy/sx1216/phy_src/phy.c: 558:     uint8_t temp;;phy/sx1216/phy_src/phy.c: 560:     tem
      +                          p = SX1276Read(0x18);
 13716  005CCA  0E18               	movlw	24
 13717  005CCC  ECA9  F04D         	call	_SX1276Read
 13718  005CD0  6E14               	movwf	cad@temp^0,c
 13719  005CD2                     
 13720                           ;phy/sx1216/phy_src/phy.c: 561:     if((temp & 0x01) | (temp & 0x02))
 13721  005CD2  0060  F050  F011   	movff	cad@temp,??_cad
 13722  005CD8  0E02               	movlw	2
 13723  005CDA  1611               	andwf	??_cad^0,f,c
 13724  005CDC  5014               	movf	cad@temp^0,w,c
 13725  005CDE  0B01               	andlw	1
 13726  005CE0  1011               	iorwf	??_cad^0,w,c
 13727  005CE2  0900               	iorlw	0
 13728  005CE4  B4D8               	btfsc	status,2,c
 13729  005CE6  EF77  F02E         	goto	u16121
 13730  005CEA  EF79  F02E         	goto	u16120
 13731  005CEE                     u16121:
 13732  005CEE  EF7C  F02E         	goto	l16061
 13733  005CF2                     u16120:
 13734  005CF2                     l16057:
 13735                           
 13736                           ;phy/sx1216/phy_src/phy.c: 562:     {;phy/sx1216/phy_src/phy.c: 563:         return 1;
 13737  005CF2  0E01               	movlw	1
 13738  005CF4  EFF1  F02E         	goto	l2575
 13739  005CF8                     l16061:
 13740                           
 13741                           ;phy/sx1216/phy_src/phy.c: 565:     start_radio_cad();
 13742  005CF8  EC10  F04E         	call	_start_radio_cad	;wreg free
 13743  005CFC                     
 13744                           ;phy/sx1216/phy_src/phy.c: 566:     cadDone = 0;
 13745  005CFC  0E00               	movlw	0
 13746  005CFE  0101               	movlb	1	; () banked
 13747  005D00  6F72               	movwf	_cadDone& (0+255),b
 13748  005D02                     
 13749                           ; BSR set to: 1
 13750                           ;phy/sx1216/phy_src/phy.c: 567:     set_timer0base(&cadTimeOut, 2000);
 13751  005D02  0EF7               	movlw	low _cadTimeOut
 13752  005D04  6E02               	movwf	set_timer0base@timer^0,c
 13753  005D06  0E00               	movlw	high _cadTimeOut
 13754  005D08  6E03               	movwf	(set_timer0base@timer+1)^0,c
 13755  005D0A  0E07               	movlw	7
 13756  005D0C  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13757  005D0E  0ED0               	movlw	208
 13758  005D10  6E04               	movwf	set_timer0base@tval^0,c
 13759  005D12  ECAD  F04C         	call	_set_timer0base	;wreg free
 13760                           
 13761                           ;phy/sx1216/phy_src/phy.c: 569:     while((cadDone == 0) && (get_timer0base(&cadTimeOut)
      +                          ))
 13762  005D16  EFC8  F02E         	goto	l16095
 13763  005D1A                     l16067:
 13764                           
 13765                           ;phy/sx1216/phy_src/phy.c: 570:     {;phy/sx1216/phy_src/phy.c: 571:         temp = SX12
      +                          76Read(0x12);
 13766  005D1A  0E12               	movlw	18
 13767  005D1C  ECA9  F04D         	call	_SX1276Read
 13768  005D20  6E14               	movwf	cad@temp^0,c
 13769                           
 13770                           ;phy/sx1216/phy_src/phy.c: 572:         SX1276Write(0x12,temp);
 13771  005D22  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
 13772  005D28  0E12               	movlw	18
 13773  005D2A  ECCC  F04D         	call	_SX1276Write
 13774  005D2E                     
 13775                           ;phy/sx1216/phy_src/phy.c: 573:         if(temp & 0x04)
 13776  005D2E  A414               	btfss	cad@temp^0,2,c
 13777  005D30  EF9C  F02E         	goto	u16131
 13778  005D34  EF9E  F02E         	goto	u16130
 13779  005D38                     u16131:
 13780  005D38  EFC8  F02E         	goto	l16095
 13781  005D3C                     u16130:
 13782  005D3C                     
 13783                           ;phy/sx1216/phy_src/phy.c: 574:         {;phy/sx1216/phy_src/phy.c: 575:             cad
      +                          Done = 1;
 13784  005D3C  0E01               	movlw	1
 13785  005D3E  0101               	movlb	1	; () banked
 13786  005D40  6F72               	movwf	_cadDone& (0+255),b
 13787  005D42                     
 13788                           ; BSR set to: 1
 13789                           ;phy/sx1216/phy_src/phy.c: 576:             if(temp & 0x01)
 13790  005D42  A014               	btfss	cad@temp^0,0,c
 13791  005D44  EFA6  F02E         	goto	u16141
 13792  005D48  EFA8  F02E         	goto	u16140
 13793  005D4C                     u16141:
 13794  005D4C  EFAA  F02E         	goto	l16081
 13795  005D50                     u16140:
 13796  005D50  EF79  F02E         	goto	l16057
 13797  005D54                     l16081:
 13798                           
 13799                           ; BSR set to: 1
 13800                           ;phy/sx1216/phy_src/phy.c: 581:             {;phy/sx1216/phy_src/phy.c: 582:            
      +                               int16_t RSSI;;phy/sx1216/phy_src/phy.c: 583:                 RSSI = -157 + SX1276Re
      +                          ad(0x1B);
 13801  005D54  0E1B               	movlw	27
 13802  005D56  ECA9  F04D         	call	_SX1276Read
 13803  005D5A  6E11               	movwf	??_cad^0,c
 13804  005D5C  0E63               	movlw	99
 13805  005D5E  2411               	addwf	??_cad^0,w,c
 13806  005D60  6E12               	movwf	cad@RSSI^0,c
 13807  005D62  6A13               	clrf	(cad@RSSI+1)^0,c
 13808  005D64  0EFF               	movlw	255
 13809  005D66  2213               	addwfc	(cad@RSSI+1)^0,f,c
 13810  005D68                     
 13811                           ;phy/sx1216/phy_src/phy.c: 585:                 if(RSSI < RSSITarget)
 13812  005D68  5013               	movf	(cad@RSSI+1)^0,w,c
 13813  005D6A  0A80               	xorlw	128
 13814  005D6C  6E11               	movwf	??_cad^0,c
 13815  005D6E  0100               	movlb	0	; () banked
 13816  005D70  51FB               	movf	_RSSITarget& (0+255),w,b
 13817  005D72  5C12               	subwf	cad@RSSI^0,w,c
 13818  005D74  0E80               	movlw	128
 13819  005D76  BFFB               	btfsc	_RSSITarget& (0+255),7,b
 13820  005D78  0E7F               	movlw	127
 13821  005D7A  5811               	subwfb	??_cad^0,w,c
 13822  005D7C  B0D8               	btfsc	status,0,c
 13823  005D7E  EFC3  F02E         	goto	u16151
 13824  005D82  EFC5  F02E         	goto	u16150
 13825  005D86                     u16151:
 13826  005D86  EF79  F02E         	goto	l16057
 13827  005D8A                     u16150:
 13828  005D8A                     
 13829                           ; BSR set to: 0
 13830                           ;phy/sx1216/phy_src/phy.c: 586:                 {;phy/sx1216/phy_src/phy.c: 587:        
      +                                       return 0;
 13831  005D8A  0E00               	movlw	0
 13832  005D8C  EFF1  F02E         	goto	l2575
 13833  005D90                     l16095:
 13834                           
 13835                           ;phy/sx1216/phy_src/phy.c: 569:     while((cadDone == 0) && (get_timer0base(&cadTimeOut)
      +                          ))
 13836  005D90  0101               	movlb	1	; () banked
 13837  005D92  5172               	movf	_cadDone& (0+255),w,b
 13838  005D94  A4D8               	btfss	status,2,c
 13839  005D96  EFCF  F02E         	goto	u16161
 13840  005D9A  EFD1  F02E         	goto	u16160
 13841  005D9E                     u16161:
 13842  005D9E  EFE0  F02E         	goto	l16099
 13843  005DA2                     u16160:
 13844  005DA2                     
 13845                           ; BSR set to: 1
 13846  005DA2  0EF7               	movlw	low _cadTimeOut
 13847  005DA4  6E02               	movwf	get_timer0base@timer^0,c
 13848  005DA6  0E00               	movlw	high _cadTimeOut
 13849  005DA8  6E03               	movwf	(get_timer0base@timer+1)^0,c
 13850  005DAA  ECB6  F04B         	call	_get_timer0base	;wreg free
 13851  005DAE  5002               	movf	?_get_timer0base^0,w,c
 13852  005DB0  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13853  005DB2  A4D8               	btfss	status,2,c
 13854  005DB4  EFDE  F02E         	goto	u16171
 13855  005DB8  EFE0  F02E         	goto	u16170
 13856  005DBC                     u16171:
 13857  005DBC  EF8D  F02E         	goto	l16067
 13858  005DC0                     u16170:
 13859  005DC0                     l16099:
 13860                           
 13861                           ;phy/sx1216/phy_src/phy.c: 596:     if(!get_timer0base(&cadTimeOut))
 13862  005DC0  0EF7               	movlw	low _cadTimeOut
 13863  005DC2  6E02               	movwf	get_timer0base@timer^0,c
 13864  005DC4  0E00               	movlw	high _cadTimeOut
 13865  005DC6  6E03               	movwf	(get_timer0base@timer+1)^0,c
 13866  005DC8  ECB6  F04B         	call	_get_timer0base	;wreg free
 13867  005DCC  5002               	movf	?_get_timer0base^0,w,c
 13868  005DCE  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13869  005DD0  A4D8               	btfss	status,2,c
 13870  005DD2  EFED  F02E         	goto	u16181
 13871  005DD6  EFEF  F02E         	goto	u16180
 13872  005DDA                     u16181:
 13873  005DDA  EFF1  F02E         	goto	l2575
 13874  005DDE                     u16180:
 13875  005DDE  EF79  F02E         	goto	l16057
 13876  005DE2                     l2575:
 13877  005DE2  0012               	return		;funcret
 13878  005DE4                     __end_of_cad:
 13879                           	opt callstack 0
 13880                           
 13881 ;; *************** function _start_radio_cad *****************
 13882 ;; Defined at:
 13883 ;;		line 609 in file "phy/sx1216/phy_src/phy.c"
 13884 ;; Parameters:    Size  Location     Type
 13885 ;;		None
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;		None
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  1    wreg      void 
 13890 ;; Registers used:
 13891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13901 ;;Total ram usage:        0 bytes
 13902 ;; Hardware stack levels used:    1
 13903 ;; Hardware stack levels required when called:   12
 13904 ;; This function calls:
 13905 ;;		_SX1276Write
 13906 ;;		_idle
 13907 ;; This function is called by:
 13908 ;;		_cad
 13909 ;; This function uses a non-reentrant model
 13910 ;;
 13911                           
 13912                           	psect	text83
 13913  009C20                     __ptext83:
 13914                           	opt callstack 0
 13915  009C20                     _start_radio_cad:
 13916                           	opt callstack 14
 13917  009C20                     
 13918                           ;phy/sx1216/phy_src/phy.c: 611:     idle();
 13919  009C20  EC57  F04E         	call	_idle	;wreg free
 13920                           
 13921                           ;phy/sx1216/phy_src/phy.c: 612:     SX1276Write(0x01,0x80 | 0x07);
 13922  009C24  0E87               	movlw	135
 13923  009C26  6E0F               	movwf	SX1276Write@data^0,c
 13924  009C28  0E01               	movlw	1
 13925  009C2A  ECCC  F04D         	call	_SX1276Write
 13926  009C2E  0012               	return		;funcret
 13927  009C30                     __end_of_start_radio_cad:
 13928                           	opt callstack 0
 13929                           
 13930 ;; *************** function _set_timer0base *****************
 13931 ;; Defined at:
 13932 ;;		line 38 in file "hal/hal_src/Timers.c"
 13933 ;; Parameters:    Size  Location     Type
 13934 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13935 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13936 ;;		 -> ATTimeoutTimer(2), 
 13937 ;;  tval            2    3[COMRAM] unsigned short 
 13938 ;; Auto vars:     Size  Location     Type
 13939 ;;		None
 13940 ;; Return value:  Size  Location     Type
 13941 ;;                  1    wreg      void 
 13942 ;; Registers used:
 13943 ;;		fsr2l, fsr2h
 13944 ;; Tracked objects:
 13945 ;;		On entry : 0/0
 13946 ;;		On exit  : 0/0
 13947 ;;		Unchanged: 0/0
 13948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13953 ;;Total ram usage:        4 bytes
 13954 ;; Hardware stack levels used:    1
 13955 ;; Hardware stack levels required when called:    7
 13956 ;; This function calls:
 13957 ;;		Nothing
 13958 ;; This function is called by:
 13959 ;;		_processATCommand
 13960 ;;		_cad
 13961 ;;		_radio_engine
 13962 ;;		_handle_led_events
 13963 ;; This function uses a non-reentrant model
 13964 ;;
 13965                           
 13966                           	psect	text84
 13967  00995A                     __ptext84:
 13968                           	opt callstack 0
 13969  00995A                     _set_timer0base:
 13970                           	opt callstack 22
 13971  00995A                     
 13972                           ;hal/hal_src/Timers.c: 39:     PIE3bits.TMR0IE = 0;;
 13973  00995A  0139               	movlb	57	; () banked
 13974  00995C  9F93               	bcf	147,7,b	;volatile
 13975  00995E                     
 13976                           ; BSR set to: 57
 13977                           ;hal/hal_src/Timers.c: 40:     *timer = tval;
 13978  00995E  0060  F00B  FFD9   	movff	set_timer0base@timer,fsr2l
 13979  009964  0060  F00F  FFDA   	movff	set_timer0base@timer+1,fsr2h
 13980  00996A  0060  F013  FFDE   	movff	set_timer0base@tval,postinc2
 13981  009970  0060  F017  FFDD   	movff	set_timer0base@tval+1,postdec2
 13982  009976                     
 13983                           ; BSR set to: 57
 13984                           ;hal/hal_src/Timers.c: 41:     PIE3bits.TMR0IE = 1;;
 13985  009976  8F93               	bsf	147,7,b	;volatile
 13986  009978                     
 13987                           ; BSR set to: 57
 13988  009978  0012               	return		;funcret
 13989  00997A                     __end_of_set_timer0base:
 13990                           	opt callstack 0
 13991                           
 13992 ;; *************** function _get_timer0base *****************
 13993 ;; Defined at:
 13994 ;;		line 30 in file "hal/hal_src/Timers.c"
 13995 ;; Parameters:    Size  Location     Type
 13996 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13997 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13998 ;;		 -> ATTimeoutTimer(2), 
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;  tval            2    3[COMRAM] unsigned short 
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  2    1[COMRAM] unsigned short 
 14003 ;; Registers used:
 14004 ;;		fsr2l, fsr2h
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14013 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14014 ;;Total ram usage:        4 bytes
 14015 ;; Hardware stack levels used:    1
 14016 ;; Hardware stack levels required when called:    7
 14017 ;; This function calls:
 14018 ;;		Nothing
 14019 ;; This function is called by:
 14020 ;;		_processATCommand
 14021 ;;		_cad
 14022 ;;		_radio_engine
 14023 ;;		_handle_led_events
 14024 ;; This function uses a non-reentrant model
 14025 ;;
 14026                           
 14027                           	psect	text85
 14028  00976C                     __ptext85:
 14029                           	opt callstack 0
 14030  00976C                     _get_timer0base:
 14031                           	opt callstack 22
 14032  00976C                     
 14033                           ;hal/hal_src/Timers.c: 31:     uint16_t tval;;hal/hal_src/Timers.c: 32:     PIE3bits.TMR
      +                          0IE = 0;;
 14034  00976C  0139               	movlb	57	; () banked
 14035  00976E  9F93               	bcf	147,7,b	;volatile
 14036  009770                     
 14037                           ; BSR set to: 57
 14038                           ;hal/hal_src/Timers.c: 33:     tval = *timer;
 14039  009770  0060  F00B  FFD9   	movff	get_timer0base@timer,fsr2l
 14040  009776  0060  F00F  FFDA   	movff	get_timer0base@timer+1,fsr2h
 14041  00977C  006F FF78  F004    	movff	postinc2,get_timer0base@tval
 14042  009782  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
 14043  009788                     
 14044                           ; BSR set to: 57
 14045                           ;hal/hal_src/Timers.c: 34:     PIE3bits.TMR0IE = 1;;
 14046  009788  8F93               	bsf	147,7,b	;volatile
 14047  00978A                     
 14048                           ; BSR set to: 57
 14049                           ;hal/hal_src/Timers.c: 35:     return tval;
 14050  00978A  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
 14051  009790  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
 14052  009796                     
 14053                           ; BSR set to: 57
 14054  009796  0012               	return		;funcret
 14055  009798                     __end_of_get_timer0base:
 14056                           	opt callstack 0
 14057                           
 14058 ;; *************** function _PHY_DataConf *****************
 14059 ;; Defined at:
 14060 ;;		line 286 in file "nwk/nwk_src/nwkTx.c"
 14061 ;; Parameters:    Size  Location     Type
 14062 ;;  status          1    wreg     unsigned char 
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;  status          1    4[COMRAM] unsigned char 
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  1    wreg      void 
 14067 ;; Registers used:
 14068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14078 ;;Total ram usage:        1 bytes
 14079 ;; Hardware stack levels used:    1
 14080 ;; Hardware stack levels required when called:    8
 14081 ;; This function calls:
 14082 ;;		_nwkTxConvertPhyStatus
 14083 ;; This function is called by:
 14084 ;;		_radio_engine
 14085 ;; This function uses a non-reentrant model
 14086 ;;
 14087                           
 14088                           	psect	text86
 14089  00954C                     __ptext86:
 14090                           	opt callstack 0
 14091  00954C                     _PHY_DataConf:
 14092                           	opt callstack 19
 14093                           
 14094                           ; BSR set to: 57
 14095                           ;incstack = 0
 14096                           ;PHY_DataConf@status stored from wreg
 14097  00954C  6E05               	movwf	PHY_DataConf@status^0,c
 14098  00954E                     
 14099                           ;nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);nwk/nwk_src/nwkTx.c: 287: {
      +                          ;nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhyStatus(stat
      +                          us);
 14100  00954E  0101               	movlb	1	; () banked
 14101  009550  EE20 F083          	lfsr	2,131
 14102  009554  5161               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 14103  009556  26D9               	addwf	fsr2l,f,c
 14104  009558  5162               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 14105  00955A  22DA               	addwfc	fsr2h,f,c
 14106  00955C  5005               	movf	PHY_DataConf@status^0,w,c
 14107  00955E  ECC7  F046         	call	_nwkTxConvertPhyStatus
 14108  009562  6EDF               	movwf	indf2,c
 14109  009564                     
 14110                           ;nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 14111  009564  0060  F587  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 14112  00956A  0060  F58B  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 14113  009570  0E15               	movlw	21
 14114  009572  6EDF               	movwf	indf2,c
 14115  009574                     
 14116                           ;nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
 14117  009574  0E00               	movlw	0
 14118  009576  0101               	movlb	1	; () banked
 14119  009578  6F61               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 14120  00957A  0E00               	movlw	0
 14121  00957C  6F62               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 14122  00957E                     
 14123                           ; BSR set to: 1
 14124                           ;nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 14125  00957E  0726               	decf	(_nwkIb+38)& (0+255),f,b
 14126  009580  A0D8               	btfss	status,0,c
 14127  009582  0727               	decf	(_nwkIb+39)& (0+255),f,b
 14128  009584                     
 14129                           ; BSR set to: 1
 14130  009584  0012               	return		;funcret
 14131  009586                     __end_of_PHY_DataConf:
 14132                           	opt callstack 0
 14133                           
 14134 ;; *************** function _nwkTxConvertPhyStatus *****************
 14135 ;; Defined at:
 14136 ;;		line 266 in file "nwk/nwk_src/nwkTx.c"
 14137 ;; Parameters:    Size  Location     Type
 14138 ;;  status          1    wreg     unsigned char 
 14139 ;; Auto vars:     Size  Location     Type
 14140 ;;  status          1    3[COMRAM] unsigned char 
 14141 ;; Return value:  Size  Location     Type
 14142 ;;                  1    wreg      unsigned char 
 14143 ;; Registers used:
 14144 ;;		wreg, status,2, status,0
 14145 ;; Tracked objects:
 14146 ;;		On entry : 0/0
 14147 ;;		On exit  : 0/0
 14148 ;;		Unchanged: 0/0
 14149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14154 ;;Total ram usage:        3 bytes
 14155 ;; Hardware stack levels used:    1
 14156 ;; Hardware stack levels required when called:    7
 14157 ;; This function calls:
 14158 ;;		Nothing
 14159 ;; This function is called by:
 14160 ;;		_PHY_DataConf
 14161 ;; This function uses a non-reentrant model
 14162 ;;
 14163                           
 14164                           	psect	text87
 14165  008D8E                     __ptext87:
 14166                           	opt callstack 0
 14167  008D8E                     _nwkTxConvertPhyStatus:
 14168                           	opt callstack 19
 14169                           
 14170                           ; BSR set to: 1
 14171                           ;incstack = 0
 14172                           ;nwkTxConvertPhyStatus@status stored from wreg
 14173  008D8E  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
 14174  008D90                     
 14175                           ;nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);nwk/nwk_
      +                          src/nwkTx.c: 267: {;nwk/nwk_src/nwkTx.c: 268:   switch (status)
 14176  008D90  EFD6  F046         	goto	l10713
 14177  008D94                     l10695:
 14178                           
 14179                           ;nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 14180  008D94  0E00               	movlw	0
 14181  008D96  EFEF  F046         	goto	l2307
 14182  008D9A                     l10699:
 14183                           
 14184                           ;nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 14185  008D9A  0E20               	movlw	32
 14186  008D9C  EFEF  F046         	goto	l2307
 14187  008DA0                     l10703:
 14188                           
 14189                           ;nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 14190  008DA0  0E21               	movlw	33
 14191  008DA2  EFEF  F046         	goto	l2307
 14192  008DA6                     l10707:
 14193                           
 14194                           ;nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 14195  008DA6  0E01               	movlw	1
 14196  008DA8  EFEF  F046         	goto	l2307
 14197  008DAC                     l10713:
 14198  008DAC  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
 14199  008DAE  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
 14200  008DB0  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
 14201                           
 14202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14203                           ; Switch size 1, requested type "simple"
 14204                           ; Number of cases is 1, Range of values is 0 to 0
 14205                           ; switch strategies available:
 14206                           ; Name         Instructions Cycles
 14207                           ; simple_byte            4     3 (average)
 14208                           ;	Chosen strategy is simple_byte
 14209  008DB2  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
 14210  008DB4  0A00               	xorlw	0	; case 0
 14211  008DB6  B4D8               	btfsc	status,2,c
 14212  008DB8  EFE0  F046         	goto	l17837
 14213  008DBC  EFD3  F046         	goto	l10707
 14214  008DC0                     l17837:
 14215                           
 14216                           ; Switch size 1, requested type "simple"
 14217                           ; Number of cases is 3, Range of values is 0 to 2
 14218                           ; switch strategies available:
 14219                           ; Name         Instructions Cycles
 14220                           ; simple_byte           10     6 (average)
 14221                           ;	Chosen strategy is simple_byte
 14222  008DC0  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
 14223  008DC2  0A00               	xorlw	0	; case 0
 14224  008DC4  B4D8               	btfsc	status,2,c
 14225  008DC6  EFCA  F046         	goto	l10695
 14226  008DCA  0A01               	xorlw	1	; case 1
 14227  008DCC  B4D8               	btfsc	status,2,c
 14228  008DCE  EFCD  F046         	goto	l10699
 14229  008DD2  0A03               	xorlw	3	; case 2
 14230  008DD4  B4D8               	btfsc	status,2,c
 14231  008DD6  EFD0  F046         	goto	l10703
 14232  008DDA  EFD3  F046         	goto	l10707
 14233  008DDE                     l2307:
 14234  008DDE  0012               	return		;funcret
 14235  008DE0                     __end_of_nwkTxConvertPhyStatus:
 14236                           	opt callstack 0
 14237                           
 14238 ;; *************** function _DIO0_Receive_ISR *****************
 14239 ;; Defined at:
 14240 ;;		line 662 in file "phy/sx1216/phy_src/phy.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;		None
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;  ind             5   27[COMRAM] struct PHY_DataInd_t
 14245 ;;  packetLength    1   25[COMRAM] unsigned char 
 14246 ;;  irqFlags        1   26[COMRAM] unsigned char 
 14247 ;; Return value:  Size  Location     Type
 14248 ;;                  1    wreg      void 
 14249 ;; Registers used:
 14250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14251 ;; Tracked objects:
 14252 ;;		On entry : 0/0
 14253 ;;		On exit  : 0/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14257 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14259 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14260 ;;Total ram usage:        7 bytes
 14261 ;; Hardware stack levels used:    1
 14262 ;; Hardware stack levels required when called:   13
 14263 ;; This function calls:
 14264 ;;		_PHY_DataInd
 14265 ;;		_SX1276Read
 14266 ;;		_SX1276ReadBuffer
 14267 ;;		_SX1276Write
 14268 ;;		_receive
 14269 ;; This function is called by:
 14270 ;;		_radio_engine
 14271 ;; This function uses a non-reentrant model
 14272 ;;
 14273                           
 14274                           	psect	text88
 14275  007452                     __ptext88:
 14276                           	opt callstack 0
 14277  007452                     _DIO0_Receive_ISR:
 14278                           	opt callstack 14
 14279  007452                     
 14280                           ;phy/sx1216/phy_src/phy.c: 664:     uint8_t irqFlags = SX1276Read(0x12);
 14281  007452  0E12               	movlw	18
 14282  007454  ECA9  F04D         	call	_SX1276Read
 14283  007458  6E1B               	movwf	DIO0_Receive_ISR@irqFlags^0,c
 14284                           
 14285                           ;phy/sx1216/phy_src/phy.c: 667:     SX1276Write(0x12, irqFlags);
 14286  00745A  0060  F06C  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14287  007460  0E12               	movlw	18
 14288  007462  ECCC  F04D         	call	_SX1276Write
 14289                           
 14290                           ;phy/sx1216/phy_src/phy.c: 668:     SX1276Write(0x12, irqFlags);
 14291  007466  0060  F06C  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14292  00746C  0E12               	movlw	18
 14293  00746E  ECCC  F04D         	call	_SX1276Write
 14294  007472                     
 14295                           ;phy/sx1216/phy_src/phy.c: 670:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40) &&
      +                           ((irqFlags & 0x80) == 0))
 14296  007472  BA1B               	btfsc	DIO0_Receive_ISR@irqFlags^0,5,c
 14297  007474  EF3E  F03A         	goto	u16191
 14298  007478  EF40  F03A         	goto	u16190
 14299  00747C                     u16191:
 14300  00747C  EF85  F03A         	goto	l16125
 14301  007480                     u16190:
 14302  007480  AC1B               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
 14303  007482  EF45  F03A         	goto	u16201
 14304  007486  EF47  F03A         	goto	u16200
 14305  00748A                     u16201:
 14306  00748A  EF85  F03A         	goto	l16125
 14307  00748E                     u16200:
 14308  00748E  BE1B               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
 14309  007490  EF4C  F03A         	goto	u16211
 14310  007494  EF4E  F03A         	goto	u16210
 14311  007498                     u16211:
 14312  007498  EF85  F03A         	goto	l16125
 14313  00749C                     u16210:
 14314  00749C                     
 14315                           ;phy/sx1216/phy_src/phy.c: 671:     {;phy/sx1216/phy_src/phy.c: 672:         PHY_DataInd
      +                          _t ind;;phy/sx1216/phy_src/phy.c: 673:         uint8_t packetLength;;phy/sx1216/phy_src/
      +                          phy.c: 676:         packetLength = SX1276Read(0x13);
 14316  00749C  0E13               	movlw	19
 14317  00749E  ECA9  F04D         	call	_SX1276Read
 14318  0074A2  6E1A               	movwf	DIO0_Receive_ISR@packetLength^0,c
 14319                           
 14320                           ;phy/sx1216/phy_src/phy.c: 679:         SX1276Write(0x0D, SX1276Read(0x10));
 14321  0074A4  0E10               	movlw	16
 14322  0074A6  ECA9  F04D         	call	_SX1276Read
 14323  0074AA  6E0F               	movwf	SX1276Write@data^0,c
 14324  0074AC  0E0D               	movlw	13
 14325  0074AE  ECCC  F04D         	call	_SX1276Write
 14326                           
 14327                           ;phy/sx1216/phy_src/phy.c: 680:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLengt
      +                          h);
 14328  0074B2  0E00               	movlw	low _phyRxBuffer
 14329  0074B4  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 14330  0074B6  0E04               	movlw	high _phyRxBuffer
 14331  0074B8  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 14332  0074BA  0060  F068  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 14333  0074C0  0E00               	movlw	0
 14334  0074C2  EC20  F04C         	call	_SX1276ReadBuffer
 14335                           
 14336                           ;phy/sx1216/phy_src/phy.c: 682:         SNR = SX1276Read(0x19);
 14337  0074C6  0E19               	movlw	25
 14338  0074C8  ECA9  F04D         	call	_SX1276Read
 14339  0074CC  0101               	movlb	1	; () banked
 14340  0074CE  6F6D               	movwf	_SNR& (0+255),b
 14341                           
 14342                           ;phy/sx1216/phy_src/phy.c: 683:         packetRSSI = SX1276Read(0x1A);
 14343  0074D0  0E1A               	movlw	26
 14344  0074D2  ECA9  F04D         	call	_SX1276Read
 14345  0074D6  0101               	movlb	1	; () banked
 14346  0074D8  6F6E               	movwf	_packetRSSI& (0+255),b
 14347  0074DA                     
 14348                           ; BSR set to: 1
 14349                           ;phy/sx1216/phy_src/phy.c: 684:         ind.data = phyRxBuffer;
 14350  0074DA  0E00               	movlw	low _phyRxBuffer
 14351  0074DC  6E1C               	movwf	DIO0_Receive_ISR@ind^0,c
 14352  0074DE  0E04               	movlw	high _phyRxBuffer
 14353  0074E0  6E1D               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
 14354  0074E2                     
 14355                           ; BSR set to: 1
 14356                           ;phy/sx1216/phy_src/phy.c: 685:         ind.size = packetLength;
 14357  0074E2  0060  F068  F01E   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 14358  0074E8                     
 14359                           ; BSR set to: 1
 14360                           ;phy/sx1216/phy_src/phy.c: 686:         ind.lqi = phyRxBuffer[packetLength];
 14361  0074E8  0E00               	movlw	low _phyRxBuffer
 14362  0074EA  241A               	addwf	DIO0_Receive_ISR@packetLength^0,w,c
 14363  0074EC  6ED9               	movwf	fsr2l,c
 14364  0074EE  6ADA               	clrf	fsr2h,c
 14365  0074F0  0E04               	movlw	high _phyRxBuffer
 14366  0074F2  22DA               	addwfc	fsr2h,f,c
 14367  0074F4  50DF               	movf	indf2,w,c
 14368  0074F6  6E1F               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
 14369  0074F8                     
 14370                           ; BSR set to: 1
 14371                           ;phy/sx1216/phy_src/phy.c: 687:         ind.rssi = packetRSSI + (-157);
 14372  0074F8  516E               	movf	_packetRSSI& (0+255),w,b
 14373  0074FA  0F63               	addlw	99
 14374  0074FC  6E20               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
 14375  0074FE                     
 14376                           ; BSR set to: 1
 14377                           ;phy/sx1216/phy_src/phy.c: 688:         PHY_DataInd(&ind);
 14378  0074FE  0E1C               	movlw	low DIO0_Receive_ISR@ind
 14379  007500  6E13               	movwf	PHY_DataInd@ind^0,c
 14380  007502  0E00               	movlw	high DIO0_Receive_ISR@ind
 14381  007504  6E14               	movwf	(PHY_DataInd@ind+1)^0,c
 14382  007506  EC00  F026         	call	_PHY_DataInd	;wreg free
 14383  00750A                     l16125:
 14384                           
 14385                           ;phy/sx1216/phy_src/phy.c: 691:     receive(0);
 14386  00750A  0E00               	movlw	0
 14387  00750C  ECAF  F047         	call	_receive
 14388  007510  0012               	return		;funcret
 14389  007512                     __end_of_DIO0_Receive_ISR:
 14390                           	opt callstack 0
 14391                           
 14392 ;; *************** function _PHY_DataInd *****************
 14393 ;; Defined at:
 14394 ;;		line 116 in file "nwk/nwk_src/nwkRx.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;  ind             2   18[COMRAM] PTR struct PHY_DataInd_t
 14397 ;;		 -> DIO0_Receive_ISR@ind(5), 
 14398 ;; Auto vars:     Size  Location     Type
 14399 ;;  frame           2   23[COMRAM] PTR struct NwkFrame_t
 14400 ;;		 -> nwkFrameFrames(685), NULL(0), 
 14401 ;; Return value:  Size  Location     Type
 14402 ;;                  1    wreg      void 
 14403 ;; Registers used:
 14404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14405 ;; Tracked objects:
 14406 ;;		On entry : 0/0
 14407 ;;		On exit  : 0/0
 14408 ;;		Unchanged: 0/0
 14409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14412 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14414 ;;Total ram usage:        7 bytes
 14415 ;; Hardware stack levels used:    1
 14416 ;; Hardware stack levels required when called:    9
 14417 ;; This function calls:
 14418 ;;		_memcpy
 14419 ;;		_nwkFrameAlloc
 14420 ;; This function is called by:
 14421 ;;		_DIO0_Receive_ISR
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425                           	psect	text89
 14426  004C00                     __ptext89:
 14427                           	opt callstack 0
 14428  004C00                     _PHY_DataInd:
 14429                           	opt callstack 17
 14430  004C00                     
 14431                           ;nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);nwk/nwk_src/nwkRx.c: 117
      +                          : {;nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;nwk/nwk_src/nwkRx.c: 120:   if (0x88 
      +                          != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 14432  004C00  0060  F04F  FFD9   	movff	PHY_DataInd@ind,fsr2l
 14433  004C06  0060  F053  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
 14434  004C0C  EE10 F001          	lfsr	1,1
 14435  004C10  50DE               	movf	postinc2,w,c
 14436  004C12  26E1               	addwf	fsr1l,f,c
 14437  004C14  50DD               	movf	postdec2,w,c
 14438  004C16  22E2               	addwfc	fsr1h,f,c
 14439  004C18  0E88               	movlw	136
 14440  004C1A  18E6               	xorwf	postinc1,w,c
 14441  004C1C  A4D8               	btfss	status,2,c
 14442  004C1E  EF13  F026         	goto	u14521
 14443  004C22  EF15  F026         	goto	u14520
 14444  004C26                     u14521:
 14445  004C26  EFC2  F026         	goto	l2057
 14446  004C2A                     u14520:
 14447  004C2A  0060  F04F  FFD9   	movff	PHY_DataInd@ind,fsr2l
 14448  004C30  0060  F053  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
 14449  004C36  006F FF78  F015    	movff	postinc2,??_PHY_DataInd
 14450  004C3C  006F FF74  F016    	movff	postdec2,??_PHY_DataInd+1
 14451  004C42  0060  F057  FFD9   	movff	??_PHY_DataInd,fsr2l
 14452  004C48  0060  F05B  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 14453  004C4E  0E61               	movlw	97
 14454  004C50  18DE               	xorwf	postinc2,w,c
 14455  004C52  B4D8               	btfsc	status,2,c
 14456  004C54  EF2E  F026         	goto	u14531
 14457  004C58  EF30  F026         	goto	u14530
 14458  004C5C                     u14531:
 14459  004C5C  EF4B  F026         	goto	l15157
 14460  004C60                     u14530:
 14461  004C60  0060  F04F  FFD9   	movff	PHY_DataInd@ind,fsr2l
 14462  004C66  0060  F053  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
 14463  004C6C  006F FF78  F015    	movff	postinc2,??_PHY_DataInd
 14464  004C72  006F FF74  F016    	movff	postdec2,??_PHY_DataInd+1
 14465  004C78  0060  F057  FFD9   	movff	??_PHY_DataInd,fsr2l
 14466  004C7E  0060  F05B  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 14467  004C84  0E41               	movlw	65
 14468  004C86  18DE               	xorwf	postinc2,w,c
 14469  004C88  A4D8               	btfss	status,2,c
 14470  004C8A  EF49  F026         	goto	u14541
 14471  004C8E  EF4B  F026         	goto	u14540
 14472  004C92                     u14541:
 14473  004C92  EFC2  F026         	goto	l2057
 14474  004C96                     u14540:
 14475  004C96                     l15157:
 14476  004C96  EE20 F002          	lfsr	2,2
 14477  004C9A  5013               	movf	PHY_DataInd@ind^0,w,c
 14478  004C9C  26D9               	addwf	fsr2l,f,c
 14479  004C9E  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
 14480  004CA0  22DA               	addwfc	fsr2h,f,c
 14481  004CA2  0E10               	movlw	16
 14482  004CA4  60DF               	cpfslt	indf2,c
 14483  004CA6  EF57  F026         	goto	u14551
 14484  004CAA  EF59  F026         	goto	u14550
 14485  004CAE                     u14551:
 14486  004CAE  EF5B  F026         	goto	l15159
 14487  004CB2                     u14550:
 14488  004CB2  EFC2  F026         	goto	l2057
 14489  004CB6                     l15159:
 14490                           
 14491                           ;nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
 14492  004CB6  ECFE  F038         	call	_nwkFrameAlloc	;wreg free
 14493  004CBA  0060  F038  F018   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 14494  004CC0  0060  F03C  F019   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 14495  004CC6  5018               	movf	PHY_DataInd@frame^0,w,c
 14496  004CC8  1019               	iorwf	(PHY_DataInd@frame+1)^0,w,c
 14497  004CCA  A4D8               	btfss	status,2,c
 14498  004CCC  EF6A  F026         	goto	u14561
 14499  004CD0  EF6C  F026         	goto	u14560
 14500  004CD4                     u14561:
 14501  004CD4  EF6E  F026         	goto	l15163
 14502  004CD8                     u14560:
 14503  004CD8  EFC2  F026         	goto	l2057
 14504  004CDC                     l15163:
 14505                           
 14506                           ;nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 14507  004CDC  0060  F063  FFD9   	movff	PHY_DataInd@frame,fsr2l
 14508  004CE2  0060  F067  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 14509  004CE8  0E20               	movlw	32
 14510  004CEA  6EDF               	movwf	indf2,c
 14511  004CEC                     
 14512                           ;nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 14513  004CEC  EE20 F002          	lfsr	2,2
 14514  004CF0  5013               	movf	PHY_DataInd@ind^0,w,c
 14515  004CF2  26D9               	addwf	fsr2l,f,c
 14516  004CF4  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
 14517  004CF6  22DA               	addwfc	fsr2h,f,c
 14518  004CF8  EE10 F001          	lfsr	1,1
 14519  004CFC  5018               	movf	PHY_DataInd@frame^0,w,c
 14520  004CFE  26E1               	addwf	fsr1l,f,c
 14521  004D00  5019               	movf	(PHY_DataInd@frame+1)^0,w,c
 14522  004D02  22E2               	addwfc	fsr1h,f,c
 14523  004D04  006F FF7F FFE7     	movff	indf2,indf1
 14524  004D0A                     
 14525                           ;nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 14526  004D0A  EE20 F003          	lfsr	2,3
 14527  004D0E  5013               	movf	PHY_DataInd@ind^0,w,c
 14528  004D10  26D9               	addwf	fsr2l,f,c
 14529  004D12  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
 14530  004D14  22DA               	addwfc	fsr2h,f,c
 14531  004D16  EE10 F083          	lfsr	1,131
 14532  004D1A  5018               	movf	PHY_DataInd@frame^0,w,c
 14533  004D1C  26E1               	addwf	fsr1l,f,c
 14534  004D1E  5019               	movf	(PHY_DataInd@frame+1)^0,w,c
 14535  004D20  22E2               	addwfc	fsr1h,f,c
 14536  004D22  006F FF7F FFE7     	movff	indf2,indf1
 14537  004D28                     
 14538                           ;nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 14539  004D28  EE20 F004          	lfsr	2,4
 14540  004D2C  5013               	movf	PHY_DataInd@ind^0,w,c
 14541  004D2E  26D9               	addwf	fsr2l,f,c
 14542  004D30  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
 14543  004D32  22DA               	addwfc	fsr2h,f,c
 14544  004D34  EE10 F084          	lfsr	1,132
 14545  004D38  5018               	movf	PHY_DataInd@frame^0,w,c
 14546  004D3A  26E1               	addwf	fsr1l,f,c
 14547  004D3C  5019               	movf	(PHY_DataInd@frame+1)^0,w,c
 14548  004D3E  22E2               	addwfc	fsr1h,f,c
 14549  004D40  006F FF7F FFE7     	movff	indf2,indf1
 14550  004D46                     
 14551                           ;nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 14552  004D46  0E02               	movlw	2
 14553  004D48  2418               	addwf	PHY_DataInd@frame^0,w,c
 14554  004D4A  6E08               	movwf	memcpy@d1^0,c
 14555  004D4C  0E00               	movlw	0
 14556  004D4E  2019               	addwfc	(PHY_DataInd@frame+1)^0,w,c
 14557  004D50  6E09               	movwf	(memcpy@d1+1)^0,c
 14558  004D52  0060  F04F  FFD9   	movff	PHY_DataInd@ind,fsr2l
 14559  004D58  0060  F053  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
 14560  004D5E  006F FF78  F00A    	movff	postinc2,memcpy@s1
 14561  004D64  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 14562  004D6A  EE20 F002          	lfsr	2,2
 14563  004D6E  5013               	movf	PHY_DataInd@ind^0,w,c
 14564  004D70  26D9               	addwf	fsr2l,f,c
 14565  004D72  5014               	movf	(PHY_DataInd@ind+1)^0,w,c
 14566  004D74  22DA               	addwfc	fsr2h,f,c
 14567  004D76  50DF               	movf	indf2,w,c
 14568  004D78  6E15               	movwf	??_PHY_DataInd^0,c
 14569  004D7A  5015               	movf	??_PHY_DataInd^0,w,c
 14570  004D7C  6E0C               	movwf	memcpy@n^0,c
 14571  004D7E  6A0D               	clrf	(memcpy@n+1)^0,c
 14572  004D80  ECD7  F041         	call	_memcpy	;wreg free
 14573  004D84                     l2057:
 14574  004D84  0012               	return		;funcret
 14575  004D86                     __end_of_PHY_DataInd:
 14576                           	opt callstack 0
 14577                           
 14578 ;; *************** function _NWK_TaskHandler *****************
 14579 ;; Defined at:
 14580 ;;		line 196 in file "nwk/nwk_src/nwk.c"
 14581 ;; Parameters:    Size  Location     Type
 14582 ;;		None
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;		None
 14585 ;; Return value:  Size  Location     Type
 14586 ;;                  1    wreg      void 
 14587 ;; Registers used:
 14588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14589 ;; Tracked objects:
 14590 ;;		On entry : 0/0
 14591 ;;		On exit  : 0/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;Total ram usage:        0 bytes
 14599 ;; Hardware stack levels used:    1
 14600 ;; Hardware stack levels required when called:   20
 14601 ;; This function calls:
 14602 ;;		_nwkDataReqTaskHandler
 14603 ;;		_nwkRxTaskHandler
 14604 ;;		_nwkTxTaskHandler
 14605 ;; This function is called by:
 14606 ;;		_SYS_TaskHandler
 14607 ;; This function uses a non-reentrant model
 14608 ;;
 14609                           
 14610                           	psect	text90
 14611  009C3E                     __ptext90:
 14612                           	opt callstack 0
 14613  009C3E                     _NWK_TaskHandler:
 14614                           	opt callstack 9
 14615  009C3E                     
 14616                           ;nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 14617  009C3E  EC57  F037         	call	_nwkRxTaskHandler	;wreg free
 14618  009C42                     
 14619                           ;nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 14620  009C42  EC73  F016         	call	_nwkTxTaskHandler	;wreg free
 14621  009C46                     
 14622                           ;nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 14623  009C46  EC5E  F03E         	call	_nwkDataReqTaskHandler	;wreg free
 14624  009C4A  0012               	return		;funcret
 14625  009C4C                     __end_of_NWK_TaskHandler:
 14626                           	opt callstack 0
 14627                           
 14628 ;; *************** function _nwkTxTaskHandler *****************
 14629 ;; Defined at:
 14630 ;;		line 297 in file "nwk/nwk_src/nwkTx.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;		None
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
 14635 ;;		 -> nwkFrameFrames(685), NULL(0), 
 14636 ;; Return value:  Size  Location     Type
 14637 ;;                  1    wreg      void 
 14638 ;; Registers used:
 14639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14640 ;; Tracked objects:
 14641 ;;		On entry : 0/0
 14642 ;;		On exit  : 0/0
 14643 ;;		Unchanged: 0/0
 14644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14647 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14649 ;;Total ram usage:        4 bytes
 14650 ;; Hardware stack levels used:    1
 14651 ;; Hardware stack levels required when called:   13
 14652 ;; This function calls:
 14653 ;;		_PHY_DataReq
 14654 ;;		_SYS_TimerStart
 14655 ;;		_nwkDataReqTxConf
 14656 ;;		_nwkFrameFree
 14657 ;;		_nwkFrameNext
 14658 ;;		_nwkRouteFrameSent
 14659 ;; This function is called by:
 14660 ;;		_NWK_TaskHandler
 14661 ;; This function uses a non-reentrant model
 14662 ;;
 14663                           
 14664                           	psect	text91
 14665  002CE6                     __ptext91:
 14666                           	opt callstack 0
 14667  002CE6                     _nwkTxTaskHandler:
 14668                           	opt callstack 15
 14669  002CE6                     
 14670                           ;nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
 14671  002CE6  0E00               	movlw	0
 14672  002CE8  6E16               	movwf	nwkTxTaskHandler@frame^0,c
 14673  002CEA  0E00               	movlw	0
 14674  002CEC  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
 14675                           
 14676                           ;nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 14677  002CEE  EF97  F017         	goto	l16589
 14678  002CF2                     l16543:
 14679                           
 14680                           ;nwk/nwk_src/nwkTx.c: 313:       {;nwk/nwk_src/nwkTx.c: 314:         if (frame->tx.timeo
      +                          ut > 0)
 14681  002CF2  EE20 F084          	lfsr	2,132
 14682  002CF6  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14683  002CF8  26D9               	addwf	fsr2l,f,c
 14684  002CFA  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14685  002CFC  22DA               	addwfc	fsr2h,f,c
 14686  002CFE  50DE               	movf	postinc2,w,c
 14687  002D00  10DE               	iorwf	postinc2,w,c
 14688  002D02  B4D8               	btfsc	status,2,c
 14689  002D04  EF86  F016         	goto	u16481
 14690  002D08  EF88  F016         	goto	u16480
 14691  002D0C                     u16481:
 14692  002D0C  EF98  F016         	goto	l16549
 14693  002D10                     u16480:
 14694  002D10                     
 14695                           ;nwk/nwk_src/nwkTx.c: 315:         {;nwk/nwk_src/nwkTx.c: 316:           frame->state = 
      +                          NWK_TX_STATE_WAIT_DELAY;
 14696  002D10  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14697  002D16  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14698  002D1C  0E11               	movlw	17
 14699  002D1E  6EDF               	movwf	indf2,c
 14700  002D20                     
 14701                           ;nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 14702  002D20  0E94               	movlw	low _nwkTxDelayTimer
 14703  002D22  6E10               	movwf	SYS_TimerStart@timer^0,c
 14704  002D24  0E01               	movlw	high _nwkTxDelayTimer
 14705  002D26  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 14706  002D28  ECFA  F04A         	call	_SYS_TimerStart	;wreg free
 14707                           
 14708                           ;nwk/nwk_src/nwkTx.c: 318:         }
 14709  002D2C  EF97  F017         	goto	l16589
 14710  002D30                     l16549:
 14711                           
 14712                           ;nwk/nwk_src/nwkTx.c: 320:         {;nwk/nwk_src/nwkTx.c: 321:           frame->state = 
      +                          NWK_TX_STATE_SEND;
 14713  002D30  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14714  002D36  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14715  002D3C  0E13               	movlw	19
 14716  002D3E  6EDF               	movwf	indf2,c
 14717  002D40  EF97  F017         	goto	l16589
 14718  002D44                     l16551:
 14719                           
 14720                           ;nwk/nwk_src/nwkTx.c: 326:       {;nwk/nwk_src/nwkTx.c: 327:         if (((void*)0) == n
      +                          wkTxPhyActiveFrame)
 14721  002D44  0101               	movlb	1	; () banked
 14722  002D46  5161               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 14723  002D48  1162               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 14724  002D4A  A4D8               	btfss	status,2,c
 14725  002D4C  EFAA  F016         	goto	u16491
 14726  002D50  EFAC  F016         	goto	u16490
 14727  002D54                     u16491:
 14728  002D54  EF97  F017         	goto	l16589
 14729  002D58                     u16490:
 14730  002D58                     
 14731                           ; BSR set to: 1
 14732                           ;nwk/nwk_src/nwkTx.c: 328:         {;nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyActiveF
      +                          rame = frame;
 14733  002D58  0060  F058  F161   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 14734  002D5E  0060  F05C  F162   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 14735  002D64                     
 14736                           ; BSR set to: 1
 14737                           ;nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 14738  002D64  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14739  002D6A  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14740  002D70  0E14               	movlw	20
 14741  002D72  6EDF               	movwf	indf2,c
 14742  002D74                     
 14743                           ; BSR set to: 1
 14744                           ;nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 14745  002D74  0E02               	movlw	2
 14746  002D76  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
 14747  002D78  6E11               	movwf	PHY_DataReq@data^0,c
 14748  002D7A  0E00               	movlw	0
 14749  002D7C  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
 14750  002D7E  6E12               	movwf	(PHY_DataReq@data+1)^0,c
 14751  002D80  EE20 F001          	lfsr	2,1
 14752  002D84  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14753  002D86  26D9               	addwf	fsr2l,f,c
 14754  002D88  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14755  002D8A  22DA               	addwfc	fsr2h,f,c
 14756  002D8C  50DF               	movf	indf2,w,c
 14757  002D8E  6E13               	movwf	PHY_DataReq@size^0,c
 14758  002D90  EC35  F045         	call	_PHY_DataReq	;wreg free
 14759  002D94                     
 14760                           ;nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 14761  002D94  0101               	movlb	1	; () banked
 14762  002D96  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 14763  002D98  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 14764  002D9A  EF97  F017         	goto	l16589
 14765  002D9E                     l16561:
 14766                           
 14767                           ;nwk/nwk_src/nwkTx.c: 340:       {;nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCESS_STA
      +                          TUS == frame->tx.status)
 14768  002D9E  EE20 F083          	lfsr	2,131
 14769  002DA2  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14770  002DA4  26D9               	addwf	fsr2l,f,c
 14771  002DA6  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14772  002DA8  22DA               	addwfc	fsr2h,f,c
 14773  002DAA  50DF               	movf	indf2,w,c
 14774  002DAC  A4D8               	btfss	status,2,c
 14775  002DAE  EFDB  F016         	goto	u16501
 14776  002DB2  EFDD  F016         	goto	u16500
 14777  002DB6                     u16501:
 14778  002DB6  EF21  F017         	goto	l16575
 14779  002DBA                     u16500:
 14780  002DBA                     
 14781                           ;nwk/nwk_src/nwkTx.c: 342:         {;nwk/nwk_src/nwkTx.c: 343:           if (frame->head
      +                          er.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 14782  002DBA  EE20 F00D          	lfsr	2,13
 14783  002DBE  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14784  002DC0  26D9               	addwf	fsr2l,f,c
 14785  002DC2  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14786  002DC4  22DA               	addwfc	fsr2h,f,c
 14787  002DC6  0101               	movlb	1	; () banked
 14788  002DC8  5100               	movf	_nwkIb& (0+255),w,b
 14789  002DCA  18DE               	xorwf	postinc2,w,c
 14790  002DCC  E107               	bnz	u16511
 14791  002DCE  5101               	movf	(_nwkIb+1)& (0+255),w,b
 14792  002DD0  18DE               	xorwf	postinc2,w,c
 14793  002DD2  A4D8               	btfss	status,2,c
 14794  002DD4  EFEE  F016         	goto	u16511
 14795  002DD8  EFF0  F016         	goto	u16510
 14796  002DDC                     u16511:
 14797  002DDC  EF17  F017         	goto	l16573
 14798  002DE0                     u16510:
 14799  002DE0                     
 14800                           ; BSR set to: 1
 14801  002DE0  EE20 F00B          	lfsr	2,11
 14802  002DE4  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14803  002DE6  26D9               	addwf	fsr2l,f,c
 14804  002DE8  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14805  002DEA  22DA               	addwfc	fsr2h,f,c
 14806  002DEC  A0DF               	btfss	indf2,0,c
 14807  002DEE  EFFB  F016         	goto	u16521
 14808  002DF2  EFFD  F016         	goto	u16520
 14809  002DF6                     u16521:
 14810  002DF6  EF17  F017         	goto	l16573
 14811  002DFA                     u16520:
 14812  002DFA                     
 14813                           ; BSR set to: 1
 14814                           ;nwk/nwk_src/nwkTx.c: 344:           {;nwk/nwk_src/nwkTx.c: 345:             frame->stat
      +                          e = NWK_TX_STATE_WAIT_ACK;
 14815  002DFA  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14816  002E00  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14817  002E06  0E16               	movlw	22
 14818  002E08  6EDF               	movwf	indf2,c
 14819  002E0A                     
 14820                           ; BSR set to: 1
 14821                           ;nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
 14822  002E0A  EE20 F084          	lfsr	2,132
 14823  002E0E  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14824  002E10  26D9               	addwf	fsr2l,f,c
 14825  002E12  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14826  002E14  22DA               	addwfc	fsr2h,f,c
 14827  002E16  0E06               	movlw	6
 14828  002E18  6EDE               	movwf	postinc2,c
 14829  002E1A  0E00               	movlw	0
 14830  002E1C  6EDD               	movwf	postdec2,c
 14831  002E1E                     
 14832                           ; BSR set to: 1
 14833                           ;nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 14834  002E1E  0EA1               	movlw	low _nwkTxAckWaitTimer
 14835  002E20  6E10               	movwf	SYS_TimerStart@timer^0,c
 14836  002E22  0E01               	movlw	high _nwkTxAckWaitTimer
 14837  002E24  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 14838  002E26  ECFA  F04A         	call	_SYS_TimerStart	;wreg free
 14839                           
 14840                           ;nwk/nwk_src/nwkTx.c: 348:           }
 14841  002E2A  EF97  F017         	goto	l16589
 14842  002E2E                     l16573:
 14843                           
 14844                           ; BSR set to: 1
 14845                           ;nwk/nwk_src/nwkTx.c: 350:           {;nwk/nwk_src/nwkTx.c: 351:             frame->stat
      +                          e = NWK_TX_STATE_CONFIRM;
 14846  002E2E  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14847  002E34  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14848  002E3A  0E17               	movlw	23
 14849  002E3C  6EDF               	movwf	indf2,c
 14850  002E3E  EF97  F017         	goto	l16589
 14851  002E42                     l16575:
 14852                           
 14853                           ;nwk/nwk_src/nwkTx.c: 355:         {;nwk/nwk_src/nwkTx.c: 356:           frame->state = 
      +                          NWK_TX_STATE_CONFIRM;
 14854  002E42  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14855  002E48  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14856  002E4E  0E17               	movlw	23
 14857  002E50  6EDF               	movwf	indf2,c
 14858  002E52  EF97  F017         	goto	l16589
 14859  002E56                     l16577:
 14860                           
 14861                           ;nwk/nwk_src/nwkTx.c: 364:       {;nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrameSent(f
      +                          rame);
 14862  002E56  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 14863  002E5C  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 14864  002E62  EC19  F02C         	call	_nwkRouteFrameSent	;wreg free
 14865  002E66                     
 14866                           ;nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
 14867  002E66  EE20 F087          	lfsr	2,135
 14868  002E6A  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14869  002E6C  26D9               	addwf	fsr2l,f,c
 14870  002E6E  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14871  002E70  22DA               	addwfc	fsr2h,f,c
 14872  002E72  50DE               	movf	postinc2,w,c
 14873  002E74  10DE               	iorwf	postinc2,w,c
 14874  002E76  A4D8               	btfss	status,2,c
 14875  002E78  EF40  F017         	goto	u16531
 14876  002E7C  EF42  F017         	goto	u16530
 14877  002E80                     u16531:
 14878  002E80  EF4C  F017         	goto	l16583
 14879  002E84                     u16530:
 14880  002E84                     
 14881                           ;nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 14882  002E84  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 14883  002E8A  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 14884  002E90  EC22  F04D         	call	_nwkFrameFree	;wreg free
 14885  002E94  EF97  F017         	goto	l16589
 14886  002E98                     l16583:
 14887                           
 14888                           ;nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 14889  002E98  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 14890  002E9E  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 14891  002EA4  EE20 F087          	lfsr	2,135
 14892  002EA8  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14893  002EAA  26D9               	addwf	fsr2l,f,c
 14894  002EAC  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 14895  002EAE  22DA               	addwfc	fsr2h,f,c
 14896  002EB0  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
 14897  002EB6  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
 14898  002EBC  D802               	call	u16548
 14899  002EBE  EF6A  F017         	goto	u16549
 14900  002EC2                     u16548:
 14901  002EC2  0005               	push	
 14902  002EC4  6EFA               	movwf	pclath,c
 14903  002EC6  5014               	movf	??_nwkTxTaskHandler^0,w,c
 14904  002EC8  6EFD               	movwf	tosl,c
 14905  002ECA  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 14906  002ECC  6EFE               	movwf	tosh,c
 14907  002ECE  6AFF               	clrf	tosu,c
 14908  002ED0  50FA               	movf	pclath,w,c
 14909  002ED2  0012               	return		;indir
 14910  002ED4                     u16549:
 14911  002ED4  EF97  F017         	goto	l16589
 14912  002ED8                     l16587:
 14913  002ED8  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 14914  002EDE  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 14915  002EE4  50DF               	movf	indf2,w,c
 14916  002EE6  6E14               	movwf	??_nwkTxTaskHandler^0,c
 14917  002EE8  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
 14918                           
 14919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14920                           ; Switch size 1, requested type "simple"
 14921                           ; Number of cases is 1, Range of values is 0 to 0
 14922                           ; switch strategies available:
 14923                           ; Name         Instructions Cycles
 14924                           ; simple_byte            4     3 (average)
 14925                           ;	Chosen strategy is simple_byte
 14926  002EEA  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 14927  002EEC  0A00               	xorlw	0	; case 0
 14928  002EEE  B4D8               	btfsc	status,2,c
 14929  002EF0  EF7C  F017         	goto	l17839
 14930  002EF4  EF97  F017         	goto	l16589
 14931  002EF8                     l17839:
 14932                           
 14933                           ; Switch size 1, requested type "simple"
 14934                           ; Number of cases is 6, Range of values is 18 to 23
 14935                           ; switch strategies available:
 14936                           ; Name         Instructions Cycles
 14937                           ; simple_byte           19    10 (average)
 14938                           ;	Chosen strategy is simple_byte
 14939  002EF8  5014               	movf	??_nwkTxTaskHandler^0,w,c
 14940  002EFA  0A12               	xorlw	18	; case 18
 14941  002EFC  B4D8               	btfsc	status,2,c
 14942  002EFE  EF79  F016         	goto	l16543
 14943  002F02  0A01               	xorlw	1	; case 19
 14944  002F04  B4D8               	btfsc	status,2,c
 14945  002F06  EFA2  F016         	goto	l16551
 14946  002F0A  0A07               	xorlw	7	; case 20
 14947  002F0C  B4D8               	btfsc	status,2,c
 14948  002F0E  EF97  F017         	goto	l16589
 14949  002F12  0A01               	xorlw	1	; case 21
 14950  002F14  B4D8               	btfsc	status,2,c
 14951  002F16  EFCF  F016         	goto	l16561
 14952  002F1A  0A03               	xorlw	3	; case 22
 14953  002F1C  B4D8               	btfsc	status,2,c
 14954  002F1E  EF97  F017         	goto	l16589
 14955  002F22  0A01               	xorlw	1	; case 23
 14956  002F24  B4D8               	btfsc	status,2,c
 14957  002F26  EF2B  F017         	goto	l16577
 14958  002F2A  EF97  F017         	goto	l16589
 14959  002F2E                     l16589:
 14960                           
 14961                           ;nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 14962  002F2E  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 14963  002F34  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 14964  002F3A  ECC7  F039         	call	_nwkFrameNext	;wreg free
 14965  002F3E  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 14966  002F44  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 14967  002F4A  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 14968  002F4C  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
 14969  002F4E  A4D8               	btfss	status,2,c
 14970  002F50  EFAC  F017         	goto	u16551
 14971  002F54  EFAE  F017         	goto	u16550
 14972  002F58                     u16551:
 14973  002F58  EF6C  F017         	goto	l16587
 14974  002F5C                     u16550:
 14975  002F5C  0012               	return		;funcret
 14976  002F5E                     __end_of_nwkTxTaskHandler:
 14977                           	opt callstack 0
 14978                           
 14979 ;; *************** function _nwkRouteFrameSent *****************
 14980 ;; Defined at:
 14981 ;;		line 236 in file "nwk/nwk_src/nwkRoute.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
 14984 ;;		 -> nwkFrameFrames(685), NULL(0), 
 14985 ;; Auto vars:     Size  Location     Type
 14986 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
 14987 ;;		 -> nwkRouteTable(70), NULL(0), 
 14988 ;; Return value:  Size  Location     Type
 14989 ;;                  1    wreg      void 
 14990 ;; Registers used:
 14991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14992 ;; Tracked objects:
 14993 ;;		On entry : 0/0
 14994 ;;		On exit  : 0/0
 14995 ;;		Unchanged: 0/0
 14996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15001 ;;Total ram usage:        6 bytes
 15002 ;; Hardware stack levels used:    1
 15003 ;; Hardware stack levels required when called:    8
 15004 ;; This function calls:
 15005 ;;		_NWK_RouteFindEntry
 15006 ;;		_NWK_RouteFreeEntry
 15007 ;;		_nwkRouteNormalizeRanks
 15008 ;; This function is called by:
 15009 ;;		_nwkTxTaskHandler
 15010 ;; This function uses a non-reentrant model
 15011 ;;
 15012                           
 15013                           	psect	text92
 15014  005832                     __ptext92:
 15015                           	opt callstack 0
 15016  005832                     _nwkRouteFrameSent:
 15017                           	opt callstack 19
 15018  005832                     
 15019                           ;nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);nwk/nwk_src/nwkR
      +                          oute.c: 237: {;nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;nwk/nwk_src/
      +                          nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
 15020  005832  EE20 F00F          	lfsr	2,15
 15021  005836  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 15022  005838  26D9               	addwf	fsr2l,f,c
 15023  00583A  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 15024  00583C  22DA               	addwfc	fsr2h,f,c
 15025  00583E  28DE               	incf	postinc2,w,c
 15026  005840  E106               	bnz	u15721
 15027  005842  28DE               	incf	postinc2,w,c
 15028  005844  A4D8               	btfss	status,2,c
 15029  005846  EF27  F02C         	goto	u15721
 15030  00584A  EF29  F02C         	goto	u15720
 15031  00584E                     u15721:
 15032  00584E  EF2B  F02C         	goto	l15891
 15033  005852                     u15720:
 15034  005852  EFB1  F02C         	goto	l1914
 15035  005856                     l15891:
 15036                           
 15037                           ;nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, fra
      +                          me->header.nwkFcf.multicast);
 15038  005856  EE20 F00F          	lfsr	2,15
 15039  00585A  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 15040  00585C  26D9               	addwf	fsr2l,f,c
 15041  00585E  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 15042  005860  22DA               	addwfc	fsr2h,f,c
 15043  005862  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 15044  005868  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 15045  00586E  EE20 F00B          	lfsr	2,11
 15046  005872  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 15047  005874  26D9               	addwf	fsr2l,f,c
 15048  005876  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 15049  005878  22DA               	addwfc	fsr2h,f,c
 15050  00587A  0E00               	movlw	0
 15051  00587C  B6DF               	btfsc	indf2,3,c
 15052  00587E  0E01               	movlw	1
 15053  005880  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 15054  005882  ECC4  F040         	call	_NWK_RouteFindEntry	;wreg free
 15055  005886  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 15056  00588C  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 15057  005892                     
 15058                           ;nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
 15059  005892  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 15060  005894  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
 15061  005896  B4D8               	btfsc	status,2,c
 15062  005898  EF50  F02C         	goto	u15731
 15063  00589C  EF52  F02C         	goto	u15730
 15064  0058A0                     u15731:
 15065  0058A0  EFB1  F02C         	goto	l1914
 15066  0058A4                     u15730:
 15067  0058A4  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 15068  0058AA  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 15069  0058B0  A0DF               	btfss	indf2,0,c
 15070  0058B2  EF5D  F02C         	goto	u15741
 15071  0058B6  EF5F  F02C         	goto	u15740
 15072  0058BA                     u15741:
 15073  0058BA  EF61  F02C         	goto	l15897
 15074  0058BE                     u15740:
 15075  0058BE  EFB1  F02C         	goto	l1914
 15076  0058C2                     l15897:
 15077                           
 15078                           ;nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 15079  0058C2  EE20 F083          	lfsr	2,131
 15080  0058C6  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 15081  0058C8  26D9               	addwf	fsr2l,f,c
 15082  0058CA  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 15083  0058CC  22DA               	addwfc	fsr2h,f,c
 15084  0058CE  50DF               	movf	indf2,w,c
 15085  0058D0  A4D8               	btfss	status,2,c
 15086  0058D2  EF6D  F02C         	goto	u15751
 15087  0058D6  EF6F  F02C         	goto	u15750
 15088  0058DA                     u15751:
 15089  0058DA  EF8C  F02C         	goto	l15905
 15090  0058DE                     u15750:
 15091  0058DE                     
 15092                           ;nwk/nwk_src/nwkRoute.c: 249:   {;nwk/nwk_src/nwkRoute.c: 250:     entry->score = 3;
 15093  0058DE  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 15094  0058E4  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 15095  0058EA  50DF               	movf	indf2,w,c
 15096  0058EC  0B0F               	andlw	-241
 15097  0058EE  0930               	iorlw	48
 15098  0058F0  6EDF               	movwf	indf2,c
 15099  0058F2                     
 15100                           ;nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
 15101  0058F2  EE20 F005          	lfsr	2,5
 15102  0058F6  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 15103  0058F8  26D9               	addwf	fsr2l,f,c
 15104  0058FA  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
 15105  0058FC  22DA               	addwfc	fsr2h,f,c
 15106  0058FE  2ADF               	incf	indf2,f,c
 15107  005900  28DE               	incf	postinc2,w,c
 15108  005902  A4D8               	btfss	status,2,c
 15109  005904  EF86  F02C         	goto	u15761
 15110  005908  EF88  F02C         	goto	u15760
 15111  00590C                     u15761:
 15112  00590C  EFB1  F02C         	goto	l1914
 15113  005910                     u15760:
 15114  005910                     
 15115                           ;nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
 15116  005910  ECCA  F048         	call	_nwkRouteNormalizeRanks	;wreg free
 15117  005914  EFB1  F02C         	goto	l1914
 15118  005918                     l15905:
 15119                           
 15120                           ;nwk/nwk_src/nwkRoute.c: 256:   {;nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entry->sco
      +                          re)
 15121  005918  0E01               	movlw	1
 15122  00591A  6E0A               	movwf	??_nwkRouteFrameSent^0,c
 15123  00591C  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 15124  005922  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 15125  005928  38DF               	swapf	indf2,w,c
 15126  00592A  0B0F               	andlw	15
 15127  00592C  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
 15128  00592E  500A               	movf	??_nwkRouteFrameSent^0,w,c
 15129  005930  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
 15130  005932  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
 15131  005934  50DF               	movf	indf2,w,c
 15132  005936  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 15133  005938  0B0F               	andlw	-241
 15134  00593A  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 15135  00593C  6EDF               	movwf	indf2,c
 15136  00593E  38DF               	swapf	indf2,w,c
 15137  005940  0B0F               	andlw	15
 15138  005942  0900               	iorlw	0
 15139  005944  A4D8               	btfss	status,2,c
 15140  005946  EFA7  F02C         	goto	u15771
 15141  00594A  EFA9  F02C         	goto	u15770
 15142  00594E                     u15771:
 15143  00594E  EFB1  F02C         	goto	l1914
 15144  005952                     u15770:
 15145  005952                     
 15146                           ;nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
 15147  005952  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 15148  005958  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 15149  00595E  ECEC  F048         	call	_NWK_RouteFreeEntry	;wreg free
 15150  005962                     l1914:
 15151  005962  0012               	return		;funcret
 15152  005964                     __end_of_nwkRouteFrameSent:
 15153                           	opt callstack 0
 15154                           
 15155 ;; *************** function _nwkRouteNormalizeRanks *****************
 15156 ;; Defined at:
 15157 ;;		line 358 in file "nwk/nwk_src/nwkRoute.c"
 15158 ;; Parameters:    Size  Location     Type
 15159 ;;		None
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;  i               1    2[COMRAM] unsigned char 
 15162 ;; Return value:  Size  Location     Type
 15163 ;;                  1    wreg      void 
 15164 ;; Registers used:
 15165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15166 ;; Tracked objects:
 15167 ;;		On entry : 0/0
 15168 ;;		On exit  : 0/0
 15169 ;;		Unchanged: 0/0
 15170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15175 ;;Total ram usage:        2 bytes
 15176 ;; Hardware stack levels used:    1
 15177 ;; Hardware stack levels required when called:    7
 15178 ;; This function calls:
 15179 ;;		Nothing
 15180 ;; This function is called by:
 15181 ;;		_nwkRouteFrameSent
 15182 ;; This function uses a non-reentrant model
 15183 ;;
 15184                           
 15185                           	psect	text93
 15186  009194                     __ptext93:
 15187                           	opt callstack 0
 15188  009194                     _nwkRouteNormalizeRanks:
 15189                           	opt callstack 19
 15190  009194                     
 15191                           ;nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
 15192  009194  0E00               	movlw	0
 15193  009196  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
 15194  009198                     l10447:
 15195                           
 15196                           ;nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1) +
      +                           1;
 15197  009198  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 15198  00919A  0D07               	mullw	7
 15199  00919C  0E85               	movlw	low (_nwkRouteTable+5)
 15200  00919E  24F3               	addwf	243,w,c
 15201  0091A0  6ED9               	movwf	fsr2l,c
 15202  0091A2  0E02               	movlw	high (_nwkRouteTable+5)
 15203  0091A4  20F4               	addwfc	prodh,w,c
 15204  0091A6  6EDA               	movwf	fsr2h,c
 15205  0091A8  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 15206  0091AA  0D07               	mullw	7
 15207  0091AC  0E85               	movlw	low (_nwkRouteTable+5)
 15208  0091AE  24F3               	addwf	243,w,c
 15209  0091B0  6EE1               	movwf	fsr1l,c
 15210  0091B2  0E02               	movlw	high (_nwkRouteTable+5)
 15211  0091B4  20F4               	addwfc	prodh,w,c
 15212  0091B6  6EE2               	movwf	fsr1h,c
 15213  0091B8  50E7               	movf	indf1,w,c
 15214  0091BA  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
 15215  0091BC  90D8               	bcf	status,0,c
 15216  0091BE  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
 15217  0091C0  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
 15218  0091C2  6EDF               	movwf	indf2,c
 15219  0091C4  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
 15220  0091C6  0E09               	movlw	9
 15221  0091C8  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
 15222  0091CA  EFE9  F048         	goto	u8401
 15223  0091CE  EFEB  F048         	goto	u8400
 15224  0091D2                     u8401:
 15225  0091D2  EFCC  F048         	goto	l10447
 15226  0091D6                     u8400:
 15227  0091D6  0012               	return		;funcret
 15228  0091D8                     __end_of_nwkRouteNormalizeRanks:
 15229                           	opt callstack 0
 15230                           
 15231 ;; *************** function _nwkDataReqTxConf *****************
 15232 ;; Defined at:
 15233 ;;		line 168 in file "nwk/nwk_src/nwkDataReq.c"
 15234 ;; Parameters:    Size  Location     Type
 15235 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
 15236 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15237 ;; Auto vars:     Size  Location     Type
 15238 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
 15239 ;;		 -> NULL(0), nwkDataReq(19), 
 15240 ;; Return value:  Size  Location     Type
 15241 ;;                  1    wreg      void 
 15242 ;; Registers used:
 15243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15244 ;; Tracked objects:
 15245 ;;		On entry : 0/0
 15246 ;;		On exit  : 0/0
 15247 ;;		Unchanged: 0/0
 15248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15253 ;;Total ram usage:        6 bytes
 15254 ;; Hardware stack levels used:    1
 15255 ;; Hardware stack levels required when called:    8
 15256 ;; This function calls:
 15257 ;;		_nwkFrameFree
 15258 ;; This function is called by:
 15259 ;;		_nwkDataReqSendFrame
 15260 ;;		_nwkTxTaskHandler
 15261 ;; This function uses a non-reentrant model
 15262 ;;
 15263                           
 15264                           	psect	text94
 15265  007512                     __ptext94:
 15266                           	opt callstack 0
 15267  007512                     _nwkDataReqTxConf:
 15268                           	opt callstack 19
 15269  007512                     
 15270                           ;nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);nwk/nwk_
      +                          src/nwkDataReq.c: 169: {;nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *req = nwkD
      +                          ataReqQueue; req; req = req->next)
 15271  007512  0060  F3A0  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 15272  007518  0060  F3A4  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 15273  00751E  EFD7  F03A         	goto	l15883
 15274  007522                     l15875:
 15275                           
 15276                           ;nwk/nwk_src/nwkDataReq.c: 171:   {;nwk/nwk_src/nwkDataReq.c: 172:     if (req->frame ==
      +                           frame)
 15277  007522  EE20 F002          	lfsr	2,2
 15278  007526  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15279  007528  26D9               	addwf	fsr2l,f,c
 15280  00752A  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 15281  00752C  22DA               	addwfc	fsr2h,f,c
 15282  00752E  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 15283  007530  18DE               	xorwf	postinc2,w,c
 15284  007532  E107               	bnz	u15701
 15285  007534  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 15286  007536  18DE               	xorwf	postinc2,w,c
 15287  007538  A4D8               	btfss	status,2,c
 15288  00753A  EFA1  F03A         	goto	u15701
 15289  00753E  EFA3  F03A         	goto	u15700
 15290  007542                     u15701:
 15291  007542  EFCB  F03A         	goto	l15881
 15292  007546                     u15700:
 15293  007546                     
 15294                           ;nwk/nwk_src/nwkDataReq.c: 173:     {;nwk/nwk_src/nwkDataReq.c: 174:       req->status =
      +                           frame->tx.status;
 15295  007546  EE20 F083          	lfsr	2,131
 15296  00754A  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 15297  00754C  26D9               	addwf	fsr2l,f,c
 15298  00754E  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 15299  007550  22DA               	addwfc	fsr2h,f,c
 15300  007552  EE10 F011          	lfsr	1,17
 15301  007556  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15302  007558  26E1               	addwf	fsr1l,f,c
 15303  00755A  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 15304  00755C  22E2               	addwfc	fsr1h,f,c
 15305  00755E  006F FF7F FFE7     	movff	indf2,indf1
 15306                           
 15307                           ;nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
 15308  007564  EE20 F086          	lfsr	2,134
 15309  007568  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 15310  00756A  26D9               	addwf	fsr2l,f,c
 15311  00756C  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 15312  00756E  22DA               	addwfc	fsr2h,f,c
 15313  007570  EE10 F012          	lfsr	1,18
 15314  007574  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15315  007576  26E1               	addwf	fsr1l,f,c
 15316  007578  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 15317  00757A  22E2               	addwfc	fsr1h,f,c
 15318  00757C  006F FF7F FFE7     	movff	indf2,indf1
 15319  007582                     
 15320                           ;nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 15321  007582  EE20 F004          	lfsr	2,4
 15322  007586  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15323  007588  26D9               	addwf	fsr2l,f,c
 15324  00758A  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 15325  00758C  22DA               	addwfc	fsr2h,f,c
 15326  00758E  0E02               	movlw	2
 15327  007590  6EDF               	movwf	indf2,c
 15328                           
 15329                           ;nwk/nwk_src/nwkDataReq.c: 177:       break;
 15330  007592  EFE0  F03A         	goto	l15885
 15331  007596                     l15881:
 15332                           
 15333                           ;nwk/nwk_src/nwkDataReq.c: 179:   }
 15334  007596  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 15335  00759C  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 15336  0075A2  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
 15337  0075A8  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
 15338  0075AE                     l15883:
 15339  0075AE  5008               	movf	nwkDataReqTxConf@req^0,w,c
 15340  0075B0  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
 15341  0075B2  A4D8               	btfss	status,2,c
 15342  0075B4  EFDE  F03A         	goto	u15711
 15343  0075B8  EFE0  F03A         	goto	u15710
 15344  0075BC                     u15711:
 15345  0075BC  EF91  F03A         	goto	l15875
 15346  0075C0                     u15710:
 15347  0075C0                     l15885:
 15348                           
 15349                           ;nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
 15350  0075C0  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 15351  0075C6  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 15352  0075CC  EC22  F04D         	call	_nwkFrameFree	;wreg free
 15353  0075D0  0012               	return		;funcret
 15354  0075D2                     __end_of_nwkDataReqTxConf:
 15355                           	opt callstack 0
 15356                           
 15357 ;; *************** function _PHY_DataReq *****************
 15358 ;; Defined at:
 15359 ;;		line 862 in file "phy/sx1216/phy_src/phy.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;  data            2   16[COMRAM] PTR unsigned char 
 15362 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 15363 ;;  size            1   18[COMRAM] unsigned char 
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;		None
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  1    wreg      void 
 15368 ;; Registers used:
 15369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15375 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15379 ;;Total ram usage:        3 bytes
 15380 ;; Hardware stack levels used:    1
 15381 ;; Hardware stack levels required when called:   12
 15382 ;; This function calls:
 15383 ;;		_SPI1_ExchangeByte
 15384 ;;		_SPI1_WriteBlock
 15385 ;;		_SX1276Write
 15386 ;;		_explicitHeaderMode
 15387 ;;		_idle
 15388 ;; This function is called by:
 15389 ;;		_nwkTxTaskHandler
 15390 ;; This function uses a non-reentrant model
 15391 ;;
 15392                           
 15393                           	psect	text95
 15394  008A6A                     __ptext95:
 15395                           	opt callstack 0
 15396  008A6A                     _PHY_DataReq:
 15397                           	opt callstack 15
 15398  008A6A                     
 15399                           ;phy/sx1216/phy_src/phy.c: 863:     idle();
 15400  008A6A  EC57  F04E         	call	_idle	;wreg free
 15401                           
 15402                           ;phy/sx1216/phy_src/phy.c: 864:     explicitHeaderMode();
 15403  008A6E  EC9D  F04D         	call	_explicitHeaderMode	;wreg free
 15404                           
 15405                           ;phy/sx1216/phy_src/phy.c: 866:     SX1276Write(0x0E, 0x0);
 15406  008A72  0E00               	movlw	0
 15407  008A74  6E0F               	movwf	SX1276Write@data^0,c
 15408  008A76  0E0E               	movlw	14
 15409  008A78  ECCC  F04D         	call	_SX1276Write
 15410                           
 15411                           ;phy/sx1216/phy_src/phy.c: 867:     SX1276Write(0x0D, 0x00);
 15412  008A7C  0E00               	movlw	0
 15413  008A7E  6E0F               	movwf	SX1276Write@data^0,c
 15414  008A80  0E0D               	movlw	13
 15415  008A82  ECCC  F04D         	call	_SX1276Write
 15416                           
 15417                           ;phy/sx1216/phy_src/phy.c: 868:     SX1276Write(0x22, size);
 15418  008A86  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
 15419  008A8C  0E22               	movlw	34
 15420  008A8E  ECCC  F04D         	call	_SX1276Write
 15421  008A92  9CBC               	bcf	188,6,c	;volatile
 15422  008A94                     
 15423                           ;phy/sx1216/phy_src/phy.c: 871:     SPI1_ExchangeByte(0x00 | 0x80);
 15424  008A94  0E80               	movlw	128
 15425  008A96  EC46  F04C         	call	_SPI1_ExchangeByte
 15426  008A9A                     
 15427                           ;phy/sx1216/phy_src/phy.c: 872:     SPI1_WriteBlock(data,size);
 15428  008A9A  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
 15429  008AA0  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
 15430  008AA6  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
 15431  008AAC  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 15432  008AAE  EC52  F049         	call	_SPI1_WriteBlock	;wreg free
 15433  008AB2  8CBC               	bsf	188,6,c	;volatile
 15434  008AB4                     
 15435                           ;phy/sx1216/phy_src/phy.c: 874:     SX1276Write(0x01,
 15436  008AB4  0E83               	movlw	131
 15437  008AB6  6E0F               	movwf	SX1276Write@data^0,c
 15438  008AB8  0E01               	movlw	1
 15439  008ABA  ECCC  F04D         	call	_SX1276Write
 15440  008ABE                     
 15441                           ;phy/sx1216/phy_src/phy.c: 876:     radio_state_var = START_TX;
 15442  008ABE  0E06               	movlw	6
 15443  008AC0  0101               	movlb	1	; () banked
 15444  008AC2  6F6A               	movwf	_radio_state_var& (0+255),b
 15445  008AC4                     
 15446                           ; BSR set to: 1
 15447  008AC4  0012               	return		;funcret
 15448  008AC6                     __end_of_PHY_DataReq:
 15449                           	opt callstack 0
 15450                           
 15451 ;; *************** function _idle *****************
 15452 ;; Defined at:
 15453 ;;		line 116 in file "phy/sx1216/phy_src/phy.c"
 15454 ;; Parameters:    Size  Location     Type
 15455 ;;		None
 15456 ;; Auto vars:     Size  Location     Type
 15457 ;;		None
 15458 ;; Return value:  Size  Location     Type
 15459 ;;                  1    wreg      void 
 15460 ;; Registers used:
 15461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15462 ;; Tracked objects:
 15463 ;;		On entry : 0/0
 15464 ;;		On exit  : 0/0
 15465 ;;		Unchanged: 0/0
 15466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15471 ;;Total ram usage:        0 bytes
 15472 ;; Hardware stack levels used:    1
 15473 ;; Hardware stack levels required when called:   11
 15474 ;; This function calls:
 15475 ;;		_SX1276Write
 15476 ;; This function is called by:
 15477 ;;		_start_radio_cad
 15478 ;;		_PHY_DataReq
 15479 ;;		_beginPacket
 15480 ;; This function uses a non-reentrant model
 15481 ;;
 15482                           
 15483                           	psect	text96
 15484  009CAE                     __ptext96:
 15485                           	opt callstack 0
 15486  009CAE                     _idle:
 15487                           	opt callstack 14
 15488  009CAE                     
 15489                           ;phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 15490  009CAE  0E81               	movlw	129
 15491  009CB0  6E0F               	movwf	SX1276Write@data^0,c
 15492  009CB2  0E01               	movlw	1
 15493  009CB4  ECCC  F04D         	call	_SX1276Write
 15494  009CB8  0012               	return		;funcret
 15495  009CBA                     __end_of_idle:
 15496                           	opt callstack 0
 15497                           
 15498 ;; *************** function _nwkRxTaskHandler *****************
 15499 ;; Defined at:
 15500 ;;		line 483 in file "nwk/nwk_src/nwkRx.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;		None
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;  frame           2    0[BANK1 ] PTR struct NwkFrame_t
 15505 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15506 ;; Return value:  Size  Location     Type
 15507 ;;                  1    wreg      void 
 15508 ;; Registers used:
 15509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15510 ;; Tracked objects:
 15511 ;;		On entry : 0/0
 15512 ;;		On exit  : 0/0
 15513 ;;		Unchanged: 0/0
 15514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15516 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15518 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15519 ;;Total ram usage:        4 bytes
 15520 ;; Hardware stack levels used:    1
 15521 ;; Hardware stack levels required when called:   19
 15522 ;; This function calls:
 15523 ;;		_nwkFrameFree
 15524 ;;		_nwkFrameNext
 15525 ;;		_nwkRouteFrame
 15526 ;;		_nwkRxHandleIndication
 15527 ;;		_nwkRxHandleReceivedFrame
 15528 ;; This function is called by:
 15529 ;;		_NWK_TaskHandler
 15530 ;; This function uses a non-reentrant model
 15531 ;;
 15532                           
 15533                           	psect	text97
 15534  006EAE                     __ptext97:
 15535                           	opt callstack 0
 15536  006EAE                     _nwkRxTaskHandler:
 15537                           	opt callstack 9
 15538  006EAE                     
 15539                           ;nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
 15540  006EAE  0E00               	movlw	0
 15541  006EB0  0101               	movlb	1	; () banked
 15542  006EB2  6FFB               	movwf	nwkRxTaskHandler@frame& (0+255),b
 15543  006EB4  0E00               	movlw	0
 15544  006EB6  6FFC               	movwf	(nwkRxTaskHandler@frame+1)& (0+255),b
 15545                           
 15546                           ;nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15547  006EB8  EFAA  F037         	goto	l16535
 15548  006EBC                     l16523:
 15549                           
 15550                           ; BSR set to: 0
 15551                           ;nwk/nwk_src/nwkRx.c: 492:       {;nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleReceived
      +                          Frame(frame);
 15552  006EBC  0060  F7EC  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 15553  006EC2  0060  F7F0  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 15554  006EC8  EC88  F00C         	call	_nwkRxHandleReceivedFrame	;wreg free
 15555                           
 15556                           ;nwk/nwk_src/nwkRx.c: 494:       } break;
 15557  006ECC  EFAA  F037         	goto	l16535
 15558  006ED0                     l16525:
 15559                           
 15560                           ; BSR set to: 0
 15561                           ;nwk/nwk_src/nwkRx.c: 504:       {;nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIndicati
      +                          on(frame);
 15562  006ED0  0060  F7EC  F0DD   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 15563  006ED6  0060  F7F0  F0DE   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 15564  006EDC  ECF2  F02E         	call	_nwkRxHandleIndication	;wreg free
 15565                           
 15566                           ;nwk/nwk_src/nwkRx.c: 506:       } break;
 15567  006EE0  EFAA  F037         	goto	l16535
 15568  006EE4                     l16527:
 15569                           
 15570                           ; BSR set to: 0
 15571                           ;nwk/nwk_src/nwkRx.c: 510:       {;nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame(frame
      +                          );
 15572  006EE4  0060  F7EC  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 15573  006EEA  0060  F7F0  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 15574  006EF0  EC76  F036         	call	_nwkRouteFrame	;wreg free
 15575                           
 15576                           ;nwk/nwk_src/nwkRx.c: 512:       } break;
 15577  006EF4  EFAA  F037         	goto	l16535
 15578  006EF8                     l16529:
 15579                           
 15580                           ; BSR set to: 0
 15581                           ;nwk/nwk_src/nwkRx.c: 516:       {;nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(frame)
      +                          ;
 15582  006EF8  0060  F7EC  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 15583  006EFE  0060  F7F0  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 15584  006F04  EC22  F04D         	call	_nwkFrameFree	;wreg free
 15585                           
 15586                           ;nwk/nwk_src/nwkRx.c: 518:       } break;
 15587  006F08  EFAA  F037         	goto	l16535
 15588  006F0C                     l16533:
 15589                           
 15590                           ; BSR set to: 1
 15591  006F0C  0060  F7EF  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 15592  006F12  0060  F7F3  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 15593  006F18  50DF               	movf	indf2,w,c
 15594  006F1A  0100               	movlb	0	; () banked
 15595  006F1C  6FE0               	movwf	??_nwkRxTaskHandler& (0+255),b
 15596  006F1E  6BE1               	clrf	(??_nwkRxTaskHandler+1)& (0+255),b
 15597                           
 15598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15599                           ; Switch size 1, requested type "simple"
 15600                           ; Number of cases is 1, Range of values is 0 to 0
 15601                           ; switch strategies available:
 15602                           ; Name         Instructions Cycles
 15603                           ; simple_byte            4     3 (average)
 15604                           ;	Chosen strategy is simple_byte
 15605  006F20  51E1               	movf	(??_nwkRxTaskHandler+1)& (0+255),w,b
 15606  006F22  0A00               	xorlw	0	; case 0
 15607  006F24  B4D8               	btfsc	status,2,c
 15608  006F26  EF97  F037         	goto	l17841
 15609  006F2A  EFAA  F037         	goto	l16535
 15610  006F2E                     l17841:
 15611                           
 15612                           ; BSR set to: 0
 15613                           ; Switch size 1, requested type "simple"
 15614                           ; Number of cases is 4, Range of values is 32 to 36
 15615                           ; switch strategies available:
 15616                           ; Name         Instructions Cycles
 15617                           ; simple_byte           13     7 (average)
 15618                           ;	Chosen strategy is simple_byte
 15619  006F2E  51E0               	movf	??_nwkRxTaskHandler& (0+255),w,b
 15620  006F30  0A20               	xorlw	32	; case 32
 15621  006F32  B4D8               	btfsc	status,2,c
 15622  006F34  EF5E  F037         	goto	l16523
 15623  006F38  0A02               	xorlw	2	; case 34
 15624  006F3A  B4D8               	btfsc	status,2,c
 15625  006F3C  EF68  F037         	goto	l16525
 15626  006F40  0A01               	xorlw	1	; case 35
 15627  006F42  B4D8               	btfsc	status,2,c
 15628  006F44  EF72  F037         	goto	l16527
 15629  006F48  0A07               	xorlw	7	; case 36
 15630  006F4A  B4D8               	btfsc	status,2,c
 15631  006F4C  EF7C  F037         	goto	l16529
 15632  006F50  EFAA  F037         	goto	l16535
 15633  006F54                     l16535:
 15634                           
 15635                           ;nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15636  006F54  0060  F7EC  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 15637  006F5A  0060  F7F0  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 15638  006F60  ECC7  F039         	call	_nwkFrameNext	;wreg free
 15639  006F64  0060  F008  F1FB   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 15640  006F6A  0060  F00C  F1FC   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 15641  006F70  0101               	movlb	1	; () banked
 15642  006F72  51FB               	movf	nwkRxTaskHandler@frame& (0+255),w,b
 15643  006F74  11FC               	iorwf	(nwkRxTaskHandler@frame+1)& (0+255),w,b
 15644  006F76  A4D8               	btfss	status,2,c
 15645  006F78  EFC0  F037         	goto	u16471
 15646  006F7C  EFC2  F037         	goto	u16470
 15647  006F80                     u16471:
 15648  006F80  EF86  F037         	goto	l16533
 15649  006F84                     u16470:
 15650  006F84                     
 15651                           ; BSR set to: 1
 15652  006F84  0012               	return		;funcret
 15653  006F86                     __end_of_nwkRxTaskHandler:
 15654                           	opt callstack 0
 15655                           
 15656 ;; *************** function _nwkRxHandleReceivedFrame *****************
 15657 ;; Defined at:
 15658 ;;		line 292 in file "nwk/nwk_src/nwkRx.c"
 15659 ;; Parameters:    Size  Location     Type
 15660 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
 15661 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15662 ;; Auto vars:     Size  Location     Type
 15663 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
 15664 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 15665 ;;  member          1   45[COMRAM] _Bool 
 15666 ;;  broadcast       1   44[COMRAM] _Bool 
 15667 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
 15668 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  1    wreg      void 
 15671 ;; Registers used:
 15672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15679 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15681 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15682 ;;Total ram usage:       10 bytes
 15683 ;; Hardware stack levels used:    1
 15684 ;; Hardware stack levels required when called:   10
 15685 ;; This function calls:
 15686 ;;		_NWK_GroupIsMember
 15687 ;;		_nwkRouteFrameReceived
 15688 ;;		_nwkRxRejectDuplicate
 15689 ;;		_nwkTxBroadcastFrame
 15690 ;; This function is called by:
 15691 ;;		_nwkRxTaskHandler
 15692 ;; This function uses a non-reentrant model
 15693 ;;
 15694                           
 15695                           	psect	text98
 15696  001910                     __ptext98:
 15697                           	opt callstack 0
 15698  001910                     _nwkRxHandleReceivedFrame:
 15699                           	opt callstack 17
 15700  001910                     
 15701                           ;nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);nwk/n
      +                          wk_src/nwkRx.c: 293: {;nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 15702  001910  0E02               	movlw	2
 15703  001912  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
 15704  001914  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
 15705  001916  0E00               	movlw	0
 15706  001918  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 15707  00191A  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
 15708  00191C                     
 15709                           ;nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 15710  00191C  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 15711  001922  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 15712  001928  0E24               	movlw	36
 15713  00192A  6EDF               	movwf	indf2,c
 15714  00192C                     
 15715                           ;nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
 15716  00192C  EE20 F009          	lfsr	2,9
 15717  001930  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15718  001932  26D9               	addwf	fsr2l,f,c
 15719  001934  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15720  001936  22DA               	addwfc	fsr2h,f,c
 15721  001938  A2DF               	btfss	indf2,1,c
 15722  00193A  EFA1  F00C         	goto	u15791
 15723  00193E  EFA3  F00C         	goto	u15790
 15724  001942                     u15791:
 15725  001942  EFA5  F00C         	goto	l15929
 15726  001946                     u15790:
 15727  001946  EFCA  F00E         	goto	l2097
 15728  00194A                     l15929:
 15729                           
 15730                           ;nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackRequest)
 15731  00194A  EE20 F009          	lfsr	2,9
 15732  00194E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15733  001950  26D9               	addwf	fsr2l,f,c
 15734  001952  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15735  001954  22DA               	addwfc	fsr2h,f,c
 15736  001956  A6DF               	btfss	indf2,3,c
 15737  001958  EFB0  F00C         	goto	u15801
 15738  00195C  EFB2  F00C         	goto	u15800
 15739  001960                     u15801:
 15740  001960  EFC1  F00C         	goto	l15935
 15741  001964                     u15800:
 15742  001964  EE20 F009          	lfsr	2,9
 15743  001968  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15744  00196A  26D9               	addwf	fsr2l,f,c
 15745  00196C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15746  00196E  22DA               	addwfc	fsr2h,f,c
 15747  001970  A0DF               	btfss	indf2,0,c
 15748  001972  EFBD  F00C         	goto	u15811
 15749  001976  EFBF  F00C         	goto	u15810
 15750  00197A                     u15811:
 15751  00197A  EFC1  F00C         	goto	l15935
 15752  00197E                     u15810:
 15753  00197E  EFCA  F00E         	goto	l2097
 15754  001982                     l15935:
 15755                           
 15756                           ;nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 15757  001982  EE20 F003          	lfsr	2,3
 15758  001986  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15759  001988  26D9               	addwf	fsr2l,f,c
 15760  00198A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15761  00198C  22DA               	addwfc	fsr2h,f,c
 15762  00198E  28DE               	incf	postinc2,w,c
 15763  001990  E106               	bnz	u15821
 15764  001992  28DE               	incf	postinc2,w,c
 15765  001994  A4D8               	btfss	status,2,c
 15766  001996  EFCF  F00C         	goto	u15821
 15767  00199A  EFD1  F00C         	goto	u15820
 15768  00199E                     u15821:
 15769  00199E  EFFE  F00C         	goto	l15945
 15770  0019A2                     u15820:
 15771  0019A2                     
 15772                           ;nwk/nwk_src/nwkRx.c: 312:   {;nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == header->n
      +                          wkDstAddr || 0xffff == header->nwkDstAddr)
 15773  0019A2  EE20 F00D          	lfsr	2,13
 15774  0019A6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15775  0019A8  26D9               	addwf	fsr2l,f,c
 15776  0019AA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15777  0019AC  22DA               	addwfc	fsr2h,f,c
 15778  0019AE  0101               	movlb	1	; () banked
 15779  0019B0  5100               	movf	_nwkIb& (0+255),w,b
 15780  0019B2  18DE               	xorwf	postinc2,w,c
 15781  0019B4  E109               	bnz	u15830
 15782  0019B6  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15783  0019B8  18DE               	xorwf	postinc2,w,c
 15784  0019BA  B4D8               	btfsc	status,2,c
 15785  0019BC  EFE2  F00C         	goto	u15831
 15786  0019C0  EFE4  F00C         	goto	u15830
 15787  0019C4                     u15831:
 15788  0019C4  EFF4  F00C         	goto	l15941
 15789  0019C8                     u15830:
 15790  0019C8                     
 15791                           ; BSR set to: 1
 15792  0019C8  EE20 F00D          	lfsr	2,13
 15793  0019CC  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15794  0019CE  26D9               	addwf	fsr2l,f,c
 15795  0019D0  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15796  0019D2  22DA               	addwfc	fsr2h,f,c
 15797  0019D4  28DE               	incf	postinc2,w,c
 15798  0019D6  E106               	bnz	u15841
 15799  0019D8  28DE               	incf	postinc2,w,c
 15800  0019DA  A4D8               	btfss	status,2,c
 15801  0019DC  EFF2  F00C         	goto	u15841
 15802  0019E0  EFF4  F00C         	goto	u15840
 15803  0019E4                     u15841:
 15804  0019E4  EFCA  F00E         	goto	l2097
 15805  0019E8                     u15840:
 15806  0019E8                     l15941:
 15807                           
 15808                           ; BSR set to: 1
 15809                           ;nwk/nwk_src/nwkRx.c: 314:     {;nwk/nwk_src/nwkRx.c: 320:         frame->state = NWK_RX
      +                          _STATE_INDICATE;
 15810  0019E8  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 15811  0019EE  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 15812  0019F4  0E22               	movlw	34
 15813  0019F6  6EDF               	movwf	indf2,c
 15814  0019F8  EFCA  F00E         	goto	l2097
 15815  0019FC                     l15945:
 15816                           
 15817                           ;nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackReque
      +                          st)
 15818  0019FC  EE20 F00D          	lfsr	2,13
 15819  001A00  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15820  001A02  26D9               	addwf	fsr2l,f,c
 15821  001A04  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15822  001A06  22DA               	addwfc	fsr2h,f,c
 15823  001A08  28DE               	incf	postinc2,w,c
 15824  001A0A  E106               	bnz	u15851
 15825  001A0C  28DE               	incf	postinc2,w,c
 15826  001A0E  A4D8               	btfss	status,2,c
 15827  001A10  EF0C  F00D         	goto	u15851
 15828  001A14  EF0E  F00D         	goto	u15850
 15829  001A18                     u15851:
 15830  001A18  EF1D  F00D         	goto	l15951
 15831  001A1C                     u15850:
 15832  001A1C  EE20 F009          	lfsr	2,9
 15833  001A20  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15834  001A22  26D9               	addwf	fsr2l,f,c
 15835  001A24  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15836  001A26  22DA               	addwfc	fsr2h,f,c
 15837  001A28  A0DF               	btfss	indf2,0,c
 15838  001A2A  EF19  F00D         	goto	u15861
 15839  001A2E  EF1B  F00D         	goto	u15860
 15840  001A32                     u15861:
 15841  001A32  EF1D  F00D         	goto	l15951
 15842  001A36                     u15860:
 15843  001A36  EFCA  F00E         	goto	l2097
 15844  001A3A                     l15951:
 15845                           
 15846                           ;nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 15847  001A3A  EE20 F00B          	lfsr	2,11
 15848  001A3E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15849  001A40  26D9               	addwf	fsr2l,f,c
 15850  001A42  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15851  001A44  22DA               	addwfc	fsr2h,f,c
 15852  001A46  0101               	movlb	1	; () banked
 15853  001A48  5100               	movf	_nwkIb& (0+255),w,b
 15854  001A4A  18DE               	xorwf	postinc2,w,c
 15855  001A4C  E107               	bnz	u15871
 15856  001A4E  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15857  001A50  18DE               	xorwf	postinc2,w,c
 15858  001A52  A4D8               	btfss	status,2,c
 15859  001A54  EF2E  F00D         	goto	u15871
 15860  001A58  EF30  F00D         	goto	u15870
 15861  001A5C                     u15871:
 15862  001A5C  EF32  F00D         	goto	l15955
 15863  001A60                     u15870:
 15864  001A60  EFCA  F00E         	goto	l2097
 15865  001A64                     l15955:
 15866                           
 15867                           ; BSR set to: 1
 15868                           ;nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 15869  001A64  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 15870  001A6A  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 15871  001A70  EC44  F01B         	call	_nwkRouteFrameReceived	;wreg free
 15872                           
 15873                           ;nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 15874  001A74  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 15875  001A7A  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 15876  001A80  EC25  F015         	call	_nwkRxRejectDuplicate	;wreg free
 15877  001A84  0900               	iorlw	0
 15878  001A86  B4D8               	btfsc	status,2,c
 15879  001A88  EF48  F00D         	goto	u15881
 15880  001A8C  EF4A  F00D         	goto	u15880
 15881  001A90                     u15881:
 15882  001A90  EF4C  F00D         	goto	l15959
 15883  001A94                     u15880:
 15884  001A94  EFCA  F00E         	goto	l2097
 15885  001A98                     l15959:
 15886                           
 15887                           ;nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 15888  001A98  EE20 F009          	lfsr	2,9
 15889  001A9C  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15890  001A9E  26D9               	addwf	fsr2l,f,c
 15891  001AA0  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15892  001AA2  22DA               	addwfc	fsr2h,f,c
 15893  001AA4  A6DF               	btfss	indf2,3,c
 15894  001AA6  EF57  F00D         	goto	u15891
 15895  001AAA  EF59  F00D         	goto	u15890
 15896  001AAE                     u15891:
 15897  001AAE  EF4B  F00E         	goto	l15993
 15898  001AB2                     u15890:
 15899  001AB2                     
 15900                           ;nwk/nwk_src/nwkRx.c: 345:   {;nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHeader_t *
      +                          mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 15901  001AB2  EE20 F081          	lfsr	2,129
 15902  001AB6  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 15903  001AB8  26D9               	addwf	fsr2l,f,c
 15904  001ABA  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 15905  001ABC  22DA               	addwfc	fsr2h,f,c
 15906  001ABE  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 15907  001AC4  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 15908  001ACA                     
 15909                           ;nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 15910  001ACA  EE20 F00D          	lfsr	2,13
 15911  001ACE  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15912  001AD0  26D9               	addwf	fsr2l,f,c
 15913  001AD2  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15914  001AD4  22DA               	addwfc	fsr2h,f,c
 15915  001AD6  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 15916  001ADC  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 15917  001AE2  ECF8  F047         	call	_NWK_GroupIsMember	;wreg free
 15918  001AE6  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
 15919  001AE8                     
 15920                           ;nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 15921  001AE8  0E00               	movlw	0
 15922  001AEA  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 15923  001AEC                     
 15924                           ;nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 15925  001AEC  EE20 F005          	lfsr	2,5
 15926  001AF0  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 15927  001AF2  26D9               	addwf	fsr2l,f,c
 15928  001AF4  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 15929  001AF6  22DA               	addwfc	fsr2h,f,c
 15930  001AF8  28DE               	incf	postinc2,w,c
 15931  001AFA  E106               	bnz	u15901
 15932  001AFC  28DE               	incf	postinc2,w,c
 15933  001AFE  A4D8               	btfss	status,2,c
 15934  001B00  EF84  F00D         	goto	u15901
 15935  001B04  EF86  F00D         	goto	u15900
 15936  001B08                     u15901:
 15937  001B08  EF04  F00E         	goto	l15975
 15938  001B0C                     u15900:
 15939  001B0C                     
 15940                           ;nwk/nwk_src/nwkRx.c: 351:     {;nwk/nwk_src/nwkRx.c: 352:       if (member)
 15941  001B0C  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 15942  001B0E  B4D8               	btfsc	status,2,c
 15943  001B10  EF8C  F00D         	goto	u15911
 15944  001B14  EF8E  F00D         	goto	u15910
 15945  001B18                     u15911:
 15946  001B18  EFC9  F00D         	goto	l15973
 15947  001B1C                     u15910:
 15948  001B1C                     
 15949                           ;nwk/nwk_src/nwkRx.c: 353:       {;nwk/nwk_src/nwkRx.c: 354:         broadcast = mcHeade
      +                          r->memberRadius > 0;
 15950  001B1C  EE20 F001          	lfsr	2,1
 15951  001B20  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 15952  001B22  26D9               	addwf	fsr2l,f,c
 15953  001B24  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 15954  001B26  22DA               	addwfc	fsr2h,f,c
 15955  001B28  50DF               	movf	indf2,w,c
 15956  001B2A  0B0F               	andlw	15
 15957  001B2C  0900               	iorlw	0
 15958  001B2E  A4D8               	btfss	status,2,c
 15959  001B30  EF9C  F00D         	goto	u15921
 15960  001B34  EF9F  F00D         	goto	u15920
 15961  001B38                     u15921:
 15962  001B38  0E01               	movlw	1
 15963  001B3A  EFA0  F00D         	goto	u15930
 15964  001B3E                     u15920:
 15965  001B3E  0E00               	movlw	0
 15966  001B40                     u15930:
 15967  001B40  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 15968                           
 15969                           ;nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 15970  001B42  0E01               	movlw	1
 15971  001B44  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 15972  001B46  EE20 F001          	lfsr	2,1
 15973  001B4A  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 15974  001B4C  26D9               	addwf	fsr2l,f,c
 15975  001B4E  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 15976  001B50  22DA               	addwfc	fsr2h,f,c
 15977  001B52  50DF               	movf	indf2,w,c
 15978  001B54  0B0F               	andlw	15
 15979  001B56  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 15980  001B58  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 15981  001B5A  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 15982  001B5C  50DF               	movf	indf2,w,c
 15983  001B5E  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 15984  001B60  0BF0               	andlw	-16
 15985  001B62  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 15986  001B64  6EDF               	movwf	indf2,c
 15987                           
 15988                           ;nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMemberRad
      +                          ius;
 15989  001B66  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 15990  001B6C  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 15991  001B72  38DF               	swapf	indf2,w,c
 15992  001B74  0B0F               	andlw	15
 15993  001B76  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 15994  001B78  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 15995  001B7E  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 15996  001B84  50DF               	movf	indf2,w,c
 15997  001B86  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 15998  001B88  0BF0               	andlw	-16
 15999  001B8A  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 16000  001B8C  6EDF               	movwf	indf2,c
 16001                           
 16002                           ;nwk/nwk_src/nwkRx.c: 357:       }
 16003  001B8E  EF1F  F00E         	goto	l15983
 16004  001B92                     l15973:
 16005                           
 16006                           ;nwk/nwk_src/nwkRx.c: 359:       {;nwk/nwk_src/nwkRx.c: 360:         broadcast = mcHeade
      +                          r->nonMemberRadius > 0;
 16007  001B92  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16008  001B98  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16009  001B9E  50DF               	movf	indf2,w,c
 16010  001BA0  0B0F               	andlw	15
 16011  001BA2  0900               	iorlw	0
 16012  001BA4  A4D8               	btfss	status,2,c
 16013  001BA6  EFD7  F00D         	goto	u15941
 16014  001BAA  EFDA  F00D         	goto	u15940
 16015  001BAE                     u15941:
 16016  001BAE  0E01               	movlw	1
 16017  001BB0  EFDB  F00D         	goto	u15950
 16018  001BB4                     u15940:
 16019  001BB4  0E00               	movlw	0
 16020  001BB6                     u15950:
 16021  001BB6  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16022                           
 16023                           ;nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 16024  001BB8  0E01               	movlw	1
 16025  001BBA  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16026  001BBC  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16027  001BC2  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16028  001BC8  50DF               	movf	indf2,w,c
 16029  001BCA  0B0F               	andlw	15
 16030  001BCC  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 16031  001BCE  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 16032  001BD0  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 16033  001BD2  50DF               	movf	indf2,w,c
 16034  001BD4  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16035  001BD6  0BF0               	andlw	-16
 16036  001BD8  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16037  001BDA  6EDF               	movwf	indf2,c
 16038                           
 16039                           ;nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius;
 16040  001BDC  EE20 F001          	lfsr	2,1
 16041  001BE0  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16042  001BE2  26D9               	addwf	fsr2l,f,c
 16043  001BE4  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16044  001BE6  22DA               	addwfc	fsr2h,f,c
 16045  001BE8  38DF               	swapf	indf2,w,c
 16046  001BEA  0B0F               	andlw	15
 16047  001BEC  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16048  001BEE  EE20 F001          	lfsr	2,1
 16049  001BF2  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16050  001BF4  26D9               	addwf	fsr2l,f,c
 16051  001BF6  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16052  001BF8  22DA               	addwfc	fsr2h,f,c
 16053  001BFA  50DF               	movf	indf2,w,c
 16054  001BFC  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 16055  001BFE  0BF0               	andlw	-16
 16056  001C00  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 16057  001C02  6EDF               	movwf	indf2,c
 16058  001C04  EF1F  F00E         	goto	l15983
 16059  001C08                     l15975:
 16060                           
 16061                           ;nwk/nwk_src/nwkRx.c: 366:     {;nwk/nwk_src/nwkRx.c: 367:       if (member)
 16062  001C08  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 16063  001C0A  B4D8               	btfsc	status,2,c
 16064  001C0C  EF0A  F00E         	goto	u15961
 16065  001C10  EF0C  F00E         	goto	u15960
 16066  001C14                     u15961:
 16067  001C14  EF17  F00E         	goto	l15981
 16068  001C18                     u15960:
 16069  001C18                     
 16070                           ;nwk/nwk_src/nwkRx.c: 368:       {;nwk/nwk_src/nwkRx.c: 369:         broadcast = 1;
 16071  001C18  0E01               	movlw	1
 16072  001C1A  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16073  001C1C                     
 16074                           ;nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 16075  001C1C  EE20 F009          	lfsr	2,9
 16076  001C20  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16077  001C22  26D9               	addwf	fsr2l,f,c
 16078  001C24  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16079  001C26  22DA               	addwfc	fsr2h,f,c
 16080  001C28  84DF               	bsf	indf2,2,c
 16081                           
 16082                           ;nwk/nwk_src/nwkRx.c: 371:       }
 16083  001C2A  EF1F  F00E         	goto	l15983
 16084  001C2E                     l15981:
 16085                           
 16086                           ;nwk/nwk_src/nwkRx.c: 374:       {;nwk/nwk_src/nwkRx.c: 375:         frame->state = NWK_
      +                          RX_STATE_ROUTE;
 16087  001C2E  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16088  001C34  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16089  001C3A  0E23               	movlw	35
 16090  001C3C  6EDF               	movwf	indf2,c
 16091  001C3E                     l15983:
 16092                           
 16093                           ;nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 16094  001C3E  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
 16095  001C40  B4D8               	btfsc	status,2,c
 16096  001C42  EF25  F00E         	goto	u15971
 16097  001C46  EF27  F00E         	goto	u15970
 16098  001C4A                     u15971:
 16099  001C4A  EF2F  F00E         	goto	l15987
 16100  001C4E                     u15970:
 16101  001C4E                     
 16102                           ;nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 16103  001C4E  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 16104  001C54  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 16105  001C5A  EC2B  F02A         	call	_nwkTxBroadcastFrame	;wreg free
 16106  001C5E                     l15987:
 16107                           
 16108                           ;nwk/nwk_src/nwkRx.c: 383:     if (member)
 16109  001C5E  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 16110  001C60  B4D8               	btfsc	status,2,c
 16111  001C62  EF35  F00E         	goto	u15981
 16112  001C66  EF37  F00E         	goto	u15980
 16113  001C6A                     u15981:
 16114  001C6A  EFCA  F00E         	goto	l2097
 16115  001C6E                     u15980:
 16116  001C6E                     
 16117                           ;nwk/nwk_src/nwkRx.c: 384:     {;nwk/nwk_src/nwkRx.c: 385:       frame->payload += sizeo
      +                          f(NwkFrameMulticastHeader_t);
 16118  001C6E  EE20 F081          	lfsr	2,129
 16119  001C72  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 16120  001C74  26D9               	addwf	fsr2l,f,c
 16121  001C76  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 16122  001C78  22DA               	addwfc	fsr2h,f,c
 16123  001C7A  0E02               	movlw	2
 16124  001C7C  26DE               	addwf	postinc2,f,c
 16125  001C7E  0E00               	movlw	0
 16126  001C80  22DD               	addwfc	postdec2,f,c
 16127  001C82                     
 16128                           ;nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 16129  001C82  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16130  001C88  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16131  001C8E  0E22               	movlw	34
 16132  001C90  6EDF               	movwf	indf2,c
 16133  001C92  EFCA  F00E         	goto	l2097
 16134  001C96                     l15993:
 16135                           
 16136                           ;nwk/nwk_src/nwkRx.c: 397:   {;nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header->macDs
      +                          tAddr && nwkIb.addr != header->nwkDstAddr &&
 16137  001C96  EE20 F005          	lfsr	2,5
 16138  001C9A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16139  001C9C  26D9               	addwf	fsr2l,f,c
 16140  001C9E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16141  001CA0  22DA               	addwfc	fsr2h,f,c
 16142  001CA2  28DE               	incf	postinc2,w,c
 16143  001CA4  E106               	bnz	u15991
 16144  001CA6  28DE               	incf	postinc2,w,c
 16145  001CA8  A4D8               	btfss	status,2,c
 16146  001CAA  EF59  F00E         	goto	u15991
 16147  001CAE  EF5B  F00E         	goto	u15990
 16148  001CB2                     u15991:
 16149  001CB2  EF83  F00E         	goto	l16001
 16150  001CB6                     u15990:
 16151  001CB6  EE20 F00D          	lfsr	2,13
 16152  001CBA  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16153  001CBC  26D9               	addwf	fsr2l,f,c
 16154  001CBE  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16155  001CC0  22DA               	addwfc	fsr2h,f,c
 16156  001CC2  0101               	movlb	1	; () banked
 16157  001CC4  5100               	movf	_nwkIb& (0+255),w,b
 16158  001CC6  18DE               	xorwf	postinc2,w,c
 16159  001CC8  E109               	bnz	u16000
 16160  001CCA  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16161  001CCC  18DE               	xorwf	postinc2,w,c
 16162  001CCE  B4D8               	btfsc	status,2,c
 16163  001CD0  EF6C  F00E         	goto	u16001
 16164  001CD4  EF6E  F00E         	goto	u16000
 16165  001CD8                     u16001:
 16166  001CD8  EF83  F00E         	goto	l16001
 16167  001CDC                     u16000:
 16168  001CDC                     
 16169                           ; BSR set to: 1
 16170  001CDC  EE20 F009          	lfsr	2,9
 16171  001CE0  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16172  001CE2  26D9               	addwf	fsr2l,f,c
 16173  001CE4  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16174  001CE6  22DA               	addwfc	fsr2h,f,c
 16175  001CE8  B4DF               	btfsc	indf2,2,c
 16176  001CEA  EF79  F00E         	goto	u16011
 16177  001CEE  EF7B  F00E         	goto	u16010
 16178  001CF2                     u16011:
 16179  001CF2  EF83  F00E         	goto	l16001
 16180  001CF6                     u16010:
 16181  001CF6                     
 16182                           ; BSR set to: 1
 16183                           ;nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 16184  001CF6  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 16185  001CFC  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 16186  001D02  EC2B  F02A         	call	_nwkTxBroadcastFrame	;wreg free
 16187  001D06                     l16001:
 16188                           
 16189                           ;nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == header-
      +                          >nwkDstAddr)
 16190  001D06  EE20 F00D          	lfsr	2,13
 16191  001D0A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16192  001D0C  26D9               	addwf	fsr2l,f,c
 16193  001D0E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16194  001D10  22DA               	addwfc	fsr2h,f,c
 16195  001D12  0101               	movlb	1	; () banked
 16196  001D14  5100               	movf	_nwkIb& (0+255),w,b
 16197  001D16  18DE               	xorwf	postinc2,w,c
 16198  001D18  E109               	bnz	u16020
 16199  001D1A  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16200  001D1C  18DE               	xorwf	postinc2,w,c
 16201  001D1E  B4D8               	btfsc	status,2,c
 16202  001D20  EF94  F00E         	goto	u16021
 16203  001D24  EF96  F00E         	goto	u16020
 16204  001D28                     u16021:
 16205  001D28  EFA6  F00E         	goto	l16005
 16206  001D2C                     u16020:
 16207  001D2C                     
 16208                           ; BSR set to: 1
 16209  001D2C  EE20 F00D          	lfsr	2,13
 16210  001D30  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16211  001D32  26D9               	addwf	fsr2l,f,c
 16212  001D34  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16213  001D36  22DA               	addwfc	fsr2h,f,c
 16214  001D38  28DE               	incf	postinc2,w,c
 16215  001D3A  E106               	bnz	u16031
 16216  001D3C  28DE               	incf	postinc2,w,c
 16217  001D3E  A4D8               	btfss	status,2,c
 16218  001D40  EFA4  F00E         	goto	u16031
 16219  001D44  EFA6  F00E         	goto	u16030
 16220  001D48                     u16031:
 16221  001D48  EFB0  F00E         	goto	l16007
 16222  001D4C                     u16030:
 16223  001D4C                     l16005:
 16224                           
 16225                           ; BSR set to: 1
 16226                           ;nwk/nwk_src/nwkRx.c: 403:     {;nwk/nwk_src/nwkRx.c: 409:         frame->state = NWK_RX
      +                          _STATE_INDICATE;
 16227  001D4C  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16228  001D52  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16229  001D58  0E22               	movlw	34
 16230  001D5A  6EDF               	movwf	indf2,c
 16231                           
 16232                           ;nwk/nwk_src/nwkRx.c: 410:     }
 16233  001D5C  EFCA  F00E         	goto	l2097
 16234  001D60                     l16007:
 16235                           
 16236                           ; BSR set to: 1
 16237  001D60  EE20 F005          	lfsr	2,5
 16238  001D64  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16239  001D66  26D9               	addwf	fsr2l,f,c
 16240  001D68  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16241  001D6A  22DA               	addwfc	fsr2h,f,c
 16242  001D6C  5100               	movf	_nwkIb& (0+255),w,b
 16243  001D6E  18DE               	xorwf	postinc2,w,c
 16244  001D70  E107               	bnz	u16041
 16245  001D72  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16246  001D74  18DE               	xorwf	postinc2,w,c
 16247  001D76  A4D8               	btfss	status,2,c
 16248  001D78  EFC0  F00E         	goto	u16041
 16249  001D7C  EFC2  F00E         	goto	u16040
 16250  001D80                     u16041:
 16251  001D80  EFCA  F00E         	goto	l2097
 16252  001D84                     u16040:
 16253  001D84                     
 16254                           ; BSR set to: 1
 16255                           ;nwk/nwk_src/nwkRx.c: 414:     {;nwk/nwk_src/nwkRx.c: 415:       frame->state = NWK_RX_S
      +                          TATE_ROUTE;
 16256  001D84  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16257  001D8A  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16258  001D90  0E23               	movlw	35
 16259  001D92  6EDF               	movwf	indf2,c
 16260  001D94                     l2097:
 16261  001D94  0012               	return		;funcret
 16262  001D96                     __end_of_nwkRxHandleReceivedFrame:
 16263                           	opt callstack 0
 16264                           
 16265 ;; *************** function _nwkTxBroadcastFrame *****************
 16266 ;; Defined at:
 16267 ;;		line 159 in file "nwk/nwk_src/nwkTx.c"
 16268 ;; Parameters:    Size  Location     Type
 16269 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 16270 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16271 ;; Auto vars:     Size  Location     Type
 16272 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
 16273 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16274 ;; Return value:  Size  Location     Type
 16275 ;;                  1    wreg      void 
 16276 ;; Registers used:
 16277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16278 ;; Tracked objects:
 16279 ;;		On entry : 0/0
 16280 ;;		On exit  : 0/0
 16281 ;;		Unchanged: 0/0
 16282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16286 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16287 ;;Total ram usage:        5 bytes
 16288 ;; Hardware stack levels used:    1
 16289 ;; Hardware stack levels required when called:    9
 16290 ;; This function calls:
 16291 ;;		_memcpy
 16292 ;;		_nwkFrameAlloc
 16293 ;;		_rand
 16294 ;; This function is called by:
 16295 ;;		_nwkRxHandleReceivedFrame
 16296 ;; This function uses a non-reentrant model
 16297 ;;
 16298                           
 16299                           	psect	text99
 16300  005456                     __ptext99:
 16301                           	opt callstack 0
 16302  005456                     _nwkTxBroadcastFrame:
 16303                           	opt callstack 17
 16304  005456                     
 16305                           ;nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);nwk/nwk_src/nwkTx
      +                          .c: 160: {;nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;nwk/nwk_src/nwkTx.c: 163:  
      +                           if (((void*)0) == (newFrame = nwkFrameAlloc()))
 16306  005456  ECFE  F038         	call	_nwkFrameAlloc	;wreg free
 16307  00545A  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 16308  005460  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 16309  005466  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16310  005468  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16311  00546A  A4D8               	btfss	status,2,c
 16312  00546C  EF3A  F02A         	goto	u14701
 16313  005470  EF3C  F02A         	goto	u14700
 16314  005474                     u14701:
 16315  005474  EF3E  F02A         	goto	l15275
 16316  005478                     u14700:
 16317  005478  EFD3  F02A         	goto	l2273
 16318  00547C                     l15275:
 16319                           
 16320                           ;nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 16321  00547C  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 16322  005482  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 16323  005488  0E12               	movlw	18
 16324  00548A  6EDF               	movwf	indf2,c
 16325  00548C                     
 16326                           ;nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 16327  00548C  EE20 F001          	lfsr	2,1
 16328  005490  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 16329  005492  26D9               	addwf	fsr2l,f,c
 16330  005494  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 16331  005496  22DA               	addwfc	fsr2h,f,c
 16332  005498  EE10 F001          	lfsr	1,1
 16333  00549C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16334  00549E  26E1               	addwf	fsr1l,f,c
 16335  0054A0  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16336  0054A2  22E2               	addwfc	fsr1h,f,c
 16337  0054A4  006F FF7F FFE7     	movff	indf2,indf1
 16338  0054AA                     
 16339                           ;nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 16340  0054AA  EE20 F083          	lfsr	2,131
 16341  0054AE  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16342  0054B0  26D9               	addwf	fsr2l,f,c
 16343  0054B2  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16344  0054B4  22DA               	addwfc	fsr2h,f,c
 16345  0054B6  0E00               	movlw	0
 16346  0054B8  6EDF               	movwf	indf2,c
 16347  0054BA                     
 16348                           ;nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 16349  0054BA  EC7C  F02F         	call	_rand	;wreg free
 16350  0054BE  0E07               	movlw	7
 16351  0054C0  161A               	andwf	?_rand^0,f,c
 16352  0054C2  0E00               	movlw	0
 16353  0054C4  161B               	andwf	(?_rand+1)^0,f,c
 16354  0054C6  0E01               	movlw	1
 16355  0054C8  261A               	addwf	?_rand^0,f,c
 16356  0054CA  0E00               	movlw	0
 16357  0054CC  221B               	addwfc	(?_rand+1)^0,f,c
 16358  0054CE  EE20 F084          	lfsr	2,132
 16359  0054D2  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16360  0054D4  26D9               	addwf	fsr2l,f,c
 16361  0054D6  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16362  0054D8  22DA               	addwfc	fsr2h,f,c
 16363  0054DA  0060  F06B  FFDE   	movff	?_rand,postinc2
 16364  0054E0  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 16365  0054E6                     
 16366                           ;nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
 16367  0054E6  EE20 F087          	lfsr	2,135
 16368  0054EA  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16369  0054EC  26D9               	addwf	fsr2l,f,c
 16370  0054EE  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16371  0054F0  22DA               	addwfc	fsr2h,f,c
 16372  0054F2  0E00               	movlw	0
 16373  0054F4  6EDE               	movwf	postinc2,c
 16374  0054F6  0E00               	movlw	0
 16375  0054F8  6EDD               	movwf	postdec2,c
 16376  0054FA                     
 16377                           ;nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 16378  0054FA  0E02               	movlw	2
 16379  0054FC  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
 16380  0054FE  6E08               	movwf	memcpy@d1^0,c
 16381  005500  0E00               	movlw	0
 16382  005502  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16383  005504  6E09               	movwf	(memcpy@d1+1)^0,c
 16384  005506  0E02               	movlw	2
 16385  005508  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
 16386  00550A  6E0A               	movwf	memcpy@s1^0,c
 16387  00550C  0E00               	movlw	0
 16388  00550E  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
 16389  005510  6E0B               	movwf	(memcpy@s1+1)^0,c
 16390  005512  EE20 F001          	lfsr	2,1
 16391  005516  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 16392  005518  26D9               	addwf	fsr2l,f,c
 16393  00551A  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 16394  00551C  22DA               	addwfc	fsr2h,f,c
 16395  00551E  50DF               	movf	indf2,w,c
 16396  005520  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
 16397  005522  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
 16398  005524  6E0C               	movwf	memcpy@n^0,c
 16399  005526  6A0D               	clrf	(memcpy@n+1)^0,c
 16400  005528  ECD7  F041         	call	_memcpy	;wreg free
 16401  00552C                     
 16402                           ;nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 16403  00552C  EE20 F002          	lfsr	2,2
 16404  005530  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16405  005532  26D9               	addwf	fsr2l,f,c
 16406  005534  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16407  005536  22DA               	addwfc	fsr2h,f,c
 16408  005538  0E41               	movlw	65
 16409  00553A  6EDE               	movwf	postinc2,c
 16410  00553C  0E88               	movlw	136
 16411  00553E  6EDD               	movwf	postdec2,c
 16412  005540                     
 16413                           ;nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 16414  005540  EE20 F007          	lfsr	2,7
 16415  005544  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16416  005546  26D9               	addwf	fsr2l,f,c
 16417  005548  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16418  00554A  22DA               	addwfc	fsr2h,f,c
 16419  00554C  0EFF               	movlw	255
 16420  00554E  6EDE               	movwf	postinc2,c
 16421  005550  0EFF               	movlw	255
 16422  005552  6EDD               	movwf	postdec2,c
 16423  005554                     
 16424                           ;nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId;
 16425  005554  EE20 F005          	lfsr	2,5
 16426  005558  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 16427  00555A  26D9               	addwf	fsr2l,f,c
 16428  00555C  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 16429  00555E  22DA               	addwfc	fsr2h,f,c
 16430  005560  EE10 F005          	lfsr	1,5
 16431  005564  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16432  005566  26E1               	addwf	fsr1l,f,c
 16433  005568  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16434  00556A  22E2               	addwfc	fsr1h,f,c
 16435  00556C  006F FF7B FFE6     	movff	postinc2,postinc1
 16436  005572  006F FF77 FFE5     	movff	postdec2,postdec1
 16437  005578                     
 16438                           ;nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 16439  005578  EE20 F009          	lfsr	2,9
 16440  00557C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16441  00557E  26D9               	addwf	fsr2l,f,c
 16442  005580  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16443  005582  22DA               	addwfc	fsr2h,f,c
 16444  005584  0060  F403  FFDE   	movff	_nwkIb,postinc2
 16445  00558A  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 16446  005590                     
 16447                           ;nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 16448  005590  0101               	movlb	1	; () banked
 16449  005592  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 16450  005594  EE20 F004          	lfsr	2,4
 16451  005598  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 16452  00559A  26D9               	addwf	fsr2l,f,c
 16453  00559C  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 16454  00559E  22DA               	addwfc	fsr2h,f,c
 16455  0055A0  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 16456  0055A6                     l2273:
 16457  0055A6  0012               	return		;funcret
 16458  0055A8                     __end_of_nwkTxBroadcastFrame:
 16459                           	opt callstack 0
 16460                           
 16461 ;; *************** function _nwkRxRejectDuplicate *****************
 16462 ;; Defined at:
 16463 ;;		line 200 in file "nwk/nwk_src/nwkRx.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
 16466 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16467 ;; Auto vars:     Size  Location     Type
 16468 ;;  shift           1   23[COMRAM] unsigned char 
 16469 ;;  diff            1   25[COMRAM] unsigned char 
 16470 ;;  i               1   24[COMRAM] unsigned char 
 16471 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
 16472 ;;		 -> nwkRxDuplicateRejectionTable(50), 
 16473 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
 16474 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  1    wreg      _Bool 
 16477 ;; Registers used:
 16478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16479 ;; Tracked objects:
 16480 ;;		On entry : 0/0
 16481 ;;		On exit  : 0/0
 16482 ;;		Unchanged: 0/0
 16483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16485 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16487 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16488 ;;Total ram usage:       13 bytes
 16489 ;; Hardware stack levels used:    1
 16490 ;; Hardware stack levels required when called:    9
 16491 ;; This function calls:
 16492 ;;		_SYS_TimerStart
 16493 ;;		_nwkRouteRemove
 16494 ;; This function is called by:
 16495 ;;		_nwkRxHandleReceivedFrame
 16496 ;; This function uses a non-reentrant model
 16497 ;;
 16498                           
 16499                           	psect	text100
 16500  002A4A                     __ptext100:
 16501                           	opt callstack 0
 16502  002A4A                     _nwkRxRejectDuplicate:
 16503                           	opt callstack 17
 16504  002A4A                     
 16505                           ;nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header);n
      +                          wk/nwk_src/nwkRx.c: 201: {;nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEntry_t *ent
      +                          ry;;nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((void*)0);
 16506  002A4A  0E00               	movlw	0
 16507  002A4C  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
 16508  002A4E  0E00               	movlw	0
 16509  002A50  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
 16510  002A52                     
 16511                           ;nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
 16512  002A52  0E00               	movlw	0
 16513  002A54  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
 16514  002A56                     l15205:
 16515                           
 16516                           ;nwk/nwk_src/nwkRx.c: 206:   {;nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplicateReje
      +                          ctionTable[i];
 16517  002A56  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
 16518  002A58  0D05               	mullw	5
 16519  002A5A  0EA0               	movlw	low _nwkRxDuplicateRejectionTable
 16520  002A5C  24F3               	addwf	243,w,c
 16521  002A5E  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
 16522  002A60  0E03               	movlw	high _nwkRxDuplicateRejectionTable
 16523  002A62  20F4               	addwfc	prodh,w,c
 16524  002A64  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
 16525  002A66                     
 16526                           ;nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 16527  002A66  EE20 F004          	lfsr	2,4
 16528  002A6A  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16529  002A6C  26D9               	addwf	fsr2l,f,c
 16530  002A6E  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16531  002A70  22DA               	addwfc	fsr2h,f,c
 16532  002A72  50DF               	movf	indf2,w,c
 16533  002A74  B4D8               	btfsc	status,2,c
 16534  002A76  EF3F  F015         	goto	u14591
 16535  002A7A  EF41  F015         	goto	u14590
 16536  002A7E                     u14591:
 16537  002A7E  EF11  F016         	goto	l15245
 16538  002A82                     u14590:
 16539  002A82  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 16540  002A88  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 16541  002A8E  EE10 F00B          	lfsr	1,11
 16542  002A92  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16543  002A94  26E1               	addwf	fsr1l,f,c
 16544  002A96  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16545  002A98  22E2               	addwfc	fsr1h,f,c
 16546  002A9A  50DE               	movf	postinc2,w,c
 16547  002A9C  18E6               	xorwf	postinc1,w,c
 16548  002A9E  E107               	bnz	u14601
 16549  002AA0  50DE               	movf	postinc2,w,c
 16550  002AA2  18E6               	xorwf	postinc1,w,c
 16551  002AA4  A4D8               	btfss	status,2,c
 16552  002AA6  EF57  F015         	goto	u14601
 16553  002AAA  EF59  F015         	goto	u14600
 16554  002AAE                     u14601:
 16555  002AAE  EF11  F016         	goto	l15245
 16556  002AB2                     u14600:
 16557  002AB2                     
 16558                           ;nwk/nwk_src/nwkRx.c: 210:     {;nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (int8_t)
      +                          entry->seq - header->nwkSeq;
 16559  002AB2  EE20 F00A          	lfsr	2,10
 16560  002AB6  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16561  002AB8  26D9               	addwf	fsr2l,f,c
 16562  002ABA  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16563  002ABC  22DA               	addwfc	fsr2h,f,c
 16564  002ABE  50DF               	movf	indf2,w,c
 16565  002AC0  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 16566  002AC2  EE20 F002          	lfsr	2,2
 16567  002AC6  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16568  002AC8  26D9               	addwf	fsr2l,f,c
 16569  002ACA  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16570  002ACC  22DA               	addwfc	fsr2h,f,c
 16571  002ACE  50DF               	movf	indf2,w,c
 16572  002AD0  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 16573  002AD2  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
 16574  002AD4  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
 16575  002AD6  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
 16576  002AD8                     
 16577                           ;nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 16578  002AD8  0E08               	movlw	8
 16579  002ADA  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
 16580  002ADC  EF72  F015         	goto	u14611
 16581  002AE0  EF74  F015         	goto	u14610
 16582  002AE4                     u14611:
 16583  002AE4  EFD9  F015         	goto	l15233
 16584  002AE8                     u14610:
 16585  002AE8                     
 16586                           ;nwk/nwk_src/nwkRx.c: 214:       {;nwk/nwk_src/nwkRx.c: 215:         if (entry->mask & (
      +                          1 << diff))
 16587  002AE8  EE20 F003          	lfsr	2,3
 16588  002AEC  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16589  002AEE  26D9               	addwf	fsr2l,f,c
 16590  002AF0  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16591  002AF2  22DA               	addwfc	fsr2h,f,c
 16592  002AF4  50DF               	movf	indf2,w,c
 16593  002AF6  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 16594  002AF8  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 16595  002AFE  0E01               	movlw	1
 16596  002B00  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
 16597  002B02  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
 16598  002B04  EF86  F015         	goto	u14624
 16599  002B08                     u14625:
 16600  002B08  90D8               	bcf	status,0,c
 16601  002B0A  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
 16602  002B0C                     u14624:
 16603  002B0C  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
 16604  002B0E  EF84  F015         	goto	u14625
 16605  002B12  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
 16606  002B14  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
 16607  002B16  0900               	iorlw	0
 16608  002B18  B4D8               	btfsc	status,2,c
 16609  002B1A  EF91  F015         	goto	u14631
 16610  002B1E  EF93  F015         	goto	u14630
 16611  002B22                     u14631:
 16612  002B22  EFC1  F015         	goto	l15225
 16613  002B26                     u14630:
 16614  002B26                     
 16615                           ;nwk/nwk_src/nwkRx.c: 216:         {;nwk/nwk_src/nwkRx.c: 218:           if (nwkIb.addr 
      +                          == header->macDstAddr)
 16616  002B26  EE20 F005          	lfsr	2,5
 16617  002B2A  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16618  002B2C  26D9               	addwf	fsr2l,f,c
 16619  002B2E  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16620  002B30  22DA               	addwfc	fsr2h,f,c
 16621  002B32  0101               	movlb	1	; () banked
 16622  002B34  5100               	movf	_nwkIb& (0+255),w,b
 16623  002B36  18DE               	xorwf	postinc2,w,c
 16624  002B38  E107               	bnz	u14641
 16625  002B3A  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16626  002B3C  18DE               	xorwf	postinc2,w,c
 16627  002B3E  A4D8               	btfss	status,2,c
 16628  002B40  EFA4  F015         	goto	u14641
 16629  002B44  EFA6  F015         	goto	u14640
 16630  002B48                     u14641:
 16631  002B48  EFBE  F015         	goto	l15221
 16632  002B4C                     u14640:
 16633  002B4C                     
 16634                           ; BSR set to: 1
 16635                           ;nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwkFcf
      +                          .multicast);
 16636  002B4C  EE20 F00D          	lfsr	2,13
 16637  002B50  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16638  002B52  26D9               	addwf	fsr2l,f,c
 16639  002B54  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16640  002B56  22DA               	addwfc	fsr2h,f,c
 16641  002B58  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 16642  002B5E  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 16643  002B64  EE20 F009          	lfsr	2,9
 16644  002B68  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16645  002B6A  26D9               	addwf	fsr2l,f,c
 16646  002B6C  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16647  002B6E  22DA               	addwfc	fsr2h,f,c
 16648  002B70  0E00               	movlw	0
 16649  002B72  B6DF               	btfsc	indf2,3,c
 16650  002B74  0E01               	movlw	1
 16651  002B76  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 16652  002B78  EC85  F048         	call	_nwkRouteRemove	;wreg free
 16653  002B7C                     l15221:
 16654                           
 16655                           ;nwk/nwk_src/nwkRx.c: 221:           return 1;
 16656  002B7C  0E01               	movlw	1
 16657  002B7E  EF72  F016         	goto	l2081
 16658  002B82                     l15225:
 16659                           
 16660                           ;nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 16661  002B82  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 16662  002B88  0E01               	movlw	1
 16663  002B8A  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 16664  002B8C  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 16665  002B8E  EFCB  F015         	goto	u14654
 16666  002B92                     u14655:
 16667  002B92  90D8               	bcf	status,0,c
 16668  002B94  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 16669  002B96                     u14654:
 16670  002B96  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 16671  002B98  EFC9  F015         	goto	u14655
 16672  002B9C  EE20 F003          	lfsr	2,3
 16673  002BA0  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16674  002BA2  26D9               	addwf	fsr2l,f,c
 16675  002BA4  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16676  002BA6  22DA               	addwfc	fsr2h,f,c
 16677  002BA8  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 16678  002BAA  12DF               	iorwf	indf2,f,c
 16679  002BAC                     l15227:
 16680                           
 16681                           ;nwk/nwk_src/nwkRx.c: 225:         return 0;
 16682  002BAC  0E00               	movlw	0
 16683  002BAE  EF72  F016         	goto	l2081
 16684  002BB2                     l15233:
 16685                           
 16686                           ;nwk/nwk_src/nwkRx.c: 228:       {;nwk/nwk_src/nwkRx.c: 229:         uint8_t shift = -(i
      +                          nt8_t)diff;
 16687  002BB2  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
 16688  002BB4  0800               	sublw	0
 16689  002BB6  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
 16690  002BB8                     
 16691                           ;nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 16692  002BB8  EE20 F00A          	lfsr	2,10
 16693  002BBC  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16694  002BBE  26D9               	addwf	fsr2l,f,c
 16695  002BC0  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16696  002BC2  22DA               	addwfc	fsr2h,f,c
 16697  002BC4  EE10 F002          	lfsr	1,2
 16698  002BC8  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16699  002BCA  26E1               	addwf	fsr1l,f,c
 16700  002BCC  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16701  002BCE  22E2               	addwfc	fsr1h,f,c
 16702  002BD0  006F FF7F FFE7     	movff	indf2,indf1
 16703  002BD6                     
 16704                           ;nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 16705  002BD6  EE20 F003          	lfsr	2,3
 16706  002BDA  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16707  002BDC  26D9               	addwf	fsr2l,f,c
 16708  002BDE  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16709  002BE0  22DA               	addwfc	fsr2h,f,c
 16710  002BE2  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 16711  002BE8  EE10 F003          	lfsr	1,3
 16712  002BEC  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16713  002BEE  26E1               	addwf	fsr1l,f,c
 16714  002BF0  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16715  002BF2  22E2               	addwfc	fsr1h,f,c
 16716  002BF4  50E7               	movf	indf1,w,c
 16717  002BF6  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 16718  002BF8  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 16719  002BFA  EF01  F016         	goto	u14664
 16720  002BFE                     u14665:
 16721  002BFE  90D8               	bcf	status,0,c
 16722  002C00  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 16723  002C02                     u14664:
 16724  002C02  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 16725  002C04  EFFF  F015         	goto	u14665
 16726  002C08  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 16727  002C0A  0901               	iorlw	1
 16728  002C0C  6EDF               	movwf	indf2,c
 16729  002C0E                     
 16730                           ;nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
 16731  002C0E  EE20 F004          	lfsr	2,4
 16732  002C12  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16733  002C14  26D9               	addwf	fsr2l,f,c
 16734  002C16  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16735  002C18  22DA               	addwfc	fsr2h,f,c
 16736  002C1A  0E01               	movlw	1
 16737  002C1C  6EDF               	movwf	indf2,c
 16738  002C1E  EFD6  F015         	goto	l15227
 16739  002C22                     l15245:
 16740                           
 16741                           ;nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 16742  002C22  EE20 F004          	lfsr	2,4
 16743  002C26  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 16744  002C28  26D9               	addwf	fsr2l,f,c
 16745  002C2A  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 16746  002C2C  22DA               	addwfc	fsr2h,f,c
 16747  002C2E  50DF               	movf	indf2,w,c
 16748  002C30  A4D8               	btfss	status,2,c
 16749  002C32  EF1D  F016         	goto	u14671
 16750  002C36  EF1F  F016         	goto	u14670
 16751  002C3A                     u14671:
 16752  002C3A  EF25  F016         	goto	l15249
 16753  002C3E                     u14670:
 16754  002C3E                     
 16755                           ;nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 16756  002C3E  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 16757  002C44  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 16758  002C4A                     l15249:
 16759                           
 16760                           ;nwk/nwk_src/nwkRx.c: 240:   }
 16761  002C4A  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
 16762  002C4C  0E09               	movlw	9
 16763  002C4E  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
 16764  002C50  EF2C  F016         	goto	u14681
 16765  002C54  EF2E  F016         	goto	u14680
 16766  002C58                     u14681:
 16767  002C58  EF2B  F015         	goto	l15205
 16768  002C5C                     u14680:
 16769  002C5C                     
 16770                           ;nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
 16771  002C5C  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 16772  002C5E  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 16773  002C60  A4D8               	btfss	status,2,c
 16774  002C62  EF35  F016         	goto	u14691
 16775  002C66  EF37  F016         	goto	u14690
 16776  002C6A                     u14691:
 16777  002C6A  EF39  F016         	goto	l15259
 16778  002C6E                     u14690:
 16779  002C6E  EFBE  F015         	goto	l15221
 16780  002C72                     l15259:
 16781                           
 16782                           ;nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 16783  002C72  EE20 F00B          	lfsr	2,11
 16784  002C76  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16785  002C78  26D9               	addwf	fsr2l,f,c
 16786  002C7A  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16787  002C7C  22DA               	addwfc	fsr2h,f,c
 16788  002C7E  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
 16789  002C84  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
 16790  002C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 16791  002C90  006F FF77 FFE5     	movff	postdec2,postdec1
 16792                           
 16793                           ;nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 16794  002C96  EE20 F00A          	lfsr	2,10
 16795  002C9A  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 16796  002C9C  26D9               	addwf	fsr2l,f,c
 16797  002C9E  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 16798  002CA0  22DA               	addwfc	fsr2h,f,c
 16799  002CA2  EE10 F002          	lfsr	1,2
 16800  002CA6  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 16801  002CA8  26E1               	addwf	fsr1l,f,c
 16802  002CAA  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 16803  002CAC  22E2               	addwfc	fsr1h,f,c
 16804  002CAE  006F FF7F FFE7     	movff	indf2,indf1
 16805  002CB4                     
 16806                           ;nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 16807  002CB4  EE20 F003          	lfsr	2,3
 16808  002CB8  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 16809  002CBA  26D9               	addwf	fsr2l,f,c
 16810  002CBC  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 16811  002CBE  22DA               	addwfc	fsr2h,f,c
 16812  002CC0  0E01               	movlw	1
 16813  002CC2  6EDF               	movwf	indf2,c
 16814  002CC4                     
 16815                           ;nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
 16816  002CC4  EE20 F004          	lfsr	2,4
 16817  002CC8  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 16818  002CCA  26D9               	addwf	fsr2l,f,c
 16819  002CCC  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 16820  002CCE  22DA               	addwfc	fsr2h,f,c
 16821  002CD0  0E01               	movlw	1
 16822  002CD2  6EDF               	movwf	indf2,c
 16823  002CD4                     
 16824                           ;nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 16825  002CD4  0EAE               	movlw	low _nwkRxDuplicateRejectionTimer
 16826  002CD6  6E10               	movwf	SYS_TimerStart@timer^0,c
 16827  002CD8  0E01               	movlw	high _nwkRxDuplicateRejectionTimer
 16828  002CDA  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 16829  002CDC  ECFA  F04A         	call	_SYS_TimerStart	;wreg free
 16830  002CE0  EFD6  F015         	goto	l15227
 16831  002CE4                     l2081:
 16832  002CE4  0012               	return		;funcret
 16833  002CE6                     __end_of_nwkRxRejectDuplicate:
 16834                           	opt callstack 0
 16835                           
 16836 ;; *************** function _SYS_TimerStart *****************
 16837 ;; Defined at:
 16838 ;;		line 70 in file "sys/sys_src/sysTimer.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
 16841 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16842 ;; Auto vars:     Size  Location     Type
 16843 ;;		None
 16844 ;; Return value:  Size  Location     Type
 16845 ;;                  1    wreg      void 
 16846 ;; Registers used:
 16847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16848 ;; Tracked objects:
 16849 ;;		On entry : 0/0
 16850 ;;		On exit  : 0/0
 16851 ;;		Unchanged: 0/0
 16852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16857 ;;Total ram usage:        2 bytes
 16858 ;; Hardware stack levels used:    1
 16859 ;; Hardware stack levels required when called:    8
 16860 ;; This function calls:
 16861 ;;		_SYS_TimerStarted
 16862 ;;		_placeTimer
 16863 ;; This function is called by:
 16864 ;;		_nwkRxDuplicateRejectionTimerHandler
 16865 ;;		_nwkRxRejectDuplicate
 16866 ;;		_nwkTxAckWaitTimerHandler
 16867 ;;		_nwkTxDelayTimerHandler
 16868 ;;		_nwkTxTaskHandler
 16869 ;; This function uses a non-reentrant model
 16870 ;;
 16871                           
 16872                           	psect	text101
 16873  0095F4                     __ptext101:
 16874                           	opt callstack 0
 16875  0095F4                     _SYS_TimerStart:
 16876                           	opt callstack 19
 16877  0095F4                     
 16878                           ;sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);sys/sys_src/sysTime
      +                          r.c: 71: {;sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 16879  0095F4  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 16880  0095FA  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 16881  009600  EC63  F045         	call	_SYS_TimerStarted	;wreg free
 16882  009604  0900               	iorlw	0
 16883  009606  A4D8               	btfss	status,2,c
 16884  009608  EF08  F04B         	goto	u14091
 16885  00960C  EF0A  F04B         	goto	u14090
 16886  009610                     u14091:
 16887  009610  EF12  F04B         	goto	l2815
 16888  009614                     u14090:
 16889  009614                     
 16890                           ;sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 16891  009614  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
 16892  00961A  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 16893  009620  EC76  F01E         	call	_placeTimer	;wreg free
 16894  009624                     l2815:
 16895  009624  0012               	return		;funcret
 16896  009626                     __end_of_SYS_TimerStart:
 16897                           	opt callstack 0
 16898                           
 16899 ;; *************** function _placeTimer *****************
 16900 ;; Defined at:
 16901 ;;		line 146 in file "sys/sys_src/sysTimer.c"
 16902 ;; Parameters:    Size  Location     Type
 16903 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 16904 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16905 ;; Auto vars:     Size  Location     Type
 16906 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
 16907 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16908 ;;  timeout         4    7[COMRAM] unsigned long 
 16909 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
 16910 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 16911 ;; Return value:  Size  Location     Type
 16912 ;;                  1    wreg      void 
 16913 ;; Registers used:
 16914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16915 ;; Tracked objects:
 16916 ;;		On entry : 0/0
 16917 ;;		On exit  : 0/0
 16918 ;;		Unchanged: 0/0
 16919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16921 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16922 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16923 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16924 ;;Total ram usage:       14 bytes
 16925 ;; Hardware stack levels used:    1
 16926 ;; Hardware stack levels required when called:    7
 16927 ;; This function calls:
 16928 ;;		Nothing
 16929 ;; This function is called by:
 16930 ;;		_SYS_TimerStart
 16931 ;;		_SYS_TimerTaskHandler
 16932 ;; This function uses a non-reentrant model
 16933 ;;
 16934                           
 16935                           	psect	text102
 16936  003CEC                     __ptext102:
 16937                           	opt callstack 0
 16938  003CEC                     _placeTimer:
 16939                           	opt callstack 21
 16940  003CEC                     
 16941                           ;sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);sys/sys_src/sys
      +                          Timer.c: 147: {;sys/sys_src/sysTimer.c: 148:   if (timers)
 16942  003CEC  0100               	movlb	0	; () banked
 16943  003CEE  51E6               	movf	_timers& (0+255),w,b
 16944  003CF0  11E7               	iorwf	(_timers+1)& (0+255),w,b
 16945  003CF2  B4D8               	btfsc	status,2,c
 16946  003CF4  EF7E  F01E         	goto	u13901
 16947  003CF8  EF80  F01E         	goto	u13900
 16948  003CFC                     u13901:
 16949  003CFC  EF3B  F01F         	goto	l14683
 16950  003D00                     u13900:
 16951  003D00                     
 16952                           ; BSR set to: 0
 16953                           ;sys/sys_src/sysTimer.c: 149:   {;sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *prev = (
      +                          (void*)0);
 16954  003D00  0E00               	movlw	0
 16955  003D02  6E0C               	movwf	placeTimer@prev^0,c
 16956  003D04  0E00               	movlw	0
 16957  003D06  6E0D               	movwf	(placeTimer@prev+1)^0,c
 16958  003D08                     
 16959                           ; BSR set to: 0
 16960                           ;sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 16961  003D08  EE20 F006          	lfsr	2,6
 16962  003D0C  5002               	movf	placeTimer@timer^0,w,c
 16963  003D0E  26D9               	addwf	fsr2l,f,c
 16964  003D10  5003               	movf	(placeTimer@timer+1)^0,w,c
 16965  003D12  22DA               	addwfc	fsr2h,f,c
 16966  003D14  006F FF78  F008    	movff	postinc2,placeTimer@timeout
 16967  003D1A  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
 16968  003D20  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
 16969  003D26  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
 16970  003D2C                     
 16971                           ; BSR set to: 0
 16972                           ;sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 16973  003D2C  0060  F398  F00E   	movff	_timers,placeTimer@t
 16974  003D32  0060  F39C  F00F   	movff	_timers+1,placeTimer@t+1
 16975  003D38  EFE3  F01E         	goto	l14669
 16976  003D3C                     l14659:
 16977                           
 16978                           ;sys/sys_src/sysTimer.c: 154:     {;sys/sys_src/sysTimer.c: 155:       if (timeout < t->
      +                          timeout)
 16979  003D3C  EE20 F002          	lfsr	2,2
 16980  003D40  500E               	movf	placeTimer@t^0,w,c
 16981  003D42  26D9               	addwf	fsr2l,f,c
 16982  003D44  500F               	movf	(placeTimer@t+1)^0,w,c
 16983  003D46  22DA               	addwfc	fsr2h,f,c
 16984  003D48  50DE               	movf	postinc2,w,c
 16985  003D4A  5C08               	subwf	placeTimer@timeout^0,w,c
 16986  003D4C  50DE               	movf	postinc2,w,c
 16987  003D4E  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
 16988  003D50  50DE               	movf	postinc2,w,c
 16989  003D52  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
 16990  003D54  50DE               	movf	postinc2,w,c
 16991  003D56  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
 16992  003D58  B0D8               	btfsc	status,0,c
 16993  003D5A  EFB1  F01E         	goto	u13911
 16994  003D5E  EFB3  F01E         	goto	u13910
 16995  003D62                     u13911:
 16996  003D62  EFC3  F01E         	goto	l14665
 16997  003D66                     u13910:
 16998  003D66                     
 16999                           ;sys/sys_src/sysTimer.c: 156:       {;sys/sys_src/sysTimer.c: 157:          t->timeout -
      +                          = timeout;
 17000  003D66  EE20 F002          	lfsr	2,2
 17001  003D6A  500E               	movf	placeTimer@t^0,w,c
 17002  003D6C  26D9               	addwf	fsr2l,f,c
 17003  003D6E  500F               	movf	(placeTimer@t+1)^0,w,c
 17004  003D70  22DA               	addwfc	fsr2h,f,c
 17005  003D72  5008               	movf	placeTimer@timeout^0,w,c
 17006  003D74  5EDE               	subwf	postinc2,f,c
 17007  003D76  5009               	movf	(placeTimer@timeout+1)^0,w,c
 17008  003D78  5ADE               	subwfb	postinc2,f,c
 17009  003D7A  500A               	movf	(placeTimer@timeout+2)^0,w,c
 17010  003D7C  5ADE               	subwfb	postinc2,f,c
 17011  003D7E  500B               	movf	(placeTimer@timeout+3)^0,w,c
 17012  003D80  5ADE               	subwfb	postinc2,f,c
 17013                           
 17014                           ;sys/sys_src/sysTimer.c: 158:          break;
 17015  003D82  EFEC  F01E         	goto	l14671
 17016  003D86                     l14665:
 17017                           
 17018                           ;sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 17019  003D86  EE20 F002          	lfsr	2,2
 17020  003D8A  500E               	movf	placeTimer@t^0,w,c
 17021  003D8C  26D9               	addwf	fsr2l,f,c
 17022  003D8E  500F               	movf	(placeTimer@t+1)^0,w,c
 17023  003D90  22DA               	addwfc	fsr2h,f,c
 17024  003D92  50DE               	movf	postinc2,w,c
 17025  003D94  5E08               	subwf	placeTimer@timeout^0,f,c
 17026  003D96  50DE               	movf	postinc2,w,c
 17027  003D98  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
 17028  003D9A  50DE               	movf	postinc2,w,c
 17029  003D9C  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
 17030  003D9E  50DD               	movf	postdec2,w,c
 17031  003DA0  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
 17032  003DA2                     
 17033                           ;sys/sys_src/sysTimer.c: 163:       prev = t;
 17034  003DA2  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
 17035  003DA8  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
 17036                           
 17037                           ;sys/sys_src/sysTimer.c: 164:     }
 17038  003DAE  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
 17039  003DB4  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
 17040  003DBA  006F FF78  F00E    	movff	postinc2,placeTimer@t
 17041  003DC0  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
 17042  003DC6                     l14669:
 17043  003DC6  500E               	movf	placeTimer@t^0,w,c
 17044  003DC8  100F               	iorwf	(placeTimer@t+1)^0,w,c
 17045  003DCA  A4D8               	btfss	status,2,c
 17046  003DCC  EFEA  F01E         	goto	u13921
 17047  003DD0  EFEC  F01E         	goto	u13920
 17048  003DD4                     u13921:
 17049  003DD4  EF9E  F01E         	goto	l14659
 17050  003DD8                     u13920:
 17051  003DD8                     l14671:
 17052                           
 17053                           ;sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 17054  003DD8  EE20 F002          	lfsr	2,2
 17055  003DDC  5002               	movf	placeTimer@timer^0,w,c
 17056  003DDE  26D9               	addwf	fsr2l,f,c
 17057  003DE0  5003               	movf	(placeTimer@timer+1)^0,w,c
 17058  003DE2  22DA               	addwfc	fsr2h,f,c
 17059  003DE4  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
 17060  003DEA  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
 17061  003DF0  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
 17062  003DF6  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
 17063  003DFC                     
 17064                           ;sys/sys_src/sysTimer.c: 168:     if (prev)
 17065  003DFC  500C               	movf	placeTimer@prev^0,w,c
 17066  003DFE  100D               	iorwf	(placeTimer@prev+1)^0,w,c
 17067  003E00  B4D8               	btfsc	status,2,c
 17068  003E02  EF05  F01F         	goto	u13931
 17069  003E06  EF07  F01F         	goto	u13930
 17070  003E0A                     u13931:
 17071  003E0A  EF27  F01F         	goto	l14679
 17072  003E0E                     u13930:
 17073  003E0E                     
 17074                           ;sys/sys_src/sysTimer.c: 169:     {;sys/sys_src/sysTimer.c: 170:       timer->next = pre
      +                          v->next;
 17075  003E0E  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 17076  003E14  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 17077  003E1A  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
 17078  003E20  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
 17079  003E26  006F FF7B FFE6     	movff	postinc2,postinc1
 17080  003E2C  006F FF77 FFE5     	movff	postdec2,postdec1
 17081  003E32                     
 17082                           ;sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 17083  003E32  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 17084  003E38  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 17085  003E3E  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
 17086  003E44  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
 17087                           
 17088                           ;sys/sys_src/sysTimer.c: 172:     }
 17089  003E4A  EF5F  F01F         	goto	l2855
 17090  003E4E                     l14679:
 17091                           
 17092                           ;sys/sys_src/sysTimer.c: 174:     {;sys/sys_src/sysTimer.c: 175:       timer->next = tim
      +                          ers;
 17093  003E4E  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 17094  003E54  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 17095  003E5A  0060  F39B  FFDE   	movff	_timers,postinc2
 17096  003E60  0060  F39F  FFDD   	movff	_timers+1,postdec2
 17097  003E66                     l14681:
 17098                           
 17099                           ;sys/sys_src/sysTimer.c: 176:       timers = timer;
 17100  003E66  0060  F008  F0E6   	movff	placeTimer@timer,_timers
 17101  003E6C  0060  F00C  F0E7   	movff	placeTimer@timer+1,_timers+1
 17102  003E72  EF5F  F01F         	goto	l2855
 17103  003E76                     l14683:
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;sys/sys_src/sysTimer.c: 180:   {;sys/sys_src/sysTimer.c: 181:     timer->next = ((void*
      +                          )0);
 17107  003E76  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 17108  003E7C  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 17109  003E82  0E00               	movlw	0
 17110  003E84  6EDE               	movwf	postinc2,c
 17111  003E86  0E00               	movlw	0
 17112  003E88  6EDD               	movwf	postdec2,c
 17113  003E8A                     
 17114                           ; BSR set to: 0
 17115                           ;sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 17116  003E8A  EE20 F006          	lfsr	2,6
 17117  003E8E  5002               	movf	placeTimer@timer^0,w,c
 17118  003E90  26D9               	addwf	fsr2l,f,c
 17119  003E92  5003               	movf	(placeTimer@timer+1)^0,w,c
 17120  003E94  22DA               	addwfc	fsr2h,f,c
 17121  003E96  EE10 F002          	lfsr	1,2
 17122  003E9A  5002               	movf	placeTimer@timer^0,w,c
 17123  003E9C  26E1               	addwf	fsr1l,f,c
 17124  003E9E  5003               	movf	(placeTimer@timer+1)^0,w,c
 17125  003EA0  22E2               	addwfc	fsr1h,f,c
 17126  003EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 17127  003EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 17128  003EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 17129  003EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 17130  003EBA  EF33  F01F         	goto	l14681
 17131  003EBE                     l2855:
 17132  003EBE  0012               	return		;funcret
 17133  003EC0                     __end_of_placeTimer:
 17134                           	opt callstack 0
 17135                           
 17136 ;; *************** function _SYS_TimerStarted *****************
 17137 ;; Defined at:
 17138 ;;		line 102 in file "sys/sys_src/sysTimer.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 17141 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17142 ;; Auto vars:     Size  Location     Type
 17143 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
 17144 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17145 ;; Return value:  Size  Location     Type
 17146 ;;                  1    wreg      _Bool 
 17147 ;; Registers used:
 17148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17149 ;; Tracked objects:
 17150 ;;		On entry : 0/0
 17151 ;;		On exit  : 0/0
 17152 ;;		Unchanged: 0/0
 17153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17157 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17158 ;;Total ram usage:        4 bytes
 17159 ;; Hardware stack levels used:    1
 17160 ;; Hardware stack levels required when called:    7
 17161 ;; This function calls:
 17162 ;;		Nothing
 17163 ;; This function is called by:
 17164 ;;		_SYS_TimerStart
 17165 ;; This function uses a non-reentrant model
 17166 ;;
 17167                           
 17168                           	psect	text103
 17169  008AC6                     __ptext103:
 17170                           	opt callstack 0
 17171  008AC6                     _SYS_TimerStarted:
 17172                           	opt callstack 19
 17173  008AC6                     
 17174                           ;sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);sys/sys_src/sys
      +                          Timer.c: 103: {;sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t; t = t->n
      +                          ext)
 17175  008AC6  0060  F398  F004   	movff	_timers,SYS_TimerStarted@t
 17176  008ACC  0060  F39C  F005   	movff	_timers+1,SYS_TimerStarted@t+1
 17177  008AD2  EF86  F045         	goto	l14645
 17178  008AD6                     l14637:
 17179                           
 17180                           ;sys/sys_src/sysTimer.c: 105:     if (t == timer)
 17181  008AD6  5002               	movf	SYS_TimerStarted@timer^0,w,c
 17182  008AD8  1804               	xorwf	SYS_TimerStarted@t^0,w,c
 17183  008ADA  E107               	bnz	u13881
 17184  008ADC  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
 17185  008ADE  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
 17186  008AE0  A4D8               	btfss	status,2,c
 17187  008AE2  EF75  F045         	goto	u13881
 17188  008AE6  EF77  F045         	goto	u13880
 17189  008AEA                     u13881:
 17190  008AEA  EF7A  F045         	goto	l14643
 17191  008AEE                     u13880:
 17192  008AEE                     
 17193                           ;sys/sys_src/sysTimer.c: 106:       return 1;
 17194  008AEE  0E01               	movlw	1
 17195  008AF0  EF90  F045         	goto	l2831
 17196  008AF4                     l14643:
 17197  008AF4  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 17198  008AFA  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 17199  008B00  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
 17200  008B06  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
 17201  008B0C                     l14645:
 17202  008B0C  5004               	movf	SYS_TimerStarted@t^0,w,c
 17203  008B0E  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
 17204  008B10  A4D8               	btfss	status,2,c
 17205  008B12  EF8D  F045         	goto	u13891
 17206  008B16  EF8F  F045         	goto	u13890
 17207  008B1A                     u13891:
 17208  008B1A  EF6B  F045         	goto	l14637
 17209  008B1E                     u13890:
 17210  008B1E                     
 17211                           ;sys/sys_src/sysTimer.c: 107:   return 0;
 17212  008B1E  0E00               	movlw	0
 17213  008B20                     l2831:
 17214  008B20  0012               	return		;funcret
 17215  008B22                     __end_of_SYS_TimerStarted:
 17216                           	opt callstack 0
 17217                           
 17218 ;; *************** function _nwkRouteFrameReceived *****************
 17219 ;; Defined at:
 17220 ;;		line 194 in file "nwk/nwk_src/nwkRoute.c"
 17221 ;; Parameters:    Size  Location     Type
 17222 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
 17223 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17224 ;; Auto vars:     Size  Location     Type
 17225 ;;  discovery       1   16[COMRAM] _Bool 
 17226 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
 17227 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 17228 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
 17229 ;;		 -> nwkRouteTable(70), NULL(0), 
 17230 ;; Return value:  Size  Location     Type
 17231 ;;                  1    wreg      void 
 17232 ;; Registers used:
 17233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17234 ;; Tracked objects:
 17235 ;;		On entry : 0/0
 17236 ;;		On exit  : 0/0
 17237 ;;		Unchanged: 0/0
 17238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17240 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17241 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17242 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17243 ;;Total ram usage:       12 bytes
 17244 ;; Hardware stack levels used:    1
 17245 ;; Hardware stack levels required when called:    8
 17246 ;; This function calls:
 17247 ;;		_NWK_RouteFindEntry
 17248 ;;		_NWK_RouteNewEntry
 17249 ;; This function is called by:
 17250 ;;		_nwkRxHandleReceivedFrame
 17251 ;; This function uses a non-reentrant model
 17252 ;;
 17253                           
 17254                           	psect	text104
 17255  003688                     __ptext104:
 17256                           	opt callstack 0
 17257  003688                     _nwkRouteFrameReceived:
 17258                           	opt callstack 18
 17259  003688                     
 17260                           ;nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);nwk/nwk_src/
      +                          nwkRoute.c: 195: {;nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &frame->hea
      +                          der;
 17261  003688  0E02               	movlw	2
 17262  00368A  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
 17263  00368C  6E15               	movwf	nwkRouteFrameReceived@header^0,c
 17264  00368E  0E00               	movlw	0
 17265  003690  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
 17266  003692  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
 17267  003694                     
 17268                           ;nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;nwk/nwk_src/nwkRoute.c: 20
      +                          0:   if ((header->macSrcAddr & 0x8000) &&
 17269  003694  EE20 F007          	lfsr	2,7
 17270  003698  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17271  00369A  26D9               	addwf	fsr2l,f,c
 17272  00369C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17273  00369E  22DA               	addwfc	fsr2h,f,c
 17274  0036A0  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
 17275  0036A6  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
 17276  0036AC  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
 17277  0036AE  EF5B  F01B         	goto	u14401
 17278  0036B2  EF5D  F01B         	goto	u14400
 17279  0036B6                     u14401:
 17280  0036B6  EF77  F01B         	goto	l15093
 17281  0036BA                     u14400:
 17282  0036BA  EE20 F00B          	lfsr	2,11
 17283  0036BE  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17284  0036C0  26D9               	addwf	fsr2l,f,c
 17285  0036C2  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17286  0036C4  22DA               	addwfc	fsr2h,f,c
 17287  0036C6  EE10 F007          	lfsr	1,7
 17288  0036CA  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17289  0036CC  26E1               	addwf	fsr1l,f,c
 17290  0036CE  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17291  0036D0  22E2               	addwfc	fsr1h,f,c
 17292  0036D2  50DE               	movf	postinc2,w,c
 17293  0036D4  18E6               	xorwf	postinc1,w,c
 17294  0036D6  E109               	bnz	u14410
 17295  0036D8  50DE               	movf	postinc2,w,c
 17296  0036DA  18E6               	xorwf	postinc1,w,c
 17297  0036DC  B4D8               	btfsc	status,2,c
 17298  0036DE  EF73  F01B         	goto	u14411
 17299  0036E2  EF75  F01B         	goto	u14410
 17300  0036E6                     u14411:
 17301  0036E6  EF77  F01B         	goto	l15093
 17302  0036EA                     u14410:
 17303  0036EA  EF68  F01C         	goto	l1900
 17304  0036EE                     l15093:
 17305                           
 17306                           ;nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
 17307  0036EE  EE20 F003          	lfsr	2,3
 17308  0036F2  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17309  0036F4  26D9               	addwf	fsr2l,f,c
 17310  0036F6  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17311  0036F8  22DA               	addwfc	fsr2h,f,c
 17312  0036FA  28DE               	incf	postinc2,w,c
 17313  0036FC  E106               	bnz	u14421
 17314  0036FE  28DE               	incf	postinc2,w,c
 17315  003700  A4D8               	btfss	status,2,c
 17316  003702  EF85  F01B         	goto	u14421
 17317  003706  EF87  F01B         	goto	u14420
 17318  00370A                     u14421:
 17319  00370A  EF89  F01B         	goto	l15097
 17320  00370E                     u14420:
 17321  00370E  EF68  F01C         	goto	l1900
 17322  003712                     l15097:
 17323                           
 17324                           ;nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 17325  003712  EE20 F00B          	lfsr	2,11
 17326  003716  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17327  003718  26D9               	addwf	fsr2l,f,c
 17328  00371A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17329  00371C  22DA               	addwfc	fsr2h,f,c
 17330  00371E  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 17331  003724  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 17332  00372A  0E00               	movlw	0
 17333  00372C  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 17334  00372E  ECC4  F040         	call	_NWK_RouteFindEntry	;wreg free
 17335  003732  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 17336  003738  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 17337  00373E                     
 17338                           ;nwk/nwk_src/nwkRoute.c: 209:   if (entry)
 17339  00373E  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17340  003740  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17341  003742  B4D8               	btfsc	status,2,c
 17342  003744  EFA6  F01B         	goto	u14431
 17343  003748  EFA8  F01B         	goto	u14430
 17344  00374C                     u14431:
 17345  00374C  EF2D  F01C         	goto	l15119
 17346  003750                     u14430:
 17347  003750                     
 17348                           ;nwk/nwk_src/nwkRoute.c: 210:   {;nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery = (0x
      +                          ffff == header->macDstAddr &&
 17349  003750  0E00               	movlw	0
 17350  003752  6E12               	movwf	_nwkRouteFrameReceived$3856^0,c
 17351  003754  EE20 F005          	lfsr	2,5
 17352  003758  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17353  00375A  26D9               	addwf	fsr2l,f,c
 17354  00375C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17355  00375E  22DA               	addwfc	fsr2h,f,c
 17356  003760  28DE               	incf	postinc2,w,c
 17357  003762  E106               	bnz	u14441
 17358  003764  28DE               	incf	postinc2,w,c
 17359  003766  A4D8               	btfss	status,2,c
 17360  003768  EFB8  F01B         	goto	u14441
 17361  00376C  EFBA  F01B         	goto	u14440
 17362  003770                     u14441:
 17363  003770  EFCF  F01B         	goto	l1904
 17364  003774                     u14440:
 17365  003774  EE20 F00D          	lfsr	2,13
 17366  003778  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17367  00377A  26D9               	addwf	fsr2l,f,c
 17368  00377C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17369  00377E  22DA               	addwfc	fsr2h,f,c
 17370  003780  0101               	movlb	1	; () banked
 17371  003782  5100               	movf	_nwkIb& (0+255),w,b
 17372  003784  18DE               	xorwf	postinc2,w,c
 17373  003786  E107               	bnz	u14451
 17374  003788  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17375  00378A  18DE               	xorwf	postinc2,w,c
 17376  00378C  A4D8               	btfss	status,2,c
 17377  00378E  EFCB  F01B         	goto	u14451
 17378  003792  EFCD  F01B         	goto	u14450
 17379  003796                     u14451:
 17380  003796  EFCF  F01B         	goto	l1904
 17381  00379A                     u14450:
 17382  00379A                     
 17383                           ; BSR set to: 1
 17384  00379A  0E01               	movlw	1
 17385  00379C  6E12               	movwf	_nwkRouteFrameReceived$3856^0,c
 17386  00379E                     l1904:
 17387  00379E  5012               	movf	_nwkRouteFrameReceived$3856^0,w,c
 17388  0037A0  A4D8               	btfss	status,2,c
 17389  0037A2  EFD5  F01B         	goto	u14461
 17390  0037A6  EFD8  F01B         	goto	u14460
 17391  0037AA                     u14461:
 17392  0037AA  0E01               	movlw	1
 17393  0037AC  EFD9  F01B         	goto	u14470
 17394  0037B0                     u14460:
 17395  0037B0  0E00               	movlw	0
 17396  0037B2                     u14470:
 17397  0037B2  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
 17398  0037B4                     
 17399                           ;nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && frame
      +                          ->rx.lqi > entry->lqi) || discovery)
 17400  0037B4  EE20 F007          	lfsr	2,7
 17401  0037B8  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17402  0037BA  26D9               	addwf	fsr2l,f,c
 17403  0037BC  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17404  0037BE  22DA               	addwfc	fsr2h,f,c
 17405  0037C0  EE10 F003          	lfsr	1,3
 17406  0037C4  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17407  0037C6  26E1               	addwf	fsr1l,f,c
 17408  0037C8  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17409  0037CA  22E2               	addwfc	fsr1h,f,c
 17410  0037CC  50DE               	movf	postinc2,w,c
 17411  0037CE  18E6               	xorwf	postinc1,w,c
 17412  0037D0  E109               	bnz	u14480
 17413  0037D2  50DE               	movf	postinc2,w,c
 17414  0037D4  18E6               	xorwf	postinc1,w,c
 17415  0037D6  B4D8               	btfsc	status,2,c
 17416  0037D8  EFF0  F01B         	goto	u14481
 17417  0037DC  EFF2  F01B         	goto	u14480
 17418  0037E0                     u14481:
 17419  0037E0  EF07  F01C         	goto	l15113
 17420  0037E4                     u14480:
 17421  0037E4  EE20 F083          	lfsr	2,131
 17422  0037E8  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 17423  0037EA  26D9               	addwf	fsr2l,f,c
 17424  0037EC  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 17425  0037EE  22DA               	addwfc	fsr2h,f,c
 17426  0037F0  EE10 F006          	lfsr	1,6
 17427  0037F4  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17428  0037F6  26E1               	addwf	fsr1l,f,c
 17429  0037F8  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17430  0037FA  22E2               	addwfc	fsr1h,f,c
 17431  0037FC  50DE               	movf	postinc2,w,c
 17432  0037FE  5CE6               	subwf	postinc1,w,c
 17433  003800  A0D8               	btfss	status,0,c
 17434  003802  EF05  F01C         	goto	u14491
 17435  003806  EF07  F01C         	goto	u14490
 17436  00380A                     u14491:
 17437  00380A  EF0F  F01C         	goto	l15115
 17438  00380E                     u14490:
 17439  00380E                     l15113:
 17440  00380E  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
 17441  003810  B4D8               	btfsc	status,2,c
 17442  003812  EF0D  F01C         	goto	u14501
 17443  003816  EF0F  F01C         	goto	u14500
 17444  00381A                     u14501:
 17445  00381A  EF59  F01C         	goto	l15125
 17446  00381E                     u14500:
 17447  00381E                     l15115:
 17448                           
 17449                           ;nwk/nwk_src/nwkRoute.c: 215:     {;nwk/nwk_src/nwkRoute.c: 216:       entry->nextHopAdd
      +                          r = header->macSrcAddr;
 17450  00381E  EE20 F007          	lfsr	2,7
 17451  003822  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17452  003824  26D9               	addwf	fsr2l,f,c
 17453  003826  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17454  003828  22DA               	addwfc	fsr2h,f,c
 17455  00382A  EE10 F003          	lfsr	1,3
 17456  00382E  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17457  003830  26E1               	addwf	fsr1l,f,c
 17458  003832  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17459  003834  22E2               	addwfc	fsr1h,f,c
 17460  003836  006F FF7B FFE6     	movff	postinc2,postinc1
 17461  00383C  006F FF77 FFE5     	movff	postdec2,postdec1
 17462  003842                     
 17463                           ;nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
 17464  003842  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 17465  003848  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 17466  00384E  50DF               	movf	indf2,w,c
 17467  003850  0B0F               	andlw	-241
 17468  003852  0930               	iorlw	48
 17469  003854  6EDF               	movwf	indf2,c
 17470  003856  EF59  F01C         	goto	l15125
 17471  00385A                     l15119:
 17472                           
 17473                           ;nwk/nwk_src/nwkRoute.c: 221:   {;nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_RouteNewE
      +                          ntry();
 17474  00385A  EC9B  F033         	call	_NWK_RouteNewEntry	;wreg free
 17475  00385E  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 17476  003864  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 17477  00386A                     
 17478                           ;nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
 17479  00386A  EE20 F00B          	lfsr	2,11
 17480  00386E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17481  003870  26D9               	addwf	fsr2l,f,c
 17482  003872  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17483  003874  22DA               	addwfc	fsr2h,f,c
 17484  003876  EE10 F001          	lfsr	1,1
 17485  00387A  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17486  00387C  26E1               	addwf	fsr1l,f,c
 17487  00387E  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17488  003880  22E2               	addwfc	fsr1h,f,c
 17489  003882  006F FF7B FFE6     	movff	postinc2,postinc1
 17490  003888  006F FF77 FFE5     	movff	postdec2,postdec1
 17491  00388E                     
 17492                           ;nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
 17493  00388E  EE20 F007          	lfsr	2,7
 17494  003892  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 17495  003894  26D9               	addwf	fsr2l,f,c
 17496  003896  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 17497  003898  22DA               	addwfc	fsr2h,f,c
 17498  00389A  EE10 F003          	lfsr	1,3
 17499  00389E  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17500  0038A0  26E1               	addwf	fsr1l,f,c
 17501  0038A2  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17502  0038A4  22E2               	addwfc	fsr1h,f,c
 17503  0038A6  006F FF7B FFE6     	movff	postinc2,postinc1
 17504  0038AC  006F FF77 FFE5     	movff	postdec2,postdec1
 17505  0038B2                     l15125:
 17506                           
 17507                           ;nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
 17508  0038B2  EE20 F083          	lfsr	2,131
 17509  0038B6  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 17510  0038B8  26D9               	addwf	fsr2l,f,c
 17511  0038BA  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 17512  0038BC  22DA               	addwfc	fsr2h,f,c
 17513  0038BE  EE10 F006          	lfsr	1,6
 17514  0038C2  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 17515  0038C4  26E1               	addwf	fsr1l,f,c
 17516  0038C6  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 17517  0038C8  22E2               	addwfc	fsr1h,f,c
 17518  0038CA  006F FF7F FFE7     	movff	indf2,indf1
 17519  0038D0                     l1900:
 17520  0038D0  0012               	return		;funcret
 17521  0038D2                     __end_of_nwkRouteFrameReceived:
 17522                           	opt callstack 0
 17523                           
 17524 ;; *************** function _NWK_RouteNewEntry *****************
 17525 ;; Defined at:
 17526 ;;		line 105 in file "nwk/nwk_src/nwkRoute.c"
 17527 ;; Parameters:    Size  Location     Type
 17528 ;;		None
 17529 ;; Auto vars:     Size  Location     Type
 17530 ;;  i               1    5[COMRAM] unsigned char 
 17531 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
 17532 ;;		 -> nwkRouteTable(70), NULL(0), 
 17533 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
 17534 ;;		 -> nwkRouteTable(70), 
 17535 ;; Return value:  Size  Location     Type
 17536 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 17537 ;; Registers used:
 17538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17539 ;; Tracked objects:
 17540 ;;		On entry : 0/0
 17541 ;;		On exit  : 0/0
 17542 ;;		Unchanged: 0/0
 17543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17545 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17547 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17548 ;;Total ram usage:        9 bytes
 17549 ;; Hardware stack levels used:    1
 17550 ;; Hardware stack levels required when called:    7
 17551 ;; This function calls:
 17552 ;;		Nothing
 17553 ;; This function is called by:
 17554 ;;		_nwkRouteFrameReceived
 17555 ;;		_nwkRouteUpdateEntry
 17556 ;; This function uses a non-reentrant model
 17557 ;;
 17558                           
 17559                           	psect	text105
 17560  006736                     __ptext105:
 17561                           	opt callstack 0
 17562  006736                     _NWK_RouteNewEntry:
 17563                           	opt callstack 18
 17564  006736                     
 17565                           ;nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 17566  006736  0E80               	movlw	low _nwkRouteTable
 17567  006738  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
 17568  00673A  0E02               	movlw	high _nwkRouteTable
 17569  00673C  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
 17570                           
 17571                           ;nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
 17572  00673E  0E00               	movlw	0
 17573  006740  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
 17574  006742  0E00               	movlw	0
 17575  006744  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
 17576  006746                     
 17577                           ;nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
 17578  006746  0E00               	movlw	0
 17579  006748  6E06               	movwf	NWK_RouteNewEntry@i^0,c
 17580  00674A                     l14799:
 17581                           
 17582                           ;nwk/nwk_src/nwkRoute.c: 111:   {;nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed)
 17583  00674A  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 17584  006750  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 17585  006756  A0DF               	btfss	indf2,0,c
 17586  006758  EFB0  F033         	goto	u14041
 17587  00675C  EFB2  F033         	goto	u14040
 17588  006760                     u14041:
 17589  006760  EFB4  F033         	goto	l14803
 17590  006764                     u14040:
 17591  006764  EFEE  F033         	goto	l14813
 17592  006768                     l14803:
 17593                           
 17594                           ;nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
 17595  006768  EE20 F005          	lfsr	2,5
 17596  00676C  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 17597  00676E  26D9               	addwf	fsr2l,f,c
 17598  006770  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 17599  006772  22DA               	addwfc	fsr2h,f,c
 17600  006774  50DF               	movf	indf2,w,c
 17601  006776  A4D8               	btfss	status,2,c
 17602  006778  EFC0  F033         	goto	u14051
 17603  00677C  EFC2  F033         	goto	u14050
 17604  006780                     u14051:
 17605  006780  EFCA  F033         	goto	l14807
 17606  006784                     u14050:
 17607  006784                     
 17608                           ;nwk/nwk_src/nwkRoute.c: 116:     {;nwk/nwk_src/nwkRoute.c: 117:       entry = iter;
 17609  006784  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 17610  00678A  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 17611                           
 17612                           ;nwk/nwk_src/nwkRoute.c: 118:       break;
 17613  006790  EFFB  F033         	goto	l14819
 17614  006794                     l14807:
 17615                           
 17616                           ;nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank)
 17617  006794  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 17618  006796  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
 17619  006798  B4D8               	btfsc	status,2,c
 17620  00679A  EFD1  F033         	goto	u14061
 17621  00679E  EFD3  F033         	goto	u14060
 17622  0067A2                     u14061:
 17623  0067A2  EFE8  F033         	goto	l14811
 17624  0067A6                     u14060:
 17625  0067A6  EE20 F005          	lfsr	2,5
 17626  0067AA  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 17627  0067AC  26D9               	addwf	fsr2l,f,c
 17628  0067AE  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 17629  0067B0  22DA               	addwfc	fsr2h,f,c
 17630  0067B2  EE10 F005          	lfsr	1,5
 17631  0067B6  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 17632  0067B8  26E1               	addwf	fsr1l,f,c
 17633  0067BA  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 17634  0067BC  22E2               	addwfc	fsr1h,f,c
 17635  0067BE  50DE               	movf	postinc2,w,c
 17636  0067C0  5CE6               	subwf	postinc1,w,c
 17637  0067C2  B0D8               	btfsc	status,0,c
 17638  0067C4  EFE6  F033         	goto	u14071
 17639  0067C8  EFE8  F033         	goto	u14070
 17640  0067CC                     u14071:
 17641  0067CC  EFEE  F033         	goto	l14813
 17642  0067D0                     u14070:
 17643  0067D0                     l14811:
 17644                           
 17645                           ;nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
 17646  0067D0  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 17647  0067D6  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 17648  0067DC                     l14813:
 17649  0067DC  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
 17650  0067DE  0E07               	movlw	7
 17651  0067E0  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
 17652  0067E2  0E00               	movlw	0
 17653  0067E4  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
 17654  0067E6  0E09               	movlw	9
 17655  0067E8  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
 17656  0067EA  EFF9  F033         	goto	u14081
 17657  0067EE  EFFB  F033         	goto	u14080
 17658  0067F2                     u14081:
 17659  0067F2  EFA5  F033         	goto	l14799
 17660  0067F6                     u14080:
 17661  0067F6                     l14819:
 17662                           
 17663                           ;nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
 17664  0067F6  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 17665  0067FC  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 17666  006802  92DF               	bcf	indf2,1,c
 17667  006804                     
 17668                           ;nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
 17669  006804  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 17670  00680A  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 17671  006810  50DF               	movf	indf2,w,c
 17672  006812  0B0F               	andlw	-241
 17673  006814  0930               	iorlw	48
 17674  006816  6EDF               	movwf	indf2,c
 17675  006818                     
 17676                           ;nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
 17677  006818  EE20 F005          	lfsr	2,5
 17678  00681C  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 17679  00681E  26D9               	addwf	fsr2l,f,c
 17680  006820  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 17681  006822  22DA               	addwfc	fsr2h,f,c
 17682  006824  0E80               	movlw	128
 17683  006826  6EDF               	movwf	indf2,c
 17684  006828                     
 17685                           ;nwk/nwk_src/nwkRoute.c: 129:   return entry;
 17686  006828  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 17687  00682E  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 17688  006834  0012               	return		;funcret
 17689  006836                     __end_of_NWK_RouteNewEntry:
 17690                           	opt callstack 0
 17691                           
 17692 ;; *************** function _nwkRxHandleIndication *****************
 17693 ;; Defined at:
 17694 ;;		line 453 in file "nwk/nwk_src/nwkRx.c"
 17695 ;; Parameters:    Size  Location     Type
 17696 ;;  frame           2  125[BANK0 ] PTR struct NwkFrame_t
 17697 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17698 ;; Auto vars:     Size  Location     Type
 17699 ;;  ack             1  127[BANK0 ] _Bool 
 17700 ;; Return value:  Size  Location     Type
 17701 ;;                  1    wreg      void 
 17702 ;; Registers used:
 17703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17704 ;; Tracked objects:
 17705 ;;		On entry : 0/0
 17706 ;;		On exit  : 0/0
 17707 ;;		Unchanged: 0/0
 17708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17712 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17713 ;;Total ram usage:        5 bytes
 17714 ;; Hardware stack levels used:    1
 17715 ;; Hardware stack levels required when called:   18
 17716 ;; This function calls:
 17717 ;;		_nwkRxIndicateFrame
 17718 ;;		_nwkRxSendAck
 17719 ;; This function is called by:
 17720 ;;		_nwkRxTaskHandler
 17721 ;; This function uses a non-reentrant model
 17722 ;;
 17723                           
 17724                           	psect	text106
 17725  005DE4                     __ptext106:
 17726                           	opt callstack 0
 17727  005DE4                     _nwkRxHandleIndication:
 17728                           	opt callstack 9
 17729  005DE4                     
 17730                           ;nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);nwk/nwk_
      +                          src/nwkRx.c: 454: {;nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;nwk/nwk_src/nwkRx.c: 457:   n
      +                          wkRxAckControl = 0;
 17731  005DE4  0E00               	movlw	0
 17732  005DE6  0101               	movlb	1	; () banked
 17733  005DE8  6F67               	movwf	_nwkRxAckControl& (0+255),b
 17734  005DEA                     
 17735                           ; BSR set to: 1
 17736                           ;nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 17737  005DEA  0060  F374  F0C3   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 17738  005DF0  0060  F378  F0C4   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 17739  005DF6  ECAF  F017         	call	_nwkRxIndicateFrame	;wreg free
 17740  005DFA  0100               	movlb	0	; () banked
 17741  005DFC  6FDF               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17742  005DFE                     
 17743                           ; BSR set to: 0
 17744                           ;nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 17745  005DFE  EE20 F00B          	lfsr	2,11
 17746  005E02  51DD               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17747  005E04  26D9               	addwf	fsr2l,f,c
 17748  005E06  51DE               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17749  005E08  22DA               	addwfc	fsr2h,f,c
 17750  005E0A  B0DF               	btfsc	indf2,0,c
 17751  005E0C  EF0A  F02F         	goto	u16051
 17752  005E10  EF0C  F02F         	goto	u16050
 17753  005E14                     u16051:
 17754  005E14  EF0E  F02F         	goto	l16019
 17755  005E18                     u16050:
 17756  005E18                     
 17757                           ; BSR set to: 0
 17758                           ;nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 17759  005E18  0E00               	movlw	0
 17760  005E1A  6FDF               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17761  005E1C                     l16019:
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 17765  005E1C  EE20 F007          	lfsr	2,7
 17766  005E20  51DD               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17767  005E22  26D9               	addwf	fsr2l,f,c
 17768  005E24  51DE               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17769  005E26  22DA               	addwfc	fsr2h,f,c
 17770  005E28  28DE               	incf	postinc2,w,c
 17771  005E2A  E106               	bnz	u16061
 17772  005E2C  28DE               	incf	postinc2,w,c
 17773  005E2E  A4D8               	btfss	status,2,c
 17774  005E30  EF1C  F02F         	goto	u16061
 17775  005E34  EF1E  F02F         	goto	u16060
 17776  005E38                     u16061:
 17777  005E38  EF41  F02F         	goto	l16027
 17778  005E3C                     u16060:
 17779  005E3C                     
 17780                           ; BSR set to: 0
 17781  005E3C  EE20 F00F          	lfsr	2,15
 17782  005E40  51DD               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17783  005E42  26D9               	addwf	fsr2l,f,c
 17784  005E44  51DE               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17785  005E46  22DA               	addwfc	fsr2h,f,c
 17786  005E48  0101               	movlb	1	; () banked
 17787  005E4A  5100               	movf	_nwkIb& (0+255),w,b
 17788  005E4C  18DE               	xorwf	postinc2,w,c
 17789  005E4E  E107               	bnz	u16071
 17790  005E50  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17791  005E52  18DE               	xorwf	postinc2,w,c
 17792  005E54  A4D8               	btfss	status,2,c
 17793  005E56  EF2F  F02F         	goto	u16071
 17794  005E5A  EF31  F02F         	goto	u16070
 17795  005E5E                     u16071:
 17796  005E5E  EF41  F02F         	goto	l16027
 17797  005E62                     u16070:
 17798  005E62                     
 17799                           ; BSR set to: 1
 17800  005E62  0100               	movlb	0	; () banked
 17801  005E64  EE20 F00B          	lfsr	2,11
 17802  005E68  51DD               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17803  005E6A  26D9               	addwf	fsr2l,f,c
 17804  005E6C  51DE               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17805  005E6E  22DA               	addwfc	fsr2h,f,c
 17806  005E70  B6DF               	btfsc	indf2,3,c
 17807  005E72  EF3D  F02F         	goto	u16081
 17808  005E76  EF3F  F02F         	goto	u16080
 17809  005E7A                     u16081:
 17810  005E7A  EF41  F02F         	goto	l16027
 17811  005E7E                     u16080:
 17812  005E7E                     
 17813                           ; BSR set to: 0
 17814                           ;nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 17815  005E7E  0E01               	movlw	1
 17816  005E80  6FDF               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17817  005E82                     l16027:
 17818                           
 17819                           ;nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 17820  005E82  0100               	movlb	0	; () banked
 17821  005E84  EE20 F005          	lfsr	2,5
 17822  005E88  51DD               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 17823  005E8A  26D9               	addwf	fsr2l,f,c
 17824  005E8C  51DE               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 17825  005E8E  22DA               	addwfc	fsr2h,f,c
 17826  005E90  28DE               	incf	postinc2,w,c
 17827  005E92  E106               	bnz	u16091
 17828  005E94  28DE               	incf	postinc2,w,c
 17829  005E96  A4D8               	btfss	status,2,c
 17830  005E98  EF50  F02F         	goto	u16091
 17831  005E9C  EF52  F02F         	goto	u16090
 17832  005EA0                     u16091:
 17833  005EA0  EF54  F02F         	goto	l16031
 17834  005EA4                     u16090:
 17835  005EA4                     
 17836                           ; BSR set to: 0
 17837                           ;nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 17838  005EA4  0E00               	movlw	0
 17839  005EA6  6FDF               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17840  005EA8                     l16031:
 17841                           
 17842                           ; BSR set to: 0
 17843                           ;nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 17844  005EA8  0101               	movlb	1	; () banked
 17845  005EAA  2900               	incf	_nwkIb& (0+255),w,b
 17846  005EAC  E106               	bnz	u16101
 17847  005EAE  2901               	incf	(_nwkIb+1)& (0+255),w,b
 17848  005EB0  A4D8               	btfss	status,2,c
 17849  005EB2  EF5D  F02F         	goto	u16101
 17850  005EB6  EF5F  F02F         	goto	u16100
 17851  005EBA                     u16101:
 17852  005EBA  EF62  F02F         	goto	l2155
 17853  005EBE                     u16100:
 17854  005EBE                     
 17855                           ; BSR set to: 1
 17856                           ;nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 17857  005EBE  0E00               	movlw	0
 17858  005EC0  0100               	movlb	0	; () banked
 17859  005EC2  6FDF               	movwf	nwkRxHandleIndication@ack& (0+255),b
 17860  005EC4                     l2155:
 17861                           
 17862                           ;nwk/nwk_src/nwkRx.c: 474:   if (ack)
 17863  005EC4  0100               	movlb	0	; () banked
 17864  005EC6  51DF               	movf	nwkRxHandleIndication@ack& (0+255),w,b
 17865  005EC8  B4D8               	btfsc	status,2,c
 17866  005ECA  EF69  F02F         	goto	u16111
 17867  005ECE  EF6B  F02F         	goto	u16110
 17868  005ED2                     u16111:
 17869  005ED2  EF73  F02F         	goto	l16037
 17870  005ED6                     u16110:
 17871  005ED6                     
 17872                           ; BSR set to: 0
 17873                           ;nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 17874  005ED6  0060  F374  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 17875  005EDC  0060  F378  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 17876  005EE2  EC0F  F031         	call	_nwkRxSendAck	;wreg free
 17877  005EE6                     l16037:
 17878                           
 17879                           ;nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 17880  005EE6  0060  F377  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 17881  005EEC  0060  F37B  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 17882  005EF2  0E24               	movlw	36
 17883  005EF4  6EDF               	movwf	indf2,c
 17884  005EF6  0012               	return		;funcret
 17885  005EF8                     __end_of_nwkRxHandleIndication:
 17886                           	opt callstack 0
 17887                           
 17888 ;; *************** function _nwkRxSendAck *****************
 17889 ;; Defined at:
 17890 ;;		line 136 in file "nwk/nwk_src/nwkRx.c"
 17891 ;; Parameters:    Size  Location     Type
 17892 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
 17893 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17894 ;; Auto vars:     Size  Location     Type
 17895 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
 17896 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17897 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
 17898 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 17899 ;; Return value:  Size  Location     Type
 17900 ;;                  1    wreg      void 
 17901 ;; Registers used:
 17902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17903 ;; Tracked objects:
 17904 ;;		On entry : 0/0
 17905 ;;		On exit  : 0/0
 17906 ;;		Unchanged: 0/0
 17907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17909 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17912 ;;Total ram usage:        6 bytes
 17913 ;; Hardware stack levels used:    1
 17914 ;; Hardware stack levels required when called:   11
 17915 ;; This function calls:
 17916 ;;		_nwkFrameAlloc
 17917 ;;		_nwkFrameCommandInit
 17918 ;;		_nwkTxFrame
 17919 ;; This function is called by:
 17920 ;;		_nwkRxHandleIndication
 17921 ;; This function uses a non-reentrant model
 17922 ;;
 17923                           
 17924                           	psect	text107
 17925  00621E                     __ptext107:
 17926                           	opt callstack 0
 17927  00621E                     _nwkRxSendAck:
 17928                           	opt callstack 15
 17929  00621E                     
 17930                           ;nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);nwk/nwk_src/nwkRx
      +                          .c: 137: {;nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;nwk/nwk_src/nwkRx.c: 139:   NwkC
      +                          ommandAck_t *command;;nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack = nwkFrameAlloc
      +                          ()))
 17931  00621E  ECFE  F038         	call	_nwkFrameAlloc	;wreg free
 17932  006222  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 17933  006228  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 17934  00622E  502E               	movf	nwkRxSendAck@ack^0,w,c
 17935  006230  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
 17936  006232  A4D8               	btfss	status,2,c
 17937  006234  EF1E  F031         	goto	u14571
 17938  006238  EF20  F031         	goto	u14570
 17939  00623C                     u14571:
 17940  00623C  EF22  F031         	goto	l15177
 17941  006240                     u14570:
 17942  006240  EF93  F031         	goto	l2062
 17943  006244                     l15177:
 17944                           
 17945                           ;nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 17946  006244  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 17947  00624A  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 17948  006250  EC73  F049         	call	_nwkFrameCommandInit	;wreg free
 17949  006254                     
 17950                           ;nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 17951  006254  EE20 F001          	lfsr	2,1
 17952  006258  502E               	movf	nwkRxSendAck@ack^0,w,c
 17953  00625A  26D9               	addwf	fsr2l,f,c
 17954  00625C  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17955  00625E  22DA               	addwfc	fsr2h,f,c
 17956  006260  0E03               	movlw	3
 17957  006262  26DF               	addwf	indf2,f,c
 17958  006264                     
 17959                           ;nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
 17960  006264  EE20 F087          	lfsr	2,135
 17961  006268  502E               	movf	nwkRxSendAck@ack^0,w,c
 17962  00626A  26D9               	addwf	fsr2l,f,c
 17963  00626C  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17964  00626E  22DA               	addwfc	fsr2h,f,c
 17965  006270  0E00               	movlw	0
 17966  006272  6EDE               	movwf	postinc2,c
 17967  006274  0E00               	movlw	0
 17968  006276  6EDD               	movwf	postdec2,c
 17969  006278                     
 17970                           ;nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.security
      +                          ;
 17971  006278  EE20 F00B          	lfsr	2,11
 17972  00627C  502A               	movf	nwkRxSendAck@frame^0,w,c
 17973  00627E  26D9               	addwf	fsr2l,f,c
 17974  006280  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 17975  006282  22DA               	addwfc	fsr2h,f,c
 17976  006284  EE10 F00B          	lfsr	1,11
 17977  006288  502E               	movf	nwkRxSendAck@ack^0,w,c
 17978  00628A  26E1               	addwf	fsr1l,f,c
 17979  00628C  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17980  00628E  22E2               	addwfc	fsr1h,f,c
 17981  006290  B2DF               	btfsc	indf2,1,c
 17982  006292  D002               	bra	u14585
 17983  006294  92E7               	bcf	indf1,1,c
 17984  006296  D001               	bra	u14586
 17985  006298                     u14585:
 17986  006298  82E7               	bsf	indf1,1,c
 17987  00629A                     u14586:
 17988  00629A                     
 17989                           ;nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 17990  00629A  EE20 F00D          	lfsr	2,13
 17991  00629E  502A               	movf	nwkRxSendAck@frame^0,w,c
 17992  0062A0  26D9               	addwf	fsr2l,f,c
 17993  0062A2  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 17994  0062A4  22DA               	addwfc	fsr2h,f,c
 17995  0062A6  EE10 F00F          	lfsr	1,15
 17996  0062AA  502E               	movf	nwkRxSendAck@ack^0,w,c
 17997  0062AC  26E1               	addwf	fsr1l,f,c
 17998  0062AE  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 17999  0062B0  22E2               	addwfc	fsr1h,f,c
 18000  0062B2  006F FF7B FFE6     	movff	postinc2,postinc1
 18001  0062B8  006F FF77 FFE5     	movff	postdec2,postdec1
 18002  0062BE                     
 18003                           ;nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 18004  0062BE  EE20 F081          	lfsr	2,129
 18005  0062C2  502E               	movf	nwkRxSendAck@ack^0,w,c
 18006  0062C4  26D9               	addwf	fsr2l,f,c
 18007  0062C6  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18008  0062C8  22DA               	addwfc	fsr2h,f,c
 18009  0062CA  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
 18010  0062D0  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
 18011  0062D6                     
 18012                           ;nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 18013  0062D6  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
 18014  0062DC  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 18015  0062E2  0E00               	movlw	0
 18016  0062E4  6EDF               	movwf	indf2,c
 18017  0062E6                     
 18018                           ;nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 18019  0062E6  EE20 F002          	lfsr	2,2
 18020  0062EA  502C               	movf	nwkRxSendAck@command^0,w,c
 18021  0062EC  26D9               	addwf	fsr2l,f,c
 18022  0062EE  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 18023  0062F0  22DA               	addwfc	fsr2h,f,c
 18024  0062F2  0060  F59F  FFDF   	movff	_nwkRxAckControl,indf2
 18025  0062F8                     
 18026                           ;nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 18027  0062F8  EE20 F00C          	lfsr	2,12
 18028  0062FC  502A               	movf	nwkRxSendAck@frame^0,w,c
 18029  0062FE  26D9               	addwf	fsr2l,f,c
 18030  006300  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18031  006302  22DA               	addwfc	fsr2h,f,c
 18032  006304  EE10 F001          	lfsr	1,1
 18033  006308  502C               	movf	nwkRxSendAck@command^0,w,c
 18034  00630A  26E1               	addwf	fsr1l,f,c
 18035  00630C  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 18036  00630E  22E2               	addwfc	fsr1h,f,c
 18037  006310  006F FF7F FFE7     	movff	indf2,indf1
 18038  006316                     
 18039                           ;nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 18040  006316  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 18041  00631C  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 18042  006322  EC60  F01F         	call	_nwkTxFrame	;wreg free
 18043  006326                     l2062:
 18044  006326  0012               	return		;funcret
 18045  006328                     __end_of_nwkRxSendAck:
 18046                           	opt callstack 0
 18047                           
 18048 ;; *************** function _nwkRxIndicateFrame *****************
 18049 ;; Defined at:
 18050 ;;		line 423 in file "nwk/nwk_src/nwkRx.c"
 18051 ;; Parameters:    Size  Location     Type
 18052 ;;  frame           2   99[BANK0 ] PTR struct NwkFrame_t
 18053 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18054 ;; Auto vars:     Size  Location     Type
 18055 ;;  ind            12  113[BANK0 ] struct NWK_DataInd_t
 18056 ;;  header          2  111[BANK0 ] PTR __pack struct NwkFra
 18057 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18058 ;; Return value:  Size  Location     Type
 18059 ;;                  1    wreg      _Bool 
 18060 ;; Registers used:
 18061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18062 ;; Tracked objects:
 18063 ;;		On entry : 0/0
 18064 ;;		On exit  : 0/0
 18065 ;;		Unchanged: 0/0
 18066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18068 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18069 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18070 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18071 ;;Total ram usage:       26 bytes
 18072 ;; Hardware stack levels used:    1
 18073 ;; Hardware stack levels required when called:   17
 18074 ;; This function calls:
 18075 ;;		_appDataInd
 18076 ;;		_nwkRxServiceDataInd
 18077 ;;		nwkFrame@nwkFramePayloadSize
 18078 ;; This function is called by:
 18079 ;;		_nwkRxHandleIndication
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083                           	psect	text108
 18084  002F5E                     __ptext108:
 18085                           	opt callstack 0
 18086  002F5E                     _nwkRxIndicateFrame:
 18087                           	opt callstack 9
 18088  002F5E                     
 18089                           ;nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);nwk/nwk_sr
      +                          c/nwkRx.c: 424: {;nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame->header;
 18090  002F5E  0E02               	movlw	2
 18091  002F60  0100               	movlb	0	; () banked
 18092  002F62  25C3               	addwf	nwkRxIndicateFrame@frame& (0+255),w,b
 18093  002F64  6FCF               	movwf	nwkRxIndicateFrame@header& (0+255),b
 18094  002F66  0E00               	movlw	0
 18095  002F68  21C4               	addwfc	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18096  002F6A  6FD0               	movwf	(nwkRxIndicateFrame@header+1)& (0+255),b
 18097  002F6C                     
 18098                           ; BSR set to: 0
 18099                           ;nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;nwk/nwk_src/nwkRx.c: 428:   if (((void*)
      +                          0) == nwkIb.endpoint[header->nwkDstEndpoint])
 18100  002F6C  EE20 F00F          	lfsr	2,15
 18101  002F70  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18102  002F72  26D9               	addwf	fsr2l,f,c
 18103  002F74  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18104  002F76  22DA               	addwfc	fsr2h,f,c
 18105  002F78  38DF               	swapf	223,w,c
 18106  002F7A  0B0F               	andlw	15
 18107  002F7C  6FC5               	movwf	??_nwkRxIndicateFrame& (0+255),b
 18108  002F7E  51C5               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 18109  002F80  0D02               	mullw	2
 18110  002F82  0E06               	movlw	low (_nwkIb+6)
 18111  002F84  24F3               	addwf	243,w,c
 18112  002F86  6ED9               	movwf	fsr2l,c
 18113  002F88  0E01               	movlw	high (_nwkIb+6)
 18114  002F8A  20F4               	addwfc	prodh,w,c
 18115  002F8C  6EDA               	movwf	fsr2h,c
 18116  002F8E  50DE               	movf	postinc2,w,c
 18117  002F90  10DE               	iorwf	postinc2,w,c
 18118  002F92  A4D8               	btfss	status,2,c
 18119  002F94  EFCE  F017         	goto	u14711
 18120  002F98  EFD0  F017         	goto	u14710
 18121  002F9C                     u14711:
 18122  002F9C  EFD3  F017         	goto	l15305
 18123  002FA0                     u14710:
 18124  002FA0                     
 18125                           ; BSR set to: 0
 18126                           ;nwk/nwk_src/nwkRx.c: 429:     return 0;
 18127  002FA0  0E00               	movlw	0
 18128  002FA2  EFE3  F018         	goto	l2125
 18129  002FA6                     l15305:
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 18133  002FA6  EE20 F00B          	lfsr	2,11
 18134  002FAA  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18135  002FAC  26D9               	addwf	fsr2l,f,c
 18136  002FAE  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18137  002FB0  22DA               	addwfc	fsr2h,f,c
 18138  002FB2  006F FF78  F0D1    	movff	postinc2,nwkRxIndicateFrame@ind
 18139  002FB8  006F FF74  F0D2    	movff	postdec2,nwkRxIndicateFrame@ind+1
 18140                           
 18141                           ;nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 18142  002FBE  EE20 F00D          	lfsr	2,13
 18143  002FC2  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18144  002FC4  26D9               	addwf	fsr2l,f,c
 18145  002FC6  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18146  002FC8  22DA               	addwfc	fsr2h,f,c
 18147  002FCA  006F FF78  F0D3    	movff	postinc2,nwkRxIndicateFrame@ind+2
 18148  002FD0  006F FF74  F0D4    	movff	postdec2,nwkRxIndicateFrame@ind+3
 18149                           
 18150                           ;nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 18151  002FD6  EE20 F00F          	lfsr	2,15
 18152  002FDA  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18153  002FDC  26D9               	addwf	fsr2l,f,c
 18154  002FDE  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18155  002FE0  22DA               	addwfc	fsr2h,f,c
 18156  002FE2  50DF               	movf	223,w,c
 18157  002FE4  0B0F               	andlw	15
 18158  002FE6  6FD5               	movwf	(nwkRxIndicateFrame@ind+4)& (0+255),b
 18159                           
 18160                           ;nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 18161  002FE8  EE20 F00F          	lfsr	2,15
 18162  002FEC  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18163  002FEE  26D9               	addwf	fsr2l,f,c
 18164  002FF0  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18165  002FF2  22DA               	addwfc	fsr2h,f,c
 18166  002FF4  38DF               	swapf	223,w,c
 18167  002FF6  0B0F               	andlw	15
 18168  002FF8  6FD6               	movwf	(nwkRxIndicateFrame@ind+5)& (0+255),b
 18169                           
 18170                           ;nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 18171  002FFA  EE20 F081          	lfsr	2,129
 18172  002FFE  51C3               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18173  003000  26D9               	addwf	fsr2l,f,c
 18174  003002  51C4               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18175  003004  22DA               	addwfc	fsr2h,f,c
 18176  003006  006F FF78  F0D8    	movff	postinc2,nwkRxIndicateFrame@ind+7
 18177  00300C  006F FF74  F0D9    	movff	postdec2,nwkRxIndicateFrame@ind+8
 18178  003012                     
 18179                           ; BSR set to: 0
 18180                           ;nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 18181  003012  0060  F30C  F002   	movff	nwkRxIndicateFrame@frame,nwkFrame@nwkFramePayloadSize@frame_4442
 18182  003018  0060  F310  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFrame@nwkFramePayloadSize@frame_4442+1
 18183  00301E  ECE2  F04B         	call	nwkFrame@nwkFramePayloadSize	;wreg free
 18184  003022  0100               	movlb	0	; () banked
 18185  003024  6FDA               	movwf	(nwkRxIndicateFrame@ind+9)& (0+255),b
 18186  003026                     
 18187                           ; BSR set to: 0
 18188                           ;nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 18189  003026  EE20 F083          	lfsr	2,131
 18190  00302A  51C3               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18191  00302C  26D9               	addwf	fsr2l,f,c
 18192  00302E  51C4               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18193  003030  22DA               	addwfc	fsr2h,f,c
 18194  003032  50DF               	movf	indf2,w,c
 18195  003034  6FDB               	movwf	(nwkRxIndicateFrame@ind+10)& (0+255),b
 18196  003036                     
 18197                           ; BSR set to: 0
 18198                           ;nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 18199  003036  EE20 F084          	lfsr	2,132
 18200  00303A  51C3               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18201  00303C  26D9               	addwf	fsr2l,f,c
 18202  00303E  51C4               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18203  003040  22DA               	addwfc	fsr2h,f,c
 18204  003042  50DF               	movf	indf2,w,c
 18205  003044  6FDC               	movwf	(nwkRxIndicateFrame@ind+11)& (0+255),b
 18206  003046                     
 18207                           ; BSR set to: 0
 18208                           ;nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_ACK
      +                          _REQUESTED : 0;
 18209  003046  EE20 F009          	lfsr	2,9
 18210  00304A  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18211  00304C  26D9               	addwf	fsr2l,f,c
 18212  00304E  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18213  003050  22DA               	addwfc	fsr2h,f,c
 18214  003052  0E00               	movlw	0
 18215  003054  B0DF               	btfsc	indf2,0,c
 18216  003056  0E01               	movlw	1
 18217  003058  6FD7               	movwf	(nwkRxIndicateFrame@ind+6)& (0+255),b
 18218  00305A                     
 18219                           ; BSR set to: 0
 18220                           ;nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_SECU
      +                          RED : 0;
 18221  00305A  EE20 F009          	lfsr	2,9
 18222  00305E  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18223  003060  26D9               	addwf	fsr2l,f,c
 18224  003062  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18225  003064  22DA               	addwfc	fsr2h,f,c
 18226  003066  B2DF               	btfsc	indf2,1,c
 18227  003068  EF38  F018         	goto	u14721
 18228  00306C  EF3A  F018         	goto	u14720
 18229  003070                     u14721:
 18230  003070  EF3E  F018         	goto	l15319
 18231  003074                     u14720:
 18232  003074                     
 18233                           ; BSR set to: 0
 18234  003074  0E00               	movlw	0
 18235  003076  6FC9               	movwf	_nwkRxIndicateFrame$4889& (0+255),b
 18236  003078  EF40  F018         	goto	l15321
 18237  00307C                     l15319:
 18238                           
 18239                           ; BSR set to: 0
 18240  00307C  0E02               	movlw	2
 18241  00307E  6FC9               	movwf	_nwkRxIndicateFrame$4889& (0+255),b
 18242  003080                     l15321:
 18243                           
 18244                           ; BSR set to: 0
 18245  003080  51C9               	movf	_nwkRxIndicateFrame$4889& (0+255),w,b
 18246  003082  13D7               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 18247  003084                     
 18248                           ; BSR set to: 0
 18249                           ;nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_LIN
      +                          K_LOCAL : 0;
 18250  003084  EE20 F009          	lfsr	2,9
 18251  003088  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18252  00308A  26D9               	addwf	fsr2l,f,c
 18253  00308C  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18254  00308E  22DA               	addwfc	fsr2h,f,c
 18255  003090  B4DF               	btfsc	indf2,2,c
 18256  003092  EF4D  F018         	goto	u14731
 18257  003096  EF4F  F018         	goto	u14730
 18258  00309A                     u14731:
 18259  00309A  EF53  F018         	goto	l15327
 18260  00309E                     u14730:
 18261  00309E                     
 18262                           ; BSR set to: 0
 18263  00309E  0E00               	movlw	0
 18264  0030A0  6FCA               	movwf	_nwkRxIndicateFrame$4890& (0+255),b
 18265  0030A2  EF55  F018         	goto	l15329
 18266  0030A6                     l15327:
 18267                           
 18268                           ; BSR set to: 0
 18269  0030A6  0E20               	movlw	32
 18270  0030A8  6FCA               	movwf	_nwkRxIndicateFrame$4890& (0+255),b
 18271  0030AA                     l15329:
 18272                           
 18273                           ; BSR set to: 0
 18274  0030AA  51CA               	movf	_nwkRxIndicateFrame$4890& (0+255),w,b
 18275  0030AC  13D7               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 18276  0030AE                     
 18277                           ; BSR set to: 0
 18278                           ;nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_MUL
      +                          TICAST : 0;
 18279  0030AE  EE20 F009          	lfsr	2,9
 18280  0030B2  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18281  0030B4  26D9               	addwf	fsr2l,f,c
 18282  0030B6  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18283  0030B8  22DA               	addwfc	fsr2h,f,c
 18284  0030BA  B6DF               	btfsc	indf2,3,c
 18285  0030BC  EF62  F018         	goto	u14741
 18286  0030C0  EF64  F018         	goto	u14740
 18287  0030C4                     u14741:
 18288  0030C4  EF68  F018         	goto	l15335
 18289  0030C8                     u14740:
 18290  0030C8                     
 18291                           ; BSR set to: 0
 18292  0030C8  0E00               	movlw	0
 18293  0030CA  6FCB               	movwf	_nwkRxIndicateFrame$4891& (0+255),b
 18294  0030CC  EF6A  F018         	goto	l15337
 18295  0030D0                     l15335:
 18296                           
 18297                           ; BSR set to: 0
 18298  0030D0  0E40               	movlw	64
 18299  0030D2  6FCB               	movwf	_nwkRxIndicateFrame$4891& (0+255),b
 18300  0030D4                     l15337:
 18301                           
 18302                           ; BSR set to: 0
 18303  0030D4  51CB               	movf	_nwkRxIndicateFrame$4891& (0+255),w,b
 18304  0030D6  13D7               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 18305  0030D8                     
 18306                           ; BSR set to: 0
 18307                           ;nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_OPT
      +                          _BROADCAST : 0;
 18308  0030D8  EE20 F00D          	lfsr	2,13
 18309  0030DC  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18310  0030DE  26D9               	addwf	fsr2l,f,c
 18311  0030E0  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18312  0030E2  22DA               	addwfc	fsr2h,f,c
 18313  0030E4  28DE               	incf	postinc2,w,c
 18314  0030E6  E108               	bnz	u14750
 18315  0030E8  28DE               	incf	postinc2,w,c
 18316  0030EA  B4D8               	btfsc	status,2,c
 18317  0030EC  EF7A  F018         	goto	u14751
 18318  0030F0  EF7C  F018         	goto	u14750
 18319  0030F4                     u14751:
 18320  0030F4  EF80  F018         	goto	l15343
 18321  0030F8                     u14750:
 18322  0030F8                     
 18323                           ; BSR set to: 0
 18324  0030F8  0E00               	movlw	0
 18325  0030FA  6FCC               	movwf	_nwkRxIndicateFrame$4892& (0+255),b
 18326  0030FC  EF82  F018         	goto	l15345
 18327  003100                     l15343:
 18328                           
 18329                           ; BSR set to: 0
 18330  003100  0E04               	movlw	4
 18331  003102  6FCC               	movwf	_nwkRxIndicateFrame$4892& (0+255),b
 18332  003104                     l15345:
 18333                           
 18334                           ; BSR set to: 0
 18335  003104  51CC               	movf	_nwkRxIndicateFrame$4892& (0+255),w,b
 18336  003106  13D7               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 18337  003108                     
 18338                           ; BSR set to: 0
 18339                           ;nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr) ?
      +                           NWK_IND_OPT_LOCAL : 0;
 18340  003108  EE20 F007          	lfsr	2,7
 18341  00310C  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18342  00310E  26D9               	addwf	fsr2l,f,c
 18343  003110  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18344  003112  22DA               	addwfc	fsr2h,f,c
 18345  003114  EE10 F00B          	lfsr	1,11
 18346  003118  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18347  00311A  26E1               	addwf	fsr1l,f,c
 18348  00311C  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18349  00311E  22E2               	addwfc	fsr1h,f,c
 18350  003120  50DE               	movf	postinc2,w,c
 18351  003122  18E6               	xorwf	postinc1,w,c
 18352  003124  E109               	bnz	u14760
 18353  003126  50DE               	movf	postinc2,w,c
 18354  003128  18E6               	xorwf	postinc1,w,c
 18355  00312A  B4D8               	btfsc	status,2,c
 18356  00312C  EF9A  F018         	goto	u14761
 18357  003130  EF9C  F018         	goto	u14760
 18358  003134                     u14761:
 18359  003134  EFA0  F018         	goto	l15351
 18360  003138                     u14760:
 18361  003138                     
 18362                           ; BSR set to: 0
 18363  003138  0E00               	movlw	0
 18364  00313A  6FCD               	movwf	_nwkRxIndicateFrame$4893& (0+255),b
 18365  00313C  EFA2  F018         	goto	l15353
 18366  003140                     l15351:
 18367                           
 18368                           ; BSR set to: 0
 18369  003140  0E08               	movlw	8
 18370  003142  6FCD               	movwf	_nwkRxIndicateFrame$4893& (0+255),b
 18371  003144                     l15353:
 18372                           
 18373                           ; BSR set to: 0
 18374  003144  51CD               	movf	_nwkRxIndicateFrame$4893& (0+255),w,b
 18375  003146  13D7               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 18376  003148                     
 18377                           ; BSR set to: 0
 18378                           ;nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND_OP
      +                          T_BROADCAST_PAN_ID : 0;
 18379  003148  EE20 F003          	lfsr	2,3
 18380  00314C  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18381  00314E  26D9               	addwf	fsr2l,f,c
 18382  003150  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18383  003152  22DA               	addwfc	fsr2h,f,c
 18384  003154  28DE               	incf	postinc2,w,c
 18385  003156  E108               	bnz	u14770
 18386  003158  28DE               	incf	postinc2,w,c
 18387  00315A  B4D8               	btfsc	status,2,c
 18388  00315C  EFB2  F018         	goto	u14771
 18389  003160  EFB4  F018         	goto	u14770
 18390  003164                     u14771:
 18391  003164  EFB8  F018         	goto	l15359
 18392  003168                     u14770:
 18393  003168                     
 18394                           ; BSR set to: 0
 18395  003168  0E00               	movlw	0
 18396  00316A  6FCE               	movwf	_nwkRxIndicateFrame$4894& (0+255),b
 18397  00316C  EFBA  F018         	goto	l15361
 18398  003170                     l15359:
 18399                           
 18400                           ; BSR set to: 0
 18401  003170  0E10               	movlw	16
 18402  003172  6FCE               	movwf	_nwkRxIndicateFrame$4894& (0+255),b
 18403  003174                     l15361:
 18404                           
 18405                           ; BSR set to: 0
 18406  003174  51CE               	movf	_nwkRxIndicateFrame$4894& (0+255),w,b
 18407  003176  13D7               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 18408  003178                     
 18409                           ; BSR set to: 0
 18410                           ;nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 18411  003178  0ED1               	movlw	low nwkRxIndicateFrame@ind
 18412  00317A  6F7D               	movwf	nwkRxServiceDataInd@ind& (0+255),b
 18413  00317C  0E00               	movlw	high nwkRxIndicateFrame@ind
 18414  00317E  6F7E               	movwf	(nwkRxServiceDataInd@ind+1)& (0+255),b
 18415  003180  EE20 F00F          	lfsr	2,15
 18416  003184  51CF               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18417  003186  26D9               	addwf	fsr2l,f,c
 18418  003188  51D0               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18419  00318A  22DA               	addwfc	fsr2h,f,c
 18420  00318C  38DF               	swapf	223,w,c
 18421  00318E  0B0F               	andlw	15
 18422  003190  6FC5               	movwf	??_nwkRxIndicateFrame& (0+255),b
 18423  003192  51C5               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 18424  003194  0D02               	mullw	2
 18425  003196  0E06               	movlw	low (_nwkIb+6)
 18426  003198  24F3               	addwf	243,w,c
 18427  00319A  6ED9               	movwf	fsr2l,c
 18428  00319C  0E01               	movlw	high (_nwkIb+6)
 18429  00319E  20F4               	addwfc	prodh,w,c
 18430  0031A0  6EDA               	movwf	fsr2h,c
 18431  0031A2  006F FF78  F0C6    	movff	postinc2,??_nwkRxIndicateFrame+1
 18432  0031A8  006F FF74  F0C7    	movff	postdec2,??_nwkRxIndicateFrame+2
 18433  0031AE  D802               	call	u14788
 18434  0031B0  EFE3  F018         	goto	u14789
 18435  0031B4                     u14788:
 18436  0031B4  0005               	push	
 18437  0031B6  6EFA               	movwf	pclath,c
 18438  0031B8  51C6               	movf	(??_nwkRxIndicateFrame+1)& (0+255),w,b
 18439  0031BA  6EFD               	movwf	tosl,c
 18440  0031BC  51C7               	movf	(??_nwkRxIndicateFrame+2)& (0+255),w,b
 18441  0031BE  6EFE               	movwf	tosh,c
 18442  0031C0  6AFF               	clrf	tosu,c
 18443  0031C2  50FA               	movf	pclath,w,c
 18444  0031C4  0012               	return		;indir
 18445  0031C6                     u14789:
 18446  0031C6                     l2125:
 18447  0031C6  0012               	return		;funcret
 18448  0031C8                     __end_of_nwkRxIndicateFrame:
 18449                           	opt callstack 0
 18450                           
 18451 ;; *************** function nwkFrame@nwkFramePayloadSize *****************
 18452 ;; Defined at:
 18453 ;;		line 134 in file "nwk/nwk_inc\nwkFrame.h"
 18454 ;; Parameters:    Size  Location     Type
 18455 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 18456 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18457 ;; Auto vars:     Size  Location     Type
 18458 ;;		None
 18459 ;; Return value:  Size  Location     Type
 18460 ;;                  1    wreg      unsigned char 
 18461 ;; Registers used:
 18462 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18463 ;; Tracked objects:
 18464 ;;		On entry : 0/0
 18465 ;;		On exit  : 0/0
 18466 ;;		Unchanged: 0/0
 18467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18472 ;;Total ram usage:        4 bytes
 18473 ;; Hardware stack levels used:    1
 18474 ;; Hardware stack levels required when called:    7
 18475 ;; This function calls:
 18476 ;;		Nothing
 18477 ;; This function is called by:
 18478 ;;		_nwkRxIndicateFrame
 18479 ;; This function uses a non-reentrant model
 18480 ;;
 18481                           
 18482                           	psect	text109
 18483  0097C4                     __ptext109:
 18484                           	opt callstack 0
 18485  0097C4                     nwkFrame@nwkFramePayloadSize:
 18486                           	opt callstack 18
 18487  0097C4  EE20 F081          	lfsr	2,129
 18488  0097C8  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4442^0,w,c
 18489  0097CA  26D9               	addwf	fsr2l,f,c
 18490  0097CC  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4442+1)^0,w,c
 18491  0097CE  22DA               	addwfc	fsr2h,f,c
 18492  0097D0  50DF               	movf	indf2,w,c
 18493  0097D2  6E04               	movwf	??strspn@nwkFrame@nwkFramePayloadSize^0,c
 18494  0097D4  EE20 F001          	lfsr	2,1
 18495  0097D8  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4442^0,w,c
 18496  0097DA  26D9               	addwf	fsr2l,f,c
 18497  0097DC  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4442+1)^0,w,c
 18498  0097DE  22DA               	addwfc	fsr2h,f,c
 18499  0097E0  50DF               	movf	indf2,w,c
 18500  0097E2  6E05               	movwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,c
 18501  0097E4  5004               	movf	??strspn@nwkFrame@nwkFramePayloadSize^0,w,c
 18502  0097E6  5C05               	subwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,w,c
 18503  0097E8  2402               	addwf	nwkFrame@nwkFramePayloadSize@frame_4442^0,w,c
 18504  0097EA  0F02               	addlw	2
 18505  0097EC  0012               	return		;funcret
 18506  0097EE                     __end_ofnwkFrame@nwkFramePayloadSize:
 18507                           	opt callstack 0
 18508                           
 18509 ;; *************** function _appDataInd *****************
 18510 ;; Defined at:
 18511 ;;		line 28 in file "app/app_src/application.c"
 18512 ;; Parameters:    Size  Location     Type
 18513 ;;  ind             2   29[BANK0 ] PTR struct NWK_DataInd_t
 18514 ;;		 -> nwkRxIndicateFrame@ind(12), 
 18515 ;; Auto vars:     Size  Location     Type
 18516 ;;  i               1   98[BANK0 ] unsigned char 
 18517 ;;  data           65   31[BANK0 ] unsigned char [65]
 18518 ;;  dataptr         2   96[BANK0 ] PTR unsigned char 
 18519 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18520 ;; Return value:  Size  Location     Type
 18521 ;;                  1    wreg      _Bool 
 18522 ;; Registers used:
 18523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18524 ;; Tracked objects:
 18525 ;;		On entry : 0/0
 18526 ;;		On exit  : 0/0
 18527 ;;		Unchanged: 0/0
 18528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18530 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18532 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18533 ;;Total ram usage:       70 bytes
 18534 ;; Hardware stack levels used:    1
 18535 ;; Hardware stack levels required when called:   16
 18536 ;; This function calls:
 18537 ;;		_memset
 18538 ;;		_printf
 18539 ;; This function is called by:
 18540 ;;		_bootLoadApplication
 18541 ;;		_nwkRxIndicateFrame
 18542 ;; This function uses a non-reentrant model
 18543 ;;
 18544                           
 18545                           	psect	text110
 18546  007D5E                     __ptext110:
 18547                           	opt callstack 0
 18548  007D5E                     _appDataInd:
 18549                           	opt callstack 9
 18550  007D5E                     
 18551                           ;app/app_src/application.c: 28: static _Bool appDataInd(NWK_DataInd_t *ind);app/app_src/
      +                          application.c: 29: {;app/app_src/application.c: 31:     uint8_t data[64 + 1];;app/app_sr
      +                          c/application.c: 32:     uint8_t* dataptr = ind->data;
 18552  007D5E  0100               	movlb	0	; () banked
 18553  007D60  EE20 F007          	lfsr	2,7
 18554  007D64  517D               	movf	appDataInd@ind& (0+255),w,b
 18555  007D66  26D9               	addwf	fsr2l,f,c
 18556  007D68  517E               	movf	(appDataInd@ind+1)& (0+255),w,b
 18557  007D6A  22DA               	addwfc	fsr2h,f,c
 18558  007D6C  006F FF78  F0C0    	movff	postinc2,appDataInd@dataptr
 18559  007D72  006F FF74  F0C1    	movff	postdec2,appDataInd@dataptr+1
 18560  007D78                     
 18561                           ; BSR set to: 0
 18562                           ;app/app_src/application.c: 33:     memset(data, 0 , sizeof(data));
 18563  007D78  0E7F               	movlw	low appDataInd@data
 18564  007D7A  6E02               	movwf	memset@dest^0,c
 18565  007D7C  0E00               	movlw	high appDataInd@data
 18566  007D7E  6E03               	movwf	(memset@dest+1)^0,c
 18567  007D80  0E00               	movlw	0
 18568  007D82  6E05               	movwf	(memset@c+1)^0,c
 18569  007D84  0E00               	movlw	0
 18570  007D86  6E04               	movwf	memset@c^0,c
 18571  007D88  0E00               	movlw	0
 18572  007D8A  6E07               	movwf	(memset@n+1)^0,c
 18573  007D8C  0E41               	movlw	65
 18574  007D8E  6E06               	movwf	memset@n^0,c
 18575  007D90  ECA5  F023         	call	_memset	;wreg free
 18576  007D94                     
 18577                           ;app/app_src/application.c: 34:     for(uint8_t i = 0; i < 64; i++){
 18578  007D94  0E00               	movlw	0
 18579  007D96  0100               	movlb	0	; () banked
 18580  007D98  6FC2               	movwf	appDataInd@i& (0+255),b
 18581  007D9A                     l14699:
 18582                           
 18583                           ; BSR set to: 0
 18584                           ;app/app_src/application.c: 35:         data[i] = *dataptr++;
 18585  007D9A  0060  F303  FFD9   	movff	appDataInd@dataptr,fsr2l
 18586  007DA0  0060  F307  FFDA   	movff	appDataInd@dataptr+1,fsr2h
 18587  007DA6  0E7F               	movlw	low appDataInd@data
 18588  007DA8  25C2               	addwf	appDataInd@i& (0+255),w,b
 18589  007DAA  6EE1               	movwf	fsr1l,c
 18590  007DAC  6AE2               	clrf	fsr1h,c
 18591  007DAE  0E00               	movlw	high appDataInd@data
 18592  007DB0  22E2               	addwfc	fsr1h,f,c
 18593  007DB2  006F FF7F FFE7     	movff	indf2,indf1
 18594  007DB8                     
 18595                           ; BSR set to: 0
 18596  007DB8  4BC0               	infsnz	appDataInd@dataptr& (0+255),f,b
 18597  007DBA  2BC1               	incf	(appDataInd@dataptr+1)& (0+255),f,b
 18598  007DBC                     
 18599                           ; BSR set to: 0
 18600                           ;app/app_src/application.c: 36:     }
 18601  007DBC  2BC2               	incf	appDataInd@i& (0+255),f,b
 18602  007DBE                     
 18603                           ; BSR set to: 0
 18604  007DBE  0E3F               	movlw	63
 18605  007DC0  65C2               	cpfsgt	appDataInd@i& (0+255),b
 18606  007DC2  EFE5  F03E         	goto	u13941
 18607  007DC6  EFE7  F03E         	goto	u13940
 18608  007DCA                     u13941:
 18609  007DCA  EFCD  F03E         	goto	l14699
 18610  007DCE                     u13940:
 18611  007DCE                     
 18612                           ; BSR set to: 0
 18613                           ;app/app_src/application.c: 37:     printf("RX:%04X:%s\r\n", ind->srcAddr, data);
 18614  007DCE  0E8D               	movlw	low STR_1
 18615  007DD0  6F77               	movwf	printf@fmt& (0+255),b
 18616  007DD2  0EFE               	movlw	high STR_1
 18617  007DD4  6F78               	movwf	(printf@fmt+1)& (0+255),b
 18618  007DD6  0060  F1F7  FFD9   	movff	appDataInd@ind,fsr2l
 18619  007DDC  0060  F1FB  FFDA   	movff	appDataInd@ind+1,fsr2h
 18620  007DE2  006F FF78  F079    	movff	postinc2,?_printf+2
 18621  007DE8  006F FF74  F07A    	movff	postdec2,?_printf+3
 18622  007DEE  0E7F               	movlw	low appDataInd@data
 18623  007DF0  6F7B               	movwf	(?_printf+4)& (0+255),b
 18624  007DF2  0E00               	movlw	high appDataInd@data
 18625  007DF4  6F7C               	movwf	(?_printf+5)& (0+255),b
 18626  007DF6  ECF7  F04B         	call	_printf	;wreg free
 18627  007DFA                     
 18628                           ;app/app_src/application.c: 38:     return 1;
 18629  007DFA  0E01               	movlw	1
 18630  007DFC  0012               	return		;funcret
 18631  007DFE                     __end_of_appDataInd:
 18632                           	opt callstack 0
 18633                           
 18634 ;; *************** function _nwkRxServiceDataInd *****************
 18635 ;; Defined at:
 18636 ;;		line 257 in file "nwk/nwk_src/nwkRx.c"
 18637 ;; Parameters:    Size  Location     Type
 18638 ;;  ind             2   29[BANK0 ] PTR struct NWK_DataInd_t
 18639 ;;		 -> nwkRxIndicateFrame@ind(12), 
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;		None
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  1    wreg      _Bool 
 18644 ;; Registers used:
 18645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18646 ;; Tracked objects:
 18647 ;;		On entry : 0/0
 18648 ;;		On exit  : 0/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18653 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18655 ;;Total ram usage:        6 bytes
 18656 ;; Hardware stack levels used:    1
 18657 ;; Hardware stack levels required when called:   10
 18658 ;; This function calls:
 18659 ;;		_nwkRouteErrorReceived
 18660 ;;		_nwkTxAckReceived
 18661 ;; This function is called by:
 18662 ;;		_nwkRxInit
 18663 ;;		_nwkRxIndicateFrame
 18664 ;; This function uses a non-reentrant model
 18665 ;;
 18666                           
 18667                           	psect	text111
 18668  007E9C                     __ptext111:
 18669                           	opt callstack 0
 18670  007E9C                     _nwkRxServiceDataInd:
 18671                           	opt callstack 15
 18672  007E9C                     
 18673                           ;nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);nwk/nwk_
      +                          src/nwkRx.c: 258: {;nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 18674  007E9C  0100               	movlb	0	; () banked
 18675  007E9E  EE20 F009          	lfsr	2,9
 18676  007EA2  517D               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 18677  007EA4  26D9               	addwf	fsr2l,f,c
 18678  007EA6  517E               	movf	(nwkRxServiceDataInd@ind+1)& (0+255),w,b
 18679  007EA8  22DA               	addwfc	fsr2h,f,c
 18680  007EAA  50DF               	movf	indf2,w,c
 18681  007EAC  A4D8               	btfss	status,2,c
 18682  007EAE  EF5B  F03F         	goto	u14101
 18683  007EB2  EF5D  F03F         	goto	u14100
 18684  007EB6                     u14101:
 18685  007EB6  EF74  F03F         	goto	l14857
 18686  007EBA                     u14100:
 18687  007EBA                     l14839:
 18688                           
 18689                           ; BSR set to: 0
 18690                           ;nwk/nwk_src/nwkRx.c: 265:     return 0;
 18691  007EBA  0E00               	movlw	0
 18692  007EBC  EF9B  F03F         	goto	l2088
 18693  007EC0                     l14843:
 18694                           
 18695                           ; BSR set to: 0
 18696                           ;nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 18697  007EC0  0060  F1F4  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 18698  007EC6  0060  F1F8  F009   	movff	nwkRxServiceDataInd@ind+1,nwkTxAckReceived@ind+1
 18699  007ECC  EC9B  F034         	call	_nwkTxAckReceived	;wreg free
 18700  007ED0  EF9B  F03F         	goto	l2088
 18701  007ED4                     l14847:
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 18705  007ED4  0060  F1F4  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 18706  007EDA  0060  F1F8  F00E   	movff	nwkRxServiceDataInd@ind+1,nwkRouteErrorReceived@ind+1
 18707  007EE0  ECA9  F043         	call	_nwkRouteErrorReceived	;wreg free
 18708  007EE4  EF9B  F03F         	goto	l2088
 18709  007EE8                     l14857:
 18710                           
 18711                           ; BSR set to: 0
 18712  007EE8  EE20 F007          	lfsr	2,7
 18713  007EEC  517D               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 18714  007EEE  26D9               	addwf	fsr2l,f,c
 18715  007EF0  517E               	movf	(nwkRxServiceDataInd@ind+1)& (0+255),w,b
 18716  007EF2  22DA               	addwfc	fsr2h,f,c
 18717  007EF4  006F FF78  F07F    	movff	postinc2,??_nwkRxServiceDataInd
 18718  007EFA  006F FF74  F080    	movff	postdec2,??_nwkRxServiceDataInd+1
 18719  007F00  0060  F1FF  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 18720  007F06  0060  F203  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 18721  007F0C  50DF               	movf	indf2,w,c
 18722  007F0E  6F81               	movwf	(??_nwkRxServiceDataInd+2)& (0+255),b
 18723  007F10  6B82               	clrf	(??_nwkRxServiceDataInd+3)& (0+255),b
 18724                           
 18725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18726                           ; Switch size 1, requested type "simple"
 18727                           ; Number of cases is 1, Range of values is 0 to 0
 18728                           ; switch strategies available:
 18729                           ; Name         Instructions Cycles
 18730                           ; simple_byte            4     3 (average)
 18731                           ;	Chosen strategy is simple_byte
 18732  007F12  5182               	movf	(??_nwkRxServiceDataInd+3)& (0+255),w,b
 18733  007F14  0A00               	xorlw	0	; case 0
 18734  007F16  B4D8               	btfsc	status,2,c
 18735  007F18  EF90  F03F         	goto	l17843
 18736  007F1C  EF5D  F03F         	goto	l14839
 18737  007F20                     l17843:
 18738                           
 18739                           ; BSR set to: 0
 18740                           ; Switch size 1, requested type "simple"
 18741                           ; Number of cases is 2, Range of values is 0 to 1
 18742                           ; switch strategies available:
 18743                           ; Name         Instructions Cycles
 18744                           ; simple_byte            7     4 (average)
 18745                           ;	Chosen strategy is simple_byte
 18746  007F20  5181               	movf	(??_nwkRxServiceDataInd+2)& (0+255),w,b
 18747  007F22  0A00               	xorlw	0	; case 0
 18748  007F24  B4D8               	btfsc	status,2,c
 18749  007F26  EF60  F03F         	goto	l14843
 18750  007F2A  0A01               	xorlw	1	; case 1
 18751  007F2C  B4D8               	btfsc	status,2,c
 18752  007F2E  EF6A  F03F         	goto	l14847
 18753  007F32  EF5D  F03F         	goto	l14839
 18754  007F36                     l2088:
 18755  007F36  0012               	return		;funcret
 18756  007F38                     __end_of_nwkRxServiceDataInd:
 18757                           	opt callstack 0
 18758                           
 18759 ;; *************** function _nwkTxAckReceived *****************
 18760 ;; Defined at:
 18761 ;;		line 182 in file "nwk/nwk_src/nwkTx.c"
 18762 ;; Parameters:    Size  Location     Type
 18763 ;;  ind             2    7[COMRAM] PTR struct NWK_DataInd_t
 18764 ;;		 -> nwkRxIndicateFrame@ind(12), 
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;  frame           2   13[COMRAM] PTR struct NwkFrame_t
 18767 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18768 ;;  command         2   11[COMRAM] PTR __pack struct NwkCom
 18769 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18770 ;; Return value:  Size  Location     Type
 18771 ;;                  1    wreg      _Bool 
 18772 ;; Registers used:
 18773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18774 ;; Tracked objects:
 18775 ;;		On entry : 0/0
 18776 ;;		On exit  : 0/0
 18777 ;;		Unchanged: 0/0
 18778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18780 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18782 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18783 ;;Total ram usage:        8 bytes
 18784 ;; Hardware stack levels used:    1
 18785 ;; Hardware stack levels required when called:    8
 18786 ;; This function calls:
 18787 ;;		_nwkFrameNext
 18788 ;; This function is called by:
 18789 ;;		_nwkRxServiceDataInd
 18790 ;; This function uses a non-reentrant model
 18791 ;;
 18792                           
 18793                           	psect	text112
 18794  006936                     __ptext112:
 18795                           	opt callstack 0
 18796  006936                     _nwkTxAckReceived:
 18797                           	opt callstack 16
 18798  006936                     
 18799                           ;nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);nwk/nwk_src/nwkTx.
      +                          c: 183: {;nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck_t *)ind-
      +                          >data;
 18800  006936  EE20 F007          	lfsr	2,7
 18801  00693A  5008               	movf	nwkTxAckReceived@ind^0,w,c
 18802  00693C  26D9               	addwf	fsr2l,f,c
 18803  00693E  5009               	movf	(nwkTxAckReceived@ind+1)^0,w,c
 18804  006940  22DA               	addwfc	fsr2h,f,c
 18805  006942  006F FF78  F00C    	movff	postinc2,nwkTxAckReceived@command
 18806  006948  006F FF74  F00D    	movff	postdec2,nwkTxAckReceived@command+1
 18807  00694E                     
 18808                           ;nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
 18809  00694E  0E00               	movlw	0
 18810  006950  6E0E               	movwf	nwkTxAckReceived@frame^0,c
 18811  006952  0E00               	movlw	0
 18812  006954  6E0F               	movwf	(nwkTxAckReceived@frame+1)^0,c
 18813  006956                     
 18814                           ;nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 18815  006956  EE20 F009          	lfsr	2,9
 18816  00695A  5008               	movf	nwkTxAckReceived@ind^0,w,c
 18817  00695C  26D9               	addwf	fsr2l,f,c
 18818  00695E  5009               	movf	(nwkTxAckReceived@ind+1)^0,w,c
 18819  006960  22DA               	addwfc	fsr2h,f,c
 18820  006962  0E03               	movlw	3
 18821  006964  18DE               	xorwf	postinc2,w,c
 18822  006966  B4D8               	btfsc	status,2,c
 18823  006968  EFB8  F034         	goto	u13831
 18824  00696C  EFBA  F034         	goto	u13830
 18825  006970                     u13831:
 18826  006970  EFFB  F034         	goto	l14615
 18827  006974                     u13830:
 18828  006974                     l14599:
 18829                           
 18830                           ;nwk/nwk_src/nwkTx.c: 188:     return 0;
 18831  006974  0E00               	movlw	0
 18832  006976  EF14  F035         	goto	l2277
 18833  00697A                     l14603:
 18834                           
 18835                           ;nwk/nwk_src/nwkTx.c: 191:   {;nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT_ACK =
      +                          = frame->state && frame->header.nwkSeq == command->seq)
 18836  00697A  0060  F03B  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 18837  006980  0060  F03F  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 18838  006986  0E16               	movlw	22
 18839  006988  18DE               	xorwf	postinc2,w,c
 18840  00698A  A4D8               	btfss	status,2,c
 18841  00698C  EFCA  F034         	goto	u13841
 18842  006990  EFCC  F034         	goto	u13840
 18843  006994                     u13841:
 18844  006994  EFFB  F034         	goto	l14615
 18845  006998                     u13840:
 18846  006998  EE20 F001          	lfsr	2,1
 18847  00699C  500C               	movf	nwkTxAckReceived@command^0,w,c
 18848  00699E  26D9               	addwf	fsr2l,f,c
 18849  0069A0  500D               	movf	(nwkTxAckReceived@command+1)^0,w,c
 18850  0069A2  22DA               	addwfc	fsr2h,f,c
 18851  0069A4  EE10 F00C          	lfsr	1,12
 18852  0069A8  500E               	movf	nwkTxAckReceived@frame^0,w,c
 18853  0069AA  26E1               	addwf	fsr1l,f,c
 18854  0069AC  500F               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 18855  0069AE  22E2               	addwfc	fsr1h,f,c
 18856  0069B0  50DE               	movf	postinc2,w,c
 18857  0069B2  18E6               	xorwf	postinc1,w,c
 18858  0069B4  A4D8               	btfss	status,2,c
 18859  0069B6  EFDF  F034         	goto	u13851
 18860  0069BA  EFE1  F034         	goto	u13850
 18861  0069BE                     u13851:
 18862  0069BE  EFFB  F034         	goto	l14615
 18863  0069C2                     u13850:
 18864  0069C2                     
 18865                           ;nwk/nwk_src/nwkTx.c: 193:     {;nwk/nwk_src/nwkTx.c: 194:       frame->state = NWK_TX_S
      +                          TATE_CONFIRM;
 18866  0069C2  0060  F03B  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 18867  0069C8  0060  F03F  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 18868  0069CE  0E17               	movlw	23
 18869  0069D0  6EDF               	movwf	indf2,c
 18870  0069D2                     
 18871                           ;nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 18872  0069D2  EE20 F002          	lfsr	2,2
 18873  0069D6  500C               	movf	nwkTxAckReceived@command^0,w,c
 18874  0069D8  26D9               	addwf	fsr2l,f,c
 18875  0069DA  500D               	movf	(nwkTxAckReceived@command+1)^0,w,c
 18876  0069DC  22DA               	addwfc	fsr2h,f,c
 18877  0069DE  EE10 F086          	lfsr	1,134
 18878  0069E2  500E               	movf	nwkTxAckReceived@frame^0,w,c
 18879  0069E4  26E1               	addwf	fsr1l,f,c
 18880  0069E6  500F               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 18881  0069E8  22E2               	addwfc	fsr1h,f,c
 18882  0069EA  006F FF7F FFE7     	movff	indf2,indf1
 18883  0069F0                     
 18884                           ;nwk/nwk_src/nwkTx.c: 196:       return 1;
 18885  0069F0  0E01               	movlw	1
 18886  0069F2  EF14  F035         	goto	l2277
 18887  0069F6                     l14615:
 18888                           
 18889                           ;nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 18890  0069F6  0060  F038  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 18891  0069FC  0060  F03C  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 18892  006A02  ECC7  F039         	call	_nwkFrameNext	;wreg free
 18893  006A06  0060  F008  F00E   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 18894  006A0C  0060  F00C  F00F   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 18895  006A12  500E               	movf	nwkTxAckReceived@frame^0,w,c
 18896  006A14  100F               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
 18897  006A16  A4D8               	btfss	status,2,c
 18898  006A18  EF10  F035         	goto	u13861
 18899  006A1C  EF12  F035         	goto	u13860
 18900  006A20                     u13861:
 18901  006A20  EFBD  F034         	goto	l14603
 18902  006A24                     u13860:
 18903  006A24  EFBA  F034         	goto	l14599
 18904  006A28                     l2277:
 18905  006A28  0012               	return		;funcret
 18906  006A2A                     __end_of_nwkTxAckReceived:
 18907                           	opt callstack 0
 18908                           
 18909 ;; *************** function _nwkFrameNext *****************
 18910 ;; Defined at:
 18911 ;;		line 111 in file "nwk/nwk_src/nwkFrame.c"
 18912 ;; Parameters:    Size  Location     Type
 18913 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 18914 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18915 ;; Auto vars:     Size  Location     Type
 18916 ;;		None
 18917 ;; Return value:  Size  Location     Type
 18918 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
 18919 ;; Registers used:
 18920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18921 ;; Tracked objects:
 18922 ;;		On entry : 0/0
 18923 ;;		On exit  : 0/0
 18924 ;;		Unchanged: 0/0
 18925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18928 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18930 ;;Total ram usage:        6 bytes
 18931 ;; Hardware stack levels used:    1
 18932 ;; Hardware stack levels required when called:    7
 18933 ;; This function calls:
 18934 ;;		Nothing
 18935 ;; This function is called by:
 18936 ;;		_nwkRxTaskHandler
 18937 ;;		_nwkTxAckReceived
 18938 ;;		_nwkTxAckWaitTimerHandler
 18939 ;;		_nwkTxDelayTimerHandler
 18940 ;;		_nwkTxTaskHandler
 18941 ;; This function uses a non-reentrant model
 18942 ;;
 18943                           
 18944                           	psect	text113
 18945  00738E                     __ptext113:
 18946                           	opt callstack 0
 18947  00738E                     _nwkFrameNext:
 18948                           	opt callstack 20
 18949  00738E                     
 18950                           ;nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);nwk/nwk_src/nw
      +                          kFrame.c: 112: {;nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
 18951  00738E  5002               	movf	nwkFrameNext@frame^0,w,c
 18952  007390  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
 18953  007392  A4D8               	btfss	status,2,c
 18954  007394  EFCE  F039         	goto	u13611
 18955  007398  EFD0  F039         	goto	u13610
 18956  00739C                     u13611:
 18957  00739C  EFD6  F039         	goto	l14445
 18958  0073A0                     u13610:
 18959  0073A0                     
 18960                           ;nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 18961  0073A0  0EBD               	movlw	low _nwkFrameFrames
 18962  0073A2  6E02               	movwf	nwkFrameNext@frame^0,c
 18963  0073A4  0E05               	movlw	high _nwkFrameFrames
 18964  0073A6  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
 18965  0073A8  EFDA  F039         	goto	l1800
 18966  0073AC                     l14445:
 18967                           
 18968                           ;nwk/nwk_src/nwkFrame.c: 116:     frame++;
 18969  0073AC  0E89               	movlw	137
 18970  0073AE  2602               	addwf	nwkFrameNext@frame^0,f,c
 18971  0073B0  0E00               	movlw	0
 18972  0073B2  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 18973  0073B4                     l1800:
 18974                           
 18975                           ;nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 18976  0073B4  0EAD               	movlw	173
 18977  0073B6  6E04               	movwf	??_nwkFrameNext^0,c
 18978  0073B8  0E02               	movlw	2
 18979  0073BA  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 18980  0073BC  0EBD               	movlw	low _nwkFrameFrames
 18981  0073BE  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 18982  0073C0  0E05               	movlw	high _nwkFrameFrames
 18983  0073C2  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 18984  0073C4  5004               	movf	??_nwkFrameNext^0,w,c
 18985  0073C6  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 18986  0073C8  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 18987  0073CA  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 18988  0073CC  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 18989  0073CE  5C02               	subwf	nwkFrameNext@frame^0,w,c
 18990  0073D0  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 18991  0073D2  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 18992  0073D4  A0D8               	btfss	status,0,c
 18993  0073D6  EFEF  F039         	goto	u13621
 18994  0073DA  EFF1  F039         	goto	u13620
 18995  0073DE                     u13621:
 18996  0073DE  EFF3  F039         	goto	l14449
 18997  0073E2                     u13620:
 18998  0073E2  EF24  F03A         	goto	l14457
 18999  0073E6                     l14449:
 19000                           
 19001                           ;nwk/nwk_src/nwkFrame.c: 119:   {;nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_STATE_F
      +                          REE != frame->state)
 19002  0073E6  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
 19003  0073EC  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 19004  0073F2  50DF               	movf	indf2,w,c
 19005  0073F4  B4D8               	btfsc	status,2,c
 19006  0073F6  EFFF  F039         	goto	u13631
 19007  0073FA  EF01  F03A         	goto	u13630
 19008  0073FE                     u13631:
 19009  0073FE  EF09  F03A         	goto	l14455
 19010  007402                     u13630:
 19011  007402                     
 19012                           ;nwk/nwk_src/nwkFrame.c: 121:       return frame;
 19013  007402  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
 19014  007408  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 19015  00740E  EF28  F03A         	goto	l1804
 19016  007412                     l14455:
 19017                           
 19018                           ;nwk/nwk_src/nwkFrame.c: 122:   }
 19019  007412  0E89               	movlw	137
 19020  007414  2602               	addwf	nwkFrameNext@frame^0,f,c
 19021  007416  0E00               	movlw	0
 19022  007418  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 19023  00741A  0EAD               	movlw	173
 19024  00741C  6E04               	movwf	??_nwkFrameNext^0,c
 19025  00741E  0E02               	movlw	2
 19026  007420  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 19027  007422  0EBD               	movlw	low _nwkFrameFrames
 19028  007424  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 19029  007426  0E05               	movlw	high _nwkFrameFrames
 19030  007428  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 19031  00742A  5004               	movf	??_nwkFrameNext^0,w,c
 19032  00742C  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 19033  00742E  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 19034  007430  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 19035  007432  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 19036  007434  5C02               	subwf	nwkFrameNext@frame^0,w,c
 19037  007436  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 19038  007438  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 19039  00743A  A0D8               	btfss	status,0,c
 19040  00743C  EF22  F03A         	goto	u13641
 19041  007440  EF24  F03A         	goto	u13640
 19042  007444                     u13641:
 19043  007444  EFF3  F039         	goto	l14449
 19044  007448                     u13640:
 19045  007448                     l14457:
 19046                           
 19047                           ;nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
 19048  007448  0E00               	movlw	0
 19049  00744A  6E02               	movwf	?_nwkFrameNext^0,c
 19050  00744C  0E00               	movlw	0
 19051  00744E  6E03               	movwf	(?_nwkFrameNext+1)^0,c
 19052  007450                     l1804:
 19053  007450  0012               	return		;funcret
 19054  007452                     __end_of_nwkFrameNext:
 19055                           	opt callstack 0
 19056                           
 19057 ;; *************** function _nwkRouteErrorReceived *****************
 19058 ;; Defined at:
 19059 ;;		line 344 in file "nwk/nwk_src/nwkRoute.c"
 19060 ;; Parameters:    Size  Location     Type
 19061 ;;  ind             2   12[COMRAM] PTR struct NWK_DataInd_t
 19062 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;  command         2   15[COMRAM] PTR __pack struct NwkCom
 19065 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19066 ;; Return value:  Size  Location     Type
 19067 ;;                  1    wreg      _Bool 
 19068 ;; Registers used:
 19069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19070 ;; Tracked objects:
 19071 ;;		On entry : 0/0
 19072 ;;		On exit  : 0/0
 19073 ;;		Unchanged: 0/0
 19074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19078 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19079 ;;Total ram usage:        5 bytes
 19080 ;; Hardware stack levels used:    1
 19081 ;; Hardware stack levels required when called:    9
 19082 ;; This function calls:
 19083 ;;		_nwkRouteRemove
 19084 ;; This function is called by:
 19085 ;;		_nwkRxServiceDataInd
 19086 ;; This function uses a non-reentrant model
 19087 ;;
 19088                           
 19089                           	psect	text114
 19090  008752                     __ptext114:
 19091                           	opt callstack 0
 19092  008752                     _nwkRouteErrorReceived:
 19093                           	opt callstack 15
 19094  008752                     
 19095                           ;nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);nwk/nwk_sr
      +                          c/nwkRoute.c: 345: {;nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *command = (N
      +                          wkCommandRouteError_t *)ind->data;
 19096  008752  EE20 F007          	lfsr	2,7
 19097  008756  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 19098  008758  26D9               	addwf	fsr2l,f,c
 19099  00875A  500E               	movf	(nwkRouteErrorReceived@ind+1)^0,w,c
 19100  00875C  22DA               	addwfc	fsr2h,f,c
 19101  00875E  006F FF78  F010    	movff	postinc2,nwkRouteErrorReceived@command
 19102  008764  006F FF74  F011    	movff	postdec2,nwkRouteErrorReceived@command+1
 19103                           
 19104                           ;nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 19105  00876A  EE20 F009          	lfsr	2,9
 19106  00876E  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 19107  008770  26D9               	addwf	fsr2l,f,c
 19108  008772  500E               	movf	(nwkRouteErrorReceived@ind+1)^0,w,c
 19109  008774  22DA               	addwfc	fsr2h,f,c
 19110  008776  0E06               	movlw	6
 19111  008778  18DE               	xorwf	postinc2,w,c
 19112  00877A  B4D8               	btfsc	status,2,c
 19113  00877C  EFC2  F043         	goto	u13821
 19114  008780  EFC4  F043         	goto	u13820
 19115  008784                     u13821:
 19116  008784  EFC7  F043         	goto	l14587
 19117  008788                     u13820:
 19118  008788                     
 19119                           ;nwk/nwk_src/nwkRoute.c: 349:     return 0;
 19120  008788  0E00               	movlw	0
 19121  00878A  EFDE  F043         	goto	l1943
 19122  00878E                     l14587:
 19123                           
 19124                           ;nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
 19125  00878E  EE20 F003          	lfsr	2,3
 19126  008792  5010               	movf	nwkRouteErrorReceived@command^0,w,c
 19127  008794  26D9               	addwf	fsr2l,f,c
 19128  008796  5011               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 19129  008798  22DA               	addwfc	fsr2h,f,c
 19130  00879A  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 19131  0087A0  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 19132  0087A6  EE20 F005          	lfsr	2,5
 19133  0087AA  5010               	movf	nwkRouteErrorReceived@command^0,w,c
 19134  0087AC  26D9               	addwf	fsr2l,f,c
 19135  0087AE  5011               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 19136  0087B0  22DA               	addwfc	fsr2h,f,c
 19137  0087B2  50DF               	movf	indf2,w,c
 19138  0087B4  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 19139  0087B6  EC85  F048         	call	_nwkRouteRemove	;wreg free
 19140  0087BA                     
 19141                           ;nwk/nwk_src/nwkRoute.c: 353:   return 1;
 19142  0087BA  0E01               	movlw	1
 19143  0087BC                     l1943:
 19144  0087BC  0012               	return		;funcret
 19145  0087BE                     __end_of_nwkRouteErrorReceived:
 19146                           	opt callstack 0
 19147                           
 19148 ;; *************** function _nwkRouteRemove *****************
 19149 ;; Defined at:
 19150 ;;		line 183 in file "nwk/nwk_src/nwkRoute.c"
 19151 ;; Parameters:    Size  Location     Type
 19152 ;;  dst             2    7[COMRAM] unsigned short 
 19153 ;;  multicast       1    9[COMRAM] unsigned char 
 19154 ;; Auto vars:     Size  Location     Type
 19155 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 19156 ;;		 -> nwkRouteTable(70), NULL(0), 
 19157 ;; Return value:  Size  Location     Type
 19158 ;;                  1    wreg      void 
 19159 ;; Registers used:
 19160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19161 ;; Tracked objects:
 19162 ;;		On entry : 0/0
 19163 ;;		On exit  : 0/0
 19164 ;;		Unchanged: 0/0
 19165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19166 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19169 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19170 ;;Total ram usage:        5 bytes
 19171 ;; Hardware stack levels used:    1
 19172 ;; Hardware stack levels required when called:    8
 19173 ;; This function calls:
 19174 ;;		_NWK_RouteFindEntry
 19175 ;;		_NWK_RouteFreeEntry
 19176 ;; This function is called by:
 19177 ;;		_nwkRouteErrorReceived
 19178 ;;		_nwkRxRejectDuplicate
 19179 ;; This function uses a non-reentrant model
 19180 ;;
 19181                           
 19182                           	psect	text115
 19183  00910A                     __ptext115:
 19184                           	opt callstack 0
 19185  00910A                     _nwkRouteRemove:
 19186                           	opt callstack 17
 19187  00910A                     
 19188                           ;nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);nwk/n
      +                          wk_src/nwkRoute.c: 184: {;nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t *entry;;n
      +                          wk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
 19189  00910A  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 19190  009110  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 19191  009116  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 19192  00911C  ECC4  F040         	call	_NWK_RouteFindEntry	;wreg free
 19193  009120  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 19194  009126  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 19195  00912C                     
 19196                           ;nwk/nwk_src/nwkRoute.c: 188:   if (entry)
 19197  00912C  500B               	movf	nwkRouteRemove@entry^0,w,c
 19198  00912E  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
 19199  009130  B4D8               	btfsc	status,2,c
 19200  009132  EF9D  F048         	goto	u13681
 19201  009136  EF9F  F048         	goto	u13680
 19202  00913A                     u13681:
 19203  00913A  EFA7  F048         	goto	l1896
 19204  00913E                     u13680:
 19205  00913E                     
 19206                           ;nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
 19207  00913E  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 19208  009144  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 19209  00914A  ECEC  F048         	call	_NWK_RouteFreeEntry	;wreg free
 19210  00914E                     l1896:
 19211  00914E  0012               	return		;funcret
 19212  009150                     __end_of_nwkRouteRemove:
 19213                           	opt callstack 0
 19214                           
 19215 ;; *************** function _NWK_RouteFreeEntry *****************
 19216 ;; Defined at:
 19217 ;;		line 134 in file "nwk/nwk_src/nwkRoute.c"
 19218 ;; Parameters:    Size  Location     Type
 19219 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
 19220 ;;		 -> nwkRouteTable(70), NULL(0), 
 19221 ;; Auto vars:     Size  Location     Type
 19222 ;;		None
 19223 ;; Return value:  Size  Location     Type
 19224 ;;                  1    wreg      void 
 19225 ;; Registers used:
 19226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19227 ;; Tracked objects:
 19228 ;;		On entry : 0/0
 19229 ;;		On exit  : 0/0
 19230 ;;		Unchanged: 0/0
 19231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19236 ;;Total ram usage:        2 bytes
 19237 ;; Hardware stack levels used:    1
 19238 ;; Hardware stack levels required when called:    7
 19239 ;; This function calls:
 19240 ;;		Nothing
 19241 ;; This function is called by:
 19242 ;;		_nwkRouteRemove
 19243 ;;		_nwkRouteFrameSent
 19244 ;; This function uses a non-reentrant model
 19245 ;;
 19246                           
 19247                           	psect	text116
 19248  0091D8                     __ptext116:
 19249                           	opt callstack 0
 19250  0091D8                     _NWK_RouteFreeEntry:
 19251                           	opt callstack 19
 19252  0091D8                     
 19253                           ;nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);nwk/
      +                          nwk_src/nwkRoute.c: 135: {;nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
 19254  0091D8  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 19255  0091DE  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 19256  0091E4  A0DF               	btfss	indf2,0,c
 19257  0091E6  EFF7  F048         	goto	u13451
 19258  0091EA  EFF9  F048         	goto	u13450
 19259  0091EE                     u13451:
 19260  0091EE  EFFB  F048         	goto	l14311
 19261  0091F2                     u13450:
 19262  0091F2  EF0D  F049         	goto	l1881
 19263  0091F6                     l14311:
 19264                           
 19265                           ;nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
 19266  0091F6  EE20 F001          	lfsr	2,1
 19267  0091FA  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 19268  0091FC  26D9               	addwf	fsr2l,f,c
 19269  0091FE  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 19270  009200  22DA               	addwfc	fsr2h,f,c
 19271  009202  0EFF               	movlw	255
 19272  009204  6EDE               	movwf	postinc2,c
 19273  009206  0EFF               	movlw	255
 19274  009208  6EDD               	movwf	postdec2,c
 19275                           
 19276                           ;nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
 19277  00920A  EE20 F005          	lfsr	2,5
 19278  00920E  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 19279  009210  26D9               	addwf	fsr2l,f,c
 19280  009212  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 19281  009214  22DA               	addwfc	fsr2h,f,c
 19282  009216  0E00               	movlw	0
 19283  009218  6EDF               	movwf	indf2,c
 19284  00921A                     l1881:
 19285  00921A  0012               	return		;funcret
 19286  00921C                     __end_of_NWK_RouteFreeEntry:
 19287                           	opt callstack 0
 19288                           
 19289 ;; *************** function _printf *****************
 19290 ;; Defined at:
 19291 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 19292 ;; Parameters:    Size  Location     Type
 19293 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
 19294 ;;		 -> STR_133(5), STR_132(8), STR_131(28), STR_130(26), 
 19295 ;;		 -> STR_129(12), STR_128(12), STR_59(5), STR_58(12), 
 19296 ;;		 -> STR_57(5), STR_56(12), STR_54(8), STR_51(5), 
 19297 ;;		 -> STR_50(12), STR_43(5), STR_42(12), STR_40(13), 
 19298 ;;		 -> STR_39(5), STR_38(12), STR_37(12), STR_35(14), 
 19299 ;;		 -> STR_34(5), STR_33(12), STR_31(13), STR_30(18), 
 19300 ;;		 -> STR_29(18), STR_28(5), STR_27(21), STR_26(5), 
 19301 ;;		 -> STR_25(12), STR_24(12), STR_22(12), STR_21(12), 
 19302 ;;		 -> STR_19(5), STR_18(3), STR_17(5), STR_16(5), 
 19303 ;;		 -> STR_15(5), STR_13(13), STR_12(12), STR_11(5), 
 19304 ;;		 -> STR_9(16), STR_8(8), STR_7(12), STR_5(8), 
 19305 ;;		 -> STR_4(12), STR_1(13), 
 19306 ;; Auto vars:     Size  Location     Type
 19307 ;;  ap              2   89[COMRAM] PTR void [1]
 19308 ;;		 -> ?_printf(2), 
 19309 ;;  ret             2    0        int 
 19310 ;; Return value:  Size  Location     Type
 19311 ;;                  2   23[BANK0 ] int 
 19312 ;; Registers used:
 19313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19314 ;; Tracked objects:
 19315 ;;		On entry : 0/0
 19316 ;;		On exit  : 0/0
 19317 ;;		Unchanged: 0/0
 19318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19319 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19320 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19322 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19323 ;;Total ram usage:       10 bytes
 19324 ;; Hardware stack levels used:    1
 19325 ;; Hardware stack levels required when called:   15
 19326 ;; This function calls:
 19327 ;;		_vfprintf
 19328 ;; This function is called by:
 19329 ;;		_appDataInd
 19330 ;;		_cmdSend
 19331 ;;		_cmdBcast
 19332 ;;		_cmdAddr
 19333 ;;		_cmdSetAddr
 19334 ;;		_cmdNaddr
 19335 ;;		_cmdSetNaddr
 19336 ;;		_cmdMac
 19337 ;;		_cmdSetSink
 19338 ;;		_cmdSetAES
 19339 ;;		_cmdGetCAD
 19340 ;;		_cmdRstCAD
 19341 ;;		_cmdGetMode
 19342 ;;		_cmdGetRFCH
 19343 ;;		_cmdSetRFCH
 19344 ;;		_cmdGetTX
 19345 ;;		_cmdSetTX
 19346 ;;		_cmdGetCADRSSI
 19347 ;;		_cmdSetCADRSSI
 19348 ;;		_cmdSetParity
 19349 ;;		_cmdBootLoad
 19350 ;;		_cmdGetSF
 19351 ;;		_cmdSetSF
 19352 ;;		_print_hop_table
 19353 ;;		_set_hop_table_ttl
 19354 ;;		_executeATCommand
 19355 ;;		_sendInfo
 19356 ;; This function uses a non-reentrant model
 19357 ;;
 19358                           
 19359                           	psect	text117
 19360  0097EE                     __ptext117:
 19361                           	opt callstack 0
 19362  0097EE                     _printf:
 19363                           	opt callstack 12
 19364  0097EE  0E79               	movlw	low (?_printf+2)
 19365  0097F0  6E5A               	movwf	printf@ap^0,c
 19366  0097F2  0E00               	movlw	high (?_printf+2)
 19367  0097F4  6E5B               	movwf	(printf@ap+1)^0,c
 19368  0097F6  0E00               	movlw	0
 19369  0097F8  6E50               	movwf	vfprintf@fp^0,c
 19370  0097FA  0E00               	movlw	0
 19371  0097FC  6E51               	movwf	(vfprintf@fp+1)^0,c
 19372  0097FE  0060  F1DC  F052   	movff	printf@fmt,vfprintf@fmt
 19373  009804  0060  F1E0  F053   	movff	printf@fmt+1,vfprintf@fmt+1
 19374  00980A  0E5A               	movlw	low printf@ap
 19375  00980C  6E54               	movwf	vfprintf@ap^0,c
 19376  00980E  0E00               	movlw	high printf@ap
 19377  009810  6E55               	movwf	(vfprintf@ap+1)^0,c
 19378  009812  EC16  F042         	call	_vfprintf	;wreg free
 19379  009816  0012               	return		;funcret
 19380  009818                     __end_of_printf:
 19381                           	opt callstack 0
 19382                           
 19383 ;; *************** function _vfprintf *****************
 19384 ;; Defined at:
 19385 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19386 ;; Parameters:    Size  Location     Type
 19387 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 19388 ;;		 -> NULL(0), 
 19389 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 19390 ;;		 -> STR_133(5), STR_132(8), STR_131(28), STR_130(26), 
 19391 ;;		 -> STR_129(12), STR_128(12), STR_59(5), STR_58(12), 
 19392 ;;		 -> STR_57(5), STR_56(12), STR_54(8), STR_51(5), 
 19393 ;;		 -> STR_50(12), STR_43(5), STR_42(12), STR_40(13), 
 19394 ;;		 -> STR_39(5), STR_38(12), STR_37(12), STR_35(14), 
 19395 ;;		 -> STR_34(5), STR_33(12), STR_31(13), STR_30(18), 
 19396 ;;		 -> STR_29(18), STR_28(5), STR_27(21), STR_26(5), 
 19397 ;;		 -> STR_25(12), STR_24(12), STR_22(12), STR_21(12), 
 19398 ;;		 -> STR_19(5), STR_18(3), STR_17(5), STR_16(5), 
 19399 ;;		 -> STR_15(5), STR_13(13), STR_12(12), STR_11(5), 
 19400 ;;		 -> STR_9(16), STR_8(8), STR_7(12), STR_5(8), 
 19401 ;;		 -> STR_4(12), STR_1(13), 
 19402 ;;  ap              2   83[COMRAM] PTR PTR void 
 19403 ;;		 -> printf@ap(2), 
 19404 ;; Auto vars:     Size  Location     Type
 19405 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 19406 ;;		 -> STR_133(5), STR_132(8), STR_131(28), STR_130(26), 
 19407 ;;		 -> STR_129(12), STR_128(12), STR_59(5), STR_58(12), 
 19408 ;;		 -> STR_57(5), STR_56(12), STR_54(8), STR_51(5), 
 19409 ;;		 -> STR_50(12), STR_43(5), STR_42(12), STR_40(13), 
 19410 ;;		 -> STR_39(5), STR_38(12), STR_37(12), STR_35(14), 
 19411 ;;		 -> STR_34(5), STR_33(12), STR_31(13), STR_30(18), 
 19412 ;;		 -> STR_29(18), STR_28(5), STR_27(21), STR_26(5), 
 19413 ;;		 -> STR_25(12), STR_24(12), STR_22(12), STR_21(12), 
 19414 ;;		 -> STR_19(5), STR_18(3), STR_17(5), STR_16(5), 
 19415 ;;		 -> STR_15(5), STR_13(13), STR_12(12), STR_11(5), 
 19416 ;;		 -> STR_9(16), STR_8(8), STR_7(12), STR_5(8), 
 19417 ;;		 -> STR_4(12), STR_1(13), 
 19418 ;; Return value:  Size  Location     Type
 19419 ;;                  2   79[COMRAM] int 
 19420 ;; Registers used:
 19421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19422 ;; Tracked objects:
 19423 ;;		On entry : 0/0
 19424 ;;		On exit  : 0/0
 19425 ;;		Unchanged: 0/0
 19426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19427 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19430 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19431 ;;Total ram usage:        8 bytes
 19432 ;; Hardware stack levels used:    1
 19433 ;; Hardware stack levels required when called:   14
 19434 ;; This function calls:
 19435 ;;		_vfpfcnvrt
 19436 ;; This function is called by:
 19437 ;;		_printf
 19438 ;; This function uses a non-reentrant model
 19439 ;;
 19440                           
 19441                           	psect	text118
 19442  00842C                     __ptext118:
 19443                           	opt callstack 0
 19444  00842C                     _vfprintf:
 19445                           	opt callstack 12
 19446  00842C                     
 19447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 19448  00842C  0060  F148  F056   	movff	vfprintf@fmt,vfprintf@cfmt
 19449  008432  0060  F14C  F057   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 19450  008438                     
 19451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 19452  008438  0E00               	movlw	0
 19453  00843A  0101               	movlb	1	; () banked
 19454  00843C  6F5E               	movwf	(_nout+1)& (0+255),b
 19455  00843E  0E00               	movlw	0
 19456  008440  6F5D               	movwf	_nout& (0+255),b
 19457                           
 19458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 19459  008442  EF3A  F042         	goto	l14513
 19460  008446                     l14511:
 19461                           
 19462                           ; BSR set to: 1
 19463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 19464  008446  0060  F140  F046   	movff	vfprintf@fp,vfpfcnvrt@fp
 19465  00844C  0060  F144  F047   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 19466  008452  0E56               	movlw	low vfprintf@cfmt
 19467  008454  6E48               	movwf	vfpfcnvrt@fmt^0,c
 19468  008456  0E00               	movlw	high vfprintf@cfmt
 19469  008458  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
 19470  00845A  0060  F150  F04A   	movff	vfprintf@ap,vfpfcnvrt@ap
 19471  008460  0060  F154  F04B   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 19472  008466  EC01  F004         	call	_vfpfcnvrt	;wreg free
 19473  00846A  5046               	movf	?_vfpfcnvrt^0,w,c
 19474  00846C  0101               	movlb	1	; () banked
 19475  00846E  275D               	addwf	_nout& (0+255),f,b
 19476  008470  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
 19477  008472  235E               	addwfc	(_nout+1)& (0+255),f,b
 19478  008474                     l14513:
 19479                           
 19480                           ; BSR set to: 1
 19481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 19482  008474  0060  F15B  FFF6   	movff	vfprintf@cfmt,tblptrl
 19483  00847A  0060  F15F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 19484  008480                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19485  008480  6AF8               	clrf	tblptru,c
 19486  008482                     	endif
 19487  008482                     	if	0	;tblptru may be non-zero
 19488  008482                     	endif
 19489  008482  0008               	tblrd		*
 19490  008484  50F5               	movf	tablat,w,c
 19491  008486  0900               	iorlw	0
 19492  008488  A4D8               	btfss	status,2,c
 19493  00848A  EF49  F042         	goto	u13691
 19494  00848E  EF4B  F042         	goto	u13690
 19495  008492                     u13691:
 19496  008492  EF23  F042         	goto	l14511
 19497  008496                     u13690:
 19498  008496                     
 19499                           ; BSR set to: 1
 19500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 19501  008496  0060  F574  F050   	movff	_nout,?_vfprintf
 19502  00849C  0060  F578  F051   	movff	_nout+1,?_vfprintf+1
 19503  0084A2                     
 19504                           ; BSR set to: 1
 19505  0084A2  0012               	return		;funcret
 19506  0084A4                     __end_of_vfprintf:
 19507                           	opt callstack 0
 19508                           
 19509 ;; *************** function _vfpfcnvrt *****************
 19510 ;; Defined at:
 19511 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 19512 ;; Parameters:    Size  Location     Type
 19513 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
 19514 ;;		 -> NULL(0), 
 19515 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
 19516 ;;		 -> vfprintf@cfmt(2), 
 19517 ;;  ap              2   73[COMRAM] PTR PTR void 
 19518 ;;		 -> printf@ap(2), 
 19519 ;; Auto vars:     Size  Location     Type
 19520 ;;  llu             8   15[BANK0 ] unsigned long long 
 19521 ;;  ll              8    0[BANK0 ] long long 
 19522 ;;  f               4    0        long long 
 19523 ;;  vp              3    0        PTR void 
 19524 ;;  ct              3    0        unsigned char [3]
 19525 ;;  done            2   11[BANK0 ] int 
 19526 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 19527 ;;		 -> ?_printf(2), appDataInd@data(65), 
 19528 ;;  i               2    0        int 
 19529 ;;  c               1   10[BANK0 ] unsigned char 
 19530 ;; Return value:  Size  Location     Type
 19531 ;;                  2   69[COMRAM] int 
 19532 ;; Registers used:
 19533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19534 ;; Tracked objects:
 19535 ;;		On entry : 0/0
 19536 ;;		On exit  : 0/0
 19537 ;;		Unchanged: 0/0
 19538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19539 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19540 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19541 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19542 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19543 ;;Total ram usage:       33 bytes
 19544 ;; Hardware stack levels used:    1
 19545 ;; Hardware stack levels required when called:   13
 19546 ;; This function calls:
 19547 ;;		_atoi
 19548 ;;		_dtoa
 19549 ;;		_fputc
 19550 ;;		_isdigit
 19551 ;;		_stoa
 19552 ;;		_utoa
 19553 ;;		_xtoa
 19554 ;; This function is called by:
 19555 ;;		_vfprintf
 19556 ;; This function uses a non-reentrant model
 19557 ;;
 19558                           
 19559                           	psect	text119
 19560  000802                     __ptext119:
 19561                           	opt callstack 0
 19562  000802                     _vfpfcnvrt:
 19563                           	opt callstack 12
 19564  000802                     
 19565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 19566  000802  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19567  000808  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19568  00080E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19569  000814  006F FF77 FFF7     	movff	postdec2,tblptrh
 19570  00081A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19571  00081A  6AF8               	clrf	tblptru,c
 19572  00081C                     	endif
 19573  00081C                     	if	0	;tblptru may be non-zero
 19574  00081C                     	endif
 19575  00081C  0008               	tblrd		*
 19576  00081E  50F5               	movf	tablat,w,c
 19577  000820  0A25               	xorlw	37
 19578  000822  A4D8               	btfss	status,2,c
 19579  000824  EF16  F004         	goto	u13461
 19580  000828  EF18  F004         	goto	u13460
 19581  00082C                     u13461:
 19582  00082C  EF54  F007         	goto	l14427
 19583  000830                     u13460:
 19584  000830                     
 19585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 19586  000830  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19587  000836  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19588  00083C  2ADE               	incf	postinc2,f,c
 19589  00083E  0E00               	movlw	0
 19590  000840  22DD               	addwfc	postdec2,f,c
 19591  000842                     
 19592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 19593  000842  0E00               	movlw	0
 19594  000844  0101               	movlb	1	; () banked
 19595  000846  6F60               	movwf	(_width+1)& (0+255),b
 19596  000848  0E00               	movlw	0
 19597  00084A  6F5F               	movwf	_width& (0+255),b
 19598  00084C  C15F  F0E4         	movff	_width,_flags
 19599  000850  C160  F0E5         	movff	_width+1,_flags+1
 19600  000854                     
 19601                           ; BSR set to: 1
 19602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 19603  000854  0100               	movlb	0	; () banked
 19604  000856  69E2               	setf	_prec& (0+255),b
 19605  000858  69E3               	setf	(_prec+1)& (0+255),b
 19606  00085A                     
 19607                           ; BSR set to: 0
 19608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 19609  00085A  0E00               	movlw	0
 19610  00085C  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 19611  00085E  0E00               	movlw	0
 19612  000860  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 19613                           
 19614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 19615  000862  EF80  F004         	goto	l14349
 19616  000866                     l14323:
 19617                           
 19618                           ; BSR set to: 0
 19619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 19620  000866  81E4               	bsf	_flags& (0+255),0,b
 19621  000868                     l14325:
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 19625  000868  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19626  00086E  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19627  000874  2ADE               	incf	postinc2,f,c
 19628  000876  0E00               	movlw	0
 19629  000878  22DD               	addwfc	postdec2,f,c
 19630                           
 19631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 19632  00087A  EF80  F004         	goto	l14349
 19633  00087E                     l14327:
 19634                           
 19635                           ; BSR set to: 0
 19636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 19637  00087E  83E4               	bsf	_flags& (0+255),1,b
 19638  000880  EF34  F004         	goto	l14325
 19639  000884                     l14331:
 19640                           
 19641                           ; BSR set to: 0
 19642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 19643  000884  85E4               	bsf	_flags& (0+255),2,b
 19644  000886  EF34  F004         	goto	l14325
 19645  00088A                     l14335:
 19646                           
 19647                           ; BSR set to: 0
 19648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 19649  00088A  87E4               	bsf	_flags& (0+255),3,b
 19650  00088C  EF34  F004         	goto	l14325
 19651  000890                     l14339:
 19652                           
 19653                           ; BSR set to: 0
 19654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 19655  000890  89E4               	bsf	_flags& (0+255),4,b
 19656  000892  EF34  F004         	goto	l14325
 19657  000896                     l14343:
 19658                           
 19659                           ; BSR set to: 0
 19660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 19661  000896  0E00               	movlw	0
 19662  000898  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 19663  00089A  0E01               	movlw	1
 19664  00089C  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 19665                           
 19666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 19667  00089E  EF80  F004         	goto	l14349
 19668  0008A2                     l14347:
 19669                           
 19670                           ; BSR set to: 0
 19671  0008A2  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19672  0008A8  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19673  0008AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19674  0008B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19675  0008BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19676  0008BA  6AF8               	clrf	tblptru,c
 19677  0008BC                     	endif
 19678  0008BC                     	if	0	;tblptru may be non-zero
 19679  0008BC                     	endif
 19680  0008BC  0008               	tblrd		*
 19681  0008BE  50F5               	movf	tablat,w,c
 19682  0008C0  6E4C               	movwf	??_vfpfcnvrt^0,c
 19683  0008C2  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
 19684                           
 19685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19686                           ; Switch size 1, requested type "simple"
 19687                           ; Number of cases is 1, Range of values is 0 to 0
 19688                           ; switch strategies available:
 19689                           ; Name         Instructions Cycles
 19690                           ; simple_byte            4     3 (average)
 19691                           ;	Chosen strategy is simple_byte
 19692  0008C4  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
 19693  0008C6  0A00               	xorlw	0	; case 0
 19694  0008C8  B4D8               	btfsc	status,2,c
 19695  0008CA  EF69  F004         	goto	l17845
 19696  0008CE  EF4B  F004         	goto	l14343
 19697  0008D2                     l17845:
 19698                           
 19699                           ; BSR set to: 0
 19700                           ; Switch size 1, requested type "simple"
 19701                           ; Number of cases is 5, Range of values is 32 to 48
 19702                           ; switch strategies available:
 19703                           ; Name         Instructions Cycles
 19704                           ; simple_byte           16     9 (average)
 19705                           ;	Chosen strategy is simple_byte
 19706  0008D2  504C               	movf	??_vfpfcnvrt^0,w,c
 19707  0008D4  0A20               	xorlw	32	; case 32
 19708  0008D6  B4D8               	btfsc	status,2,c
 19709  0008D8  EF45  F004         	goto	l14335
 19710  0008DC  0A03               	xorlw	3	; case 35
 19711  0008DE  B4D8               	btfsc	status,2,c
 19712  0008E0  EF48  F004         	goto	l14339
 19713  0008E4  0A08               	xorlw	8	; case 43
 19714  0008E6  B4D8               	btfsc	status,2,c
 19715  0008E8  EF42  F004         	goto	l14331
 19716  0008EC  0A06               	xorlw	6	; case 45
 19717  0008EE  B4D8               	btfsc	status,2,c
 19718  0008F0  EF33  F004         	goto	l14323
 19719  0008F4  0A1D               	xorlw	29	; case 48
 19720  0008F6  B4D8               	btfsc	status,2,c
 19721  0008F8  EF3F  F004         	goto	l14327
 19722  0008FC  EF4B  F004         	goto	l14343
 19723  000900                     l14349:
 19724                           
 19725                           ; BSR set to: 0
 19726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 19727  000900  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 19728  000902  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 19729  000904  B4D8               	btfsc	status,2,c
 19730  000906  EF87  F004         	goto	u13471
 19731  00090A  EF89  F004         	goto	u13470
 19732  00090E                     u13471:
 19733  00090E  EF51  F004         	goto	l14347
 19734  000912                     u13470:
 19735  000912                     
 19736                           ; BSR set to: 0
 19737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 19738  000912  A1E4               	btfss	_flags& (0+255),0,b
 19739  000914  EF8E  F004         	goto	u13481
 19740  000918  EF90  F004         	goto	u13480
 19741  00091C                     u13481:
 19742  00091C  EF91  F004         	goto	l14353
 19743  000920                     u13480:
 19744  000920                     
 19745                           ; BSR set to: 0
 19746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 19747  000920  93E4               	bcf	_flags& (0+255),1,b
 19748  000922                     l14353:
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 19752  000922  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19753  000928  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19754  00092E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19755  000934  006F FF77 FFF7     	movff	postdec2,tblptrh
 19756  00093A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19757  00093A  6AF8               	clrf	tblptru,c
 19758  00093C                     	endif
 19759  00093C                     	if	0	;tblptru may be non-zero
 19760  00093C                     	endif
 19761  00093C  0008               	tblrd		*
 19762  00093E  50F5               	movf	tablat,w,c
 19763  000940  0A2A               	xorlw	42
 19764  000942  A4D8               	btfss	status,2,c
 19765  000944  EFA6  F004         	goto	u13491
 19766  000948  EFA8  F004         	goto	u13490
 19767  00094C                     u13491:
 19768  00094C  EFDE  F004         	goto	l14361
 19769  000950                     u13490:
 19770  000950                     
 19771                           ; BSR set to: 0
 19772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 19773  000950  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19774  000956  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19775  00095C  2ADE               	incf	postinc2,f,c
 19776  00095E  0E00               	movlw	0
 19777  000960  22DD               	addwfc	postdec2,f,c
 19778                           
 19779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 19780  000962  0060  F12B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 19781  000968  0060  F12F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 19782  00096E  006F FF7C  F04C    	movff	indf2,??_vfpfcnvrt
 19783  000974  0E02               	movlw	2
 19784  000976  26DE               	addwf	postinc2,f,c
 19785  000978  006F FF7C  F04D    	movff	indf2,??_vfpfcnvrt+1
 19786  00097E  0E00               	movlw	0
 19787  000980  22DD               	addwfc	postdec2,f,c
 19788  000982  0060  F133  FFD9   	movff	??_vfpfcnvrt,fsr2l
 19789  000988  0060  F137  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 19790  00098E  006F FF78  F15F    	movff	postinc2,_width
 19791  000994  006F FF74  F160    	movff	postdec2,_width+1
 19792  00099A                     
 19793                           ; BSR set to: 0
 19794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 19795  00099A  0101               	movlb	1	; () banked
 19796  00099C  BF60               	btfsc	(_width+1)& (0+255),7,b
 19797  00099E  EFD5  F004         	goto	u13500
 19798  0009A2  EFD3  F004         	goto	u13501
 19799  0009A6                     u13501:
 19800  0009A6  EF2F  F005         	goto	l14371
 19801  0009AA                     u13500:
 19802  0009AA                     
 19803                           ; BSR set to: 1
 19804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 19805  0009AA  0100               	movlb	0	; () banked
 19806  0009AC  81E4               	bsf	_flags& (0+255),0,b
 19807                           
 19808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 19809  0009AE  0101               	movlb	1	; () banked
 19810  0009B0  6D5F               	negf	_width& (0+255),b
 19811  0009B2  1F60               	comf	(_width+1)& (0+255),f,b
 19812  0009B4  B0D8               	btfsc	status,0,c
 19813  0009B6  2B60               	incf	(_width+1)& (0+255),f,b
 19814  0009B8  EF2F  F005         	goto	l14371
 19815  0009BC                     l14361:
 19816                           
 19817                           ; BSR set to: 0
 19818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 19819  0009BC  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19820  0009C2  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19821  0009C8  006F FF78  F009    	movff	postinc2,atoi@s
 19822  0009CE  006F FF74  F00A    	movff	postdec2,atoi@s+1
 19823  0009D4  EC46  F020         	call	_atoi	;wreg free
 19824  0009D8  0060  F024  F15F   	movff	?_atoi,_width
 19825  0009DE  0060  F028  F160   	movff	?_atoi+1,_width+1
 19826                           
 19827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 19828  0009E4  EFFD  F004         	goto	l14365
 19829  0009E8                     l14363:
 19830                           
 19831                           ; BSR set to: 0
 19832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 19833  0009E8  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19834  0009EE  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19835  0009F4  2ADE               	incf	postinc2,f,c
 19836  0009F6  0E00               	movlw	0
 19837  0009F8  22DD               	addwfc	postdec2,f,c
 19838  0009FA                     l14365:
 19839  0009FA  0ED0               	movlw	208
 19840  0009FC  6E4C               	movwf	??_vfpfcnvrt^0,c
 19841  0009FE  0EFF               	movlw	255
 19842  000A00  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
 19843  000A02  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19844  000A08  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19845  000A0E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19846  000A14  006F FF77 FFF7     	movff	postdec2,tblptrh
 19847  000A1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19848  000A1A  6AF8               	clrf	tblptru,c
 19849  000A1C                     	endif
 19850  000A1C                     	if	0	;tblptru may be non-zero
 19851  000A1C                     	endif
 19852  000A1C  0008               	tblrd		*
 19853  000A1E  50F5               	movf	tablat,w,c
 19854  000A20  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
 19855  000A22  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
 19856  000A24  504C               	movf	??_vfpfcnvrt^0,w,c
 19857  000A26  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
 19858  000A28  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
 19859  000A2A  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 19860  000A2C  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
 19861  000A2E  E10A               	bnz	u13510
 19862  000A30  0E0A               	movlw	10
 19863  000A32  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
 19864  000A34  A0D8               	btfss	status,0,c
 19865  000A36  EF1F  F005         	goto	u13511
 19866  000A3A  EF22  F005         	goto	u13510
 19867  000A3E                     u13511:
 19868  000A3E  0E01               	movlw	1
 19869  000A40  EF23  F005         	goto	u13520
 19870  000A44                     u13510:
 19871  000A44  0E00               	movlw	0
 19872  000A46                     u13520:
 19873  000A46  0100               	movlb	0	; () banked
 19874  000A48  6F6D               	movwf	_vfpfcnvrt$6952& (0+255),b
 19875  000A4A  6B6E               	clrf	(_vfpfcnvrt$6952+1)& (0+255),b
 19876  000A4C                     
 19877                           ; BSR set to: 0
 19878  000A4C  516D               	movf	_vfpfcnvrt$6952& (0+255),w,b
 19879  000A4E  116E               	iorwf	(_vfpfcnvrt$6952+1)& (0+255),w,b
 19880  000A50  A4D8               	btfss	status,2,c
 19881  000A52  EF2D  F005         	goto	u13531
 19882  000A56  EF2F  F005         	goto	u13530
 19883  000A5A                     u13531:
 19884  000A5A  EFF4  F004         	goto	l14363
 19885  000A5E                     u13530:
 19886  000A5E                     l14371:
 19887                           
 19888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 19889  000A5E  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19890  000A64  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19891  000A6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19892  000A70  006F FF77 FFF7     	movff	postdec2,tblptrh
 19893  000A76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19894  000A76  6AF8               	clrf	tblptru,c
 19895  000A78                     	endif
 19896  000A78                     	if	0	;tblptru may be non-zero
 19897  000A78                     	endif
 19898  000A78  0008               	tblrd		*
 19899  000A7A  50F5               	movf	tablat,w,c
 19900  000A7C  0A64               	xorlw	100
 19901  000A7E  B4D8               	btfsc	status,2,c
 19902  000A80  EF44  F005         	goto	u13541
 19903  000A84  EF46  F005         	goto	u13540
 19904  000A88                     u13541:
 19905  000A88  EF5D  F005         	goto	l14375
 19906  000A8C                     u13540:
 19907  000A8C  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19908  000A92  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19909  000A98  006F FF7B FFF6     	movff	postinc2,tblptrl
 19910  000A9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19911  000AA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19912  000AA4  6AF8               	clrf	tblptru,c
 19913  000AA6                     	endif
 19914  000AA6                     	if	0	;tblptru may be non-zero
 19915  000AA6                     	endif
 19916  000AA6  0008               	tblrd		*
 19917  000AA8  50F5               	movf	tablat,w,c
 19918  000AAA  0A69               	xorlw	105
 19919  000AAC  A4D8               	btfss	status,2,c
 19920  000AAE  EF5B  F005         	goto	u13551
 19921  000AB2  EF5D  F005         	goto	u13550
 19922  000AB6                     u13551:
 19923  000AB6  EFB4  F005         	goto	l14381
 19924  000ABA                     u13550:
 19925  000ABA                     l14375:
 19926                           
 19927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 19928  000ABA  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19929  000AC0  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19930  000AC6  2ADE               	incf	postinc2,f,c
 19931  000AC8  0E00               	movlw	0
 19932  000ACA  22DD               	addwfc	postdec2,f,c
 19933                           
 19934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 19935  000ACC  0060  F12B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 19936  000AD2  0060  F12F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 19937  000AD8  006F FF7C  F04C    	movff	indf2,??_vfpfcnvrt
 19938  000ADE  0E02               	movlw	2
 19939  000AE0  26DE               	addwf	postinc2,f,c
 19940  000AE2  006F FF7C  F04D    	movff	indf2,??_vfpfcnvrt+1
 19941  000AE8  0E00               	movlw	0
 19942  000AEA  22DD               	addwfc	postdec2,f,c
 19943  000AEC  0060  F133  FFD9   	movff	??_vfpfcnvrt,fsr2l
 19944  000AF2  0060  F137  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 19945  000AF8  006F FF78  F060    	movff	postinc2,vfpfcnvrt@ll
 19946  000AFE  006F FF74  F061    	movff	postdec2,vfpfcnvrt@ll+1
 19947  000B04  0100               	movlb	0	; () banked
 19948  000B06  0E00               	movlw	0
 19949  000B08  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 19950  000B0A  0EFF               	movlw	-1
 19951  000B0C  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 19952  000B0E  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 19953  000B10  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 19954  000B12  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 19955  000B14  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 19956  000B16  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 19957  000B18                     
 19958                           ; BSR set to: 0
 19959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 19960  000B18  0060  F118  F01F   	movff	vfpfcnvrt@fp,dtoa@fp
 19961  000B1E  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 19962  000B24  0060  F180  F021   	movff	vfpfcnvrt@ll,dtoa@d
 19963  000B2A  0060  F184  F022   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 19964  000B30  0060  F188  F023   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 19965  000B36  0060  F18C  F024   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 19966  000B3C  0060  F190  F025   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 19967  000B42  0060  F194  F026   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 19968  000B48  0060  F198  F027   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 19969  000B4E  0060  F19C  F028   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 19970  000B54  EC7F  F010         	call	_dtoa	;wreg free
 19971  000B58  0060  F07C  F046   	movff	?_dtoa,?_vfpfcnvrt
 19972  000B5E  0060  F080  F047   	movff	?_dtoa+1,?_vfpfcnvrt+1
 19973  000B64  EF78  F007         	goto	l3157
 19974  000B68                     l14381:
 19975                           
 19976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 19977  000B68  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19978  000B6E  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19979  000B74  006F FF7B FFF6     	movff	postinc2,tblptrl
 19980  000B7A  006F FF77 FFF7     	movff	postdec2,tblptrh
 19981  000B80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19982  000B80  6AF8               	clrf	tblptru,c
 19983  000B82                     	endif
 19984  000B82                     	if	0	;tblptru may be non-zero
 19985  000B82                     	endif
 19986  000B82  0008               	tblrd		*
 19987  000B84  50F5               	movf	tablat,w,c
 19988  000B86  0A73               	xorlw	115
 19989  000B88  A4D8               	btfss	status,2,c
 19990  000B8A  EFC9  F005         	goto	u13561
 19991  000B8E  EFCB  F005         	goto	u13560
 19992  000B92                     u13561:
 19993  000B92  EF06  F006         	goto	l14389
 19994  000B96                     u13560:
 19995  000B96                     
 19996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 19997  000B96  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 19998  000B9C  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 19999  000BA2  2ADE               	incf	postinc2,f,c
 20000  000BA4  0E00               	movlw	0
 20001  000BA6  22DD               	addwfc	postdec2,f,c
 20002                           
 20003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20004  000BA8  0060  F12B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 20005  000BAE  0060  F12F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 20006  000BB4  006F FF7C  F04C    	movff	indf2,??_vfpfcnvrt
 20007  000BBA  0E02               	movlw	2
 20008  000BBC  26DE               	addwf	postinc2,f,c
 20009  000BBE  006F FF7C  F04D    	movff	indf2,??_vfpfcnvrt+1
 20010  000BC4  0E00               	movlw	0
 20011  000BC6  22DD               	addwfc	postdec2,f,c
 20012  000BC8  0060  F133  FFD9   	movff	??_vfpfcnvrt,fsr2l
 20013  000BCE  0060  F137  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 20014  000BD4  006F FF78  F068    	movff	postinc2,vfpfcnvrt@cp
 20015  000BDA  006F FF74  F069    	movff	postdec2,vfpfcnvrt@cp+1
 20016  000BE0                     
 20017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 20018  000BE0  0060  F118  F00D   	movff	vfpfcnvrt@fp,stoa@fp
 20019  000BE6  0060  F11C  F00E   	movff	vfpfcnvrt@fp+1,stoa@fp+1
 20020  000BEC  0060  F1A0  F00F   	movff	vfpfcnvrt@cp,stoa@s
 20021  000BF2  0060  F1A4  F010   	movff	vfpfcnvrt@cp+1,stoa@s+1
 20022  000BF8  EC26  F021         	call	_stoa	;wreg free
 20023  000BFC  0060  F034  F046   	movff	?_stoa,?_vfpfcnvrt
 20024  000C02  0060  F038  F047   	movff	?_stoa+1,?_vfpfcnvrt+1
 20025  000C08  EF78  F007         	goto	l3157
 20026  000C0C                     l14389:
 20027                           
 20028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 20029  000C0C  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20030  000C12  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20031  000C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 20032  000C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20033  000C24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20034  000C24  6AF8               	clrf	tblptru,c
 20035  000C26                     	endif
 20036  000C26                     	if	0	;tblptru may be non-zero
 20037  000C26                     	endif
 20038  000C26  0008               	tblrd		*
 20039  000C28  50F5               	movf	tablat,w,c
 20040  000C2A  0A75               	xorlw	117
 20041  000C2C  A4D8               	btfss	status,2,c
 20042  000C2E  EF1B  F006         	goto	u13571
 20043  000C32  EF1D  F006         	goto	u13570
 20044  000C36                     u13571:
 20045  000C36  EF77  F006         	goto	l14397
 20046  000C3A                     u13570:
 20047  000C3A                     
 20048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 20049  000C3A  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20050  000C40  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20051  000C46  2ADE               	incf	postinc2,f,c
 20052  000C48  0E00               	movlw	0
 20053  000C4A  22DD               	addwfc	postdec2,f,c
 20054                           
 20055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20056  000C4C  0060  F12B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 20057  000C52  0060  F12F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 20058  000C58  006F FF7C  F04C    	movff	indf2,??_vfpfcnvrt
 20059  000C5E  0E02               	movlw	2
 20060  000C60  26DE               	addwf	postinc2,f,c
 20061  000C62  006F FF7C  F04D    	movff	indf2,??_vfpfcnvrt+1
 20062  000C68  0E00               	movlw	0
 20063  000C6A  22DD               	addwfc	postdec2,f,c
 20064  000C6C  0060  F133  FFD9   	movff	??_vfpfcnvrt,fsr2l
 20065  000C72  0060  F137  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 20066  000C78  006F FF78  F04E    	movff	postinc2,??_vfpfcnvrt+2
 20067  000C7E  006F FF74  F04F    	movff	postdec2,??_vfpfcnvrt+3
 20068  000C84  0060  F138  F06F   	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 20069  000C8A  0060  F13C  F070   	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 20070  000C90  0100               	movlb	0	; () banked
 20071  000C92  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 20072  000C94  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 20073  000C96  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 20074  000C98  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 20075  000C9A  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 20076  000C9C  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 20077  000C9E                     
 20078                           ; BSR set to: 0
 20079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 20080  000C9E  0060  F118  F01F   	movff	vfpfcnvrt@fp,utoa@fp
 20081  000CA4  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,utoa@fp+1
 20082  000CAA  0060  F1BC  F021   	movff	vfpfcnvrt@llu,utoa@d
 20083  000CB0  0060  F1C0  F022   	movff	vfpfcnvrt@llu+1,utoa@d+1
 20084  000CB6  0060  F1C4  F023   	movff	vfpfcnvrt@llu+2,utoa@d+2
 20085  000CBC  0060  F1C8  F024   	movff	vfpfcnvrt@llu+3,utoa@d+3
 20086  000CC2  0060  F1CC  F025   	movff	vfpfcnvrt@llu+4,utoa@d+4
 20087  000CC8  0060  F1D0  F026   	movff	vfpfcnvrt@llu+5,utoa@d+5
 20088  000CCE  0060  F1D4  F027   	movff	vfpfcnvrt@llu+6,utoa@d+6
 20089  000CD4  0060  F1D8  F028   	movff	vfpfcnvrt@llu+7,utoa@d+7
 20090  000CDA  ECE4  F018         	call	_utoa	;wreg free
 20091  000CDE  0060  F07C  F046   	movff	?_utoa,?_vfpfcnvrt
 20092  000CE4  0060  F080  F047   	movff	?_utoa+1,?_vfpfcnvrt+1
 20093  000CEA  EF78  F007         	goto	l3157
 20094  000CEE                     l14397:
 20095                           
 20096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 20097  000CEE  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20098  000CF4  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20099  000CFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20100  000D00  006F FF77 FFF7     	movff	postdec2,tblptrh
 20101  000D06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20102  000D06  6AF8               	clrf	tblptru,c
 20103  000D08                     	endif
 20104  000D08                     	if	0	;tblptru may be non-zero
 20105  000D08                     	endif
 20106  000D08  0008               	tblrd		*
 20107  000D0A  50F5               	movf	tablat,w,c
 20108  000D0C  0A78               	xorlw	120
 20109  000D0E  B4D8               	btfsc	status,2,c
 20110  000D10  EF8C  F006         	goto	u13581
 20111  000D14  EF8E  F006         	goto	u13580
 20112  000D18                     u13581:
 20113  000D18  EFA5  F006         	goto	l14401
 20114  000D1C                     u13580:
 20115  000D1C  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20116  000D22  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20117  000D28  006F FF7B FFF6     	movff	postinc2,tblptrl
 20118  000D2E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20119  000D34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20120  000D34  6AF8               	clrf	tblptru,c
 20121  000D36                     	endif
 20122  000D36                     	if	0	;tblptru may be non-zero
 20123  000D36                     	endif
 20124  000D36  0008               	tblrd		*
 20125  000D38  50F5               	movf	tablat,w,c
 20126  000D3A  0A58               	xorlw	88
 20127  000D3C  A4D8               	btfss	status,2,c
 20128  000D3E  EFA3  F006         	goto	u13591
 20129  000D42  EFA5  F006         	goto	u13590
 20130  000D46                     u13591:
 20131  000D46  EF13  F007         	goto	l14411
 20132  000D4A                     u13590:
 20133  000D4A                     l14401:
 20134                           
 20135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 20136  000D4A  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20137  000D50  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20138  000D56  006F FF7B FFF6     	movff	postinc2,tblptrl
 20139  000D5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20140  000D62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20141  000D62  6AF8               	clrf	tblptru,c
 20142  000D64                     	endif
 20143  000D64                     	if	0	;tblptru may be non-zero
 20144  000D64                     	endif
 20145  000D64  0008               	tblrd		*
 20146  000D66  006F FFD4  F06A    	movff	tablat,vfpfcnvrt@c
 20147  000D6C                     
 20148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 20149  000D6C  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20150  000D72  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20151  000D78  2ADE               	incf	postinc2,f,c
 20152  000D7A  0E00               	movlw	0
 20153  000D7C  22DD               	addwfc	postdec2,f,c
 20154  000D7E                     
 20155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20156  000D7E  0060  F12B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
 20157  000D84  0060  F12F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
 20158  000D8A  006F FF7C  F04C    	movff	indf2,??_vfpfcnvrt
 20159  000D90  0E02               	movlw	2
 20160  000D92  26DE               	addwf	postinc2,f,c
 20161  000D94  006F FF7C  F04D    	movff	indf2,??_vfpfcnvrt+1
 20162  000D9A  0E00               	movlw	0
 20163  000D9C  22DD               	addwfc	postdec2,f,c
 20164  000D9E  0060  F133  FFD9   	movff	??_vfpfcnvrt,fsr2l
 20165  000DA4  0060  F137  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
 20166  000DAA  006F FF78  F04E    	movff	postinc2,??_vfpfcnvrt+2
 20167  000DB0  006F FF74  F04F    	movff	postdec2,??_vfpfcnvrt+3
 20168  000DB6  0060  F138  F06F   	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 20169  000DBC  0060  F13C  F070   	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 20170  000DC2  0100               	movlb	0	; () banked
 20171  000DC4  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 20172  000DC6  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 20173  000DC8  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 20174  000DCA  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 20175  000DCC  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 20176  000DCE  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 20177  000DD0                     
 20178                           ; BSR set to: 0
 20179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 20180  000DD0  0060  F118  F01F   	movff	vfpfcnvrt@fp,xtoa@fp
 20181  000DD6  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 20182  000DDC  0060  F1BC  F021   	movff	vfpfcnvrt@llu,xtoa@d
 20183  000DE2  0060  F1C0  F022   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 20184  000DE8  0060  F1C4  F023   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 20185  000DEE  0060  F1C8  F024   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 20186  000DF4  0060  F1CC  F025   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 20187  000DFA  0060  F1D0  F026   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 20188  000E00  0060  F1D4  F027   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 20189  000E06  0060  F1D8  F028   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 20190  000E0C  0060  F1A8  F029   	movff	vfpfcnvrt@c,xtoa@x
 20191  000E12  EC26  F012         	call	_xtoa	;wreg free
 20192  000E16  0060  F07C  F046   	movff	?_xtoa,?_vfpfcnvrt
 20193  000E1C  0060  F080  F047   	movff	?_xtoa+1,?_vfpfcnvrt+1
 20194  000E22  EF78  F007         	goto	l3157
 20195  000E26                     l14411:
 20196                           
 20197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 20198  000E26  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20199  000E2C  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20200  000E32  006F FF7B FFF6     	movff	postinc2,tblptrl
 20201  000E38  006F FF77 FFF7     	movff	postdec2,tblptrh
 20202  000E3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20203  000E3E  6AF8               	clrf	tblptru,c
 20204  000E40                     	endif
 20205  000E40                     	if	0	;tblptru may be non-zero
 20206  000E40                     	endif
 20207  000E40  0008               	tblrd		*
 20208  000E42  50F5               	movf	tablat,w,c
 20209  000E44  0A25               	xorlw	37
 20210  000E46  A4D8               	btfss	status,2,c
 20211  000E48  EF28  F007         	goto	u13601
 20212  000E4C  EF2A  F007         	goto	u13600
 20213  000E50                     u13601:
 20214  000E50  EF45  F007         	goto	l14421
 20215  000E54                     u13600:
 20216  000E54                     
 20217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 20218  000E54  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20219  000E5A  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20220  000E60  2ADE               	incf	postinc2,f,c
 20221  000E62  0E00               	movlw	0
 20222  000E64  22DD               	addwfc	postdec2,f,c
 20223  000E66                     
 20224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 20225  000E66  0E00               	movlw	0
 20226  000E68  6E05               	movwf	(fputc@c+1)^0,c
 20227  000E6A  0E25               	movlw	37
 20228  000E6C  6E04               	movwf	fputc@c^0,c
 20229  000E6E  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 20230  000E74  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 20231  000E7A  ECE9  F03F         	call	_fputc	;wreg free
 20232  000E7E                     l14417:
 20233                           
 20234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 20235  000E7E  0E00               	movlw	0
 20236  000E80  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 20237  000E82  0E01               	movlw	1
 20238  000E84  6E46               	movwf	?_vfpfcnvrt^0,c
 20239  000E86  EF78  F007         	goto	l3157
 20240  000E8A                     l14421:
 20241                           
 20242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 20243  000E8A  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20244  000E90  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20245  000E96  2ADE               	incf	postinc2,f,c
 20246  000E98  0E00               	movlw	0
 20247  000E9A  22DD               	addwfc	postdec2,f,c
 20248  000E9C                     
 20249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 20250  000E9C  0E00               	movlw	0
 20251  000E9E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 20252  000EA0  0E00               	movlw	0
 20253  000EA2  6E46               	movwf	?_vfpfcnvrt^0,c
 20254  000EA4  EF78  F007         	goto	l3157
 20255  000EA8                     l14427:
 20256                           
 20257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 20258  000EA8  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20259  000EAE  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20260  000EB4  006F FF7B FFF6     	movff	postinc2,tblptrl
 20261  000EBA  006F FF77 FFF7     	movff	postdec2,tblptrh
 20262  000EC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20263  000EC0  6AF8               	clrf	tblptru,c
 20264  000EC2                     	endif
 20265  000EC2                     	if	0	;tblptru may be non-zero
 20266  000EC2                     	endif
 20267  000EC2  0008               	tblrd		*
 20268  000EC4  50F5               	movf	tablat,w,c
 20269  000EC6  6E04               	movwf	fputc@c^0,c
 20270  000EC8  6A05               	clrf	(fputc@c+1)^0,c
 20271  000ECA  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 20272  000ED0  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 20273  000ED6  ECE9  F03F         	call	_fputc	;wreg free
 20274  000EDA                     
 20275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 20276  000EDA  0060  F123  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 20277  000EE0  0060  F127  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 20278  000EE6  2ADE               	incf	postinc2,f,c
 20279  000EE8  0E00               	movlw	0
 20280  000EEA  22DD               	addwfc	postdec2,f,c
 20281  000EEC  EF3F  F007         	goto	l14417
 20282  000EF0                     l3157:
 20283  000EF0  0012               	return		;funcret
 20284  000EF2                     __end_of_vfpfcnvrt:
 20285                           	opt callstack 0
 20286                           
 20287 ;; *************** function _xtoa *****************
 20288 ;; Defined at:
 20289 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20290 ;; Parameters:    Size  Location     Type
 20291 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 20292 ;;		 -> NULL(0), 
 20293 ;;  d               8   32[COMRAM] unsigned long long 
 20294 ;;  x               1   40[COMRAM] unsigned char 
 20295 ;; Auto vars:     Size  Location     Type
 20296 ;;  n               8   57[COMRAM] unsigned long long 
 20297 ;;  c               2   67[COMRAM] int 
 20298 ;;  i               2   65[COMRAM] int 
 20299 ;;  w               2   55[COMRAM] int 
 20300 ;;  p               2   53[COMRAM] int 
 20301 ;; Return value:  Size  Location     Type
 20302 ;;                  2   30[COMRAM] int 
 20303 ;; Registers used:
 20304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20305 ;; Tracked objects:
 20306 ;;		On entry : 0/0
 20307 ;;		On exit  : 0/0
 20308 ;;		Unchanged: 0/0
 20309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20310 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20311 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20312 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20313 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20314 ;;Total ram usage:       39 bytes
 20315 ;; Hardware stack levels used:    1
 20316 ;; Hardware stack levels required when called:   12
 20317 ;; This function calls:
 20318 ;;		_isalpha
 20319 ;;		_isupper
 20320 ;;		_pad
 20321 ;;		_toupper
 20322 ;; This function is called by:
 20323 ;;		_vfpfcnvrt
 20324 ;; This function uses a non-reentrant model
 20325 ;;
 20326                           
 20327                           	psect	text120
 20328  00244C                     __ptext120:
 20329                           	opt callstack 0
 20330  00244C                     _xtoa:
 20331                           	opt callstack 12
 20332  00244C                     
 20333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 20334  00244C  0100               	movlb	0	; () banked
 20335  00244E  BFE3               	btfsc	(_prec+1)& (0+255),7,b
 20336  002450  EF2C  F012         	goto	u13151
 20337  002454  EF2E  F012         	goto	u13150
 20338  002458                     u13151:
 20339  002458  EF2F  F012         	goto	l14165
 20340  00245C                     u13150:
 20341  00245C                     
 20342                           ; BSR set to: 0
 20343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 20344  00245C  93E4               	bcf	_flags& (0+255),1,b
 20345  00245E                     l14165:
 20346                           
 20347                           ; BSR set to: 0
 20348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 20349  00245E  BFE3               	btfsc	(_prec+1)& (0+255),7,b
 20350  002460  EF3C  F012         	goto	u13160
 20351  002464  51E3               	movf	(_prec+1)& (0+255),w,b
 20352  002466  E106               	bnz	u13161
 20353  002468  05E2               	decf	_prec& (0+255),w,b
 20354  00246A  B0D8               	btfsc	status,0,c
 20355  00246C  EF3A  F012         	goto	u13161
 20356  002470  EF3C  F012         	goto	u13160
 20357  002474                     u13161:
 20358  002474  EF42  F012         	goto	l3103
 20359  002478                     u13160:
 20360  002478                     
 20361                           ; BSR set to: 0
 20362  002478  0E00               	movlw	0
 20363  00247A  6E37               	movwf	(xtoa@p+1)^0,c
 20364  00247C  0E01               	movlw	1
 20365  00247E  6E36               	movwf	xtoa@p^0,c
 20366  002480  EF48  F012         	goto	l3105
 20367  002484                     l3103:
 20368                           
 20369                           ; BSR set to: 0
 20370  002484  0060  F388  F036   	movff	_prec,xtoa@p
 20371  00248A  0060  F38C  F037   	movff	_prec+1,xtoa@p+1
 20372  002490                     l3105:
 20373                           
 20374                           ; BSR set to: 0
 20375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 20376  002490  0060  F57C  F038   	movff	_width,xtoa@w
 20377  002496  0060  F580  F039   	movff	_width+1,xtoa@w+1
 20378                           
 20379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 20380  00249C  A9E4               	btfss	_flags& (0+255),4,b
 20381  00249E  EF53  F012         	goto	u13171
 20382  0024A2  EF55  F012         	goto	u13170
 20383  0024A6                     u13171:
 20384  0024A6  EF59  F012         	goto	l14171
 20385  0024AA                     u13170:
 20386  0024AA                     
 20387                           ; BSR set to: 0
 20388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 20389  0024AA  0EFE               	movlw	254
 20390  0024AC  2638               	addwf	xtoa@w^0,f,c
 20391  0024AE  0EFF               	movlw	255
 20392  0024B0  2239               	addwfc	(xtoa@w+1)^0,f,c
 20393  0024B2                     l14171:
 20394                           
 20395                           ; BSR set to: 0
 20396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 20397  0024B2  0060  F084  F03A   	movff	xtoa@d,xtoa@n
 20398  0024B8  0060  F088  F03B   	movff	xtoa@d+1,xtoa@n+1
 20399  0024BE  0060  F08C  F03C   	movff	xtoa@d+2,xtoa@n+2
 20400  0024C4  0060  F090  F03D   	movff	xtoa@d+3,xtoa@n+3
 20401  0024CA  0060  F094  F03E   	movff	xtoa@d+4,xtoa@n+4
 20402  0024D0  0060  F098  F03F   	movff	xtoa@d+5,xtoa@n+5
 20403  0024D6  0060  F09C  F040   	movff	xtoa@d+6,xtoa@n+6
 20404  0024DC  0060  F0A0  F041   	movff	xtoa@d+7,xtoa@n+7
 20405  0024E2                     
 20406                           ; BSR set to: 0
 20407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 20408  0024E2  0E00               	movlw	0
 20409  0024E4  6E43               	movwf	(xtoa@i+1)^0,c
 20410  0024E6  0E1F               	movlw	31
 20411  0024E8  6E42               	movwf	xtoa@i^0,c
 20412  0024EA                     
 20413                           ; BSR set to: 0
 20414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 20415  0024EA  0E00               	movlw	0
 20416  0024EC  0102               	movlb	2	; () banked
 20417  0024EE  6FE5               	movwf	(_dbuf+31)& (0+255),b
 20418                           
 20419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20420  0024F0  EF42  F013         	goto	l14207
 20421  0024F4                     l14177:
 20422                           
 20423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 20424  0024F4  0642               	decf	xtoa@i^0,f,c
 20425  0024F6  A0D8               	btfss	status,0,c
 20426  0024F8  0643               	decf	(xtoa@i+1)^0,f,c
 20427  0024FA                     
 20428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 20429  0024FA  0E0F               	movlw	15
 20430  0024FC  143A               	andwf	xtoa@n^0,w,c
 20431  0024FE  6E44               	movwf	xtoa@c^0,c
 20432  002500  6A45               	clrf	(xtoa@c+1)^0,c
 20433  002502                     
 20434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 20435  002502  BE45               	btfsc	(xtoa@c+1)^0,7,c
 20436  002504  EF8D  F012         	goto	u13181
 20437  002508  5045               	movf	(xtoa@c+1)^0,w,c
 20438  00250A  E109               	bnz	u13180
 20439  00250C  0E0A               	movlw	10
 20440  00250E  5C44               	subwf	xtoa@c^0,w,c
 20441  002510  A0D8               	btfss	status,0,c
 20442  002512  EF8D  F012         	goto	u13181
 20443  002516  EF8F  F012         	goto	u13180
 20444  00251A                     u13181:
 20445  00251A  EF97  F012         	goto	l14185
 20446  00251E                     u13180:
 20447  00251E  0E57               	movlw	87
 20448  002520  2444               	addwf	xtoa@c^0,w,c
 20449  002522  6E44               	movwf	xtoa@c^0,c
 20450  002524  0E00               	movlw	0
 20451  002526  2045               	addwfc	(xtoa@c+1)^0,w,c
 20452  002528  6E45               	movwf	(xtoa@c+1)^0,c
 20453  00252A  EF9D  F012         	goto	l3112
 20454  00252E                     l14185:
 20455  00252E  0E30               	movlw	48
 20456  002530  2444               	addwf	xtoa@c^0,w,c
 20457  002532  6E44               	movwf	xtoa@c^0,c
 20458  002534  0E00               	movlw	0
 20459  002536  2045               	addwfc	(xtoa@c+1)^0,w,c
 20460  002538  6E45               	movwf	(xtoa@c+1)^0,c
 20461  00253A                     l3112:
 20462  00253A  0EBF               	movlw	191
 20463  00253C  6E2A               	movwf	??_xtoa^0,c
 20464  00253E  0EFF               	movlw	255
 20465  002540  6E2B               	movwf	(??_xtoa+1)^0,c
 20466  002542  5029               	movf	xtoa@x^0,w,c
 20467  002544  6E2C               	movwf	(??_xtoa+2)^0,c
 20468  002546  6A2D               	clrf	(??_xtoa+3)^0,c
 20469  002548  502A               	movf	??_xtoa^0,w,c
 20470  00254A  262C               	addwf	(??_xtoa+2)^0,f,c
 20471  00254C  502B               	movf	(??_xtoa+1)^0,w,c
 20472  00254E  222D               	addwfc	(??_xtoa+3)^0,f,c
 20473  002550  502D               	movf	(??_xtoa+3)^0,w,c
 20474  002552  E10A               	bnz	u13190
 20475  002554  0E1A               	movlw	26
 20476  002556  5C2C               	subwf	(??_xtoa+2)^0,w,c
 20477  002558  A0D8               	btfss	status,0,c
 20478  00255A  EFB1  F012         	goto	u13191
 20479  00255E  EFB4  F012         	goto	u13190
 20480  002562                     u13191:
 20481  002562  0E01               	movlw	1
 20482  002564  EFB5  F012         	goto	u13200
 20483  002568                     u13190:
 20484  002568  0E00               	movlw	0
 20485  00256A                     u13200:
 20486  00256A  6E32               	movwf	_xtoa$6937^0,c
 20487  00256C  6A33               	clrf	(_xtoa$6937+1)^0,c
 20488  00256E  5032               	movf	_xtoa$6937^0,w,c
 20489  002570  1033               	iorwf	(_xtoa$6937+1)^0,w,c
 20490  002572  B4D8               	btfsc	status,2,c
 20491  002574  EFBE  F012         	goto	u13211
 20492  002578  EFC0  F012         	goto	u13210
 20493  00257C                     u13211:
 20494  00257C  EFF4  F012         	goto	l14199
 20495  002580                     u13210:
 20496  002580  0E9F               	movlw	159
 20497  002582  6E2A               	movwf	??_xtoa^0,c
 20498  002584  0EFF               	movlw	255
 20499  002586  6E2B               	movwf	(??_xtoa+1)^0,c
 20500  002588  0E20               	movlw	32
 20501  00258A  1044               	iorwf	xtoa@c^0,w,c
 20502  00258C  6E2C               	movwf	(??_xtoa+2)^0,c
 20503  00258E  0E00               	movlw	0
 20504  002590  1045               	iorwf	(xtoa@c+1)^0,w,c
 20505  002592  6E2D               	movwf	(??_xtoa+3)^0,c
 20506  002594  502A               	movf	??_xtoa^0,w,c
 20507  002596  262C               	addwf	(??_xtoa+2)^0,f,c
 20508  002598  502B               	movf	(??_xtoa+1)^0,w,c
 20509  00259A  222D               	addwfc	(??_xtoa+3)^0,f,c
 20510  00259C  502D               	movf	(??_xtoa+3)^0,w,c
 20511  00259E  E10A               	bnz	u13220
 20512  0025A0  0E1A               	movlw	26
 20513  0025A2  5C2C               	subwf	(??_xtoa+2)^0,w,c
 20514  0025A4  A0D8               	btfss	status,0,c
 20515  0025A6  EFD7  F012         	goto	u13221
 20516  0025AA  EFDA  F012         	goto	u13220
 20517  0025AE                     u13221:
 20518  0025AE  0E01               	movlw	1
 20519  0025B0  EFDB  F012         	goto	u13230
 20520  0025B4                     u13220:
 20521  0025B4  0E00               	movlw	0
 20522  0025B6                     u13230:
 20523  0025B6  6E34               	movwf	_xtoa$6938^0,c
 20524  0025B8  6A35               	clrf	(_xtoa$6938+1)^0,c
 20525  0025BA  5034               	movf	_xtoa$6938^0,w,c
 20526  0025BC  1035               	iorwf	(_xtoa$6938+1)^0,w,c
 20527  0025BE  B4D8               	btfsc	status,2,c
 20528  0025C0  EFE4  F012         	goto	u13241
 20529  0025C4  EFE6  F012         	goto	u13240
 20530  0025C8                     u13241:
 20531  0025C8  EFF4  F012         	goto	l14199
 20532  0025CC                     u13240:
 20533  0025CC                     
 20534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 20535  0025CC  0060  F110  F008   	movff	xtoa@c,toupper@c
 20536  0025D2  0060  F114  F009   	movff	xtoa@c+1,toupper@c+1
 20537  0025D8  EC13  F044         	call	_toupper	;wreg free
 20538  0025DC  0060  F020  F044   	movff	?_toupper,xtoa@c
 20539  0025E2  0060  F024  F045   	movff	?_toupper+1,xtoa@c+1
 20540  0025E8                     l14199:
 20541                           
 20542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 20543  0025E8  0EC6               	movlw	low _dbuf
 20544  0025EA  2442               	addwf	xtoa@i^0,w,c
 20545  0025EC  6ED9               	movwf	fsr2l,c
 20546  0025EE  0E02               	movlw	high _dbuf
 20547  0025F0  2043               	addwfc	(xtoa@i+1)^0,w,c
 20548  0025F2  6EDA               	movwf	fsr2h,c
 20549  0025F4  0060  F113  FFDF   	movff	xtoa@c,indf2
 20550  0025FA                     
 20551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 20552  0025FA  0636               	decf	xtoa@p^0,f,c
 20553  0025FC  A0D8               	btfss	status,0,c
 20554  0025FE  0637               	decf	(xtoa@p+1)^0,f,c
 20555  002600                     
 20556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 20557  002600  0638               	decf	xtoa@w^0,f,c
 20558  002602  A0D8               	btfss	status,0,c
 20559  002604  0639               	decf	(xtoa@w+1)^0,f,c
 20560  002606                     
 20561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 20562  002606  0060  F0E8  F02A   	movff	xtoa@n,??_xtoa
 20563  00260C  0060  F0EC  F02B   	movff	xtoa@n+1,??_xtoa+1
 20564  002612  0060  F0F0  F02C   	movff	xtoa@n+2,??_xtoa+2
 20565  002618  0060  F0F4  F02D   	movff	xtoa@n+3,??_xtoa+3
 20566  00261E  0060  F0F8  F02E   	movff	xtoa@n+4,??_xtoa+4
 20567  002624  0060  F0FC  F02F   	movff	xtoa@n+5,??_xtoa+5
 20568  00262A  0060  F100  F030   	movff	xtoa@n+6,??_xtoa+6
 20569  002630  0060  F104  F031   	movff	xtoa@n+7,??_xtoa+7
 20570  002636  0E05               	movlw	5
 20571  002638  EF27  F013         	goto	u13250
 20572  00263C                     u13255:
 20573  00263C  90D8               	bcf	status,0,c
 20574  00263E  3231               	rrcf	(??_xtoa+7)^0,f,c
 20575  002640  3230               	rrcf	(??_xtoa+6)^0,f,c
 20576  002642  322F               	rrcf	(??_xtoa+5)^0,f,c
 20577  002644  322E               	rrcf	(??_xtoa+4)^0,f,c
 20578  002646  322D               	rrcf	(??_xtoa+3)^0,f,c
 20579  002648  322C               	rrcf	(??_xtoa+2)^0,f,c
 20580  00264A  322B               	rrcf	(??_xtoa+1)^0,f,c
 20581  00264C  322A               	rrcf	??_xtoa^0,f,c
 20582  00264E                     u13250:
 20583  00264E  2EE8               	decfsz	wreg,f,c
 20584  002650  EF1E  F013         	goto	u13255
 20585  002654  0060  F0A8  F03A   	movff	??_xtoa,xtoa@n
 20586  00265A  0060  F0AC  F03B   	movff	??_xtoa+1,xtoa@n+1
 20587  002660  0060  F0B0  F03C   	movff	??_xtoa+2,xtoa@n+2
 20588  002666  0060  F0B4  F03D   	movff	??_xtoa+3,xtoa@n+3
 20589  00266C  0060  F0B8  F03E   	movff	??_xtoa+4,xtoa@n+4
 20590  002672  0060  F0BC  F03F   	movff	??_xtoa+5,xtoa@n+5
 20591  002678  0060  F0C0  F040   	movff	??_xtoa+6,xtoa@n+6
 20592  00267E  0060  F0C4  F041   	movff	??_xtoa+7,xtoa@n+7
 20593  002684                     l14207:
 20594                           
 20595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20596  002684  BE43               	btfsc	(xtoa@i+1)^0,7,c
 20597  002686  EF4E  F013         	goto	u13261
 20598  00268A  5043               	movf	(xtoa@i+1)^0,w,c
 20599  00268C  E109               	bnz	u13260
 20600  00268E  0E02               	movlw	2
 20601  002690  5C42               	subwf	xtoa@i^0,w,c
 20602  002692  A0D8               	btfss	status,0,c
 20603  002694  EF4E  F013         	goto	u13261
 20604  002698  EF50  F013         	goto	u13260
 20605  00269C                     u13261:
 20606  00269C  EF81  F013         	goto	l3126
 20607  0026A0                     u13260:
 20608  0026A0  503A               	movf	xtoa@n^0,w,c
 20609  0026A2  103B               	iorwf	(xtoa@n+1)^0,w,c
 20610  0026A4  103C               	iorwf	(xtoa@n+2)^0,w,c
 20611  0026A6  103D               	iorwf	(xtoa@n+3)^0,w,c
 20612  0026A8  103E               	iorwf	(xtoa@n+4)^0,w,c
 20613  0026AA  103F               	iorwf	(xtoa@n+5)^0,w,c
 20614  0026AC  1040               	iorwf	(xtoa@n+6)^0,w,c
 20615  0026AE  1041               	iorwf	(xtoa@n+7)^0,w,c
 20616  0026B0  A4D8               	btfss	status,2,c
 20617  0026B2  EF5D  F013         	goto	u13271
 20618  0026B6  EF5F  F013         	goto	u13270
 20619  0026BA                     u13271:
 20620  0026BA  EF7A  F012         	goto	l14177
 20621  0026BE                     u13270:
 20622  0026BE  BE37               	btfsc	(xtoa@p+1)^0,7,c
 20623  0026C0  EF6C  F013         	goto	u13280
 20624  0026C4  5037               	movf	(xtoa@p+1)^0,w,c
 20625  0026C6  E106               	bnz	u13281
 20626  0026C8  0436               	decf	xtoa@p^0,w,c
 20627  0026CA  B0D8               	btfsc	status,0,c
 20628  0026CC  EF6A  F013         	goto	u13281
 20629  0026D0  EF6C  F013         	goto	u13280
 20630  0026D4                     u13281:
 20631  0026D4  EF7A  F012         	goto	l14177
 20632  0026D8                     u13280:
 20633  0026D8  BE39               	btfsc	(xtoa@w+1)^0,7,c
 20634  0026DA  EF77  F013         	goto	u13291
 20635  0026DE  5039               	movf	(xtoa@w+1)^0,w,c
 20636  0026E0  E108               	bnz	u13290
 20637  0026E2  0438               	decf	xtoa@w^0,w,c
 20638  0026E4  A0D8               	btfss	status,0,c
 20639  0026E6  EF77  F013         	goto	u13291
 20640  0026EA  EF79  F013         	goto	u13290
 20641  0026EE                     u13291:
 20642  0026EE  EF81  F013         	goto	l3126
 20643  0026F2                     u13290:
 20644  0026F2  0100               	movlb	0	; () banked
 20645  0026F4  B3E4               	btfsc	_flags& (0+255),1,b
 20646  0026F6  EF7F  F013         	goto	u13301
 20647  0026FA  EF81  F013         	goto	u13300
 20648  0026FE                     u13301:
 20649  0026FE  EF7A  F012         	goto	l14177
 20650  002702                     u13300:
 20651  002702                     l3126:
 20652                           
 20653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 20654  002702  0100               	movlb	0	; () banked
 20655  002704  A9E4               	btfss	_flags& (0+255),4,b
 20656  002706  EF87  F013         	goto	u13311
 20657  00270A  EF89  F013         	goto	u13310
 20658  00270E                     u13311:
 20659  00270E  EFA0  F013         	goto	l14223
 20660  002712                     u13310:
 20661  002712                     
 20662                           ; BSR set to: 0
 20663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 20664  002712  0642               	decf	xtoa@i^0,f,c
 20665  002714  A0D8               	btfss	status,0,c
 20666  002716  0643               	decf	(xtoa@i+1)^0,f,c
 20667  002718                     
 20668                           ; BSR set to: 0
 20669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 20670  002718  0EC6               	movlw	low _dbuf
 20671  00271A  2442               	addwf	xtoa@i^0,w,c
 20672  00271C  6ED9               	movwf	fsr2l,c
 20673  00271E  0E02               	movlw	high _dbuf
 20674  002720  2043               	addwfc	(xtoa@i+1)^0,w,c
 20675  002722  6EDA               	movwf	fsr2h,c
 20676  002724  0060  F0A7  FFDF   	movff	xtoa@x,indf2
 20677  00272A                     
 20678                           ; BSR set to: 0
 20679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 20680  00272A  0642               	decf	xtoa@i^0,f,c
 20681  00272C  A0D8               	btfss	status,0,c
 20682  00272E  0643               	decf	(xtoa@i+1)^0,f,c
 20683                           
 20684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 20685  002730  0EC6               	movlw	low _dbuf
 20686  002732  2442               	addwf	xtoa@i^0,w,c
 20687  002734  6ED9               	movwf	fsr2l,c
 20688  002736  0E02               	movlw	high _dbuf
 20689  002738  2043               	addwfc	(xtoa@i+1)^0,w,c
 20690  00273A  6EDA               	movwf	fsr2h,c
 20691  00273C  0E30               	movlw	48
 20692  00273E  6EDF               	movwf	indf2,c
 20693  002740                     l14223:
 20694                           
 20695                           ; BSR set to: 0
 20696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 20697  002740  0060  F07C  F014   	movff	xtoa@fp,pad@fp
 20698  002746  0060  F080  F015   	movff	xtoa@fp+1,pad@fp+1
 20699  00274C  0EC6               	movlw	low _dbuf
 20700  00274E  2442               	addwf	xtoa@i^0,w,c
 20701  002750  6E16               	movwf	pad@buf^0,c
 20702  002752  0E02               	movlw	high _dbuf
 20703  002754  2043               	addwfc	(xtoa@i+1)^0,w,c
 20704  002756  6E17               	movwf	(pad@buf+1)^0,c
 20705  002758  0060  F0E0  F018   	movff	xtoa@w,pad@p
 20706  00275E  0060  F0E4  F019   	movff	xtoa@w+1,pad@p+1
 20707  002764  EC05  F036         	call	_pad	;wreg free
 20708  002768  0060  F050  F01F   	movff	?_pad,?_xtoa
 20709  00276E  0060  F054  F020   	movff	?_pad+1,?_xtoa+1
 20710  002774  0012               	return		;funcret
 20711  002776                     __end_of_xtoa:
 20712                           	opt callstack 0
 20713                           
 20714 ;; *************** function _toupper *****************
 20715 ;; Defined at:
 20716 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 20717 ;; Parameters:    Size  Location     Type
 20718 ;;  c               2    7[COMRAM] int 
 20719 ;; Auto vars:     Size  Location     Type
 20720 ;;		None
 20721 ;; Return value:  Size  Location     Type
 20722 ;;                  2    7[COMRAM] int 
 20723 ;; Registers used:
 20724 ;;		wreg, status,2, status,0
 20725 ;; Tracked objects:
 20726 ;;		On entry : 0/0
 20727 ;;		On exit  : 0/0
 20728 ;;		Unchanged: 0/0
 20729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20732 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20733 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20734 ;;Total ram usage:        8 bytes
 20735 ;; Hardware stack levels used:    1
 20736 ;; Hardware stack levels required when called:    8
 20737 ;; This function calls:
 20738 ;;		_islower
 20739 ;; This function is called by:
 20740 ;;		_xtoa
 20741 ;;		___strtoxl
 20742 ;; This function uses a non-reentrant model
 20743 ;;
 20744                           
 20745                           	psect	text121
 20746  008826                     __ptext121:
 20747                           	opt callstack 0
 20748  008826                     _toupper:
 20749                           	opt callstack 15
 20750  008826  0E9F               	movlw	159
 20751  008828  6E0A               	movwf	??_toupper^0,c
 20752  00882A  0EFF               	movlw	255
 20753  00882C  6E0B               	movwf	(??_toupper+1)^0,c
 20754  00882E  0060  F020  F00C   	movff	toupper@c,??_toupper+2
 20755  008834  0060  F024  F00D   	movff	toupper@c+1,??_toupper+3
 20756  00883A  500A               	movf	??_toupper^0,w,c
 20757  00883C  260C               	addwf	(??_toupper+2)^0,f,c
 20758  00883E  500B               	movf	(??_toupper+1)^0,w,c
 20759  008840  220D               	addwfc	(??_toupper+3)^0,f,c
 20760  008842  500D               	movf	(??_toupper+3)^0,w,c
 20761  008844  E10A               	bnz	u12560
 20762  008846  0E1A               	movlw	26
 20763  008848  5C0C               	subwf	(??_toupper+2)^0,w,c
 20764  00884A  A0D8               	btfss	status,0,c
 20765  00884C  EF2A  F044         	goto	u12561
 20766  008850  EF2D  F044         	goto	u12560
 20767  008854                     u12561:
 20768  008854  0E01               	movlw	1
 20769  008856  EF2E  F044         	goto	u12570
 20770  00885A                     u12560:
 20771  00885A  0E00               	movlw	0
 20772  00885C                     u12570:
 20773  00885C  6E0E               	movwf	_toupper$7578^0,c
 20774  00885E  6A0F               	clrf	(_toupper$7578+1)^0,c
 20775  008860  500E               	movf	_toupper$7578^0,w,c
 20776  008862  100F               	iorwf	(_toupper$7578+1)^0,w,c
 20777  008864  B4D8               	btfsc	status,2,c
 20778  008866  EF37  F044         	goto	u12581
 20779  00886A  EF39  F044         	goto	u12580
 20780  00886E                     u12581:
 20781  00886E  EF3F  F044         	goto	l4008
 20782  008872                     u12580:
 20783  008872  0E5F               	movlw	95
 20784  008874  1408               	andwf	toupper@c^0,w,c
 20785  008876  6E08               	movwf	?_toupper^0,c
 20786  008878  6A09               	clrf	(?_toupper+1)^0,c
 20787  00887A  EF45  F044         	goto	l4013
 20788  00887E                     l4008:
 20789  00887E  0060  F020  F008   	movff	toupper@c,?_toupper
 20790  008884  0060  F024  F009   	movff	toupper@c+1,?_toupper+1
 20791  00888A                     l4013:
 20792  00888A  0012               	return		;funcret
 20793  00888C                     __end_of_toupper:
 20794                           	opt callstack 0
 20795                           
 20796 ;; *************** function _islower *****************
 20797 ;; Defined at:
 20798 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 20799 ;; Parameters:    Size  Location     Type
 20800 ;;  c               2    1[COMRAM] int 
 20801 ;; Auto vars:     Size  Location     Type
 20802 ;;		None
 20803 ;; Return value:  Size  Location     Type
 20804 ;;                  2    1[COMRAM] int 
 20805 ;; Registers used:
 20806 ;;		wreg, status,2, status,0
 20807 ;; Tracked objects:
 20808 ;;		On entry : 0/0
 20809 ;;		On exit  : 0/0
 20810 ;;		Unchanged: 0/0
 20811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20815 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20816 ;;Total ram usage:        6 bytes
 20817 ;; Hardware stack levels used:    1
 20818 ;; Hardware stack levels required when called:    7
 20819 ;; This function calls:
 20820 ;;		Nothing
 20821 ;; This function is called by:
 20822 ;;		_toupper
 20823 ;; This function uses a non-reentrant model
 20824 ;;
 20825                           
 20826                           	psect	text122
 20827  009422                     __ptext122:
 20828                           	opt callstack 0
 20829  009422                     _islower:
 20830                           	opt callstack 15
 20831  009422  0E9F               	movlw	159
 20832  009424  6E04               	movwf	??_islower^0,c
 20833  009426  0EFF               	movlw	255
 20834  009428  6E05               	movwf	(??_islower+1)^0,c
 20835  00942A  0060  F008  F006   	movff	islower@c,??_islower+2
 20836  009430  0060  F00C  F007   	movff	islower@c+1,??_islower+3
 20837  009436  5004               	movf	??_islower^0,w,c
 20838  009438  2606               	addwf	(??_islower+2)^0,f,c
 20839  00943A  5005               	movf	(??_islower+1)^0,w,c
 20840  00943C  2207               	addwfc	(??_islower+3)^0,f,c
 20841  00943E  5007               	movf	(??_islower+3)^0,w,c
 20842  009440  E10A               	bnz	u12450
 20843  009442  0E1A               	movlw	26
 20844  009444  5C06               	subwf	(??_islower+2)^0,w,c
 20845  009446  A0D8               	btfss	status,0,c
 20846  009448  EF28  F04A         	goto	u12451
 20847  00944C  EF2B  F04A         	goto	u12450
 20848  009450                     u12451:
 20849  009450  0E01               	movlw	1
 20850  009452  EF2C  F04A         	goto	u12460
 20851  009456                     u12450:
 20852  009456  0E00               	movlw	0
 20853  009458                     u12460:
 20854  009458  6E02               	movwf	?_islower^0,c
 20855  00945A  6A03               	clrf	(?_islower+1)^0,c
 20856  00945C  0012               	return		;funcret
 20857  00945E                     __end_of_islower:
 20858                           	opt callstack 0
 20859                           
 20860 ;; *************** function _isupper *****************
 20861 ;; Defined at:
 20862 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 20863 ;; Parameters:    Size  Location     Type
 20864 ;;  c               2    1[COMRAM] int 
 20865 ;; Auto vars:     Size  Location     Type
 20866 ;;		None
 20867 ;; Return value:  Size  Location     Type
 20868 ;;                  2    1[COMRAM] int 
 20869 ;; Registers used:
 20870 ;;		wreg, status,2, status,0
 20871 ;; Tracked objects:
 20872 ;;		On entry : 0/0
 20873 ;;		On exit  : 0/0
 20874 ;;		Unchanged: 0/0
 20875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20880 ;;Total ram usage:        6 bytes
 20881 ;; Hardware stack levels used:    1
 20882 ;; Hardware stack levels required when called:    7
 20883 ;; This function calls:
 20884 ;;		Nothing
 20885 ;; This function is called by:
 20886 ;;		_xtoa
 20887 ;; This function uses a non-reentrant model
 20888 ;;
 20889                           
 20890                           	psect	text123
 20891  00945E                     __ptext123:
 20892                           	opt callstack 0
 20893  00945E                     _isupper:
 20894                           	opt callstack 16
 20895  00945E  0EBF               	movlw	191
 20896  009460  6E04               	movwf	??_isupper^0,c
 20897  009462  0EFF               	movlw	255
 20898  009464  6E05               	movwf	(??_isupper+1)^0,c
 20899  009466  0060  F008  F006   	movff	isupper@c,??_isupper+2
 20900  00946C  0060  F00C  F007   	movff	isupper@c+1,??_isupper+3
 20901  009472  5004               	movf	??_isupper^0,w,c
 20902  009474  2606               	addwf	(??_isupper+2)^0,f,c
 20903  009476  5005               	movf	(??_isupper+1)^0,w,c
 20904  009478  2207               	addwfc	(??_isupper+3)^0,f,c
 20905  00947A  5007               	movf	(??_isupper+3)^0,w,c
 20906  00947C  E10A               	bnz	u12520
 20907  00947E  0E1A               	movlw	26
 20908  009480  5C06               	subwf	(??_isupper+2)^0,w,c
 20909  009482  A0D8               	btfss	status,0,c
 20910  009484  EF46  F04A         	goto	u12521
 20911  009488  EF49  F04A         	goto	u12520
 20912  00948C                     u12521:
 20913  00948C  0E01               	movlw	1
 20914  00948E  EF4A  F04A         	goto	u12530
 20915  009492                     u12520:
 20916  009492  0E00               	movlw	0
 20917  009494                     u12530:
 20918  009494  6E02               	movwf	?_isupper^0,c
 20919  009496  6A03               	clrf	(?_isupper+1)^0,c
 20920  009498  0012               	return		;funcret
 20921  00949A                     __end_of_isupper:
 20922                           	opt callstack 0
 20923                           
 20924 ;; *************** function _isalpha *****************
 20925 ;; Defined at:
 20926 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 20927 ;; Parameters:    Size  Location     Type
 20928 ;;  c               2    1[COMRAM] int 
 20929 ;; Auto vars:     Size  Location     Type
 20930 ;;		None
 20931 ;; Return value:  Size  Location     Type
 20932 ;;                  2    1[COMRAM] int 
 20933 ;; Registers used:
 20934 ;;		wreg, status,2, status,0
 20935 ;; Tracked objects:
 20936 ;;		On entry : 0/0
 20937 ;;		On exit  : 0/0
 20938 ;;		Unchanged: 0/0
 20939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20943 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20944 ;;Total ram usage:        6 bytes
 20945 ;; Hardware stack levels used:    1
 20946 ;; Hardware stack levels required when called:    7
 20947 ;; This function calls:
 20948 ;;		Nothing
 20949 ;; This function is called by:
 20950 ;;		_xtoa
 20951 ;;		___strtoxl
 20952 ;; This function uses a non-reentrant model
 20953 ;;
 20954                           
 20955                           	psect	text124
 20956  00949A                     __ptext124:
 20957                           	opt callstack 0
 20958  00949A                     _isalpha:
 20959                           	opt callstack 16
 20960  00949A  0E9F               	movlw	159
 20961  00949C  6E04               	movwf	??_isalpha^0,c
 20962  00949E  0EFF               	movlw	255
 20963  0094A0  6E05               	movwf	(??_isalpha+1)^0,c
 20964  0094A2  0E20               	movlw	32
 20965  0094A4  1002               	iorwf	isalpha@c^0,w,c
 20966  0094A6  6E06               	movwf	(??_isalpha+2)^0,c
 20967  0094A8  0E00               	movlw	0
 20968  0094AA  1003               	iorwf	(isalpha@c+1)^0,w,c
 20969  0094AC  6E07               	movwf	(??_isalpha+3)^0,c
 20970  0094AE  5004               	movf	??_isalpha^0,w,c
 20971  0094B0  2606               	addwf	(??_isalpha+2)^0,f,c
 20972  0094B2  5005               	movf	(??_isalpha+1)^0,w,c
 20973  0094B4  2207               	addwfc	(??_isalpha+3)^0,f,c
 20974  0094B6  5007               	movf	(??_isalpha+3)^0,w,c
 20975  0094B8  E10A               	bnz	u12540
 20976  0094BA  0E1A               	movlw	26
 20977  0094BC  5C06               	subwf	(??_isalpha+2)^0,w,c
 20978  0094BE  A0D8               	btfss	status,0,c
 20979  0094C0  EF64  F04A         	goto	u12541
 20980  0094C4  EF67  F04A         	goto	u12540
 20981  0094C8                     u12541:
 20982  0094C8  0E01               	movlw	1
 20983  0094CA  EF68  F04A         	goto	u12550
 20984  0094CE                     u12540:
 20985  0094CE  0E00               	movlw	0
 20986  0094D0                     u12550:
 20987  0094D0  6E02               	movwf	?_isalpha^0,c
 20988  0094D2  6A03               	clrf	(?_isalpha+1)^0,c
 20989  0094D4  0012               	return		;funcret
 20990  0094D6                     __end_of_isalpha:
 20991                           	opt callstack 0
 20992                           
 20993 ;; *************** function _utoa *****************
 20994 ;; Defined at:
 20995 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20996 ;; Parameters:    Size  Location     Type
 20997 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 20998 ;;		 -> NULL(0), 
 20999 ;;  d               8   32[COMRAM] unsigned long long 
 21000 ;; Auto vars:     Size  Location     Type
 21001 ;;  n               8   52[COMRAM] unsigned long long 
 21002 ;;  i               2   60[COMRAM] int 
 21003 ;;  w               2   50[COMRAM] int 
 21004 ;;  p               2   48[COMRAM] int 
 21005 ;; Return value:  Size  Location     Type
 21006 ;;                  2   30[COMRAM] int 
 21007 ;; Registers used:
 21008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21009 ;; Tracked objects:
 21010 ;;		On entry : 0/0
 21011 ;;		On exit  : 0/0
 21012 ;;		Unchanged: 0/0
 21013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21014 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21015 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21016 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21017 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21018 ;;Total ram usage:       32 bytes
 21019 ;; Hardware stack levels used:    1
 21020 ;; Hardware stack levels required when called:   12
 21021 ;; This function calls:
 21022 ;;		___lodiv
 21023 ;;		___lomod
 21024 ;;		_pad
 21025 ;; This function is called by:
 21026 ;;		_vfpfcnvrt
 21027 ;; This function uses a non-reentrant model
 21028 ;;
 21029                           
 21030                           	psect	text125
 21031  0031C8                     __ptext125:
 21032                           	opt callstack 0
 21033  0031C8                     _utoa:
 21034                           	opt callstack 12
 21035  0031C8                     
 21036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 21037  0031C8  0100               	movlb	0	; () banked
 21038  0031CA  BFE3               	btfsc	(_prec+1)& (0+255),7,b
 21039  0031CC  EFEA  F018         	goto	u13081
 21040  0031D0  EFEC  F018         	goto	u13080
 21041  0031D4                     u13081:
 21042  0031D4  EFED  F018         	goto	l14129
 21043  0031D8                     u13080:
 21044  0031D8                     
 21045                           ; BSR set to: 0
 21046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 21047  0031D8  93E4               	bcf	_flags& (0+255),1,b
 21048  0031DA                     l14129:
 21049                           
 21050                           ; BSR set to: 0
 21051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 21052  0031DA  BFE3               	btfsc	(_prec+1)& (0+255),7,b
 21053  0031DC  EFFA  F018         	goto	u13090
 21054  0031E0  51E3               	movf	(_prec+1)& (0+255),w,b
 21055  0031E2  E106               	bnz	u13091
 21056  0031E4  05E2               	decf	_prec& (0+255),w,b
 21057  0031E6  B0D8               	btfsc	status,0,c
 21058  0031E8  EFF8  F018         	goto	u13091
 21059  0031EC  EFFA  F018         	goto	u13090
 21060  0031F0                     u13091:
 21061  0031F0  EF00  F019         	goto	l3088
 21062  0031F4                     u13090:
 21063  0031F4                     
 21064                           ; BSR set to: 0
 21065  0031F4  0E00               	movlw	0
 21066  0031F6  6E32               	movwf	(utoa@p+1)^0,c
 21067  0031F8  0E01               	movlw	1
 21068  0031FA  6E31               	movwf	utoa@p^0,c
 21069  0031FC  EF06  F019         	goto	l3090
 21070  003200                     l3088:
 21071                           
 21072                           ; BSR set to: 0
 21073  003200  0060  F388  F031   	movff	_prec,utoa@p
 21074  003206  0060  F38C  F032   	movff	_prec+1,utoa@p+1
 21075  00320C                     l3090:
 21076                           
 21077                           ; BSR set to: 0
 21078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 21079  00320C  0060  F57C  F033   	movff	_width,utoa@w
 21080  003212  0060  F580  F034   	movff	_width+1,utoa@w+1
 21081                           
 21082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 21083  003218  0060  F084  F035   	movff	utoa@d,utoa@n
 21084  00321E  0060  F088  F036   	movff	utoa@d+1,utoa@n+1
 21085  003224  0060  F08C  F037   	movff	utoa@d+2,utoa@n+2
 21086  00322A  0060  F090  F038   	movff	utoa@d+3,utoa@n+3
 21087  003230  0060  F094  F039   	movff	utoa@d+4,utoa@n+4
 21088  003236  0060  F098  F03A   	movff	utoa@d+5,utoa@n+5
 21089  00323C  0060  F09C  F03B   	movff	utoa@d+6,utoa@n+6
 21090  003242  0060  F0A0  F03C   	movff	utoa@d+7,utoa@n+7
 21091  003248                     
 21092                           ; BSR set to: 0
 21093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 21094  003248  0E00               	movlw	0
 21095  00324A  6E3E               	movwf	(utoa@i+1)^0,c
 21096  00324C  0E1F               	movlw	31
 21097  00324E  6E3D               	movwf	utoa@i^0,c
 21098  003250                     
 21099                           ; BSR set to: 0
 21100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 21101  003250  0E00               	movlw	0
 21102  003252  0102               	movlb	2	; () banked
 21103  003254  6FE5               	movwf	(_dbuf+31)& (0+255),b
 21104                           
 21105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21106  003256  EFC3  F019         	goto	l14147
 21107  00325A                     l14137:
 21108                           
 21109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 21110  00325A  063D               	decf	utoa@i^0,f,c
 21111  00325C  A0D8               	btfss	status,0,c
 21112  00325E  063E               	decf	(utoa@i+1)^0,f,c
 21113  003260                     
 21114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 21115  003260  0EC6               	movlw	low _dbuf
 21116  003262  243D               	addwf	utoa@i^0,w,c
 21117  003264  6ED9               	movwf	fsr2l,c
 21118  003266  0E02               	movlw	high _dbuf
 21119  003268  203E               	addwfc	(utoa@i+1)^0,w,c
 21120  00326A  6EDA               	movwf	fsr2h,c
 21121  00326C  0060  F0D4  F002   	movff	utoa@n,___lomod@dividend
 21122  003272  0060  F0D8  F003   	movff	utoa@n+1,___lomod@dividend+1
 21123  003278  0060  F0DC  F004   	movff	utoa@n+2,___lomod@dividend+2
 21124  00327E  0060  F0E0  F005   	movff	utoa@n+3,___lomod@dividend+3
 21125  003284  0060  F0E4  F006   	movff	utoa@n+4,___lomod@dividend+4
 21126  00328A  0060  F0E8  F007   	movff	utoa@n+5,___lomod@dividend+5
 21127  003290  0060  F0EC  F008   	movff	utoa@n+6,___lomod@dividend+6
 21128  003296  0060  F0F0  F009   	movff	utoa@n+7,___lomod@dividend+7
 21129  00329C  0E0A               	movlw	10
 21130  00329E  6E0A               	movwf	___lomod@divisor^0,c
 21131  0032A0  0E00               	movlw	0
 21132  0032A2  6E0B               	movwf	(___lomod@divisor+1)^0,c
 21133  0032A4  0E00               	movlw	0
 21134  0032A6  6E0C               	movwf	(___lomod@divisor+2)^0,c
 21135  0032A8  0E00               	movlw	0
 21136  0032AA  6E0D               	movwf	(___lomod@divisor+3)^0,c
 21137  0032AC  0E00               	movlw	0
 21138  0032AE  6E0E               	movwf	(___lomod@divisor+4)^0,c
 21139  0032B0  0E00               	movlw	0
 21140  0032B2  6E0F               	movwf	(___lomod@divisor+5)^0,c
 21141  0032B4  0E00               	movlw	0
 21142  0032B6  6E10               	movwf	(___lomod@divisor+6)^0,c
 21143  0032B8  0E00               	movlw	0
 21144  0032BA  6E11               	movwf	(___lomod@divisor+7)^0,c
 21145  0032BC  ECE7  F036         	call	___lomod	;wreg free
 21146  0032C0  0060  F008  F029   	movff	?___lomod,??_utoa
 21147  0032C6  0060  F00C  F02A   	movff	?___lomod+1,??_utoa+1
 21148  0032CC  0060  F010  F02B   	movff	?___lomod+2,??_utoa+2
 21149  0032D2  0060  F014  F02C   	movff	?___lomod+3,??_utoa+3
 21150  0032D8  0060  F018  F02D   	movff	?___lomod+4,??_utoa+4
 21151  0032DE  0060  F01C  F02E   	movff	?___lomod+5,??_utoa+5
 21152  0032E4  0060  F020  F02F   	movff	?___lomod+6,??_utoa+6
 21153  0032EA  0060  F024  F030   	movff	?___lomod+7,??_utoa+7
 21154  0032F0  5029               	movf	??_utoa^0,w,c
 21155  0032F2  0F30               	addlw	48
 21156  0032F4  6EDF               	movwf	indf2,c
 21157  0032F6                     
 21158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 21159  0032F6  0631               	decf	utoa@p^0,f,c
 21160  0032F8  A0D8               	btfss	status,0,c
 21161  0032FA  0632               	decf	(utoa@p+1)^0,f,c
 21162  0032FC                     
 21163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 21164  0032FC  0633               	decf	utoa@w^0,f,c
 21165  0032FE  A0D8               	btfss	status,0,c
 21166  003300  0634               	decf	(utoa@w+1)^0,f,c
 21167  003302                     
 21168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 21169  003302  0060  F0D4  F002   	movff	utoa@n,___lodiv@dividend
 21170  003308  0060  F0D8  F003   	movff	utoa@n+1,___lodiv@dividend+1
 21171  00330E  0060  F0DC  F004   	movff	utoa@n+2,___lodiv@dividend+2
 21172  003314  0060  F0E0  F005   	movff	utoa@n+3,___lodiv@dividend+3
 21173  00331A  0060  F0E4  F006   	movff	utoa@n+4,___lodiv@dividend+4
 21174  003320  0060  F0E8  F007   	movff	utoa@n+5,___lodiv@dividend+5
 21175  003326  0060  F0EC  F008   	movff	utoa@n+6,___lodiv@dividend+6
 21176  00332C  0060  F0F0  F009   	movff	utoa@n+7,___lodiv@dividend+7
 21177  003332  0E0A               	movlw	10
 21178  003334  6E0A               	movwf	___lodiv@divisor^0,c
 21179  003336  0E00               	movlw	0
 21180  003338  6E0B               	movwf	(___lodiv@divisor+1)^0,c
 21181  00333A  0E00               	movlw	0
 21182  00333C  6E0C               	movwf	(___lodiv@divisor+2)^0,c
 21183  00333E  0E00               	movlw	0
 21184  003340  6E0D               	movwf	(___lodiv@divisor+3)^0,c
 21185  003342  0E00               	movlw	0
 21186  003344  6E0E               	movwf	(___lodiv@divisor+4)^0,c
 21187  003346  0E00               	movlw	0
 21188  003348  6E0F               	movwf	(___lodiv@divisor+5)^0,c
 21189  00334A  0E00               	movlw	0
 21190  00334C  6E10               	movwf	(___lodiv@divisor+6)^0,c
 21191  00334E  0E00               	movlw	0
 21192  003350  6E11               	movwf	(___lodiv@divisor+7)^0,c
 21193  003352  EC1B  F034         	call	___lodiv	;wreg free
 21194  003356  0060  F008  F035   	movff	?___lodiv,utoa@n
 21195  00335C  0060  F00C  F036   	movff	?___lodiv+1,utoa@n+1
 21196  003362  0060  F010  F037   	movff	?___lodiv+2,utoa@n+2
 21197  003368  0060  F014  F038   	movff	?___lodiv+3,utoa@n+3
 21198  00336E  0060  F018  F039   	movff	?___lodiv+4,utoa@n+4
 21199  003374  0060  F01C  F03A   	movff	?___lodiv+5,utoa@n+5
 21200  00337A  0060  F020  F03B   	movff	?___lodiv+6,utoa@n+6
 21201  003380  0060  F024  F03C   	movff	?___lodiv+7,utoa@n+7
 21202  003386                     l14147:
 21203                           
 21204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21205  003386  503D               	movf	utoa@i^0,w,c
 21206  003388  103E               	iorwf	(utoa@i+1)^0,w,c
 21207  00338A  B4D8               	btfsc	status,2,c
 21208  00338C  EFCA  F019         	goto	u13101
 21209  003390  EFCC  F019         	goto	u13100
 21210  003394                     u13101:
 21211  003394  EFFD  F019         	goto	l14157
 21212  003398                     u13100:
 21213  003398  5035               	movf	utoa@n^0,w,c
 21214  00339A  1036               	iorwf	(utoa@n+1)^0,w,c
 21215  00339C  1037               	iorwf	(utoa@n+2)^0,w,c
 21216  00339E  1038               	iorwf	(utoa@n+3)^0,w,c
 21217  0033A0  1039               	iorwf	(utoa@n+4)^0,w,c
 21218  0033A2  103A               	iorwf	(utoa@n+5)^0,w,c
 21219  0033A4  103B               	iorwf	(utoa@n+6)^0,w,c
 21220  0033A6  103C               	iorwf	(utoa@n+7)^0,w,c
 21221  0033A8  A4D8               	btfss	status,2,c
 21222  0033AA  EFD9  F019         	goto	u13111
 21223  0033AE  EFDB  F019         	goto	u13110
 21224  0033B2                     u13111:
 21225  0033B2  EF2D  F019         	goto	l14137
 21226  0033B6                     u13110:
 21227  0033B6  BE32               	btfsc	(utoa@p+1)^0,7,c
 21228  0033B8  EFE8  F019         	goto	u13120
 21229  0033BC  5032               	movf	(utoa@p+1)^0,w,c
 21230  0033BE  E106               	bnz	u13121
 21231  0033C0  0431               	decf	utoa@p^0,w,c
 21232  0033C2  B0D8               	btfsc	status,0,c
 21233  0033C4  EFE6  F019         	goto	u13121
 21234  0033C8  EFE8  F019         	goto	u13120
 21235  0033CC                     u13121:
 21236  0033CC  EF2D  F019         	goto	l14137
 21237  0033D0                     u13120:
 21238  0033D0  BE34               	btfsc	(utoa@w+1)^0,7,c
 21239  0033D2  EFF3  F019         	goto	u13131
 21240  0033D6  5034               	movf	(utoa@w+1)^0,w,c
 21241  0033D8  E108               	bnz	u13130
 21242  0033DA  0433               	decf	utoa@w^0,w,c
 21243  0033DC  A0D8               	btfss	status,0,c
 21244  0033DE  EFF3  F019         	goto	u13131
 21245  0033E2  EFF5  F019         	goto	u13130
 21246  0033E6                     u13131:
 21247  0033E6  EFFD  F019         	goto	l14157
 21248  0033EA                     u13130:
 21249  0033EA  0100               	movlb	0	; () banked
 21250  0033EC  B3E4               	btfsc	_flags& (0+255),1,b
 21251  0033EE  EFFB  F019         	goto	u13141
 21252  0033F2  EFFD  F019         	goto	u13140
 21253  0033F6                     u13141:
 21254  0033F6  EF2D  F019         	goto	l14137
 21255  0033FA                     u13140:
 21256  0033FA                     l14157:
 21257                           
 21258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 21259  0033FA  0060  F07C  F014   	movff	utoa@fp,pad@fp
 21260  003400  0060  F080  F015   	movff	utoa@fp+1,pad@fp+1
 21261  003406  0EC6               	movlw	low _dbuf
 21262  003408  243D               	addwf	utoa@i^0,w,c
 21263  00340A  6E16               	movwf	pad@buf^0,c
 21264  00340C  0E02               	movlw	high _dbuf
 21265  00340E  203E               	addwfc	(utoa@i+1)^0,w,c
 21266  003410  6E17               	movwf	(pad@buf+1)^0,c
 21267  003412  0060  F0CC  F018   	movff	utoa@w,pad@p
 21268  003418  0060  F0D0  F019   	movff	utoa@w+1,pad@p+1
 21269  00341E  EC05  F036         	call	_pad	;wreg free
 21270  003422  0060  F050  F01F   	movff	?_pad,?_utoa
 21271  003428  0060  F054  F020   	movff	?_pad+1,?_utoa+1
 21272  00342E  0012               	return		;funcret
 21273  003430                     __end_of_utoa:
 21274                           	opt callstack 0
 21275                           
 21276 ;; *************** function ___lomod *****************
 21277 ;; Defined at:
 21278 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 21279 ;; Parameters:    Size  Location     Type
 21280 ;;  dividend        8    1[COMRAM] unsigned long long 
 21281 ;;  divisor         8    9[COMRAM] unsigned long long 
 21282 ;; Auto vars:     Size  Location     Type
 21283 ;;  counter         1   17[COMRAM] unsigned char 
 21284 ;; Return value:  Size  Location     Type
 21285 ;;                  8    1[COMRAM] unsigned long long 
 21286 ;; Registers used:
 21287 ;;		wreg, status,2, status,0
 21288 ;; Tracked objects:
 21289 ;;		On entry : 0/0
 21290 ;;		On exit  : 0/0
 21291 ;;		Unchanged: 0/0
 21292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21293 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21296 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21297 ;;Total ram usage:       17 bytes
 21298 ;; Hardware stack levels used:    1
 21299 ;; Hardware stack levels required when called:    7
 21300 ;; This function calls:
 21301 ;;		Nothing
 21302 ;; This function is called by:
 21303 ;;		_utoa
 21304 ;; This function uses a non-reentrant model
 21305 ;;
 21306                           
 21307                           	psect	text126
 21308  006DCE                     __ptext126:
 21309                           	opt callstack 0
 21310  006DCE                     ___lomod:
 21311                           	opt callstack 16
 21312  006DCE  500A               	movf	___lomod@divisor^0,w,c
 21313  006DD0  100B               	iorwf	(___lomod@divisor+1)^0,w,c
 21314  006DD2  100C               	iorwf	(___lomod@divisor+2)^0,w,c
 21315  006DD4  100D               	iorwf	(___lomod@divisor+3)^0,w,c
 21316  006DD6  100E               	iorwf	(___lomod@divisor+4)^0,w,c
 21317  006DD8  100F               	iorwf	(___lomod@divisor+5)^0,w,c
 21318  006DDA  1010               	iorwf	(___lomod@divisor+6)^0,w,c
 21319  006DDC  1011               	iorwf	(___lomod@divisor+7)^0,w,c
 21320  006DDE  B4D8               	btfsc	status,2,c
 21321  006DE0  EFF4  F036         	goto	u12781
 21322  006DE4  EFF6  F036         	goto	u12780
 21323  006DE8                     u12781:
 21324  006DE8  EF3E  F037         	goto	l3620
 21325  006DEC                     u12780:
 21326  006DEC  0E01               	movlw	1
 21327  006DEE  6E12               	movwf	___lomod@counter^0,c
 21328  006DF0  EF04  F037         	goto	l13995
 21329  006DF4                     l13993:
 21330  006DF4  90D8               	bcf	status,0,c
 21331  006DF6  360A               	rlcf	___lomod@divisor^0,f,c
 21332  006DF8  360B               	rlcf	(___lomod@divisor+1)^0,f,c
 21333  006DFA  360C               	rlcf	(___lomod@divisor+2)^0,f,c
 21334  006DFC  360D               	rlcf	(___lomod@divisor+3)^0,f,c
 21335  006DFE  360E               	rlcf	(___lomod@divisor+4)^0,f,c
 21336  006E00  360F               	rlcf	(___lomod@divisor+5)^0,f,c
 21337  006E02  3610               	rlcf	(___lomod@divisor+6)^0,f,c
 21338  006E04  3611               	rlcf	(___lomod@divisor+7)^0,f,c
 21339  006E06  2A12               	incf	___lomod@counter^0,f,c
 21340  006E08                     l13995:
 21341  006E08  AE11               	btfss	(___lomod@divisor+7)^0,7,c
 21342  006E0A  EF09  F037         	goto	u12791
 21343  006E0E  EF0B  F037         	goto	u12790
 21344  006E12                     u12791:
 21345  006E12  EFFA  F036         	goto	l13993
 21346  006E16                     u12790:
 21347  006E16                     l13997:
 21348  006E16  500A               	movf	___lomod@divisor^0,w,c
 21349  006E18  5C02               	subwf	___lomod@dividend^0,w,c
 21350  006E1A  500B               	movf	(___lomod@divisor+1)^0,w,c
 21351  006E1C  5803               	subwfb	(___lomod@dividend+1)^0,w,c
 21352  006E1E  500C               	movf	(___lomod@divisor+2)^0,w,c
 21353  006E20  5804               	subwfb	(___lomod@dividend+2)^0,w,c
 21354  006E22  500D               	movf	(___lomod@divisor+3)^0,w,c
 21355  006E24  5805               	subwfb	(___lomod@dividend+3)^0,w,c
 21356  006E26  500E               	movf	(___lomod@divisor+4)^0,w,c
 21357  006E28  5806               	subwfb	(___lomod@dividend+4)^0,w,c
 21358  006E2A  500F               	movf	(___lomod@divisor+5)^0,w,c
 21359  006E2C  5807               	subwfb	(___lomod@dividend+5)^0,w,c
 21360  006E2E  5010               	movf	(___lomod@divisor+6)^0,w,c
 21361  006E30  5808               	subwfb	(___lomod@dividend+6)^0,w,c
 21362  006E32  5011               	movf	(___lomod@divisor+7)^0,w,c
 21363  006E34  5809               	subwfb	(___lomod@dividend+7)^0,w,c
 21364  006E36  A0D8               	btfss	status,0,c
 21365  006E38  EF20  F037         	goto	u12801
 21366  006E3C  EF22  F037         	goto	u12800
 21367  006E40                     u12801:
 21368  006E40  EF32  F037         	goto	l14001
 21369  006E44                     u12800:
 21370  006E44  500A               	movf	___lomod@divisor^0,w,c
 21371  006E46  5E02               	subwf	___lomod@dividend^0,f,c
 21372  006E48  500B               	movf	(___lomod@divisor+1)^0,w,c
 21373  006E4A  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
 21374  006E4C  500C               	movf	(___lomod@divisor+2)^0,w,c
 21375  006E4E  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
 21376  006E50  500D               	movf	(___lomod@divisor+3)^0,w,c
 21377  006E52  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
 21378  006E54  500E               	movf	(___lomod@divisor+4)^0,w,c
 21379  006E56  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
 21380  006E58  500F               	movf	(___lomod@divisor+5)^0,w,c
 21381  006E5A  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
 21382  006E5C  5010               	movf	(___lomod@divisor+6)^0,w,c
 21383  006E5E  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
 21384  006E60  5011               	movf	(___lomod@divisor+7)^0,w,c
 21385  006E62  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
 21386  006E64                     l14001:
 21387  006E64  90D8               	bcf	status,0,c
 21388  006E66  3211               	rrcf	(___lomod@divisor+7)^0,f,c
 21389  006E68  3210               	rrcf	(___lomod@divisor+6)^0,f,c
 21390  006E6A  320F               	rrcf	(___lomod@divisor+5)^0,f,c
 21391  006E6C  320E               	rrcf	(___lomod@divisor+4)^0,f,c
 21392  006E6E  320D               	rrcf	(___lomod@divisor+3)^0,f,c
 21393  006E70  320C               	rrcf	(___lomod@divisor+2)^0,f,c
 21394  006E72  320B               	rrcf	(___lomod@divisor+1)^0,f,c
 21395  006E74  320A               	rrcf	___lomod@divisor^0,f,c
 21396  006E76  2E12               	decfsz	___lomod@counter^0,f,c
 21397  006E78  EF0B  F037         	goto	l13997
 21398  006E7C                     l3620:
 21399  006E7C  0060  F008  F002   	movff	___lomod@dividend,?___lomod
 21400  006E82  0060  F00C  F003   	movff	___lomod@dividend+1,?___lomod+1
 21401  006E88  0060  F010  F004   	movff	___lomod@dividend+2,?___lomod+2
 21402  006E8E  0060  F014  F005   	movff	___lomod@dividend+3,?___lomod+3
 21403  006E94  0060  F018  F006   	movff	___lomod@dividend+4,?___lomod+4
 21404  006E9A  0060  F01C  F007   	movff	___lomod@dividend+5,?___lomod+5
 21405  006EA0  0060  F020  F008   	movff	___lomod@dividend+6,?___lomod+6
 21406  006EA6  0060  F024  F009   	movff	___lomod@dividend+7,?___lomod+7
 21407  006EAC  0012               	return		;funcret
 21408  006EAE                     __end_of___lomod:
 21409                           	opt callstack 0
 21410                           
 21411 ;; *************** function ___lodiv *****************
 21412 ;; Defined at:
 21413 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 21414 ;; Parameters:    Size  Location     Type
 21415 ;;  dividend        8    1[COMRAM] unsigned long long 
 21416 ;;  divisor         8    9[COMRAM] unsigned long long 
 21417 ;; Auto vars:     Size  Location     Type
 21418 ;;  quotient        8   17[COMRAM] unsigned long long 
 21419 ;;  counter         1   25[COMRAM] unsigned char 
 21420 ;; Return value:  Size  Location     Type
 21421 ;;                  8    1[COMRAM] unsigned long long 
 21422 ;; Registers used:
 21423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21424 ;; Tracked objects:
 21425 ;;		On entry : 0/0
 21426 ;;		On exit  : 0/0
 21427 ;;		Unchanged: 0/0
 21428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21429 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21430 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21432 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21433 ;;Total ram usage:       25 bytes
 21434 ;; Hardware stack levels used:    1
 21435 ;; Hardware stack levels required when called:    7
 21436 ;; This function calls:
 21437 ;;		Nothing
 21438 ;; This function is called by:
 21439 ;;		_utoa
 21440 ;; This function uses a non-reentrant model
 21441 ;;
 21442                           
 21443                           	psect	text127
 21444  006836                     __ptext127:
 21445                           	opt callstack 0
 21446  006836                     ___lodiv:
 21447                           	opt callstack 16
 21448  006836  EE20  F012         	lfsr	2,___lodiv@quotient
 21449  00683A  0E07               	movlw	7
 21450  00683C                     u12741:
 21451  00683C  6ADE               	clrf	postinc2,c
 21452  00683E  06E8               	decf	wreg,f,c
 21453  006840  E2FD               	bc	u12741
 21454  006842  500A               	movf	___lodiv@divisor^0,w,c
 21455  006844  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
 21456  006846  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
 21457  006848  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
 21458  00684A  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
 21459  00684C  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
 21460  00684E  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
 21461  006850  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
 21462  006852  B4D8               	btfsc	status,2,c
 21463  006854  EF2E  F034         	goto	u12751
 21464  006858  EF30  F034         	goto	u12750
 21465  00685C                     u12751:
 21466  00685C  EF82  F034         	goto	l3610
 21467  006860                     u12750:
 21468  006860  0E01               	movlw	1
 21469  006862  6E1A               	movwf	___lodiv@counter^0,c
 21470  006864  EF3E  F034         	goto	l13975
 21471  006868                     l13973:
 21472  006868  90D8               	bcf	status,0,c
 21473  00686A  360A               	rlcf	___lodiv@divisor^0,f,c
 21474  00686C  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
 21475  00686E  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
 21476  006870  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
 21477  006872  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
 21478  006874  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
 21479  006876  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
 21480  006878  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
 21481  00687A  2A1A               	incf	___lodiv@counter^0,f,c
 21482  00687C                     l13975:
 21483  00687C  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
 21484  00687E  EF43  F034         	goto	u12761
 21485  006882  EF45  F034         	goto	u12760
 21486  006886                     u12761:
 21487  006886  EF34  F034         	goto	l13973
 21488  00688A                     u12760:
 21489  00688A                     l13977:
 21490  00688A  90D8               	bcf	status,0,c
 21491  00688C  3612               	rlcf	___lodiv@quotient^0,f,c
 21492  00688E  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
 21493  006890  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
 21494  006892  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
 21495  006894  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
 21496  006896  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
 21497  006898  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
 21498  00689A  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
 21499  00689C  500A               	movf	___lodiv@divisor^0,w,c
 21500  00689E  5C02               	subwf	___lodiv@dividend^0,w,c
 21501  0068A0  500B               	movf	(___lodiv@divisor+1)^0,w,c
 21502  0068A2  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
 21503  0068A4  500C               	movf	(___lodiv@divisor+2)^0,w,c
 21504  0068A6  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
 21505  0068A8  500D               	movf	(___lodiv@divisor+3)^0,w,c
 21506  0068AA  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
 21507  0068AC  500E               	movf	(___lodiv@divisor+4)^0,w,c
 21508  0068AE  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
 21509  0068B0  500F               	movf	(___lodiv@divisor+5)^0,w,c
 21510  0068B2  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
 21511  0068B4  5010               	movf	(___lodiv@divisor+6)^0,w,c
 21512  0068B6  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
 21513  0068B8  5011               	movf	(___lodiv@divisor+7)^0,w,c
 21514  0068BA  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
 21515  0068BC  A0D8               	btfss	status,0,c
 21516  0068BE  EF63  F034         	goto	u12771
 21517  0068C2  EF65  F034         	goto	u12770
 21518  0068C6                     u12771:
 21519  0068C6  EF76  F034         	goto	l13985
 21520  0068CA                     u12770:
 21521  0068CA  500A               	movf	___lodiv@divisor^0,w,c
 21522  0068CC  5E02               	subwf	___lodiv@dividend^0,f,c
 21523  0068CE  500B               	movf	(___lodiv@divisor+1)^0,w,c
 21524  0068D0  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
 21525  0068D2  500C               	movf	(___lodiv@divisor+2)^0,w,c
 21526  0068D4  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
 21527  0068D6  500D               	movf	(___lodiv@divisor+3)^0,w,c
 21528  0068D8  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
 21529  0068DA  500E               	movf	(___lodiv@divisor+4)^0,w,c
 21530  0068DC  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
 21531  0068DE  500F               	movf	(___lodiv@divisor+5)^0,w,c
 21532  0068E0  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
 21533  0068E2  5010               	movf	(___lodiv@divisor+6)^0,w,c
 21534  0068E4  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
 21535  0068E6  5011               	movf	(___lodiv@divisor+7)^0,w,c
 21536  0068E8  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
 21537  0068EA  8012               	bsf	___lodiv@quotient^0,0,c
 21538  0068EC                     l13985:
 21539  0068EC  90D8               	bcf	status,0,c
 21540  0068EE  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
 21541  0068F0  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
 21542  0068F2  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
 21543  0068F4  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
 21544  0068F6  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
 21545  0068F8  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
 21546  0068FA  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
 21547  0068FC  320A               	rrcf	___lodiv@divisor^0,f,c
 21548  0068FE  2E1A               	decfsz	___lodiv@counter^0,f,c
 21549  006900  EF45  F034         	goto	l13977
 21550  006904                     l3610:
 21551  006904  0060  F048  F002   	movff	___lodiv@quotient,?___lodiv
 21552  00690A  0060  F04C  F003   	movff	___lodiv@quotient+1,?___lodiv+1
 21553  006910  0060  F050  F004   	movff	___lodiv@quotient+2,?___lodiv+2
 21554  006916  0060  F054  F005   	movff	___lodiv@quotient+3,?___lodiv+3
 21555  00691C  0060  F058  F006   	movff	___lodiv@quotient+4,?___lodiv+4
 21556  006922  0060  F05C  F007   	movff	___lodiv@quotient+5,?___lodiv+5
 21557  006928  0060  F060  F008   	movff	___lodiv@quotient+6,?___lodiv+6
 21558  00692E  0060  F064  F009   	movff	___lodiv@quotient+7,?___lodiv+7
 21559  006934  0012               	return		;funcret
 21560  006936                     __end_of___lodiv:
 21561                           	opt callstack 0
 21562                           
 21563 ;; *************** function _stoa *****************
 21564 ;; Defined at:
 21565 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 21566 ;; Parameters:    Size  Location     Type
 21567 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 21568 ;;		 -> NULL(0), 
 21569 ;;  s               2   14[COMRAM] PTR unsigned char 
 21570 ;;		 -> ?_printf(2), appDataInd@data(65), 
 21571 ;; Auto vars:     Size  Location     Type
 21572 ;;  nuls            7   17[COMRAM] unsigned char [7]
 21573 ;;  l               2   32[COMRAM] int 
 21574 ;;  p               2   30[COMRAM] int 
 21575 ;;  cp              2   28[COMRAM] PTR unsigned char 
 21576 ;;		 -> ?_printf(2), stoa@nuls(7), appDataInd@data(65), 
 21577 ;;  w               2   26[COMRAM] int 
 21578 ;;  i               2   24[COMRAM] int 
 21579 ;; Return value:  Size  Location     Type
 21580 ;;                  2   12[COMRAM] int 
 21581 ;; Registers used:
 21582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21583 ;; Tracked objects:
 21584 ;;		On entry : 0/0
 21585 ;;		On exit  : 0/0
 21586 ;;		Unchanged: 0/0
 21587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21589 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21591 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21592 ;;Total ram usage:       22 bytes
 21593 ;; Hardware stack levels used:    1
 21594 ;; Hardware stack levels required when called:   10
 21595 ;; This function calls:
 21596 ;;		_fputc
 21597 ;;		_strlen
 21598 ;; This function is called by:
 21599 ;;		_vfpfcnvrt
 21600 ;; This function uses a non-reentrant model
 21601 ;;
 21602                           
 21603                           	psect	text128
 21604  00424C                     __ptext128:
 21605                           	opt callstack 0
 21606  00424C                     _stoa:
 21607                           	opt callstack 14
 21608  00424C                     
 21609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 21610  00424C  EE20  F1DC         	lfsr	2,stoa@F1139
 21611  004250  EE10  F012         	lfsr	1,stoa@nuls
 21612  004254  0E06               	movlw	6
 21613  004256                     u12991:
 21614  004256  006F FF6F FFE3     	movff	plusw2,plusw1
 21615  00425C  06E8               	decf	wreg,f,c
 21616  00425E  E2FB               	bc	u12991
 21617  004260                     
 21618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 21619  004260  0060  F03C  F01D   	movff	stoa@s,stoa@cp
 21620  004266  0060  F040  F01E   	movff	stoa@s+1,stoa@cp+1
 21621  00426C                     
 21622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 21623  00426C  501D               	movf	stoa@cp^0,w,c
 21624  00426E  101E               	iorwf	(stoa@cp+1)^0,w,c
 21625  004270  A4D8               	btfss	status,2,c
 21626  004272  EF3D  F021         	goto	u13001
 21627  004276  EF3F  F021         	goto	u13000
 21628  00427A                     u13001:
 21629  00427A  EF43  F021         	goto	l14091
 21630  00427E                     u13000:
 21631  00427E                     
 21632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 21633  00427E  0E12               	movlw	low stoa@nuls
 21634  004280  6E1D               	movwf	stoa@cp^0,c
 21635  004282  0E00               	movlw	high stoa@nuls
 21636  004284  6E1E               	movwf	(stoa@cp+1)^0,c
 21637  004286                     l14091:
 21638                           
 21639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 21640  004286  0060  F074  F002   	movff	stoa@cp,strlen@s
 21641  00428C  0060  F078  F003   	movff	stoa@cp+1,strlen@s+1
 21642  004292  EC91  F045         	call	_strlen	;wreg free
 21643  004296  0060  F008  F021   	movff	?_strlen,stoa@l
 21644  00429C  0060  F00C  F022   	movff	?_strlen+1,stoa@l+1
 21645  0042A2                     
 21646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 21647  0042A2  0060  F388  F01F   	movff	_prec,stoa@p
 21648  0042A8  0060  F38C  F020   	movff	_prec+1,stoa@p+1
 21649  0042AE                     
 21650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 21651  0042AE  BE20               	btfsc	(stoa@p+1)^0,7,c
 21652  0042B0  EF5C  F021         	goto	u13011
 21653  0042B4  EF5E  F021         	goto	u13010
 21654  0042B8                     u13011:
 21655  0042B8  EF75  F021         	goto	l3069
 21656  0042BC                     u13010:
 21657  0042BC  5021               	movf	stoa@l^0,w,c
 21658  0042BE  5C1F               	subwf	stoa@p^0,w,c
 21659  0042C0  5020               	movf	(stoa@p+1)^0,w,c
 21660  0042C2  0A80               	xorlw	128
 21661  0042C4  6E11               	movwf	??_stoa^0,c
 21662  0042C6  5022               	movf	(stoa@l+1)^0,w,c
 21663  0042C8  0A80               	xorlw	128
 21664  0042CA  5811               	subwfb	??_stoa^0,w,c
 21665  0042CC  A0D8               	btfss	status,0,c
 21666  0042CE  EF6B  F021         	goto	u13021
 21667  0042D2  EF6D  F021         	goto	u13020
 21668  0042D6                     u13021:
 21669  0042D6  EF6F  F021         	goto	l3067
 21670  0042DA                     u13020:
 21671  0042DA  EF75  F021         	goto	l3069
 21672  0042DE                     l3067:
 21673  0042DE  0060  F07C  F021   	movff	stoa@p,stoa@l
 21674  0042E4  0060  F080  F022   	movff	stoa@p+1,stoa@l+1
 21675  0042EA                     l3069:
 21676                           
 21677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 21678  0042EA  0060  F084  F01F   	movff	stoa@l,stoa@p
 21679  0042F0  0060  F088  F020   	movff	stoa@l+1,stoa@p+1
 21680                           
 21681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 21682  0042F6  0060  F57C  F01B   	movff	_width,stoa@w
 21683  0042FC  0060  F580  F01C   	movff	_width+1,stoa@w+1
 21684                           
 21685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 21686  004302  0100               	movlb	0	; () banked
 21687  004304  B1E4               	btfsc	_flags& (0+255),0,b
 21688  004306  EF87  F021         	goto	u13031
 21689  00430A  EF89  F021         	goto	u13030
 21690  00430E                     u13031:
 21691  00430E  EFA8  F021         	goto	l14107
 21692  004312                     u13030:
 21693  004312  EF99  F021         	goto	l14105
 21694  004316                     l14101:
 21695                           
 21696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 21697  004316  0E00               	movlw	0
 21698  004318  6E05               	movwf	(fputc@c+1)^0,c
 21699  00431A  0E20               	movlw	32
 21700  00431C  6E04               	movwf	fputc@c^0,c
 21701  00431E  0060  F034  F006   	movff	stoa@fp,fputc@fp
 21702  004324  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 21703  00432A  ECE9  F03F         	call	_fputc	;wreg free
 21704  00432E                     
 21705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 21706  00432E  4A21               	infsnz	stoa@l^0,f,c
 21707  004330  2A22               	incf	(stoa@l+1)^0,f,c
 21708  004332                     l14105:
 21709                           
 21710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 21711  004332  501B               	movf	stoa@w^0,w,c
 21712  004334  5C21               	subwf	stoa@l^0,w,c
 21713  004336  5022               	movf	(stoa@l+1)^0,w,c
 21714  004338  0A80               	xorlw	128
 21715  00433A  6E11               	movwf	??_stoa^0,c
 21716  00433C  501C               	movf	(stoa@w+1)^0,w,c
 21717  00433E  0A80               	xorlw	128
 21718  004340  5811               	subwfb	??_stoa^0,w,c
 21719  004342  A0D8               	btfss	status,0,c
 21720  004344  EFA6  F021         	goto	u13041
 21721  004348  EFA8  F021         	goto	u13040
 21722  00434C                     u13041:
 21723  00434C  EF8B  F021         	goto	l14101
 21724  004350                     u13040:
 21725  004350                     l14107:
 21726                           
 21727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 21728  004350  0E00               	movlw	0
 21729  004352  6E1A               	movwf	(stoa@i+1)^0,c
 21730  004354  0E00               	movlw	0
 21731  004356  6E19               	movwf	stoa@i^0,c
 21732                           
 21733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 21734  004358  EFC5  F021         	goto	l14115
 21735  00435C                     l14109:
 21736                           
 21737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 21738  00435C  0060  F077  FFD9   	movff	stoa@cp,fsr2l
 21739  004362  0060  F07B  FFDA   	movff	stoa@cp+1,fsr2h
 21740  004368  50DF               	movf	indf2,w,c
 21741  00436A  6E11               	movwf	??_stoa^0,c
 21742  00436C  5011               	movf	??_stoa^0,w,c
 21743  00436E  6E04               	movwf	fputc@c^0,c
 21744  004370  6A05               	clrf	(fputc@c+1)^0,c
 21745  004372  0060  F034  F006   	movff	stoa@fp,fputc@fp
 21746  004378  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 21747  00437E  ECE9  F03F         	call	_fputc	;wreg free
 21748  004382                     
 21749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 21750  004382  4A1D               	infsnz	stoa@cp^0,f,c
 21751  004384  2A1E               	incf	(stoa@cp+1)^0,f,c
 21752  004386                     
 21753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 21754  004386  4A19               	infsnz	stoa@i^0,f,c
 21755  004388  2A1A               	incf	(stoa@i+1)^0,f,c
 21756  00438A                     l14115:
 21757                           
 21758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 21759  00438A  501F               	movf	stoa@p^0,w,c
 21760  00438C  5C19               	subwf	stoa@i^0,w,c
 21761  00438E  501A               	movf	(stoa@i+1)^0,w,c
 21762  004390  0A80               	xorlw	128
 21763  004392  6E11               	movwf	??_stoa^0,c
 21764  004394  5020               	movf	(stoa@p+1)^0,w,c
 21765  004396  0A80               	xorlw	128
 21766  004398  5811               	subwfb	??_stoa^0,w,c
 21767  00439A  A0D8               	btfss	status,0,c
 21768  00439C  EFD2  F021         	goto	u13051
 21769  0043A0  EFD4  F021         	goto	u13050
 21770  0043A4                     u13051:
 21771  0043A4  EFAE  F021         	goto	l14109
 21772  0043A8                     u13050:
 21773  0043A8                     
 21774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 21775  0043A8  0100               	movlb	0	; () banked
 21776  0043AA  A1E4               	btfss	_flags& (0+255),0,b
 21777  0043AC  EFDA  F021         	goto	u13061
 21778  0043B0  EFDC  F021         	goto	u13060
 21779  0043B4                     u13061:
 21780  0043B4  EFFB  F021         	goto	l3079
 21781  0043B8                     u13060:
 21782  0043B8  EFEC  F021         	goto	l14123
 21783  0043BC                     l14119:
 21784                           
 21785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 21786  0043BC  0E00               	movlw	0
 21787  0043BE  6E05               	movwf	(fputc@c+1)^0,c
 21788  0043C0  0E20               	movlw	32
 21789  0043C2  6E04               	movwf	fputc@c^0,c
 21790  0043C4  0060  F034  F006   	movff	stoa@fp,fputc@fp
 21791  0043CA  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 21792  0043D0  ECE9  F03F         	call	_fputc	;wreg free
 21793  0043D4                     
 21794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 21795  0043D4  4A21               	infsnz	stoa@l^0,f,c
 21796  0043D6  2A22               	incf	(stoa@l+1)^0,f,c
 21797  0043D8                     l14123:
 21798                           
 21799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 21800  0043D8  501B               	movf	stoa@w^0,w,c
 21801  0043DA  5C21               	subwf	stoa@l^0,w,c
 21802  0043DC  5022               	movf	(stoa@l+1)^0,w,c
 21803  0043DE  0A80               	xorlw	128
 21804  0043E0  6E11               	movwf	??_stoa^0,c
 21805  0043E2  501C               	movf	(stoa@w+1)^0,w,c
 21806  0043E4  0A80               	xorlw	128
 21807  0043E6  5811               	subwfb	??_stoa^0,w,c
 21808  0043E8  A0D8               	btfss	status,0,c
 21809  0043EA  EFF9  F021         	goto	u13071
 21810  0043EE  EFFB  F021         	goto	u13070
 21811  0043F2                     u13071:
 21812  0043F2  EFDE  F021         	goto	l14119
 21813  0043F6                     u13070:
 21814  0043F6                     l3079:
 21815                           
 21816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 21817  0043F6  0060  F084  F00D   	movff	stoa@l,?_stoa
 21818  0043FC  0060  F088  F00E   	movff	stoa@l+1,?_stoa+1
 21819  004402  0012               	return		;funcret
 21820  004404                     __end_of_stoa:
 21821                           	opt callstack 0
 21822                           
 21823 ;; *************** function _dtoa *****************
 21824 ;; Defined at:
 21825 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 21826 ;; Parameters:    Size  Location     Type
 21827 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 21828 ;;		 -> NULL(0), 
 21829 ;;  d               8   32[COMRAM] long long 
 21830 ;; Auto vars:     Size  Location     Type
 21831 ;;  n               8   56[COMRAM] long long 
 21832 ;;  i               2   64[COMRAM] int 
 21833 ;;  s               2   54[COMRAM] int 
 21834 ;;  w               2   52[COMRAM] int 
 21835 ;;  p               2   50[COMRAM] int 
 21836 ;; Return value:  Size  Location     Type
 21837 ;;                  2   30[COMRAM] int 
 21838 ;; Registers used:
 21839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21840 ;; Tracked objects:
 21841 ;;		On entry : 0/0
 21842 ;;		On exit  : 0/0
 21843 ;;		Unchanged: 0/0
 21844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21845 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21846 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21847 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21848 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21849 ;;Total ram usage:       36 bytes
 21850 ;; Hardware stack levels used:    1
 21851 ;; Hardware stack levels required when called:   12
 21852 ;; This function calls:
 21853 ;;		___aodiv
 21854 ;;		___aomod
 21855 ;;		_abs
 21856 ;;		_pad
 21857 ;; This function is called by:
 21858 ;;		_vfpfcnvrt
 21859 ;; This function uses a non-reentrant model
 21860 ;;
 21861                           
 21862                           	psect	text129
 21863  0020FE                     __ptext129:
 21864                           	opt callstack 0
 21865  0020FE                     _dtoa:
 21866                           	opt callstack 12
 21867  0020FE                     
 21868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 21869  0020FE  0060  F084  F039   	movff	dtoa@d,dtoa@n
 21870  002104  0060  F088  F03A   	movff	dtoa@d+1,dtoa@n+1
 21871  00210A  0060  F08C  F03B   	movff	dtoa@d+2,dtoa@n+2
 21872  002110  0060  F090  F03C   	movff	dtoa@d+3,dtoa@n+3
 21873  002116  0060  F094  F03D   	movff	dtoa@d+4,dtoa@n+4
 21874  00211C  0060  F098  F03E   	movff	dtoa@d+5,dtoa@n+5
 21875  002122  0060  F09C  F03F   	movff	dtoa@d+6,dtoa@n+6
 21876  002128  0060  F0A0  F040   	movff	dtoa@d+7,dtoa@n+7
 21877  00212E                     
 21878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 21879  00212E  BE40               	btfsc	(dtoa@n+7)^0,7,c
 21880  002130  EF9C  F010         	goto	u12841
 21881  002134  EF9F  F010         	goto	u12840
 21882  002138                     u12841:
 21883  002138  0E01               	movlw	1
 21884  00213A  EFA0  F010         	goto	u12850
 21885  00213E                     u12840:
 21886  00213E  0E00               	movlw	0
 21887  002140                     u12850:
 21888  002140  6E37               	movwf	dtoa@s^0,c
 21889  002142  6A38               	clrf	(dtoa@s+1)^0,c
 21890                           
 21891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 21892  002144  5037               	movf	dtoa@s^0,w,c
 21893  002146  1038               	iorwf	(dtoa@s+1)^0,w,c
 21894  002148  B4D8               	btfsc	status,2,c
 21895  00214A  EFA9  F010         	goto	u12861
 21896  00214E  EFAB  F010         	goto	u12860
 21897  002152                     u12861:
 21898  002152  EFBB  F010         	goto	l14027
 21899  002156                     u12860:
 21900  002156                     
 21901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 21902  002156  1E40               	comf	(dtoa@n+7)^0,f,c
 21903  002158  1E3F               	comf	(dtoa@n+6)^0,f,c
 21904  00215A  1E3E               	comf	(dtoa@n+5)^0,f,c
 21905  00215C  1E3D               	comf	(dtoa@n+4)^0,f,c
 21906  00215E  1E3C               	comf	(dtoa@n+3)^0,f,c
 21907  002160  1E3B               	comf	(dtoa@n+2)^0,f,c
 21908  002162  1E3A               	comf	(dtoa@n+1)^0,f,c
 21909  002164  6C39               	negf	dtoa@n^0,c
 21910  002166  0E00               	movlw	0
 21911  002168  223A               	addwfc	(dtoa@n+1)^0,f,c
 21912  00216A  223B               	addwfc	(dtoa@n+2)^0,f,c
 21913  00216C  223C               	addwfc	(dtoa@n+3)^0,f,c
 21914  00216E  223D               	addwfc	(dtoa@n+4)^0,f,c
 21915  002170  223E               	addwfc	(dtoa@n+5)^0,f,c
 21916  002172  223F               	addwfc	(dtoa@n+6)^0,f,c
 21917  002174  2240               	addwfc	(dtoa@n+7)^0,f,c
 21918  002176                     l14027:
 21919                           
 21920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 21921  002176  0100               	movlb	0	; () banked
 21922  002178  BFE3               	btfsc	(_prec+1)& (0+255),7,b
 21923  00217A  EFC1  F010         	goto	u12871
 21924  00217E  EFC3  F010         	goto	u12870
 21925  002182                     u12871:
 21926  002182  EFC4  F010         	goto	l14031
 21927  002186                     u12870:
 21928  002186                     
 21929                           ; BSR set to: 0
 21930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 21931  002186  93E4               	bcf	_flags& (0+255),1,b
 21932  002188                     l14031:
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 21936  002188  BFE3               	btfsc	(_prec+1)& (0+255),7,b
 21937  00218A  EFD1  F010         	goto	u12880
 21938  00218E  51E3               	movf	(_prec+1)& (0+255),w,b
 21939  002190  E106               	bnz	u12881
 21940  002192  05E2               	decf	_prec& (0+255),w,b
 21941  002194  B0D8               	btfsc	status,0,c
 21942  002196  EFCF  F010         	goto	u12881
 21943  00219A  EFD1  F010         	goto	u12880
 21944  00219E                     u12881:
 21945  00219E  EFD7  F010         	goto	l3040
 21946  0021A2                     u12880:
 21947  0021A2                     
 21948                           ; BSR set to: 0
 21949  0021A2  0E00               	movlw	0
 21950  0021A4  6E34               	movwf	(dtoa@p+1)^0,c
 21951  0021A6  0E01               	movlw	1
 21952  0021A8  6E33               	movwf	dtoa@p^0,c
 21953  0021AA  EFDD  F010         	goto	l3042
 21954  0021AE                     l3040:
 21955                           
 21956                           ; BSR set to: 0
 21957  0021AE  0060  F388  F033   	movff	_prec,dtoa@p
 21958  0021B4  0060  F38C  F034   	movff	_prec+1,dtoa@p+1
 21959  0021BA                     l3042:
 21960                           
 21961                           ; BSR set to: 0
 21962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 21963  0021BA  0060  F57C  F035   	movff	_width,dtoa@w
 21964  0021C0  0060  F580  F036   	movff	_width+1,dtoa@w+1
 21965  0021C6                     
 21966                           ; BSR set to: 0
 21967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 21968  0021C6  5037               	movf	dtoa@s^0,w,c
 21969  0021C8  1038               	iorwf	(dtoa@s+1)^0,w,c
 21970  0021CA  A4D8               	btfss	status,2,c
 21971  0021CC  EFEA  F010         	goto	u12891
 21972  0021D0  EFEC  F010         	goto	u12890
 21973  0021D4                     u12891:
 21974  0021D4  EFF3  F010         	goto	l14039
 21975  0021D8                     u12890:
 21976  0021D8                     
 21977                           ; BSR set to: 0
 21978  0021D8  A5E4               	btfss	_flags& (0+255),2,b
 21979  0021DA  EFF1  F010         	goto	u12901
 21980  0021DE  EFF3  F010         	goto	u12900
 21981  0021E2                     u12901:
 21982  0021E2  EFF6  F010         	goto	l14041
 21983  0021E6                     u12900:
 21984  0021E6                     l14039:
 21985                           
 21986                           ; BSR set to: 0
 21987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 21988  0021E6  0635               	decf	dtoa@w^0,f,c
 21989  0021E8  A0D8               	btfss	status,0,c
 21990  0021EA  0636               	decf	(dtoa@w+1)^0,f,c
 21991  0021EC                     l14041:
 21992                           
 21993                           ; BSR set to: 0
 21994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 21995  0021EC  0E00               	movlw	0
 21996  0021EE  6E42               	movwf	(dtoa@i+1)^0,c
 21997  0021F0  0E1F               	movlw	31
 21998  0021F2  6E41               	movwf	dtoa@i^0,c
 21999  0021F4                     
 22000                           ; BSR set to: 0
 22001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 22002  0021F4  0E00               	movlw	0
 22003  0021F6  0102               	movlb	2	; () banked
 22004  0021F8  6FE5               	movwf	(_dbuf+31)& (0+255),b
 22005                           
 22006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22007  0021FA  EF9D  F011         	goto	l14055
 22008  0021FE                     l14045:
 22009                           
 22010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 22011  0021FE  0641               	decf	dtoa@i^0,f,c
 22012  002200  A0D8               	btfss	status,0,c
 22013  002202  0642               	decf	(dtoa@i+1)^0,f,c
 22014  002204                     
 22015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 22016  002204  0EC6               	movlw	low _dbuf
 22017  002206  2441               	addwf	dtoa@i^0,w,c
 22018  002208  6ED9               	movwf	fsr2l,c
 22019  00220A  0E02               	movlw	high _dbuf
 22020  00220C  2042               	addwfc	(dtoa@i+1)^0,w,c
 22021  00220E  6EDA               	movwf	fsr2h,c
 22022  002210  0060  F0E4  F002   	movff	dtoa@n,___aomod@dividend
 22023  002216  0060  F0E8  F003   	movff	dtoa@n+1,___aomod@dividend+1
 22024  00221C  0060  F0EC  F004   	movff	dtoa@n+2,___aomod@dividend+2
 22025  002222  0060  F0F0  F005   	movff	dtoa@n+3,___aomod@dividend+3
 22026  002228  0060  F0F4  F006   	movff	dtoa@n+4,___aomod@dividend+4
 22027  00222E  0060  F0F8  F007   	movff	dtoa@n+5,___aomod@dividend+5
 22028  002234  0060  F0FC  F008   	movff	dtoa@n+6,___aomod@dividend+6
 22029  00223A  0060  F100  F009   	movff	dtoa@n+7,___aomod@dividend+7
 22030  002240  0E0A               	movlw	10
 22031  002242  6E0A               	movwf	___aomod@divisor^0,c
 22032  002244  0E00               	movlw	0
 22033  002246  6E0B               	movwf	(___aomod@divisor+1)^0,c
 22034  002248  0E00               	movlw	0
 22035  00224A  6E0C               	movwf	(___aomod@divisor+2)^0,c
 22036  00224C  0E00               	movlw	0
 22037  00224E  6E0D               	movwf	(___aomod@divisor+3)^0,c
 22038  002250  0E00               	movlw	0
 22039  002252  6E0E               	movwf	(___aomod@divisor+4)^0,c
 22040  002254  0E00               	movlw	0
 22041  002256  6E0F               	movwf	(___aomod@divisor+5)^0,c
 22042  002258  0E00               	movlw	0
 22043  00225A  6E10               	movwf	(___aomod@divisor+6)^0,c
 22044  00225C  0E00               	movlw	0
 22045  00225E  6E11               	movwf	(___aomod@divisor+7)^0,c
 22046  002260  ECC3  F026         	call	___aomod	;wreg free
 22047  002264  0060  F008  F029   	movff	?___aomod,??_dtoa
 22048  00226A  0060  F00C  F02A   	movff	?___aomod+1,??_dtoa+1
 22049  002270  0060  F010  F02B   	movff	?___aomod+2,??_dtoa+2
 22050  002276  0060  F014  F02C   	movff	?___aomod+3,??_dtoa+3
 22051  00227C  0060  F018  F02D   	movff	?___aomod+4,??_dtoa+4
 22052  002282  0060  F01C  F02E   	movff	?___aomod+5,??_dtoa+5
 22053  002288  0060  F020  F02F   	movff	?___aomod+6,??_dtoa+6
 22054  00228E  0060  F024  F030   	movff	?___aomod+7,??_dtoa+7
 22055  002294  0060  F0A4  F014   	movff	??_dtoa,abs@a
 22056  00229A  0060  F0AC  F015   	movff	??_dtoa+2,abs@a+1
 22057  0022A0  EC3F  F047         	call	_abs	;wreg free
 22058  0022A4  5014               	movf	?_abs^0,w,c
 22059  0022A6  0F30               	addlw	48
 22060  0022A8  6EDF               	movwf	indf2,c
 22061  0022AA                     
 22062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 22063  0022AA  0633               	decf	dtoa@p^0,f,c
 22064  0022AC  A0D8               	btfss	status,0,c
 22065  0022AE  0634               	decf	(dtoa@p+1)^0,f,c
 22066  0022B0                     
 22067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 22068  0022B0  0635               	decf	dtoa@w^0,f,c
 22069  0022B2  A0D8               	btfss	status,0,c
 22070  0022B4  0636               	decf	(dtoa@w+1)^0,f,c
 22071  0022B6                     
 22072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 22073  0022B6  0060  F0E4  F002   	movff	dtoa@n,___aodiv@dividend
 22074  0022BC  0060  F0E8  F003   	movff	dtoa@n+1,___aodiv@dividend+1
 22075  0022C2  0060  F0EC  F004   	movff	dtoa@n+2,___aodiv@dividend+2
 22076  0022C8  0060  F0F0  F005   	movff	dtoa@n+3,___aodiv@dividend+3
 22077  0022CE  0060  F0F4  F006   	movff	dtoa@n+4,___aodiv@dividend+4
 22078  0022D4  0060  F0F8  F007   	movff	dtoa@n+5,___aodiv@dividend+5
 22079  0022DA  0060  F0FC  F008   	movff	dtoa@n+6,___aodiv@dividend+6
 22080  0022E0  0060  F100  F009   	movff	dtoa@n+7,___aodiv@dividend+7
 22081  0022E6  0E0A               	movlw	10
 22082  0022E8  6E0A               	movwf	___aodiv@divisor^0,c
 22083  0022EA  0E00               	movlw	0
 22084  0022EC  6E0B               	movwf	(___aodiv@divisor+1)^0,c
 22085  0022EE  0E00               	movlw	0
 22086  0022F0  6E0C               	movwf	(___aodiv@divisor+2)^0,c
 22087  0022F2  0E00               	movlw	0
 22088  0022F4  6E0D               	movwf	(___aodiv@divisor+3)^0,c
 22089  0022F6  0E00               	movlw	0
 22090  0022F8  6E0E               	movwf	(___aodiv@divisor+4)^0,c
 22091  0022FA  0E00               	movlw	0
 22092  0022FC  6E0F               	movwf	(___aodiv@divisor+5)^0,c
 22093  0022FE  0E00               	movlw	0
 22094  002300  6E10               	movwf	(___aodiv@divisor+6)^0,c
 22095  002302  0E00               	movlw	0
 22096  002304  6E11               	movwf	(___aodiv@divisor+7)^0,c
 22097  002306  ECD9  F022         	call	___aodiv	;wreg free
 22098  00230A  0060  F008  F039   	movff	?___aodiv,dtoa@n
 22099  002310  0060  F00C  F03A   	movff	?___aodiv+1,dtoa@n+1
 22100  002316  0060  F010  F03B   	movff	?___aodiv+2,dtoa@n+2
 22101  00231C  0060  F014  F03C   	movff	?___aodiv+3,dtoa@n+3
 22102  002322  0060  F018  F03D   	movff	?___aodiv+4,dtoa@n+4
 22103  002328  0060  F01C  F03E   	movff	?___aodiv+5,dtoa@n+5
 22104  00232E  0060  F020  F03F   	movff	?___aodiv+6,dtoa@n+6
 22105  002334  0060  F024  F040   	movff	?___aodiv+7,dtoa@n+7
 22106  00233A                     l14055:
 22107                           
 22108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22109  00233A  BE42               	btfsc	(dtoa@i+1)^0,7,c
 22110  00233C  EFA8  F011         	goto	u12911
 22111  002340  5042               	movf	(dtoa@i+1)^0,w,c
 22112  002342  E108               	bnz	u12910
 22113  002344  0441               	decf	dtoa@i^0,w,c
 22114  002346  A0D8               	btfss	status,0,c
 22115  002348  EFA8  F011         	goto	u12911
 22116  00234C  EFAA  F011         	goto	u12910
 22117  002350                     u12911:
 22118  002350  EFDB  F011         	goto	l14065
 22119  002354                     u12910:
 22120  002354  5039               	movf	dtoa@n^0,w,c
 22121  002356  103A               	iorwf	(dtoa@n+1)^0,w,c
 22122  002358  103B               	iorwf	(dtoa@n+2)^0,w,c
 22123  00235A  103C               	iorwf	(dtoa@n+3)^0,w,c
 22124  00235C  103D               	iorwf	(dtoa@n+4)^0,w,c
 22125  00235E  103E               	iorwf	(dtoa@n+5)^0,w,c
 22126  002360  103F               	iorwf	(dtoa@n+6)^0,w,c
 22127  002362  1040               	iorwf	(dtoa@n+7)^0,w,c
 22128  002364  A4D8               	btfss	status,2,c
 22129  002366  EFB7  F011         	goto	u12921
 22130  00236A  EFB9  F011         	goto	u12920
 22131  00236E                     u12921:
 22132  00236E  EFFF  F010         	goto	l14045
 22133  002372                     u12920:
 22134  002372  BE34               	btfsc	(dtoa@p+1)^0,7,c
 22135  002374  EFC6  F011         	goto	u12930
 22136  002378  5034               	movf	(dtoa@p+1)^0,w,c
 22137  00237A  E106               	bnz	u12931
 22138  00237C  0433               	decf	dtoa@p^0,w,c
 22139  00237E  B0D8               	btfsc	status,0,c
 22140  002380  EFC4  F011         	goto	u12931
 22141  002384  EFC6  F011         	goto	u12930
 22142  002388                     u12931:
 22143  002388  EFFF  F010         	goto	l14045
 22144  00238C                     u12930:
 22145  00238C  BE36               	btfsc	(dtoa@w+1)^0,7,c
 22146  00238E  EFD1  F011         	goto	u12941
 22147  002392  5036               	movf	(dtoa@w+1)^0,w,c
 22148  002394  E108               	bnz	u12940
 22149  002396  0435               	decf	dtoa@w^0,w,c
 22150  002398  A0D8               	btfss	status,0,c
 22151  00239A  EFD1  F011         	goto	u12941
 22152  00239E  EFD3  F011         	goto	u12940
 22153  0023A2                     u12941:
 22154  0023A2  EFDB  F011         	goto	l14065
 22155  0023A6                     u12940:
 22156  0023A6  0100               	movlb	0	; () banked
 22157  0023A8  B3E4               	btfsc	_flags& (0+255),1,b
 22158  0023AA  EFD9  F011         	goto	u12951
 22159  0023AE  EFDB  F011         	goto	u12950
 22160  0023B2                     u12951:
 22161  0023B2  EFFF  F010         	goto	l14045
 22162  0023B6                     u12950:
 22163  0023B6                     l14065:
 22164                           
 22165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 22166  0023B6  5037               	movf	dtoa@s^0,w,c
 22167  0023B8  1038               	iorwf	(dtoa@s+1)^0,w,c
 22168  0023BA  A4D8               	btfss	status,2,c
 22169  0023BC  EFE2  F011         	goto	u12961
 22170  0023C0  EFE4  F011         	goto	u12960
 22171  0023C4                     u12961:
 22172  0023C4  EFEC  F011         	goto	l14069
 22173  0023C8                     u12960:
 22174  0023C8  0100               	movlb	0	; () banked
 22175  0023CA  A5E4               	btfss	_flags& (0+255),2,b
 22176  0023CC  EFEA  F011         	goto	u12971
 22177  0023D0  EFEC  F011         	goto	u12970
 22178  0023D4                     u12971:
 22179  0023D4  EF0B  F012         	goto	l14079
 22180  0023D8                     u12970:
 22181  0023D8                     l14069:
 22182                           
 22183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 22184  0023D8  0641               	decf	dtoa@i^0,f,c
 22185  0023DA  A0D8               	btfss	status,0,c
 22186  0023DC  0642               	decf	(dtoa@i+1)^0,f,c
 22187  0023DE                     
 22188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 22189  0023DE  5037               	movf	dtoa@s^0,w,c
 22190  0023E0  1038               	iorwf	(dtoa@s+1)^0,w,c
 22191  0023E2  A4D8               	btfss	status,2,c
 22192  0023E4  EFF6  F011         	goto	u12981
 22193  0023E8  EFF8  F011         	goto	u12980
 22194  0023EC                     u12981:
 22195  0023EC  EFFE  F011         	goto	l14075
 22196  0023F0                     u12980:
 22197  0023F0  0E00               	movlw	0
 22198  0023F2  6E32               	movwf	(_dtoa$6909+1)^0,c
 22199  0023F4  0E2B               	movlw	43
 22200  0023F6  6E31               	movwf	_dtoa$6909^0,c
 22201  0023F8  EF02  F012         	goto	l14077
 22202  0023FC                     l14075:
 22203  0023FC  0E00               	movlw	0
 22204  0023FE  6E32               	movwf	(_dtoa$6909+1)^0,c
 22205  002400  0E2D               	movlw	45
 22206  002402  6E31               	movwf	_dtoa$6909^0,c
 22207  002404                     l14077:
 22208  002404  0EC6               	movlw	low _dbuf
 22209  002406  2441               	addwf	dtoa@i^0,w,c
 22210  002408  6ED9               	movwf	fsr2l,c
 22211  00240A  0E02               	movlw	high _dbuf
 22212  00240C  2042               	addwfc	(dtoa@i+1)^0,w,c
 22213  00240E  6EDA               	movwf	fsr2h,c
 22214  002410  0060  F0C7  FFDF   	movff	_dtoa$6909,indf2
 22215  002416                     l14079:
 22216                           
 22217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 22218  002416  0060  F07C  F014   	movff	dtoa@fp,pad@fp
 22219  00241C  0060  F080  F015   	movff	dtoa@fp+1,pad@fp+1
 22220  002422  0EC6               	movlw	low _dbuf
 22221  002424  2441               	addwf	dtoa@i^0,w,c
 22222  002426  6E16               	movwf	pad@buf^0,c
 22223  002428  0E02               	movlw	high _dbuf
 22224  00242A  2042               	addwfc	(dtoa@i+1)^0,w,c
 22225  00242C  6E17               	movwf	(pad@buf+1)^0,c
 22226  00242E  0060  F0D4  F018   	movff	dtoa@w,pad@p
 22227  002434  0060  F0D8  F019   	movff	dtoa@w+1,pad@p+1
 22228  00243A  EC05  F036         	call	_pad	;wreg free
 22229  00243E  0060  F050  F01F   	movff	?_pad,?_dtoa
 22230  002444  0060  F054  F020   	movff	?_pad+1,?_dtoa+1
 22231  00244A  0012               	return		;funcret
 22232  00244C                     __end_of_dtoa:
 22233                           	opt callstack 0
 22234                           
 22235 ;; *************** function _pad *****************
 22236 ;; Defined at:
 22237 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22238 ;; Parameters:    Size  Location     Type
 22239 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 22240 ;;		 -> NULL(0), 
 22241 ;;  buf             2   21[COMRAM] PTR unsigned char 
 22242 ;;		 -> dbuf(32), 
 22243 ;;  p               2   23[COMRAM] int 
 22244 ;; Auto vars:     Size  Location     Type
 22245 ;;  w               2   28[COMRAM] int 
 22246 ;;  i               2   26[COMRAM] int 
 22247 ;; Return value:  Size  Location     Type
 22248 ;;                  2   19[COMRAM] int 
 22249 ;; Registers used:
 22250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22251 ;; Tracked objects:
 22252 ;;		On entry : 0/0
 22253 ;;		On exit  : 0/0
 22254 ;;		Unchanged: 0/0
 22255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22256 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22259 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22260 ;;Total ram usage:       11 bytes
 22261 ;; Hardware stack levels used:    1
 22262 ;; Hardware stack levels required when called:   11
 22263 ;; This function calls:
 22264 ;;		_fputc
 22265 ;;		_fputs
 22266 ;;		_strlen
 22267 ;; This function is called by:
 22268 ;;		_dtoa
 22269 ;;		_utoa
 22270 ;;		_xtoa
 22271 ;; This function uses a non-reentrant model
 22272 ;;
 22273                           
 22274                           	psect	text130
 22275  006C0A                     __ptext130:
 22276                           	opt callstack 0
 22277  006C0A                     _pad:
 22278                           	opt callstack 12
 22279  006C0A                     
 22280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 22281  006C0A  0100               	movlb	0	; () banked
 22282  006C0C  A1E4               	btfss	_flags& (0+255),0,b
 22283  006C0E  EF0B  F036         	goto	u12471
 22284  006C12  EF0D  F036         	goto	u12470
 22285  006C16                     u12471:
 22286  006C16  EF1B  F036         	goto	l13837
 22287  006C1A                     u12470:
 22288  006C1A                     
 22289                           ; BSR set to: 0
 22290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 22291  006C1A  0060  F058  F00D   	movff	pad@buf,fputs@s
 22292  006C20  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 22293  006C26  0060  F050  F00F   	movff	pad@fp,fputs@fp
 22294  006C2C  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 22295  006C32  EC8A  F047         	call	_fputs	;wreg free
 22296  006C36                     l13837:
 22297                           
 22298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 22299  006C36  BE19               	btfsc	(pad@p+1)^0,7,c
 22300  006C38  EF20  F036         	goto	u12481
 22301  006C3C  EF22  F036         	goto	u12480
 22302  006C40                     u12481:
 22303  006C40  EF2A  F036         	goto	l13841
 22304  006C44                     u12480:
 22305  006C44  0060  F060  F01D   	movff	pad@p,pad@w
 22306  006C4A  0060  F064  F01E   	movff	pad@p+1,pad@w+1
 22307  006C50  EF2E  F036         	goto	l3029
 22308  006C54                     l13841:
 22309  006C54  0E00               	movlw	0
 22310  006C56  6E1E               	movwf	(pad@w+1)^0,c
 22311  006C58  0E00               	movlw	0
 22312  006C5A  6E1D               	movwf	pad@w^0,c
 22313  006C5C                     l3029:
 22314                           
 22315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 22316  006C5C  0E00               	movlw	0
 22317  006C5E  6E1C               	movwf	(pad@i+1)^0,c
 22318  006C60  0E00               	movlw	0
 22319  006C62  6E1B               	movwf	pad@i^0,c
 22320                           
 22321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 22322  006C64  EF42  F036         	goto	l13847
 22323  006C68                     l13843:
 22324                           
 22325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 22326  006C68  0E00               	movlw	0
 22327  006C6A  6E05               	movwf	(fputc@c+1)^0,c
 22328  006C6C  0E20               	movlw	32
 22329  006C6E  6E04               	movwf	fputc@c^0,c
 22330  006C70  0060  F050  F006   	movff	pad@fp,fputc@fp
 22331  006C76  0060  F054  F007   	movff	pad@fp+1,fputc@fp+1
 22332  006C7C  ECE9  F03F         	call	_fputc	;wreg free
 22333  006C80                     
 22334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 22335  006C80  4A1B               	infsnz	pad@i^0,f,c
 22336  006C82  2A1C               	incf	(pad@i+1)^0,f,c
 22337  006C84                     l13847:
 22338                           
 22339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 22340  006C84  501D               	movf	pad@w^0,w,c
 22341  006C86  5C1B               	subwf	pad@i^0,w,c
 22342  006C88  501C               	movf	(pad@i+1)^0,w,c
 22343  006C8A  0A80               	xorlw	128
 22344  006C8C  6E1A               	movwf	??_pad^0,c
 22345  006C8E  501E               	movf	(pad@w+1)^0,w,c
 22346  006C90  0A80               	xorlw	128
 22347  006C92  581A               	subwfb	??_pad^0,w,c
 22348  006C94  A0D8               	btfss	status,0,c
 22349  006C96  EF4F  F036         	goto	u12491
 22350  006C9A  EF51  F036         	goto	u12490
 22351  006C9E                     u12491:
 22352  006C9E  EF34  F036         	goto	l13843
 22353  006CA2                     u12490:
 22354  006CA2                     
 22355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 22356  006CA2  0100               	movlb	0	; () banked
 22357  006CA4  B1E4               	btfsc	_flags& (0+255),0,b
 22358  006CA6  EF57  F036         	goto	u12501
 22359  006CAA  EF59  F036         	goto	u12500
 22360  006CAE                     u12501:
 22361  006CAE  EF67  F036         	goto	l13851
 22362  006CB2                     u12500:
 22363  006CB2                     
 22364                           ; BSR set to: 0
 22365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 22366  006CB2  0060  F058  F00D   	movff	pad@buf,fputs@s
 22367  006CB8  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 22368  006CBE  0060  F050  F00F   	movff	pad@fp,fputs@fp
 22369  006CC4  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 22370  006CCA  EC8A  F047         	call	_fputs	;wreg free
 22371  006CCE                     l13851:
 22372                           
 22373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 22374  006CCE  0060  F058  F002   	movff	pad@buf,strlen@s
 22375  006CD4  0060  F05C  F003   	movff	pad@buf+1,strlen@s+1
 22376  006CDA  EC91  F045         	call	_strlen	;wreg free
 22377  006CDE  501D               	movf	pad@w^0,w,c
 22378  006CE0  2402               	addwf	?_strlen^0,w,c
 22379  006CE2  6E14               	movwf	?_pad^0,c
 22380  006CE4  501E               	movf	(pad@w+1)^0,w,c
 22381  006CE6  2003               	addwfc	(?_strlen+1)^0,w,c
 22382  006CE8  6E15               	movwf	(?_pad+1)^0,c
 22383  006CEA  0012               	return		;funcret
 22384  006CEC                     __end_of_pad:
 22385                           	opt callstack 0
 22386                           
 22387 ;; *************** function _strlen *****************
 22388 ;; Defined at:
 22389 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 22390 ;; Parameters:    Size  Location     Type
 22391 ;;  s               2    1[COMRAM] PTR const unsigned char 
 22392 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_127(10), 
 22393 ;;		 -> STR_125(10), STR_123(6), STR_121(6), STR_119(7), 
 22394 ;;		 -> STR_117(5), STR_115(7), STR_113(7), STR_111(6), 
 22395 ;;		 -> STR_109(9), STR_107(8), STR_105(8), STR_103(7), 
 22396 ;;		 -> STR_101(6), STR_99(3), STR_97(9), STR_95(7), 
 22397 ;;		 -> STR_93(7), STR_91(10), STR_89(10), STR_87(15), 
 22398 ;;		 -> STR_85(13), STR_83(9), STR_81(7), STR_79(7), 
 22399 ;;		 -> STR_77(10), STR_75(7), STR_73(8), STR_71(11), 
 22400 ;;		 -> STR_69(5), STR_67(5), STR_65(7), STR_63(9), 
 22401 ;;		 -> STR_61(7), STR_55(2), STR_53(2), STR_52(2), 
 22402 ;;		 -> STR_49(6), STR_47(6), STR_45(5), STR_41(2), 
 22403 ;;		 -> STR_36(2), STR_32(2), STR_23(2), STR_20(2), 
 22404 ;;		 -> STR_14(2), STR_10(2), atCommand(80), NULL(0), 
 22405 ;;		 -> STR_6(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 22406 ;; Auto vars:     Size  Location     Type
 22407 ;;  a               2    3[COMRAM] PTR const unsigned char 
 22408 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_127(10), 
 22409 ;;		 -> STR_125(10), STR_123(6), STR_121(6), STR_119(7), 
 22410 ;;		 -> STR_117(5), STR_115(7), STR_113(7), STR_111(6), 
 22411 ;;		 -> STR_109(9), STR_107(8), STR_105(8), STR_103(7), 
 22412 ;;		 -> STR_101(6), STR_99(3), STR_97(9), STR_95(7), 
 22413 ;;		 -> STR_93(7), STR_91(10), STR_89(10), STR_87(15), 
 22414 ;;		 -> STR_85(13), STR_83(9), STR_81(7), STR_79(7), 
 22415 ;;		 -> STR_77(10), STR_75(7), STR_73(8), STR_71(11), 
 22416 ;;		 -> STR_69(5), STR_67(5), STR_65(7), STR_63(9), 
 22417 ;;		 -> STR_61(7), STR_55(2), STR_53(2), STR_52(2), 
 22418 ;;		 -> STR_49(6), STR_47(6), STR_45(5), STR_41(2), 
 22419 ;;		 -> STR_36(2), STR_32(2), STR_23(2), STR_20(2), 
 22420 ;;		 -> STR_14(2), STR_10(2), atCommand(80), NULL(0), 
 22421 ;;		 -> STR_6(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 22422 ;; Return value:  Size  Location     Type
 22423 ;;                  2    1[COMRAM] unsigned int 
 22424 ;; Registers used:
 22425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22426 ;; Tracked objects:
 22427 ;;		On entry : 0/0
 22428 ;;		On exit  : 0/0
 22429 ;;		Unchanged: 0/0
 22430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22435 ;;Total ram usage:        4 bytes
 22436 ;; Hardware stack levels used:    1
 22437 ;; Hardware stack levels required when called:    7
 22438 ;; This function calls:
 22439 ;;		Nothing
 22440 ;; This function is called by:
 22441 ;;		_cmdSend
 22442 ;;		_cmdBcast
 22443 ;;		_cmdSetAES
 22444 ;;		_pad
 22445 ;;		_stoa
 22446 ;;		_strstr
 22447 ;;		_sendUARTMessage
 22448 ;; This function uses a non-reentrant model
 22449 ;;
 22450                           
 22451                           	psect	text131
 22452  008B22                     __ptext131:
 22453                           	opt callstack 0
 22454  008B22                     _strlen:
 22455                           	opt callstack 20
 22456  008B22  0060  F008  F004   	movff	strlen@s,strlen@a
 22457  008B28  0060  F00C  F005   	movff	strlen@s+1,strlen@a+1
 22458  008B2E  EF9B  F045         	goto	l13815
 22459  008B32                     l13813:
 22460  008B32  4A02               	infsnz	strlen@s^0,f,c
 22461  008B34  2A03               	incf	(strlen@s+1)^0,f,c
 22462  008B36                     l13815:
 22463  008B36  0060  F00B  FFF6   	movff	strlen@s,tblptrl
 22464  008B3C  0060  F00F  FFF7   	movff	strlen@s+1,tblptrh
 22465  008B42  0E00               	movlw	low (__mediumconst shr (0+16))
 22466  008B44  6EF8               	movwf	tblptru,c
 22467  008B46  0E0F               	movlw	(high __ramtop+-1)
 22468  008B48  64F7               	cpfsgt	tblptrh,c
 22469  008B4A  D003               	bra	u12427
 22470  008B4C  0008               	tblrd		*
 22471  008B4E  50F5               	movf	tablat,w,c
 22472  008B50  D007               	bra	u12420
 22473  008B52                     u12427:
 22474  008B52  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22475  008B58  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22476  008B5E  50EF               	movf	indf0,w,c
 22477  008B60                     u12420:
 22478  008B60  0900               	iorlw	0
 22479  008B62  A4D8               	btfss	status,2,c
 22480  008B64  EFB6  F045         	goto	u12431
 22481  008B68  EFB8  F045         	goto	u12430
 22482  008B6C                     u12431:
 22483  008B6C  EF99  F045         	goto	l13813
 22484  008B70                     u12430:
 22485  008B70  5004               	movf	strlen@a^0,w,c
 22486  008B72  5C02               	subwf	strlen@s^0,w,c
 22487  008B74  6E02               	movwf	?_strlen^0,c
 22488  008B76  5005               	movf	(strlen@a+1)^0,w,c
 22489  008B78  5803               	subwfb	(strlen@s+1)^0,w,c
 22490  008B7A  6E03               	movwf	(?_strlen+1)^0,c
 22491  008B7C  0012               	return		;funcret
 22492  008B7E                     __end_of_strlen:
 22493                           	opt callstack 0
 22494                           
 22495 ;; *************** function _fputs *****************
 22496 ;; Defined at:
 22497 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 22498 ;; Parameters:    Size  Location     Type
 22499 ;;  s               2   12[COMRAM] PTR const unsigned char 
 22500 ;;		 -> dbuf(32), 
 22501 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 22502 ;;		 -> NULL(0), 
 22503 ;; Auto vars:     Size  Location     Type
 22504 ;;  i               2   17[COMRAM] int 
 22505 ;;  c               1   16[COMRAM] unsigned char 
 22506 ;; Return value:  Size  Location     Type
 22507 ;;                  2   12[COMRAM] int 
 22508 ;; Registers used:
 22509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22510 ;; Tracked objects:
 22511 ;;		On entry : 0/0
 22512 ;;		On exit  : 0/0
 22513 ;;		Unchanged: 0/0
 22514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22516 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22518 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22519 ;;Total ram usage:        7 bytes
 22520 ;; Hardware stack levels used:    1
 22521 ;; Hardware stack levels required when called:   10
 22522 ;; This function calls:
 22523 ;;		_fputc
 22524 ;; This function is called by:
 22525 ;;		_pad
 22526 ;; This function uses a non-reentrant model
 22527 ;;
 22528                           
 22529                           	psect	text132
 22530  008F14                     __ptext132:
 22531                           	opt callstack 0
 22532  008F14                     _fputs:
 22533                           	opt callstack 12
 22534  008F14  0E00               	movlw	0
 22535  008F16  6E13               	movwf	(fputs@i+1)^0,c
 22536  008F18  0E00               	movlw	0
 22537  008F1A  6E12               	movwf	fputs@i^0,c
 22538  008F1C  EF9E  F047         	goto	l13827
 22539  008F20                     l13823:
 22540  008F20  0060  F044  F004   	movff	fputs@c,fputc@c
 22541  008F26  6A05               	clrf	(fputc@c+1)^0,c
 22542  008F28  0060  F03C  F006   	movff	fputs@fp,fputc@fp
 22543  008F2E  0060  F040  F007   	movff	fputs@fp+1,fputc@fp+1
 22544  008F34  ECE9  F03F         	call	_fputc	;wreg free
 22545  008F38  4A12               	infsnz	fputs@i^0,f,c
 22546  008F3A  2A13               	incf	(fputs@i+1)^0,f,c
 22547  008F3C                     l13827:
 22548  008F3C  5012               	movf	fputs@i^0,w,c
 22549  008F3E  240D               	addwf	fputs@s^0,w,c
 22550  008F40  6ED9               	movwf	fsr2l,c
 22551  008F42  5013               	movf	(fputs@i+1)^0,w,c
 22552  008F44  200E               	addwfc	(fputs@s+1)^0,w,c
 22553  008F46  6EDA               	movwf	fsr2h,c
 22554  008F48  50DF               	movf	indf2,w,c
 22555  008F4A  6E11               	movwf	fputs@c^0,c
 22556  008F4C  5011               	movf	fputs@c^0,w,c
 22557  008F4E  A4D8               	btfss	status,2,c
 22558  008F50  EFAC  F047         	goto	u12441
 22559  008F54  EFAE  F047         	goto	u12440
 22560  008F58                     u12441:
 22561  008F58  EF90  F047         	goto	l13823
 22562  008F5C                     u12440:
 22563  008F5C  0012               	return		;funcret
 22564  008F5E                     __end_of_fputs:
 22565                           	opt callstack 0
 22566                           
 22567 ;; *************** function _fputc *****************
 22568 ;; Defined at:
 22569 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 22570 ;; Parameters:    Size  Location     Type
 22571 ;;  c               2    3[COMRAM] int 
 22572 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 22573 ;;		 -> NULL(0), 
 22574 ;; Auto vars:     Size  Location     Type
 22575 ;;		None
 22576 ;; Return value:  Size  Location     Type
 22577 ;;                  2    3[COMRAM] int 
 22578 ;; Registers used:
 22579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22580 ;; Tracked objects:
 22581 ;;		On entry : 0/0
 22582 ;;		On exit  : 0/0
 22583 ;;		Unchanged: 0/0
 22584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22587 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22588 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22589 ;;Total ram usage:        9 bytes
 22590 ;; Hardware stack levels used:    1
 22591 ;; Hardware stack levels required when called:    9
 22592 ;; This function calls:
 22593 ;;		_putch
 22594 ;; This function is called by:
 22595 ;;		_pad
 22596 ;;		_stoa
 22597 ;;		_vfpfcnvrt
 22598 ;;		_fputs
 22599 ;; This function uses a non-reentrant model
 22600 ;;
 22601                           
 22602                           	psect	text133
 22603  007FD2                     __ptext133:
 22604                           	opt callstack 0
 22605  007FD2                     _fputc:
 22606                           	opt callstack 12
 22607  007FD2  5006               	movf	fputc@fp^0,w,c
 22608  007FD4  1007               	iorwf	(fputc@fp+1)^0,w,c
 22609  007FD6  B4D8               	btfsc	status,2,c
 22610  007FD8  EFF0  F03F         	goto	u12381
 22611  007FDC  EFF2  F03F         	goto	u12380
 22612  007FE0                     u12381:
 22613  007FE0  EFFB  F03F         	goto	l13801
 22614  007FE4                     u12380:
 22615  007FE4  5006               	movf	fputc@fp^0,w,c
 22616  007FE6  1007               	iorwf	(fputc@fp+1)^0,w,c
 22617  007FE8  A4D8               	btfss	status,2,c
 22618  007FEA  EFF9  F03F         	goto	u12391
 22619  007FEE  EFFB  F03F         	goto	u12390
 22620  007FF2                     u12391:
 22621  007FF2  EF00  F040         	goto	l13803
 22622  007FF6                     u12390:
 22623  007FF6                     l13801:
 22624  007FF6  5004               	movf	fputc@c^0,w,c
 22625  007FF8  EC6E  F04E         	call	_putch
 22626  007FFC  EF33  F040         	goto	l3935
 22627  008000                     l13803:
 22628  008000  EE20 F004          	lfsr	2,4
 22629  008004  5006               	movf	fputc@fp^0,w,c
 22630  008006  26D9               	addwf	fsr2l,f,c
 22631  008008  5007               	movf	(fputc@fp+1)^0,w,c
 22632  00800A  22DA               	addwfc	fsr2h,f,c
 22633  00800C  50DE               	movf	postinc2,w,c
 22634  00800E  10DE               	iorwf	postinc2,w,c
 22635  008010  B4D8               	btfsc	status,2,c
 22636  008012  EF0D  F040         	goto	u12401
 22637  008016  EF0F  F040         	goto	u12400
 22638  00801A                     u12401:
 22639  00801A  EF2A  F040         	goto	l13807
 22640  00801E                     u12400:
 22641  00801E  EE20 F004          	lfsr	2,4
 22642  008022  5006               	movf	fputc@fp^0,w,c
 22643  008024  26D9               	addwf	fsr2l,f,c
 22644  008026  5007               	movf	(fputc@fp+1)^0,w,c
 22645  008028  22DA               	addwfc	fsr2h,f,c
 22646  00802A  EE10 F002          	lfsr	1,2
 22647  00802E  5006               	movf	fputc@fp^0,w,c
 22648  008030  26E1               	addwf	fsr1l,f,c
 22649  008032  5007               	movf	(fputc@fp+1)^0,w,c
 22650  008034  22E2               	addwfc	fsr1h,f,c
 22651  008036  50DE               	movf	postinc2,w,c
 22652  008038  5CE6               	subwf	postinc1,w,c
 22653  00803A  50E6               	movf	postinc1,w,c
 22654  00803C  0A80               	xorlw	128
 22655  00803E  6E0C               	movwf	(??_fputc+4)^0,c
 22656  008040  50DE               	movf	postinc2,w,c
 22657  008042  0A80               	xorlw	128
 22658  008044  580C               	subwfb	(??_fputc+4)^0,w,c
 22659  008046  B0D8               	btfsc	status,0,c
 22660  008048  EF28  F040         	goto	u12411
 22661  00804C  EF2A  F040         	goto	u12410
 22662  008050                     u12411:
 22663  008050  EF33  F040         	goto	l3935
 22664  008054                     u12410:
 22665  008054                     l13807:
 22666  008054  EE20 F002          	lfsr	2,2
 22667  008058  5006               	movf	fputc@fp^0,w,c
 22668  00805A  26D9               	addwf	fsr2l,f,c
 22669  00805C  5007               	movf	(fputc@fp+1)^0,w,c
 22670  00805E  22DA               	addwfc	fsr2h,f,c
 22671  008060  2ADE               	incf	postinc2,f,c
 22672  008062  0E00               	movlw	0
 22673  008064  22DD               	addwfc	postdec2,f,c
 22674  008066                     l3935:
 22675  008066  0012               	return		;funcret
 22676  008068                     __end_of_fputc:
 22677                           	opt callstack 0
 22678                           
 22679 ;; *************** function _putch *****************
 22680 ;; Defined at:
 22681 ;;		line 242 in file "mcc_generated_files/uart1.c"
 22682 ;; Parameters:    Size  Location     Type
 22683 ;;  txData          1    wreg     unsigned char 
 22684 ;; Auto vars:     Size  Location     Type
 22685 ;;  txData          1    2[COMRAM] unsigned char 
 22686 ;; Return value:  Size  Location     Type
 22687 ;;                  1    wreg      void 
 22688 ;; Registers used:
 22689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22690 ;; Tracked objects:
 22691 ;;		On entry : 0/0
 22692 ;;		On exit  : 0/0
 22693 ;;		Unchanged: 0/0
 22694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22699 ;;Total ram usage:        1 bytes
 22700 ;; Hardware stack levels used:    1
 22701 ;; Hardware stack levels required when called:    8
 22702 ;; This function calls:
 22703 ;;		_UART1_Write
 22704 ;; This function is called by:
 22705 ;;		_fputc
 22706 ;; This function uses a non-reentrant model
 22707 ;;
 22708                           
 22709                           	psect	text134
 22710  009CDC                     __ptext134:
 22711                           	opt callstack 0
 22712  009CDC                     _putch:
 22713                           	opt callstack 12
 22714                           
 22715                           ;incstack = 0
 22716                           ;putch@txData stored from wreg
 22717  009CDC  6E03               	movwf	putch@txData^0,c
 22718  009CDE                     
 22719                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 22720  009CDE  5003               	movf	putch@txData^0,w,c
 22721  009CE0  EC46  F044         	call	_UART1_Write
 22722  009CE4  0012               	return		;funcret
 22723  009CE6                     __end_of_putch:
 22724                           	opt callstack 0
 22725                           
 22726 ;; *************** function _UART1_Write *****************
 22727 ;; Defined at:
 22728 ;;		line 210 in file "mcc_generated_files/uart1.c"
 22729 ;; Parameters:    Size  Location     Type
 22730 ;;  txData          1    wreg     unsigned char 
 22731 ;; Auto vars:     Size  Location     Type
 22732 ;;  txData          1    1[COMRAM] unsigned char 
 22733 ;; Return value:  Size  Location     Type
 22734 ;;                  1    wreg      void 
 22735 ;; Registers used:
 22736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22737 ;; Tracked objects:
 22738 ;;		On entry : 0/0
 22739 ;;		On exit  : 0/0
 22740 ;;		Unchanged: 0/0
 22741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22746 ;;Total ram usage:        1 bytes
 22747 ;; Hardware stack levels used:    1
 22748 ;; Hardware stack levels required when called:    7
 22749 ;; This function calls:
 22750 ;;		Nothing
 22751 ;; This function is called by:
 22752 ;;		_putch
 22753 ;;		_sendOKMessage
 22754 ;;		_sendUARTMessage
 22755 ;; This function uses a non-reentrant model
 22756 ;;
 22757                           
 22758                           	psect	text135
 22759  00888C                     __ptext135:
 22760                           	opt callstack 0
 22761  00888C                     _UART1_Write:
 22762                           	opt callstack 12
 22763                           
 22764                           ;incstack = 0
 22765                           ;UART1_Write@txData stored from wreg
 22766  00888C  6E02               	movwf	UART1_Write@txData^0,c
 22767  00888E                     l13779:
 22768                           
 22769                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 22770  00888E  0101               	movlb	1	; () banked
 22771  008890  51FA               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 22772  008892  B4D8               	btfsc	status,2,c
 22773  008894  EF4E  F044         	goto	u12351
 22774  008898  EF50  F044         	goto	u12350
 22775  00889C                     u12351:
 22776  00889C  EF47  F044         	goto	l13779
 22777  0088A0                     u12350:
 22778  0088A0                     
 22779                           ; BSR set to: 1
 22780                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 22781  0088A0  0139               	movlb	57	; () banked
 22782  0088A2  B993               	btfsc	147,4,b	;volatile
 22783  0088A4  EF56  F044         	goto	u12361
 22784  0088A8  EF58  F044         	goto	u12360
 22785  0088AC                     u12361:
 22786  0088AC  EF5D  F044         	goto	l1366
 22787  0088B0                     u12360:
 22788  0088B0                     
 22789                           ; BSR set to: 57
 22790                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 22791  0088B0  0060  F00B  FDEA   	movff	UART1_Write@txData,15850	;volatile
 22792                           
 22793                           ;mcc_generated_files/uart1.c: 223:     }
 22794  0088B6  EF75  F044         	goto	l13793
 22795  0088BA                     l1366:
 22796                           
 22797                           ; BSR set to: 57
 22798                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 22799  0088BA  9993               	bcf	147,4,b	;volatile
 22800  0088BC                     
 22801                           ; BSR set to: 57
 22802                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 22803  0088BC  0E00               	movlw	low _uart1TxBuffer
 22804  0088BE  0100               	movlb	0	; () banked
 22805  0088C0  25EF               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 22806  0088C2  6ED9               	movwf	fsr2l,c
 22807  0088C4  6ADA               	clrf	fsr2h,c
 22808  0088C6  0E03               	movlw	high _uart1TxBuffer
 22809  0088C8  22DA               	addwfc	fsr2h,f,c
 22810  0088CA  0060  F00B  FFDF   	movff	UART1_Write@txData,indf2
 22811  0088D0                     
 22812                           ; BSR set to: 0
 22813  0088D0  2BEF               	incf	_uart1TxHead& (0+255),f,b	;volatile
 22814  0088D2                     
 22815                           ; BSR set to: 0
 22816                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 22817  0088D2  0E3F               	movlw	63
 22818  0088D4  65EF               	cpfsgt	_uart1TxHead& (0+255),b	;volatile
 22819  0088D6  EF6F  F044         	goto	u12371
 22820  0088DA  EF71  F044         	goto	u12370
 22821  0088DE                     u12371:
 22822  0088DE  EF73  F044         	goto	l13791
 22823  0088E2                     u12370:
 22824  0088E2                     
 22825                           ; BSR set to: 0
 22826                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 22827  0088E2  0E00               	movlw	0
 22828  0088E4  6FEF               	movwf	_uart1TxHead& (0+255),b	;volatile
 22829  0088E6                     l13791:
 22830                           
 22831                           ; BSR set to: 0
 22832                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 22833  0088E6  0101               	movlb	1	; () banked
 22834  0088E8  07FA               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 22835  0088EA                     l13793:
 22836                           
 22837                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 22838  0088EA  0139               	movlb	57	; () banked
 22839  0088EC  8993               	bsf	147,4,b	;volatile
 22840  0088EE                     
 22841                           ; BSR set to: 57
 22842  0088EE  0012               	return		;funcret
 22843  0088F0                     __end_of_UART1_Write:
 22844                           	opt callstack 0
 22845                           
 22846 ;; *************** function _abs *****************
 22847 ;; Defined at:
 22848 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 22849 ;; Parameters:    Size  Location     Type
 22850 ;;  a               2   19[COMRAM] int 
 22851 ;; Auto vars:     Size  Location     Type
 22852 ;;		None
 22853 ;; Return value:  Size  Location     Type
 22854 ;;                  2   19[COMRAM] int 
 22855 ;; Registers used:
 22856 ;;		wreg, status,2, status,0
 22857 ;; Tracked objects:
 22858 ;;		On entry : 0/0
 22859 ;;		On exit  : 0/0
 22860 ;;		Unchanged: 0/0
 22861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22866 ;;Total ram usage:        4 bytes
 22867 ;; Hardware stack levels used:    1
 22868 ;; Hardware stack levels required when called:    7
 22869 ;; This function calls:
 22870 ;;		Nothing
 22871 ;; This function is called by:
 22872 ;;		_dtoa
 22873 ;; This function uses a non-reentrant model
 22874 ;;
 22875                           
 22876                           	psect	text136
 22877  008E7E                     __ptext136:
 22878                           	opt callstack 0
 22879  008E7E                     _abs:
 22880                           	opt callstack 16
 22881  008E7E  BE15               	btfsc	(abs@a+1)^0,7,c
 22882  008E80  EF4C  F047         	goto	u12510
 22883  008E84  5015               	movf	(abs@a+1)^0,w,c
 22884  008E86  E106               	bnz	u12511
 22885  008E88  0414               	decf	abs@a^0,w,c
 22886  008E8A  B0D8               	btfsc	status,0,c
 22887  008E8C  EF4A  F047         	goto	u12511
 22888  008E90  EF4C  F047         	goto	u12510
 22889  008E94                     u12511:
 22890  008E94  EF5E  F047         	goto	l3847
 22891  008E98                     u12510:
 22892  008E98  0060  F050  F016   	movff	abs@a,??_abs
 22893  008E9E  0060  F054  F017   	movff	abs@a+1,??_abs+1
 22894  008EA4  1E16               	comf	??_abs^0,f,c
 22895  008EA6  1E17               	comf	(??_abs+1)^0,f,c
 22896  008EA8  4A16               	infsnz	??_abs^0,f,c
 22897  008EAA  2A17               	incf	(??_abs+1)^0,f,c
 22898  008EAC  0060  F058  F014   	movff	??_abs,?_abs
 22899  008EB2  0060  F05C  F015   	movff	??_abs+1,?_abs+1
 22900  008EB8  EF64  F047         	goto	l3850
 22901  008EBC                     l3847:
 22902  008EBC  0060  F050  F014   	movff	abs@a,?_abs
 22903  008EC2  0060  F054  F015   	movff	abs@a+1,?_abs+1
 22904  008EC8                     l3850:
 22905  008EC8  0012               	return		;funcret
 22906  008ECA                     __end_of_abs:
 22907                           	opt callstack 0
 22908                           
 22909 ;; *************** function ___aomod *****************
 22910 ;; Defined at:
 22911 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 22912 ;; Parameters:    Size  Location     Type
 22913 ;;  dividend        8    1[COMRAM] long long 
 22914 ;;  divisor         8    9[COMRAM] long long 
 22915 ;; Auto vars:     Size  Location     Type
 22916 ;;  sign            1   18[COMRAM] unsigned char 
 22917 ;;  counter         1   17[COMRAM] unsigned char 
 22918 ;; Return value:  Size  Location     Type
 22919 ;;                  8    1[COMRAM] long long 
 22920 ;; Registers used:
 22921 ;;		wreg, status,2, status,0
 22922 ;; Tracked objects:
 22923 ;;		On entry : 0/0
 22924 ;;		On exit  : 0/0
 22925 ;;		Unchanged: 0/0
 22926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22927 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22930 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22931 ;;Total ram usage:       18 bytes
 22932 ;; Hardware stack levels used:    1
 22933 ;; Hardware stack levels required when called:    7
 22934 ;; This function calls:
 22935 ;;		Nothing
 22936 ;; This function is called by:
 22937 ;;		_dtoa
 22938 ;; This function uses a non-reentrant model
 22939 ;;
 22940                           
 22941                           	psect	text137
 22942  004D86                     __ptext137:
 22943                           	opt callstack 0
 22944  004D86                     ___aomod:
 22945                           	opt callstack 16
 22946  004D86  0E00               	movlw	0
 22947  004D88  6E13               	movwf	___aomod@sign^0,c
 22948  004D8A  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
 22949  004D8C  EFCC  F026         	goto	u12680
 22950  004D90  EFCA  F026         	goto	u12681
 22951  004D94                     u12681:
 22952  004D94  EFDE  F026         	goto	l13939
 22953  004D98                     u12680:
 22954  004D98  1E09               	comf	(___aomod@dividend+7)^0,f,c
 22955  004D9A  1E08               	comf	(___aomod@dividend+6)^0,f,c
 22956  004D9C  1E07               	comf	(___aomod@dividend+5)^0,f,c
 22957  004D9E  1E06               	comf	(___aomod@dividend+4)^0,f,c
 22958  004DA0  1E05               	comf	(___aomod@dividend+3)^0,f,c
 22959  004DA2  1E04               	comf	(___aomod@dividend+2)^0,f,c
 22960  004DA4  1E03               	comf	(___aomod@dividend+1)^0,f,c
 22961  004DA6  6C02               	negf	___aomod@dividend^0,c
 22962  004DA8  0E00               	movlw	0
 22963  004DAA  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 22964  004DAC  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 22965  004DAE  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 22966  004DB0  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 22967  004DB2  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 22968  004DB4  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 22969  004DB6  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 22970  004DB8  0E01               	movlw	1
 22971  004DBA  6E13               	movwf	___aomod@sign^0,c
 22972  004DBC                     l13939:
 22973  004DBC  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
 22974  004DBE  EFE5  F026         	goto	u12690
 22975  004DC2  EFE3  F026         	goto	u12691
 22976  004DC6                     u12691:
 22977  004DC6  EFF5  F026         	goto	l13943
 22978  004DCA                     u12690:
 22979  004DCA  1E11               	comf	(___aomod@divisor+7)^0,f,c
 22980  004DCC  1E10               	comf	(___aomod@divisor+6)^0,f,c
 22981  004DCE  1E0F               	comf	(___aomod@divisor+5)^0,f,c
 22982  004DD0  1E0E               	comf	(___aomod@divisor+4)^0,f,c
 22983  004DD2  1E0D               	comf	(___aomod@divisor+3)^0,f,c
 22984  004DD4  1E0C               	comf	(___aomod@divisor+2)^0,f,c
 22985  004DD6  1E0B               	comf	(___aomod@divisor+1)^0,f,c
 22986  004DD8  6C0A               	negf	___aomod@divisor^0,c
 22987  004DDA  0E00               	movlw	0
 22988  004DDC  220B               	addwfc	(___aomod@divisor+1)^0,f,c
 22989  004DDE  220C               	addwfc	(___aomod@divisor+2)^0,f,c
 22990  004DE0  220D               	addwfc	(___aomod@divisor+3)^0,f,c
 22991  004DE2  220E               	addwfc	(___aomod@divisor+4)^0,f,c
 22992  004DE4  220F               	addwfc	(___aomod@divisor+5)^0,f,c
 22993  004DE6  2210               	addwfc	(___aomod@divisor+6)^0,f,c
 22994  004DE8  2211               	addwfc	(___aomod@divisor+7)^0,f,c
 22995  004DEA                     l13943:
 22996  004DEA  500A               	movf	___aomod@divisor^0,w,c
 22997  004DEC  100B               	iorwf	(___aomod@divisor+1)^0,w,c
 22998  004DEE  100C               	iorwf	(___aomod@divisor+2)^0,w,c
 22999  004DF0  100D               	iorwf	(___aomod@divisor+3)^0,w,c
 23000  004DF2  100E               	iorwf	(___aomod@divisor+4)^0,w,c
 23001  004DF4  100F               	iorwf	(___aomod@divisor+5)^0,w,c
 23002  004DF6  1010               	iorwf	(___aomod@divisor+6)^0,w,c
 23003  004DF8  1011               	iorwf	(___aomod@divisor+7)^0,w,c
 23004  004DFA  B4D8               	btfsc	status,2,c
 23005  004DFC  EF02  F027         	goto	u12701
 23006  004E00  EF04  F027         	goto	u12700
 23007  004E04                     u12701:
 23008  004E04  EF4C  F027         	goto	l13959
 23009  004E08                     u12700:
 23010  004E08  0E01               	movlw	1
 23011  004E0A  6E12               	movwf	___aomod@counter^0,c
 23012  004E0C  EF12  F027         	goto	l13949
 23013  004E10                     l13947:
 23014  004E10  90D8               	bcf	status,0,c
 23015  004E12  360A               	rlcf	___aomod@divisor^0,f,c
 23016  004E14  360B               	rlcf	(___aomod@divisor+1)^0,f,c
 23017  004E16  360C               	rlcf	(___aomod@divisor+2)^0,f,c
 23018  004E18  360D               	rlcf	(___aomod@divisor+3)^0,f,c
 23019  004E1A  360E               	rlcf	(___aomod@divisor+4)^0,f,c
 23020  004E1C  360F               	rlcf	(___aomod@divisor+5)^0,f,c
 23021  004E1E  3610               	rlcf	(___aomod@divisor+6)^0,f,c
 23022  004E20  3611               	rlcf	(___aomod@divisor+7)^0,f,c
 23023  004E22  2A12               	incf	___aomod@counter^0,f,c
 23024  004E24                     l13949:
 23025  004E24  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 23026  004E26  EF17  F027         	goto	u12711
 23027  004E2A  EF19  F027         	goto	u12710
 23028  004E2E                     u12711:
 23029  004E2E  EF08  F027         	goto	l13947
 23030  004E32                     u12710:
 23031  004E32                     l13951:
 23032  004E32  500A               	movf	___aomod@divisor^0,w,c
 23033  004E34  5C02               	subwf	___aomod@dividend^0,w,c
 23034  004E36  500B               	movf	(___aomod@divisor+1)^0,w,c
 23035  004E38  5803               	subwfb	(___aomod@dividend+1)^0,w,c
 23036  004E3A  500C               	movf	(___aomod@divisor+2)^0,w,c
 23037  004E3C  5804               	subwfb	(___aomod@dividend+2)^0,w,c
 23038  004E3E  500D               	movf	(___aomod@divisor+3)^0,w,c
 23039  004E40  5805               	subwfb	(___aomod@dividend+3)^0,w,c
 23040  004E42  500E               	movf	(___aomod@divisor+4)^0,w,c
 23041  004E44  5806               	subwfb	(___aomod@dividend+4)^0,w,c
 23042  004E46  500F               	movf	(___aomod@divisor+5)^0,w,c
 23043  004E48  5807               	subwfb	(___aomod@dividend+5)^0,w,c
 23044  004E4A  5010               	movf	(___aomod@divisor+6)^0,w,c
 23045  004E4C  5808               	subwfb	(___aomod@dividend+6)^0,w,c
 23046  004E4E  5011               	movf	(___aomod@divisor+7)^0,w,c
 23047  004E50  5809               	subwfb	(___aomod@dividend+7)^0,w,c
 23048  004E52  A0D8               	btfss	status,0,c
 23049  004E54  EF2E  F027         	goto	u12721
 23050  004E58  EF30  F027         	goto	u12720
 23051  004E5C                     u12721:
 23052  004E5C  EF40  F027         	goto	l13955
 23053  004E60                     u12720:
 23054  004E60  500A               	movf	___aomod@divisor^0,w,c
 23055  004E62  5E02               	subwf	___aomod@dividend^0,f,c
 23056  004E64  500B               	movf	(___aomod@divisor+1)^0,w,c
 23057  004E66  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
 23058  004E68  500C               	movf	(___aomod@divisor+2)^0,w,c
 23059  004E6A  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
 23060  004E6C  500D               	movf	(___aomod@divisor+3)^0,w,c
 23061  004E6E  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
 23062  004E70  500E               	movf	(___aomod@divisor+4)^0,w,c
 23063  004E72  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
 23064  004E74  500F               	movf	(___aomod@divisor+5)^0,w,c
 23065  004E76  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
 23066  004E78  5010               	movf	(___aomod@divisor+6)^0,w,c
 23067  004E7A  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
 23068  004E7C  5011               	movf	(___aomod@divisor+7)^0,w,c
 23069  004E7E  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
 23070  004E80                     l13955:
 23071  004E80  90D8               	bcf	status,0,c
 23072  004E82  3211               	rrcf	(___aomod@divisor+7)^0,f,c
 23073  004E84  3210               	rrcf	(___aomod@divisor+6)^0,f,c
 23074  004E86  320F               	rrcf	(___aomod@divisor+5)^0,f,c
 23075  004E88  320E               	rrcf	(___aomod@divisor+4)^0,f,c
 23076  004E8A  320D               	rrcf	(___aomod@divisor+3)^0,f,c
 23077  004E8C  320C               	rrcf	(___aomod@divisor+2)^0,f,c
 23078  004E8E  320B               	rrcf	(___aomod@divisor+1)^0,f,c
 23079  004E90  320A               	rrcf	___aomod@divisor^0,f,c
 23080  004E92  2E12               	decfsz	___aomod@counter^0,f,c
 23081  004E94  EF19  F027         	goto	l13951
 23082  004E98                     l13959:
 23083  004E98  5013               	movf	___aomod@sign^0,w,c
 23084  004E9A  B4D8               	btfsc	status,2,c
 23085  004E9C  EF52  F027         	goto	u12731
 23086  004EA0  EF54  F027         	goto	u12730
 23087  004EA4                     u12731:
 23088  004EA4  EF64  F027         	goto	l13963
 23089  004EA8                     u12730:
 23090  004EA8  1E09               	comf	(___aomod@dividend+7)^0,f,c
 23091  004EAA  1E08               	comf	(___aomod@dividend+6)^0,f,c
 23092  004EAC  1E07               	comf	(___aomod@dividend+5)^0,f,c
 23093  004EAE  1E06               	comf	(___aomod@dividend+4)^0,f,c
 23094  004EB0  1E05               	comf	(___aomod@dividend+3)^0,f,c
 23095  004EB2  1E04               	comf	(___aomod@dividend+2)^0,f,c
 23096  004EB4  1E03               	comf	(___aomod@dividend+1)^0,f,c
 23097  004EB6  6C02               	negf	___aomod@dividend^0,c
 23098  004EB8  0E00               	movlw	0
 23099  004EBA  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 23100  004EBC  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 23101  004EBE  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 23102  004EC0  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 23103  004EC2  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 23104  004EC4  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 23105  004EC6  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 23106  004EC8                     l13963:
 23107  004EC8  0060  F008  F002   	movff	___aomod@dividend,?___aomod
 23108  004ECE  0060  F00C  F003   	movff	___aomod@dividend+1,?___aomod+1
 23109  004ED4  0060  F010  F004   	movff	___aomod@dividend+2,?___aomod+2
 23110  004EDA  0060  F014  F005   	movff	___aomod@dividend+3,?___aomod+3
 23111  004EE0  0060  F018  F006   	movff	___aomod@dividend+4,?___aomod+4
 23112  004EE6  0060  F01C  F007   	movff	___aomod@dividend+5,?___aomod+5
 23113  004EEC  0060  F020  F008   	movff	___aomod@dividend+6,?___aomod+6
 23114  004EF2  0060  F024  F009   	movff	___aomod@dividend+7,?___aomod+7
 23115  004EF8  0012               	return		;funcret
 23116  004EFA                     __end_of___aomod:
 23117                           	opt callstack 0
 23118                           
 23119 ;; *************** function ___aodiv *****************
 23120 ;; Defined at:
 23121 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 23122 ;; Parameters:    Size  Location     Type
 23123 ;;  dividend        8    1[COMRAM] long long 
 23124 ;;  divisor         8    9[COMRAM] long long 
 23125 ;; Auto vars:     Size  Location     Type
 23126 ;;  quotient        8   19[COMRAM] long long 
 23127 ;;  sign            1   18[COMRAM] unsigned char 
 23128 ;;  counter         1   17[COMRAM] unsigned char 
 23129 ;; Return value:  Size  Location     Type
 23130 ;;                  8    1[COMRAM] long long 
 23131 ;; Registers used:
 23132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23133 ;; Tracked objects:
 23134 ;;		On entry : 0/0
 23135 ;;		On exit  : 0/0
 23136 ;;		Unchanged: 0/0
 23137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23138 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23139 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23141 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23142 ;;Total ram usage:       26 bytes
 23143 ;; Hardware stack levels used:    1
 23144 ;; Hardware stack levels required when called:    7
 23145 ;; This function calls:
 23146 ;;		Nothing
 23147 ;; This function is called by:
 23148 ;;		_dtoa
 23149 ;; This function uses a non-reentrant model
 23150 ;;
 23151                           
 23152                           	psect	text138
 23153  0045B2                     __ptext138:
 23154                           	opt callstack 0
 23155  0045B2                     ___aodiv:
 23156                           	opt callstack 16
 23157  0045B2  0E00               	movlw	0
 23158  0045B4  6E13               	movwf	___aodiv@sign^0,c
 23159  0045B6  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
 23160  0045B8  EFE2  F022         	goto	u12610
 23161  0045BC  EFE0  F022         	goto	u12611
 23162  0045C0                     u12611:
 23163  0045C0  EFF4  F022         	goto	l13895
 23164  0045C4                     u12610:
 23165  0045C4  1E11               	comf	(___aodiv@divisor+7)^0,f,c
 23166  0045C6  1E10               	comf	(___aodiv@divisor+6)^0,f,c
 23167  0045C8  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
 23168  0045CA  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
 23169  0045CC  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
 23170  0045CE  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
 23171  0045D0  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
 23172  0045D2  6C0A               	negf	___aodiv@divisor^0,c
 23173  0045D4  0E00               	movlw	0
 23174  0045D6  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
 23175  0045D8  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
 23176  0045DA  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
 23177  0045DC  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
 23178  0045DE  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
 23179  0045E0  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
 23180  0045E2  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
 23181  0045E4  0E01               	movlw	1
 23182  0045E6  6E13               	movwf	___aodiv@sign^0,c
 23183  0045E8                     l13895:
 23184  0045E8  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
 23185  0045EA  EFFB  F022         	goto	u12620
 23186  0045EE  EFF9  F022         	goto	u12621
 23187  0045F2                     u12621:
 23188  0045F2  EF0D  F023         	goto	l13901
 23189  0045F6                     u12620:
 23190  0045F6  1E09               	comf	(___aodiv@dividend+7)^0,f,c
 23191  0045F8  1E08               	comf	(___aodiv@dividend+6)^0,f,c
 23192  0045FA  1E07               	comf	(___aodiv@dividend+5)^0,f,c
 23193  0045FC  1E06               	comf	(___aodiv@dividend+4)^0,f,c
 23194  0045FE  1E05               	comf	(___aodiv@dividend+3)^0,f,c
 23195  004600  1E04               	comf	(___aodiv@dividend+2)^0,f,c
 23196  004602  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 23197  004604  6C02               	negf	___aodiv@dividend^0,c
 23198  004606  0E00               	movlw	0
 23199  004608  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 23200  00460A  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 23201  00460C  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 23202  00460E  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 23203  004610  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 23204  004612  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 23205  004614  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 23206  004616  0E01               	movlw	1
 23207  004618  1A13               	xorwf	___aodiv@sign^0,f,c
 23208  00461A                     l13901:
 23209  00461A  EE20  F014         	lfsr	2,___aodiv@quotient
 23210  00461E  0E07               	movlw	7
 23211  004620                     u12631:
 23212  004620  6ADE               	clrf	postinc2,c
 23213  004622  06E8               	decf	wreg,f,c
 23214  004624  E2FD               	bc	u12631
 23215  004626  500A               	movf	___aodiv@divisor^0,w,c
 23216  004628  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 23217  00462A  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 23218  00462C  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 23219  00462E  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 23220  004630  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 23221  004632  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 23222  004634  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 23223  004636  B4D8               	btfsc	status,2,c
 23224  004638  EF20  F023         	goto	u12641
 23225  00463C  EF22  F023         	goto	u12640
 23226  004640                     u12641:
 23227  004640  EF74  F023         	goto	l13923
 23228  004644                     u12640:
 23229  004644  0E01               	movlw	1
 23230  004646  6E12               	movwf	___aodiv@counter^0,c
 23231  004648  EF30  F023         	goto	l13909
 23232  00464C                     l13907:
 23233  00464C  90D8               	bcf	status,0,c
 23234  00464E  360A               	rlcf	___aodiv@divisor^0,f,c
 23235  004650  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 23236  004652  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 23237  004654  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 23238  004656  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 23239  004658  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 23240  00465A  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 23241  00465C  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 23242  00465E  2A12               	incf	___aodiv@counter^0,f,c
 23243  004660                     l13909:
 23244  004660  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 23245  004662  EF35  F023         	goto	u12651
 23246  004666  EF37  F023         	goto	u12650
 23247  00466A                     u12651:
 23248  00466A  EF26  F023         	goto	l13907
 23249  00466E                     u12650:
 23250  00466E                     l13911:
 23251  00466E  90D8               	bcf	status,0,c
 23252  004670  3614               	rlcf	___aodiv@quotient^0,f,c
 23253  004672  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 23254  004674  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 23255  004676  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 23256  004678  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 23257  00467A  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 23258  00467C  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 23259  00467E  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 23260  004680  500A               	movf	___aodiv@divisor^0,w,c
 23261  004682  5C02               	subwf	___aodiv@dividend^0,w,c
 23262  004684  500B               	movf	(___aodiv@divisor+1)^0,w,c
 23263  004686  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 23264  004688  500C               	movf	(___aodiv@divisor+2)^0,w,c
 23265  00468A  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 23266  00468C  500D               	movf	(___aodiv@divisor+3)^0,w,c
 23267  00468E  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 23268  004690  500E               	movf	(___aodiv@divisor+4)^0,w,c
 23269  004692  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 23270  004694  500F               	movf	(___aodiv@divisor+5)^0,w,c
 23271  004696  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 23272  004698  5010               	movf	(___aodiv@divisor+6)^0,w,c
 23273  00469A  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 23274  00469C  5011               	movf	(___aodiv@divisor+7)^0,w,c
 23275  00469E  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 23276  0046A0  A0D8               	btfss	status,0,c
 23277  0046A2  EF55  F023         	goto	u12661
 23278  0046A6  EF57  F023         	goto	u12660
 23279  0046AA                     u12661:
 23280  0046AA  EF68  F023         	goto	l13919
 23281  0046AE                     u12660:
 23282  0046AE  500A               	movf	___aodiv@divisor^0,w,c
 23283  0046B0  5E02               	subwf	___aodiv@dividend^0,f,c
 23284  0046B2  500B               	movf	(___aodiv@divisor+1)^0,w,c
 23285  0046B4  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 23286  0046B6  500C               	movf	(___aodiv@divisor+2)^0,w,c
 23287  0046B8  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 23288  0046BA  500D               	movf	(___aodiv@divisor+3)^0,w,c
 23289  0046BC  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 23290  0046BE  500E               	movf	(___aodiv@divisor+4)^0,w,c
 23291  0046C0  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 23292  0046C2  500F               	movf	(___aodiv@divisor+5)^0,w,c
 23293  0046C4  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 23294  0046C6  5010               	movf	(___aodiv@divisor+6)^0,w,c
 23295  0046C8  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 23296  0046CA  5011               	movf	(___aodiv@divisor+7)^0,w,c
 23297  0046CC  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 23298  0046CE  8014               	bsf	___aodiv@quotient^0,0,c
 23299  0046D0                     l13919:
 23300  0046D0  90D8               	bcf	status,0,c
 23301  0046D2  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 23302  0046D4  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 23303  0046D6  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 23304  0046D8  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 23305  0046DA  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 23306  0046DC  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 23307  0046DE  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 23308  0046E0  320A               	rrcf	___aodiv@divisor^0,f,c
 23309  0046E2  2E12               	decfsz	___aodiv@counter^0,f,c
 23310  0046E4  EF37  F023         	goto	l13911
 23311  0046E8                     l13923:
 23312  0046E8  5013               	movf	___aodiv@sign^0,w,c
 23313  0046EA  B4D8               	btfsc	status,2,c
 23314  0046EC  EF7A  F023         	goto	u12671
 23315  0046F0  EF7C  F023         	goto	u12670
 23316  0046F4                     u12671:
 23317  0046F4  EF8C  F023         	goto	l13927
 23318  0046F8                     u12670:
 23319  0046F8  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 23320  0046FA  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 23321  0046FC  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 23322  0046FE  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 23323  004700  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 23324  004702  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 23325  004704  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 23326  004706  6C14               	negf	___aodiv@quotient^0,c
 23327  004708  0E00               	movlw	0
 23328  00470A  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 23329  00470C  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 23330  00470E  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 23331  004710  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 23332  004712  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 23333  004714  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 23334  004716  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 23335  004718                     l13927:
 23336  004718  0060  F050  F002   	movff	___aodiv@quotient,?___aodiv
 23337  00471E  0060  F054  F003   	movff	___aodiv@quotient+1,?___aodiv+1
 23338  004724  0060  F058  F004   	movff	___aodiv@quotient+2,?___aodiv+2
 23339  00472A  0060  F05C  F005   	movff	___aodiv@quotient+3,?___aodiv+3
 23340  004730  0060  F060  F006   	movff	___aodiv@quotient+4,?___aodiv+4
 23341  004736  0060  F064  F007   	movff	___aodiv@quotient+5,?___aodiv+5
 23342  00473C  0060  F068  F008   	movff	___aodiv@quotient+6,?___aodiv+6
 23343  004742  0060  F06C  F009   	movff	___aodiv@quotient+7,?___aodiv+7
 23344  004748  0012               	return		;funcret
 23345  00474A                     __end_of___aodiv:
 23346                           	opt callstack 0
 23347                           
 23348 ;; *************** function _atoi *****************
 23349 ;; Defined at:
 23350 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 23351 ;; Parameters:    Size  Location     Type
 23352 ;;  s               2    8[COMRAM] PTR const unsigned char 
 23353 ;;		 -> STR_133(5), STR_132(8), STR_131(28), STR_130(26), 
 23354 ;;		 -> STR_129(12), STR_128(12), STR_59(5), STR_58(12), 
 23355 ;;		 -> STR_57(5), STR_56(12), STR_54(8), STR_51(5), 
 23356 ;;		 -> STR_50(12), STR_43(5), STR_42(12), STR_40(13), 
 23357 ;;		 -> STR_39(5), STR_38(12), STR_37(12), STR_35(14), 
 23358 ;;		 -> STR_34(5), STR_33(12), STR_31(13), STR_30(18), 
 23359 ;;		 -> STR_29(18), STR_28(5), STR_27(21), STR_26(5), 
 23360 ;;		 -> STR_25(12), STR_24(12), STR_22(12), STR_21(12), 
 23361 ;;		 -> STR_19(5), STR_18(3), STR_17(5), STR_16(5), 
 23362 ;;		 -> STR_15(5), STR_13(13), STR_12(12), STR_11(5), 
 23363 ;;		 -> STR_9(16), STR_8(8), STR_7(12), STR_5(8), 
 23364 ;;		 -> STR_4(12), STR_1(13), 
 23365 ;; Auto vars:     Size  Location     Type
 23366 ;;  n               2   21[COMRAM] int 
 23367 ;;  neg             2   14[COMRAM] int 
 23368 ;; Return value:  Size  Location     Type
 23369 ;;                  2    8[COMRAM] int 
 23370 ;; Registers used:
 23371 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23372 ;; Tracked objects:
 23373 ;;		On entry : 0/0
 23374 ;;		On exit  : 0/0
 23375 ;;		Unchanged: 0/0
 23376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23378 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23379 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23380 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23381 ;;Total ram usage:       15 bytes
 23382 ;; Hardware stack levels used:    1
 23383 ;; Hardware stack levels required when called:    8
 23384 ;; This function calls:
 23385 ;;		___wmul
 23386 ;;		_isdigit
 23387 ;;		_isspace
 23388 ;; This function is called by:
 23389 ;;		_vfpfcnvrt
 23390 ;; This function uses a non-reentrant model
 23391 ;;
 23392                           
 23393                           	psect	text139
 23394  00408C                     __ptext139:
 23395                           	opt callstack 0
 23396  00408C                     _atoi:
 23397                           	opt callstack 16
 23398  00408C  0E00               	movlw	0
 23399  00408E  6E17               	movwf	(atoi@n+1)^0,c
 23400  004090  0E00               	movlw	0
 23401  004092  6E16               	movwf	atoi@n^0,c
 23402  004094  0E00               	movlw	0
 23403  004096  6E10               	movwf	(atoi@neg+1)^0,c
 23404  004098  0E00               	movlw	0
 23405  00409A  6E0F               	movwf	atoi@neg^0,c
 23406  00409C  EF52  F020         	goto	l14231
 23407  0040A0                     l14229:
 23408  0040A0  4A09               	infsnz	atoi@s^0,f,c
 23409  0040A2  2A0A               	incf	(atoi@s+1)^0,f,c
 23410  0040A4                     l14231:
 23411  0040A4  0E01               	movlw	1
 23412  0040A6  6E15               	movwf	_atoi$7413^0,c
 23413  0040A8  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23414  0040AE  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23415  0040B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23416  0040B4  6AF8               	clrf	tblptru,c
 23417  0040B6                     	endif
 23418  0040B6                     	if	0	;tblptru may be non-zero
 23419  0040B6                     	endif
 23420  0040B6  0008               	tblrd		*
 23421  0040B8  50F5               	movf	tablat,w,c
 23422  0040BA  0A20               	xorlw	32
 23423  0040BC  B4D8               	btfsc	status,2,c
 23424  0040BE  EF63  F020         	goto	u13321
 23425  0040C2  EF65  F020         	goto	u13320
 23426  0040C6                     u13321:
 23427  0040C6  EF85  F020         	goto	l14239
 23428  0040CA                     u13320:
 23429  0040CA  0EF7               	movlw	247
 23430  0040CC  6E0B               	movwf	??_atoi^0,c
 23431  0040CE  0EFF               	movlw	255
 23432  0040D0  6E0C               	movwf	(??_atoi+1)^0,c
 23433  0040D2  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23434  0040D8  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23435  0040DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23436  0040DE  6AF8               	clrf	tblptru,c
 23437  0040E0                     	endif
 23438  0040E0                     	if	0	;tblptru may be non-zero
 23439  0040E0                     	endif
 23440  0040E0  0008               	tblrd		*
 23441  0040E2  50F5               	movf	tablat,w,c
 23442  0040E4  6E0D               	movwf	(??_atoi+2)^0,c
 23443  0040E6  6A0E               	clrf	(??_atoi+3)^0,c
 23444  0040E8  500B               	movf	??_atoi^0,w,c
 23445  0040EA  260D               	addwf	(??_atoi+2)^0,f,c
 23446  0040EC  500C               	movf	(??_atoi+1)^0,w,c
 23447  0040EE  220E               	addwfc	(??_atoi+3)^0,f,c
 23448  0040F0  500E               	movf	(??_atoi+3)^0,w,c
 23449  0040F2  E109               	bnz	u13330
 23450  0040F4  0E05               	movlw	5
 23451  0040F6  5C0D               	subwf	(??_atoi+2)^0,w,c
 23452  0040F8  A0D8               	btfss	status,0,c
 23453  0040FA  EF81  F020         	goto	u13331
 23454  0040FE  EF83  F020         	goto	u13330
 23455  004102                     u13331:
 23456  004102  EF85  F020         	goto	l14239
 23457  004106                     u13330:
 23458  004106  0E00               	movlw	0
 23459  004108  6E15               	movwf	_atoi$7413^0,c
 23460  00410A                     l14239:
 23461  00410A  0060  F054  F011   	movff	_atoi$7413,_atoi$7412
 23462  004110  6A12               	clrf	(_atoi$7412+1)^0,c
 23463  004112  5011               	movf	_atoi$7412^0,w,c
 23464  004114  1012               	iorwf	(_atoi$7412+1)^0,w,c
 23465  004116  A4D8               	btfss	status,2,c
 23466  004118  EF90  F020         	goto	u13341
 23467  00411C  EF92  F020         	goto	u13340
 23468  004120                     u13341:
 23469  004120  EF50  F020         	goto	l14229
 23470  004124                     u13340:
 23471  004124  EF9C  F020         	goto	l14249
 23472  004128                     l14245:
 23473  004128  0E00               	movlw	0
 23474  00412A  6E10               	movwf	(atoi@neg+1)^0,c
 23475  00412C  0E01               	movlw	1
 23476  00412E  6E0F               	movwf	atoi@neg^0,c
 23477  004130                     l14247:
 23478  004130  4A09               	infsnz	atoi@s^0,f,c
 23479  004132  2A0A               	incf	(atoi@s+1)^0,f,c
 23480  004134  EFD9  F020         	goto	l14255
 23481  004138                     l14249:
 23482  004138  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23483  00413E  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23484  004144                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23485  004144  6AF8               	clrf	tblptru,c
 23486  004146                     	endif
 23487  004146                     	if	0	;tblptru may be non-zero
 23488  004146                     	endif
 23489  004146  0008               	tblrd		*
 23490  004148  50F5               	movf	tablat,w,c
 23491  00414A  6E0B               	movwf	??_atoi^0,c
 23492  00414C  6A0C               	clrf	(??_atoi+1)^0,c
 23493                           
 23494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23495                           ; Switch size 1, requested type "simple"
 23496                           ; Number of cases is 1, Range of values is 0 to 0
 23497                           ; switch strategies available:
 23498                           ; Name         Instructions Cycles
 23499                           ; simple_byte            4     3 (average)
 23500                           ;	Chosen strategy is simple_byte
 23501  00414E  500C               	movf	(??_atoi+1)^0,w,c
 23502  004150  0A00               	xorlw	0	; case 0
 23503  004152  B4D8               	btfsc	status,2,c
 23504  004154  EFAE  F020         	goto	l17847
 23505  004158  EFD9  F020         	goto	l14255
 23506  00415C                     l17847:
 23507                           
 23508                           ; Switch size 1, requested type "simple"
 23509                           ; Number of cases is 2, Range of values is 43 to 45
 23510                           ; switch strategies available:
 23511                           ; Name         Instructions Cycles
 23512                           ; simple_byte            7     4 (average)
 23513                           ;	Chosen strategy is simple_byte
 23514  00415C  500B               	movf	??_atoi^0,w,c
 23515  00415E  0A2B               	xorlw	43	; case 43
 23516  004160  B4D8               	btfsc	status,2,c
 23517  004162  EF98  F020         	goto	l14247
 23518  004166  0A06               	xorlw	6	; case 45
 23519  004168  B4D8               	btfsc	status,2,c
 23520  00416A  EF94  F020         	goto	l14245
 23521  00416E  EFD9  F020         	goto	l14255
 23522  004172                     l14251:
 23523  004172  0060  F058  F002   	movff	atoi@n,___wmul@multiplier
 23524  004178  0060  F05C  F003   	movff	atoi@n+1,___wmul@multiplier+1
 23525  00417E  0E00               	movlw	0
 23526  004180  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 23527  004182  0E0A               	movlw	10
 23528  004184  6E04               	movwf	___wmul@multiplicand^0,c
 23529  004186  EC42  F04B         	call	___wmul	;wreg free
 23530  00418A  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23531  004190  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23532  004196                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23533  004196  6AF8               	clrf	tblptru,c
 23534  004198                     	endif
 23535  004198                     	if	0	;tblptru may be non-zero
 23536  004198                     	endif
 23537  004198  0008               	tblrd		*
 23538  00419A  50F5               	movf	tablat,w,c
 23539  00419C  5E02               	subwf	?___wmul^0,f,c
 23540  00419E  0E00               	movlw	0
 23541  0041A0  5A03               	subwfb	(?___wmul+1)^0,f,c
 23542  0041A2  0E30               	movlw	48
 23543  0041A4  2402               	addwf	?___wmul^0,w,c
 23544  0041A6  6E16               	movwf	atoi@n^0,c
 23545  0041A8  0E00               	movlw	0
 23546  0041AA  2003               	addwfc	(?___wmul+1)^0,w,c
 23547  0041AC  6E17               	movwf	(atoi@n+1)^0,c
 23548  0041AE  EF98  F020         	goto	l14247
 23549  0041B2                     l14255:
 23550  0041B2  0ED0               	movlw	208
 23551  0041B4  6E0B               	movwf	??_atoi^0,c
 23552  0041B6  0EFF               	movlw	255
 23553  0041B8  6E0C               	movwf	(??_atoi+1)^0,c
 23554  0041BA  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23555  0041C0  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23556  0041C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23557  0041C6  6AF8               	clrf	tblptru,c
 23558  0041C8                     	endif
 23559  0041C8                     	if	0	;tblptru may be non-zero
 23560  0041C8                     	endif
 23561  0041C8  0008               	tblrd		*
 23562  0041CA  50F5               	movf	tablat,w,c
 23563  0041CC  6E0D               	movwf	(??_atoi+2)^0,c
 23564  0041CE  6A0E               	clrf	(??_atoi+3)^0,c
 23565  0041D0  500B               	movf	??_atoi^0,w,c
 23566  0041D2  260D               	addwf	(??_atoi+2)^0,f,c
 23567  0041D4  500C               	movf	(??_atoi+1)^0,w,c
 23568  0041D6  220E               	addwfc	(??_atoi+3)^0,f,c
 23569  0041D8  500E               	movf	(??_atoi+3)^0,w,c
 23570  0041DA  E10A               	bnz	u13350
 23571  0041DC  0E0A               	movlw	10
 23572  0041DE  5C0D               	subwf	(??_atoi+2)^0,w,c
 23573  0041E0  A0D8               	btfss	status,0,c
 23574  0041E2  EFF5  F020         	goto	u13351
 23575  0041E6  EFF8  F020         	goto	u13350
 23576  0041EA                     u13351:
 23577  0041EA  0E01               	movlw	1
 23578  0041EC  EFF9  F020         	goto	u13360
 23579  0041F0                     u13350:
 23580  0041F0  0E00               	movlw	0
 23581  0041F2                     u13360:
 23582  0041F2  6E13               	movwf	_atoi$7414^0,c
 23583  0041F4  6A14               	clrf	(_atoi$7414+1)^0,c
 23584  0041F6  5013               	movf	_atoi$7414^0,w,c
 23585  0041F8  1014               	iorwf	(_atoi$7414+1)^0,w,c
 23586  0041FA  A4D8               	btfss	status,2,c
 23587  0041FC  EF02  F021         	goto	u13371
 23588  004200  EF04  F021         	goto	u13370
 23589  004204                     u13371:
 23590  004204  EFB9  F020         	goto	l14251
 23591  004208                     u13370:
 23592  004208  500F               	movf	atoi@neg^0,w,c
 23593  00420A  1010               	iorwf	(atoi@neg+1)^0,w,c
 23594  00420C  A4D8               	btfss	status,2,c
 23595  00420E  EF0B  F021         	goto	u13381
 23596  004212  EF0D  F021         	goto	u13380
 23597  004216                     u13381:
 23598  004216  EF1F  F021         	goto	l3878
 23599  00421A                     u13380:
 23600  00421A  0060  F058  F00B   	movff	atoi@n,??_atoi
 23601  004220  0060  F05C  F00C   	movff	atoi@n+1,??_atoi+1
 23602  004226  1E0B               	comf	??_atoi^0,f,c
 23603  004228  1E0C               	comf	(??_atoi+1)^0,f,c
 23604  00422A  4A0B               	infsnz	??_atoi^0,f,c
 23605  00422C  2A0C               	incf	(??_atoi+1)^0,f,c
 23606  00422E  0060  F02C  F009   	movff	??_atoi,?_atoi
 23607  004234  0060  F030  F00A   	movff	??_atoi+1,?_atoi+1
 23608  00423A  EF25  F021         	goto	l3881
 23609  00423E                     l3878:
 23610  00423E  0060  F058  F009   	movff	atoi@n,?_atoi
 23611  004244  0060  F05C  F00A   	movff	atoi@n+1,?_atoi+1
 23612  00424A                     l3881:
 23613  00424A  0012               	return		;funcret
 23614  00424C                     __end_of_atoi:
 23615                           	opt callstack 0
 23616                           
 23617 ;; *************** function _isspace *****************
 23618 ;; Defined at:
 23619 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 23620 ;; Parameters:    Size  Location     Type
 23621 ;;  c               2    1[COMRAM] int 
 23622 ;; Auto vars:     Size  Location     Type
 23623 ;;		None
 23624 ;; Return value:  Size  Location     Type
 23625 ;;                  2    1[COMRAM] int 
 23626 ;; Registers used:
 23627 ;;		wreg, status,2, status,0
 23628 ;; Tracked objects:
 23629 ;;		On entry : 0/0
 23630 ;;		On exit  : 0/0
 23631 ;;		Unchanged: 0/0
 23632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23636 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23637 ;;Total ram usage:        7 bytes
 23638 ;; Hardware stack levels used:    1
 23639 ;; Hardware stack levels required when called:    7
 23640 ;; This function calls:
 23641 ;;		Nothing
 23642 ;; This function is called by:
 23643 ;;		_atoi
 23644 ;;		___strtoxl
 23645 ;; This function uses a non-reentrant model
 23646 ;;
 23647                           
 23648                           	psect	text140
 23649  008C30                     __ptext140:
 23650                           	opt callstack 0
 23651  008C30                     _isspace:
 23652                           	opt callstack 16
 23653  008C30  0E01               	movlw	1
 23654  008C32  6E08               	movwf	_isspace$7439^0,c
 23655  008C34  0E20               	movlw	32
 23656  008C36  1802               	xorwf	isspace@c^0,w,c
 23657  008C38  1003               	iorwf	(isspace@c+1)^0,w,c
 23658  008C3A  B4D8               	btfsc	status,2,c
 23659  008C3C  EF22  F046         	goto	u12811
 23660  008C40  EF24  F046         	goto	u12810
 23661  008C44                     u12811:
 23662  008C44  EF3F  F046         	goto	l14013
 23663  008C48                     u12810:
 23664  008C48  0EF7               	movlw	247
 23665  008C4A  6E04               	movwf	??_isspace^0,c
 23666  008C4C  0EFF               	movlw	255
 23667  008C4E  6E05               	movwf	(??_isspace+1)^0,c
 23668  008C50  0060  F008  F006   	movff	isspace@c,??_isspace+2
 23669  008C56  0060  F00C  F007   	movff	isspace@c+1,??_isspace+3
 23670  008C5C  5004               	movf	??_isspace^0,w,c
 23671  008C5E  2606               	addwf	(??_isspace+2)^0,f,c
 23672  008C60  5005               	movf	(??_isspace+1)^0,w,c
 23673  008C62  2207               	addwfc	(??_isspace+3)^0,f,c
 23674  008C64  5007               	movf	(??_isspace+3)^0,w,c
 23675  008C66  E109               	bnz	u12820
 23676  008C68  0E05               	movlw	5
 23677  008C6A  5C06               	subwf	(??_isspace+2)^0,w,c
 23678  008C6C  A0D8               	btfss	status,0,c
 23679  008C6E  EF3B  F046         	goto	u12821
 23680  008C72  EF3D  F046         	goto	u12820
 23681  008C76                     u12821:
 23682  008C76  EF3F  F046         	goto	l14013
 23683  008C7A                     u12820:
 23684  008C7A  0E00               	movlw	0
 23685  008C7C  6E08               	movwf	_isspace$7439^0,c
 23686  008C7E                     l14013:
 23687  008C7E  0060  F020  F002   	movff	_isspace$7439,?_isspace
 23688  008C84  6A03               	clrf	(?_isspace+1)^0,c
 23689  008C86  0012               	return		;funcret
 23690  008C88                     __end_of_isspace:
 23691                           	opt callstack 0
 23692                           
 23693 ;; *************** function _isdigit *****************
 23694 ;; Defined at:
 23695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 23696 ;; Parameters:    Size  Location     Type
 23697 ;;  c               2    1[COMRAM] int 
 23698 ;; Auto vars:     Size  Location     Type
 23699 ;;		None
 23700 ;; Return value:  Size  Location     Type
 23701 ;;                  2    1[COMRAM] int 
 23702 ;; Registers used:
 23703 ;;		wreg, status,2, status,0
 23704 ;; Tracked objects:
 23705 ;;		On entry : 0/0
 23706 ;;		On exit  : 0/0
 23707 ;;		Unchanged: 0/0
 23708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23711 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23713 ;;Total ram usage:        6 bytes
 23714 ;; Hardware stack levels used:    1
 23715 ;; Hardware stack levels required when called:    7
 23716 ;; This function calls:
 23717 ;;		Nothing
 23718 ;; This function is called by:
 23719 ;;		_vfpfcnvrt
 23720 ;;		_atoi
 23721 ;;		___strtoxl
 23722 ;; This function uses a non-reentrant model
 23723 ;;
 23724                           
 23725                           	psect	text141
 23726  0094D6                     __ptext141:
 23727                           	opt callstack 0
 23728  0094D6                     _isdigit:
 23729                           	opt callstack 17
 23730  0094D6  0ED0               	movlw	208
 23731  0094D8  6E04               	movwf	??_isdigit^0,c
 23732  0094DA  0EFF               	movlw	255
 23733  0094DC  6E05               	movwf	(??_isdigit+1)^0,c
 23734  0094DE  0060  F008  F006   	movff	isdigit@c,??_isdigit+2
 23735  0094E4  0060  F00C  F007   	movff	isdigit@c+1,??_isdigit+3
 23736  0094EA  5004               	movf	??_isdigit^0,w,c
 23737  0094EC  2606               	addwf	(??_isdigit+2)^0,f,c
 23738  0094EE  5005               	movf	(??_isdigit+1)^0,w,c
 23739  0094F0  2207               	addwfc	(??_isdigit+3)^0,f,c
 23740  0094F2  5007               	movf	(??_isdigit+3)^0,w,c
 23741  0094F4  E10A               	bnz	u12590
 23742  0094F6  0E0A               	movlw	10
 23743  0094F8  5C06               	subwf	(??_isdigit+2)^0,w,c
 23744  0094FA  A0D8               	btfss	status,0,c
 23745  0094FC  EF82  F04A         	goto	u12591
 23746  009500  EF85  F04A         	goto	u12590
 23747  009504                     u12591:
 23748  009504  0E01               	movlw	1
 23749  009506  EF86  F04A         	goto	u12600
 23750  00950A                     u12590:
 23751  00950A  0E00               	movlw	0
 23752  00950C                     u12600:
 23753  00950C  6E02               	movwf	?_isdigit^0,c
 23754  00950E  6A03               	clrf	(?_isdigit+1)^0,c
 23755  009510  0012               	return		;funcret
 23756  009512                     __end_of_isdigit:
 23757                           	opt callstack 0
 23758                           
 23759 ;; *************** function ___wmul *****************
 23760 ;; Defined at:
 23761 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 23762 ;; Parameters:    Size  Location     Type
 23763 ;;  multiplier      2    1[COMRAM] unsigned int 
 23764 ;;  multiplicand    2    3[COMRAM] unsigned int 
 23765 ;; Auto vars:     Size  Location     Type
 23766 ;;  product         2    5[COMRAM] unsigned int 
 23767 ;; Return value:  Size  Location     Type
 23768 ;;                  2    1[COMRAM] unsigned int 
 23769 ;; Registers used:
 23770 ;;		wreg, status,2, status,0, prodl, prodh
 23771 ;; Tracked objects:
 23772 ;;		On entry : 0/0
 23773 ;;		On exit  : 0/0
 23774 ;;		Unchanged: 0/0
 23775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23779 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23780 ;;Total ram usage:        6 bytes
 23781 ;; Hardware stack levels used:    1
 23782 ;; Hardware stack levels required when called:    7
 23783 ;; This function calls:
 23784 ;;		Nothing
 23785 ;; This function is called by:
 23786 ;;		_CircularBufferPushBack
 23787 ;;		_atoi
 23788 ;;		_CircularBufferPopFront
 23789 ;;		_CircularBufferPeek
 23790 ;; This function uses a non-reentrant model
 23791 ;;
 23792                           
 23793                           	psect	text142
 23794  009684                     __ptext142:
 23795                           	opt callstack 0
 23796  009684                     ___wmul:
 23797                           	opt callstack 19
 23798  009684  5002               	movf	___wmul@multiplier^0,w,c
 23799  009686  0204               	mulwf	___wmul@multiplicand^0,c
 23800  009688  006F FFCC  F006    	movff	prodl,___wmul@product
 23801  00968E  006F FFD0  F007    	movff	prodh,___wmul@product+1
 23802  009694  5002               	movf	___wmul@multiplier^0,w,c
 23803  009696  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 23804  009698  50F3               	movf	243,w,c
 23805  00969A  2607               	addwf	(___wmul@product+1)^0,f,c
 23806  00969C  5003               	movf	(___wmul@multiplier+1)^0,w,c
 23807  00969E  0204               	mulwf	___wmul@multiplicand^0,c
 23808  0096A0  50F3               	movf	243,w,c
 23809  0096A2  2607               	addwf	(___wmul@product+1)^0,f,c
 23810  0096A4  0060  F018  F002   	movff	___wmul@product,?___wmul
 23811  0096AA  0060  F01C  F003   	movff	___wmul@product+1,?___wmul+1
 23812  0096B0  0012               	return		;funcret
 23813  0096B2                     __end_of___wmul:
 23814                           	opt callstack 0
 23815                           
 23816 ;; *************** function _nwkRouteFrame *****************
 23817 ;; Defined at:
 23818 ;;		line 299 in file "nwk/nwk_src/nwkRoute.c"
 23819 ;; Parameters:    Size  Location     Type
 23820 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
 23821 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23822 ;; Auto vars:     Size  Location     Type
 23823 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
 23824 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23825 ;; Return value:  Size  Location     Type
 23826 ;;                  1    wreg      void 
 23827 ;; Registers used:
 23828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23829 ;; Tracked objects:
 23830 ;;		On entry : 0/0
 23831 ;;		On exit  : 0/0
 23832 ;;		Unchanged: 0/0
 23833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23838 ;;Total ram usage:        4 bytes
 23839 ;; Hardware stack levels used:    1
 23840 ;; Hardware stack levels required when called:   12
 23841 ;; This function calls:
 23842 ;;		_NWK_RouteNextHop
 23843 ;;		_nwkFrameFree
 23844 ;;		_nwkRouteSendRouteError
 23845 ;;		_nwkTxFrame
 23846 ;; This function is called by:
 23847 ;;		_nwkRxTaskHandler
 23848 ;; This function uses a non-reentrant model
 23849 ;;
 23850                           
 23851                           	psect	text143
 23852  006CEC                     __ptext143:
 23853                           	opt callstack 0
 23854  006CEC                     _nwkRouteFrame:
 23855                           	opt callstack 15
 23856  006CEC                     
 23857                           ;nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);nwk/nwk_src/nwkRoute
      +                          .c: 300: {;nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->header;
 23858  006CEC  0E02               	movlw	2
 23859  006CEE  2433               	addwf	nwkRouteFrame@frame^0,w,c
 23860  006CF0  6E35               	movwf	nwkRouteFrame@header^0,c
 23861  006CF2  0E00               	movlw	0
 23862  006CF4  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
 23863  006CF6  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
 23864  006CF8                     
 23865                           ;nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, heade
      +                          r->nwkFcf.multicast))
 23866  006CF8  EE20 F00D          	lfsr	2,13
 23867  006CFC  5035               	movf	nwkRouteFrame@header^0,w,c
 23868  006CFE  26D9               	addwf	fsr2l,f,c
 23869  006D00  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23870  006D02  22DA               	addwfc	fsr2h,f,c
 23871  006D04  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 23872  006D0A  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 23873  006D10  EE20 F009          	lfsr	2,9
 23874  006D14  5035               	movf	nwkRouteFrame@header^0,w,c
 23875  006D16  26D9               	addwf	fsr2l,f,c
 23876  006D18  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23877  006D1A  22DA               	addwfc	fsr2h,f,c
 23878  006D1C  0E00               	movlw	0
 23879  006D1E  B6DF               	btfsc	indf2,3,c
 23880  006D20  0E01               	movlw	1
 23881  006D22  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 23882  006D24  EC9C  F046         	call	_NWK_RouteNextHop	;wreg free
 23883  006D28  2808               	incf	?_NWK_RouteNextHop^0,w,c
 23884  006D2A  E108               	bnz	u15780
 23885  006D2C  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
 23886  006D2E  B4D8               	btfsc	status,2,c
 23887  006D30  EF9C  F036         	goto	u15781
 23888  006D34  EF9E  F036         	goto	u15780
 23889  006D38                     u15781:
 23890  006D38  EFBA  F036         	goto	l15917
 23891  006D3C                     u15780:
 23892  006D3C                     
 23893                           ;nwk/nwk_src/nwkRoute.c: 304:   {;nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confirm = (
      +                          (void*)0);
 23894  006D3C  EE20 F087          	lfsr	2,135
 23895  006D40  5033               	movf	nwkRouteFrame@frame^0,w,c
 23896  006D42  26D9               	addwf	fsr2l,f,c
 23897  006D44  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 23898  006D46  22DA               	addwfc	fsr2h,f,c
 23899  006D48  0E00               	movlw	0
 23900  006D4A  6EDE               	movwf	postinc2,c
 23901  006D4C  0E00               	movlw	0
 23902  006D4E  6EDD               	movwf	postdec2,c
 23903                           
 23904                           ;nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 23905  006D50  EE20 F086          	lfsr	2,134
 23906  006D54  5033               	movf	nwkRouteFrame@frame^0,w,c
 23907  006D56  26D9               	addwf	fsr2l,f,c
 23908  006D58  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 23909  006D5A  22DA               	addwfc	fsr2h,f,c
 23910  006D5C  0E02               	movlw	2
 23911  006D5E  6EDF               	movwf	indf2,c
 23912  006D60                     
 23913                           ;nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
 23914  006D60  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 23915  006D66  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 23916  006D6C  EC60  F01F         	call	_nwkTxFrame	;wreg free
 23917                           
 23918                           ;nwk/nwk_src/nwkRoute.c: 308:   }
 23919  006D70  EFE6  F036         	goto	l1935
 23920  006D74                     l15917:
 23921                           
 23922                           ;nwk/nwk_src/nwkRoute.c: 310:   {;nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRouteErro
      +                          r(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 23923  006D74  EE20 F00B          	lfsr	2,11
 23924  006D78  5035               	movf	nwkRouteFrame@header^0,w,c
 23925  006D7A  26D9               	addwf	fsr2l,f,c
 23926  006D7C  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23927  006D7E  22DA               	addwfc	fsr2h,f,c
 23928  006D80  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
 23929  006D86  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
 23930  006D8C  EE20 F00D          	lfsr	2,13
 23931  006D90  5035               	movf	nwkRouteFrame@header^0,w,c
 23932  006D92  26D9               	addwf	fsr2l,f,c
 23933  006D94  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23934  006D96  22DA               	addwfc	fsr2h,f,c
 23935  006D98  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
 23936  006D9E  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
 23937  006DA4  EE20 F009          	lfsr	2,9
 23938  006DA8  5035               	movf	nwkRouteFrame@header^0,w,c
 23939  006DAA  26D9               	addwf	fsr2l,f,c
 23940  006DAC  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 23941  006DAE  22DA               	addwfc	fsr2h,f,c
 23942  006DB0  0E00               	movlw	0
 23943  006DB2  B6DF               	btfsc	indf2,3,c
 23944  006DB4  0E01               	movlw	1
 23945  006DB6  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
 23946  006DB8  EC8E  F035         	call	_nwkRouteSendRouteError	;wreg free
 23947  006DBC                     
 23948                           ;nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
 23949  006DBC  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 23950  006DC2  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 23951  006DC8  EC22  F04D         	call	_nwkFrameFree	;wreg free
 23952  006DCC                     l1935:
 23953  006DCC  0012               	return		;funcret
 23954  006DCE                     __end_of_nwkRouteFrame:
 23955                           	opt callstack 0
 23956                           
 23957 ;; *************** function _nwkRouteSendRouteError *****************
 23958 ;; Defined at:
 23959 ;;		line 318 in file "nwk/nwk_src/nwkRoute.c"
 23960 ;; Parameters:    Size  Location     Type
 23961 ;;  src             2   41[COMRAM] unsigned short 
 23962 ;;  dst             2   43[COMRAM] unsigned short 
 23963 ;;  multicast       1   45[COMRAM] unsigned char 
 23964 ;; Auto vars:     Size  Location     Type
 23965 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
 23966 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23967 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
 23968 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  1    wreg      void 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/0
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23978 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23979 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23981 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23982 ;;Total ram usage:        9 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:   11
 23985 ;; This function calls:
 23986 ;;		_nwkFrameAlloc
 23987 ;;		_nwkFrameCommandInit
 23988 ;;		_nwkTxFrame
 23989 ;; This function is called by:
 23990 ;;		_nwkRouteFrame
 23991 ;; This function uses a non-reentrant model
 23992 ;;
 23993                           
 23994                           	psect	text144
 23995  006B1C                     __ptext144:
 23996                           	opt callstack 0
 23997  006B1C                     _nwkRouteSendRouteError:
 23998                           	opt callstack 15
 23999  006B1C                     
 24000                           ;nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16_t 
      +                          dst, uint8_t multicast);nwk/nwk_src/nwkRoute.c: 319: {;nwk/nwk_src/nwkRoute.c: 320:   Nw
      +                          kFrame_t *frame;;nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *command;;nwk/nwk
      +                          _src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24001  006B1C  ECFE  F038         	call	_nwkFrameAlloc	;wreg free
 24002  006B20  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 24003  006B26  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 24004  006B2C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24005  006B2E  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24006  006B30  A4D8               	btfss	status,2,c
 24007  006B32  EF9D  F035         	goto	u14511
 24008  006B36  EF9F  F035         	goto	u14510
 24009  006B3A                     u14511:
 24010  006B3A  EFA1  F035         	goto	l15131
 24011  006B3E                     u14510:
 24012  006B3E  EF04  F036         	goto	l1939
 24013  006B42                     l15131:
 24014                           
 24015                           ;nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
 24016  006B42  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 24017  006B48  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 24018  006B4E  EC73  F049         	call	_nwkFrameCommandInit	;wreg free
 24019  006B52                     
 24020                           ;nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
 24021  006B52  EE20 F001          	lfsr	2,1
 24022  006B56  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24023  006B58  26D9               	addwf	fsr2l,f,c
 24024  006B5A  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24025  006B5C  22DA               	addwfc	fsr2h,f,c
 24026  006B5E  0E06               	movlw	6
 24027  006B60  26DF               	addwf	indf2,f,c
 24028  006B62                     
 24029                           ;nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
 24030  006B62  EE20 F087          	lfsr	2,135
 24031  006B66  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24032  006B68  26D9               	addwf	fsr2l,f,c
 24033  006B6A  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24034  006B6C  22DA               	addwfc	fsr2h,f,c
 24035  006B6E  0E00               	movlw	0
 24036  006B70  6EDE               	movwf	postinc2,c
 24037  006B72  0E00               	movlw	0
 24038  006B74  6EDD               	movwf	postdec2,c
 24039  006B76                     
 24040                           ;nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
 24041  006B76  EE20 F00F          	lfsr	2,15
 24042  006B7A  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24043  006B7C  26D9               	addwf	fsr2l,f,c
 24044  006B7E  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24045  006B80  22DA               	addwfc	fsr2h,f,c
 24046  006B82  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24047  006B88  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24048  006B8E                     
 24049                           ;nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
 24050  006B8E  EE20 F081          	lfsr	2,129
 24051  006B92  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24052  006B94  26D9               	addwf	fsr2l,f,c
 24053  006B96  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24054  006B98  22DA               	addwfc	fsr2h,f,c
 24055  006B9A  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
 24056  006BA0  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
 24057  006BA6                     
 24058                           ;nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
 24059  006BA6  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 24060  006BAC  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 24061  006BB2  0E01               	movlw	1
 24062  006BB4  6EDF               	movwf	indf2,c
 24063  006BB6                     
 24064                           ;nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
 24065  006BB6  EE20 F001          	lfsr	2,1
 24066  006BBA  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24067  006BBC  26D9               	addwf	fsr2l,f,c
 24068  006BBE  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24069  006BC0  22DA               	addwfc	fsr2h,f,c
 24070  006BC2  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24071  006BC8  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24072  006BCE                     
 24073                           ;nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
 24074  006BCE  EE20 F003          	lfsr	2,3
 24075  006BD2  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24076  006BD4  26D9               	addwf	fsr2l,f,c
 24077  006BD6  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24078  006BD8  22DA               	addwfc	fsr2h,f,c
 24079  006BDA  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 24080  006BE0  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 24081  006BE6                     
 24082                           ;nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
 24083  006BE6  EE20 F005          	lfsr	2,5
 24084  006BEA  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24085  006BEC  26D9               	addwf	fsr2l,f,c
 24086  006BEE  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24087  006BF0  22DA               	addwfc	fsr2h,f,c
 24088  006BF2  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 24089  006BF8                     
 24090                           ;nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
 24091  006BF8  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 24092  006BFE  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 24093  006C04  EC60  F01F         	call	_nwkTxFrame	;wreg free
 24094  006C08                     l1939:
 24095  006C08  0012               	return		;funcret
 24096  006C0A                     __end_of_nwkRouteSendRouteError:
 24097                           	opt callstack 0
 24098                           
 24099 ;; *************** function _nwkFrameCommandInit *****************
 24100 ;; Defined at:
 24101 ;;		line 131 in file "nwk/nwk_src/nwkFrame.c"
 24102 ;; Parameters:    Size  Location     Type
 24103 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24104 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24105 ;; Auto vars:     Size  Location     Type
 24106 ;;		None
 24107 ;; Return value:  Size  Location     Type
 24108 ;;                  1    wreg      void 
 24109 ;; Registers used:
 24110 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24111 ;; Tracked objects:
 24112 ;;		On entry : 0/0
 24113 ;;		On exit  : 0/0
 24114 ;;		Unchanged: 0/0
 24115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24120 ;;Total ram usage:        2 bytes
 24121 ;; Hardware stack levels used:    1
 24122 ;; Hardware stack levels required when called:    7
 24123 ;; This function calls:
 24124 ;;		Nothing
 24125 ;; This function is called by:
 24126 ;;		_nwkRouteSendRouteError
 24127 ;;		_nwkRxSendAck
 24128 ;; This function uses a non-reentrant model
 24129 ;;
 24130                           
 24131                           	psect	text145
 24132  0092E6                     __ptext145:
 24133                           	opt callstack 0
 24134  0092E6                     _nwkFrameCommandInit:
 24135                           	opt callstack 18
 24136  0092E6                     
 24137                           ;nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);nwk/nwk_src/nw
      +                          kFrame.c: 132: {;nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_STATUS;
 24138  0092E6  EE20 F083          	lfsr	2,131
 24139  0092EA  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24140  0092EC  26D9               	addwf	fsr2l,f,c
 24141  0092EE  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24142  0092F0  22DA               	addwfc	fsr2h,f,c
 24143  0092F2  0E00               	movlw	0
 24144  0092F4  6EDF               	movwf	indf2,c
 24145                           
 24146                           ;nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 24147  0092F6  0101               	movlb	1	; () banked
 24148  0092F8  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 24149  0092FA  EE20 F00C          	lfsr	2,12
 24150  0092FE  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24151  009300  26D9               	addwf	fsr2l,f,c
 24152  009302  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24153  009304  22DA               	addwfc	fsr2h,f,c
 24154  009306  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 24155                           
 24156                           ;nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 24157  00930C  EE20 F00D          	lfsr	2,13
 24158  009310  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24159  009312  26D9               	addwf	fsr2l,f,c
 24160  009314  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24161  009316  22DA               	addwfc	fsr2h,f,c
 24162  009318  0060  F403  FFDE   	movff	_nwkIb,postinc2
 24163  00931E  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 24164  009324                     
 24165                           ; BSR set to: 1
 24166  009324  0012               	return		;funcret
 24167  009326                     __end_of_nwkFrameCommandInit:
 24168                           	opt callstack 0
 24169                           
 24170 ;; *************** function _nwkFrameFree *****************
 24171 ;; Defined at:
 24172 ;;		line 100 in file "nwk/nwk_src/nwkFrame.c"
 24173 ;; Parameters:    Size  Location     Type
 24174 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24175 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24176 ;; Auto vars:     Size  Location     Type
 24177 ;;		None
 24178 ;; Return value:  Size  Location     Type
 24179 ;;                  1    wreg      void 
 24180 ;; Registers used:
 24181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24182 ;; Tracked objects:
 24183 ;;		On entry : 0/0
 24184 ;;		On exit  : 0/0
 24185 ;;		Unchanged: 0/0
 24186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24191 ;;Total ram usage:        2 bytes
 24192 ;; Hardware stack levels used:    1
 24193 ;; Hardware stack levels required when called:    7
 24194 ;; This function calls:
 24195 ;;		Nothing
 24196 ;; This function is called by:
 24197 ;;		_nwkDataReqTxConf
 24198 ;;		_nwkRouteFrame
 24199 ;;		_nwkRxTaskHandler
 24200 ;;		_nwkTxTaskHandler
 24201 ;; This function uses a non-reentrant model
 24202 ;;
 24203                           
 24204                           	psect	text146
 24205  009A44                     __ptext146:
 24206                           	opt callstack 0
 24207  009A44                     _nwkFrameFree:
 24208                           	opt callstack 20
 24209  009A44                     
 24210                           ;nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);nwk/nwk_src/nwkFrame.
      +                          c: 101: {;nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 24211  009A44  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
 24212  009A4A  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 24213  009A50  0E00               	movlw	0
 24214  009A52  6EDF               	movwf	indf2,c
 24215  009A54                     
 24216                           ;nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 24217  009A54  0101               	movlb	1	; () banked
 24218  009A56  0726               	decf	(_nwkIb+38)& (0+255),f,b
 24219  009A58  A0D8               	btfss	status,0,c
 24220  009A5A  0727               	decf	(_nwkIb+39)& (0+255),f,b
 24221  009A5C                     
 24222                           ; BSR set to: 1
 24223  009A5C  0012               	return		;funcret
 24224  009A5E                     __end_of_nwkFrameFree:
 24225                           	opt callstack 0
 24226                           
 24227 ;; *************** function _nwkDataReqTaskHandler *****************
 24228 ;; Defined at:
 24229 ;;		line 209 in file "nwk/nwk_src/nwkDataReq.c"
 24230 ;; Parameters:    Size  Location     Type
 24231 ;;		None
 24232 ;; Auto vars:     Size  Location     Type
 24233 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
 24234 ;;		 -> NULL(0), nwkDataReq(19), 
 24235 ;; Return value:  Size  Location     Type
 24236 ;;                  1    wreg      void 
 24237 ;; Registers used:
 24238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24239 ;; Tracked objects:
 24240 ;;		On entry : 0/0
 24241 ;;		On exit  : 0/0
 24242 ;;		Unchanged: 0/0
 24243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24248 ;;Total ram usage:        4 bytes
 24249 ;; Hardware stack levels used:    1
 24250 ;; Hardware stack levels required when called:   12
 24251 ;; This function calls:
 24252 ;;		_nwkDataReqConfirm
 24253 ;;		_nwkDataReqSendFrame
 24254 ;; This function is called by:
 24255 ;;		_NWK_TaskHandler
 24256 ;; This function uses a non-reentrant model
 24257 ;;
 24258                           
 24259                           	psect	text147
 24260  007CBC                     __ptext147:
 24261                           	opt callstack 0
 24262  007CBC                     _nwkDataReqTaskHandler:
 24263                           	opt callstack 16
 24264  007CBC                     
 24265                           ;nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req = 
      +                          req->next)
 24266  007CBC  0060  F3A0  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 24267  007CC2  0060  F3A4  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 24268  007CC8  EFA5  F03E         	goto	l16615
 24269  007CCC                     l16597:
 24270                           
 24271                           ;nwk/nwk_src/nwkDataReq.c: 216:       {;nwk/nwk_src/nwkDataReq.c: 217:         nwkDataRe
      +                          qSendFrame(req);
 24272  007CCC  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 24273  007CD2  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 24274  007CD8  ECCB  F00E         	call	_nwkDataReqSendFrame	;wreg free
 24275  007CDC  EFAE  F03E         	goto	l1768
 24276  007CE0                     l16603:
 24277                           
 24278                           ;nwk/nwk_src/nwkDataReq.c: 225:       {;nwk/nwk_src/nwkDataReq.c: 226:         nwkDataRe
      +                          qConfirm(req);
 24279  007CE0  0060  F0CC  F002   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 24280  007CE6  0060  F0D0  F003   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 24281  007CEC  EC63  F039         	call	_nwkDataReqConfirm	;wreg free
 24282  007CF0  EFAE  F03E         	goto	l1768
 24283  007CF4                     l16611:
 24284  007CF4  EE20 F004          	lfsr	2,4
 24285  007CF8  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24286  007CFA  26D9               	addwf	fsr2l,f,c
 24287  007CFC  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24288  007CFE  22DA               	addwfc	fsr2h,f,c
 24289  007D00  50DF               	movf	indf2,w,c
 24290  007D02  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
 24291  007D04  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
 24292                           
 24293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24294                           ; Switch size 1, requested type "simple"
 24295                           ; Number of cases is 1, Range of values is 0 to 0
 24296                           ; switch strategies available:
 24297                           ; Name         Instructions Cycles
 24298                           ; simple_byte            4     3 (average)
 24299                           ;	Chosen strategy is simple_byte
 24300  007D06  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
 24301  007D08  0A00               	xorlw	0	; case 0
 24302  007D0A  B4D8               	btfsc	status,2,c
 24303  007D0C  EF8A  F03E         	goto	l17849
 24304  007D10  EF99  F03E         	goto	l16613
 24305  007D14                     l17849:
 24306                           
 24307                           ; Switch size 1, requested type "simple"
 24308                           ; Number of cases is 3, Range of values is 0 to 2
 24309                           ; switch strategies available:
 24310                           ; Name         Instructions Cycles
 24311                           ; simple_byte           10     6 (average)
 24312                           ;	Chosen strategy is simple_byte
 24313  007D14  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
 24314  007D16  0A00               	xorlw	0	; case 0
 24315  007D18  B4D8               	btfsc	status,2,c
 24316  007D1A  EF66  F03E         	goto	l16597
 24317  007D1E  0A01               	xorlw	1	; case 1
 24318  007D20  B4D8               	btfsc	status,2,c
 24319  007D22  EF99  F03E         	goto	l16613
 24320  007D26  0A03               	xorlw	3	; case 2
 24321  007D28  B4D8               	btfsc	status,2,c
 24322  007D2A  EF70  F03E         	goto	l16603
 24323  007D2E  EF99  F03E         	goto	l16613
 24324  007D32                     l16613:
 24325                           
 24326                           ;nwk/nwk_src/nwkDataReq.c: 233:   }
 24327  007D32  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 24328  007D38  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 24329  007D3E  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
 24330  007D44  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
 24331  007D4A                     l16615:
 24332  007D4A  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24333  007D4C  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24334  007D4E  A4D8               	btfss	status,2,c
 24335  007D50  EFAC  F03E         	goto	u16561
 24336  007D54  EFAE  F03E         	goto	u16560
 24337  007D58                     u16561:
 24338  007D58  EF7A  F03E         	goto	l16611
 24339  007D5C                     u16560:
 24340  007D5C                     l1768:
 24341  007D5C  0012               	return		;funcret
 24342  007D5E                     __end_of_nwkDataReqTaskHandler:
 24343                           	opt callstack 0
 24344                           
 24345 ;; *************** function _nwkDataReqSendFrame *****************
 24346 ;; Defined at:
 24347 ;;		line 111 in file "nwk/nwk_src/nwkDataReq.c"
 24348 ;; Parameters:    Size  Location     Type
 24349 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
 24350 ;;		 -> NULL(0), nwkDataReq(19), 
 24351 ;; Auto vars:     Size  Location     Type
 24352 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
 24353 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24354 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
 24355 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24356 ;; Return value:  Size  Location     Type
 24357 ;;                  1    wreg      void 
 24358 ;; Registers used:
 24359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24360 ;; Tracked objects:
 24361 ;;		On entry : 0/0
 24362 ;;		On exit  : 0/0
 24363 ;;		Unchanged: 0/0
 24364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24366 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24368 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24369 ;;Total ram usage:        7 bytes
 24370 ;; Hardware stack levels used:    1
 24371 ;; Hardware stack levels required when called:   11
 24372 ;; This function calls:
 24373 ;;		_memcpy
 24374 ;;		_nwkFrameAlloc
 24375 ;;		_nwkTxFrame
 24376 ;; This function is called by:
 24377 ;;		_nwkDataReqTaskHandler
 24378 ;; This function uses a non-reentrant model
 24379 ;;
 24380                           
 24381                           	psect	text148
 24382  001D96                     __ptext148:
 24383                           	opt callstack 0
 24384  001D96                     _nwkDataReqSendFrame:
 24385                           	opt callstack 16
 24386  001D96                     
 24387                           ;nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);nwk/
      +                          nwk_src/nwkDataReq.c: 112: {;nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame;;nwk/nwk
      +                          _src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24388  001D96  ECFE  F038         	call	_nwkFrameAlloc	;wreg free
 24389  001D9A  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 24390  001DA0  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 24391  001DA6  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24392  001DA8  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24393  001DAA  A4D8               	btfss	status,2,c
 24394  001DAC  EFDA  F00E         	goto	u15601
 24395  001DB0  EFDC  F00E         	goto	u15600
 24396  001DB4                     u15601:
 24397  001DB4  EFEE  F00E         	goto	l15847
 24398  001DB8                     u15600:
 24399  001DB8                     
 24400                           ;nwk/nwk_src/nwkDataReq.c: 116:   {;nwk/nwk_src/nwkDataReq.c: 117:     req->state = NWK_
      +                          DATA_REQ_STATE_CONFIRM;
 24401  001DB8  EE20 F004          	lfsr	2,4
 24402  001DBC  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24403  001DBE  26D9               	addwf	fsr2l,f,c
 24404  001DC0  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24405  001DC2  22DA               	addwfc	fsr2h,f,c
 24406  001DC4  0E02               	movlw	2
 24407  001DC6  6EDF               	movwf	indf2,c
 24408                           
 24409                           ;nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 24410  001DC8  EE20 F011          	lfsr	2,17
 24411  001DCC  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24412  001DCE  26D9               	addwf	fsr2l,f,c
 24413  001DD0  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24414  001DD2  22DA               	addwfc	fsr2h,f,c
 24415  001DD4  0E02               	movlw	2
 24416  001DD6  6EDF               	movwf	indf2,c
 24417  001DD8  EF7E  F010         	goto	l1745
 24418  001DDC                     l15847:
 24419                           
 24420                           ;nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 24421  001DDC  EE20 F002          	lfsr	2,2
 24422  001DE0  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24423  001DE2  26D9               	addwf	fsr2l,f,c
 24424  001DE4  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24425  001DE6  22DA               	addwfc	fsr2h,f,c
 24426  001DE8  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 24427  001DEE  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 24428                           
 24429                           ;nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 24430  001DF4  EE20 F004          	lfsr	2,4
 24431  001DF8  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24432  001DFA  26D9               	addwf	fsr2l,f,c
 24433  001DFC  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24434  001DFE  22DA               	addwfc	fsr2h,f,c
 24435  001E00  0E01               	movlw	1
 24436  001E02  6EDF               	movwf	indf2,c
 24437                           
 24438                           ;nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 24439  001E04  EE20 F087          	lfsr	2,135
 24440  001E08  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24441  001E0A  26D9               	addwf	fsr2l,f,c
 24442  001E0C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24443  001E0E  22DA               	addwfc	fsr2h,f,c
 24444  001E10  0E12               	movlw	low _nwkDataReqTxConf
 24445  001E12  6EDE               	movwf	postinc2,c
 24446  001E14  0E75               	movlw	high _nwkDataReqTxConf
 24447  001E16  6EDD               	movwf	postdec2,c
 24448  001E18                     
 24449                           ;nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAST_P
      +                          AN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 24450  001E18  EE20 F086          	lfsr	2,134
 24451  001E1C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24452  001E1E  26D9               	addwf	fsr2l,f,c
 24453  001E20  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24454  001E22  22DA               	addwfc	fsr2h,f,c
 24455  001E24  EE10 F009          	lfsr	1,9
 24456  001E28  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24457  001E2A  26E1               	addwf	fsr1l,f,c
 24458  001E2C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24459  001E2E  22E2               	addwfc	fsr1h,f,c
 24460  001E30  B4E7               	btfsc	indf1,2,c
 24461  001E32  EF1D  F00F         	goto	u15611
 24462  001E36  EF20  F00F         	goto	u15610
 24463  001E3A                     u15611:
 24464  001E3A  0E01               	movlw	1
 24465  001E3C  EF21  F00F         	goto	u15620
 24466  001E40                     u15610:
 24467  001E40  0E00               	movlw	0
 24468  001E42                     u15620:
 24469  001E42  6EDF               	movwf	indf2,c
 24470  001E44                     
 24471                           ;nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NWK_O
      +                          PT_ACK_REQUEST ? 1 : 0;
 24472  001E44  EE20 F009          	lfsr	2,9
 24473  001E48  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24474  001E4A  26D9               	addwf	fsr2l,f,c
 24475  001E4C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24476  001E4E  22DA               	addwfc	fsr2h,f,c
 24477  001E50  B0DF               	btfsc	indf2,0,c
 24478  001E52  EF2D  F00F         	goto	u15631
 24479  001E56  EF31  F00F         	goto	u15630
 24480  001E5A                     u15631:
 24481  001E5A  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24482  001E5C  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24483  001E5E  EF32  F00F         	goto	u15648
 24484  001E62                     u15630:
 24485  001E62  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24486  001E64                     u15648:
 24487  001E64  EE20 F00B          	lfsr	2,11
 24488  001E68  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24489  001E6A  26D9               	addwf	fsr2l,f,c
 24490  001E6C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24491  001E6E  22DA               	addwfc	fsr2h,f,c
 24492  001E70  50DF               	movf	indf2,w,c
 24493  001E72  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24494  001E74  0BFE               	andlw	-2
 24495  001E76  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24496  001E78  6EDF               	movwf	indf2,c
 24497  001E7A                     
 24498                           ;nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK_OP
      +                          T_LINK_LOCAL ? 1 : 0;
 24499  001E7A  EE20 F009          	lfsr	2,9
 24500  001E7E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24501  001E80  26D9               	addwf	fsr2l,f,c
 24502  001E82  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24503  001E84  22DA               	addwfc	fsr2h,f,c
 24504  001E86  B6DF               	btfsc	indf2,3,c
 24505  001E88  EF48  F00F         	goto	u15651
 24506  001E8C  EF4C  F00F         	goto	u15650
 24507  001E90                     u15651:
 24508  001E90  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24509  001E92  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24510  001E94  EF4D  F00F         	goto	u15668
 24511  001E98                     u15650:
 24512  001E98  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24513  001E9A                     u15668:
 24514  001E9A  EE20 F00B          	lfsr	2,11
 24515  001E9E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24516  001EA0  26D9               	addwf	fsr2l,f,c
 24517  001EA2  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24518  001EA4  22DA               	addwfc	fsr2h,f,c
 24519  001EA6  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24520  001EA8  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24521  001EAA  50DF               	movf	indf2,w,c
 24522  001EAC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24523  001EAE  0BFB               	andlw	-5
 24524  001EB0  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24525  001EB2  6EDF               	movwf	indf2,c
 24526  001EB4                     
 24527                           ;nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK_OP
      +                          T_MULTICAST ? 1 : 0;
 24528  001EB4  EE20 F009          	lfsr	2,9
 24529  001EB8  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24530  001EBA  26D9               	addwf	fsr2l,f,c
 24531  001EBC  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24532  001EBE  22DA               	addwfc	fsr2h,f,c
 24533  001EC0  B8DF               	btfsc	indf2,4,c
 24534  001EC2  EF65  F00F         	goto	u15671
 24535  001EC6  EF69  F00F         	goto	u15670
 24536  001ECA                     u15671:
 24537  001ECA  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24538  001ECC  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24539  001ECE  EF6A  F00F         	goto	u15688
 24540  001ED2                     u15670:
 24541  001ED2  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24542  001ED4                     u15688:
 24543  001ED4  EE20 F00B          	lfsr	2,11
 24544  001ED8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24545  001EDA  26D9               	addwf	fsr2l,f,c
 24546  001EDC  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24547  001EDE  22DA               	addwfc	fsr2h,f,c
 24548  001EE0  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24549  001EE2  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24550  001EE4  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24551  001EE6  50DF               	movf	indf2,w,c
 24552  001EE8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24553  001EEA  0BF7               	andlw	-9
 24554  001EEC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24555  001EEE  6EDF               	movwf	indf2,c
 24556  001EF0                     
 24557                           ;nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 24558  001EF0  EE20 F00B          	lfsr	2,11
 24559  001EF4  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24560  001EF6  26D9               	addwf	fsr2l,f,c
 24561  001EF8  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24562  001EFA  22DA               	addwfc	fsr2h,f,c
 24563  001EFC  A6DF               	btfss	indf2,3,c
 24564  001EFE  EF83  F00F         	goto	u15691
 24565  001F02  EF85  F00F         	goto	u15690
 24566  001F06                     u15691:
 24567  001F06  EFF1  F00F         	goto	l1746
 24568  001F0A                     u15690:
 24569  001F0A                     
 24570                           ;nwk/nwk_src/nwkDataReq.c: 139:   {;nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMulticast
      +                          Header_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 24571  001F0A  EE20 F081          	lfsr	2,129
 24572  001F0E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24573  001F10  26D9               	addwf	fsr2l,f,c
 24574  001F12  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24575  001F14  22DA               	addwfc	fsr2h,f,c
 24576  001F16  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 24577  001F1C  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 24578                           
 24579                           ;nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 24580  001F22  EE20 F00A          	lfsr	2,10
 24581  001F26  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24582  001F28  26D9               	addwf	fsr2l,f,c
 24583  001F2A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24584  001F2C  22DA               	addwfc	fsr2h,f,c
 24585  001F2E  50DF               	movf	indf2,w,c
 24586  001F30  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24587  001F32  EE20 F001          	lfsr	2,1
 24588  001F36  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 24589  001F38  26D9               	addwf	fsr2l,f,c
 24590  001F3A  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 24591  001F3C  22DA               	addwfc	fsr2h,f,c
 24592  001F3E  50DF               	movf	indf2,w,c
 24593  001F40  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24594  001F42  0BF0               	andlw	-16
 24595  001F44  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24596  001F46  6EDF               	movwf	indf2,c
 24597                           
 24598                           ;nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 24599  001F48  EE20 F00A          	lfsr	2,10
 24600  001F4C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24601  001F4E  26D9               	addwf	fsr2l,f,c
 24602  001F50  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24603  001F52  22DA               	addwfc	fsr2h,f,c
 24604  001F54  50DF               	movf	indf2,w,c
 24605  001F56  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24606  001F58  EE20 F001          	lfsr	2,1
 24607  001F5C  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 24608  001F5E  26D9               	addwf	fsr2l,f,c
 24609  001F60  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 24610  001F62  22DA               	addwfc	fsr2h,f,c
 24611  001F64  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 24612  001F66  50DF               	movf	indf2,w,c
 24613  001F68  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24614  001F6A  0B0F               	andlw	-241
 24615  001F6C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24616  001F6E  6EDF               	movwf	indf2,c
 24617                           
 24618                           ;nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 24619  001F70  EE20 F00B          	lfsr	2,11
 24620  001F74  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24621  001F76  26D9               	addwf	fsr2l,f,c
 24622  001F78  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24623  001F7A  22DA               	addwfc	fsr2h,f,c
 24624  001F7C  50DF               	movf	indf2,w,c
 24625  001F7E  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24626  001F80  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 24627  001F86  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 24628  001F8C  50DF               	movf	indf2,w,c
 24629  001F8E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24630  001F90  0BF0               	andlw	-16
 24631  001F92  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24632  001F94  6EDF               	movwf	indf2,c
 24633                           
 24634                           ;nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadius;
 24635  001F96  EE20 F00B          	lfsr	2,11
 24636  001F9A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24637  001F9C  26D9               	addwf	fsr2l,f,c
 24638  001F9E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24639  001FA0  22DA               	addwfc	fsr2h,f,c
 24640  001FA2  50DF               	movf	indf2,w,c
 24641  001FA4  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24642  001FA6  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 24643  001FAC  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 24644  001FB2  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 24645  001FB4  50DF               	movf	indf2,w,c
 24646  001FB6  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24647  001FB8  0B0F               	andlw	-241
 24648  001FBA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24649  001FBC  6EDF               	movwf	indf2,c
 24650                           
 24651                           ;nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_t);
 24652  001FBE  EE20 F081          	lfsr	2,129
 24653  001FC2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24654  001FC4  26D9               	addwf	fsr2l,f,c
 24655  001FC6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24656  001FC8  22DA               	addwfc	fsr2h,f,c
 24657  001FCA  0E02               	movlw	2
 24658  001FCC  26DE               	addwf	postinc2,f,c
 24659  001FCE  0E00               	movlw	0
 24660  001FD0  22DD               	addwfc	postdec2,f,c
 24661                           
 24662                           ;nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 24663  001FD2  EE20 F001          	lfsr	2,1
 24664  001FD6  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24665  001FD8  26D9               	addwf	fsr2l,f,c
 24666  001FDA  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24667  001FDC  22DA               	addwfc	fsr2h,f,c
 24668  001FDE  0E02               	movlw	2
 24669  001FE0  26DF               	addwf	indf2,f,c
 24670  001FE2                     l1746:
 24671                           
 24672                           ;nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 24673  001FE2  0101               	movlb	1	; () banked
 24674  001FE4  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 24675  001FE6  EE20 F00C          	lfsr	2,12
 24676  001FEA  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24677  001FEC  26D9               	addwf	fsr2l,f,c
 24678  001FEE  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24679  001FF0  22DA               	addwfc	fsr2h,f,c
 24680  001FF2  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 24681                           
 24682                           ;nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
 24683  001FF8  EE20 F00D          	lfsr	2,13
 24684  001FFC  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24685  001FFE  26D9               	addwf	fsr2l,f,c
 24686  002000  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24687  002002  22DA               	addwfc	fsr2h,f,c
 24688  002004  0060  F403  FFDE   	movff	_nwkIb,postinc2
 24689  00200A  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 24690  002010                     
 24691                           ; BSR set to: 1
 24692                           ;nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
 24693  002010  EE20 F005          	lfsr	2,5
 24694  002014  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24695  002016  26D9               	addwf	fsr2l,f,c
 24696  002018  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24697  00201A  22DA               	addwfc	fsr2h,f,c
 24698  00201C  EE10 F00F          	lfsr	1,15
 24699  002020  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24700  002022  26E1               	addwf	fsr1l,f,c
 24701  002024  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24702  002026  22E2               	addwfc	fsr1h,f,c
 24703  002028  006F FF7B FFE6     	movff	postinc2,postinc1
 24704  00202E  006F FF77 FFE5     	movff	postdec2,postdec1
 24705  002034                     
 24706                           ; BSR set to: 1
 24707                           ;nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 24708  002034  EE20 F008          	lfsr	2,8
 24709  002038  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24710  00203A  26D9               	addwf	fsr2l,f,c
 24711  00203C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24712  00203E  22DA               	addwfc	fsr2h,f,c
 24713  002040  50DF               	movf	indf2,w,c
 24714  002042  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24715  002044  EE20 F011          	lfsr	2,17
 24716  002048  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24717  00204A  26D9               	addwf	fsr2l,f,c
 24718  00204C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24719  00204E  22DA               	addwfc	fsr2h,f,c
 24720  002050  50DF               	movf	indf2,w,c
 24721  002052  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24722  002054  0BF0               	andlw	-16
 24723  002056  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24724  002058  6EDF               	movwf	indf2,c
 24725  00205A                     
 24726                           ; BSR set to: 1
 24727                           ;nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 24728  00205A  EE20 F007          	lfsr	2,7
 24729  00205E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24730  002060  26D9               	addwf	fsr2l,f,c
 24731  002062  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24732  002064  22DA               	addwfc	fsr2h,f,c
 24733  002066  50DF               	movf	indf2,w,c
 24734  002068  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24735  00206A  EE20 F011          	lfsr	2,17
 24736  00206E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24737  002070  26D9               	addwf	fsr2l,f,c
 24738  002072  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24739  002074  22DA               	addwfc	fsr2h,f,c
 24740  002076  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 24741  002078  50DF               	movf	indf2,w,c
 24742  00207A  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24743  00207C  0B0F               	andlw	-241
 24744  00207E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24745  002080  6EDF               	movwf	indf2,c
 24746  002082                     
 24747                           ; BSR set to: 1
 24748                           ;nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
 24749  002082  EE20 F081          	lfsr	2,129
 24750  002086  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24751  002088  26D9               	addwf	fsr2l,f,c
 24752  00208A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24753  00208C  22DA               	addwfc	fsr2h,f,c
 24754  00208E  006F FF78  F008    	movff	postinc2,memcpy@d1
 24755  002094  006F FF74  F009    	movff	postdec2,memcpy@d1+1
 24756  00209A  EE20 F00C          	lfsr	2,12
 24757  00209E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24758  0020A0  26D9               	addwf	fsr2l,f,c
 24759  0020A2  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24760  0020A4  22DA               	addwfc	fsr2h,f,c
 24761  0020A6  006F FF78  F00A    	movff	postinc2,memcpy@s1
 24762  0020AC  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 24763  0020B2  EE20 F00E          	lfsr	2,14
 24764  0020B6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24765  0020B8  26D9               	addwf	fsr2l,f,c
 24766  0020BA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24767  0020BC  22DA               	addwfc	fsr2h,f,c
 24768  0020BE  50DF               	movf	indf2,w,c
 24769  0020C0  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24770  0020C2  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 24771  0020C4  6E0C               	movwf	memcpy@n^0,c
 24772  0020C6  6A0D               	clrf	(memcpy@n+1)^0,c
 24773  0020C8  ECD7  F041         	call	_memcpy	;wreg free
 24774  0020CC                     
 24775                           ;nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
 24776  0020CC  EE20 F00E          	lfsr	2,14
 24777  0020D0  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24778  0020D2  26D9               	addwf	fsr2l,f,c
 24779  0020D4  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24780  0020D6  22DA               	addwfc	fsr2h,f,c
 24781  0020D8  50DF               	movf	indf2,w,c
 24782  0020DA  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24783  0020DC  EE20 F001          	lfsr	2,1
 24784  0020E0  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24785  0020E2  26D9               	addwf	fsr2l,f,c
 24786  0020E4  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24787  0020E6  22DA               	addwfc	fsr2h,f,c
 24788  0020E8  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 24789  0020EA  26DF               	addwf	indf2,f,c
 24790  0020EC                     
 24791                           ;nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
 24792  0020EC  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 24793  0020F2  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 24794  0020F8  EC60  F01F         	call	_nwkTxFrame	;wreg free
 24795  0020FC                     l1745:
 24796  0020FC  0012               	return		;funcret
 24797  0020FE                     __end_of_nwkDataReqSendFrame:
 24798                           	opt callstack 0
 24799                           
 24800 ;; *************** function _nwkTxFrame *****************
 24801 ;; Defined at:
 24802 ;;		line 109 in file "nwk/nwk_src/nwkTx.c"
 24803 ;; Parameters:    Size  Location     Type
 24804 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 24805 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24806 ;; Auto vars:     Size  Location     Type
 24807 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
 24808 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24809 ;; Return value:  Size  Location     Type
 24810 ;;                  1    wreg      void 
 24811 ;; Registers used:
 24812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24813 ;; Tracked objects:
 24814 ;;		On entry : 0/0
 24815 ;;		On exit  : 0/0
 24816 ;;		Unchanged: 0/0
 24817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24822 ;;Total ram usage:        6 bytes
 24823 ;; Hardware stack levels used:    1
 24824 ;; Hardware stack levels required when called:   10
 24825 ;; This function calls:
 24826 ;;		_nwkRoutePrepareTx
 24827 ;;		_rand
 24828 ;; This function is called by:
 24829 ;;		_nwkDataReqSendFrame
 24830 ;;		_nwkRouteFrame
 24831 ;;		_nwkRouteSendRouteError
 24832 ;;		_nwkRxSendAck
 24833 ;; This function uses a non-reentrant model
 24834 ;;
 24835                           
 24836                           	psect	text149
 24837  003EC0                     __ptext149:
 24838                           	opt callstack 0
 24839  003EC0                     _nwkTxFrame:
 24840                           	opt callstack 15
 24841  003EC0                     
 24842                           ;nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);nwk/nwk_src/nwkTx.c: 110: 
      +                          {;nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 24843  003EC0  0E02               	movlw	2
 24844  003EC2  2424               	addwf	nwkTxFrame@frame^0,w,c
 24845  003EC4  6E28               	movwf	nwkTxFrame@header^0,c
 24846  003EC6  0E00               	movlw	0
 24847  003EC8  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
 24848  003ECA  6E29               	movwf	(nwkTxFrame@header+1)^0,c
 24849  003ECC                     
 24850                           ;nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 24851  003ECC  EE20 F086          	lfsr	2,134
 24852  003ED0  5024               	movf	nwkTxFrame@frame^0,w,c
 24853  003ED2  26D9               	addwf	fsr2l,f,c
 24854  003ED4  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24855  003ED6  22DA               	addwfc	fsr2h,f,c
 24856  003ED8  A2DF               	btfss	indf2,1,c
 24857  003EDA  EF71  F01F         	goto	u13991
 24858  003EDE  EF73  F01F         	goto	u13990
 24859  003EE2                     u13991:
 24860  003EE2  EF7D  F01F         	goto	l14759
 24861  003EE6                     u13990:
 24862  003EE6                     
 24863                           ;nwk/nwk_src/nwkTx.c: 114:   {;nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX_STATE
      +                          _DELAY;
 24864  003EE6  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 24865  003EEC  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 24866  003EF2  0E12               	movlw	18
 24867  003EF4  6EDF               	movwf	indf2,c
 24868                           
 24869                           ;nwk/nwk_src/nwkTx.c: 116:   }
 24870  003EF6  EF85  F01F         	goto	l14761
 24871  003EFA                     l14759:
 24872                           
 24873                           ;nwk/nwk_src/nwkTx.c: 118:   {;nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_TX_STA
      +                          TE_DELAY;
 24874  003EFA  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 24875  003F00  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 24876  003F06  0E12               	movlw	18
 24877  003F08  6EDF               	movwf	indf2,c
 24878  003F0A                     l14761:
 24879                           
 24880                           ;nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 24881  003F0A  EE20 F083          	lfsr	2,131
 24882  003F0E  5024               	movf	nwkTxFrame@frame^0,w,c
 24883  003F10  26D9               	addwf	fsr2l,f,c
 24884  003F12  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24885  003F14  22DA               	addwfc	fsr2h,f,c
 24886  003F16  0E00               	movlw	0
 24887  003F18  6EDF               	movwf	indf2,c
 24888  003F1A                     
 24889                           ;nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 24890  003F1A  EE20 F086          	lfsr	2,134
 24891  003F1E  5024               	movf	nwkTxFrame@frame^0,w,c
 24892  003F20  26D9               	addwf	fsr2l,f,c
 24893  003F22  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24894  003F24  22DA               	addwfc	fsr2h,f,c
 24895  003F26  A0DF               	btfss	indf2,0,c
 24896  003F28  EF98  F01F         	goto	u14001
 24897  003F2C  EF9A  F01F         	goto	u14000
 24898  003F30                     u14001:
 24899  003F30  EFA6  F01F         	goto	l14767
 24900  003F34                     u14000:
 24901  003F34                     
 24902                           ;nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 24903  003F34  EE20 F003          	lfsr	2,3
 24904  003F38  5028               	movf	nwkTxFrame@header^0,w,c
 24905  003F3A  26D9               	addwf	fsr2l,f,c
 24906  003F3C  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24907  003F3E  22DA               	addwfc	fsr2h,f,c
 24908  003F40  0EFF               	movlw	255
 24909  003F42  6EDE               	movwf	postinc2,c
 24910  003F44  0EFF               	movlw	255
 24911  003F46  6EDD               	movwf	postdec2,c
 24912  003F48  EFB2  F01F         	goto	l2264
 24913  003F4C                     l14767:
 24914                           
 24915                           ;nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 24916  003F4C  EE20 F003          	lfsr	2,3
 24917  003F50  5028               	movf	nwkTxFrame@header^0,w,c
 24918  003F52  26D9               	addwf	fsr2l,f,c
 24919  003F54  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24920  003F56  22DA               	addwfc	fsr2h,f,c
 24921  003F58  0060  F40B  FFDE   	movff	_nwkIb+2,postinc2
 24922  003F5E  0060  F40F  FFDD   	movff	_nwkIb+3,postdec2
 24923  003F64                     l2264:
 24924                           
 24925                           ;nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK) &
      +                          &
 24926  003F64  EE20 F086          	lfsr	2,134
 24927  003F68  5024               	movf	nwkTxFrame@frame^0,w,c
 24928  003F6A  26D9               	addwf	fsr2l,f,c
 24929  003F6C  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24930  003F6E  22DA               	addwfc	fsr2h,f,c
 24931  003F70  B4DF               	btfsc	indf2,2,c
 24932  003F72  EFBD  F01F         	goto	u14011
 24933  003F76  EFBF  F01F         	goto	u14010
 24934  003F7A                     u14011:
 24935  003F7A  EFD6  F01F         	goto	l14773
 24936  003F7E                     u14010:
 24937  003F7E  EE20 F086          	lfsr	2,134
 24938  003F82  5024               	movf	nwkTxFrame@frame^0,w,c
 24939  003F84  26D9               	addwf	fsr2l,f,c
 24940  003F86  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 24941  003F88  22DA               	addwfc	fsr2h,f,c
 24942  003F8A  B0DF               	btfsc	indf2,0,c
 24943  003F8C  EFCA  F01F         	goto	u14021
 24944  003F90  EFCC  F01F         	goto	u14020
 24945  003F94                     u14021:
 24946  003F94  EFD6  F01F         	goto	l14773
 24947  003F98                     u14020:
 24948  003F98                     
 24949                           ;nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 24950  003F98  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 24951  003F9E  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 24952  003FA4  EC7B  F02B         	call	_nwkRoutePrepareTx	;wreg free
 24953  003FA8  EFE8  F01F         	goto	l14775
 24954  003FAC                     l14773:
 24955                           
 24956                           ;nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 24957  003FAC  EE20 F00D          	lfsr	2,13
 24958  003FB0  5028               	movf	nwkTxFrame@header^0,w,c
 24959  003FB2  26D9               	addwf	fsr2l,f,c
 24960  003FB4  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24961  003FB6  22DA               	addwfc	fsr2h,f,c
 24962  003FB8  EE10 F005          	lfsr	1,5
 24963  003FBC  5028               	movf	nwkTxFrame@header^0,w,c
 24964  003FBE  26E1               	addwf	fsr1l,f,c
 24965  003FC0  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24966  003FC2  22E2               	addwfc	fsr1h,f,c
 24967  003FC4  006F FF7B FFE6     	movff	postinc2,postinc1
 24968  003FCA  006F FF77 FFE5     	movff	postdec2,postdec1
 24969  003FD0                     l14775:
 24970                           
 24971                           ;nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 24972  003FD0  EE20 F007          	lfsr	2,7
 24973  003FD4  5028               	movf	nwkTxFrame@header^0,w,c
 24974  003FD6  26D9               	addwf	fsr2l,f,c
 24975  003FD8  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24976  003FDA  22DA               	addwfc	fsr2h,f,c
 24977  003FDC  0060  F403  FFDE   	movff	_nwkIb,postinc2
 24978  003FE2  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 24979  003FE8                     
 24980                           ;nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 24981  003FE8  0101               	movlb	1	; () banked
 24982  003FEA  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 24983  003FEC  EE20 F002          	lfsr	2,2
 24984  003FF0  5028               	movf	nwkTxFrame@header^0,w,c
 24985  003FF2  26D9               	addwf	fsr2l,f,c
 24986  003FF4  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24987  003FF6  22DA               	addwfc	fsr2h,f,c
 24988  003FF8  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 24989  003FFE                     
 24990                           ; BSR set to: 1
 24991                           ;nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 24992  003FFE  EE20 F005          	lfsr	2,5
 24993  004002  5028               	movf	nwkTxFrame@header^0,w,c
 24994  004004  26D9               	addwf	fsr2l,f,c
 24995  004006  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 24996  004008  22DA               	addwfc	fsr2h,f,c
 24997  00400A  28DE               	incf	postinc2,w,c
 24998  00400C  E106               	bnz	u14031
 24999  00400E  28DE               	incf	postinc2,w,c
 25000  004010  A4D8               	btfss	status,2,c
 25001  004012  EF0D  F020         	goto	u14031
 25002  004016  EF0F  F020         	goto	u14030
 25003  00401A                     u14031:
 25004  00401A  EF31  F020         	goto	l14785
 25005  00401E                     u14030:
 25006  00401E                     
 25007                           ; BSR set to: 1
 25008                           ;nwk/nwk_src/nwkTx.c: 146:   {;nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x8841;
 25009  00401E  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25010  004024  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25011  00402A  0E41               	movlw	65
 25012  00402C  6EDE               	movwf	postinc2,c
 25013  00402E  0E88               	movlw	136
 25014  004030  6EDD               	movwf	postdec2,c
 25015  004032                     
 25016                           ; BSR set to: 1
 25017                           ;nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 25018  004032  EC7C  F02F         	call	_rand	;wreg free
 25019  004036  0E07               	movlw	7
 25020  004038  161A               	andwf	?_rand^0,f,c
 25021  00403A  0E00               	movlw	0
 25022  00403C  161B               	andwf	(?_rand+1)^0,f,c
 25023  00403E  0E01               	movlw	1
 25024  004040  261A               	addwf	?_rand^0,f,c
 25025  004042  0E00               	movlw	0
 25026  004044  221B               	addwfc	(?_rand+1)^0,f,c
 25027  004046  EE20 F084          	lfsr	2,132
 25028  00404A  5024               	movf	nwkTxFrame@frame^0,w,c
 25029  00404C  26D9               	addwf	fsr2l,f,c
 25030  00404E  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25031  004050  22DA               	addwfc	fsr2h,f,c
 25032  004052  0060  F06B  FFDE   	movff	?_rand,postinc2
 25033  004058  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 25034                           
 25035                           ;nwk/nwk_src/nwkTx.c: 149:   }
 25036  00405E  EF45  F020         	goto	l2269
 25037  004062                     l14785:
 25038                           
 25039                           ; BSR set to: 1
 25040                           ;nwk/nwk_src/nwkTx.c: 151:   {;nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x8861;
 25041  004062  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25042  004068  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25043  00406E  0E61               	movlw	97
 25044  004070  6EDE               	movwf	postinc2,c
 25045  004072  0E88               	movlw	136
 25046  004074  6EDD               	movwf	postdec2,c
 25047  004076                     
 25048                           ; BSR set to: 1
 25049                           ;nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 25050  004076  EE20 F084          	lfsr	2,132
 25051  00407A  5024               	movf	nwkTxFrame@frame^0,w,c
 25052  00407C  26D9               	addwf	fsr2l,f,c
 25053  00407E  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25054  004080  22DA               	addwfc	fsr2h,f,c
 25055  004082  0E00               	movlw	0
 25056  004084  6EDE               	movwf	postinc2,c
 25057  004086  0E00               	movlw	0
 25058  004088  6EDD               	movwf	postdec2,c
 25059  00408A                     l2269:
 25060  00408A  0012               	return		;funcret
 25061  00408C                     __end_of_nwkTxFrame:
 25062                           	opt callstack 0
 25063                           
 25064 ;; *************** function _rand *****************
 25065 ;; Defined at:
 25066 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 25067 ;; Parameters:    Size  Location     Type
 25068 ;;		None
 25069 ;; Auto vars:     Size  Location     Type
 25070 ;;		None
 25071 ;; Return value:  Size  Location     Type
 25072 ;;                  2   25[COMRAM] int 
 25073 ;; Registers used:
 25074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25075 ;; Tracked objects:
 25076 ;;		On entry : 0/0
 25077 ;;		On exit  : 0/0
 25078 ;;		Unchanged: 0/0
 25079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25082 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25083 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25084 ;;Total ram usage:       10 bytes
 25085 ;; Hardware stack levels used:    1
 25086 ;; Hardware stack levels required when called:    8
 25087 ;; This function calls:
 25088 ;;		___omul
 25089 ;; This function is called by:
 25090 ;;		_nwkTxFrame
 25091 ;;		_nwkTxBroadcastFrame
 25092 ;; This function uses a non-reentrant model
 25093 ;;
 25094                           
 25095                           	psect	text150
 25096  005EF8                     __ptext150:
 25097                           	opt callstack 0
 25098  005EF8                     _rand:
 25099                           	opt callstack 17
 25100  005EF8  0060  F744  F002   	movff	_seed,___omul@multiplier
 25101  005EFE  0060  F748  F003   	movff	_seed+1,___omul@multiplier+1
 25102  005F04  0060  F74C  F004   	movff	_seed+2,___omul@multiplier+2
 25103  005F0A  0060  F750  F005   	movff	_seed+3,___omul@multiplier+3
 25104  005F10  0060  F754  F006   	movff	_seed+4,___omul@multiplier+4
 25105  005F16  0060  F758  F007   	movff	_seed+5,___omul@multiplier+5
 25106  005F1C  0060  F75C  F008   	movff	_seed+6,___omul@multiplier+6
 25107  005F22  0060  F760  F009   	movff	_seed+7,___omul@multiplier+7
 25108  005F28  0E2D               	movlw	45
 25109  005F2A  6E0A               	movwf	___omul@multiplicand^0,c
 25110  005F2C  0E7F               	movlw	127
 25111  005F2E  6E0B               	movwf	(___omul@multiplicand+1)^0,c
 25112  005F30  0E95               	movlw	149
 25113  005F32  6E0C               	movwf	(___omul@multiplicand+2)^0,c
 25114  005F34  0E4C               	movlw	76
 25115  005F36  6E0D               	movwf	(___omul@multiplicand+3)^0,c
 25116  005F38  0E2D               	movlw	45
 25117  005F3A  6E0E               	movwf	(___omul@multiplicand+4)^0,c
 25118  005F3C  0EF4               	movlw	244
 25119  005F3E  6E0F               	movwf	(___omul@multiplicand+5)^0,c
 25120  005F40  0E51               	movlw	81
 25121  005F42  6E10               	movwf	(___omul@multiplicand+6)^0,c
 25122  005F44  0E58               	movlw	88
 25123  005F46  6E11               	movwf	(___omul@multiplicand+7)^0,c
 25124  005F48  ECB3  F03C         	call	___omul	;wreg free
 25125  005F4C  0060  F008  F01C   	movff	?___omul,??_rand
 25126  005F52  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
 25127  005F58  0060  F010  F01E   	movff	?___omul+2,??_rand+2
 25128  005F5E  0060  F014  F01F   	movff	?___omul+3,??_rand+3
 25129  005F64  0060  F018  F020   	movff	?___omul+4,??_rand+4
 25130  005F6A  0060  F01C  F021   	movff	?___omul+5,??_rand+5
 25131  005F70  0060  F020  F022   	movff	?___omul+6,??_rand+6
 25132  005F76  0060  F024  F023   	movff	?___omul+7,??_rand+7
 25133  005F7C  0E01               	movlw	1
 25134  005F7E  241C               	addwf	??_rand^0,w,c
 25135  005F80  0101               	movlb	1	; () banked
 25136  005F82  6FD1               	movwf	_seed& (0+255),b
 25137  005F84  0E00               	movlw	0
 25138  005F86  201D               	addwfc	(??_rand+1)^0,w,c
 25139  005F88  6FD2               	movwf	(_seed+1)& (0+255),b
 25140  005F8A  0E00               	movlw	0
 25141  005F8C  201E               	addwfc	(??_rand+2)^0,w,c
 25142  005F8E  6FD3               	movwf	(_seed+2)& (0+255),b
 25143  005F90  0E00               	movlw	0
 25144  005F92  201F               	addwfc	(??_rand+3)^0,w,c
 25145  005F94  6FD4               	movwf	(_seed+3)& (0+255),b
 25146  005F96  0E00               	movlw	0
 25147  005F98  2020               	addwfc	(??_rand+4)^0,w,c
 25148  005F9A  6FD5               	movwf	(_seed+4)& (0+255),b
 25149  005F9C  0E00               	movlw	0
 25150  005F9E  2021               	addwfc	(??_rand+5)^0,w,c
 25151  005FA0  6FD6               	movwf	(_seed+5)& (0+255),b
 25152  005FA2  0E00               	movlw	0
 25153  005FA4  2022               	addwfc	(??_rand+6)^0,w,c
 25154  005FA6  6FD7               	movwf	(_seed+6)& (0+255),b
 25155  005FA8  0E00               	movlw	0
 25156  005FAA  2023               	addwfc	(??_rand+7)^0,w,c
 25157  005FAC  6FD8               	movwf	(_seed+7)& (0+255),b
 25158  005FAE                     
 25159                           ; BSR set to: 1
 25160  005FAE  0060  F744  F01C   	movff	_seed,??_rand
 25161  005FB4  0060  F748  F01D   	movff	_seed+1,??_rand+1
 25162  005FBA  0060  F74C  F01E   	movff	_seed+2,??_rand+2
 25163  005FC0  0060  F750  F01F   	movff	_seed+3,??_rand+3
 25164  005FC6  0060  F754  F020   	movff	_seed+4,??_rand+4
 25165  005FCC  0060  F758  F021   	movff	_seed+5,??_rand+5
 25166  005FD2  0060  F75C  F022   	movff	_seed+6,??_rand+6
 25167  005FD8  0060  F760  F023   	movff	_seed+7,??_rand+7
 25168  005FDE  0E32               	movlw	50
 25169  005FE0  EFFB  F02F         	goto	u13870
 25170  005FE4                     u13875:
 25171  005FE4  90D8               	bcf	status,0,c
 25172  005FE6  3223               	rrcf	(??_rand+7)^0,f,c
 25173  005FE8  3222               	rrcf	(??_rand+6)^0,f,c
 25174  005FEA  3221               	rrcf	(??_rand+5)^0,f,c
 25175  005FEC  3220               	rrcf	(??_rand+4)^0,f,c
 25176  005FEE  321F               	rrcf	(??_rand+3)^0,f,c
 25177  005FF0  321E               	rrcf	(??_rand+2)^0,f,c
 25178  005FF2  321D               	rrcf	(??_rand+1)^0,f,c
 25179  005FF4  321C               	rrcf	??_rand^0,f,c
 25180  005FF6                     u13870:
 25181  005FF6  2EE8               	decfsz	wreg,f,c
 25182  005FF8  EFF2  F02F         	goto	u13875
 25183  005FFC  0060  F070  F01A   	movff	??_rand,?_rand
 25184  006002  0060  F078  F01B   	movff	??_rand+2,?_rand+1
 25185  006008                     
 25186                           ; BSR set to: 1
 25187  006008  0012               	return		;funcret
 25188  00600A                     __end_of_rand:
 25189                           	opt callstack 0
 25190                           
 25191 ;; *************** function ___omul *****************
 25192 ;; Defined at:
 25193 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 25194 ;; Parameters:    Size  Location     Type
 25195 ;;  multiplier      8    1[COMRAM] unsigned long long 
 25196 ;;  multiplicand    8    9[COMRAM] unsigned long long 
 25197 ;; Auto vars:     Size  Location     Type
 25198 ;;  product         8   17[COMRAM] unsigned long long 
 25199 ;; Return value:  Size  Location     Type
 25200 ;;                  8    1[COMRAM] unsigned long long 
 25201 ;; Registers used:
 25202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25203 ;; Tracked objects:
 25204 ;;		On entry : 0/0
 25205 ;;		On exit  : 0/0
 25206 ;;		Unchanged: 0/0
 25207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25208 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25209 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25211 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25212 ;;Total ram usage:       24 bytes
 25213 ;; Hardware stack levels used:    1
 25214 ;; Hardware stack levels required when called:    7
 25215 ;; This function calls:
 25216 ;;		Nothing
 25217 ;; This function is called by:
 25218 ;;		_rand
 25219 ;; This function uses a non-reentrant model
 25220 ;;
 25221                           
 25222                           	psect	text151
 25223  007966                     __ptext151:
 25224                           	opt callstack 0
 25225  007966                     ___omul:
 25226                           	opt callstack 17
 25227  007966  EE20  F012         	lfsr	2,___omul@product
 25228  00796A  0E07               	movlw	7
 25229  00796C                     u13701:
 25230  00796C  6ADE               	clrf	postinc2,c
 25231  00796E  06E8               	decf	wreg,f,c
 25232  007970  E2FD               	bc	u13701
 25233  007972                     l14517:
 25234  007972  A002               	btfss	___omul@multiplier^0,0,c
 25235  007974  EFBE  F03C         	goto	u13711
 25236  007978  EFC0  F03C         	goto	u13710
 25237  00797C                     u13711:
 25238  00797C  EFD0  F03C         	goto	l14521
 25239  007980                     u13710:
 25240  007980  500A               	movf	___omul@multiplicand^0,w,c
 25241  007982  2612               	addwf	___omul@product^0,f,c
 25242  007984  500B               	movf	(___omul@multiplicand+1)^0,w,c
 25243  007986  2213               	addwfc	(___omul@product+1)^0,f,c
 25244  007988  500C               	movf	(___omul@multiplicand+2)^0,w,c
 25245  00798A  2214               	addwfc	(___omul@product+2)^0,f,c
 25246  00798C  500D               	movf	(___omul@multiplicand+3)^0,w,c
 25247  00798E  2215               	addwfc	(___omul@product+3)^0,f,c
 25248  007990  500E               	movf	(___omul@multiplicand+4)^0,w,c
 25249  007992  2216               	addwfc	(___omul@product+4)^0,f,c
 25250  007994  500F               	movf	(___omul@multiplicand+5)^0,w,c
 25251  007996  2217               	addwfc	(___omul@product+5)^0,f,c
 25252  007998  5010               	movf	(___omul@multiplicand+6)^0,w,c
 25253  00799A  2218               	addwfc	(___omul@product+6)^0,f,c
 25254  00799C  5011               	movf	(___omul@multiplicand+7)^0,w,c
 25255  00799E  2219               	addwfc	(___omul@product+7)^0,f,c
 25256  0079A0                     l14521:
 25257  0079A0  90D8               	bcf	status,0,c
 25258  0079A2  360A               	rlcf	___omul@multiplicand^0,f,c
 25259  0079A4  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 25260  0079A6  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 25261  0079A8  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 25262  0079AA  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 25263  0079AC  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 25264  0079AE  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 25265  0079B0  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 25266  0079B2  90D8               	bcf	status,0,c
 25267  0079B4  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 25268  0079B6  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 25269  0079B8  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 25270  0079BA  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 25271  0079BC  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 25272  0079BE  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 25273  0079C0  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 25274  0079C2  3202               	rrcf	___omul@multiplier^0,f,c
 25275  0079C4  5002               	movf	___omul@multiplier^0,w,c
 25276  0079C6  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 25277  0079C8  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 25278  0079CA  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 25279  0079CC  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 25280  0079CE  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 25281  0079D0  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 25282  0079D2  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 25283  0079D4  A4D8               	btfss	status,2,c
 25284  0079D6  EFEF  F03C         	goto	u13721
 25285  0079DA  EFF1  F03C         	goto	u13720
 25286  0079DE                     u13721:
 25287  0079DE  EFB9  F03C         	goto	l14517
 25288  0079E2                     u13720:
 25289  0079E2  0060  F048  F002   	movff	___omul@product,?___omul
 25290  0079E8  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 25291  0079EE  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 25292  0079F4  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 25293  0079FA  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 25294  007A00  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 25295  007A06  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 25296  007A0C  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 25297  007A12  0012               	return		;funcret
 25298  007A14                     __end_of___omul:
 25299                           	opt callstack 0
 25300                           
 25301 ;; *************** function _nwkRoutePrepareTx *****************
 25302 ;; Defined at:
 25303 ;;		line 264 in file "nwk/nwk_src/nwkRoute.c"
 25304 ;; Parameters:    Size  Location     Type
 25305 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 25306 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25307 ;; Auto vars:     Size  Location     Type
 25308 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 25309 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25310 ;; Return value:  Size  Location     Type
 25311 ;;                  1    wreg      void 
 25312 ;; Registers used:
 25313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25314 ;; Tracked objects:
 25315 ;;		On entry : 0/0
 25316 ;;		On exit  : 0/0
 25317 ;;		Unchanged: 0/0
 25318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25323 ;;Total ram usage:        6 bytes
 25324 ;; Hardware stack levels used:    1
 25325 ;; Hardware stack levels required when called:    9
 25326 ;; This function calls:
 25327 ;;		_NWK_GroupIsMember
 25328 ;;		_NWK_RouteNextHop
 25329 ;; This function is called by:
 25330 ;;		_nwkTxFrame
 25331 ;; This function uses a non-reentrant model
 25332 ;;
 25333                           
 25334                           	psect	text152
 25335  0056F6                     __ptext152:
 25336                           	opt callstack 0
 25337  0056F6                     _nwkRoutePrepareTx:
 25338                           	opt callstack 15
 25339  0056F6                     
 25340                           ;nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);nwk/nwk_src/nwkR
      +                          oute.c: 265: {;nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame->header;
 25341  0056F6  0E02               	movlw	2
 25342  0056F8  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 25343  0056FA  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 25344  0056FC  0E00               	movlw	0
 25345  0056FE  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 25346  005700  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 25347  005702                     
 25348                           ;nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 25349  005702  EE20 F00D          	lfsr	2,13
 25350  005706  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25351  005708  26D9               	addwf	fsr2l,f,c
 25352  00570A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25353  00570C  22DA               	addwfc	fsr2h,f,c
 25354  00570E  28DE               	incf	postinc2,w,c
 25355  005710  E106               	bnz	u13781
 25356  005712  28DE               	incf	postinc2,w,c
 25357  005714  A4D8               	btfss	status,2,c
 25358  005716  EF8F  F02B         	goto	u13781
 25359  00571A  EF91  F02B         	goto	u13780
 25360  00571E                     u13781:
 25361  00571E  EF9D  F02B         	goto	l14569
 25362  005722                     u13780:
 25363  005722                     
 25364                           ;nwk/nwk_src/nwkRoute.c: 269:   {;nwk/nwk_src/nwkRoute.c: 270:     header->macDstAddr = 
      +                          0xffff;
 25365  005722  EE20 F005          	lfsr	2,5
 25366  005726  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25367  005728  26D9               	addwf	fsr2l,f,c
 25368  00572A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25369  00572C  22DA               	addwfc	fsr2h,f,c
 25370  00572E  0EFF               	movlw	255
 25371  005730  6EDE               	movwf	postinc2,c
 25372  005732  0EFF               	movlw	255
 25373  005734  6EDD               	movwf	postdec2,c
 25374                           
 25375                           ;nwk/nwk_src/nwkRoute.c: 271:   }
 25376  005736  EF18  F02C         	goto	l1930
 25377  00573A                     l14569:
 25378  00573A  EE20 F009          	lfsr	2,9
 25379  00573E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25380  005740  26D9               	addwf	fsr2l,f,c
 25381  005742  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25382  005744  22DA               	addwfc	fsr2h,f,c
 25383  005746  A4DF               	btfss	indf2,2,c
 25384  005748  EFA8  F02B         	goto	u13791
 25385  00574C  EFAA  F02B         	goto	u13790
 25386  005750                     u13791:
 25387  005750  EFBE  F02B         	goto	l14573
 25388  005754                     u13790:
 25389  005754                     
 25390                           ;nwk/nwk_src/nwkRoute.c: 274:   {;nwk/nwk_src/nwkRoute.c: 275:     header->macDstAddr = 
      +                          header->nwkDstAddr;
 25391  005754  EE20 F00D          	lfsr	2,13
 25392  005758  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25393  00575A  26D9               	addwf	fsr2l,f,c
 25394  00575C  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25395  00575E  22DA               	addwfc	fsr2h,f,c
 25396  005760  EE10 F005          	lfsr	1,5
 25397  005764  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25398  005766  26E1               	addwf	fsr1l,f,c
 25399  005768  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25400  00576A  22E2               	addwfc	fsr1h,f,c
 25401  00576C  006F FF7B FFE6     	movff	postinc2,postinc1
 25402  005772  006F FF77 FFE5     	movff	postdec2,postdec1
 25403                           
 25404                           ;nwk/nwk_src/nwkRoute.c: 276:   }
 25405  005778  EF18  F02C         	goto	l1930
 25406  00577C                     l14573:
 25407  00577C  EE20 F009          	lfsr	2,9
 25408  005780  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25409  005782  26D9               	addwf	fsr2l,f,c
 25410  005784  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25411  005786  22DA               	addwfc	fsr2h,f,c
 25412  005788  A6DF               	btfss	indf2,3,c
 25413  00578A  EFC9  F02B         	goto	u13801
 25414  00578E  EFCB  F02B         	goto	u13800
 25415  005792                     u13801:
 25416  005792  EFF4  F02B         	goto	l14579
 25417  005796                     u13800:
 25418  005796  EE20 F00D          	lfsr	2,13
 25419  00579A  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25420  00579C  26D9               	addwf	fsr2l,f,c
 25421  00579E  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25422  0057A0  22DA               	addwfc	fsr2h,f,c
 25423  0057A2  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 25424  0057A8  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 25425  0057AE  ECF8  F047         	call	_NWK_GroupIsMember	;wreg free
 25426  0057B2  0900               	iorlw	0
 25427  0057B4  B4D8               	btfsc	status,2,c
 25428  0057B6  EFDF  F02B         	goto	u13811
 25429  0057BA  EFE1  F02B         	goto	u13810
 25430  0057BE                     u13811:
 25431  0057BE  EFF4  F02B         	goto	l14579
 25432  0057C2                     u13810:
 25433  0057C2                     
 25434                           ;nwk/nwk_src/nwkRoute.c: 280:   {;nwk/nwk_src/nwkRoute.c: 281:     header->macDstAddr = 
      +                          0xffff;
 25435  0057C2  EE20 F005          	lfsr	2,5
 25436  0057C6  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25437  0057C8  26D9               	addwf	fsr2l,f,c
 25438  0057CA  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25439  0057CC  22DA               	addwfc	fsr2h,f,c
 25440  0057CE  0EFF               	movlw	255
 25441  0057D0  6EDE               	movwf	postinc2,c
 25442  0057D2  0EFF               	movlw	255
 25443  0057D4  6EDD               	movwf	postdec2,c
 25444                           
 25445                           ;nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 25446  0057D6  EE20 F009          	lfsr	2,9
 25447  0057DA  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25448  0057DC  26D9               	addwf	fsr2l,f,c
 25449  0057DE  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25450  0057E0  22DA               	addwfc	fsr2h,f,c
 25451  0057E2  84DF               	bsf	indf2,2,c
 25452                           
 25453                           ;nwk/nwk_src/nwkRoute.c: 283:   }
 25454  0057E4  EF18  F02C         	goto	l1930
 25455  0057E8                     l14579:
 25456                           
 25457                           ;nwk/nwk_src/nwkRoute.c: 287:   {;nwk/nwk_src/nwkRoute.c: 288:     header->macDstAddr = 
      +                          NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 25458  0057E8  EE20 F00D          	lfsr	2,13
 25459  0057EC  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25460  0057EE  26D9               	addwf	fsr2l,f,c
 25461  0057F0  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25462  0057F2  22DA               	addwfc	fsr2h,f,c
 25463  0057F4  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 25464  0057FA  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 25465  005800  EE20 F009          	lfsr	2,9
 25466  005804  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25467  005806  26D9               	addwf	fsr2l,f,c
 25468  005808  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25469  00580A  22DA               	addwfc	fsr2h,f,c
 25470  00580C  0E00               	movlw	0
 25471  00580E  B6DF               	btfsc	indf2,3,c
 25472  005810  0E01               	movlw	1
 25473  005812  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 25474  005814  EC9C  F046         	call	_NWK_RouteNextHop	;wreg free
 25475  005818  EE20 F005          	lfsr	2,5
 25476  00581C  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25477  00581E  26D9               	addwf	fsr2l,f,c
 25478  005820  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25479  005822  22DA               	addwfc	fsr2h,f,c
 25480  005824  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 25481  00582A  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 25482  005830                     l1930:
 25483  005830  0012               	return		;funcret
 25484  005832                     __end_of_nwkRoutePrepareTx:
 25485                           	opt callstack 0
 25486                           
 25487 ;; *************** function _NWK_RouteNextHop *****************
 25488 ;; Defined at:
 25489 ;;		line 144 in file "nwk/nwk_src/nwkRoute.c"
 25490 ;; Parameters:    Size  Location     Type
 25491 ;;  dst             2    7[COMRAM] unsigned short 
 25492 ;;  multicast       1    9[COMRAM] unsigned char 
 25493 ;; Auto vars:     Size  Location     Type
 25494 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 25495 ;;		 -> nwkRouteTable(70), NULL(0), 
 25496 ;; Return value:  Size  Location     Type
 25497 ;;                  2    7[COMRAM] unsigned short 
 25498 ;; Registers used:
 25499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25500 ;; Tracked objects:
 25501 ;;		On entry : 0/0
 25502 ;;		On exit  : 0/0
 25503 ;;		Unchanged: 0/0
 25504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25505 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25508 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25509 ;;Total ram usage:        5 bytes
 25510 ;; Hardware stack levels used:    1
 25511 ;; Hardware stack levels required when called:    8
 25512 ;; This function calls:
 25513 ;;		_NWK_RouteFindEntry
 25514 ;; This function is called by:
 25515 ;;		_nwkRoutePrepareTx
 25516 ;;		_nwkRouteFrame
 25517 ;; This function uses a non-reentrant model
 25518 ;;
 25519                           
 25520                           	psect	text153
 25521  008D38                     __ptext153:
 25522                           	opt callstack 0
 25523  008D38                     _NWK_RouteNextHop:
 25524                           	opt callstack 15
 25525  008D38                     
 25526                           ;nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multicast)
      +                          ;nwk/nwk_src/nwkRoute.c: 145: {;nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEntry_t *en
      +                          try;;nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicast);
 25527  008D38  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 25528  008D3E  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 25529  008D44  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 25530  008D4A  ECC4  F040         	call	_NWK_RouteFindEntry	;wreg free
 25531  008D4E  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 25532  008D54  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 25533  008D5A                     
 25534                           ;nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 25535  008D5A  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 25536  008D5C  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 25537  008D5E  B4D8               	btfsc	status,2,c
 25538  008D60  EFB4  F046         	goto	u13671
 25539  008D64  EFB6  F046         	goto	u13670
 25540  008D68                     u13671:
 25541  008D68  EFC4  F046         	goto	l1884
 25542  008D6C                     u13670:
 25543  008D6C                     
 25544                           ;nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 25545  008D6C  EE20 F003          	lfsr	2,3
 25546  008D70  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 25547  008D72  26D9               	addwf	fsr2l,f,c
 25548  008D74  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 25549  008D76  22DA               	addwfc	fsr2h,f,c
 25550  008D78  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 25551  008D7E  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 25552  008D84  EFC6  F046         	goto	l1885
 25553  008D88                     l1884:
 25554                           
 25555                           ;nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 25556  008D88  6808               	setf	?_NWK_RouteNextHop^0,c
 25557  008D8A  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 25558  008D8C                     l1885:
 25559  008D8C  0012               	return		;funcret
 25560  008D8E                     __end_of_NWK_RouteNextHop:
 25561                           	opt callstack 0
 25562                           
 25563 ;; *************** function _NWK_RouteFindEntry *****************
 25564 ;; Defined at:
 25565 ;;		line 91 in file "nwk/nwk_src/nwkRoute.c"
 25566 ;; Parameters:    Size  Location     Type
 25567 ;;  dst             2    1[COMRAM] unsigned short 
 25568 ;;  multicast       1    3[COMRAM] unsigned char 
 25569 ;; Auto vars:     Size  Location     Type
 25570 ;;  i               1    6[COMRAM] unsigned char 
 25571 ;; Return value:  Size  Location     Type
 25572 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 25573 ;; Registers used:
 25574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25575 ;; Tracked objects:
 25576 ;;		On entry : 0/0
 25577 ;;		On exit  : 0/0
 25578 ;;		Unchanged: 0/0
 25579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25580 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25584 ;;Total ram usage:        6 bytes
 25585 ;; Hardware stack levels used:    1
 25586 ;; Hardware stack levels required when called:    7
 25587 ;; This function calls:
 25588 ;;		Nothing
 25589 ;; This function is called by:
 25590 ;;		_NWK_RouteNextHop
 25591 ;;		_nwkRouteRemove
 25592 ;;		_nwkRouteFrameReceived
 25593 ;;		_nwkRouteFrameSent
 25594 ;;		_nwkRouteUpdateEntry
 25595 ;; This function uses a non-reentrant model
 25596 ;;
 25597                           
 25598                           	psect	text154
 25599  008188                     __ptext154:
 25600                           	opt callstack 0
 25601  008188                     _NWK_RouteFindEntry:
 25602                           	opt callstack 19
 25603  008188                     
 25604                           ;nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, uin
      +                          t8_t multicast);nwk/nwk_src/nwkRoute.c: 92: {;nwk/nwk_src/nwkRoute.c: 93:   for (uint8_t
      +                           i = 0; i < 10; i++)
 25605  008188  0E00               	movlw	0
 25606  00818A  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 25607  00818C                     l14291:
 25608                           
 25609                           ;nwk/nwk_src/nwkRoute.c: 94:   {;nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable[i].ds
      +                          tAddr == dst &&
 25610  00818C  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25611  00818E  0D07               	mullw	7
 25612  008190  0E81               	movlw	low (_nwkRouteTable+1)
 25613  008192  24F3               	addwf	243,w,c
 25614  008194  6ED9               	movwf	fsr2l,c
 25615  008196  0E02               	movlw	high (_nwkRouteTable+1)
 25616  008198  20F4               	addwfc	prodh,w,c
 25617  00819A  6EDA               	movwf	fsr2h,c
 25618  00819C  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 25619  00819E  18DE               	xorwf	postinc2,w,c
 25620  0081A0  E107               	bnz	u13411
 25621  0081A2  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 25622  0081A4  18DE               	xorwf	postinc2,w,c
 25623  0081A6  A4D8               	btfss	status,2,c
 25624  0081A8  EFD8  F040         	goto	u13411
 25625  0081AC  EFDA  F040         	goto	u13410
 25626  0081B0                     u13411:
 25627  0081B0  EFFE  F040         	goto	l14299
 25628  0081B4                     u13410:
 25629  0081B4  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25630  0081B6  0D07               	mullw	7
 25631  0081B8  0E80               	movlw	low _nwkRouteTable
 25632  0081BA  24F3               	addwf	243,w,c
 25633  0081BC  6ED9               	movwf	fsr2l,c
 25634  0081BE  0E02               	movlw	high _nwkRouteTable
 25635  0081C0  20F4               	addwfc	prodh,w,c
 25636  0081C2  6EDA               	movwf	fsr2h,c
 25637  0081C4  0102               	movlb	2	; () banked
 25638  0081C6  B2DF               	btfsc	indf2,1,c
 25639  0081C8  EFE8  F040         	goto	u13421
 25640  0081CC  EFEB  F040         	goto	u13420
 25641  0081D0                     u13421:
 25642  0081D0  0E01               	movlw	1
 25643  0081D2  EFEC  F040         	goto	u13426
 25644  0081D6                     u13420:
 25645  0081D6  0E00               	movlw	0
 25646  0081D8                     u13426:
 25647  0081D8  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 25648  0081DA  A4D8               	btfss	status,2,c
 25649  0081DC  EFF2  F040         	goto	u13431
 25650  0081E0  EFF4  F040         	goto	u13430
 25651  0081E4                     u13431:
 25652  0081E4  EFFE  F040         	goto	l14299
 25653  0081E8                     u13430:
 25654  0081E8                     
 25655                           ; BSR set to: 2
 25656                           ;nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 25657  0081E8  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25658  0081EA  0D07               	mullw	7
 25659  0081EC  0E80               	movlw	low _nwkRouteTable
 25660  0081EE  24F3               	addwf	243,w,c
 25661  0081F0  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 25662  0081F2  0E02               	movlw	high _nwkRouteTable
 25663  0081F4  20F4               	addwfc	prodh,w,c
 25664  0081F6  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 25665  0081F8  EF0B  F041         	goto	l1866
 25666  0081FC                     l14299:
 25667                           
 25668                           ;nwk/nwk_src/nwkRoute.c: 98:   }
 25669  0081FC  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 25670  0081FE  0E09               	movlw	9
 25671  008200  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 25672  008202  EF05  F041         	goto	u13441
 25673  008206  EF07  F041         	goto	u13440
 25674  00820A                     u13441:
 25675  00820A  EFC6  F040         	goto	l14291
 25676  00820E                     u13440:
 25677  00820E                     
 25678                           ;nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 25679  00820E  0E00               	movlw	0
 25680  008210  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 25681  008212  0E00               	movlw	0
 25682  008214  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 25683  008216                     l1866:
 25684  008216  0012               	return		;funcret
 25685  008218                     __end_of_NWK_RouteFindEntry:
 25686                           	opt callstack 0
 25687                           
 25688 ;; *************** function _NWK_GroupIsMember *****************
 25689 ;; Defined at:
 25690 ;;		line 101 in file "nwk/nwk_src/nwkGroup.c"
 25691 ;; Parameters:    Size  Location     Type
 25692 ;;  group           2    1[COMRAM] unsigned short 
 25693 ;; Auto vars:     Size  Location     Type
 25694 ;;  i               1    5[COMRAM] unsigned char 
 25695 ;; Return value:  Size  Location     Type
 25696 ;;                  1    wreg      _Bool 
 25697 ;; Registers used:
 25698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25699 ;; Tracked objects:
 25700 ;;		On entry : 0/0
 25701 ;;		On exit  : 0/0
 25702 ;;		Unchanged: 0/0
 25703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25707 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25708 ;;Total ram usage:        5 bytes
 25709 ;; Hardware stack levels used:    1
 25710 ;; Hardware stack levels required when called:    7
 25711 ;; This function calls:
 25712 ;;		Nothing
 25713 ;; This function is called by:
 25714 ;;		_nwkRoutePrepareTx
 25715 ;;		_nwkRxHandleReceivedFrame
 25716 ;; This function uses a non-reentrant model
 25717 ;;
 25718                           
 25719                           	psect	text155
 25720  008FF0                     __ptext155:
 25721                           	opt callstack 0
 25722  008FF0                     _NWK_GroupIsMember:
 25723                           	opt callstack 19
 25724  008FF0                     
 25725                           ;nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);nwk/nwk_src/nwkGro
      +                          up.c: 102: {;nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 25726  008FF0  0E00               	movlw	0
 25727  008FF2  6E06               	movwf	NWK_GroupIsMember@i^0,c
 25728  008FF4                     l14467:
 25729                           
 25730                           ;nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 25731  008FF4  5006               	movf	NWK_GroupIsMember@i^0,w,c
 25732  008FF6  0D02               	mullw	2
 25733  008FF8  0E28               	movlw	low _nwkGroups
 25734  008FFA  24F3               	addwf	243,w,c
 25735  008FFC  6ED9               	movwf	fsr2l,c
 25736  008FFE  0E01               	movlw	high _nwkGroups
 25737  009000  20F4               	addwfc	prodh,w,c
 25738  009002  6EDA               	movwf	fsr2h,c
 25739  009004  5002               	movf	NWK_GroupIsMember@group^0,w,c
 25740  009006  18DE               	xorwf	postinc2,w,c
 25741  009008  E107               	bnz	u13651
 25742  00900A  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 25743  00900C  18DE               	xorwf	postinc2,w,c
 25744  00900E  A4D8               	btfss	status,2,c
 25745  009010  EF0C  F048         	goto	u13651
 25746  009014  EF0E  F048         	goto	u13650
 25747  009018                     u13651:
 25748  009018  EF11  F048         	goto	l14473
 25749  00901C                     u13650:
 25750  00901C                     
 25751                           ;nwk/nwk_src/nwkGroup.c: 105:       return 1;
 25752  00901C  0E01               	movlw	1
 25753  00901E  EF1B  F048         	goto	l1828
 25754  009022                     l14473:
 25755  009022  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 25756  009024  0E09               	movlw	9
 25757  009026  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 25758  009028  EF18  F048         	goto	u13661
 25759  00902C  EF1A  F048         	goto	u13660
 25760  009030                     u13661:
 25761  009030  EFFA  F047         	goto	l14467
 25762  009034                     u13660:
 25763  009034                     
 25764                           ;nwk/nwk_src/nwkGroup.c: 106:   return 0;
 25765  009034  0E00               	movlw	0
 25766  009036                     l1828:
 25767  009036  0012               	return		;funcret
 25768  009038                     __end_of_NWK_GroupIsMember:
 25769                           	opt callstack 0
 25770                           
 25771 ;; *************** function _nwkFrameAlloc *****************
 25772 ;; Defined at:
 25773 ;;		line 80 in file "nwk/nwk_src/nwkFrame.c"
 25774 ;; Parameters:    Size  Location     Type
 25775 ;;		None
 25776 ;; Auto vars:     Size  Location     Type
 25777 ;;  i               1   17[COMRAM] unsigned char 
 25778 ;; Return value:  Size  Location     Type
 25779 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 25780 ;; Registers used:
 25781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25782 ;; Tracked objects:
 25783 ;;		On entry : 0/0
 25784 ;;		On exit  : 0/0
 25785 ;;		Unchanged: 0/0
 25786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25790 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25791 ;;Total ram usage:        5 bytes
 25792 ;; Hardware stack levels used:    1
 25793 ;; Hardware stack levels required when called:    8
 25794 ;; This function calls:
 25795 ;;		_memset
 25796 ;; This function is called by:
 25797 ;;		_nwkDataReqSendFrame
 25798 ;;		_nwkRouteSendRouteError
 25799 ;;		_PHY_DataInd
 25800 ;;		_nwkRxSendAck
 25801 ;;		_nwkTxBroadcastFrame
 25802 ;; This function uses a non-reentrant model
 25803 ;;
 25804                           
 25805                           	psect	text156
 25806  0071FC                     __ptext156:
 25807                           	opt callstack 0
 25808  0071FC                     _nwkFrameAlloc:
 25809                           	opt callstack 17
 25810  0071FC                     
 25811                           ;nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 25812  0071FC  0E00               	movlw	0
 25813  0071FE  6E12               	movwf	nwkFrameAlloc@i^0,c
 25814  007200                     l14731:
 25815                           
 25816                           ;nwk/nwk_src/nwkFrame.c: 83:   {;nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STATE_FRE
      +                          E == nwkFrameFrames[i].state)
 25817  007200  5012               	movf	nwkFrameAlloc@i^0,w,c
 25818  007202  0D89               	mullw	137
 25819  007204  0EBD               	movlw	low _nwkFrameFrames
 25820  007206  24F3               	addwf	243,w,c
 25821  007208  6ED9               	movwf	fsr2l,c
 25822  00720A  0E05               	movlw	high _nwkFrameFrames
 25823  00720C  20F4               	addwfc	prodh,w,c
 25824  00720E  6EDA               	movwf	fsr2h,c
 25825  007210  50DF               	movf	indf2,w,c
 25826  007212  A4D8               	btfss	status,2,c
 25827  007214  EF0E  F039         	goto	u13971
 25828  007218  EF10  F039         	goto	u13970
 25829  00721C                     u13971:
 25830  00721C  EF55  F039         	goto	l14745
 25831  007220                     u13970:
 25832  007220                     
 25833                           ;nwk/nwk_src/nwkFrame.c: 85:     {;nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFrameFra
      +                          mes[i], 0, sizeof(NwkFrame_t));
 25834  007220  5012               	movf	nwkFrameAlloc@i^0,w,c
 25835  007222  0D89               	mullw	137
 25836  007224  0EBD               	movlw	low _nwkFrameFrames
 25837  007226  24F3               	addwf	243,w,c
 25838  007228  6E02               	movwf	memset@dest^0,c
 25839  00722A  0E05               	movlw	high _nwkFrameFrames
 25840  00722C  20F4               	addwfc	prodh,w,c
 25841  00722E  6E03               	movwf	(memset@dest+1)^0,c
 25842  007230  0E00               	movlw	0
 25843  007232  6E05               	movwf	(memset@c+1)^0,c
 25844  007234  0E00               	movlw	0
 25845  007236  6E04               	movwf	memset@c^0,c
 25846  007238  0E00               	movlw	0
 25847  00723A  6E07               	movwf	(memset@n+1)^0,c
 25848  00723C  0E89               	movlw	137
 25849  00723E  6E06               	movwf	memset@n^0,c
 25850  007240  ECA5  F023         	call	_memset	;wreg free
 25851  007244                     
 25852                           ;nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 25853  007244  5012               	movf	nwkFrameAlloc@i^0,w,c
 25854  007246  0D89               	mullw	137
 25855  007248  0EBE               	movlw	low (_nwkFrameFrames+1)
 25856  00724A  24F3               	addwf	243,w,c
 25857  00724C  6ED9               	movwf	fsr2l,c
 25858  00724E  0E05               	movlw	high (_nwkFrameFrames+1)
 25859  007250  20F4               	addwfc	prodh,w,c
 25860  007252  6EDA               	movwf	fsr2h,c
 25861  007254  0E10               	movlw	16
 25862  007256  6EDF               	movwf	indf2,c
 25863  007258                     
 25864                           ;nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data + 
      +                          sizeof(NwkFrameHeader_t);
 25865  007258  5012               	movf	nwkFrameAlloc@i^0,w,c
 25866  00725A  0D89               	mullw	137
 25867  00725C  0EBD               	movlw	low _nwkFrameFrames
 25868  00725E  6E10               	movwf	??_nwkFrameAlloc^0,c
 25869  007260  0E05               	movlw	high _nwkFrameFrames
 25870  007262  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 25871  007264  0E12               	movlw	18
 25872  007266  2610               	addwf	??_nwkFrameAlloc^0,f,c
 25873  007268  0E00               	movlw	0
 25874  00726A  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 25875  00726C  50F3               	movf	243,w,c
 25876  00726E  2610               	addwf	??_nwkFrameAlloc^0,f,c
 25877  007270  50F4               	movf	244,w,c
 25878  007272  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 25879  007274  5012               	movf	nwkFrameAlloc@i^0,w,c
 25880  007276  0D89               	mullw	137
 25881  007278  0E3E               	movlw	low (_nwkFrameFrames+129)
 25882  00727A  24F3               	addwf	243,w,c
 25883  00727C  6ED9               	movwf	fsr2l,c
 25884  00727E  0E06               	movlw	high (_nwkFrameFrames+129)
 25885  007280  20F4               	addwfc	prodh,w,c
 25886  007282  6EDA               	movwf	fsr2h,c
 25887  007284  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 25888  00728A  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 25889  007290                     
 25890                           ;nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 25891  007290  0101               	movlb	1	; () banked
 25892  007292  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 25893  007294  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 25894  007296                     
 25895                           ; BSR set to: 1
 25896                           ;nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 25897  007296  5012               	movf	nwkFrameAlloc@i^0,w,c
 25898  007298  0D89               	mullw	137
 25899  00729A  0EBD               	movlw	low _nwkFrameFrames
 25900  00729C  24F3               	addwf	243,w,c
 25901  00729E  6E0E               	movwf	?_nwkFrameAlloc^0,c
 25902  0072A0  0E05               	movlw	high _nwkFrameFrames
 25903  0072A2  20F4               	addwfc	prodh,w,c
 25904  0072A4  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 25905  0072A6  EF62  F039         	goto	l1793
 25906  0072AA                     l14745:
 25907                           
 25908                           ;nwk/nwk_src/nwkFrame.c: 92:   }
 25909  0072AA  2A12               	incf	nwkFrameAlloc@i^0,f,c
 25910  0072AC  0E04               	movlw	4
 25911  0072AE  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 25912  0072B0  EF5C  F039         	goto	u13981
 25913  0072B4  EF5E  F039         	goto	u13980
 25914  0072B8                     u13981:
 25915  0072B8  EF00  F039         	goto	l14731
 25916  0072BC                     u13980:
 25917  0072BC                     
 25918                           ;nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 25919  0072BC  0E00               	movlw	0
 25920  0072BE  6E0E               	movwf	?_nwkFrameAlloc^0,c
 25921  0072C0  0E00               	movlw	0
 25922  0072C2  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 25923  0072C4                     l1793:
 25924  0072C4  0012               	return		;funcret
 25925  0072C6                     __end_of_nwkFrameAlloc:
 25926                           	opt callstack 0
 25927                           
 25928 ;; *************** function _memset *****************
 25929 ;; Defined at:
 25930 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 25931 ;; Parameters:    Size  Location     Type
 25932 ;;  dest            2    1[COMRAM] PTR void 
 25933 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), cmdBcast@msgstr(64), 
 25934 ;;		 -> cmdSend@msgstr(64), appDataInd@data(65), 
 25935 ;;  c               2    3[COMRAM] int 
 25936 ;;  n               2    5[COMRAM] unsigned int 
 25937 ;; Auto vars:     Size  Location     Type
 25938 ;;  s               2   11[COMRAM] PTR unsigned char 
 25939 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), cmdBcast@msgstr(64), 
 25940 ;;		 -> cmdSend@msgstr(64), appDataInd@data(65), 
 25941 ;;  k               2    9[COMRAM] unsigned int 
 25942 ;; Return value:  Size  Location     Type
 25943 ;;                  2    1[COMRAM] PTR void 
 25944 ;; Registers used:
 25945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25946 ;; Tracked objects:
 25947 ;;		On entry : 0/0
 25948 ;;		On exit  : 0/0
 25949 ;;		Unchanged: 0/0
 25950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25951 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25952 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25954 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25955 ;;Total ram usage:       12 bytes
 25956 ;; Hardware stack levels used:    1
 25957 ;; Hardware stack levels required when called:    7
 25958 ;; This function calls:
 25959 ;;		Nothing
 25960 ;; This function is called by:
 25961 ;;		_appDataInd
 25962 ;;		_cmdSend
 25963 ;;		_cmdBcast
 25964 ;;		_cmdSetTX
 25965 ;;		_processATCommand
 25966 ;;		_nwkFrameAlloc
 25967 ;; This function uses a non-reentrant model
 25968 ;;
 25969                           
 25970                           	psect	text157
 25971  00474A                     __ptext157:
 25972                           	opt callstack 0
 25973  00474A                     _memset:
 25974                           	opt callstack 22
 25975  00474A  0060  F008  F00C   	movff	memset@dest,memset@s
 25976  004750  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 25977  004756  5006               	movf	memset@n^0,w,c
 25978  004758  1007               	iorwf	(memset@n+1)^0,w,c
 25979  00475A  A4D8               	btfss	status,2,c
 25980  00475C  EFB2  F023         	goto	u13731
 25981  004760  EFB4  F023         	goto	u13730
 25982  004764                     u13731:
 25983  004764  EFB6  F023         	goto	l14529
 25984  004768                     u13730:
 25985  004768  EF70  F024         	goto	l3917
 25986  00476C                     l14529:
 25987  00476C  0060  F033  FFD9   	movff	memset@s,fsr2l
 25988  004772  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 25989  004778  0060  F013  FFDF   	movff	memset@c,indf2
 25990  00477E  5006               	movf	memset@n^0,w,c
 25991  004780  240C               	addwf	memset@s^0,w,c
 25992  004782  6E08               	movwf	??_memset^0,c
 25993  004784  5007               	movf	(memset@n+1)^0,w,c
 25994  004786  200D               	addwfc	(memset@s+1)^0,w,c
 25995  004788  6E09               	movwf	(??_memset+1)^0,c
 25996  00478A  0EFF               	movlw	255
 25997  00478C  2408               	addwf	??_memset^0,w,c
 25998  00478E  6ED9               	movwf	fsr2l,c
 25999  004790  0EFF               	movlw	255
 26000  004792  2009               	addwfc	(??_memset+1)^0,w,c
 26001  004794  6EDA               	movwf	fsr2h,c
 26002  004796  0060  F013  FFDF   	movff	memset@c,indf2
 26003  00479C  5007               	movf	(memset@n+1)^0,w,c
 26004  00479E  E107               	bnz	u13741
 26005  0047A0  0E03               	movlw	3
 26006  0047A2  5C06               	subwf	memset@n^0,w,c
 26007  0047A4  B0D8               	btfsc	status,0,c
 26008  0047A6  EFD7  F023         	goto	u13741
 26009  0047AA  EFD9  F023         	goto	u13740
 26010  0047AE                     u13741:
 26011  0047AE  EFDB  F023         	goto	l14535
 26012  0047B2                     u13740:
 26013  0047B2  EF70  F024         	goto	l3917
 26014  0047B6                     l14535:
 26015  0047B6  EE20 F001          	lfsr	2,1
 26016  0047BA  500C               	movf	memset@s^0,w,c
 26017  0047BC  26D9               	addwf	fsr2l,f,c
 26018  0047BE  500D               	movf	(memset@s+1)^0,w,c
 26019  0047C0  22DA               	addwfc	fsr2h,f,c
 26020  0047C2  0060  F013  FFDF   	movff	memset@c,indf2
 26021  0047C8  EE20 F002          	lfsr	2,2
 26022  0047CC  500C               	movf	memset@s^0,w,c
 26023  0047CE  26D9               	addwf	fsr2l,f,c
 26024  0047D0  500D               	movf	(memset@s+1)^0,w,c
 26025  0047D2  22DA               	addwfc	fsr2h,f,c
 26026  0047D4  0060  F013  FFDF   	movff	memset@c,indf2
 26027  0047DA  5006               	movf	memset@n^0,w,c
 26028  0047DC  240C               	addwf	memset@s^0,w,c
 26029  0047DE  6E08               	movwf	??_memset^0,c
 26030  0047E0  5007               	movf	(memset@n+1)^0,w,c
 26031  0047E2  200D               	addwfc	(memset@s+1)^0,w,c
 26032  0047E4  6E09               	movwf	(??_memset+1)^0,c
 26033  0047E6  0EFE               	movlw	254
 26034  0047E8  2408               	addwf	??_memset^0,w,c
 26035  0047EA  6ED9               	movwf	fsr2l,c
 26036  0047EC  0EFF               	movlw	255
 26037  0047EE  2009               	addwfc	(??_memset+1)^0,w,c
 26038  0047F0  6EDA               	movwf	fsr2h,c
 26039  0047F2  0060  F013  FFDF   	movff	memset@c,indf2
 26040  0047F8  5006               	movf	memset@n^0,w,c
 26041  0047FA  240C               	addwf	memset@s^0,w,c
 26042  0047FC  6E08               	movwf	??_memset^0,c
 26043  0047FE  5007               	movf	(memset@n+1)^0,w,c
 26044  004800  200D               	addwfc	(memset@s+1)^0,w,c
 26045  004802  6E09               	movwf	(??_memset+1)^0,c
 26046  004804  0EFD               	movlw	253
 26047  004806  2408               	addwf	??_memset^0,w,c
 26048  004808  6ED9               	movwf	fsr2l,c
 26049  00480A  0EFF               	movlw	255
 26050  00480C  2009               	addwfc	(??_memset+1)^0,w,c
 26051  00480E  6EDA               	movwf	fsr2h,c
 26052  004810  0060  F013  FFDF   	movff	memset@c,indf2
 26053  004816  5007               	movf	(memset@n+1)^0,w,c
 26054  004818  E107               	bnz	u13751
 26055  00481A  0E07               	movlw	7
 26056  00481C  5C06               	subwf	memset@n^0,w,c
 26057  00481E  B0D8               	btfsc	status,0,c
 26058  004820  EF14  F024         	goto	u13751
 26059  004824  EF16  F024         	goto	u13750
 26060  004828                     u13751:
 26061  004828  EF18  F024         	goto	l14541
 26062  00482C                     u13750:
 26063  00482C  EF70  F024         	goto	l3917
 26064  004830                     l14541:
 26065  004830  EE20 F003          	lfsr	2,3
 26066  004834  500C               	movf	memset@s^0,w,c
 26067  004836  26D9               	addwf	fsr2l,f,c
 26068  004838  500D               	movf	(memset@s+1)^0,w,c
 26069  00483A  22DA               	addwfc	fsr2h,f,c
 26070  00483C  0060  F013  FFDF   	movff	memset@c,indf2
 26071  004842  5006               	movf	memset@n^0,w,c
 26072  004844  240C               	addwf	memset@s^0,w,c
 26073  004846  6E08               	movwf	??_memset^0,c
 26074  004848  5007               	movf	(memset@n+1)^0,w,c
 26075  00484A  200D               	addwfc	(memset@s+1)^0,w,c
 26076  00484C  6E09               	movwf	(??_memset+1)^0,c
 26077  00484E  0EFC               	movlw	252
 26078  004850  2408               	addwf	??_memset^0,w,c
 26079  004852  6ED9               	movwf	fsr2l,c
 26080  004854  0EFF               	movlw	255
 26081  004856  2009               	addwfc	(??_memset+1)^0,w,c
 26082  004858  6EDA               	movwf	fsr2h,c
 26083  00485A  0060  F013  FFDF   	movff	memset@c,indf2
 26084  004860  5007               	movf	(memset@n+1)^0,w,c
 26085  004862  E107               	bnz	u13761
 26086  004864  0E09               	movlw	9
 26087  004866  5C06               	subwf	memset@n^0,w,c
 26088  004868  B0D8               	btfsc	status,0,c
 26089  00486A  EF39  F024         	goto	u13761
 26090  00486E  EF3B  F024         	goto	u13760
 26091  004872                     u13761:
 26092  004872  EF3D  F024         	goto	l14547
 26093  004876                     u13760:
 26094  004876  EF70  F024         	goto	l3917
 26095  00487A                     l14547:
 26096  00487A  0060  F030  F008   	movff	memset@s,??_memset
 26097  004880  0060  F034  F009   	movff	memset@s+1,??_memset+1
 26098  004886  1E08               	comf	??_memset^0,f,c
 26099  004888  1E09               	comf	(??_memset+1)^0,f,c
 26100  00488A  4A08               	infsnz	??_memset^0,f,c
 26101  00488C  2A09               	incf	(??_memset+1)^0,f,c
 26102  00488E  0E03               	movlw	3
 26103  004890  1408               	andwf	??_memset^0,w,c
 26104  004892  6E0A               	movwf	memset@k^0,c
 26105  004894  6A0B               	clrf	(memset@k+1)^0,c
 26106  004896  500A               	movf	memset@k^0,w,c
 26107  004898  260C               	addwf	memset@s^0,f,c
 26108  00489A  500B               	movf	(memset@k+1)^0,w,c
 26109  00489C  220D               	addwfc	(memset@s+1)^0,f,c
 26110  00489E  500A               	movf	memset@k^0,w,c
 26111  0048A0  5E06               	subwf	memset@n^0,f,c
 26112  0048A2  500B               	movf	(memset@k+1)^0,w,c
 26113  0048A4  5A07               	subwfb	(memset@n+1)^0,f,c
 26114  0048A6  0EFC               	movlw	252
 26115  0048A8  1606               	andwf	memset@n^0,f,c
 26116  0048AA  0EFF               	movlw	255
 26117  0048AC  1607               	andwf	(memset@n+1)^0,f,c
 26118  0048AE  EF67  F024         	goto	l14555
 26119  0048B2                     l14549:
 26120  0048B2  0060  F033  FFD9   	movff	memset@s,fsr2l
 26121  0048B8  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26122  0048BE  0060  F013  FFDF   	movff	memset@c,indf2
 26123  0048C4  0606               	decf	memset@n^0,f,c
 26124  0048C6  A0D8               	btfss	status,0,c
 26125  0048C8  0607               	decf	(memset@n+1)^0,f,c
 26126  0048CA  4A0C               	infsnz	memset@s^0,f,c
 26127  0048CC  2A0D               	incf	(memset@s+1)^0,f,c
 26128  0048CE                     l14555:
 26129  0048CE  5006               	movf	memset@n^0,w,c
 26130  0048D0  1007               	iorwf	(memset@n+1)^0,w,c
 26131  0048D2  A4D8               	btfss	status,2,c
 26132  0048D4  EF6E  F024         	goto	u13771
 26133  0048D8  EF70  F024         	goto	u13770
 26134  0048DC                     u13771:
 26135  0048DC  EF59  F024         	goto	l14549
 26136  0048E0                     u13770:
 26137  0048E0                     l3917:
 26138  0048E0  0012               	return		;funcret
 26139  0048E2                     __end_of_memset:
 26140                           	opt callstack 0
 26141                           
 26142 ;; *************** function _memcpy *****************
 26143 ;; Defined at:
 26144 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 26145 ;; Parameters:    Size  Location     Type
 26146 ;;  d1              2    7[COMRAM] PTR void 
 26147 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26148 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26149 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), cmdBcast@msgstr(64), NULL(0), 
 26150 ;;		 -> cmdSend@msgstr(64), cmdSend@destaddr(5), 
 26151 ;;  s1              2    9[COMRAM] PTR const void 
 26152 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26153 ;;		 -> ledqueue(96), STR_53(2), STR_52(2), cmdSetAES@AESstr(32), 
 26154 ;;		 -> atCommand(80), cmdBcast@msgstr(64), NULL(0), cmdSend@msgstr(64), 
 26155 ;;  n               2   11[COMRAM] unsigned int 
 26156 ;; Auto vars:     Size  Location     Type
 26157 ;;  s               2   16[COMRAM] PTR const unsigned char 
 26158 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26159 ;;		 -> ledqueue(96), STR_53(2), STR_52(2), cmdSetAES@AESstr(32), 
 26160 ;;		 -> atCommand(80), cmdBcast@msgstr(64), NULL(0), cmdSend@msgstr(64), 
 26161 ;;  d               2   14[COMRAM] PTR unsigned char 
 26162 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26163 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26164 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), cmdBcast@msgstr(64), NULL(0), 
 26165 ;;		 -> cmdSend@msgstr(64), cmdSend@destaddr(5), 
 26166 ;;  tmp             1   13[COMRAM] unsigned char 
 26167 ;; Return value:  Size  Location     Type
 26168 ;;                  2    7[COMRAM] PTR void 
 26169 ;; Registers used:
 26170 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26171 ;; Tracked objects:
 26172 ;;		On entry : 0/0
 26173 ;;		On exit  : 0/0
 26174 ;;		Unchanged: 0/0
 26175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26177 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26179 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26180 ;;Total ram usage:       11 bytes
 26181 ;; Hardware stack levels used:    1
 26182 ;; Hardware stack levels required when called:    7
 26183 ;; This function calls:
 26184 ;;		Nothing
 26185 ;; This function is called by:
 26186 ;;		_cmdSend
 26187 ;;		_cmdBcast
 26188 ;;		_cmdSetAES
 26189 ;;		_cmdSetRFCH
 26190 ;;		_cmdSetTX
 26191 ;;		_cmdSetCADRSSI
 26192 ;;		_cmdSetSF
 26193 ;;		_CircularBufferPushBack
 26194 ;;		_nwkDataReqSendFrame
 26195 ;;		_PHY_DataInd
 26196 ;;		_nwkTxBroadcastFrame
 26197 ;;		_CircularBufferPopFront
 26198 ;; This function uses a non-reentrant model
 26199 ;;
 26200                           
 26201                           	psect	text158
 26202  0083AE                     __ptext158:
 26203                           	opt callstack 0
 26204  0083AE                     _memcpy:
 26205                           	opt callstack 19
 26206  0083AE  0060  F028  F011   	movff	memcpy@s1,memcpy@s
 26207  0083B4  0060  F02C  F012   	movff	memcpy@s1+1,memcpy@s+1
 26208  0083BA  0060  F020  F00F   	movff	memcpy@d1,memcpy@d
 26209  0083C0  0060  F024  F010   	movff	memcpy@d1+1,memcpy@d+1
 26210  0083C6  EF08  F042         	goto	l14723
 26211  0083CA                     l14715:
 26212  0083CA  0060  F047  FFF6   	movff	memcpy@s,tblptrl
 26213  0083D0  0060  F04B  FFF7   	movff	memcpy@s+1,tblptrh
 26214  0083D6  0E00               	movlw	low (__mediumconst shr (0+16))
 26215  0083D8  6EF8               	movwf	tblptru,c
 26216  0083DA  0E0F               	movlw	(high __ramtop+-1)
 26217  0083DC  64F7               	cpfsgt	tblptrh,c
 26218  0083DE  D003               	bra	u13957
 26219  0083E0  0008               	tblrd		*
 26220  0083E2  50F5               	movf	tablat,w,c
 26221  0083E4  D007               	bra	u13950
 26222  0083E6                     u13957:
 26223  0083E6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26224  0083EC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26225  0083F2  50EF               	movf	indf0,w,c
 26226  0083F4                     u13950:
 26227  0083F4  6E0E               	movwf	memcpy@tmp^0,c
 26228  0083F6  4A11               	infsnz	memcpy@s^0,f,c
 26229  0083F8  2A12               	incf	(memcpy@s+1)^0,f,c
 26230  0083FA  0060  F03F  FFD9   	movff	memcpy@d,fsr2l
 26231  008400  0060  F043  FFDA   	movff	memcpy@d+1,fsr2h
 26232  008406  0060  F03B  FFDF   	movff	memcpy@tmp,indf2
 26233  00840C  4A0F               	infsnz	memcpy@d^0,f,c
 26234  00840E  2A10               	incf	(memcpy@d+1)^0,f,c
 26235  008410                     l14723:
 26236  008410  060C               	decf	memcpy@n^0,f,c
 26237  008412  A0D8               	btfss	status,0,c
 26238  008414  060D               	decf	(memcpy@n+1)^0,f,c
 26239  008416  280C               	incf	memcpy@n^0,w,c
 26240  008418  E106               	bnz	u13961
 26241  00841A  280D               	incf	(memcpy@n+1)^0,w,c
 26242  00841C  A4D8               	btfss	status,2,c
 26243  00841E  EF13  F042         	goto	u13961
 26244  008422  EF15  F042         	goto	u13960
 26245  008426                     u13961:
 26246  008426  EFE5  F041         	goto	l14715
 26247  00842A                     u13960:
 26248  00842A  0012               	return		;funcret
 26249  00842C                     __end_of_memcpy:
 26250                           	opt callstack 0
 26251                           
 26252 ;; *************** function _nwkDataReqConfirm *****************
 26253 ;; Defined at:
 26254 ;;		line 188 in file "nwk/nwk_src/nwkDataReq.c"
 26255 ;; Parameters:    Size  Location     Type
 26256 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 26257 ;;		 -> NULL(0), nwkDataReq(19), 
 26258 ;; Auto vars:     Size  Location     Type
 26259 ;;  prev            2    5[COMRAM] PTR struct NWK_DataReq_t
 26260 ;;		 -> NULL(0), nwkDataReq(19), 
 26261 ;; Return value:  Size  Location     Type
 26262 ;;                  1    wreg      void 
 26263 ;; Registers used:
 26264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26265 ;; Tracked objects:
 26266 ;;		On entry : 0/0
 26267 ;;		On exit  : 0/0
 26268 ;;		Unchanged: 0/0
 26269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26273 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26274 ;;Total ram usage:        6 bytes
 26275 ;; Hardware stack levels used:    1
 26276 ;; Hardware stack levels required when called:    7
 26277 ;; This function calls:
 26278 ;;		Nothing
 26279 ;; This function is called by:
 26280 ;;		_nwkDataReqTaskHandler
 26281 ;; This function uses a non-reentrant model
 26282 ;;
 26283                           
 26284                           	psect	text159
 26285  0072C6                     __ptext159:
 26286                           	opt callstack 0
 26287  0072C6                     _nwkDataReqConfirm:
 26288                           	opt callstack 20
 26289  0072C6                     
 26290                           ;nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);nwk/nw
      +                          k_src/nwkDataReq.c: 189: {;nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue == req)
 26291  0072C6  5002               	movf	nwkDataReqConfirm@req^0,w,c
 26292  0072C8  0100               	movlb	0	; () banked
 26293  0072CA  19E8               	xorwf	_nwkDataReqQueue& (0+255),w,b
 26294  0072CC  E107               	bnz	u9651
 26295  0072CE  5003               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26296  0072D0  19E9               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 26297  0072D2  A4D8               	btfss	status,2,c
 26298  0072D4  EF6E  F039         	goto	u9651
 26299  0072D8  EF70  F039         	goto	u9650
 26300  0072DC                     u9651:
 26301  0072DC  EF7E  F039         	goto	l11261
 26302  0072E0                     u9650:
 26303  0072E0                     
 26304                           ; BSR set to: 0
 26305                           ;nwk/nwk_src/nwkDataReq.c: 191:   {;nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQueue =
      +                           nwkDataReqQueue->next;
 26306  0072E0  0060  F3A3  FFD9   	movff	_nwkDataReqQueue,fsr2l
 26307  0072E6  0060  F3A7  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 26308  0072EC  006F FF78  F0E8    	movff	postinc2,_nwkDataReqQueue
 26309  0072F2  006F FF74  F0E9    	movff	postdec2,_nwkDataReqQueue+1
 26310                           
 26311                           ;nwk/nwk_src/nwkDataReq.c: 193:   }
 26312  0072F8  EFC2  F039         	goto	l11269
 26313  0072FC                     l11261:
 26314                           
 26315                           ; BSR set to: 0
 26316                           ;nwk/nwk_src/nwkDataReq.c: 195:   {;nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq_t *pr
      +                          ev = nwkDataReqQueue;
 26317  0072FC  0060  F3A0  F006   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 26318  007302  0060  F3A4  F007   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 26319                           
 26320                           ;nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26321  007308  EF92  F039         	goto	l11265
 26322  00730C                     l11263:
 26323                           
 26324                           ;nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 26325  00730C  0060  F01B  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26326  007312  0060  F01F  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26327  007318  006F FF78  F006    	movff	postinc2,nwkDataReqConfirm@prev
 26328  00731E  006F FF74  F007    	movff	postdec2,nwkDataReqConfirm@prev+1
 26329  007324                     l11265:
 26330                           
 26331                           ;nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26332  007324  0060  F01B  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26333  00732A  0060  F01F  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26334  007330  5002               	movf	nwkDataReqConfirm@req^0,w,c
 26335  007332  18DE               	xorwf	postinc2,w,c
 26336  007334  E107               	bnz	u9661
 26337  007336  5003               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26338  007338  18DE               	xorwf	postinc2,w,c
 26339  00733A  A4D8               	btfss	status,2,c
 26340  00733C  EFA2  F039         	goto	u9661
 26341  007340  EFA4  F039         	goto	u9660
 26342  007344                     u9661:
 26343  007344  EF86  F039         	goto	l11263
 26344  007348                     u9660:
 26345  007348                     
 26346                           ;nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 26347  007348  0060  F01B  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26348  00734E  0060  F01F  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26349  007354  006F FF78  F004    	movff	postinc2,??_nwkDataReqConfirm
 26350  00735A  006F FF74  F005    	movff	postdec2,??_nwkDataReqConfirm+1
 26351  007360  0060  F013  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 26352  007366  0060  F017  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 26353  00736C  0060  F01B  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 26354  007372  0060  F01F  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 26355  007378  006F FF7B FFE6     	movff	postinc2,postinc1
 26356  00737E  006F FF77 FFE5     	movff	postdec2,postdec1
 26357  007384                     l11269:
 26358                           
 26359                           ;nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 26360  007384  0101               	movlb	1	; () banked
 26361  007386  0726               	decf	(_nwkIb+38)& (0+255),f,b
 26362  007388  A0D8               	btfss	status,0,c
 26363  00738A  0727               	decf	(_nwkIb+39)& (0+255),f,b
 26364  00738C                     
 26365                           ; BSR set to: 1
 26366  00738C  0012               	return		;funcret
 26367  00738E                     __end_of_nwkDataReqConfirm:
 26368                           	opt callstack 0
 26369                           
 26370 ;; *************** function _SYS_Init *****************
 26371 ;; Defined at:
 26372 ;;		line 58 in file "sys/sys_src/sys.c"
 26373 ;; Parameters:    Size  Location     Type
 26374 ;;		None
 26375 ;; Auto vars:     Size  Location     Type
 26376 ;;		None
 26377 ;; Return value:  Size  Location     Type
 26378 ;;                  1    wreg      void 
 26379 ;; Registers used:
 26380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26381 ;; Tracked objects:
 26382 ;;		On entry : 0/0
 26383 ;;		On exit  : 0/0
 26384 ;;		Unchanged: 0/0
 26385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26390 ;;Total ram usage:        0 bytes
 26391 ;; Hardware stack levels used:    1
 26392 ;; Hardware stack levels required when called:   15
 26393 ;; This function calls:
 26394 ;;		_NWK_Init
 26395 ;;		_PHY_Init
 26396 ;;		_SYS_TimerInit
 26397 ;; This function is called by:
 26398 ;;		_main
 26399 ;; This function uses a non-reentrant model
 26400 ;;
 26401                           
 26402                           	psect	text160
 26403  009C4C                     __ptext160:
 26404                           	opt callstack 0
 26405  009C4C                     _SYS_Init:
 26406                           	opt callstack 15
 26407  009C4C                     
 26408                           ;sys/sys_src/sys.c: 60:   SYS_TimerInit();
 26409  009C4C  EC5D  F04E         	call	_SYS_TimerInit	;wreg free
 26410  009C50                     
 26411                           ;sys/sys_src/sys.c: 61:   PHY_Init();
 26412  009C50  EC81  F04E         	call	_PHY_Init	;wreg free
 26413  009C54                     
 26414                           ;sys/sys_src/sys.c: 62:   NWK_Init();
 26415  009C54  EC78  F044         	call	_NWK_Init	;wreg free
 26416  009C58  0012               	return		;funcret
 26417  009C5A                     __end_of_SYS_Init:
 26418                           	opt callstack 0
 26419                           
 26420 ;; *************** function _SYS_TimerInit *****************
 26421 ;; Defined at:
 26422 ;;		line 63 in file "sys/sys_src/sysTimer.c"
 26423 ;; Parameters:    Size  Location     Type
 26424 ;;		None
 26425 ;; Auto vars:     Size  Location     Type
 26426 ;;		None
 26427 ;; Return value:  Size  Location     Type
 26428 ;;                  1    wreg      void 
 26429 ;; Registers used:
 26430 ;;		wreg, status,2, status,0
 26431 ;; Tracked objects:
 26432 ;;		On entry : 0/0
 26433 ;;		On exit  : 0/0
 26434 ;;		Unchanged: 0/0
 26435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26440 ;;Total ram usage:        0 bytes
 26441 ;; Hardware stack levels used:    1
 26442 ;; Hardware stack levels required when called:    7
 26443 ;; This function calls:
 26444 ;;		Nothing
 26445 ;; This function is called by:
 26446 ;;		_SYS_Init
 26447 ;; This function uses a non-reentrant model
 26448 ;;
 26449                           
 26450                           	psect	text161
 26451  009CBA                     __ptext161:
 26452                           	opt callstack 0
 26453  009CBA                     _SYS_TimerInit:
 26454                           	opt callstack 22
 26455  009CBA                     
 26456                           ;sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 26457  009CBA  0E00               	movlw	0
 26458  009CBC  0100               	movlb	0	; () banked
 26459  009CBE  6FE6               	movwf	_timers& (0+255),b
 26460  009CC0  0E00               	movlw	0
 26461  009CC2  6FE7               	movwf	(_timers+1)& (0+255),b
 26462  009CC4                     
 26463                           ; BSR set to: 0
 26464  009CC4  0012               	return		;funcret
 26465  009CC6                     __end_of_SYS_TimerInit:
 26466                           	opt callstack 0
 26467                           
 26468 ;; *************** function _PHY_Init *****************
 26469 ;; Defined at:
 26470 ;;		line 830 in file "phy/sx1216/phy_src/phy.c"
 26471 ;; Parameters:    Size  Location     Type
 26472 ;;		None
 26473 ;; Auto vars:     Size  Location     Type
 26474 ;;		None
 26475 ;; Return value:  Size  Location     Type
 26476 ;;                  1    wreg      void 
 26477 ;; Registers used:
 26478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26479 ;; Tracked objects:
 26480 ;;		On entry : 0/0
 26481 ;;		On exit  : 0/0
 26482 ;;		Unchanged: 0/0
 26483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26488 ;;Total ram usage:        0 bytes
 26489 ;; Hardware stack levels used:    1
 26490 ;; Hardware stack levels required when called:   14
 26491 ;; This function calls:
 26492 ;;		_initRadio
 26493 ;; This function is called by:
 26494 ;;		_SYS_Init
 26495 ;; This function uses a non-reentrant model
 26496 ;;
 26497                           
 26498                           	psect	text162
 26499  009D02                     __ptext162:
 26500                           	opt callstack 0
 26501  009D02                     _PHY_Init:
 26502                           	opt callstack 15
 26503  009D02                     
 26504                           ;phy/sx1216/phy_src/phy.c: 831:     initRadio();
 26505  009D02  EC7D  F027         	call	_initRadio	;wreg free
 26506  009D06  0012               	return		;funcret
 26507  009D08                     __end_of_PHY_Init:
 26508                           	opt callstack 0
 26509                           
 26510 ;; *************** function _initRadio *****************
 26511 ;; Defined at:
 26512 ;;		line 491 in file "phy/sx1216/phy_src/phy.c"
 26513 ;; Parameters:    Size  Location     Type
 26514 ;;		None
 26515 ;; Auto vars:     Size  Location     Type
 26516 ;;  BWset           4    0        unsigned long 
 26517 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 26518 ;;  version         1   54[COMRAM] unsigned char 
 26519 ;; Return value:  Size  Location     Type
 26520 ;;                  1    wreg      void 
 26521 ;; Registers used:
 26522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26523 ;; Tracked objects:
 26524 ;;		On entry : 0/0
 26525 ;;		On exit  : 0/0
 26526 ;;		Unchanged: 0/0
 26527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26529 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26531 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26532 ;;Total ram usage:        7 bytes
 26533 ;; Hardware stack levels used:    1
 26534 ;; Hardware stack levels required when called:   13
 26535 ;; This function calls:
 26536 ;;		_SX1276Read
 26537 ;;		_SX1276Write
 26538 ;;		_computeFRF
 26539 ;;		_enableCrc
 26540 ;;		_explicitHeaderMode
 26541 ;;		_receive
 26542 ;;		_setCodingRate4
 26543 ;;		_setFrequency
 26544 ;;		_setPreambleLength
 26545 ;;		_setSignalBandwidth
 26546 ;;		_setSpreadingFactor
 26547 ;;		_setTxPower
 26548 ;;		_srand
 26549 ;; This function is called by:
 26550 ;;		_cmdSetNaddr
 26551 ;;		_cmdSetRFCH
 26552 ;;		_cmdSetTX
 26553 ;;		_cmdSetCADRSSI
 26554 ;;		_cmdSetSF
 26555 ;;		_radio_engine
 26556 ;;		_PHY_Init
 26557 ;; This function uses a non-reentrant model
 26558 ;;
 26559                           
 26560                           	psect	text163
 26561  004EFA                     __ptext163:
 26562                           	opt callstack 0
 26563  004EFA                     _initRadio:
 26564                           	opt callstack 14
 26565  004EFA  9ABC               	bcf	188,5,c	;volatile
 26566  004EFC                     
 26567                           ;phy/sx1216/phy_src/phy.c: 498:     _delay((unsigned long)((100)*(64000000/4000.0)));
 26568  004EFC  0E09               	movlw	9
 26569  004EFE  6E34               	movwf	(??_initRadio+1)^0,c
 26570  004F00  0E1E               	movlw	30
 26571  004F02  6E33               	movwf	??_initRadio^0,c
 26572  004F04  0EE4               	movlw	228
 26573  004F06                     u17907:
 26574  004F06  2EE8               	decfsz	wreg,f,c
 26575  004F08  D7FE               	bra	u17907
 26576  004F0A  2E33               	decfsz	??_initRadio^0,f,c
 26577  004F0C  D7FC               	bra	u17907
 26578  004F0E  2E34               	decfsz	(??_initRadio+1)^0,f,c
 26579  004F10  D7FA               	bra	u17907
 26580  004F12  D000               	nop2	
 26581  004F14  8ABC               	bsf	188,5,c	;volatile
 26582  004F16                     
 26583                           ;phy/sx1216/phy_src/phy.c: 500:     computeFRF();
 26584  004F16  EC71  F024         	call	_computeFRF	;wreg free
 26585  004F1A                     
 26586                           ;phy/sx1216/phy_src/phy.c: 501:     _delay((unsigned long)((500)*(64000000/4000.0)));
 26587  004F1A  0E29               	movlw	41
 26588  004F1C  6E34               	movwf	(??_initRadio+1)^0,c
 26589  004F1E  0E96               	movlw	150
 26590  004F20  6E33               	movwf	??_initRadio^0,c
 26591  004F22  0E7F               	movlw	127
 26592  004F24                     u17917:
 26593  004F24  2EE8               	decfsz	wreg,f,c
 26594  004F26  D7FE               	bra	u17917
 26595  004F28  2E33               	decfsz	??_initRadio^0,f,c
 26596  004F2A  D7FC               	bra	u17917
 26597  004F2C  2E34               	decfsz	(??_initRadio+1)^0,f,c
 26598  004F2E  D7FA               	bra	u17917
 26599  004F30  F000               	nop	
 26600  004F32                     
 26601                           ;phy/sx1216/phy_src/phy.c: 503:     version = SX1276Read(0x42);
 26602  004F32  0E42               	movlw	66
 26603  004F34  ECA9  F04D         	call	_SX1276Read
 26604  004F38  6E37               	movwf	initRadio@version^0,c
 26605  004F3A                     
 26606                           ;phy/sx1216/phy_src/phy.c: 504:     version++;
 26607  004F3A  2A37               	incf	initRadio@version^0,f,c
 26608  004F3C                     
 26609                           ;phy/sx1216/phy_src/phy.c: 505:     SX1276Write(0x01,0x00);
 26610  004F3C  0E00               	movlw	0
 26611  004F3E  6E0F               	movwf	SX1276Write@data^0,c
 26612  004F40  0E01               	movlw	1
 26613  004F42  ECCC  F04D         	call	_SX1276Write
 26614  004F46                     
 26615                           ;phy/sx1216/phy_src/phy.c: 506:     SX1276Write(0x01,0x80);
 26616  004F46  0E80               	movlw	128
 26617  004F48  6E0F               	movwf	SX1276Write@data^0,c
 26618  004F4A  0E01               	movlw	1
 26619  004F4C  ECCC  F04D         	call	_SX1276Write
 26620  004F50                     
 26621                           ;phy/sx1216/phy_src/phy.c: 508:     setFrequency(fhssList[0]);
 26622  004F50  0EC9               	movlw	low _fhssList
 26623  004F52  6EF6               	movwf	tblptrl,c
 26624  004F54                     	if	1	;There is more than 1 active tblptr byte
 26625  004F54  0EFC               	movlw	high _fhssList
 26626  004F56  6EF7               	movwf	tblptrh,c
 26627  004F58                     	endif
 26628  004F58                     	if	1	;There are 3 active tblptr bytes
 26629  004F58  0E00               	movlw	low (_fhssList shr (0+16))
 26630  004F5A  6EF8               	movwf	tblptru,c
 26631  004F5C                     	endif
 26632  004F5C  0009               	tblrd		*+
 26633  004F5E  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 26634  004F64  0009               	tblrd		*+
 26635  004F66  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 26636  004F6C  0009               	tblrd		*+
 26637  004F6E  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 26638  004F74  000A               	tblrd		*-
 26639  004F76  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 26640  004F7C  ECB2  F02C         	call	_setFrequency	;wreg free
 26641  004F80                     
 26642                           ;phy/sx1216/phy_src/phy.c: 509:     setSpreadingFactor(7);
 26643  004F80  0E07               	movlw	7
 26644  004F82  ECD6  F02D         	call	_setSpreadingFactor
 26645  004F86                     
 26646                           ;phy/sx1216/phy_src/phy.c: 510:     setTxPower(13);
 26647  004F86  0E0D               	movlw	13
 26648  004F88  ECF2  F049         	call	_setTxPower
 26649  004F8C                     
 26650                           ;phy/sx1216/phy_src/phy.c: 511:     setSignalBandwidth(500E3);
 26651  004F8C  0E20               	movlw	32
 26652  004F8E  6E23               	movwf	setSignalBandwidth@sbw^0,c
 26653  004F90  0EA1               	movlw	161
 26654  004F92  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 26655  004F94  0E07               	movlw	7
 26656  004F96  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 26657  004F98  0E00               	movlw	0
 26658  004F9A  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 26659  004F9C  EC2E  F00A         	call	_setSignalBandwidth	;wreg free
 26660  004FA0                     
 26661                           ;phy/sx1216/phy_src/phy.c: 512:     explicitHeaderMode();
 26662  004FA0  EC9D  F04D         	call	_explicitHeaderMode	;wreg free
 26663  004FA4                     
 26664                           ;phy/sx1216/phy_src/phy.c: 513:     setCodingRate4(4);
 26665  004FA4  0E04               	movlw	4
 26666  004FA6  EC18  F047         	call	_setCodingRate4
 26667  004FAA                     
 26668                           ;phy/sx1216/phy_src/phy.c: 514:     setPreambleLength(12);
 26669  004FAA  0E00               	movlw	0
 26670  004FAC  6E12               	movwf	(setPreambleLength@length+1)^0,c
 26671  004FAE  0E0C               	movlw	12
 26672  004FB0  6E11               	movwf	setPreambleLength@length^0,c
 26673  004FB2  EC85  F04D         	call	_setPreambleLength	;wreg free
 26674  004FB6                     
 26675                           ;phy/sx1216/phy_src/phy.c: 515:     enableCrc();
 26676  004FB6  ECD7  F04D         	call	_enableCrc	;wreg free
 26677  004FBA                     
 26678                           ;phy/sx1216/phy_src/phy.c: 516:     SX1276Write(0x0E, 0x0);
 26679  004FBA  0E00               	movlw	0
 26680  004FBC  6E0F               	movwf	SX1276Write@data^0,c
 26681  004FBE  0E0E               	movlw	14
 26682  004FC0  ECCC  F04D         	call	_SX1276Write
 26683  004FC4                     
 26684                           ;phy/sx1216/phy_src/phy.c: 517:     SX1276Write(0x0F, 0);
 26685  004FC4  0E00               	movlw	0
 26686  004FC6  6E0F               	movwf	SX1276Write@data^0,c
 26687  004FC8  0E0F               	movlw	15
 26688  004FCA  ECCC  F04D         	call	_SX1276Write
 26689  004FCE                     
 26690                           ;phy/sx1216/phy_src/phy.c: 520:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 26691  004FCE  0E0C               	movlw	12
 26692  004FD0  ECA9  F04D         	call	_SX1276Read
 26693  004FD4  0903               	iorlw	3
 26694  004FD6  6E0F               	movwf	SX1276Write@data^0,c
 26695  004FD8  0E0C               	movlw	12
 26696  004FDA  ECCC  F04D         	call	_SX1276Write
 26697  004FDE                     
 26698                           ;phy/sx1216/phy_src/phy.c: 523:     SX1276Write(0x26, 0x04);
 26699  004FDE  0E04               	movlw	4
 26700  004FE0  6E0F               	movwf	SX1276Write@data^0,c
 26701  004FE2  0E26               	movlw	38
 26702  004FE4  ECCC  F04D         	call	_SX1276Write
 26703  004FE8                     
 26704                           ;phy/sx1216/phy_src/phy.c: 526:     SX1276Write(0x36,0x02);
 26705  004FE8  0E02               	movlw	2
 26706  004FEA  6E0F               	movwf	SX1276Write@data^0,c
 26707  004FEC  0E36               	movlw	54
 26708  004FEE  ECCC  F04D         	call	_SX1276Write
 26709  004FF2                     
 26710                           ;phy/sx1216/phy_src/phy.c: 527:     SX1276Write(0x3A,0x64);
 26711  004FF2  0E64               	movlw	100
 26712  004FF4  6E0F               	movwf	SX1276Write@data^0,c
 26713  004FF6  0E3A               	movlw	58
 26714  004FF8  ECCC  F04D         	call	_SX1276Write
 26715  004FFC                     
 26716                           ;phy/sx1216/phy_src/phy.c: 539:     SX1276Write(0x1F,255);
 26717  004FFC  0EFF               	movlw	255
 26718  004FFE  6E0F               	movwf	SX1276Write@data^0,c
 26719  005000  0E1F               	movlw	31
 26720  005002  ECCC  F04D         	call	_SX1276Write
 26721  005006                     
 26722                           ;phy/sx1216/phy_src/phy.c: 541:     receive(0);
 26723  005006  0E00               	movlw	0
 26724  005008  ECAF  F047         	call	_receive
 26725  00500C                     
 26726                           ;phy/sx1216/phy_src/phy.c: 543:     _delay((unsigned long)((100)*(64000000/4000.0)));
 26727  00500C  0E09               	movlw	9
 26728  00500E  6E34               	movwf	(??_initRadio+1)^0,c
 26729  005010  0E1E               	movlw	30
 26730  005012  6E33               	movwf	??_initRadio^0,c
 26731  005014  0EE4               	movlw	228
 26732  005016                     u17927:
 26733  005016  2EE8               	decfsz	wreg,f,c
 26734  005018  D7FE               	bra	u17927
 26735  00501A  2E33               	decfsz	??_initRadio^0,f,c
 26736  00501C  D7FC               	bra	u17927
 26737  00501E  2E34               	decfsz	(??_initRadio+1)^0,f,c
 26738  005020  D7FA               	bra	u17927
 26739  005022  D000               	nop2	
 26740  005024                     
 26741                           ;phy/sx1216/phy_src/phy.c: 545:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2C);
 26742  005024  0E2C               	movlw	44
 26743  005026  ECA9  F04D         	call	_SX1276Read
 26744  00502A  6E33               	movwf	??_initRadio^0,c
 26745  00502C  0E2C               	movlw	44
 26746  00502E  ECA9  F04D         	call	_SX1276Read
 26747  005032  6E34               	movwf	(??_initRadio+1)^0,c
 26748  005034  5034               	movf	(??_initRadio+1)^0,w,c
 26749  005036  6E36               	movwf	(??_initRadio+3)^0,c
 26750  005038  6A35               	clrf	(??_initRadio+2)^0,c
 26751  00503A  5033               	movf	??_initRadio^0,w,c
 26752  00503C  2435               	addwf	(??_initRadio+2)^0,w,c
 26753  00503E  6E38               	movwf	initRadio@wideRSSI^0,c
 26754  005040  0E00               	movlw	0
 26755  005042  2036               	addwfc	(??_initRadio+3)^0,w,c
 26756  005044  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 26757  005046                     
 26758                           ;phy/sx1216/phy_src/phy.c: 547:     srand(wideRSSI);
 26759  005046  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 26760  00504C  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 26761  005052  ECC3  F04A         	call	_srand	;wreg free
 26762  005056  0012               	return		;funcret
 26763  005058                     __end_of_initRadio:
 26764                           	opt callstack 0
 26765                           
 26766 ;; *************** function _srand *****************
 26767 ;; Defined at:
 26768 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 26769 ;; Parameters:    Size  Location     Type
 26770 ;;  s               2    1[COMRAM] unsigned int 
 26771 ;; Auto vars:     Size  Location     Type
 26772 ;;		None
 26773 ;; Return value:  Size  Location     Type
 26774 ;;                  1    wreg      void 
 26775 ;; Registers used:
 26776 ;;		wreg, status,2, status,0
 26777 ;; Tracked objects:
 26778 ;;		On entry : 0/0
 26779 ;;		On exit  : 0/0
 26780 ;;		Unchanged: 0/0
 26781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26784 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26785 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26786 ;;Total ram usage:        6 bytes
 26787 ;; Hardware stack levels used:    1
 26788 ;; Hardware stack levels required when called:    7
 26789 ;; This function calls:
 26790 ;;		Nothing
 26791 ;; This function is called by:
 26792 ;;		_initRadio
 26793 ;; This function uses a non-reentrant model
 26794 ;;
 26795                           
 26796                           	psect	text164
 26797  009586                     __ptext164:
 26798                           	opt callstack 0
 26799  009586                     _srand:
 26800                           	opt callstack 19
 26801  009586  0EFF               	movlw	255
 26802  009588  6E04               	movwf	??_srand^0,c
 26803  00958A  0EFF               	movlw	255
 26804  00958C  6E05               	movwf	(??_srand+1)^0,c
 26805  00958E  0060  F008  F006   	movff	srand@s,??_srand+2
 26806  009594  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 26807  00959A  5004               	movf	??_srand^0,w,c
 26808  00959C  2606               	addwf	(??_srand+2)^0,f,c
 26809  00959E  5005               	movf	(??_srand+1)^0,w,c
 26810  0095A0  2207               	addwfc	(??_srand+3)^0,f,c
 26811  0095A2  0060  F018  F1D1   	movff	??_srand+2,_seed
 26812  0095A8  0060  F01C  F1D2   	movff	??_srand+3,_seed+1
 26813  0095AE  0101               	movlb	1	; () banked
 26814  0095B0  6BD3               	clrf	(_seed+2)& (0+255),b
 26815  0095B2  6BD4               	clrf	(_seed+3)& (0+255),b
 26816  0095B4  6BD5               	clrf	(_seed+4)& (0+255),b
 26817  0095B6  6BD6               	clrf	(_seed+5)& (0+255),b
 26818  0095B8  6BD7               	clrf	(_seed+6)& (0+255),b
 26819  0095BA  6BD8               	clrf	(_seed+7)& (0+255),b
 26820  0095BC                     
 26821                           ; BSR set to: 1
 26822  0095BC  0012               	return		;funcret
 26823  0095BE                     __end_of_srand:
 26824                           	opt callstack 0
 26825                           
 26826 ;; *************** function _setTxPower *****************
 26827 ;; Defined at:
 26828 ;;		line 139 in file "phy/sx1216/phy_src/phy.c"
 26829 ;; Parameters:    Size  Location     Type
 26830 ;;  power           1    wreg     unsigned char 
 26831 ;; Auto vars:     Size  Location     Type
 26832 ;;  power           1   16[COMRAM] unsigned char 
 26833 ;; Return value:  Size  Location     Type
 26834 ;;                  1    wreg      void 
 26835 ;; Registers used:
 26836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26837 ;; Tracked objects:
 26838 ;;		On entry : 0/0
 26839 ;;		On exit  : 0/0
 26840 ;;		Unchanged: 0/0
 26841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26846 ;;Total ram usage:        1 bytes
 26847 ;; Hardware stack levels used:    1
 26848 ;; Hardware stack levels required when called:   11
 26849 ;; This function calls:
 26850 ;;		_SX1276Write
 26851 ;; This function is called by:
 26852 ;;		_initRadio
 26853 ;;		_PHY_SetTxPower
 26854 ;; This function uses a non-reentrant model
 26855 ;;
 26856                           
 26857                           	psect	text165
 26858  0093E4                     __ptext165:
 26859                           	opt callstack 0
 26860  0093E4                     _setTxPower:
 26861                           	opt callstack 15
 26862                           
 26863                           ; BSR set to: 1
 26864                           ;incstack = 0
 26865                           ;setTxPower@power stored from wreg
 26866  0093E4  6E11               	movwf	setTxPower@power^0,c
 26867  0093E6                     
 26868                           ;phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);phy/sx1216/phy_src/phy.c:
      +                           140: {;phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 26869  0093E6  0E02               	movlw	2
 26870  0093E8  6011               	cpfslt	setTxPower@power^0,c
 26871  0093EA  EFF9  F049         	goto	u14791
 26872  0093EE  EFFB  F049         	goto	u14790
 26873  0093F2                     u14791:
 26874  0093F2  EFFD  F049         	goto	l15371
 26875  0093F6                     u14790:
 26876  0093F6                     
 26877                           ;phy/sx1216/phy_src/phy.c: 142:     {;phy/sx1216/phy_src/phy.c: 143:         power = 2;
 26878  0093F6  0E02               	movlw	2
 26879  0093F8  6E11               	movwf	setTxPower@power^0,c
 26880  0093FA                     l15371:
 26881                           
 26882                           ;phy/sx1216/phy_src/phy.c: 145:     if(power > 5)
 26883  0093FA  0E05               	movlw	5
 26884  0093FC  6411               	cpfsgt	setTxPower@power^0,c
 26885  0093FE  EF03  F04A         	goto	u14801
 26886  009402  EF05  F04A         	goto	u14800
 26887  009406                     u14801:
 26888  009406  EF07  F04A         	goto	l15375
 26889  00940A                     u14800:
 26890  00940A                     
 26891                           ;phy/sx1216/phy_src/phy.c: 146:     {;phy/sx1216/phy_src/phy.c: 147:         power = 5;
 26892  00940A  0E05               	movlw	5
 26893  00940C  6E11               	movwf	setTxPower@power^0,c
 26894  00940E                     l15375:
 26895                           
 26896                           ;phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 26897  00940E  5011               	movf	setTxPower@power^0,w,c
 26898  009410  0FFE               	addlw	254
 26899  009412  6E11               	movwf	setTxPower@power^0,c
 26900  009414                     
 26901                           ;phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 26902  009414  5011               	movf	setTxPower@power^0,w,c
 26903  009416  09F0               	iorlw	240
 26904  009418  6E0F               	movwf	SX1276Write@data^0,c
 26905  00941A  0E09               	movlw	9
 26906  00941C  ECCC  F04D         	call	_SX1276Write
 26907  009420  0012               	return		;funcret
 26908  009422                     __end_of_setTxPower:
 26909                           	opt callstack 0
 26910                           
 26911 ;; *************** function _setSpreadingFactor *****************
 26912 ;; Defined at:
 26913 ;;		line 198 in file "phy/sx1216/phy_src/phy.c"
 26914 ;; Parameters:    Size  Location     Type
 26915 ;;  sf              1    wreg     unsigned char 
 26916 ;; Auto vars:     Size  Location     Type
 26917 ;;  sf              1   42[COMRAM] unsigned char 
 26918 ;; Return value:  Size  Location     Type
 26919 ;;                  1    wreg      void 
 26920 ;; Registers used:
 26921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26922 ;; Tracked objects:
 26923 ;;		On entry : 0/0
 26924 ;;		On exit  : 0/0
 26925 ;;		Unchanged: 0/0
 26926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26928 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26929 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26930 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26931 ;;Total ram usage:        9 bytes
 26932 ;; Hardware stack levels used:    1
 26933 ;; Hardware stack levels required when called:   12
 26934 ;; This function calls:
 26935 ;;		_SX1276Read
 26936 ;;		_SX1276Write
 26937 ;;		___lldiv
 26938 ;;		_getSignalBandwidth
 26939 ;;		_getSpreadingFactor
 26940 ;; This function is called by:
 26941 ;;		_initRadio
 26942 ;; This function uses a non-reentrant model
 26943 ;;
 26944                           
 26945                           	psect	text166
 26946  005BAC                     __ptext166:
 26947                           	opt callstack 0
 26948  005BAC                     _setSpreadingFactor:
 26949                           	opt callstack 14
 26950                           
 26951                           ;incstack = 0
 26952                           ;setSpreadingFactor@sf stored from wreg
 26953  005BAC  6E2B               	movwf	setSpreadingFactor@sf^0,c
 26954  005BAE                     
 26955                           ;phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);phy/sx1216/phy_src/p
      +                          hy.c: 199: {;phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 26956  005BAE  0E07               	movlw	7
 26957  005BB0  602B               	cpfslt	setSpreadingFactor@sf^0,c
 26958  005BB2  EFDD  F02D         	goto	u14811
 26959  005BB6  EFDF  F02D         	goto	u14810
 26960  005BBA                     u14811:
 26961  005BBA  EFE3  F02D         	goto	l15399
 26962  005BBE                     u14810:
 26963  005BBE                     
 26964                           ;phy/sx1216/phy_src/phy.c: 201:     {;phy/sx1216/phy_src/phy.c: 202:         sf = 7;
 26965  005BBE  0E07               	movlw	7
 26966  005BC0  6E2B               	movwf	setSpreadingFactor@sf^0,c
 26967                           
 26968                           ;phy/sx1216/phy_src/phy.c: 203:     }
 26969  005BC2  EFED  F02D         	goto	l15403
 26970  005BC6                     l15399:
 26971  005BC6  0E0C               	movlw	12
 26972  005BC8  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 26973  005BCA  EFE9  F02D         	goto	u14821
 26974  005BCE  EFEB  F02D         	goto	u14820
 26975  005BD2                     u14821:
 26976  005BD2  EFED  F02D         	goto	l15403
 26977  005BD6                     u14820:
 26978  005BD6                     
 26979                           ;phy/sx1216/phy_src/phy.c: 205:     {;phy/sx1216/phy_src/phy.c: 206:         sf = 12;
 26980  005BD6  0E0C               	movlw	12
 26981  005BD8  6E2B               	movwf	setSpreadingFactor@sf^0,c
 26982  005BDA                     l15403:
 26983                           
 26984                           ;phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 26985  005BDA  0EC3               	movlw	195
 26986  005BDC  6E0F               	movwf	SX1276Write@data^0,c
 26987  005BDE  0E31               	movlw	49
 26988  005BE0  ECCC  F04D         	call	_SX1276Write
 26989  005BE4                     
 26990                           ;phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 26991  005BE4  0E0A               	movlw	10
 26992  005BE6  6E0F               	movwf	SX1276Write@data^0,c
 26993  005BE8  0E37               	movlw	55
 26994  005BEA  ECCC  F04D         	call	_SX1276Write
 26995  005BEE                     
 26996                           ;phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((sf <
      +                          < 4) & 0xf0));
 26997  005BEE  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 26998  005BF4  3A23               	swapf	??_setSpreadingFactor^0,f,c
 26999  005BF6  0EF0               	movlw	240
 27000  005BF8  1623               	andwf	??_setSpreadingFactor^0,f,c
 27001  005BFA  0EF0               	movlw	240
 27002  005BFC  1623               	andwf	??_setSpreadingFactor^0,f,c
 27003  005BFE  0E1E               	movlw	30
 27004  005C00  ECA9  F04D         	call	_SX1276Read
 27005  005C04  0B0F               	andlw	15
 27006  005C06  1023               	iorwf	??_setSpreadingFactor^0,w,c
 27007  005C08  6E0F               	movwf	SX1276Write@data^0,c
 27008  005C0A  0E1E               	movlw	30
 27009  005C0C  ECCC  F04D         	call	_SX1276Write
 27010  005C10                     
 27011                           ;phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / (1L
      +                           << getSpreadingFactor()) ) ;
 27012  005C10  EC2F  F04D         	call	_getSpreadingFactor	;wreg free
 27013  005C14  0E01               	movlw	1
 27014  005C16  6E23               	movwf	??_setSpreadingFactor^0,c
 27015  005C18  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 27016  005C1A  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 27017  005C1C  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 27018  005C1E  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27019  005C20  EF17  F02E         	goto	u14830
 27020  005C24                     u14835:
 27021  005C24  90D8               	bcf	status,0,c
 27022  005C26  3623               	rlcf	??_setSpreadingFactor^0,f,c
 27023  005C28  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 27024  005C2A  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 27025  005C2C  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 27026  005C2E                     u14830:
 27027  005C2E  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27028  005C30  EF12  F02E         	goto	u14835
 27029  005C34  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 27030  005C3A  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 27031  005C40  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 27032  005C46  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 27033  005C4C  EC2C  F028         	call	_getSignalBandwidth	;wreg free
 27034  005C50  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27035  005C56  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27036  005C5C  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27037  005C62  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27038  005C68  EC0A  F03D         	call	___lldiv	;wreg free
 27039  005C6C  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$8334
 27040  005C72  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$8334+1
 27041  005C78  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$8334+2
 27042  005C7E  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$8334+3
 27043  005C84                     
 27044                           ;phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / (1L
      +                           << getSpreadingFactor()) ) ;
 27045  005C84  0EE8               	movlw	232
 27046  005C86  6E16               	movwf	___lldiv@dividend^0,c
 27047  005C88  0E03               	movlw	3
 27048  005C8A  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27049  005C8C  0E00               	movlw	0
 27050  005C8E  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27051  005C90  0E00               	movlw	0
 27052  005C92  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27053  005C94  0060  F09C  F01A   	movff	_setSpreadingFactor$8334,___lldiv@divisor
 27054  005C9A  0060  F0A0  F01B   	movff	_setSpreadingFactor$8334+1,___lldiv@divisor+1
 27055  005CA0  0060  F0A4  F01C   	movff	_setSpreadingFactor$8334+2,___lldiv@divisor+2
 27056  005CA6  0060  F0A8  F01D   	movff	_setSpreadingFactor$8334+3,___lldiv@divisor+3
 27057  005CAC  EC0A  F03D         	call	___lldiv	;wreg free
 27058  005CB0  0060  F058  F152   	movff	?___lldiv,_symbolDuration
 27059  005CB6  0060  F05C  F153   	movff	?___lldiv+1,_symbolDuration+1
 27060  005CBC  0060  F060  F154   	movff	?___lldiv+2,_symbolDuration+2
 27061  005CC2  0060  F064  F155   	movff	?___lldiv+3,_symbolDuration+3
 27062  005CC8  0012               	return		;funcret
 27063  005CCA                     __end_of_setSpreadingFactor:
 27064                           	opt callstack 0
 27065                           
 27066 ;; *************** function _setSignalBandwidth *****************
 27067 ;; Defined at:
 27068 ;;		line 223 in file "phy/sx1216/phy_src/phy.c"
 27069 ;; Parameters:    Size  Location     Type
 27070 ;;  sbw             4   34[COMRAM] unsigned long 
 27071 ;; Auto vars:     Size  Location     Type
 27072 ;;  bw              4   46[COMRAM] unsigned long 
 27073 ;; Return value:  Size  Location     Type
 27074 ;;                  1    wreg      void 
 27075 ;; Registers used:
 27076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27077 ;; Tracked objects:
 27078 ;;		On entry : 0/0
 27079 ;;		On exit  : 0/0
 27080 ;;		Unchanged: 0/0
 27081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27083 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27084 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27085 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27086 ;;Total ram usage:       16 bytes
 27087 ;; Hardware stack levels used:    1
 27088 ;; Hardware stack levels required when called:   12
 27089 ;; This function calls:
 27090 ;;		_SX1276Read
 27091 ;;		_SX1276Write
 27092 ;;		___flge
 27093 ;;		___lldiv
 27094 ;;		___xxtofl
 27095 ;;		_getSignalBandwidth
 27096 ;;		_getSpreadingFactor
 27097 ;; This function is called by:
 27098 ;;		_initRadio
 27099 ;; This function uses a non-reentrant model
 27100 ;;
 27101                           
 27102                           	psect	text167
 27103  00145C                     __ptext167:
 27104                           	opt callstack 0
 27105  00145C                     _setSignalBandwidth:
 27106                           	opt callstack 14
 27107  00145C                     
 27108                           ;phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);phy/sx1216/phy_src
      +                          /phy.c: 224: {;phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;phy/sx1216/phy_src/phy.c: 2
      +                          27:   if (sbw <= 7.8E3) {
 27109  00145C  0E00               	movlw	0
 27110  00145E  6E10               	movwf	___flge@ff1^0,c
 27111  001460  0EC0               	movlw	192
 27112  001462  6E11               	movwf	(___flge@ff1+1)^0,c
 27113  001464  0EF3               	movlw	243
 27114  001466  6E12               	movwf	(___flge@ff1+2)^0,c
 27115  001468  0E45               	movlw	69
 27116  00146A  6E13               	movwf	(___flge@ff1+3)^0,c
 27117  00146C  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27118  001472  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27119  001478  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27120  00147E  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27121  001484  0E00               	movlw	0
 27122  001486  EC8A  F01D         	call	___xxtofl
 27123  00148A  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27124  001490  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27125  001496  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27126  00149C  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27127  0014A2  EC99  F032         	call	___flge	;wreg free
 27128  0014A6  A0D8               	btfss	status,0,c
 27129  0014A8  EF58  F00A         	goto	u14841
 27130  0014AC  EF5A  F00A         	goto	u14840
 27131  0014B0                     u14841:
 27132  0014B0  EF64  F00A         	goto	l15417
 27133  0014B4                     u14840:
 27134  0014B4                     
 27135                           ;phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 27136  0014B4  0E00               	movlw	0
 27137  0014B6  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27138  0014B8  0E00               	movlw	0
 27139  0014BA  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27140  0014BC  0E00               	movlw	0
 27141  0014BE  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27142  0014C0  0E00               	movlw	0
 27143  0014C2  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27144                           
 27145                           ;phy/sx1216/phy_src/phy.c: 229:   } else if (sbw <= 10.4E3) {
 27146  0014C4  EF1C  F00C         	goto	l15451
 27147  0014C8                     l15417:
 27148  0014C8  0E00               	movlw	0
 27149  0014CA  6E10               	movwf	___flge@ff1^0,c
 27150  0014CC  0E80               	movlw	128
 27151  0014CE  6E11               	movwf	(___flge@ff1+1)^0,c
 27152  0014D0  0E22               	movlw	34
 27153  0014D2  6E12               	movwf	(___flge@ff1+2)^0,c
 27154  0014D4  0E46               	movlw	70
 27155  0014D6  6E13               	movwf	(___flge@ff1+3)^0,c
 27156  0014D8  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27157  0014DE  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27158  0014E4  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27159  0014EA  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27160  0014F0  0E00               	movlw	0
 27161  0014F2  EC8A  F01D         	call	___xxtofl
 27162  0014F6  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27163  0014FC  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27164  001502  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27165  001508  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27166  00150E  EC99  F032         	call	___flge	;wreg free
 27167  001512  A0D8               	btfss	status,0,c
 27168  001514  EF8E  F00A         	goto	u14851
 27169  001518  EF90  F00A         	goto	u14850
 27170  00151C                     u14851:
 27171  00151C  EF9A  F00A         	goto	l15421
 27172  001520                     u14850:
 27173  001520                     
 27174                           ;phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 27175  001520  0E01               	movlw	1
 27176  001522  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27177  001524  0E00               	movlw	0
 27178  001526  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27179  001528  0E00               	movlw	0
 27180  00152A  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27181  00152C  0E00               	movlw	0
 27182  00152E  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27183                           
 27184                           ;phy/sx1216/phy_src/phy.c: 231:   } else if (sbw <= 15.6E3) {
 27185  001530  EF1C  F00C         	goto	l15451
 27186  001534                     l15421:
 27187  001534  0E00               	movlw	0
 27188  001536  6E10               	movwf	___flge@ff1^0,c
 27189  001538  0EC0               	movlw	192
 27190  00153A  6E11               	movwf	(___flge@ff1+1)^0,c
 27191  00153C  0E73               	movlw	115
 27192  00153E  6E12               	movwf	(___flge@ff1+2)^0,c
 27193  001540  0E46               	movlw	70
 27194  001542  6E13               	movwf	(___flge@ff1+3)^0,c
 27195  001544  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27196  00154A  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27197  001550  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27198  001556  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27199  00155C  0E00               	movlw	0
 27200  00155E  EC8A  F01D         	call	___xxtofl
 27201  001562  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27202  001568  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27203  00156E  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27204  001574  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27205  00157A  EC99  F032         	call	___flge	;wreg free
 27206  00157E  A0D8               	btfss	status,0,c
 27207  001580  EFC4  F00A         	goto	u14861
 27208  001584  EFC6  F00A         	goto	u14860
 27209  001588                     u14861:
 27210  001588  EFD0  F00A         	goto	l15425
 27211  00158C                     u14860:
 27212  00158C                     
 27213                           ;phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 27214  00158C  0E02               	movlw	2
 27215  00158E  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27216  001590  0E00               	movlw	0
 27217  001592  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27218  001594  0E00               	movlw	0
 27219  001596  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27220  001598  0E00               	movlw	0
 27221  00159A  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27222                           
 27223                           ;phy/sx1216/phy_src/phy.c: 233:   } else if (sbw <= 20.8E3) {
 27224  00159C  EF1C  F00C         	goto	l15451
 27225  0015A0                     l15425:
 27226  0015A0  0E00               	movlw	0
 27227  0015A2  6E10               	movwf	___flge@ff1^0,c
 27228  0015A4  0E80               	movlw	128
 27229  0015A6  6E11               	movwf	(___flge@ff1+1)^0,c
 27230  0015A8  0EA2               	movlw	162
 27231  0015AA  6E12               	movwf	(___flge@ff1+2)^0,c
 27232  0015AC  0E46               	movlw	70
 27233  0015AE  6E13               	movwf	(___flge@ff1+3)^0,c
 27234  0015B0  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27235  0015B6  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27236  0015BC  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27237  0015C2  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27238  0015C8  0E00               	movlw	0
 27239  0015CA  EC8A  F01D         	call	___xxtofl
 27240  0015CE  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27241  0015D4  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27242  0015DA  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27243  0015E0  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27244  0015E6  EC99  F032         	call	___flge	;wreg free
 27245  0015EA  A0D8               	btfss	status,0,c
 27246  0015EC  EFFA  F00A         	goto	u14871
 27247  0015F0  EFFC  F00A         	goto	u14870
 27248  0015F4                     u14871:
 27249  0015F4  EF06  F00B         	goto	l15429
 27250  0015F8                     u14870:
 27251  0015F8                     
 27252                           ;phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 27253  0015F8  0E03               	movlw	3
 27254  0015FA  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27255  0015FC  0E00               	movlw	0
 27256  0015FE  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27257  001600  0E00               	movlw	0
 27258  001602  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27259  001604  0E00               	movlw	0
 27260  001606  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27261                           
 27262                           ;phy/sx1216/phy_src/phy.c: 235:   } else if (sbw <= 31.25E3) {
 27263  001608  EF1C  F00C         	goto	l15451
 27264  00160C                     l15429:
 27265  00160C  0E00               	movlw	0
 27266  00160E  6E10               	movwf	___flge@ff1^0,c
 27267  001610  0E24               	movlw	36
 27268  001612  6E11               	movwf	(___flge@ff1+1)^0,c
 27269  001614  0EF4               	movlw	244
 27270  001616  6E12               	movwf	(___flge@ff1+2)^0,c
 27271  001618  0E46               	movlw	70
 27272  00161A  6E13               	movwf	(___flge@ff1+3)^0,c
 27273  00161C  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27274  001622  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27275  001628  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27276  00162E  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27277  001634  0E00               	movlw	0
 27278  001636  EC8A  F01D         	call	___xxtofl
 27279  00163A  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27280  001640  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27281  001646  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27282  00164C  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27283  001652  EC99  F032         	call	___flge	;wreg free
 27284  001656  A0D8               	btfss	status,0,c
 27285  001658  EF30  F00B         	goto	u14881
 27286  00165C  EF32  F00B         	goto	u14880
 27287  001660                     u14881:
 27288  001660  EF3C  F00B         	goto	l15433
 27289  001664                     u14880:
 27290  001664                     
 27291                           ;phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 27292  001664  0E04               	movlw	4
 27293  001666  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27294  001668  0E00               	movlw	0
 27295  00166A  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27296  00166C  0E00               	movlw	0
 27297  00166E  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27298  001670  0E00               	movlw	0
 27299  001672  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27300                           
 27301                           ;phy/sx1216/phy_src/phy.c: 237:   } else if (sbw <= 41.7E3) {
 27302  001674  EF1C  F00C         	goto	l15451
 27303  001678                     l15433:
 27304  001678  0E00               	movlw	0
 27305  00167A  6E10               	movwf	___flge@ff1^0,c
 27306  00167C  0EE4               	movlw	228
 27307  00167E  6E11               	movwf	(___flge@ff1+1)^0,c
 27308  001680  0E22               	movlw	34
 27309  001682  6E12               	movwf	(___flge@ff1+2)^0,c
 27310  001684  0E47               	movlw	71
 27311  001686  6E13               	movwf	(___flge@ff1+3)^0,c
 27312  001688  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27313  00168E  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27314  001694  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27315  00169A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27316  0016A0  0E00               	movlw	0
 27317  0016A2  EC8A  F01D         	call	___xxtofl
 27318  0016A6  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27319  0016AC  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27320  0016B2  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27321  0016B8  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27322  0016BE  EC99  F032         	call	___flge	;wreg free
 27323  0016C2  A0D8               	btfss	status,0,c
 27324  0016C4  EF66  F00B         	goto	u14891
 27325  0016C8  EF68  F00B         	goto	u14890
 27326  0016CC                     u14891:
 27327  0016CC  EF72  F00B         	goto	l15437
 27328  0016D0                     u14890:
 27329  0016D0                     
 27330                           ;phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 27331  0016D0  0E05               	movlw	5
 27332  0016D2  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27333  0016D4  0E00               	movlw	0
 27334  0016D6  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27335  0016D8  0E00               	movlw	0
 27336  0016DA  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27337  0016DC  0E00               	movlw	0
 27338  0016DE  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27339                           
 27340                           ;phy/sx1216/phy_src/phy.c: 239:   } else if (sbw <= 62.5E3) {
 27341  0016E0  EF1C  F00C         	goto	l15451
 27342  0016E4                     l15437:
 27343  0016E4  0E00               	movlw	0
 27344  0016E6  6E10               	movwf	___flge@ff1^0,c
 27345  0016E8  0E24               	movlw	36
 27346  0016EA  6E11               	movwf	(___flge@ff1+1)^0,c
 27347  0016EC  0E74               	movlw	116
 27348  0016EE  6E12               	movwf	(___flge@ff1+2)^0,c
 27349  0016F0  0E47               	movlw	71
 27350  0016F2  6E13               	movwf	(___flge@ff1+3)^0,c
 27351  0016F4  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27352  0016FA  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27353  001700  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27354  001706  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27355  00170C  0E00               	movlw	0
 27356  00170E  EC8A  F01D         	call	___xxtofl
 27357  001712  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27358  001718  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27359  00171E  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27360  001724  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27361  00172A  EC99  F032         	call	___flge	;wreg free
 27362  00172E  A0D8               	btfss	status,0,c
 27363  001730  EF9C  F00B         	goto	u14901
 27364  001734  EF9E  F00B         	goto	u14900
 27365  001738                     u14901:
 27366  001738  EFA8  F00B         	goto	l15441
 27367  00173C                     u14900:
 27368  00173C                     
 27369                           ;phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 27370  00173C  0E06               	movlw	6
 27371  00173E  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27372  001740  0E00               	movlw	0
 27373  001742  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27374  001744  0E00               	movlw	0
 27375  001746  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27376  001748  0E00               	movlw	0
 27377  00174A  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27378                           
 27379                           ;phy/sx1216/phy_src/phy.c: 241:   } else if (sbw <= 125E3) {
 27380  00174C  EF1C  F00C         	goto	l15451
 27381  001750                     l15441:
 27382  001750  0E00               	movlw	0
 27383  001752  6E10               	movwf	___flge@ff1^0,c
 27384  001754  0E24               	movlw	36
 27385  001756  6E11               	movwf	(___flge@ff1+1)^0,c
 27386  001758  0EF4               	movlw	244
 27387  00175A  6E12               	movwf	(___flge@ff1+2)^0,c
 27388  00175C  0E47               	movlw	71
 27389  00175E  6E13               	movwf	(___flge@ff1+3)^0,c
 27390  001760  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27391  001766  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27392  00176C  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27393  001772  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27394  001778  0E00               	movlw	0
 27395  00177A  EC8A  F01D         	call	___xxtofl
 27396  00177E  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27397  001784  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27398  00178A  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27399  001790  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27400  001796  EC99  F032         	call	___flge	;wreg free
 27401  00179A  A0D8               	btfss	status,0,c
 27402  00179C  EFD2  F00B         	goto	u14911
 27403  0017A0  EFD4  F00B         	goto	u14910
 27404  0017A4                     u14911:
 27405  0017A4  EFDE  F00B         	goto	l15445
 27406  0017A8                     u14910:
 27407  0017A8                     
 27408                           ;phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 27409  0017A8  0E07               	movlw	7
 27410  0017AA  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27411  0017AC  0E00               	movlw	0
 27412  0017AE  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27413  0017B0  0E00               	movlw	0
 27414  0017B2  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27415  0017B4  0E00               	movlw	0
 27416  0017B6  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27417                           
 27418                           ;phy/sx1216/phy_src/phy.c: 243:   } else if (sbw <= 250E3) {
 27419  0017B8  EF1C  F00C         	goto	l15451
 27420  0017BC                     l15445:
 27421  0017BC  0E00               	movlw	0
 27422  0017BE  6E10               	movwf	___flge@ff1^0,c
 27423  0017C0  0E24               	movlw	36
 27424  0017C2  6E11               	movwf	(___flge@ff1+1)^0,c
 27425  0017C4  0E74               	movlw	116
 27426  0017C6  6E12               	movwf	(___flge@ff1+2)^0,c
 27427  0017C8  0E48               	movlw	72
 27428  0017CA  6E13               	movwf	(___flge@ff1+3)^0,c
 27429  0017CC  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27430  0017D2  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27431  0017D8  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27432  0017DE  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27433  0017E4  0E00               	movlw	0
 27434  0017E6  EC8A  F01D         	call	___xxtofl
 27435  0017EA  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27436  0017F0  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27437  0017F6  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27438  0017FC  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27439  001802  EC99  F032         	call	___flge	;wreg free
 27440  001806  A0D8               	btfss	status,0,c
 27441  001808  EF08  F00C         	goto	u14921
 27442  00180C  EF0A  F00C         	goto	u14920
 27443  001810                     u14921:
 27444  001810  EF14  F00C         	goto	l15449
 27445  001814                     u14920:
 27446  001814                     
 27447                           ;phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 27448  001814  0E08               	movlw	8
 27449  001816  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27450  001818  0E00               	movlw	0
 27451  00181A  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27452  00181C  0E00               	movlw	0
 27453  00181E  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27454  001820  0E00               	movlw	0
 27455  001822  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27456                           
 27457                           ;phy/sx1216/phy_src/phy.c: 245:   } else {
 27458  001824  EF1C  F00C         	goto	l15451
 27459  001828                     l15449:
 27460                           
 27461                           ;phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 27462  001828  0E09               	movlw	9
 27463  00182A  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27464  00182C  0E00               	movlw	0
 27465  00182E  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27466  001830  0E00               	movlw	0
 27467  001832  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27468  001834  0E00               	movlw	0
 27469  001836  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27470  001838                     l15451:
 27471                           
 27472                           ;phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw << 4
      +                          ));
 27473  001838  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 27474  00183E  3A27               	swapf	??_setSignalBandwidth^0,f,c
 27475  001840  0EF0               	movlw	240
 27476  001842  1627               	andwf	??_setSignalBandwidth^0,f,c
 27477  001844  0E1D               	movlw	29
 27478  001846  ECA9  F04D         	call	_SX1276Read
 27479  00184A  0B0F               	andlw	15
 27480  00184C  1027               	iorwf	??_setSignalBandwidth^0,w,c
 27481  00184E  6E0F               	movwf	SX1276Write@data^0,c
 27482  001850  0E1D               	movlw	29
 27483  001852  ECCC  F04D         	call	_SX1276Write
 27484  001856                     
 27485                           ;phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1L <
      +                          < getSpreadingFactor()) ) ;
 27486  001856  EC2F  F04D         	call	_getSpreadingFactor	;wreg free
 27487  00185A  0E01               	movlw	1
 27488  00185C  6E27               	movwf	??_setSignalBandwidth^0,c
 27489  00185E  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 27490  001860  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 27491  001862  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 27492  001864  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27493  001866  EF3A  F00C         	goto	u14930
 27494  00186A                     u14935:
 27495  00186A  90D8               	bcf	status,0,c
 27496  00186C  3627               	rlcf	??_setSignalBandwidth^0,f,c
 27497  00186E  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 27498  001870  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 27499  001872  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 27500  001874                     u14930:
 27501  001874  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27502  001876  EF35  F00C         	goto	u14935
 27503  00187A  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 27504  001880  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 27505  001886  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 27506  00188C  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 27507  001892  EC2C  F028         	call	_getSignalBandwidth	;wreg free
 27508  001896  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27509  00189C  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27510  0018A2  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27511  0018A8  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27512  0018AE  EC0A  F03D         	call	___lldiv	;wreg free
 27513  0018B2  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$8335
 27514  0018B8  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$8335+1
 27515  0018BE  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$8335+2
 27516  0018C4  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$8335+3
 27517  0018CA                     
 27518                           ;phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1L <
      +                          < getSpreadingFactor()) ) ;
 27519  0018CA  0EE8               	movlw	232
 27520  0018CC  6E16               	movwf	___lldiv@dividend^0,c
 27521  0018CE  0E03               	movlw	3
 27522  0018D0  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27523  0018D2  0E00               	movlw	0
 27524  0018D4  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27525  0018D6  0E00               	movlw	0
 27526  0018D8  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27527  0018DA  0060  F0AC  F01A   	movff	_setSignalBandwidth$8335,___lldiv@divisor
 27528  0018E0  0060  F0B0  F01B   	movff	_setSignalBandwidth$8335+1,___lldiv@divisor+1
 27529  0018E6  0060  F0B4  F01C   	movff	_setSignalBandwidth$8335+2,___lldiv@divisor+2
 27530  0018EC  0060  F0B8  F01D   	movff	_setSignalBandwidth$8335+3,___lldiv@divisor+3
 27531  0018F2  EC0A  F03D         	call	___lldiv	;wreg free
 27532  0018F6  0060  F058  F152   	movff	?___lldiv,_symbolDuration
 27533  0018FC  0060  F05C  F153   	movff	?___lldiv+1,_symbolDuration+1
 27534  001902  0060  F060  F154   	movff	?___lldiv+2,_symbolDuration+2
 27535  001908  0060  F064  F155   	movff	?___lldiv+3,_symbolDuration+3
 27536  00190E  0012               	return		;funcret
 27537  001910                     __end_of_setSignalBandwidth:
 27538                           	opt callstack 0
 27539                           
 27540 ;; *************** function _getSpreadingFactor *****************
 27541 ;; Defined at:
 27542 ;;		line 261 in file "phy/sx1216/phy_src/phy.c"
 27543 ;; Parameters:    Size  Location     Type
 27544 ;;		None
 27545 ;; Auto vars:     Size  Location     Type
 27546 ;;		None
 27547 ;; Return value:  Size  Location     Type
 27548 ;;                  4   14[COMRAM] unsigned long 
 27549 ;; Registers used:
 27550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27551 ;; Tracked objects:
 27552 ;;		On entry : 0/0
 27553 ;;		On exit  : 0/0
 27554 ;;		Unchanged: 0/0
 27555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27559 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27560 ;;Total ram usage:        5 bytes
 27561 ;; Hardware stack levels used:    1
 27562 ;; Hardware stack levels required when called:   11
 27563 ;; This function calls:
 27564 ;;		_SX1276Read
 27565 ;; This function is called by:
 27566 ;;		_setSpreadingFactor
 27567 ;;		_setSignalBandwidth
 27568 ;; This function uses a non-reentrant model
 27569 ;;
 27570                           
 27571                           	psect	text168
 27572  009A5E                     __ptext168:
 27573                           	opt callstack 0
 27574  009A5E                     _getSpreadingFactor:
 27575                           	opt callstack 14
 27576  009A5E                     
 27577                           ;phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 27578  009A5E  0E1E               	movlw	30
 27579  009A60  ECA9  F04D         	call	_SX1276Read
 27580  009A64  6E13               	movwf	??_getSpreadingFactor^0,c
 27581  009A66  3A13               	swapf	??_getSpreadingFactor^0,f,c
 27582  009A68  0E0F               	movlw	15
 27583  009A6A  1613               	andwf	??_getSpreadingFactor^0,f,c
 27584  009A6C  5013               	movf	??_getSpreadingFactor^0,w,c
 27585  009A6E  6E0F               	movwf	?_getSpreadingFactor^0,c
 27586  009A70  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 27587  009A72  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 27588  009A74  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 27589  009A76  0012               	return		;funcret
 27590  009A78                     __end_of_getSpreadingFactor:
 27591                           	opt callstack 0
 27592                           
 27593 ;; *************** function _getSignalBandwidth *****************
 27594 ;; Defined at:
 27595 ;;		line 272 in file "phy/sx1216/phy_src/phy.c"
 27596 ;; Parameters:    Size  Location     Type
 27597 ;;		None
 27598 ;; Auto vars:     Size  Location     Type
 27599 ;;  bw              1   20[COMRAM] unsigned char 
 27600 ;; Return value:  Size  Location     Type
 27601 ;;                  4   14[COMRAM] unsigned long 
 27602 ;; Registers used:
 27603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27604 ;; Tracked objects:
 27605 ;;		On entry : 0/0
 27606 ;;		On exit  : 0/0
 27607 ;;		Unchanged: 0/0
 27608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27612 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27613 ;;Total ram usage:        7 bytes
 27614 ;; Hardware stack levels used:    1
 27615 ;; Hardware stack levels required when called:   11
 27616 ;; This function calls:
 27617 ;;		_SX1276Read
 27618 ;; This function is called by:
 27619 ;;		_setSpreadingFactor
 27620 ;;		_setSignalBandwidth
 27621 ;; This function uses a non-reentrant model
 27622 ;;
 27623                           
 27624                           	psect	text169
 27625  005058                     __ptext169:
 27626                           	opt callstack 0
 27627  005058                     _getSignalBandwidth:
 27628                           	opt callstack 14
 27629  005058                     
 27630                           ;phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 27631  005058  0E1D               	movlw	29
 27632  00505A  ECA9  F04D         	call	_SX1276Read
 27633  00505E  6E13               	movwf	??_getSignalBandwidth^0,c
 27634  005060  3813               	swapf	??_getSignalBandwidth^0,w,c
 27635  005062  0B0F               	andlw	15
 27636  005064  6E15               	movwf	getSignalBandwidth@bw^0,c
 27637                           
 27638                           ;phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 27639  005066  EF99  F028         	goto	l14911
 27640  00506A                     l14869:
 27641  00506A  0E78               	movlw	120
 27642  00506C  6E0F               	movwf	?_getSignalBandwidth^0,c
 27643  00506E  0E1E               	movlw	30
 27644  005070  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27645  005072  0E00               	movlw	0
 27646  005074  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27647  005076  0E00               	movlw	0
 27648  005078  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27649  00507A  EFD6  F028         	goto	l2505
 27650  00507E                     l14873:
 27651  00507E  0EA0               	movlw	160
 27652  005080  6E0F               	movwf	?_getSignalBandwidth^0,c
 27653  005082  0E28               	movlw	40
 27654  005084  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27655  005086  0E00               	movlw	0
 27656  005088  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27657  00508A  0E00               	movlw	0
 27658  00508C  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27659  00508E  EFD6  F028         	goto	l2505
 27660  005092                     l14877:
 27661  005092  0EF0               	movlw	240
 27662  005094  6E0F               	movwf	?_getSignalBandwidth^0,c
 27663  005096  0E3C               	movlw	60
 27664  005098  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27665  00509A  0E00               	movlw	0
 27666  00509C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27667  00509E  0E00               	movlw	0
 27668  0050A0  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27669  0050A2  EFD6  F028         	goto	l2505
 27670  0050A6                     l14881:
 27671  0050A6  0E40               	movlw	64
 27672  0050A8  6E0F               	movwf	?_getSignalBandwidth^0,c
 27673  0050AA  0E51               	movlw	81
 27674  0050AC  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27675  0050AE  0E00               	movlw	0
 27676  0050B0  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27677  0050B2  0E00               	movlw	0
 27678  0050B4  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27679  0050B6  EFD6  F028         	goto	l2505
 27680  0050BA                     l14885:
 27681  0050BA  0E12               	movlw	18
 27682  0050BC  6E0F               	movwf	?_getSignalBandwidth^0,c
 27683  0050BE  0E7A               	movlw	122
 27684  0050C0  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27685  0050C2  0E00               	movlw	0
 27686  0050C4  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27687  0050C6  0E00               	movlw	0
 27688  0050C8  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27689  0050CA  EFD6  F028         	goto	l2505
 27690  0050CE                     l14889:
 27691  0050CE  0EE4               	movlw	228
 27692  0050D0  6E0F               	movwf	?_getSignalBandwidth^0,c
 27693  0050D2  0EA2               	movlw	162
 27694  0050D4  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27695  0050D6  0E00               	movlw	0
 27696  0050D8  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27697  0050DA  0E00               	movlw	0
 27698  0050DC  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27699  0050DE  EFD6  F028         	goto	l2505
 27700  0050E2                     l14893:
 27701  0050E2  0E24               	movlw	36
 27702  0050E4  6E0F               	movwf	?_getSignalBandwidth^0,c
 27703  0050E6  0EF4               	movlw	244
 27704  0050E8  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27705  0050EA  0E00               	movlw	0
 27706  0050EC  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27707  0050EE  0E00               	movlw	0
 27708  0050F0  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27709  0050F2  EFD6  F028         	goto	l2505
 27710  0050F6                     l14897:
 27711  0050F6  0E48               	movlw	72
 27712  0050F8  6E0F               	movwf	?_getSignalBandwidth^0,c
 27713  0050FA  0EE8               	movlw	232
 27714  0050FC  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27715  0050FE  0E01               	movlw	1
 27716  005100  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27717  005102  0E00               	movlw	0
 27718  005104  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27719  005106  EFD6  F028         	goto	l2505
 27720  00510A                     l14901:
 27721  00510A  0E90               	movlw	144
 27722  00510C  6E0F               	movwf	?_getSignalBandwidth^0,c
 27723  00510E  0ED0               	movlw	208
 27724  005110  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27725  005112  0E03               	movlw	3
 27726  005114  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27727  005116  0E00               	movlw	0
 27728  005118  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27729  00511A  EFD6  F028         	goto	l2505
 27730  00511E                     l14905:
 27731  00511E  0E20               	movlw	32
 27732  005120  6E0F               	movwf	?_getSignalBandwidth^0,c
 27733  005122  0EA1               	movlw	161
 27734  005124  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27735  005126  0E07               	movlw	7
 27736  005128  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27737  00512A  0E00               	movlw	0
 27738  00512C  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27739  00512E  EFD6  F028         	goto	l2505
 27740  005132                     l14911:
 27741  005132  5015               	movf	getSignalBandwidth@bw^0,w,c
 27742  005134  6E13               	movwf	??_getSignalBandwidth^0,c
 27743  005136  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 27744                           
 27745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27746                           ; Switch size 1, requested type "simple"
 27747                           ; Number of cases is 1, Range of values is 0 to 0
 27748                           ; switch strategies available:
 27749                           ; Name         Instructions Cycles
 27750                           ; simple_byte            4     3 (average)
 27751                           ;	Chosen strategy is simple_byte
 27752  005138  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 27753  00513A  0A00               	xorlw	0	; case 0
 27754  00513C  B4D8               	btfsc	status,2,c
 27755  00513E  EFA3  F028         	goto	l17851
 27756  005142  EFCE  F028         	goto	l14913
 27757  005146                     l17851:
 27758                           
 27759                           ; Switch size 1, requested type "simple"
 27760                           ; Number of cases is 10, Range of values is 0 to 9
 27761                           ; switch strategies available:
 27762                           ; Name         Instructions Cycles
 27763                           ; simple_byte           31    16 (average)
 27764                           ;	Chosen strategy is simple_byte
 27765  005146  5013               	movf	??_getSignalBandwidth^0,w,c
 27766  005148  0A00               	xorlw	0	; case 0
 27767  00514A  B4D8               	btfsc	status,2,c
 27768  00514C  EF35  F028         	goto	l14869
 27769  005150  0A01               	xorlw	1	; case 1
 27770  005152  B4D8               	btfsc	status,2,c
 27771  005154  EF3F  F028         	goto	l14873
 27772  005158  0A03               	xorlw	3	; case 2
 27773  00515A  B4D8               	btfsc	status,2,c
 27774  00515C  EF49  F028         	goto	l14877
 27775  005160  0A01               	xorlw	1	; case 3
 27776  005162  B4D8               	btfsc	status,2,c
 27777  005164  EF53  F028         	goto	l14881
 27778  005168  0A07               	xorlw	7	; case 4
 27779  00516A  B4D8               	btfsc	status,2,c
 27780  00516C  EF5D  F028         	goto	l14885
 27781  005170  0A01               	xorlw	1	; case 5
 27782  005172  B4D8               	btfsc	status,2,c
 27783  005174  EF67  F028         	goto	l14889
 27784  005178  0A03               	xorlw	3	; case 6
 27785  00517A  B4D8               	btfsc	status,2,c
 27786  00517C  EF71  F028         	goto	l14893
 27787  005180  0A01               	xorlw	1	; case 7
 27788  005182  B4D8               	btfsc	status,2,c
 27789  005184  EF7B  F028         	goto	l14897
 27790  005188  0A0F               	xorlw	15	; case 8
 27791  00518A  B4D8               	btfsc	status,2,c
 27792  00518C  EF85  F028         	goto	l14901
 27793  005190  0A01               	xorlw	1	; case 9
 27794  005192  B4D8               	btfsc	status,2,c
 27795  005194  EF8F  F028         	goto	l14905
 27796  005198  EFCE  F028         	goto	l14913
 27797  00519C                     l14913:
 27798                           
 27799                           ;phy/sx1216/phy_src/phy.c: 287:   return 0;
 27800  00519C  0E00               	movlw	0
 27801  00519E  6E0F               	movwf	?_getSignalBandwidth^0,c
 27802  0051A0  0E00               	movlw	0
 27803  0051A2  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 27804  0051A4  0E00               	movlw	0
 27805  0051A6  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 27806  0051A8  0E00               	movlw	0
 27807  0051AA  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 27808  0051AC                     l2505:
 27809  0051AC  0012               	return		;funcret
 27810  0051AE                     __end_of_getSignalBandwidth:
 27811                           	opt callstack 0
 27812                           
 27813 ;; *************** function ___xxtofl *****************
 27814 ;; Defined at:
 27815 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 27816 ;; Parameters:    Size  Location     Type
 27817 ;;  sign            1    wreg     unsigned char 
 27818 ;;  val             4    1[COMRAM] long 
 27819 ;; Auto vars:     Size  Location     Type
 27820 ;;  sign            1    9[COMRAM] unsigned char 
 27821 ;;  arg             4   11[COMRAM] unsigned long 
 27822 ;;  exp             1   10[COMRAM] unsigned char 
 27823 ;; Return value:  Size  Location     Type
 27824 ;;                  4    1[COMRAM] unsigned char 
 27825 ;; Registers used:
 27826 ;;		wreg, status,2, status,0
 27827 ;; Tracked objects:
 27828 ;;		On entry : 0/0
 27829 ;;		On exit  : 0/0
 27830 ;;		Unchanged: 0/0
 27831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27833 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27835 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27836 ;;Total ram usage:       14 bytes
 27837 ;; Hardware stack levels used:    1
 27838 ;; Hardware stack levels required when called:    7
 27839 ;; This function calls:
 27840 ;;		Nothing
 27841 ;; This function is called by:
 27842 ;;		_setSignalBandwidth
 27843 ;; This function uses a non-reentrant model
 27844 ;;
 27845                           
 27846                           	psect	text170
 27847  003B14                     __ptext170:
 27848                           	opt callstack 0
 27849  003B14                     ___xxtofl:
 27850                           	opt callstack 18
 27851                           
 27852                           ;incstack = 0
 27853                           ;___xxtofl@sign stored from wreg
 27854  003B14  6E0A               	movwf	___xxtofl@sign^0,c
 27855  003B16  500A               	movf	___xxtofl@sign^0,w,c
 27856  003B18  B4D8               	btfsc	status,2,c
 27857  003B1A  EF91  F01D         	goto	u14241
 27858  003B1E  EF93  F01D         	goto	u14240
 27859  003B22                     u14241:
 27860  003B22  EFBD  F01D         	goto	l3827
 27861  003B26                     u14240:
 27862  003B26  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 27863  003B28  EF9A  F01D         	goto	u14250
 27864  003B2C  EF98  F01D         	goto	u14251
 27865  003B30                     u14251:
 27866  003B30  EFBD  F01D         	goto	l3827
 27867  003B34                     u14250:
 27868  003B34  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 27869  003B3A  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 27870  003B40  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 27871  003B46  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 27872  003B4C  1E06               	comf	??___xxtofl^0,f,c
 27873  003B4E  1E07               	comf	(??___xxtofl+1)^0,f,c
 27874  003B50  1E08               	comf	(??___xxtofl+2)^0,f,c
 27875  003B52  1E09               	comf	(??___xxtofl+3)^0,f,c
 27876  003B54  2A06               	incf	??___xxtofl^0,f,c
 27877  003B56  0E00               	movlw	0
 27878  003B58  2207               	addwfc	(??___xxtofl+1)^0,f,c
 27879  003B5A  2208               	addwfc	(??___xxtofl+2)^0,f,c
 27880  003B5C  2209               	addwfc	(??___xxtofl+3)^0,f,c
 27881  003B5E  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 27882  003B64  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 27883  003B6A  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 27884  003B70  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 27885  003B76  EFC9  F01D         	goto	l15009
 27886  003B7A                     l3827:
 27887  003B7A  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 27888  003B80  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 27889  003B86  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 27890  003B8C  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 27891  003B92                     l15009:
 27892  003B92  5002               	movf	___xxtofl@val^0,w,c
 27893  003B94  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 27894  003B96  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 27895  003B98  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 27896  003B9A  A4D8               	btfss	status,2,c
 27897  003B9C  EFD2  F01D         	goto	u14261
 27898  003BA0  EFD4  F01D         	goto	u14260
 27899  003BA4                     u14261:
 27900  003BA4  EFDE  F01D         	goto	l15015
 27901  003BA8                     u14260:
 27902  003BA8  0E00               	movlw	0
 27903  003BAA  6E02               	movwf	?___xxtofl^0,c
 27904  003BAC  0E00               	movlw	0
 27905  003BAE  6E03               	movwf	(?___xxtofl+1)^0,c
 27906  003BB0  0E00               	movlw	0
 27907  003BB2  6E04               	movwf	(?___xxtofl+2)^0,c
 27908  003BB4  0E00               	movlw	0
 27909  003BB6  6E05               	movwf	(?___xxtofl+3)^0,c
 27910  003BB8  EF75  F01E         	goto	l3830
 27911  003BBC                     l15015:
 27912  003BBC  0E96               	movlw	150
 27913  003BBE  6E0B               	movwf	___xxtofl@exp^0,c
 27914  003BC0  EFE8  F01D         	goto	l15019
 27915  003BC4                     l15017:
 27916  003BC4  2A0B               	incf	___xxtofl@exp^0,f,c
 27917  003BC6  90D8               	bcf	status,0,c
 27918  003BC8  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 27919  003BCA  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 27920  003BCC  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 27921  003BCE  320C               	rrcf	___xxtofl@arg^0,f,c
 27922  003BD0                     l15019:
 27923  003BD0  0E00               	movlw	0
 27924  003BD2  140C               	andwf	___xxtofl@arg^0,w,c
 27925  003BD4  6E06               	movwf	??___xxtofl^0,c
 27926  003BD6  0E00               	movlw	0
 27927  003BD8  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 27928  003BDA  6E07               	movwf	(??___xxtofl+1)^0,c
 27929  003BDC  0E00               	movlw	0
 27930  003BDE  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 27931  003BE0  6E08               	movwf	(??___xxtofl+2)^0,c
 27932  003BE2  0EFE               	movlw	254
 27933  003BE4  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 27934  003BE6  6E09               	movwf	(??___xxtofl+3)^0,c
 27935  003BE8  5006               	movf	??___xxtofl^0,w,c
 27936  003BEA  1007               	iorwf	(??___xxtofl+1)^0,w,c
 27937  003BEC  1008               	iorwf	(??___xxtofl+2)^0,w,c
 27938  003BEE  1009               	iorwf	(??___xxtofl+3)^0,w,c
 27939  003BF0  A4D8               	btfss	status,2,c
 27940  003BF2  EFFD  F01D         	goto	u14271
 27941  003BF6  EFFF  F01D         	goto	u14270
 27942  003BFA                     u14271:
 27943  003BFA  EFE2  F01D         	goto	l15017
 27944  003BFE                     u14270:
 27945  003BFE  EF0D  F01E         	goto	l3834
 27946  003C02                     l15021:
 27947  003C02  2A0B               	incf	___xxtofl@exp^0,f,c
 27948  003C04  0E01               	movlw	1
 27949  003C06  260C               	addwf	___xxtofl@arg^0,f,c
 27950  003C08  0E00               	movlw	0
 27951  003C0A  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 27952  003C0C  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 27953  003C0E  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 27954  003C10  90D8               	bcf	status,0,c
 27955  003C12  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 27956  003C14  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 27957  003C16  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 27958  003C18  320C               	rrcf	___xxtofl@arg^0,f,c
 27959  003C1A                     l3834:
 27960  003C1A  0E00               	movlw	0
 27961  003C1C  140C               	andwf	___xxtofl@arg^0,w,c
 27962  003C1E  6E06               	movwf	??___xxtofl^0,c
 27963  003C20  0E00               	movlw	0
 27964  003C22  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 27965  003C24  6E07               	movwf	(??___xxtofl+1)^0,c
 27966  003C26  0E00               	movlw	0
 27967  003C28  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 27968  003C2A  6E08               	movwf	(??___xxtofl+2)^0,c
 27969  003C2C  0EFF               	movlw	255
 27970  003C2E  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 27971  003C30  6E09               	movwf	(??___xxtofl+3)^0,c
 27972  003C32  5006               	movf	??___xxtofl^0,w,c
 27973  003C34  1007               	iorwf	(??___xxtofl+1)^0,w,c
 27974  003C36  1008               	iorwf	(??___xxtofl+2)^0,w,c
 27975  003C38  1009               	iorwf	(??___xxtofl+3)^0,w,c
 27976  003C3A  A4D8               	btfss	status,2,c
 27977  003C3C  EF22  F01E         	goto	u14281
 27978  003C40  EF24  F01E         	goto	u14280
 27979  003C44                     u14281:
 27980  003C44  EF01  F01E         	goto	l15021
 27981  003C48                     u14280:
 27982  003C48  EF2C  F01E         	goto	l15029
 27983  003C4C                     l15027:
 27984  003C4C  060B               	decf	___xxtofl@exp^0,f,c
 27985  003C4E  90D8               	bcf	status,0,c
 27986  003C50  360C               	rlcf	___xxtofl@arg^0,f,c
 27987  003C52  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 27988  003C54  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 27989  003C56  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 27990  003C58                     l15029:
 27991  003C58  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 27992  003C5A  EF31  F01E         	goto	u14291
 27993  003C5E  EF33  F01E         	goto	u14290
 27994  003C62                     u14291:
 27995  003C62  EF3B  F01E         	goto	l3841
 27996  003C66                     u14290:
 27997  003C66  0E02               	movlw	2
 27998  003C68  600B               	cpfslt	___xxtofl@exp^0,c
 27999  003C6A  EF39  F01E         	goto	u14301
 28000  003C6E  EF3B  F01E         	goto	u14300
 28001  003C72                     u14301:
 28002  003C72  EF26  F01E         	goto	l15027
 28003  003C76                     u14300:
 28004  003C76                     l3841:
 28005  003C76  B00B               	btfsc	___xxtofl@exp^0,0,c
 28006  003C78  EF40  F01E         	goto	u14311
 28007  003C7C  EF42  F01E         	goto	u14310
 28008  003C80                     u14311:
 28009  003C80  EF43  F01E         	goto	l15035
 28010  003C84                     u14310:
 28011  003C84  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 28012  003C86                     l15035:
 28013  003C86  90D8               	bcf	status,0,c
 28014  003C88  320B               	rrcf	___xxtofl@exp^0,f,c
 28015  003C8A  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 28016  003C90  6A07               	clrf	(??___xxtofl+1)^0,c
 28017  003C92  6A08               	clrf	(??___xxtofl+2)^0,c
 28018  003C94  6A09               	clrf	(??___xxtofl+3)^0,c
 28019  003C96  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 28020  003C9C  6A08               	clrf	(??___xxtofl+2)^0,c
 28021  003C9E  6A07               	clrf	(??___xxtofl+1)^0,c
 28022  003CA0  6A06               	clrf	??___xxtofl^0,c
 28023  003CA2  5006               	movf	??___xxtofl^0,w,c
 28024  003CA4  120C               	iorwf	___xxtofl@arg^0,f,c
 28025  003CA6  5007               	movf	(??___xxtofl+1)^0,w,c
 28026  003CA8  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 28027  003CAA  5008               	movf	(??___xxtofl+2)^0,w,c
 28028  003CAC  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 28029  003CAE  5009               	movf	(??___xxtofl+3)^0,w,c
 28030  003CB0  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 28031  003CB2  500A               	movf	___xxtofl@sign^0,w,c
 28032  003CB4  B4D8               	btfsc	status,2,c
 28033  003CB6  EF5F  F01E         	goto	u14321
 28034  003CBA  EF61  F01E         	goto	u14320
 28035  003CBE                     u14321:
 28036  003CBE  EF69  F01E         	goto	l15045
 28037  003CC2                     u14320:
 28038  003CC2  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 28039  003CC4  EF68  F01E         	goto	u14330
 28040  003CC8  EF66  F01E         	goto	u14331
 28041  003CCC                     u14331:
 28042  003CCC  EF69  F01E         	goto	l15045
 28043  003CD0                     u14330:
 28044  003CD0  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 28045  003CD2                     l15045:
 28046  003CD2  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 28047  003CD8  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 28048  003CDE  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 28049  003CE4  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 28050  003CEA                     l3830:
 28051  003CEA  0012               	return		;funcret
 28052  003CEC                     __end_of___xxtofl:
 28053                           	opt callstack 0
 28054                           
 28055 ;; *************** function ___flge *****************
 28056 ;; Defined at:
 28057 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 28058 ;; Parameters:    Size  Location     Type
 28059 ;;  ff1             4   15[COMRAM] unsigned char 
 28060 ;;  ff2             4   19[COMRAM] unsigned char 
 28061 ;; Auto vars:     Size  Location     Type
 28062 ;;		None
 28063 ;; Return value:  Size  Location     Type
 28064 ;;		None               void
 28065 ;; Registers used:
 28066 ;;		wreg, status,2, status,0
 28067 ;; Tracked objects:
 28068 ;;		On entry : 0/0
 28069 ;;		On exit  : 0/0
 28070 ;;		Unchanged: 0/0
 28071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28072 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28075 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28076 ;;Total ram usage:       12 bytes
 28077 ;; Hardware stack levels used:    1
 28078 ;; Hardware stack levels required when called:    7
 28079 ;; This function calls:
 28080 ;;		Nothing
 28081 ;; This function is called by:
 28082 ;;		_setSignalBandwidth
 28083 ;; This function uses a non-reentrant model
 28084 ;;
 28085                           
 28086                           	psect	text171
 28087  006532                     __ptext171:
 28088                           	opt callstack 0
 28089  006532                     ___flge:
 28090                           	opt callstack 18
 28091  006532  0E00               	movlw	0
 28092  006534  1410               	andwf	___flge@ff1^0,w,c
 28093  006536  6E18               	movwf	??___flge^0,c
 28094  006538  0E00               	movlw	0
 28095  00653A  1411               	andwf	(___flge@ff1+1)^0,w,c
 28096  00653C  6E19               	movwf	(??___flge+1)^0,c
 28097  00653E  0E80               	movlw	128
 28098  006540  1412               	andwf	(___flge@ff1+2)^0,w,c
 28099  006542  6E1A               	movwf	(??___flge+2)^0,c
 28100  006544  0E7F               	movlw	127
 28101  006546  1413               	andwf	(___flge@ff1+3)^0,w,c
 28102  006548  6E1B               	movwf	(??___flge+3)^0,c
 28103  00654A  5018               	movf	??___flge^0,w,c
 28104  00654C  1019               	iorwf	(??___flge+1)^0,w,c
 28105  00654E  101A               	iorwf	(??___flge+2)^0,w,c
 28106  006550  101B               	iorwf	(??___flge+3)^0,w,c
 28107  006552  A4D8               	btfss	status,2,c
 28108  006554  EFAE  F032         	goto	u14161
 28109  006558  EFB0  F032         	goto	u14160
 28110  00655C                     u14161:
 28111  00655C  EFB8  F032         	goto	l14969
 28112  006560                     u14160:
 28113  006560  0E00               	movlw	0
 28114  006562  6E10               	movwf	___flge@ff1^0,c
 28115  006564  0E00               	movlw	0
 28116  006566  6E11               	movwf	(___flge@ff1+1)^0,c
 28117  006568  0E00               	movlw	0
 28118  00656A  6E12               	movwf	(___flge@ff1+2)^0,c
 28119  00656C  0E00               	movlw	0
 28120  00656E  6E13               	movwf	(___flge@ff1+3)^0,c
 28121  006570                     l14969:
 28122  006570  0E00               	movlw	0
 28123  006572  1414               	andwf	___flge@ff2^0,w,c
 28124  006574  6E18               	movwf	??___flge^0,c
 28125  006576  0E00               	movlw	0
 28126  006578  1415               	andwf	(___flge@ff2+1)^0,w,c
 28127  00657A  6E19               	movwf	(??___flge+1)^0,c
 28128  00657C  0E80               	movlw	128
 28129  00657E  1416               	andwf	(___flge@ff2+2)^0,w,c
 28130  006580  6E1A               	movwf	(??___flge+2)^0,c
 28131  006582  0E7F               	movlw	127
 28132  006584  1417               	andwf	(___flge@ff2+3)^0,w,c
 28133  006586  6E1B               	movwf	(??___flge+3)^0,c
 28134  006588  5018               	movf	??___flge^0,w,c
 28135  00658A  1019               	iorwf	(??___flge+1)^0,w,c
 28136  00658C  101A               	iorwf	(??___flge+2)^0,w,c
 28137  00658E  101B               	iorwf	(??___flge+3)^0,w,c
 28138  006590  A4D8               	btfss	status,2,c
 28139  006592  EFCD  F032         	goto	u14171
 28140  006596  EFCF  F032         	goto	u14170
 28141  00659A                     u14171:
 28142  00659A  EFD7  F032         	goto	l14973
 28143  00659E                     u14170:
 28144  00659E  0E00               	movlw	0
 28145  0065A0  6E14               	movwf	___flge@ff2^0,c
 28146  0065A2  0E00               	movlw	0
 28147  0065A4  6E15               	movwf	(___flge@ff2+1)^0,c
 28148  0065A6  0E00               	movlw	0
 28149  0065A8  6E16               	movwf	(___flge@ff2+2)^0,c
 28150  0065AA  0E00               	movlw	0
 28151  0065AC  6E17               	movwf	(___flge@ff2+3)^0,c
 28152  0065AE                     l14973:
 28153  0065AE  AE13               	btfss	(___flge@ff1+3)^0,7,c
 28154  0065B0  EFDC  F032         	goto	u14181
 28155  0065B4  EFDE  F032         	goto	u14180
 28156  0065B8                     u14181:
 28157  0065B8  EFE7  F032         	goto	l14977
 28158  0065BC                     u14180:
 28159  0065BC  6C10               	negf	___flge@ff1^0,c
 28160  0065BE  1E11               	comf	(___flge@ff1+1)^0,f,c
 28161  0065C0  B0D8               	btfsc	status,0,c
 28162  0065C2  2A11               	incf	(___flge@ff1+1)^0,f,c
 28163  0065C4  1E12               	comf	(___flge@ff1+2)^0,f,c
 28164  0065C6  B0D8               	btfsc	status,0,c
 28165  0065C8  2A12               	incf	(___flge@ff1+2)^0,f,c
 28166  0065CA  0E80               	movlw	128
 28167  0065CC  5613               	subfwb	(___flge@ff1+3)^0,f,c
 28168  0065CE                     l14977:
 28169  0065CE  AE17               	btfss	(___flge@ff2+3)^0,7,c
 28170  0065D0  EFEC  F032         	goto	u14191
 28171  0065D4  EFEE  F032         	goto	u14190
 28172  0065D8                     u14191:
 28173  0065D8  EFF7  F032         	goto	l3437
 28174  0065DC                     u14190:
 28175  0065DC  6C14               	negf	___flge@ff2^0,c
 28176  0065DE  1E15               	comf	(___flge@ff2+1)^0,f,c
 28177  0065E0  B0D8               	btfsc	status,0,c
 28178  0065E2  2A15               	incf	(___flge@ff2+1)^0,f,c
 28179  0065E4  1E16               	comf	(___flge@ff2+2)^0,f,c
 28180  0065E6  B0D8               	btfsc	status,0,c
 28181  0065E8  2A16               	incf	(___flge@ff2+2)^0,f,c
 28182  0065EA  0E80               	movlw	128
 28183  0065EC  5617               	subfwb	(___flge@ff2+3)^0,f,c
 28184  0065EE                     l3437:
 28185  0065EE  0E00               	movlw	0
 28186  0065F0  1A10               	xorwf	___flge@ff1^0,f,c
 28187  0065F2  0E00               	movlw	0
 28188  0065F4  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 28189  0065F6  0E00               	movlw	0
 28190  0065F8  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 28191  0065FA  0E80               	movlw	128
 28192  0065FC  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 28193  0065FE  0E00               	movlw	0
 28194  006600  1A14               	xorwf	___flge@ff2^0,f,c
 28195  006602  0E00               	movlw	0
 28196  006604  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 28197  006606  0E00               	movlw	0
 28198  006608  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 28199  00660A  0E80               	movlw	128
 28200  00660C  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 28201  00660E  5014               	movf	___flge@ff2^0,w,c
 28202  006610  5C10               	subwf	___flge@ff1^0,w,c
 28203  006612  5015               	movf	(___flge@ff2+1)^0,w,c
 28204  006614  5811               	subwfb	(___flge@ff1+1)^0,w,c
 28205  006616  5016               	movf	(___flge@ff2+2)^0,w,c
 28206  006618  5812               	subwfb	(___flge@ff1+2)^0,w,c
 28207  00661A  5017               	movf	(___flge@ff2+3)^0,w,c
 28208  00661C  5813               	subwfb	(___flge@ff1+3)^0,w,c
 28209  00661E  B0D8               	btfsc	status,0,c
 28210  006620  EF14  F033         	goto	u14201
 28211  006624  EF16  F033         	goto	u14200
 28212  006628                     u14201:
 28213  006628  EF19  F033         	goto	l14983
 28214  00662C                     u14200:
 28215  00662C  90D8               	bcf	status,0,c
 28216  00662E  EF1A  F033         	goto	l3442
 28217  006632                     l14983:
 28218  006632  80D8               	bsf	status,0,c
 28219  006634                     l3442:
 28220  006634  0012               	return		;funcret
 28221  006636                     __end_of___flge:
 28222                           	opt callstack 0
 28223                           
 28224 ;; *************** function _setPreambleLength *****************
 28225 ;; Defined at:
 28226 ;;		line 316 in file "phy/sx1216/phy_src/phy.c"
 28227 ;; Parameters:    Size  Location     Type
 28228 ;;  length          2   16[COMRAM] unsigned short 
 28229 ;; Auto vars:     Size  Location     Type
 28230 ;;		None
 28231 ;; Return value:  Size  Location     Type
 28232 ;;                  1    wreg      void 
 28233 ;; Registers used:
 28234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28235 ;; Tracked objects:
 28236 ;;		On entry : 0/0
 28237 ;;		On exit  : 0/0
 28238 ;;		Unchanged: 0/0
 28239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28244 ;;Total ram usage:        2 bytes
 28245 ;; Hardware stack levels used:    1
 28246 ;; Hardware stack levels required when called:   11
 28247 ;; This function calls:
 28248 ;;		_SX1276Write
 28249 ;; This function is called by:
 28250 ;;		_initRadio
 28251 ;; This function uses a non-reentrant model
 28252 ;;
 28253                           
 28254                           	psect	text172
 28255  009B0A                     __ptext172:
 28256                           	opt callstack 0
 28257  009B0A                     _setPreambleLength:
 28258                           	opt callstack 15
 28259  009B0A                     
 28260                           ;phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);phy/sx1216/phy_s
      +                          rc/phy.c: 317: {;phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(length >> 
      +                          8));
 28261  009B0A  5012               	movf	(setPreambleLength@length+1)^0,w,c
 28262  009B0C  6E0F               	movwf	SX1276Write@data^0,c
 28263  009B0E  0E20               	movlw	32
 28264  009B10  ECCC  F04D         	call	_SX1276Write
 28265                           
 28266                           ;phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 28267  009B14  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 28268  009B1A  0E21               	movlw	33
 28269  009B1C  ECCC  F04D         	call	_SX1276Write
 28270  009B20  0012               	return		;funcret
 28271  009B22                     __end_of_setPreambleLength:
 28272                           	opt callstack 0
 28273                           
 28274 ;; *************** function _setFrequency *****************
 28275 ;; Defined at:
 28276 ;;		line 160 in file "phy/sx1216/phy_src/phy.c"
 28277 ;; Parameters:    Size  Location     Type
 28278 ;;  frequency       4   34[COMRAM] unsigned long 
 28279 ;; Auto vars:     Size  Location     Type
 28280 ;;  num             4   42[COMRAM] unsigned long 
 28281 ;;  num_mod         4   38[COMRAM] unsigned long 
 28282 ;; Return value:  Size  Location     Type
 28283 ;;                  4   34[COMRAM] unsigned long 
 28284 ;; Registers used:
 28285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28286 ;; Tracked objects:
 28287 ;;		On entry : 0/0
 28288 ;;		On exit  : 0/0
 28289 ;;		Unchanged: 0/0
 28290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28292 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28294 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28295 ;;Total ram usage:       12 bytes
 28296 ;; Hardware stack levels used:    1
 28297 ;; Hardware stack levels required when called:   11
 28298 ;; This function calls:
 28299 ;;		_SX1276Write
 28300 ;;		___lldiv
 28301 ;;		___llmod
 28302 ;; This function is called by:
 28303 ;;		_initRadio
 28304 ;;		_PHY_SetChannel
 28305 ;; This function uses a non-reentrant model
 28306 ;;
 28307                           
 28308                           	psect	text173
 28309  005964                     __ptext173:
 28310                           	opt callstack 0
 28311  005964                     _setFrequency:
 28312                           	opt callstack 15
 28313  005964                     
 28314                           ;phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);phy/sx1216/phy
      +                          _src/phy.c: 161: {;phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;phy/sx1216/
      +                          phy_src/phy.c: 170:     num = frequency / 15625;
 28315  005964  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 28316  00596A  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 28317  005970  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 28318  005976  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 28319  00597C  0E09               	movlw	9
 28320  00597E  6E1A               	movwf	___lldiv@divisor^0,c
 28321  005980  0E3D               	movlw	61
 28322  005982  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28323  005984  0E00               	movlw	0
 28324  005986  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28325  005988  0E00               	movlw	0
 28326  00598A  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28327  00598C  EC0A  F03D         	call	___lldiv	;wreg free
 28328  005990  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 28329  005996  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 28330  00599C  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 28331  0059A2  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 28332                           
 28333                           ;phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 28334  0059A8  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 28335  0059AE  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 28336  0059B4  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 28337  0059BA  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 28338  0059C0  0E09               	movlw	9
 28339  0059C2  6E06               	movwf	___llmod@divisor^0,c
 28340  0059C4  0E3D               	movlw	61
 28341  0059C6  6E07               	movwf	(___llmod@divisor+1)^0,c
 28342  0059C8  0E00               	movlw	0
 28343  0059CA  6E08               	movwf	(___llmod@divisor+2)^0,c
 28344  0059CC  0E00               	movlw	0
 28345  0059CE  6E09               	movwf	(___llmod@divisor+3)^0,c
 28346  0059D0  EC0C  F041         	call	___llmod	;wreg free
 28347  0059D4  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 28348  0059DA  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 28349  0059E0  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 28350  0059E6  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 28351  0059EC                     
 28352                           ;phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 28353  0059EC  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 28354  0059F2  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 28355  0059F8  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 28356  0059FE  6A2B               	clrf	setFrequency@num^0,c
 28357  005A00                     
 28358                           ;phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 28359  005A00  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 28360  005A06  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 28361  005A0C  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 28362  005A12  6A27               	clrf	setFrequency@num_mod^0,c
 28363                           
 28364                           ;phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 28365  005A14  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 28366  005A1A  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 28367  005A20  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 28368  005A26  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 28369  005A2C  0E09               	movlw	9
 28370  005A2E  6E1A               	movwf	___lldiv@divisor^0,c
 28371  005A30  0E3D               	movlw	61
 28372  005A32  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28373  005A34  0E00               	movlw	0
 28374  005A36  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28375  005A38  0E00               	movlw	0
 28376  005A3A  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28377  005A3C  EC0A  F03D         	call	___lldiv	;wreg free
 28378  005A40  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 28379  005A46  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 28380  005A4C  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 28381  005A52  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 28382  005A58                     
 28383                           ;phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 28384  005A58  5027               	movf	setFrequency@num_mod^0,w,c
 28385  005A5A  262B               	addwf	setFrequency@num^0,f,c
 28386  005A5C  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 28387  005A5E  222C               	addwfc	(setFrequency@num+1)^0,f,c
 28388  005A60  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 28389  005A62  222D               	addwfc	(setFrequency@num+2)^0,f,c
 28390  005A64  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 28391  005A66  222E               	addwfc	(setFrequency@num+3)^0,f,c
 28392  005A68                     
 28393                           ;phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 28394  005A68  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 28395  005A6E  0E06               	movlw	6
 28396  005A70  ECCC  F04D         	call	_SX1276Write
 28397  005A74                     
 28398                           ;phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 28399  005A74  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 28400  005A7A  0E07               	movlw	7
 28401  005A7C  ECCC  F04D         	call	_SX1276Write
 28402  005A80                     
 28403                           ;phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 28404  005A80  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 28405  005A86  0E08               	movlw	8
 28406  005A88  ECCC  F04D         	call	_SX1276Write
 28407  005A8C  0012               	return		;funcret
 28408  005A8E                     __end_of_setFrequency:
 28409                           	opt callstack 0
 28410                           
 28411 ;; *************** function _setCodingRate4 *****************
 28412 ;; Defined at:
 28413 ;;		line 297 in file "phy/sx1216/phy_src/phy.c"
 28414 ;; Parameters:    Size  Location     Type
 28415 ;;  denominator     1    wreg     unsigned char 
 28416 ;; Auto vars:     Size  Location     Type
 28417 ;;  denominator     1   18[COMRAM] unsigned char 
 28418 ;;  cr              1   17[COMRAM] unsigned char 
 28419 ;; Return value:  Size  Location     Type
 28420 ;;                  1    wreg      void 
 28421 ;; Registers used:
 28422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28423 ;; Tracked objects:
 28424 ;;		On entry : 0/0
 28425 ;;		On exit  : 0/0
 28426 ;;		Unchanged: 0/0
 28427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28431 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28432 ;;Total ram usage:        3 bytes
 28433 ;; Hardware stack levels used:    1
 28434 ;; Hardware stack levels required when called:   11
 28435 ;; This function calls:
 28436 ;;		_SX1276Read
 28437 ;;		_SX1276Write
 28438 ;; This function is called by:
 28439 ;;		_initRadio
 28440 ;; This function uses a non-reentrant model
 28441 ;;
 28442                           
 28443                           	psect	text174
 28444  008E30                     __ptext174:
 28445                           	opt callstack 0
 28446  008E30                     _setCodingRate4:
 28447                           	opt callstack 15
 28448                           
 28449                           ;incstack = 0
 28450                           ;setCodingRate4@denominator stored from wreg
 28451  008E30  6E13               	movwf	setCodingRate4@denominator^0,c
 28452  008E32                     
 28453                           ;phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);phy/sx1216/phy_
      +                          src/phy.c: 298: {;phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 28454  008E32  0E05               	movlw	5
 28455  008E34  6013               	cpfslt	setCodingRate4@denominator^0,c
 28456  008E36  EF1F  F047         	goto	u14941
 28457  008E3A  EF21  F047         	goto	u14940
 28458  008E3E                     u14941:
 28459  008E3E  EF25  F047         	goto	l15461
 28460  008E42                     u14940:
 28461  008E42                     
 28462                           ;phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 28463  008E42  0E05               	movlw	5
 28464  008E44  6E13               	movwf	setCodingRate4@denominator^0,c
 28465                           
 28466                           ;phy/sx1216/phy_src/phy.c: 301:   } else if (denominator > 8) {
 28467  008E46  EF2F  F047         	goto	l15465
 28468  008E4A                     l15461:
 28469  008E4A  0E08               	movlw	8
 28470  008E4C  6413               	cpfsgt	setCodingRate4@denominator^0,c
 28471  008E4E  EF2B  F047         	goto	u14951
 28472  008E52  EF2D  F047         	goto	u14950
 28473  008E56                     u14951:
 28474  008E56  EF2F  F047         	goto	l15465
 28475  008E5A                     u14950:
 28476  008E5A                     
 28477                           ;phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 28478  008E5A  0E08               	movlw	8
 28479  008E5C  6E13               	movwf	setCodingRate4@denominator^0,c
 28480  008E5E                     l15465:
 28481                           
 28482                           ;phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 28483  008E5E  5013               	movf	setCodingRate4@denominator^0,w,c
 28484  008E60  0FFC               	addlw	252
 28485  008E62  6E12               	movwf	setCodingRate4@cr^0,c
 28486  008E64                     
 28487                           ;phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr << 1
      +                          ));
 28488  008E64  90D8               	bcf	status,0,c
 28489  008E66  3412               	rlcf	setCodingRate4@cr^0,w,c
 28490  008E68  6E11               	movwf	??_setCodingRate4^0,c
 28491  008E6A  0E1D               	movlw	29
 28492  008E6C  ECA9  F04D         	call	_SX1276Read
 28493  008E70  0BF1               	andlw	241
 28494  008E72  1011               	iorwf	??_setCodingRate4^0,w,c
 28495  008E74  6E0F               	movwf	SX1276Write@data^0,c
 28496  008E76  0E1D               	movlw	29
 28497  008E78  ECCC  F04D         	call	_SX1276Write
 28498  008E7C  0012               	return		;funcret
 28499  008E7E                     __end_of_setCodingRate4:
 28500                           	opt callstack 0
 28501                           
 28502 ;; *************** function _receive *****************
 28503 ;; Defined at:
 28504 ;;		line 449 in file "phy/sx1216/phy_src/phy.c"
 28505 ;; Parameters:    Size  Location     Type
 28506 ;;  size            1    wreg     unsigned char 
 28507 ;; Auto vars:     Size  Location     Type
 28508 ;;  size            1   16[COMRAM] unsigned char 
 28509 ;; Return value:  Size  Location     Type
 28510 ;;                  1    wreg      void 
 28511 ;; Registers used:
 28512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28513 ;; Tracked objects:
 28514 ;;		On entry : 0/0
 28515 ;;		On exit  : 0/0
 28516 ;;		Unchanged: 0/0
 28517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28522 ;;Total ram usage:        1 bytes
 28523 ;; Hardware stack levels used:    1
 28524 ;; Hardware stack levels required when called:   12
 28525 ;; This function calls:
 28526 ;;		_SX1276Write
 28527 ;;		_explicitHeaderMode
 28528 ;;		_implicitHeaderMode
 28529 ;; This function is called by:
 28530 ;;		_initRadio
 28531 ;;		_DIO0_Receive_ISR
 28532 ;;		_radio_engine
 28533 ;;		_PHY_SetRxState
 28534 ;;		_cad_detected_isr
 28535 ;; This function uses a non-reentrant model
 28536 ;;
 28537                           
 28538                           	psect	text175
 28539  008F5E                     __ptext175:
 28540                           	opt callstack 0
 28541  008F5E                     _receive:
 28542                           	opt callstack 14
 28543                           
 28544                           ;incstack = 0
 28545                           ;receive@size stored from wreg
 28546  008F5E  6E11               	movwf	receive@size^0,c
 28547  008F60                     
 28548                           ;phy/sx1216/phy_src/phy.c: 449: void receive(uint8_t size);phy/sx1216/phy_src/phy.c: 450
      +                          : {;phy/sx1216/phy_src/phy.c: 451:   if (size > 0) {
 28549  008F60  5011               	movf	receive@size^0,w,c
 28550  008F62  B4D8               	btfsc	status,2,c
 28551  008F64  EFB6  F047         	goto	u14961
 28552  008F68  EFB8  F047         	goto	u14960
 28553  008F6C                     u14961:
 28554  008F6C  EFC2  F047         	goto	l15477
 28555  008F70                     u14960:
 28556  008F70                     
 28557                           ;phy/sx1216/phy_src/phy.c: 452:     implicitHeaderMode();
 28558  008F70  EC91  F04D         	call	_implicitHeaderMode	;wreg free
 28559                           
 28560                           ;phy/sx1216/phy_src/phy.c: 454:     SX1276Write(0x22, size & 0xff);
 28561  008F74  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 28562  008F7A  0E22               	movlw	34
 28563  008F7C  ECCC  F04D         	call	_SX1276Write
 28564                           
 28565                           ;phy/sx1216/phy_src/phy.c: 455:   } else {
 28566  008F80  EFC4  F047         	goto	l2557
 28567  008F84                     l15477:
 28568                           
 28569                           ;phy/sx1216/phy_src/phy.c: 456:     explicitHeaderMode();
 28570  008F84  EC9D  F04D         	call	_explicitHeaderMode	;wreg free
 28571  008F88                     l2557:
 28572                           
 28573                           ;phy/sx1216/phy_src/phy.c: 459:   SX1276Write(0x0D, 0);
 28574  008F88  0E00               	movlw	0
 28575  008F8A  6E0F               	movwf	SX1276Write@data^0,c
 28576  008F8C  0E0D               	movlw	13
 28577  008F8E  ECCC  F04D         	call	_SX1276Write
 28578                           
 28579                           ;phy/sx1216/phy_src/phy.c: 460:   SX1276Write(0x12, 0xFF);
 28580  008F92  0EFF               	movlw	255
 28581  008F94  6E0F               	movwf	SX1276Write@data^0,c
 28582  008F96  0E12               	movlw	18
 28583  008F98  ECCC  F04D         	call	_SX1276Write
 28584                           
 28585                           ;phy/sx1216/phy_src/phy.c: 461:   SX1276Write(0x01,0x80 | 0x05);
 28586  008F9C  0E85               	movlw	133
 28587  008F9E  6E0F               	movwf	SX1276Write@data^0,c
 28588  008FA0  0E01               	movlw	1
 28589  008FA2  ECCC  F04D         	call	_SX1276Write
 28590  008FA6  0012               	return		;funcret
 28591  008FA8                     __end_of_receive:
 28592                           	opt callstack 0
 28593                           
 28594 ;; *************** function _implicitHeaderMode *****************
 28595 ;; Defined at:
 28596 ;;		line 411 in file "phy/sx1216/phy_src/phy.c"
 28597 ;; Parameters:    Size  Location     Type
 28598 ;;		None
 28599 ;; Auto vars:     Size  Location     Type
 28600 ;;		None
 28601 ;; Return value:  Size  Location     Type
 28602 ;;                  1    wreg      void 
 28603 ;; Registers used:
 28604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28605 ;; Tracked objects:
 28606 ;;		On entry : 0/0
 28607 ;;		On exit  : 0/0
 28608 ;;		Unchanged: 0/0
 28609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28614 ;;Total ram usage:        0 bytes
 28615 ;; Hardware stack levels used:    1
 28616 ;; Hardware stack levels required when called:   11
 28617 ;; This function calls:
 28618 ;;		_SX1276Read
 28619 ;;		_SX1276Write
 28620 ;; This function is called by:
 28621 ;;		_receive
 28622 ;;		_beginPacket
 28623 ;; This function uses a non-reentrant model
 28624 ;;
 28625                           
 28626                           	psect	text176
 28627  009B22                     __ptext176:
 28628                           	opt callstack 0
 28629  009B22                     _implicitHeaderMode:
 28630                           	opt callstack 14
 28631  009B22                     
 28632                           ;phy/sx1216/phy_src/phy.c: 413:   _implicitHeaderMode = 1;
 28633  009B22  0E01               	movlw	1
 28634  009B24  0101               	movlb	1	; () banked
 28635  009B26  6F74               	movwf	__implicitHeaderMode& (0+255),b
 28636  009B28                     
 28637                           ; BSR set to: 1
 28638                           ;phy/sx1216/phy_src/phy.c: 415:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 28639  009B28  0E1D               	movlw	29
 28640  009B2A  ECA9  F04D         	call	_SX1276Read
 28641  009B2E  0901               	iorlw	1
 28642  009B30  6E0F               	movwf	SX1276Write@data^0,c
 28643  009B32  0E1D               	movlw	29
 28644  009B34  ECCC  F04D         	call	_SX1276Write
 28645  009B38  0012               	return		;funcret
 28646  009B3A                     __end_of_implicitHeaderMode:
 28647                           	opt callstack 0
 28648                           
 28649 ;; *************** function _explicitHeaderMode *****************
 28650 ;; Defined at:
 28651 ;;		line 397 in file "phy/sx1216/phy_src/phy.c"
 28652 ;; Parameters:    Size  Location     Type
 28653 ;;		None
 28654 ;; Auto vars:     Size  Location     Type
 28655 ;;		None
 28656 ;; Return value:  Size  Location     Type
 28657 ;;                  1    wreg      void 
 28658 ;; Registers used:
 28659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28660 ;; Tracked objects:
 28661 ;;		On entry : 0/0
 28662 ;;		On exit  : 0/0
 28663 ;;		Unchanged: 0/0
 28664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28669 ;;Total ram usage:        0 bytes
 28670 ;; Hardware stack levels used:    1
 28671 ;; Hardware stack levels required when called:   11
 28672 ;; This function calls:
 28673 ;;		_SX1276Read
 28674 ;;		_SX1276Write
 28675 ;; This function is called by:
 28676 ;;		_receive
 28677 ;;		_initRadio
 28678 ;;		_PHY_DataReq
 28679 ;;		_beginPacket
 28680 ;; This function uses a non-reentrant model
 28681 ;;
 28682                           
 28683                           	psect	text177
 28684  009B3A                     __ptext177:
 28685                           	opt callstack 0
 28686  009B3A                     _explicitHeaderMode:
 28687                           	opt callstack 14
 28688  009B3A                     
 28689                           ;phy/sx1216/phy_src/phy.c: 399:   _implicitHeaderMode = 0;
 28690  009B3A  0E00               	movlw	0
 28691  009B3C  0101               	movlb	1	; () banked
 28692  009B3E  6F74               	movwf	__implicitHeaderMode& (0+255),b
 28693  009B40                     
 28694                           ; BSR set to: 1
 28695                           ;phy/sx1216/phy_src/phy.c: 401:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 28696  009B40  0E1D               	movlw	29
 28697  009B42  ECA9  F04D         	call	_SX1276Read
 28698  009B46  0BFE               	andlw	254
 28699  009B48  6E0F               	movwf	SX1276Write@data^0,c
 28700  009B4A  0E1D               	movlw	29
 28701  009B4C  ECCC  F04D         	call	_SX1276Write
 28702  009B50  0012               	return		;funcret
 28703  009B52                     __end_of_explicitHeaderMode:
 28704                           	opt callstack 0
 28705                           
 28706 ;; *************** function _enableCrc *****************
 28707 ;; Defined at:
 28708 ;;		line 351 in file "phy/sx1216/phy_src/phy.c"
 28709 ;; Parameters:    Size  Location     Type
 28710 ;;		None
 28711 ;; Auto vars:     Size  Location     Type
 28712 ;;		None
 28713 ;; Return value:  Size  Location     Type
 28714 ;;                  1    wreg      void 
 28715 ;; Registers used:
 28716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28717 ;; Tracked objects:
 28718 ;;		On entry : 0/0
 28719 ;;		On exit  : 0/0
 28720 ;;		Unchanged: 0/0
 28721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28726 ;;Total ram usage:        0 bytes
 28727 ;; Hardware stack levels used:    1
 28728 ;; Hardware stack levels required when called:   11
 28729 ;; This function calls:
 28730 ;;		_SX1276Read
 28731 ;;		_SX1276Write
 28732 ;; This function is called by:
 28733 ;;		_initRadio
 28734 ;; This function uses a non-reentrant model
 28735 ;;
 28736                           
 28737                           	psect	text178
 28738  009BAE                     __ptext178:
 28739                           	opt callstack 0
 28740  009BAE                     _enableCrc:
 28741                           	opt callstack 15
 28742  009BAE                     
 28743                           ;phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 28744  009BAE  0E1E               	movlw	30
 28745  009BB0  ECA9  F04D         	call	_SX1276Read
 28746  009BB4  0904               	iorlw	4
 28747  009BB6  6E0F               	movwf	SX1276Write@data^0,c
 28748  009BB8  0E1E               	movlw	30
 28749  009BBA  ECCC  F04D         	call	_SX1276Write
 28750  009BBE  0012               	return		;funcret
 28751  009BC0                     __end_of_enableCrc:
 28752                           	opt callstack 0
 28753                           
 28754 ;; *************** function _SX1276Write *****************
 28755 ;; Defined at:
 28756 ;;		line 45 in file "phy/sx1216/phy_src/phy.c"
 28757 ;; Parameters:    Size  Location     Type
 28758 ;;  addr            1    wreg     unsigned char 
 28759 ;;  data            1   14[COMRAM] unsigned char 
 28760 ;; Auto vars:     Size  Location     Type
 28761 ;;  addr            1   15[COMRAM] unsigned char 
 28762 ;; Return value:  Size  Location     Type
 28763 ;;                  1    wreg      void 
 28764 ;; Registers used:
 28765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28766 ;; Tracked objects:
 28767 ;;		On entry : 0/0
 28768 ;;		On exit  : 0/0
 28769 ;;		Unchanged: 0/0
 28770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28771 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28775 ;;Total ram usage:        2 bytes
 28776 ;; Hardware stack levels used:    1
 28777 ;; Hardware stack levels required when called:   10
 28778 ;; This function calls:
 28779 ;;		_SX1276WriteBuffer
 28780 ;; This function is called by:
 28781 ;;		_idle
 28782 ;;		_setTxPower
 28783 ;;		_setFrequency
 28784 ;;		_setSpreadingFactor
 28785 ;;		_setSignalBandwidth
 28786 ;;		_setCodingRate4
 28787 ;;		_setPreambleLength
 28788 ;;		_setSyncWord
 28789 ;;		_enableCrc
 28790 ;;		_explicitHeaderMode
 28791 ;;		_implicitHeaderMode
 28792 ;;		_receive
 28793 ;;		_initRadio
 28794 ;;		_cad
 28795 ;;		_start_radio_cad
 28796 ;;		_DIO0_Receive_ISR
 28797 ;;		_PHY_DataReq
 28798 ;;		_sleep
 28799 ;;		_disableCrc
 28800 ;;		_beginPacket
 28801 ;;		_endPacket
 28802 ;;		_cad_done_isr
 28803 ;;		_cad_detected_isr
 28804 ;;		_rx_timeout_isr
 28805 ;;		_DIO2_FHSS_ISR
 28806 ;; This function uses a non-reentrant model
 28807 ;;
 28808                           
 28809                           	psect	text179
 28810  009B98                     __ptext179:
 28811                           	opt callstack 0
 28812  009B98                     _SX1276Write:
 28813                           	opt callstack 15
 28814                           
 28815                           ;incstack = 0
 28816                           ;SX1276Write@addr stored from wreg
 28817  009B98  6E10               	movwf	SX1276Write@addr^0,c
 28818  009B9A                     
 28819                           ;phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );phy
      +                          /sx1216/phy_src/phy.c: 46: {;phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffer( addr, 
      +                          &data, 1 );
 28820  009B9A  0E0F               	movlw	low SX1276Write@data
 28821  009B9C  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 28822  009B9E  0E00               	movlw	high SX1276Write@data
 28823  009BA0  6E0A               	movwf	(SX1276WriteBuffer@buffer+1)^0,c
 28824  009BA2  0E01               	movlw	1
 28825  009BA4  6E0B               	movwf	SX1276WriteBuffer@size^0,c
 28826  009BA6  5010               	movf	SX1276Write@addr^0,w,c
 28827  009BA8  EC0C  F04C         	call	_SX1276WriteBuffer
 28828  009BAC  0012               	return		;funcret
 28829  009BAE                     __end_of_SX1276Write:
 28830                           	opt callstack 0
 28831                           
 28832 ;; *************** function _SX1276WriteBuffer *****************
 28833 ;; Defined at:
 28834 ;;		line 75 in file "phy/sx1216/phy_src/phy.c"
 28835 ;; Parameters:    Size  Location     Type
 28836 ;;  addr            1    wreg     unsigned char 
 28837 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 28838 ;;		 -> SX1276Write@data(1), 
 28839 ;;  size            1   10[COMRAM] unsigned char 
 28840 ;; Auto vars:     Size  Location     Type
 28841 ;;  addr            1   11[COMRAM] unsigned char 
 28842 ;;  i               1    0        unsigned char 
 28843 ;; Return value:  Size  Location     Type
 28844 ;;                  1    wreg      void 
 28845 ;; Registers used:
 28846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28847 ;; Tracked objects:
 28848 ;;		On entry : 0/0
 28849 ;;		On exit  : 0/0
 28850 ;;		Unchanged: 0/0
 28851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28852 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28855 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28856 ;;Total ram usage:        4 bytes
 28857 ;; Hardware stack levels used:    1
 28858 ;; Hardware stack levels required when called:    9
 28859 ;; This function calls:
 28860 ;;		_SPI1_ExchangeByte
 28861 ;;		_SPI1_WriteBlock
 28862 ;; This function is called by:
 28863 ;;		_SX1276Write
 28864 ;;		_SX1276WriteFifo
 28865 ;; This function uses a non-reentrant model
 28866 ;;
 28867                           
 28868                           	psect	text180
 28869  009818                     __ptext180:
 28870                           	opt callstack 0
 28871  009818                     _SX1276WriteBuffer:
 28872                           	opt callstack 15
 28873                           
 28874                           ;incstack = 0
 28875                           ;SX1276WriteBuffer@addr stored from wreg
 28876  009818  6E0C               	movwf	SX1276WriteBuffer@addr^0,c
 28877  00981A  9CBC               	bcf	188,6,c	;volatile
 28878  00981C                     
 28879                           ;phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 28880  00981C  500C               	movf	SX1276WriteBuffer@addr^0,w,c
 28881  00981E  0980               	iorlw	128
 28882  009820  EC46  F04C         	call	_SPI1_ExchangeByte
 28883  009824                     
 28884                           ;phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 28885  009824  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 28886  00982A  0060  F028  F004   	movff	SX1276WriteBuffer@buffer+1,SPI1_WriteBlock@block+1
 28887  009830  0060  F02C  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 28888  009836  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 28889  009838  EC52  F049         	call	_SPI1_WriteBlock	;wreg free
 28890  00983C  8CBC               	bsf	188,6,c	;volatile
 28891  00983E  0012               	return		;funcret
 28892  009840                     __end_of_SX1276WriteBuffer:
 28893                           	opt callstack 0
 28894                           
 28895 ;; *************** function _SPI1_WriteBlock *****************
 28896 ;; Defined at:
 28897 ;;		line 121 in file "mcc_generated_files/spi1.c"
 28898 ;; Parameters:    Size  Location     Type
 28899 ;;  block           2    2[COMRAM] PTR void 
 28900 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 28901 ;;  blockSize       2    4[COMRAM] unsigned int 
 28902 ;; Auto vars:     Size  Location     Type
 28903 ;;  data            2    6[COMRAM] PTR unsigned char 
 28904 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 28905 ;; Return value:  Size  Location     Type
 28906 ;;                  1    wreg      void 
 28907 ;; Registers used:
 28908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28909 ;; Tracked objects:
 28910 ;;		On entry : 0/0
 28911 ;;		On exit  : 0/0
 28912 ;;		Unchanged: 0/0
 28913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28917 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28918 ;;Total ram usage:        6 bytes
 28919 ;; Hardware stack levels used:    1
 28920 ;; Hardware stack levels required when called:    8
 28921 ;; This function calls:
 28922 ;;		_SPI1_ExchangeByte
 28923 ;; This function is called by:
 28924 ;;		_SX1276WriteBuffer
 28925 ;;		_PHY_DataReq
 28926 ;; This function uses a non-reentrant model
 28927 ;;
 28928                           
 28929                           	psect	text181
 28930  0092A4                     __ptext181:
 28931                           	opt callstack 0
 28932  0092A4                     _SPI1_WriteBlock:
 28933                           	opt callstack 15
 28934  0092A4                     
 28935                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 28936  0092A4  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 28937  0092AA  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 28938                           
 28939                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 28940  0092B0  EF65  F049         	goto	l14275
 28941  0092B4                     l14271:
 28942                           
 28943                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 28944  0092B4  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 28945  0092BA  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 28946  0092C0  50DF               	movf	indf2,w,c
 28947  0092C2  EC46  F04C         	call	_SPI1_ExchangeByte
 28948  0092C6  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 28949  0092C8  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 28950  0092CA                     l14275:
 28951                           
 28952                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 28953  0092CA  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 28954  0092CC  A0D8               	btfss	status,0,c
 28955  0092CE  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 28956  0092D0  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 28957  0092D2  E106               	bnz	u13391
 28958  0092D4  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 28959  0092D6  A4D8               	btfss	status,2,c
 28960  0092D8  EF70  F049         	goto	u13391
 28961  0092DC  EF72  F049         	goto	u13390
 28962  0092E0                     u13391:
 28963  0092E0  EF5A  F049         	goto	l14271
 28964  0092E4                     u13390:
 28965  0092E4  0012               	return		;funcret
 28966  0092E6                     __end_of_SPI1_WriteBlock:
 28967                           	opt callstack 0
 28968                           
 28969 ;; *************** function _SX1276Read *****************
 28970 ;; Defined at:
 28971 ;;		line 32 in file "phy/sx1216/phy_src/phy.c"
 28972 ;; Parameters:    Size  Location     Type
 28973 ;;  addr            1    wreg     unsigned char 
 28974 ;; Auto vars:     Size  Location     Type
 28975 ;;  addr            1   12[COMRAM] unsigned char 
 28976 ;;  data            1   13[COMRAM] unsigned char 
 28977 ;; Return value:  Size  Location     Type
 28978 ;;                  1    wreg      unsigned char 
 28979 ;; Registers used:
 28980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28981 ;; Tracked objects:
 28982 ;;		On entry : 0/0
 28983 ;;		On exit  : 0/0
 28984 ;;		Unchanged: 0/0
 28985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28990 ;;Total ram usage:        2 bytes
 28991 ;; Hardware stack levels used:    1
 28992 ;; Hardware stack levels required when called:   10
 28993 ;; This function calls:
 28994 ;;		_SX1276ReadBuffer
 28995 ;; This function is called by:
 28996 ;;		_setSpreadingFactor
 28997 ;;		_setSignalBandwidth
 28998 ;;		_getSpreadingFactor
 28999 ;;		_getSignalBandwidth
 29000 ;;		_setCodingRate4
 29001 ;;		_enableCrc
 29002 ;;		_explicitHeaderMode
 29003 ;;		_implicitHeaderMode
 29004 ;;		_initRadio
 29005 ;;		_cad
 29006 ;;		_DIO0_Receive_ISR
 29007 ;;		_radio_engine
 29008 ;;		_getSyncWord
 29009 ;;		_disableCrc
 29010 ;;		_endPacket
 29011 ;;		_available
 29012 ;;		_read
 29013 ;;		_readAllReg
 29014 ;; This function uses a non-reentrant model
 29015 ;;
 29016                           
 29017                           	psect	text182
 29018  009B52                     __ptext182:
 29019                           	opt callstack 0
 29020  009B52                     _SX1276Read:
 29021                           	opt callstack 14
 29022                           
 29023                           ;incstack = 0
 29024                           ;SX1276Read@addr stored from wreg
 29025  009B52  6E0D               	movwf	SX1276Read@addr^0,c
 29026  009B54                     
 29027                           ;phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );phy/sx1216/phy_
      +                          src/phy.c: 33: {;phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;phy/sx1216/phy_src/phy.
      +                          c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 29028  009B54  0E0E               	movlw	low SX1276Read@data
 29029  009B56  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 29030  009B58  0E00               	movlw	high SX1276Read@data
 29031  009B5A  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 29032  009B5C  0E01               	movlw	1
 29033  009B5E  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 29034  009B60  500D               	movf	SX1276Read@addr^0,w,c
 29035  009B62  EC20  F04C         	call	_SX1276ReadBuffer
 29036  009B66                     
 29037                           ;phy/sx1216/phy_src/phy.c: 36:     return data;
 29038  009B66  500E               	movf	SX1276Read@data^0,w,c
 29039  009B68  0012               	return		;funcret
 29040  009B6A                     __end_of_SX1276Read:
 29041                           	opt callstack 0
 29042                           
 29043 ;; *************** function _SX1276ReadBuffer *****************
 29044 ;; Defined at:
 29045 ;;		line 57 in file "phy/sx1216/phy_src/phy.c"
 29046 ;; Parameters:    Size  Location     Type
 29047 ;;  addr            1    wreg     unsigned char 
 29048 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 29049 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29050 ;;  size            1   10[COMRAM] unsigned char 
 29051 ;; Auto vars:     Size  Location     Type
 29052 ;;  addr            1   11[COMRAM] unsigned char 
 29053 ;;  i               1    0        unsigned char 
 29054 ;; Return value:  Size  Location     Type
 29055 ;;                  1    wreg      void 
 29056 ;; Registers used:
 29057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29058 ;; Tracked objects:
 29059 ;;		On entry : 0/0
 29060 ;;		On exit  : 0/0
 29061 ;;		Unchanged: 0/0
 29062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29063 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29066 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29067 ;;Total ram usage:        4 bytes
 29068 ;; Hardware stack levels used:    1
 29069 ;; Hardware stack levels required when called:    9
 29070 ;; This function calls:
 29071 ;;		_SPI1_ExchangeByte
 29072 ;;		_SPI1_ReadBlock
 29073 ;; This function is called by:
 29074 ;;		_SX1276Read
 29075 ;;		_DIO0_Receive_ISR
 29076 ;;		_SX1276ReadFifo
 29077 ;; This function uses a non-reentrant model
 29078 ;;
 29079                           
 29080                           	psect	text183
 29081  009840                     __ptext183:
 29082                           	opt callstack 0
 29083  009840                     _SX1276ReadBuffer:
 29084                           	opt callstack 14
 29085                           
 29086                           ;incstack = 0
 29087                           ;SX1276ReadBuffer@addr stored from wreg
 29088  009840  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 29089  009842  9CBC               	bcf	188,6,c	;volatile
 29090  009844                     
 29091                           ;phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 29092  009844  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 29093  009846  0B7F               	andlw	127
 29094  009848  EC46  F04C         	call	_SPI1_ExchangeByte
 29095  00984C                     
 29096                           ;phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 29097  00984C  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 29098  009852  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 29099  009858  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 29100  00985E  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 29101  009860  EC0E  F049         	call	_SPI1_ReadBlock	;wreg free
 29102  009864  8CBC               	bsf	188,6,c	;volatile
 29103  009866  0012               	return		;funcret
 29104  009868                     __end_of_SX1276ReadBuffer:
 29105                           	opt callstack 0
 29106                           
 29107 ;; *************** function _SPI1_ReadBlock *****************
 29108 ;; Defined at:
 29109 ;;		line 130 in file "mcc_generated_files/spi1.c"
 29110 ;; Parameters:    Size  Location     Type
 29111 ;;  block           2    2[COMRAM] PTR void 
 29112 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29113 ;;  blockSize       2    4[COMRAM] unsigned int 
 29114 ;; Auto vars:     Size  Location     Type
 29115 ;;  data            2    6[COMRAM] PTR unsigned char 
 29116 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29117 ;; Return value:  Size  Location     Type
 29118 ;;                  1    wreg      void 
 29119 ;; Registers used:
 29120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29121 ;; Tracked objects:
 29122 ;;		On entry : 0/0
 29123 ;;		On exit  : 0/0
 29124 ;;		Unchanged: 0/0
 29125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29129 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29130 ;;Total ram usage:        6 bytes
 29131 ;; Hardware stack levels used:    1
 29132 ;; Hardware stack levels required when called:    8
 29133 ;; This function calls:
 29134 ;;		_SPI1_ExchangeByte
 29135 ;; This function is called by:
 29136 ;;		_SX1276ReadBuffer
 29137 ;; This function uses a non-reentrant model
 29138 ;;
 29139                           
 29140                           	psect	text184
 29141  00921C                     __ptext184:
 29142                           	opt callstack 0
 29143  00921C                     _SPI1_ReadBlock:
 29144                           	opt callstack 14
 29145  00921C                     
 29146                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 29147  00921C  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 29148  009222  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 29149                           
 29150                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29151  009228  EF22  F049         	goto	l14283
 29152  00922C                     l14279:
 29153                           
 29154                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 29155  00922C  0E00               	movlw	0
 29156  00922E  EC46  F04C         	call	_SPI1_ExchangeByte
 29157  009232  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 29158  009238  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 29159  00923E  6EDF               	movwf	indf2,c
 29160  009240  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 29161  009242  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 29162  009244                     l14283:
 29163                           
 29164                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29165  009244  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 29166  009246  A0D8               	btfss	status,0,c
 29167  009248  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 29168  00924A  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 29169  00924C  E106               	bnz	u13401
 29170  00924E  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 29171  009250  A4D8               	btfss	status,2,c
 29172  009252  EF2D  F049         	goto	u13401
 29173  009256  EF2F  F049         	goto	u13400
 29174  00925A                     u13401:
 29175  00925A  EF16  F049         	goto	l14279
 29176  00925E                     u13400:
 29177  00925E  0012               	return		;funcret
 29178  009260                     __end_of_SPI1_ReadBlock:
 29179                           	opt callstack 0
 29180                           
 29181 ;; *************** function _SPI1_ExchangeByte *****************
 29182 ;; Defined at:
 29183 ;;		line 100 in file "mcc_generated_files/spi1.c"
 29184 ;; Parameters:    Size  Location     Type
 29185 ;;  data            1    wreg     unsigned char 
 29186 ;; Auto vars:     Size  Location     Type
 29187 ;;  data            1    1[COMRAM] unsigned char 
 29188 ;; Return value:  Size  Location     Type
 29189 ;;                  1    wreg      unsigned char 
 29190 ;; Registers used:
 29191 ;;		wreg, status,2
 29192 ;; Tracked objects:
 29193 ;;		On entry : 0/0
 29194 ;;		On exit  : 0/0
 29195 ;;		Unchanged: 0/0
 29196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29201 ;;Total ram usage:        1 bytes
 29202 ;; Hardware stack levels used:    1
 29203 ;; Hardware stack levels required when called:    7
 29204 ;; This function calls:
 29205 ;;		Nothing
 29206 ;; This function is called by:
 29207 ;;		_SPI1_WriteBlock
 29208 ;;		_SPI1_ReadBlock
 29209 ;;		_SX1276ReadBuffer
 29210 ;;		_SX1276WriteBuffer
 29211 ;;		_PHY_DataReq
 29212 ;; This function uses a non-reentrant model
 29213 ;;
 29214                           
 29215                           	psect	text185
 29216  00988C                     __ptext185:
 29217                           	opt callstack 0
 29218  00988C                     _SPI1_ExchangeByte:
 29219                           	opt callstack 15
 29220                           
 29221                           ;incstack = 0
 29222                           ;SPI1_ExchangeByte@data stored from wreg
 29223  00988C  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 29224  00988E                     
 29225                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 29226  00988E  0E01               	movlw	1
 29227  009890  013D               	movlb	61	; () banked
 29228  009892  6F12               	movwf	18,b	;volatile
 29229  009894                     
 29230                           ; BSR set to: 61
 29231                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 29232  009894  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 29233  00989A                     l1011:
 29234  00989A  0139               	movlb	57	; () banked
 29235  00989C  A9A2               	btfss	162,4,b	;volatile
 29236  00989E  EF53  F04C         	goto	u12831
 29237  0098A2  EF55  F04C         	goto	u12830
 29238  0098A6                     u12831:
 29239  0098A6  EF4D  F04C         	goto	l1011
 29240  0098AA                     u12830:
 29241  0098AA                     
 29242                           ; BSR set to: 57
 29243                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 29244  0098AA  013D               	movlb	61	; () banked
 29245  0098AC  5110               	movf	16,w,b	;volatile
 29246  0098AE                     
 29247                           ; BSR set to: 61
 29248  0098AE  0012               	return		;funcret
 29249  0098B0                     __end_of_SPI1_ExchangeByte:
 29250                           	opt callstack 0
 29251                           
 29252 ;; *************** function _computeFRF *****************
 29253 ;; Defined at:
 29254 ;;		line 725 in file "phy/sx1216/phy_src/phy.c"
 29255 ;; Parameters:    Size  Location     Type
 29256 ;;		None
 29257 ;; Auto vars:     Size  Location     Type
 29258 ;;  num             4   42[COMRAM] unsigned long 
 29259 ;;  num_mod         4   38[COMRAM] unsigned long 
 29260 ;;  frequency       4   34[COMRAM] unsigned long 
 29261 ;;  i               1   46[COMRAM] unsigned char 
 29262 ;; Return value:  Size  Location     Type
 29263 ;;                  1    wreg      void 
 29264 ;; Registers used:
 29265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29266 ;; Tracked objects:
 29267 ;;		On entry : 0/0
 29268 ;;		On exit  : 0/0
 29269 ;;		Unchanged: 0/0
 29270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29272 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29274 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29275 ;;Total ram usage:       13 bytes
 29276 ;; Hardware stack levels used:    1
 29277 ;; Hardware stack levels required when called:    8
 29278 ;; This function calls:
 29279 ;;		___lldiv
 29280 ;;		___llmod
 29281 ;; This function is called by:
 29282 ;;		_initRadio
 29283 ;; This function uses a non-reentrant model
 29284 ;;
 29285                           
 29286                           	psect	text186
 29287  0048E2                     __ptext186:
 29288                           	opt callstack 0
 29289  0048E2                     _computeFRF:
 29290                           	opt callstack 18
 29291  0048E2                     
 29292                           ;phy/sx1216/phy_src/phy.c: 727:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 29293  0048E2  0E00               	movlw	0
 29294  0048E4  6E2F               	movwf	computeFRF@i^0,c
 29295  0048E6                     l15485:
 29296                           
 29297                           ;phy/sx1216/phy_src/phy.c: 728:     {;phy/sx1216/phy_src/phy.c: 729:         uint32_t nu
      +                          m, num_mod, frequency;;phy/sx1216/phy_src/phy.c: 730:         frequency = fhssList[i];
 29298  0048E6  502F               	movf	computeFRF@i^0,w,c
 29299  0048E8  0D04               	mullw	4
 29300  0048EA  0EC9               	movlw	low _fhssList
 29301  0048EC  24F3               	addwf	243,w,c
 29302  0048EE  6EF6               	movwf	tblptrl,c
 29303  0048F0  0EFC               	movlw	high _fhssList
 29304  0048F2  20F4               	addwfc	244,w,c
 29305  0048F4  6EF7               	movwf	tblptrh,c
 29306  0048F6                     	if	1	;There are 3 active tblptr bytes
 29307  0048F6  6AF8               	clrf	tblptru,c
 29308  0048F8  0E00               	movlw	low (__mediumconst shr (0+16))
 29309  0048FA  22F8               	addwfc	tblptru,f,c
 29310  0048FC                     	endif
 29311  0048FC  0009               	tblrd		*+
 29312  0048FE  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 29313  004904  0009               	tblrd		*+
 29314  004906  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 29315  00490C  0009               	tblrd		*+
 29316  00490E  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 29317  004914  000A               	tblrd		*-
 29318  004916  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 29319  00491C                     
 29320                           ;phy/sx1216/phy_src/phy.c: 737:         num = frequency / 15625;
 29321  00491C  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 29322  004922  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 29323  004928  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 29324  00492E  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 29325  004934  0E09               	movlw	9
 29326  004936  6E1A               	movwf	___lldiv@divisor^0,c
 29327  004938  0E3D               	movlw	61
 29328  00493A  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29329  00493C  0E00               	movlw	0
 29330  00493E  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29331  004940  0E00               	movlw	0
 29332  004942  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29333  004944  EC0A  F03D         	call	___lldiv	;wreg free
 29334  004948  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 29335  00494E  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 29336  004954  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 29337  00495A  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 29338  004960                     
 29339                           ;phy/sx1216/phy_src/phy.c: 738:         num_mod = frequency % 15625;
 29340  004960  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 29341  004966  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 29342  00496C  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 29343  004972  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 29344  004978  0E09               	movlw	9
 29345  00497A  6E06               	movwf	___llmod@divisor^0,c
 29346  00497C  0E3D               	movlw	61
 29347  00497E  6E07               	movwf	(___llmod@divisor+1)^0,c
 29348  004980  0E00               	movlw	0
 29349  004982  6E08               	movwf	(___llmod@divisor+2)^0,c
 29350  004984  0E00               	movlw	0
 29351  004986  6E09               	movwf	(___llmod@divisor+3)^0,c
 29352  004988  EC0C  F041         	call	___llmod	;wreg free
 29353  00498C  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 29354  004992  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 29355  004998  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 29356  00499E  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 29357  0049A4                     
 29358                           ;phy/sx1216/phy_src/phy.c: 742:         num <<= 8;
 29359  0049A4  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 29360  0049AA  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 29361  0049B0  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 29362  0049B6  6A2B               	clrf	computeFRF@num^0,c
 29363  0049B8                     
 29364                           ;phy/sx1216/phy_src/phy.c: 743:         num_mod <<= 8;
 29365  0049B8  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 29366  0049BE  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 29367  0049C4  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 29368  0049CA  6A27               	clrf	computeFRF@num_mod^0,c
 29369  0049CC                     
 29370                           ;phy/sx1216/phy_src/phy.c: 747:         num_mod = num_mod / 15625;
 29371  0049CC  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 29372  0049D2  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 29373  0049D8  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 29374  0049DE  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 29375  0049E4  0E09               	movlw	9
 29376  0049E6  6E1A               	movwf	___lldiv@divisor^0,c
 29377  0049E8  0E3D               	movlw	61
 29378  0049EA  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29379  0049EC  0E00               	movlw	0
 29380  0049EE  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29381  0049F0  0E00               	movlw	0
 29382  0049F2  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29383  0049F4  EC0A  F03D         	call	___lldiv	;wreg free
 29384  0049F8  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 29385  0049FE  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 29386  004A04  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 29387  004A0A  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 29388  004A10                     
 29389                           ;phy/sx1216/phy_src/phy.c: 748:         num += num_mod;
 29390  004A10  5027               	movf	computeFRF@num_mod^0,w,c
 29391  004A12  262B               	addwf	computeFRF@num^0,f,c
 29392  004A14  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 29393  004A16  222C               	addwfc	(computeFRF@num+1)^0,f,c
 29394  004A18  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 29395  004A1A  222D               	addwfc	(computeFRF@num+2)^0,f,c
 29396  004A1C  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 29397  004A1E  222E               	addwfc	(computeFRF@num+3)^0,f,c
 29398  004A20                     
 29399                           ;phy/sx1216/phy_src/phy.c: 750:         fhssReg[i][0] = (num >> 16);
 29400  004A20  502F               	movf	computeFRF@i^0,w,c
 29401  004A22  0D03               	mullw	3
 29402  004A24  0E00               	movlw	low _fhssReg
 29403  004A26  24F3               	addwf	243,w,c
 29404  004A28  6ED9               	movwf	fsr2l,c
 29405  004A2A  0E05               	movlw	high _fhssReg
 29406  004A2C  20F4               	addwfc	prodh,w,c
 29407  004A2E  6EDA               	movwf	fsr2h,c
 29408  004A30  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 29409  004A36                     
 29410                           ;phy/sx1216/phy_src/phy.c: 751:         fhssReg[i][1] = (num >> 8);
 29411  004A36  502F               	movf	computeFRF@i^0,w,c
 29412  004A38  0D03               	mullw	3
 29413  004A3A  0E01               	movlw	low (_fhssReg+1)
 29414  004A3C  24F3               	addwf	243,w,c
 29415  004A3E  6ED9               	movwf	fsr2l,c
 29416  004A40  0E05               	movlw	high (_fhssReg+1)
 29417  004A42  20F4               	addwfc	prodh,w,c
 29418  004A44  6EDA               	movwf	fsr2h,c
 29419  004A46  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 29420  004A4C                     
 29421                           ;phy/sx1216/phy_src/phy.c: 752:         fhssReg[i][2] = (num);
 29422  004A4C  502F               	movf	computeFRF@i^0,w,c
 29423  004A4E  0D03               	mullw	3
 29424  004A50  0E02               	movlw	low (_fhssReg+2)
 29425  004A52  24F3               	addwf	243,w,c
 29426  004A54  6ED9               	movwf	fsr2l,c
 29427  004A56  0E05               	movlw	high (_fhssReg+2)
 29428  004A58  20F4               	addwfc	prodh,w,c
 29429  004A5A  6EDA               	movwf	fsr2h,c
 29430  004A5C  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 29431  004A62                     
 29432                           ;phy/sx1216/phy_src/phy.c: 753:     }
 29433  004A62  2A2F               	incf	computeFRF@i^0,f,c
 29434  004A64  0E3E               	movlw	62
 29435  004A66  642F               	cpfsgt	computeFRF@i^0,c
 29436  004A68  EF38  F025         	goto	u14971
 29437  004A6C  EF3A  F025         	goto	u14970
 29438  004A70                     u14971:
 29439  004A70  EF73  F024         	goto	l15485
 29440  004A74                     u14970:
 29441  004A74  0012               	return		;funcret
 29442  004A76                     __end_of_computeFRF:
 29443                           	opt callstack 0
 29444                           
 29445 ;; *************** function ___llmod *****************
 29446 ;; Defined at:
 29447 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 29448 ;; Parameters:    Size  Location     Type
 29449 ;;  dividend        4    1[COMRAM] unsigned long 
 29450 ;;  divisor         4    5[COMRAM] unsigned long 
 29451 ;; Auto vars:     Size  Location     Type
 29452 ;;  counter         1    9[COMRAM] unsigned char 
 29453 ;; Return value:  Size  Location     Type
 29454 ;;                  4    1[COMRAM] unsigned long 
 29455 ;; Registers used:
 29456 ;;		wreg, status,2, status,0
 29457 ;; Tracked objects:
 29458 ;;		On entry : 0/0
 29459 ;;		On exit  : 0/0
 29460 ;;		Unchanged: 0/0
 29461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29462 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29465 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29466 ;;Total ram usage:        9 bytes
 29467 ;; Hardware stack levels used:    1
 29468 ;; Hardware stack levels required when called:    7
 29469 ;; This function calls:
 29470 ;;		Nothing
 29471 ;; This function is called by:
 29472 ;;		_setFrequency
 29473 ;;		_computeFRF
 29474 ;; This function uses a non-reentrant model
 29475 ;;
 29476                           
 29477                           	psect	text187
 29478  008218                     __ptext187:
 29479                           	opt callstack 0
 29480  008218                     ___llmod:
 29481                           	opt callstack 18
 29482  008218  5006               	movf	___llmod@divisor^0,w,c
 29483  00821A  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 29484  00821C  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 29485  00821E  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 29486  008220  B4D8               	btfsc	status,2,c
 29487  008222  EF15  F041         	goto	u14211
 29488  008226  EF17  F041         	goto	u14210
 29489  00822A                     u14211:
 29490  00822A  EF47  F041         	goto	l3592
 29491  00822E                     u14210:
 29492  00822E  0E01               	movlw	1
 29493  008230  6E0A               	movwf	___llmod@counter^0,c
 29494  008232  EF21  F041         	goto	l14993
 29495  008236                     l14991:
 29496  008236  90D8               	bcf	status,0,c
 29497  008238  3606               	rlcf	___llmod@divisor^0,f,c
 29498  00823A  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 29499  00823C  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 29500  00823E  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 29501  008240  2A0A               	incf	___llmod@counter^0,f,c
 29502  008242                     l14993:
 29503  008242  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 29504  008244  EF26  F041         	goto	u14221
 29505  008248  EF28  F041         	goto	u14220
 29506  00824C                     u14221:
 29507  00824C  EF1B  F041         	goto	l14991
 29508  008250                     u14220:
 29509  008250                     l14995:
 29510  008250  5006               	movf	___llmod@divisor^0,w,c
 29511  008252  5C02               	subwf	___llmod@dividend^0,w,c
 29512  008254  5007               	movf	(___llmod@divisor+1)^0,w,c
 29513  008256  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 29514  008258  5008               	movf	(___llmod@divisor+2)^0,w,c
 29515  00825A  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 29516  00825C  5009               	movf	(___llmod@divisor+3)^0,w,c
 29517  00825E  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 29518  008260  A0D8               	btfss	status,0,c
 29519  008262  EF35  F041         	goto	u14231
 29520  008266  EF37  F041         	goto	u14230
 29521  00826A                     u14231:
 29522  00826A  EF3F  F041         	goto	l14999
 29523  00826E                     u14230:
 29524  00826E  5006               	movf	___llmod@divisor^0,w,c
 29525  008270  5E02               	subwf	___llmod@dividend^0,f,c
 29526  008272  5007               	movf	(___llmod@divisor+1)^0,w,c
 29527  008274  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 29528  008276  5008               	movf	(___llmod@divisor+2)^0,w,c
 29529  008278  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 29530  00827A  5009               	movf	(___llmod@divisor+3)^0,w,c
 29531  00827C  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 29532  00827E                     l14999:
 29533  00827E  90D8               	bcf	status,0,c
 29534  008280  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 29535  008282  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 29536  008284  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 29537  008286  3206               	rrcf	___llmod@divisor^0,f,c
 29538  008288  2E0A               	decfsz	___llmod@counter^0,f,c
 29539  00828A  EF28  F041         	goto	l14995
 29540  00828E                     l3592:
 29541  00828E  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 29542  008294  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 29543  00829A  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 29544  0082A0  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 29545  0082A6  0012               	return		;funcret
 29546  0082A8                     __end_of___llmod:
 29547                           	opt callstack 0
 29548                           
 29549 ;; *************** function ___lldiv *****************
 29550 ;; Defined at:
 29551 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 29552 ;; Parameters:    Size  Location     Type
 29553 ;;  dividend        4   21[COMRAM] unsigned long 
 29554 ;;  divisor         4   25[COMRAM] unsigned long 
 29555 ;; Auto vars:     Size  Location     Type
 29556 ;;  quotient        4   29[COMRAM] unsigned long 
 29557 ;;  counter         1   33[COMRAM] unsigned char 
 29558 ;; Return value:  Size  Location     Type
 29559 ;;                  4   21[COMRAM] unsigned long 
 29560 ;; Registers used:
 29561 ;;		wreg, status,2, status,0
 29562 ;; Tracked objects:
 29563 ;;		On entry : 0/0
 29564 ;;		On exit  : 0/0
 29565 ;;		Unchanged: 0/0
 29566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29567 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29568 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29570 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29571 ;;Total ram usage:       13 bytes
 29572 ;; Hardware stack levels used:    1
 29573 ;; Hardware stack levels required when called:    7
 29574 ;; This function calls:
 29575 ;;		Nothing
 29576 ;; This function is called by:
 29577 ;;		_setFrequency
 29578 ;;		_setSpreadingFactor
 29579 ;;		_setSignalBandwidth
 29580 ;;		_computeFRF
 29581 ;; This function uses a non-reentrant model
 29582 ;;
 29583                           
 29584                           	psect	text188
 29585  007A14                     __ptext188:
 29586                           	opt callstack 0
 29587  007A14                     ___lldiv:
 29588                           	opt callstack 18
 29589  007A14  0E00               	movlw	0
 29590  007A16  6E1E               	movwf	___lldiv@quotient^0,c
 29591  007A18  0E00               	movlw	0
 29592  007A1A  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 29593  007A1C  0E00               	movlw	0
 29594  007A1E  6E20               	movwf	(___lldiv@quotient+2)^0,c
 29595  007A20  0E00               	movlw	0
 29596  007A22  6E21               	movwf	(___lldiv@quotient+3)^0,c
 29597  007A24  501A               	movf	___lldiv@divisor^0,w,c
 29598  007A26  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 29599  007A28  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 29600  007A2A  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 29601  007A2C  B4D8               	btfsc	status,2,c
 29602  007A2E  EF1B  F03D         	goto	u14131
 29603  007A32  EF1D  F03D         	goto	u14130
 29604  007A36                     u14131:
 29605  007A36  EF53  F03D         	goto	l3199
 29606  007A3A                     u14130:
 29607  007A3A  0E01               	movlw	1
 29608  007A3C  6E22               	movwf	___lldiv@counter^0,c
 29609  007A3E  EF27  F03D         	goto	l14951
 29610  007A42                     l14949:
 29611  007A42  90D8               	bcf	status,0,c
 29612  007A44  361A               	rlcf	___lldiv@divisor^0,f,c
 29613  007A46  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 29614  007A48  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 29615  007A4A  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 29616  007A4C  2A22               	incf	___lldiv@counter^0,f,c
 29617  007A4E                     l14951:
 29618  007A4E  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 29619  007A50  EF2C  F03D         	goto	u14141
 29620  007A54  EF2E  F03D         	goto	u14140
 29621  007A58                     u14141:
 29622  007A58  EF21  F03D         	goto	l14949
 29623  007A5C                     u14140:
 29624  007A5C                     l14953:
 29625  007A5C  90D8               	bcf	status,0,c
 29626  007A5E  361E               	rlcf	___lldiv@quotient^0,f,c
 29627  007A60  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 29628  007A62  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 29629  007A64  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 29630  007A66  501A               	movf	___lldiv@divisor^0,w,c
 29631  007A68  5C16               	subwf	___lldiv@dividend^0,w,c
 29632  007A6A  501B               	movf	(___lldiv@divisor+1)^0,w,c
 29633  007A6C  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 29634  007A6E  501C               	movf	(___lldiv@divisor+2)^0,w,c
 29635  007A70  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 29636  007A72  501D               	movf	(___lldiv@divisor+3)^0,w,c
 29637  007A74  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 29638  007A76  A0D8               	btfss	status,0,c
 29639  007A78  EF40  F03D         	goto	u14151
 29640  007A7C  EF42  F03D         	goto	u14150
 29641  007A80                     u14151:
 29642  007A80  EF4B  F03D         	goto	l14961
 29643  007A84                     u14150:
 29644  007A84  501A               	movf	___lldiv@divisor^0,w,c
 29645  007A86  5E16               	subwf	___lldiv@dividend^0,f,c
 29646  007A88  501B               	movf	(___lldiv@divisor+1)^0,w,c
 29647  007A8A  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 29648  007A8C  501C               	movf	(___lldiv@divisor+2)^0,w,c
 29649  007A8E  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 29650  007A90  501D               	movf	(___lldiv@divisor+3)^0,w,c
 29651  007A92  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 29652  007A94  801E               	bsf	___lldiv@quotient^0,0,c
 29653  007A96                     l14961:
 29654  007A96  90D8               	bcf	status,0,c
 29655  007A98  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 29656  007A9A  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 29657  007A9C  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 29658  007A9E  321A               	rrcf	___lldiv@divisor^0,f,c
 29659  007AA0  2E22               	decfsz	___lldiv@counter^0,f,c
 29660  007AA2  EF2E  F03D         	goto	l14953
 29661  007AA6                     l3199:
 29662  007AA6  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 29663  007AAC  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 29664  007AB2  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 29665  007AB8  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 29666  007ABE  0012               	return		;funcret
 29667  007AC0                     __end_of___lldiv:
 29668                           	opt callstack 0
 29669                           
 29670 ;; *************** function _NWK_Init *****************
 29671 ;; Defined at:
 29672 ;;		line 70 in file "nwk/nwk_src/nwk.c"
 29673 ;; Parameters:    Size  Location     Type
 29674 ;;		None
 29675 ;; Auto vars:     Size  Location     Type
 29676 ;;  i               1    5[COMRAM] unsigned char 
 29677 ;; Return value:  Size  Location     Type
 29678 ;;                  1    wreg      void 
 29679 ;; Registers used:
 29680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29681 ;; Tracked objects:
 29682 ;;		On entry : 0/0
 29683 ;;		On exit  : 0/0
 29684 ;;		Unchanged: 0/0
 29685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29690 ;;Total ram usage:        1 bytes
 29691 ;; Hardware stack levels used:    1
 29692 ;; Hardware stack levels required when called:    9
 29693 ;; This function calls:
 29694 ;;		_nwkDataReqInit
 29695 ;;		_nwkFrameInit
 29696 ;;		_nwkGroupInit
 29697 ;;		_nwkRouteInit
 29698 ;;		_nwkRxInit
 29699 ;;		_nwkTxInit
 29700 ;; This function is called by:
 29701 ;;		_SYS_Init
 29702 ;; This function uses a non-reentrant model
 29703 ;;
 29704                           
 29705                           	psect	text189
 29706  0088F0                     __ptext189:
 29707                           	opt callstack 0
 29708  0088F0                     _NWK_Init:
 29709                           	opt callstack 20
 29710  0088F0                     
 29711                           ;nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 29712  0088F0  0E00               	movlw	0
 29713  0088F2  0101               	movlb	1	; () banked
 29714  0088F4  6F04               	movwf	(_nwkIb+4)& (0+255),b
 29715                           
 29716                           ;nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 29717  0088F6  0E00               	movlw	0
 29718  0088F8  6F05               	movwf	(_nwkIb+5)& (0+255),b
 29719                           
 29720                           ;nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 29721  0088FA  0E00               	movlw	0
 29722  0088FC  6F01               	movwf	(_nwkIb+1)& (0+255),b
 29723  0088FE  0E00               	movlw	0
 29724  008900  6F00               	movwf	_nwkIb& (0+255),b
 29725                           
 29726                           ;nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 29727  008902  0E00               	movlw	0
 29728  008904  6F27               	movwf	(_nwkIb+39)& (0+255),b
 29729  008906  0E00               	movlw	0
 29730  008908  6F26               	movwf	(_nwkIb+38)& (0+255),b
 29731                           
 29732                           ;nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 29733  00890A  0E00               	movlw	0
 29734  00890C  6E06               	movwf	NWK_Init@i^0,c
 29735  00890E                     l16967:
 29736                           
 29737                           ;nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 29738  00890E  5006               	movf	NWK_Init@i^0,w,c
 29739  008910  0D02               	mullw	2
 29740  008912  0E06               	movlw	low (_nwkIb+6)
 29741  008914  24F3               	addwf	243,w,c
 29742  008916  6ED9               	movwf	fsr2l,c
 29743  008918  0E01               	movlw	high (_nwkIb+6)
 29744  00891A  20F4               	addwfc	prodh,w,c
 29745  00891C  6EDA               	movwf	fsr2h,c
 29746  00891E  0E00               	movlw	0
 29747  008920  6EDE               	movwf	postinc2,c
 29748  008922  0E00               	movlw	0
 29749  008924  6EDD               	movwf	postdec2,c
 29750  008926  2A06               	incf	NWK_Init@i^0,f,c
 29751  008928  0E0F               	movlw	15
 29752  00892A  6406               	cpfsgt	NWK_Init@i^0,c
 29753  00892C  EF9A  F044         	goto	u17191
 29754  008930  EF9C  F044         	goto	u17190
 29755  008934                     u17191:
 29756  008934  EF87  F044         	goto	l16967
 29757  008938                     u17190:
 29758  008938                     
 29759                           ;nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 29760  008938  EC30  F049         	call	_nwkTxInit	;wreg free
 29761  00893C                     
 29762                           ;nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 29763  00893C  EC44  F046         	call	_nwkRxInit	;wreg free
 29764  008940                     
 29765                           ;nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 29766  008940  ECCC  F04B         	call	_nwkFrameInit	;wreg free
 29767                           
 29768                           ;nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 29769  008944  EC63  F04E         	call	_nwkDataReqInit	;wreg free
 29770  008948                     
 29771                           ;nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 29772  008948  EC70  F046         	call	_nwkRouteInit	;wreg free
 29773  00894C                     
 29774                           ;nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 29775  00894C  EC13  F04B         	call	_nwkGroupInit	;wreg free
 29776  008950  0012               	return		;funcret
 29777  008952                     __end_of_NWK_Init:
 29778                           	opt callstack 0
 29779                           
 29780 ;; *************** function _nwkTxInit *****************
 29781 ;; Defined at:
 29782 ;;		line 94 in file "nwk/nwk_src/nwkTx.c"
 29783 ;; Parameters:    Size  Location     Type
 29784 ;;		None
 29785 ;; Auto vars:     Size  Location     Type
 29786 ;;		None
 29787 ;; Return value:  Size  Location     Type
 29788 ;;                  1    wreg      void 
 29789 ;; Registers used:
 29790 ;;		wreg, status,2, status,0
 29791 ;; Tracked objects:
 29792 ;;		On entry : 0/0
 29793 ;;		On exit  : 0/0
 29794 ;;		Unchanged: 0/0
 29795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29800 ;;Total ram usage:        0 bytes
 29801 ;; Hardware stack levels used:    1
 29802 ;; Hardware stack levels required when called:    7
 29803 ;; This function calls:
 29804 ;;		Nothing
 29805 ;; This function is called by:
 29806 ;;		_NWK_Init
 29807 ;; This function uses a non-reentrant model
 29808 ;;
 29809                           
 29810                           	psect	text190
 29811  009260                     __ptext190:
 29812                           	opt callstack 0
 29813  009260                     _nwkTxInit:
 29814                           	opt callstack 21
 29815  009260                     
 29816                           ;nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 29817  009260  0E00               	movlw	0
 29818  009262  0101               	movlb	1	; () banked
 29819  009264  6F61               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 29820  009266  0E00               	movlw	0
 29821  009268  6F62               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 29822  00926A                     
 29823                           ; BSR set to: 1
 29824                           ;nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 29825  00926A  0EC8               	movlw	200
 29826  00926C  6FA7               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 29827  00926E  0E00               	movlw	0
 29828  009270  6FA8               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 29829  009272  0E00               	movlw	0
 29830  009274  6FA9               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 29831  009276  0E00               	movlw	0
 29832  009278  6FAA               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 29833  00927A                     
 29834                           ; BSR set to: 1
 29835                           ;nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 29836  00927A  0E00               	movlw	0
 29837  00927C  6FAB               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 29838                           
 29839                           ;nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 29840  00927E  0E92               	movlw	low _nwkTxAckWaitTimerHandler
 29841  009280  6FAC               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 29842  009282  0E76               	movlw	high _nwkTxAckWaitTimerHandler
 29843  009284  6FAD               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 29844  009286                     
 29845                           ; BSR set to: 1
 29846                           ;nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 29847  009286  0E14               	movlw	20
 29848  009288  6F9A               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 29849  00928A  0E00               	movlw	0
 29850  00928C  6F9B               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 29851  00928E  0E00               	movlw	0
 29852  009290  6F9C               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 29853  009292  0E00               	movlw	0
 29854  009294  6F9D               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 29855  009296                     
 29856                           ; BSR set to: 1
 29857                           ;nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 29858  009296  0E00               	movlw	0
 29859  009298  6F9E               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 29860                           
 29861                           ;nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 29862  00929A  0E4C               	movlw	low _nwkTxDelayTimerHandler
 29863  00929C  6F9F               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 29864  00929E  0E77               	movlw	high _nwkTxDelayTimerHandler
 29865  0092A0  6FA0               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 29866  0092A2                     
 29867                           ; BSR set to: 1
 29868  0092A2  0012               	return		;funcret
 29869  0092A4                     __end_of_nwkTxInit:
 29870                           	opt callstack 0
 29871                           
 29872 ;; *************** function _nwkRxInit *****************
 29873 ;; Defined at:
 29874 ;;		line 102 in file "nwk/nwk_src/nwkRx.c"
 29875 ;; Parameters:    Size  Location     Type
 29876 ;;		None
 29877 ;; Auto vars:     Size  Location     Type
 29878 ;;  i               1    4[COMRAM] unsigned char 
 29879 ;; Return value:  Size  Location     Type
 29880 ;;                  1    wreg      void 
 29881 ;; Registers used:
 29882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29883 ;; Tracked objects:
 29884 ;;		On entry : 0/0
 29885 ;;		On exit  : 0/0
 29886 ;;		Unchanged: 0/0
 29887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29892 ;;Total ram usage:        1 bytes
 29893 ;; Hardware stack levels used:    1
 29894 ;; Hardware stack levels required when called:    8
 29895 ;; This function calls:
 29896 ;;		_NWK_OpenEndpoint
 29897 ;; This function is called by:
 29898 ;;		_NWK_Init
 29899 ;; This function uses a non-reentrant model
 29900 ;;
 29901                           
 29902                           	psect	text191
 29903  008C88                     __ptext191:
 29904                           	opt callstack 0
 29905  008C88                     _nwkRxInit:
 29906                           	opt callstack 20
 29907  008C88                     
 29908                           ;nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 29909  008C88  0E00               	movlw	0
 29910  008C8A  6E05               	movwf	nwkRxInit@i^0,c
 29911  008C8C                     l16509:
 29912                           
 29913                           ;nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 29914  008C8C  5005               	movf	nwkRxInit@i^0,w,c
 29915  008C8E  0D05               	mullw	5
 29916  008C90  0EA4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 29917  008C92  24F3               	addwf	243,w,c
 29918  008C94  6ED9               	movwf	fsr2l,c
 29919  008C96  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 29920  008C98  20F4               	addwfc	prodh,w,c
 29921  008C9A  6EDA               	movwf	fsr2h,c
 29922  008C9C  0E00               	movlw	0
 29923  008C9E  6EDF               	movwf	indf2,c
 29924  008CA0  2A05               	incf	nwkRxInit@i^0,f,c
 29925  008CA2  0E09               	movlw	9
 29926  008CA4  6405               	cpfsgt	nwkRxInit@i^0,c
 29927  008CA6  EF57  F046         	goto	u16461
 29928  008CAA  EF59  F046         	goto	u16460
 29929  008CAE                     u16461:
 29930  008CAE  EF46  F046         	goto	l16509
 29931  008CB2                     u16460:
 29932  008CB2                     
 29933                           ;nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 29934  008CB2  0E88               	movlw	136
 29935  008CB4  0101               	movlb	1	; () banked
 29936  008CB6  6FB4               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 29937  008CB8  0E13               	movlw	19
 29938  008CBA  6FB5               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 29939  008CBC  0E00               	movlw	0
 29940  008CBE  6FB6               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 29941  008CC0  0E00               	movlw	0
 29942  008CC2  6FB7               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 29943                           
 29944                           ;nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_MODE
      +                          ;
 29945  008CC4  0E00               	movlw	0
 29946  008CC6  6FB8               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 29947  008CC8                     
 29948                           ; BSR set to: 1
 29949                           ;nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateReject
      +                          ionTimerHandler;
 29950  008CC8  0E74               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 29951  008CCA  6FB9               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 29952  008CCC  0E86               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 29953  008CCE  6FBA               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 29954  008CD0                     
 29955                           ; BSR set to: 1
 29956                           ;nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 29957  008CD0  0E9C               	movlw	low _nwkRxServiceDataInd
 29958  008CD2  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 29959  008CD4  0E7E               	movlw	high _nwkRxServiceDataInd
 29960  008CD6  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 29961  008CD8  0E00               	movlw	0
 29962  008CDA  ECBD  F04C         	call	_NWK_OpenEndpoint
 29963  008CDE  0012               	return		;funcret
 29964  008CE0                     __end_of_nwkRxInit:
 29965                           	opt callstack 0
 29966                           
 29967 ;; *************** function _NWK_OpenEndpoint *****************
 29968 ;; Defined at:
 29969 ;;		line 127 in file "nwk/nwk_src/nwk.c"
 29970 ;; Parameters:    Size  Location     Type
 29971 ;;  id              1    wreg     unsigned char 
 29972 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 29973 ;;		 -> nwkRxServiceDataInd(1), appDataInd(1), 
 29974 ;; Auto vars:     Size  Location     Type
 29975 ;;  id              1    3[COMRAM] unsigned char 
 29976 ;; Return value:  Size  Location     Type
 29977 ;;                  1    wreg      void 
 29978 ;; Registers used:
 29979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29980 ;; Tracked objects:
 29981 ;;		On entry : 0/0
 29982 ;;		On exit  : 0/0
 29983 ;;		Unchanged: 0/0
 29984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29988 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29989 ;;Total ram usage:        3 bytes
 29990 ;; Hardware stack levels used:    1
 29991 ;; Hardware stack levels required when called:    7
 29992 ;; This function calls:
 29993 ;;		Nothing
 29994 ;; This function is called by:
 29995 ;;		_bootLoadApplication
 29996 ;;		_nwkRxInit
 29997 ;; This function uses a non-reentrant model
 29998 ;;
 29999                           
 30000                           	psect	text192
 30001  00997A                     __ptext192:
 30002                           	opt callstack 0
 30003  00997A                     _NWK_OpenEndpoint:
 30004                           	opt callstack 22
 30005                           
 30006                           ;incstack = 0
 30007                           ;NWK_OpenEndpoint@id stored from wreg
 30008  00997A  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 30009  00997C                     
 30010                           ;nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataInd_
      +                          t *ind));nwk/nwk_src/nwk.c: 128: {;nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id] = handle
      +                          r;
 30011  00997C  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 30012  00997E  0D02               	mullw	2
 30013  009980  0E06               	movlw	low (_nwkIb+6)
 30014  009982  24F3               	addwf	243,w,c
 30015  009984  6ED9               	movwf	fsr2l,c
 30016  009986  0E01               	movlw	high (_nwkIb+6)
 30017  009988  20F4               	addwfc	prodh,w,c
 30018  00998A  6EDA               	movwf	fsr2h,c
 30019  00998C  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 30020  009992  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 30021  009998  0012               	return		;funcret
 30022  00999A                     __end_of_NWK_OpenEndpoint:
 30023                           	opt callstack 0
 30024                           
 30025 ;; *************** function _nwkRouteInit *****************
 30026 ;; Defined at:
 30027 ;;		line 79 in file "nwk/nwk_src/nwkRoute.c"
 30028 ;; Parameters:    Size  Location     Type
 30029 ;;		None
 30030 ;; Auto vars:     Size  Location     Type
 30031 ;;  i               1    1[COMRAM] unsigned char 
 30032 ;; Return value:  Size  Location     Type
 30033 ;;                  1    wreg      void 
 30034 ;; Registers used:
 30035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30036 ;; Tracked objects:
 30037 ;;		On entry : 0/0
 30038 ;;		On exit  : 0/0
 30039 ;;		Unchanged: 0/0
 30040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30045 ;;Total ram usage:        1 bytes
 30046 ;; Hardware stack levels used:    1
 30047 ;; Hardware stack levels required when called:    7
 30048 ;; This function calls:
 30049 ;;		Nothing
 30050 ;; This function is called by:
 30051 ;;		_NWK_Init
 30052 ;; This function uses a non-reentrant model
 30053 ;;
 30054                           
 30055                           	psect	text193
 30056  008CE0                     __ptext193:
 30057                           	opt callstack 0
 30058  008CE0                     _nwkRouteInit:
 30059                           	opt callstack 21
 30060  008CE0                     
 30061                           ;nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 30062  008CE0  0E00               	movlw	0
 30063  008CE2  6E02               	movwf	nwkRouteInit@i^0,c
 30064  008CE4                     l12021:
 30065                           
 30066                           ;nwk/nwk_src/nwkRoute.c: 82:   {;nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].dstAdd
      +                          r = 0xffff;
 30067  008CE4  5002               	movf	nwkRouteInit@i^0,w,c
 30068  008CE6  0D07               	mullw	7
 30069  008CE8  0E81               	movlw	low (_nwkRouteTable+1)
 30070  008CEA  24F3               	addwf	243,w,c
 30071  008CEC  6ED9               	movwf	fsr2l,c
 30072  008CEE  0E02               	movlw	high (_nwkRouteTable+1)
 30073  008CF0  20F4               	addwfc	prodh,w,c
 30074  008CF2  6EDA               	movwf	fsr2h,c
 30075  008CF4  0EFF               	movlw	255
 30076  008CF6  6EDE               	movwf	postinc2,c
 30077  008CF8  0EFF               	movlw	255
 30078  008CFA  6EDD               	movwf	postdec2,c
 30079                           
 30080                           ;nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 30081  008CFC  5002               	movf	nwkRouteInit@i^0,w,c
 30082  008CFE  0D07               	mullw	7
 30083  008D00  0E80               	movlw	low _nwkRouteTable
 30084  008D02  24F3               	addwf	243,w,c
 30085  008D04  6ED9               	movwf	fsr2l,c
 30086  008D06  0E02               	movlw	high _nwkRouteTable
 30087  008D08  20F4               	addwfc	prodh,w,c
 30088  008D0A  6EDA               	movwf	fsr2h,c
 30089  008D0C  0102               	movlb	2	; () banked
 30090  008D0E  90DF               	bcf	indf2,0,c
 30091                           
 30092                           ;nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 30093  008D10  5002               	movf	nwkRouteInit@i^0,w,c
 30094  008D12  0D07               	mullw	7
 30095  008D14  0E85               	movlw	low (_nwkRouteTable+5)
 30096  008D16  24F3               	addwf	243,w,c
 30097  008D18  6ED9               	movwf	fsr2l,c
 30098  008D1A  0E02               	movlw	high (_nwkRouteTable+5)
 30099  008D1C  20F4               	addwfc	prodh,w,c
 30100  008D1E  6EDA               	movwf	fsr2h,c
 30101  008D20  0E00               	movlw	0
 30102  008D22  6EDF               	movwf	indf2,c
 30103  008D24                     
 30104                           ; BSR set to: 2
 30105                           ;nwk/nwk_src/nwkRoute.c: 86:   }
 30106  008D24  2A02               	incf	nwkRouteInit@i^0,f,c
 30107  008D26                     
 30108                           ; BSR set to: 2
 30109  008D26  0E09               	movlw	9
 30110  008D28  6402               	cpfsgt	nwkRouteInit@i^0,c
 30111  008D2A  EF99  F046         	goto	u10501
 30112  008D2E  EF9B  F046         	goto	u10500
 30113  008D32                     u10501:
 30114  008D32  EF72  F046         	goto	l12021
 30115  008D36                     u10500:
 30116  008D36                     
 30117                           ; BSR set to: 2
 30118  008D36  0012               	return		;funcret
 30119  008D38                     __end_of_nwkRouteInit:
 30120                           	opt callstack 0
 30121                           
 30122 ;; *************** function _nwkGroupInit *****************
 30123 ;; Defined at:
 30124 ;;		line 70 in file "nwk/nwk_src/nwkGroup.c"
 30125 ;; Parameters:    Size  Location     Type
 30126 ;;		None
 30127 ;; Auto vars:     Size  Location     Type
 30128 ;;  i               1    1[COMRAM] unsigned char 
 30129 ;; Return value:  Size  Location     Type
 30130 ;;                  1    wreg      void 
 30131 ;; Registers used:
 30132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30133 ;; Tracked objects:
 30134 ;;		On entry : 0/0
 30135 ;;		On exit  : 0/0
 30136 ;;		Unchanged: 0/0
 30137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30142 ;;Total ram usage:        1 bytes
 30143 ;; Hardware stack levels used:    1
 30144 ;; Hardware stack levels required when called:    7
 30145 ;; This function calls:
 30146 ;;		Nothing
 30147 ;; This function is called by:
 30148 ;;		_NWK_Init
 30149 ;; This function uses a non-reentrant model
 30150 ;;
 30151                           
 30152                           	psect	text194
 30153  009626                     __ptext194:
 30154                           	opt callstack 0
 30155  009626                     _nwkGroupInit:
 30156                           	opt callstack 21
 30157  009626                     
 30158                           ;nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 30159  009626  0E00               	movlw	0
 30160  009628  6E02               	movwf	nwkGroupInit@i^0,c
 30161  00962A                     l12033:
 30162                           
 30163                           ;nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 30164  00962A  5002               	movf	nwkGroupInit@i^0,w,c
 30165  00962C  0D02               	mullw	2
 30166  00962E  0E28               	movlw	low _nwkGroups
 30167  009630  24F3               	addwf	243,w,c
 30168  009632  6ED9               	movwf	fsr2l,c
 30169  009634  0E01               	movlw	high _nwkGroups
 30170  009636  20F4               	addwfc	prodh,w,c
 30171  009638  6EDA               	movwf	fsr2h,c
 30172  00963A  0EFF               	movlw	255
 30173  00963C  6EDE               	movwf	postinc2,c
 30174  00963E  0EFF               	movlw	255
 30175  009640  6EDD               	movwf	postdec2,c
 30176  009642  2A02               	incf	nwkGroupInit@i^0,f,c
 30177  009644  0E09               	movlw	9
 30178  009646  6402               	cpfsgt	nwkGroupInit@i^0,c
 30179  009648  EF28  F04B         	goto	u10511
 30180  00964C  EF2A  F04B         	goto	u10510
 30181  009650                     u10511:
 30182  009650  EF15  F04B         	goto	l12033
 30183  009654                     u10510:
 30184  009654  0012               	return		;funcret
 30185  009656                     __end_of_nwkGroupInit:
 30186                           	opt callstack 0
 30187                           
 30188 ;; *************** function _nwkFrameInit *****************
 30189 ;; Defined at:
 30190 ;;		line 70 in file "nwk/nwk_src/nwkFrame.c"
 30191 ;; Parameters:    Size  Location     Type
 30192 ;;		None
 30193 ;; Auto vars:     Size  Location     Type
 30194 ;;  i               1    1[COMRAM] unsigned char 
 30195 ;; Return value:  Size  Location     Type
 30196 ;;                  1    wreg      void 
 30197 ;; Registers used:
 30198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30199 ;; Tracked objects:
 30200 ;;		On entry : 0/0
 30201 ;;		On exit  : 0/0
 30202 ;;		Unchanged: 0/0
 30203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30208 ;;Total ram usage:        1 bytes
 30209 ;; Hardware stack levels used:    1
 30210 ;; Hardware stack levels required when called:    7
 30211 ;; This function calls:
 30212 ;;		Nothing
 30213 ;; This function is called by:
 30214 ;;		_NWK_Init
 30215 ;; This function uses a non-reentrant model
 30216 ;;
 30217                           
 30218                           	psect	text195
 30219  009798                     __ptext195:
 30220                           	opt callstack 0
 30221  009798                     _nwkFrameInit:
 30222                           	opt callstack 21
 30223  009798                     
 30224                           ;nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 30225  009798  0E00               	movlw	0
 30226  00979A  6E02               	movwf	nwkFrameInit@i^0,c
 30227  00979C                     l12007:
 30228                           
 30229                           ;nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 30230  00979C  5002               	movf	nwkFrameInit@i^0,w,c
 30231  00979E  0D89               	mullw	137
 30232  0097A0  0EBD               	movlw	low _nwkFrameFrames
 30233  0097A2  24F3               	addwf	243,w,c
 30234  0097A4  6ED9               	movwf	fsr2l,c
 30235  0097A6  0E05               	movlw	high _nwkFrameFrames
 30236  0097A8  20F4               	addwfc	prodh,w,c
 30237  0097AA  6EDA               	movwf	fsr2h,c
 30238  0097AC  0E00               	movlw	0
 30239  0097AE  6EDF               	movwf	indf2,c
 30240  0097B0  2A02               	incf	nwkFrameInit@i^0,f,c
 30241  0097B2  0E04               	movlw	4
 30242  0097B4  6402               	cpfsgt	nwkFrameInit@i^0,c
 30243  0097B6  EFDF  F04B         	goto	u10491
 30244  0097BA  EFE1  F04B         	goto	u10490
 30245  0097BE                     u10491:
 30246  0097BE  EFCE  F04B         	goto	l12007
 30247  0097C2                     u10490:
 30248  0097C2  0012               	return		;funcret
 30249  0097C4                     __end_of_nwkFrameInit:
 30250                           	opt callstack 0
 30251                           
 30252 ;; *************** function _nwkDataReqInit *****************
 30253 ;; Defined at:
 30254 ;;		line 78 in file "nwk/nwk_src/nwkDataReq.c"
 30255 ;; Parameters:    Size  Location     Type
 30256 ;;		None
 30257 ;; Auto vars:     Size  Location     Type
 30258 ;;		None
 30259 ;; Return value:  Size  Location     Type
 30260 ;;                  1    wreg      void 
 30261 ;; Registers used:
 30262 ;;		wreg, status,2, status,0
 30263 ;; Tracked objects:
 30264 ;;		On entry : 0/0
 30265 ;;		On exit  : 0/0
 30266 ;;		Unchanged: 0/0
 30267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30272 ;;Total ram usage:        0 bytes
 30273 ;; Hardware stack levels used:    1
 30274 ;; Hardware stack levels required when called:    7
 30275 ;; This function calls:
 30276 ;;		Nothing
 30277 ;; This function is called by:
 30278 ;;		_NWK_Init
 30279 ;; This function uses a non-reentrant model
 30280 ;;
 30281                           
 30282                           	psect	text196
 30283  009CC6                     __ptext196:
 30284                           	opt callstack 0
 30285  009CC6                     _nwkDataReqInit:
 30286                           	opt callstack 21
 30287  009CC6                     
 30288                           ;nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 30289  009CC6  0E00               	movlw	0
 30290  009CC8  0100               	movlb	0	; () banked
 30291  009CCA  6FE8               	movwf	_nwkDataReqQueue& (0+255),b
 30292  009CCC  0E00               	movlw	0
 30293  009CCE  6FE9               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 30294  009CD0                     
 30295                           ; BSR set to: 0
 30296  009CD0  0012               	return		;funcret
 30297  009CD2                     __end_of_nwkDataReqInit:
 30298                           	opt callstack 0
 30299                           
 30300 ;; *************** function _SYSTEM_Initialize *****************
 30301 ;; Defined at:
 30302 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30303 ;; Parameters:    Size  Location     Type
 30304 ;;		None
 30305 ;; Auto vars:     Size  Location     Type
 30306 ;;		None
 30307 ;; Return value:  Size  Location     Type
 30308 ;;                  1    wreg      void 
 30309 ;; Registers used:
 30310 ;;		wreg, status,2, status,0, cstack
 30311 ;; Tracked objects:
 30312 ;;		On entry : 0/0
 30313 ;;		On exit  : 0/0
 30314 ;;		Unchanged: 0/0
 30315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30320 ;;Total ram usage:        0 bytes
 30321 ;; Hardware stack levels used:    1
 30322 ;; Hardware stack levels required when called:    9
 30323 ;; This function calls:
 30324 ;;		_CRC_Initialize
 30325 ;;		_INTERRUPT_Initialize
 30326 ;;		_OSCILLATOR_Initialize
 30327 ;;		_PIN_MANAGER_Initialize
 30328 ;;		_PMD_Initialize
 30329 ;;		_SPI1_Initialize
 30330 ;;		_TMR0_Initialize
 30331 ;;		_UART1_Initialize
 30332 ;; This function is called by:
 30333 ;;		_main
 30334 ;; This function uses a non-reentrant model
 30335 ;;
 30336                           
 30337                           	psect	text197
 30338  0098F6                     __ptext197:
 30339                           	opt callstack 0
 30340  0098F6                     _SYSTEM_Initialize:
 30341                           	opt callstack 21
 30342  0098F6                     
 30343                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30344  0098F6  ECB3  F049         	call	_INTERRUPT_Initialize	;wreg free
 30345                           
 30346                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30347  0098FA  EC58  F04C         	call	_PMD_Initialize	;wreg free
 30348                           
 30349                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30350  0098FE  EC54  F041         	call	_PIN_MANAGER_Initialize	;wreg free
 30351                           
 30352                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30353  009902  ECB5  F04D         	call	_OSCILLATOR_Initialize	;wreg free
 30354  009906                     
 30355                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 30356  009906  ECBF  F045         	call	_CRC_Initialize	;wreg free
 30357  00990A                     
 30358                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 30359  00990A  EC93  F049         	call	_TMR0_Initialize	;wreg free
 30360  00990E                     
 30361                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 30362  00990E  EC60  F03D         	call	_UART1_Initialize	;wreg free
 30363  009912                     
 30364                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 30365  009912  EC3C  F04D         	call	_SPI1_Initialize	;wreg free
 30366  009916  0012               	return		;funcret
 30367  009918                     __end_of_SYSTEM_Initialize:
 30368                           	opt callstack 0
 30369                           
 30370 ;; *************** function _UART1_Initialize *****************
 30371 ;; Defined at:
 30372 ;;		line 95 in file "mcc_generated_files/uart1.c"
 30373 ;; Parameters:    Size  Location     Type
 30374 ;;		None
 30375 ;; Auto vars:     Size  Location     Type
 30376 ;;		None
 30377 ;; Return value:  Size  Location     Type
 30378 ;;                  1    wreg      void 
 30379 ;; Registers used:
 30380 ;;		wreg, status,2, status,0, cstack
 30381 ;; Tracked objects:
 30382 ;;		On entry : 0/0
 30383 ;;		On exit  : 0/0
 30384 ;;		Unchanged: 0/0
 30385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30390 ;;Total ram usage:        0 bytes
 30391 ;; Hardware stack levels used:    1
 30392 ;; Hardware stack levels required when called:    8
 30393 ;; This function calls:
 30394 ;;		_UART1_SetErrorHandler
 30395 ;;		_UART1_SetFramingErrorHandler
 30396 ;;		_UART1_SetOverrunErrorHandler
 30397 ;;		_UART1_SetRxInterruptHandler
 30398 ;;		_UART1_SetTxInterruptHandler
 30399 ;; This function is called by:
 30400 ;;		_SYSTEM_Initialize
 30401 ;; This function uses a non-reentrant model
 30402 ;;
 30403                           
 30404                           	psect	text198
 30405  007AC0                     __ptext198:
 30406                           	opt callstack 0
 30407  007AC0                     _UART1_Initialize:
 30408                           	opt callstack 21
 30409  007AC0                     
 30410                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 30411  007AC0  0139               	movlb	57	; () banked
 30412  007AC2  9793               	bcf	147,3,b	;volatile
 30413  007AC4                     
 30414                           ; BSR set to: 57
 30415                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30416  007AC4  0ED2               	movlw	low _UART1_Receive_ISR
 30417  007AC6  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 30418  007AC8  0E75               	movlw	high _UART1_Receive_ISR
 30419  007ACA  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 30420  007ACC  EC34  F04E         	call	_UART1_SetRxInterruptHandler	;wreg free
 30421  007AD0                     
 30422                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 30423  007AD0  0139               	movlb	57	; () banked
 30424  007AD2  9993               	bcf	147,4,b	;volatile
 30425                           
 30426                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 30427  007AD4  0EE0               	movlw	low _UART1_Transmit_ISR
 30428  007AD6  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 30429  007AD8  0E8D               	movlw	high _UART1_Transmit_ISR
 30430  007ADA  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 30431  007ADC  EC2D  F04E         	call	_UART1_SetTxInterruptHandler	;wreg free
 30432  007AE0                     
 30433                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 30434  007AE0  0E00               	movlw	0
 30435  007AE2  013D               	movlb	61	; () banked
 30436  007AE4  6FEC               	movwf	236,b	;volatile
 30437  007AE6                     
 30438                           ; BSR set to: 61
 30439                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 30440  007AE6  0E00               	movlw	0
 30441  007AE8  6FED               	movwf	237,b	;volatile
 30442  007AEA                     
 30443                           ; BSR set to: 61
 30444                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 30445  007AEA  0E00               	movlw	0
 30446  007AEC  6FEE               	movwf	238,b	;volatile
 30447  007AEE                     
 30448                           ; BSR set to: 61
 30449                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 30450  007AEE  0E00               	movlw	0
 30451  007AF0  6FEF               	movwf	239,b	;volatile
 30452  007AF2                     
 30453                           ; BSR set to: 61
 30454                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 30455  007AF2  0E00               	movlw	0
 30456  007AF4  6FF0               	movwf	240,b	;volatile
 30457  007AF6                     
 30458                           ; BSR set to: 61
 30459                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 30460  007AF6  0E00               	movlw	0
 30461  007AF8  6FF1               	movwf	241,b	;volatile
 30462  007AFA                     
 30463                           ; BSR set to: 61
 30464                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 30465  007AFA  0EB3               	movlw	179
 30466  007AFC  6FF2               	movwf	242,b	;volatile
 30467  007AFE                     
 30468                           ; BSR set to: 61
 30469                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 30470  007AFE  0E00               	movlw	0
 30471  007B00  6FF3               	movwf	243,b	;volatile
 30472  007B02                     
 30473                           ; BSR set to: 61
 30474                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 30475  007B02  0E82               	movlw	130
 30476  007B04  6FF4               	movwf	244,b	;volatile
 30477  007B06                     
 30478                           ; BSR set to: 61
 30479                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 30480  007B06  0E40               	movlw	64
 30481  007B08  6FF5               	movwf	245,b	;volatile
 30482  007B0A                     
 30483                           ; BSR set to: 61
 30484                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 30485  007B0A  0E03               	movlw	3
 30486  007B0C  6FF6               	movwf	246,b	;volatile
 30487  007B0E                     
 30488                           ; BSR set to: 61
 30489                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 30490  007B0E  0E00               	movlw	0
 30491  007B10  6FF7               	movwf	247,b	;volatile
 30492  007B12                     
 30493                           ; BSR set to: 61
 30494                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 30495  007B12  0E00               	movlw	0
 30496  007B14  6FF8               	movwf	248,b	;volatile
 30497  007B16                     
 30498                           ; BSR set to: 61
 30499                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 30500  007B16  0E00               	movlw	0
 30501  007B18  6FF9               	movwf	249,b	;volatile
 30502  007B1A                     
 30503                           ; BSR set to: 61
 30504                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 30505  007B1A  0E00               	movlw	0
 30506  007B1C  6FFA               	movwf	250,b	;volatile
 30507  007B1E                     
 30508                           ; BSR set to: 61
 30509                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 30510  007B1E  0E28               	movlw	low _UART1_DefaultFramingErrorHandler
 30511  007B20  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 30512  007B22  0E9D               	movlw	high _UART1_DefaultFramingErrorHandler
 30513  007B24  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 30514  007B26  EC42  F04E         	call	_UART1_SetFramingErrorHandler	;wreg free
 30515  007B2A                     
 30516                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 30517  007B2A  0E26               	movlw	low _UART1_DefaultOverrunErrorHandler
 30518  007B2C  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 30519  007B2E  0E9D               	movlw	high _UART1_DefaultOverrunErrorHandler
 30520  007B30  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 30521  007B32  EC3B  F04E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 30522  007B36                     
 30523                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 30524  007B36  0E08               	movlw	low _UART1_DefaultErrorHandler
 30525  007B38  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 30526  007B3A  0E9D               	movlw	high _UART1_DefaultErrorHandler
 30527  007B3C  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 30528  007B3E  EC49  F04E         	call	_UART1_SetErrorHandler	;wreg free
 30529                           
 30530                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 30531  007B42  0E00               	movlw	0
 30532  007B44  0101               	movlb	1	; () banked
 30533  007B46  6F68               	movwf	_uart1RxLastError& (0+255),b	;volatile
 30534                           
 30535                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 30536  007B48  0E00               	movlw	0
 30537  007B4A  0100               	movlb	0	; () banked
 30538  007B4C  6FEF               	movwf	_uart1TxHead& (0+255),b	;volatile
 30539                           
 30540                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 30541  007B4E  0E00               	movlw	0
 30542  007B50  6FEE               	movwf	_uart1TxTail& (0+255),b	;volatile
 30543                           
 30544                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 30545  007B52  0E40               	movlw	64
 30546  007B54  0101               	movlb	1	; () banked
 30547  007B56  6FFA               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 30548                           
 30549                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 30550  007B58  0E00               	movlw	0
 30551  007B5A  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 30552                           
 30553                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 30554  007B5C  0E00               	movlw	0
 30555  007B5E  0100               	movlb	0	; () banked
 30556  007B60  6FED               	movwf	_uart1RxTail& (0+255),b	;volatile
 30557                           
 30558                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 30559  007B62  0E00               	movlw	0
 30560  007B64  6FEC               	movwf	_uart1RxCount& (0+255),b	;volatile
 30561  007B66                     
 30562                           ; BSR set to: 0
 30563                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 30564  007B66  0139               	movlb	57	; () banked
 30565  007B68  8793               	bsf	147,3,b	;volatile
 30566  007B6A                     
 30567                           ; BSR set to: 57
 30568  007B6A  0012               	return		;funcret
 30569  007B6C                     __end_of_UART1_Initialize:
 30570                           	opt callstack 0
 30571                           
 30572 ;; *************** function _UART1_SetTxInterruptHandler *****************
 30573 ;; Defined at:
 30574 ;;		line 352 in file "mcc_generated_files/uart1.c"
 30575 ;; Parameters:    Size  Location     Type
 30576 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 30577 ;;		 -> UART1_Transmit_ISR(1), 
 30578 ;; Auto vars:     Size  Location     Type
 30579 ;;		None
 30580 ;; Return value:  Size  Location     Type
 30581 ;;                  1    wreg      void 
 30582 ;; Registers used:
 30583 ;;		wreg, status,2, status,0
 30584 ;; Tracked objects:
 30585 ;;		On entry : 0/0
 30586 ;;		On exit  : 0/0
 30587 ;;		Unchanged: 0/0
 30588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30593 ;;Total ram usage:        2 bytes
 30594 ;; Hardware stack levels used:    1
 30595 ;; Hardware stack levels required when called:    7
 30596 ;; This function calls:
 30597 ;;		Nothing
 30598 ;; This function is called by:
 30599 ;;		_UART1_Initialize
 30600 ;; This function uses a non-reentrant model
 30601 ;;
 30602                           
 30603                           	psect	text199
 30604  009C5A                     __ptext199:
 30605                           	opt callstack 0
 30606  009C5A                     _UART1_SetTxInterruptHandler:
 30607                           	opt callstack 21
 30608  009C5A                     
 30609                           ;mcc_generated_files/uart1.c: 353:     UART1_TxInterruptHandler = InterruptHandler;
 30610  009C5A  0060  F008  F1F6   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 30611  009C60  0060  F00C  F1F7   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 30612  009C66  0012               	return		;funcret
 30613  009C68                     __end_of_UART1_SetTxInterruptHandler:
 30614                           	opt callstack 0
 30615                           
 30616 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30617 ;; Defined at:
 30618 ;;		line 348 in file "mcc_generated_files/uart1.c"
 30619 ;; Parameters:    Size  Location     Type
 30620 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 30621 ;;		 -> UART1_Receive_ISR(1), 
 30622 ;; Auto vars:     Size  Location     Type
 30623 ;;		None
 30624 ;; Return value:  Size  Location     Type
 30625 ;;                  1    wreg      void 
 30626 ;; Registers used:
 30627 ;;		wreg, status,2, status,0
 30628 ;; Tracked objects:
 30629 ;;		On entry : 0/0
 30630 ;;		On exit  : 0/0
 30631 ;;		Unchanged: 0/0
 30632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30637 ;;Total ram usage:        2 bytes
 30638 ;; Hardware stack levels used:    1
 30639 ;; Hardware stack levels required when called:    7
 30640 ;; This function calls:
 30641 ;;		Nothing
 30642 ;; This function is called by:
 30643 ;;		_UART1_Initialize
 30644 ;; This function uses a non-reentrant model
 30645 ;;
 30646                           
 30647                           	psect	text200
 30648  009C68                     __ptext200:
 30649                           	opt callstack 0
 30650  009C68                     _UART1_SetRxInterruptHandler:
 30651                           	opt callstack 21
 30652  009C68                     
 30653                           ;mcc_generated_files/uart1.c: 349:     UART1_RxInterruptHandler = InterruptHandler;
 30654  009C68  0060  F008  F1F8   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 30655  009C6E  0060  F00C  F1F9   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 30656  009C74  0012               	return		;funcret
 30657  009C76                     __end_of_UART1_SetRxInterruptHandler:
 30658                           	opt callstack 0
 30659                           
 30660 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 30661 ;; Defined at:
 30662 ;;		line 338 in file "mcc_generated_files/uart1.c"
 30663 ;; Parameters:    Size  Location     Type
 30664 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 30665 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 30666 ;; Auto vars:     Size  Location     Type
 30667 ;;		None
 30668 ;; Return value:  Size  Location     Type
 30669 ;;                  1    wreg      void 
 30670 ;; Registers used:
 30671 ;;		wreg, status,2, status,0
 30672 ;; Tracked objects:
 30673 ;;		On entry : 0/0
 30674 ;;		On exit  : 0/0
 30675 ;;		Unchanged: 0/0
 30676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30681 ;;Total ram usage:        2 bytes
 30682 ;; Hardware stack levels used:    1
 30683 ;; Hardware stack levels required when called:    7
 30684 ;; This function calls:
 30685 ;;		Nothing
 30686 ;; This function is called by:
 30687 ;;		_UART1_Initialize
 30688 ;; This function uses a non-reentrant model
 30689 ;;
 30690                           
 30691                           	psect	text201
 30692  009C76                     __ptext201:
 30693                           	opt callstack 0
 30694  009C76                     _UART1_SetOverrunErrorHandler:
 30695                           	opt callstack 21
 30696  009C76                     
 30697                           ;mcc_generated_files/uart1.c: 339:     UART1_OverrunErrorHandler = interruptHandler;
 30698  009C76  0060  F008  F1EE   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 30699  009C7C  0060  F00C  F1EF   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 30700  009C82  0012               	return		;funcret
 30701  009C84                     __end_of_UART1_SetOverrunErrorHandler:
 30702                           	opt callstack 0
 30703                           
 30704 ;; *************** function _UART1_SetFramingErrorHandler *****************
 30705 ;; Defined at:
 30706 ;;		line 334 in file "mcc_generated_files/uart1.c"
 30707 ;; Parameters:    Size  Location     Type
 30708 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 30709 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 30710 ;; Auto vars:     Size  Location     Type
 30711 ;;		None
 30712 ;; Return value:  Size  Location     Type
 30713 ;;                  1    wreg      void 
 30714 ;; Registers used:
 30715 ;;		wreg, status,2, status,0
 30716 ;; Tracked objects:
 30717 ;;		On entry : 0/0
 30718 ;;		On exit  : 0/0
 30719 ;;		Unchanged: 0/0
 30720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30725 ;;Total ram usage:        2 bytes
 30726 ;; Hardware stack levels used:    1
 30727 ;; Hardware stack levels required when called:    7
 30728 ;; This function calls:
 30729 ;;		Nothing
 30730 ;; This function is called by:
 30731 ;;		_UART1_Initialize
 30732 ;; This function uses a non-reentrant model
 30733 ;;
 30734                           
 30735                           	psect	text202
 30736  009C84                     __ptext202:
 30737                           	opt callstack 0
 30738  009C84                     _UART1_SetFramingErrorHandler:
 30739                           	opt callstack 21
 30740  009C84                     
 30741                           ;mcc_generated_files/uart1.c: 335:     UART1_FramingErrorHandler = interruptHandler;
 30742  009C84  0060  F008  F1F0   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 30743  009C8A  0060  F00C  F1F1   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 30744  009C90  0012               	return		;funcret
 30745  009C92                     __end_of_UART1_SetFramingErrorHandler:
 30746                           	opt callstack 0
 30747                           
 30748 ;; *************** function _UART1_SetErrorHandler *****************
 30749 ;; Defined at:
 30750 ;;		line 342 in file "mcc_generated_files/uart1.c"
 30751 ;; Parameters:    Size  Location     Type
 30752 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 30753 ;;		 -> UART1_DefaultErrorHandler(1), 
 30754 ;; Auto vars:     Size  Location     Type
 30755 ;;		None
 30756 ;; Return value:  Size  Location     Type
 30757 ;;                  1    wreg      void 
 30758 ;; Registers used:
 30759 ;;		wreg, status,2, status,0
 30760 ;; Tracked objects:
 30761 ;;		On entry : 0/0
 30762 ;;		On exit  : 0/0
 30763 ;;		Unchanged: 0/0
 30764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30769 ;;Total ram usage:        2 bytes
 30770 ;; Hardware stack levels used:    1
 30771 ;; Hardware stack levels required when called:    7
 30772 ;; This function calls:
 30773 ;;		Nothing
 30774 ;; This function is called by:
 30775 ;;		_UART1_Initialize
 30776 ;; This function uses a non-reentrant model
 30777 ;;
 30778                           
 30779                           	psect	text203
 30780  009C92                     __ptext203:
 30781                           	opt callstack 0
 30782  009C92                     _UART1_SetErrorHandler:
 30783                           	opt callstack 21
 30784  009C92                     
 30785                           ;mcc_generated_files/uart1.c: 343:     UART1_ErrorHandler = interruptHandler;
 30786  009C92  0060  F008  F1EC   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 30787  009C98  0060  F00C  F1ED   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 30788  009C9E  0012               	return		;funcret
 30789  009CA0                     __end_of_UART1_SetErrorHandler:
 30790                           	opt callstack 0
 30791                           
 30792 ;; *************** function _TMR0_Initialize *****************
 30793 ;; Defined at:
 30794 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 30795 ;; Parameters:    Size  Location     Type
 30796 ;;		None
 30797 ;; Auto vars:     Size  Location     Type
 30798 ;;		None
 30799 ;; Return value:  Size  Location     Type
 30800 ;;                  1    wreg      void 
 30801 ;; Registers used:
 30802 ;;		wreg, status,2, status,0, cstack
 30803 ;; Tracked objects:
 30804 ;;		On entry : 0/0
 30805 ;;		On exit  : 0/0
 30806 ;;		Unchanged: 0/0
 30807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30812 ;;Total ram usage:        2 bytes
 30813 ;; Hardware stack levels used:    1
 30814 ;; Hardware stack levels required when called:    8
 30815 ;; This function calls:
 30816 ;;		_TMR0_SetInterruptHandler
 30817 ;; This function is called by:
 30818 ;;		_SYSTEM_Initialize
 30819 ;; This function uses a non-reentrant model
 30820 ;;
 30821                           
 30822                           	psect	text204
 30823  009326                     __ptext204:
 30824                           	opt callstack 0
 30825  009326                     _TMR0_Initialize:
 30826                           	opt callstack 21
 30827  009326                     
 30828                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 30829  009326  0E40               	movlw	64
 30830  009328  6EB9               	movwf	185,c	;volatile
 30831                           
 30832                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 30833  00932A  0EC1               	movlw	193
 30834  00932C  6EB7               	movwf	183,c	;volatile
 30835                           
 30836                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 30837  00932E  0E80               	movlw	128
 30838  009330  6EB6               	movwf	182,c	;volatile
 30839  009332                     
 30840                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 30841  009332  50B6               	movf	182,w,c	;volatile
 30842  009334  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 30843  00933A  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 30844  00933C  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 30845  009342  6A04               	clrf	??_TMR0_Initialize^0,c
 30846  009344  1004               	iorwf	??_TMR0_Initialize^0,w,c
 30847  009346  0101               	movlb	1	; () banked
 30848  009348  6FF4               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 30849  00934A  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 30850  00934C  6FF5               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 30851  00934E                     
 30852                           ; BSR set to: 1
 30853                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 30854  00934E  0139               	movlb	57	; () banked
 30855  009350  9FA3               	bcf	163,7,b	;volatile
 30856  009352                     
 30857                           ; BSR set to: 57
 30858                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 30859  009352  8F93               	bsf	147,7,b	;volatile
 30860  009354                     
 30861                           ; BSR set to: 57
 30862                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 30863  009354  0E20               	movlw	low _TMR0_DefaultInterruptHandler
 30864  009356  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 30865  009358  0E9D               	movlw	high _TMR0_DefaultInterruptHandler
 30866  00935A  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 30867  00935C  EC50  F04E         	call	_TMR0_SetInterruptHandler	;wreg free
 30868  009360                     
 30869                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 30870  009360  0E90               	movlw	144
 30871  009362  6EB8               	movwf	184,c	;volatile
 30872  009364  0012               	return		;funcret
 30873  009366                     __end_of_TMR0_Initialize:
 30874                           	opt callstack 0
 30875                           
 30876 ;; *************** function _TMR0_SetInterruptHandler *****************
 30877 ;; Defined at:
 30878 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 30879 ;; Parameters:    Size  Location     Type
 30880 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 30881 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 30882 ;; Auto vars:     Size  Location     Type
 30883 ;;		None
 30884 ;; Return value:  Size  Location     Type
 30885 ;;                  1    wreg      void 
 30886 ;; Registers used:
 30887 ;;		wreg, status,2, status,0
 30888 ;; Tracked objects:
 30889 ;;		On entry : 0/0
 30890 ;;		On exit  : 0/0
 30891 ;;		Unchanged: 0/0
 30892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30897 ;;Total ram usage:        2 bytes
 30898 ;; Hardware stack levels used:    1
 30899 ;; Hardware stack levels required when called:    7
 30900 ;; This function calls:
 30901 ;;		Nothing
 30902 ;; This function is called by:
 30903 ;;		_TMR0_Initialize
 30904 ;;		_main
 30905 ;; This function uses a non-reentrant model
 30906 ;;
 30907                           
 30908                           	psect	text205
 30909  009CA0                     __ptext205:
 30910                           	opt callstack 0
 30911  009CA0                     _TMR0_SetInterruptHandler:
 30912                           	opt callstack 23
 30913  009CA0                     
 30914                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 30915  009CA0  0060  F008  F1F2   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 30916  009CA6  0060  F00C  F1F3   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 30917  009CAC  0012               	return		;funcret
 30918  009CAE                     __end_of_TMR0_SetInterruptHandler:
 30919                           	opt callstack 0
 30920                           
 30921 ;; *************** function _SPI1_Initialize *****************
 30922 ;; Defined at:
 30923 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30924 ;; Parameters:    Size  Location     Type
 30925 ;;		None
 30926 ;; Auto vars:     Size  Location     Type
 30927 ;;		None
 30928 ;; Return value:  Size  Location     Type
 30929 ;;                  1    wreg      void 
 30930 ;; Registers used:
 30931 ;;		wreg, status,2
 30932 ;; Tracked objects:
 30933 ;;		On entry : 0/0
 30934 ;;		On exit  : 0/0
 30935 ;;		Unchanged: 0/0
 30936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30941 ;;Total ram usage:        0 bytes
 30942 ;; Hardware stack levels used:    1
 30943 ;; Hardware stack levels required when called:    7
 30944 ;; This function calls:
 30945 ;;		Nothing
 30946 ;; This function is called by:
 30947 ;;		_SYSTEM_Initialize
 30948 ;; This function uses a non-reentrant model
 30949 ;;
 30950                           
 30951                           	psect	text206
 30952  009A78                     __ptext206:
 30953                           	opt callstack 0
 30954  009A78                     _SPI1_Initialize:
 30955                           	opt callstack 22
 30956  009A78                     
 30957                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 30958  009A78  0E82               	movlw	130
 30959  009A7A  013D               	movlb	61	; () banked
 30960  009A7C  6F14               	movwf	20,b	;volatile
 30961                           
 30962                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 30963  009A7E  0EC0               	movlw	192
 30964  009A80  6F15               	movwf	21,b	;volatile
 30965                           
 30966                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 30967  009A82  0E03               	movlw	3
 30968  009A84  6F16               	movwf	22,b	;volatile
 30969                           
 30970                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 30971  009A86  0E01               	movlw	1
 30972  009A88  6F1C               	movwf	28,b	;volatile
 30973                           
 30974                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 30975  009A8A  0E03               	movlw	3
 30976  009A8C  6F19               	movwf	25,b	;volatile
 30977  009A8E                     
 30978                           ; BSR set to: 61
 30979                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB2 = 0;
 30980  009A8E  94C3               	bcf	195,2,c	;volatile
 30981  009A90                     
 30982                           ; BSR set to: 61
 30983  009A90  0012               	return		;funcret
 30984  009A92                     __end_of_SPI1_Initialize:
 30985                           	opt callstack 0
 30986                           
 30987 ;; *************** function _PMD_Initialize *****************
 30988 ;; Defined at:
 30989 ;;		line 76 in file "mcc_generated_files/mcc.c"
 30990 ;; Parameters:    Size  Location     Type
 30991 ;;		None
 30992 ;; Auto vars:     Size  Location     Type
 30993 ;;		None
 30994 ;; Return value:  Size  Location     Type
 30995 ;;                  1    wreg      void 
 30996 ;; Registers used:
 30997 ;;		wreg, status,2
 30998 ;; Tracked objects:
 30999 ;;		On entry : 0/0
 31000 ;;		On exit  : 0/0
 31001 ;;		Unchanged: 0/0
 31002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31007 ;;Total ram usage:        0 bytes
 31008 ;; Hardware stack levels used:    1
 31009 ;; Hardware stack levels required when called:    7
 31010 ;; This function calls:
 31011 ;;		Nothing
 31012 ;; This function is called by:
 31013 ;;		_SYSTEM_Initialize
 31014 ;; This function uses a non-reentrant model
 31015 ;;
 31016                           
 31017                           	psect	text207
 31018  0098B0                     __ptext207:
 31019                           	opt callstack 0
 31020  0098B0                     _PMD_Initialize:
 31021                           	opt callstack 22
 31022  0098B0                     
 31023                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 31024  0098B0  0E00               	movlw	0
 31025  0098B2  0139               	movlb	57	; () banked
 31026  0098B4  6FC0               	movwf	192,b	;volatile
 31027                           
 31028                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 31029  0098B6  0E00               	movlw	0
 31030  0098B8  6FC1               	movwf	193,b	;volatile
 31031                           
 31032                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 31033  0098BA  0E00               	movlw	0
 31034  0098BC  6FC2               	movwf	194,b	;volatile
 31035                           
 31036                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 31037  0098BE  0E00               	movlw	0
 31038  0098C0  6FC3               	movwf	195,b	;volatile
 31039                           
 31040                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 31041  0098C2  0E00               	movlw	0
 31042  0098C4  6FC4               	movwf	196,b	;volatile
 31043                           
 31044                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 31045  0098C6  0E00               	movlw	0
 31046  0098C8  6FC5               	movwf	197,b	;volatile
 31047                           
 31048                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 31049  0098CA  0E00               	movlw	0
 31050  0098CC  6FC6               	movwf	198,b	;volatile
 31051                           
 31052                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 31053  0098CE  0E00               	movlw	0
 31054  0098D0  6FC7               	movwf	199,b	;volatile
 31055  0098D2                     
 31056                           ; BSR set to: 57
 31057  0098D2  0012               	return		;funcret
 31058  0098D4                     __end_of_PMD_Initialize:
 31059                           	opt callstack 0
 31060                           
 31061 ;; *************** function _PIN_MANAGER_Initialize *****************
 31062 ;; Defined at:
 31063 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 31064 ;; Parameters:    Size  Location     Type
 31065 ;;		None
 31066 ;; Auto vars:     Size  Location     Type
 31067 ;;		None
 31068 ;; Return value:  Size  Location     Type
 31069 ;;                  1    wreg      void 
 31070 ;; Registers used:
 31071 ;;		wreg, status,2
 31072 ;; Tracked objects:
 31073 ;;		On entry : 0/0
 31074 ;;		On exit  : 0/0
 31075 ;;		Unchanged: 0/0
 31076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31081 ;;Total ram usage:        0 bytes
 31082 ;; Hardware stack levels used:    1
 31083 ;; Hardware stack levels required when called:    7
 31084 ;; This function calls:
 31085 ;;		Nothing
 31086 ;; This function is called by:
 31087 ;;		_SYSTEM_Initialize
 31088 ;; This function uses a non-reentrant model
 31089 ;;
 31090                           
 31091                           	psect	text208
 31092  0082A8                     __ptext208:
 31093                           	opt callstack 0
 31094  0082A8                     _PIN_MANAGER_Initialize:
 31095                           	opt callstack 22
 31096  0082A8                     
 31097                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 31098  0082A8  0E08               	movlw	8
 31099  0082AA  6EBA               	movwf	186,c	;volatile
 31100                           
 31101                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 31102  0082AC  0E00               	movlw	0
 31103  0082AE  6EBB               	movwf	187,c	;volatile
 31104                           
 31105                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 31106  0082B0  0E40               	movlw	64
 31107  0082B2  6EBC               	movwf	188,c	;volatile
 31108                           
 31109                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 31110  0082B4  0EF7               	movlw	247
 31111  0082B6  6EC2               	movwf	194,c	;volatile
 31112                           
 31113                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 31114  0082B8  0EFE               	movlw	254
 31115  0082BA  6EC3               	movwf	195,c	;volatile
 31116                           
 31117                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 31118  0082BC  0E1C               	movlw	28
 31119  0082BE  6EC4               	movwf	196,c	;volatile
 31120                           
 31121                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 31122  0082C0  0E29               	movlw	41
 31123  0082C2  013A               	movlb	58	; () banked
 31124  0082C4  6F60               	movwf	96,b	;volatile
 31125                           
 31126                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 31127  0082C6  0ECD               	movlw	205
 31128  0082C8  6F50               	movwf	80,b	;volatile
 31129                           
 31130                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF2;
 31131  0082CA  0EF2               	movlw	242
 31132  0082CC  6F40               	movwf	64,b	;volatile
 31133                           
 31134                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 31135  0082CE  0E00               	movlw	0
 31136  0082D0  6F81               	movwf	129,b	;volatile
 31137                           
 31138                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 31139  0082D2  0E00               	movlw	0
 31140  0082D4  6F51               	movwf	81,b	;volatile
 31141                           
 31142                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 31143  0082D6  0E00               	movlw	0
 31144  0082D8  6F41               	movwf	65,b	;volatile
 31145                           
 31146                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 31147  0082DA  0E08               	movlw	8
 31148  0082DC  6F61               	movwf	97,b	;volatile
 31149                           
 31150                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 31151  0082DE  0E00               	movlw	0
 31152  0082E0  6F5A               	movwf	90,b	;volatile
 31153                           
 31154                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 31155  0082E2  0E00               	movlw	0
 31156  0082E4  6F5B               	movwf	91,b	;volatile
 31157                           
 31158                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 31159  0082E6  0E00               	movlw	0
 31160  0082E8  6F6A               	movwf	106,b	;volatile
 31161                           
 31162                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 31163  0082EA  0E00               	movlw	0
 31164  0082EC  6F6B               	movwf	107,b	;volatile
 31165                           
 31166                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 31167  0082EE  0E00               	movlw	0
 31168  0082F0  6F42               	movwf	66,b	;volatile
 31169                           
 31170                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x06;
 31171  0082F2  0E06               	movlw	6
 31172  0082F4  6F52               	movwf	82,b	;volatile
 31173                           
 31174                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x18;
 31175  0082F6  0E18               	movlw	24
 31176  0082F8  6F62               	movwf	98,b	;volatile
 31177  0082FA                     
 31178                           ; BSR set to: 58
 31179                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 31180  0082FA  6943               	setf	67,b	;volatile
 31181  0082FC                     
 31182                           ; BSR set to: 58
 31183                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 31184  0082FC  6953               	setf	83,b	;volatile
 31185  0082FE                     
 31186                           ; BSR set to: 58
 31187                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 31188  0082FE  6963               	setf	99,b	;volatile
 31189  008300                     
 31190                           ; BSR set to: 58
 31191                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 31192  008300  6944               	setf	68,b	;volatile
 31193  008302                     
 31194                           ; BSR set to: 58
 31195                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 31196  008302  6954               	setf	84,b	;volatile
 31197  008304                     
 31198                           ; BSR set to: 58
 31199                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 31200  008304  6964               	setf	100,b	;volatile
 31201                           
 31202                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 31203  008306  0E08               	movlw	8
 31204  008308  6F84               	movwf	132,b	;volatile
 31205                           
 31206                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 31207  00830A  0E13               	movlw	19
 31208  00830C  6F10               	movwf	16,b	;volatile
 31209                           
 31210                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 31211  00830E  0E17               	movlw	23
 31212  008310  6FDE               	movwf	222,b	;volatile
 31213                           
 31214                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 31215  008312  0E05               	movlw	5
 31216  008314  6FE0               	movwf	224,b	;volatile
 31217                           
 31218                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 31219  008316  0E1F               	movlw	31
 31220  008318  6F08               	movwf	8,b	;volatile
 31221                           
 31222                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 31223  00831A  0E14               	movlw	20
 31224  00831C  6F11               	movwf	17,b	;volatile
 31225                           
 31226                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 31227  00831E  0E12               	movlw	18
 31228  008320  6FE5               	movwf	229,b	;volatile
 31229                           
 31230                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 31231  008322  0E1F               	movlw	31
 31232  008324  6FE6               	movwf	230,b	;volatile
 31233                           
 31234                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 31235  008326  0E1E               	movlw	30
 31236  008328  6F17               	movwf	23,b	;volatile
 31237                           
 31238                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 31239  00832A  0E09               	movlw	9
 31240  00832C  6FDF               	movwf	223,b	;volatile
 31241  00832E                     
 31242                           ; BSR set to: 58
 31243  00832E  0012               	return		;funcret
 31244  008330                     __end_of_PIN_MANAGER_Initialize:
 31245                           	opt callstack 0
 31246                           
 31247 ;; *************** function _OSCILLATOR_Initialize *****************
 31248 ;; Defined at:
 31249 ;;		line 62 in file "mcc_generated_files/mcc.c"
 31250 ;; Parameters:    Size  Location     Type
 31251 ;;		None
 31252 ;; Auto vars:     Size  Location     Type
 31253 ;;		None
 31254 ;; Return value:  Size  Location     Type
 31255 ;;                  1    wreg      void 
 31256 ;; Registers used:
 31257 ;;		wreg, status,2
 31258 ;; Tracked objects:
 31259 ;;		On entry : 0/0
 31260 ;;		On exit  : 0/0
 31261 ;;		Unchanged: 0/0
 31262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31267 ;;Total ram usage:        0 bytes
 31268 ;; Hardware stack levels used:    1
 31269 ;; Hardware stack levels required when called:    7
 31270 ;; This function calls:
 31271 ;;		Nothing
 31272 ;; This function is called by:
 31273 ;;		_SYSTEM_Initialize
 31274 ;; This function uses a non-reentrant model
 31275 ;;
 31276                           
 31277                           	psect	text209
 31278  009B6A                     __ptext209:
 31279                           	opt callstack 0
 31280  009B6A                     _OSCILLATOR_Initialize:
 31281                           	opt callstack 22
 31282  009B6A                     
 31283                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 31284  009B6A  0E60               	movlw	96
 31285  009B6C  0139               	movlb	57	; () banked
 31286  009B6E  6FD9               	movwf	217,b	;volatile
 31287                           
 31288                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 31289  009B70  0E00               	movlw	0
 31290  009B72  6FDB               	movwf	219,b	;volatile
 31291                           
 31292                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 31293  009B74  0E00               	movlw	0
 31294  009B76  6FDD               	movwf	221,b	;volatile
 31295                           
 31296                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 31297  009B78  0E08               	movlw	8
 31298  009B7A  6FDF               	movwf	223,b	;volatile
 31299                           
 31300                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 31301  009B7C  0E00               	movlw	0
 31302  009B7E  6FDE               	movwf	222,b	;volatile
 31303  009B80                     
 31304                           ; BSR set to: 57
 31305  009B80  0012               	return		;funcret
 31306  009B82                     __end_of_OSCILLATOR_Initialize:
 31307                           	opt callstack 0
 31308                           
 31309 ;; *************** function _INTERRUPT_Initialize *****************
 31310 ;; Defined at:
 31311 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31312 ;; Parameters:    Size  Location     Type
 31313 ;;		None
 31314 ;; Auto vars:     Size  Location     Type
 31315 ;;  state           1    1[COMRAM] _Bool 
 31316 ;; Return value:  Size  Location     Type
 31317 ;;                  1    wreg      void 
 31318 ;; Registers used:
 31319 ;;		wreg, status,2
 31320 ;; Tracked objects:
 31321 ;;		On entry : 0/0
 31322 ;;		On exit  : 0/0
 31323 ;;		Unchanged: 0/0
 31324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31329 ;;Total ram usage:        1 bytes
 31330 ;; Hardware stack levels used:    1
 31331 ;; Hardware stack levels required when called:    7
 31332 ;; This function calls:
 31333 ;;		Nothing
 31334 ;; This function is called by:
 31335 ;;		_SYSTEM_Initialize
 31336 ;; This function uses a non-reentrant model
 31337 ;;
 31338                           
 31339                           	psect	text210
 31340  009366                     __ptext210:
 31341                           	opt callstack 0
 31342  009366                     _INTERRUPT_Initialize:
 31343                           	opt callstack 22
 31344  009366                     
 31345                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31346  009366  8AD2               	bsf	210,5,c	;volatile
 31347  009368                     
 31348                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31349  009368  0E00               	movlw	0
 31350  00936A  BED2               	btfsc	16338,7,c	;volatile
 31351  00936C  0E01               	movlw	1
 31352  00936E  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 31353  009370                     
 31354                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31355  009370  9ED2               	bcf	16338,7,c	;volatile
 31356                           
 31357                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31358  009372  0E55               	movlw	85
 31359  009374  6ED4               	movwf	212,c	;volatile
 31360                           
 31361                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31362  009376  0EAA               	movlw	170
 31363  009378  6ED4               	movwf	212,c	;volatile
 31364  00937A                     
 31365                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31366  00937A  90D4               	bcf	212,0,c	;volatile
 31367                           
 31368                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 31369  00937C  0E00               	movlw	0
 31370  00937E  6ED7               	movwf	215,c	;volatile
 31371                           
 31372                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 31373  009380  0E00               	movlw	0
 31374  009382  6ED6               	movwf	214,c	;volatile
 31375                           
 31376                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 31377  009384  0E08               	movlw	8
 31378  009386  6ED5               	movwf	213,c	;volatile
 31379                           
 31380                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31381  009388  0E55               	movlw	85
 31382  00938A  6ED4               	movwf	212,c	;volatile
 31383                           
 31384                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31385  00938C  0EAA               	movlw	170
 31386  00938E  6ED4               	movwf	212,c	;volatile
 31387  009390                     
 31388                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31389  009390  80D4               	bsf	212,0,c	;volatile
 31390  009392                     
 31391                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31392  009392  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 31393  009394  D002               	bra	u5155
 31394  009396  9ED2               	bcf	16338,7,c	;volatile
 31395  009398  D001               	bra	u5156
 31396  00939A                     u5155:
 31397  00939A  8ED2               	bsf	16338,7,c	;volatile
 31398  00939C                     u5156:
 31399  00939C                     
 31400                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 31401  00939C  0139               	movlb	57	; () banked
 31402  00939E  8983               	bsf	131,4,b	;volatile
 31403  0093A0                     
 31404                           ; BSR set to: 57
 31405                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 31406  0093A0  8783               	bsf	131,3,b	;volatile
 31407  0093A2                     
 31408                           ; BSR set to: 57
 31409                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 31410  0093A2  9F83               	bcf	131,7,b	;volatile
 31411  0093A4                     
 31412                           ; BSR set to: 57
 31413  0093A4  0012               	return		;funcret
 31414  0093A6                     __end_of_INTERRUPT_Initialize:
 31415                           	opt callstack 0
 31416                           
 31417 ;; *************** function _CRC_Initialize *****************
 31418 ;; Defined at:
 31419 ;;		line 76 in file "mcc_generated_files/crc.c"
 31420 ;; Parameters:    Size  Location     Type
 31421 ;;		None
 31422 ;; Auto vars:     Size  Location     Type
 31423 ;;  seed            2    0        unsigned short 
 31424 ;;  poly            2    0        unsigned short 
 31425 ;; Return value:  Size  Location     Type
 31426 ;;                  1    wreg      void 
 31427 ;; Registers used:
 31428 ;;		wreg, status,2, status,0
 31429 ;; Tracked objects:
 31430 ;;		On entry : 0/0
 31431 ;;		On exit  : 0/0
 31432 ;;		Unchanged: 0/0
 31433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31435 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31437 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31438 ;;Total ram usage:        5 bytes
 31439 ;; Hardware stack levels used:    1
 31440 ;; Hardware stack levels required when called:    7
 31441 ;; This function calls:
 31442 ;;		Nothing
 31443 ;; This function is called by:
 31444 ;;		_SYSTEM_Initialize
 31445 ;; This function uses a non-reentrant model
 31446 ;;
 31447                           
 31448                           	psect	text211
 31449  008B7E                     __ptext211:
 31450                           	opt callstack 0
 31451  008B7E                     _CRC_Initialize:
 31452                           	opt callstack 22
 31453  008B7E                     
 31454                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 31455  008B7E  0E80               	movlw	128
 31456  008B80  0139               	movlb	57	; () banked
 31457  008B82  6F68               	movwf	104,b	;volatile
 31458                           
 31459                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 31460  008B84  0E7F               	movlw	127
 31461  008B86  6F69               	movwf	105,b	;volatile
 31462                           
 31463                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 31464  008B88  0E00               	movlw	0
 31465  008B8A  6F62               	movwf	98,b	;volatile
 31466                           
 31467                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 31468  008B8C  0E00               	movlw	0
 31469  008B8E  6F63               	movwf	99,b	;volatile
 31470                           
 31471                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 31472  008B90  0E00               	movlw	0
 31473  008B92  6F7C               	movwf	124,b	;volatile
 31474                           
 31475                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 31476  008B94  0E00               	movlw	0
 31477  008B96  6F78               	movwf	120,b	;volatile
 31478                           
 31479                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 31480  008B98  0E00               	movlw	0
 31481  008B9A  6F77               	movwf	119,b	;volatile
 31482                           
 31483                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 31484  008B9C  0E00               	movlw	0
 31485  008B9E  6F76               	movwf	118,b	;volatile
 31486                           
 31487                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 31488  008BA0  0E3F               	movlw	63
 31489  008BA2  6F7B               	movwf	123,b	;volatile
 31490  008BA4                     
 31491                           ; BSR set to: 57
 31492                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 31493  008BA4  697A               	setf	122,b	;volatile
 31494  008BA6                     
 31495                           ; BSR set to: 57
 31496                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 31497  008BA6  6979               	setf	121,b	;volatile
 31498                           
 31499                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 31500  008BA8  0E00               	movlw	0
 31501  008BAA  6F7D               	movwf	125,b	;volatile
 31502                           
 31503                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 31504  008BAC  0E80               	movlw	128
 31505  008BAE  6F67               	movwf	103,b	;volatile
 31506  008BB0                     
 31507                           ; BSR set to: 57
 31508                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 31509  008BB0  0E05               	movlw	5
 31510  008BB2  6F66               	movwf	102,b	;volatile
 31511                           
 31512                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 31513  008BB4  0E00               	movlw	0
 31514  008BB6  6F63               	movwf	99,b	;volatile
 31515  008BB8                     
 31516                           ; BSR set to: 57
 31517                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 31518  008BB8  0E00               	movlw	0
 31519  008BBA  6F62               	movwf	98,b	;volatile
 31520  008BBC                     
 31521                           ; BSR set to: 57
 31522                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 31523  008BBC  3969               	swapf	105,w,b	;volatile
 31524  008BBE  0B0F               	andlw	15
 31525  008BC0  6E02               	movwf	??_CRC_Initialize^0,c
 31526  008BC2  2802               	incf	??_CRC_Initialize^0,w,c
 31527  008BC4  0101               	movlb	1	; () banked
 31528  008BC6  6FD9               	movwf	_crcObj& (0+255),b
 31529  008BC8                     
 31530                           ; BSR set to: 1
 31531                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 31532  008BC8  0139               	movlb	57	; () banked
 31533  008BCA  5169               	movf	105,w,b	;volatile
 31534  008BCC  0B0F               	andlw	15
 31535  008BCE  6E02               	movwf	??_CRC_Initialize^0,c
 31536  008BD0  2802               	incf	??_CRC_Initialize^0,w,c
 31537  008BD2  0101               	movlb	1	; () banked
 31538  008BD4  6FDA               	movwf	(_crcObj+1)& (0+255),b
 31539  008BD6                     
 31540                           ; BSR set to: 1
 31541  008BD6  0012               	return		;funcret
 31542  008BD8                     __end_of_CRC_Initialize:
 31543                           	opt callstack 0
 31544                           
 31545 ;; *************** function _TMR0_ISR *****************
 31546 ;; Defined at:
 31547 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 31548 ;; Parameters:    Size  Location     Type
 31549 ;;		None
 31550 ;; Auto vars:     Size  Location     Type
 31551 ;;		None
 31552 ;; Return value:  Size  Location     Type
 31553 ;;                  1    wreg      void 
 31554 ;; Registers used:
 31555 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31556 ;; Tracked objects:
 31557 ;;		On entry : 0/0
 31558 ;;		On exit  : 0/0
 31559 ;;		Unchanged: 0/0
 31560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31565 ;;Total ram usage:        1 bytes
 31566 ;; Hardware stack levels used:    1
 31567 ;; Hardware stack levels required when called:    6
 31568 ;; This function calls:
 31569 ;;		_TMR0_CallBack
 31570 ;; This function is called by:
 31571 ;;		Interrupt level 1
 31572 ;; This function uses a non-reentrant model
 31573 ;;
 31574                           
 31575                           	psect	text212
 31576  009918                     __ptext212:
 31577                           	opt callstack 0
 31578  009918                     _TMR0_ISR:
 31579                           	opt callstack 9
 31580                           
 31581                           ; BSR set to: 1
 31582                           ;incstack = 0
 31583  009918  006F FF60  F001    	movff	status,??_TMR0_ISR
 31584  00991E                     
 31585                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 31586  00991E  0139               	movlb	57	; () banked
 31587  009920  9FA3               	bcf	163,7,b	;volatile
 31588  009922                     
 31589                           ; BSR set to: 57
 31590                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 31591  009922  0101               	movlb	1	; () banked
 31592  009924  51F5               	movf	(_timer0ReloadVal16bit+1)& (0+255),w,b	;volatile
 31593  009926  6EB7               	movwf	183,c	;volatile
 31594  009928                     
 31595                           ; BSR set to: 1
 31596                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 31597  009928  0060  F7D3  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 31598  00992E                     
 31599                           ; BSR set to: 1
 31600                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 31601  00992E  EC59  F04B         	call	_TMR0_CallBack	;wreg free
 31602  009932  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 31603  009938  0011               	retfie		f
 31604  00993A                     __end_of_TMR0_ISR:
 31605                           	opt callstack 0
 31606                           
 31607 ;; *************** function _TMR0_CallBack *****************
 31608 ;; Defined at:
 31609 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 31610 ;; Parameters:    Size  Location     Type
 31611 ;;		None
 31612 ;; Auto vars:     Size  Location     Type
 31613 ;;		None
 31614 ;; Return value:  Size  Location     Type
 31615 ;;                  1    wreg      void 
 31616 ;; Registers used:
 31617 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31618 ;; Tracked objects:
 31619 ;;		On entry : 0/0
 31620 ;;		On exit  : 0/0
 31621 ;;		Unchanged: 0/0
 31622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31627 ;;Total ram usage:        0 bytes
 31628 ;; Hardware stack levels used:    1
 31629 ;; Hardware stack levels required when called:    5
 31630 ;; This function calls:
 31631 ;;		Absolute function
 31632 ;;		_TMR0_DefaultInterruptHandler
 31633 ;;		_Timer0Handler
 31634 ;; This function is called by:
 31635 ;;		_TMR0_ISR
 31636 ;; This function uses a non-reentrant model
 31637 ;;
 31638                           
 31639                           	psect	text213
 31640  0096B2                     __ptext213:
 31641                           	opt callstack 0
 31642  0096B2                     _TMR0_CallBack:
 31643                           	opt callstack 9
 31644  0096B2                     
 31645                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 31646  0096B2  0101               	movlb	1	; () banked
 31647  0096B4  51F2               	movf	_TMR0_InterruptHandler& (0+255),w,b
 31648  0096B6  11F3               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 31649  0096B8  B4D8               	btfsc	status,2,c
 31650  0096BA  EF61  F04B         	goto	i1u1175_21
 31651  0096BE  EF63  F04B         	goto	i1u1175_20
 31652  0096C2                     i1u1175_21:
 31653  0096C2  EF6F  F04B         	goto	i1l1092
 31654  0096C6                     i1u1175_20:
 31655  0096C6                     
 31656                           ; BSR set to: 1
 31657                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 31658  0096C6  D802               	call	i1u1176_28
 31659  0096C8  EF6F  F04B         	goto	i1u1176_29
 31660  0096CC                     i1u1176_28:
 31661  0096CC  0005               	push	
 31662  0096CE  6EFA               	movwf	pclath,c
 31663  0096D0  51F2               	movf	_TMR0_InterruptHandler& (0+255),w,b
 31664  0096D2  6EFD               	movwf	tosl,c
 31665  0096D4  51F3               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 31666  0096D6  6EFE               	movwf	tosh,c
 31667  0096D8  6AFF               	clrf	tosu,c
 31668  0096DA  50FA               	movf	pclath,w,c
 31669  0096DC  0012               	return		;indir
 31670  0096DE                     i1u1176_29:
 31671  0096DE                     i1l1092:
 31672  0096DE  0012               	return		;funcret
 31673  0096E0                     __end_of_TMR0_CallBack:
 31674                           	opt callstack 0
 31675                           
 31676 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 31677 ;; Defined at:
 31678 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 31679 ;; Parameters:    Size  Location     Type
 31680 ;;		None
 31681 ;; Auto vars:     Size  Location     Type
 31682 ;;		None
 31683 ;; Return value:  Size  Location     Type
 31684 ;;                  1    wreg      void 
 31685 ;; Registers used:
 31686 ;;		None
 31687 ;; Tracked objects:
 31688 ;;		On entry : 0/0
 31689 ;;		On exit  : 0/0
 31690 ;;		Unchanged: 0/0
 31691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31696 ;;Total ram usage:        0 bytes
 31697 ;; Hardware stack levels used:    1
 31698 ;; Hardware stack levels required when called:    4
 31699 ;; This function calls:
 31700 ;;		Nothing
 31701 ;; This function is called by:
 31702 ;;		_TMR0_Initialize
 31703 ;;		_TMR0_CallBack
 31704 ;; This function uses a non-reentrant model
 31705 ;;
 31706                           
 31707                           	psect	text214
 31708  009D20                     __ptext214:
 31709                           	opt callstack 0
 31710  009D20                     _TMR0_DefaultInterruptHandler:
 31711                           	opt callstack 9
 31712  009D20  0012               	return		;funcret
 31713  009D22                     __end_of_TMR0_DefaultInterruptHandler:
 31714                           	opt callstack 0
 31715                           
 31716 ;; *************** function _Timer0Handler *****************
 31717 ;; Defined at:
 31718 ;;		line 7 in file "hal/hal_src/Timers.c"
 31719 ;; Parameters:    Size  Location     Type
 31720 ;;		None
 31721 ;; Auto vars:     Size  Location     Type
 31722 ;;		None
 31723 ;; Return value:  Size  Location     Type
 31724 ;;                  1    wreg      void 
 31725 ;; Registers used:
 31726 ;;		wreg, status,2, status,0
 31727 ;; Tracked objects:
 31728 ;;		On entry : 0/0
 31729 ;;		On exit  : 0/0
 31730 ;;		Unchanged: 0/0
 31731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31736 ;;Total ram usage:        0 bytes
 31737 ;; Hardware stack levels used:    1
 31738 ;; Hardware stack levels required when called:    4
 31739 ;; This function calls:
 31740 ;;		Nothing
 31741 ;; This function is called by:
 31742 ;;		_main
 31743 ;;		_TMR0_CallBack
 31744 ;; This function uses a non-reentrant model
 31745 ;;
 31746                           
 31747                           	psect	text215
 31748  007DFE                     __ptext215:
 31749                           	opt callstack 0
 31750  007DFE                     _Timer0Handler:
 31751                           	opt callstack 9
 31752  007DFE                     
 31753                           ;hal/hal_src/Timers.c: 9:     if(txTimeOut){
 31754  007DFE  0100               	movlb	0	; () banked
 31755  007E00  51F5               	movf	_txTimeOut& (0+255),w,b	;volatile
 31756  007E02  11F6               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 31757  007E04  B4D8               	btfsc	status,2,c
 31758  007E06  EF07  F03F         	goto	i1u1132_21
 31759  007E0A  EF09  F03F         	goto	i1u1132_20
 31760  007E0E                     i1u1132_21:
 31761  007E0E  EF0C  F03F         	goto	i1l12623
 31762  007E12                     i1u1132_20:
 31763  007E12                     
 31764                           ; BSR set to: 0
 31765                           ;hal/hal_src/Timers.c: 10:         txTimeOut--;
 31766  007E12  07F5               	decf	_txTimeOut& (0+255),f,b	;volatile
 31767  007E14  A0D8               	btfss	status,0,c
 31768  007E16  07F6               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 31769  007E18                     i1l12623:
 31770                           
 31771                           ; BSR set to: 0
 31772                           ;hal/hal_src/Timers.c: 12:     if(test_timer){
 31773  007E18  0101               	movlb	1	; () banked
 31774  007E1A  51E8               	movf	_test_timer& (0+255),w,b	;volatile
 31775  007E1C  11E9               	iorwf	(_test_timer+1)& (0+255),w,b	;volatile
 31776  007E1E  B4D8               	btfsc	status,2,c
 31777  007E20  EF14  F03F         	goto	i1u1133_21
 31778  007E24  EF16  F03F         	goto	i1u1133_20
 31779  007E28                     i1u1133_21:
 31780  007E28  EF19  F03F         	goto	i1l12627
 31781  007E2C                     i1u1133_20:
 31782  007E2C                     
 31783                           ; BSR set to: 1
 31784                           ;hal/hal_src/Timers.c: 13:         test_timer--;
 31785  007E2C  07E8               	decf	_test_timer& (0+255),f,b	;volatile
 31786  007E2E  A0D8               	btfss	status,0,c
 31787  007E30  07E9               	decf	(_test_timer+1)& (0+255),f,b	;volatile
 31788  007E32                     i1l12627:
 31789                           
 31790                           ; BSR set to: 1
 31791                           ;hal/hal_src/Timers.c: 15:     if(ATTimeoutTimer){
 31792  007E32  0100               	movlb	0	; () banked
 31793  007E34  51FD               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 31794  007E36  11FE               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 31795  007E38  B4D8               	btfsc	status,2,c
 31796  007E3A  EF21  F03F         	goto	i1u1134_21
 31797  007E3E  EF23  F03F         	goto	i1u1134_20
 31798  007E42                     i1u1134_21:
 31799  007E42  EF26  F03F         	goto	i1l12631
 31800  007E46                     i1u1134_20:
 31801  007E46                     
 31802                           ; BSR set to: 0
 31803                           ;hal/hal_src/Timers.c: 16:         ATTimeoutTimer--;
 31804  007E46  07FD               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 31805  007E48  A0D8               	btfss	status,0,c
 31806  007E4A  07FE               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 31807  007E4C                     i1l12631:
 31808                           
 31809                           ; BSR set to: 0
 31810                           ;hal/hal_src/Timers.c: 18:     if(cadTimeOut){
 31811  007E4C  51F7               	movf	_cadTimeOut& (0+255),w,b	;volatile
 31812  007E4E  11F8               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 31813  007E50  B4D8               	btfsc	status,2,c
 31814  007E52  EF2D  F03F         	goto	i1u1135_21
 31815  007E56  EF2F  F03F         	goto	i1u1135_20
 31816  007E5A                     i1u1135_21:
 31817  007E5A  EF32  F03F         	goto	i1l12635
 31818  007E5E                     i1u1135_20:
 31819  007E5E                     
 31820                           ; BSR set to: 0
 31821                           ;hal/hal_src/Timers.c: 19:         cadTimeOut--;
 31822  007E5E  07F7               	decf	_cadTimeOut& (0+255),f,b	;volatile
 31823  007E60  A0D8               	btfss	status,0,c
 31824  007E62  07F8               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 31825  007E64                     i1l12635:
 31826                           
 31827                           ; BSR set to: 0
 31828                           ;hal/hal_src/Timers.c: 21:     if(_cadBackoffTimer){
 31829  007E64  51F9               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 31830  007E66  11FA               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 31831  007E68  B4D8               	btfsc	status,2,c
 31832  007E6A  EF39  F03F         	goto	i1u1136_21
 31833  007E6E  EF3B  F03F         	goto	i1u1136_20
 31834  007E72                     i1u1136_21:
 31835  007E72  EF3E  F03F         	goto	i1l12639
 31836  007E76                     i1u1136_20:
 31837  007E76                     
 31838                           ; BSR set to: 0
 31839                           ;hal/hal_src/Timers.c: 22:         _cadBackoffTimer--;
 31840  007E76  07F9               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 31841  007E78  A0D8               	btfss	status,0,c
 31842  007E7A  07FA               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 31843  007E7C                     i1l12639:
 31844                           
 31845                           ; BSR set to: 0
 31846                           ;hal/hal_src/Timers.c: 24:     if(ledtimer){
 31847  007E7C  51F3               	movf	_ledtimer& (0+255),w,b	;volatile
 31848  007E7E  11F4               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 31849  007E80  B4D8               	btfsc	status,2,c
 31850  007E82  EF45  F03F         	goto	i1u1137_21
 31851  007E86  EF47  F03F         	goto	i1u1137_20
 31852  007E8A                     i1u1137_21:
 31853  007E8A  EF4A  F03F         	goto	i1l967
 31854  007E8E                     i1u1137_20:
 31855  007E8E                     
 31856                           ; BSR set to: 0
 31857                           ;hal/hal_src/Timers.c: 25:         ledtimer--;
 31858  007E8E  07F3               	decf	_ledtimer& (0+255),f,b	;volatile
 31859  007E90  A0D8               	btfss	status,0,c
 31860  007E92  07F4               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 31861  007E94                     i1l967:
 31862                           
 31863                           ; BSR set to: 0
 31864                           ;hal/hal_src/Timers.c: 27:     halTimerIrqCount++;
 31865  007E94  0101               	movlb	1	; () banked
 31866  007E96  4B65               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 31867  007E98  2B66               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 31868  007E9A                     
 31869                           ; BSR set to: 1
 31870  007E9A  0012               	return		;funcret
 31871  007E9C                     __end_of_Timer0Handler:
 31872                           	opt callstack 0
 31873                           
 31874 ;; *************** function _Default_ISR *****************
 31875 ;; Defined at:
 31876 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 31877 ;; Parameters:    Size  Location     Type
 31878 ;;		None
 31879 ;; Auto vars:     Size  Location     Type
 31880 ;;		None
 31881 ;; Return value:  Size  Location     Type
 31882 ;;                  1    wreg      void 
 31883 ;; Registers used:
 31884 ;;		None
 31885 ;; Tracked objects:
 31886 ;;		On entry : 0/0
 31887 ;;		On exit  : 0/0
 31888 ;;		Unchanged: 0/0
 31889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31894 ;;Total ram usage:        0 bytes
 31895 ;; Hardware stack levels used:    1
 31896 ;; This function calls:
 31897 ;;		Nothing
 31898 ;; This function is called by:
 31899 ;;		Interrupt level 2
 31900 ;; This function uses a non-reentrant model
 31901 ;;
 31902                           
 31903                           	psect	text216
 31904  009D24                     __ptext216:
 31905                           	opt callstack 0
 31906  009D24                     _Default_ISR:
 31907                           	opt callstack 12
 31908  009D24  0011               	retfie		f
 31909  009D26                     __end_of_Default_ISR:
 31910                           	opt callstack 0
 31911                           
 31912 ;; *************** function _UART1_tx_vect_isr *****************
 31913 ;; Defined at:
 31914 ;;		line 247 in file "mcc_generated_files/uart1.c"
 31915 ;; Parameters:    Size  Location     Type
 31916 ;;		None
 31917 ;; Auto vars:     Size  Location     Type
 31918 ;;		None
 31919 ;; Return value:  Size  Location     Type
 31920 ;;                  1    wreg      void 
 31921 ;; Registers used:
 31922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 31923 ;; Tracked objects:
 31924 ;;		On entry : 0/0
 31925 ;;		On exit  : 0/0
 31926 ;;		Unchanged: 0/0
 31927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31932 ;;Total ram usage:        0 bytes
 31933 ;; Hardware stack levels used:    1
 31934 ;; Hardware stack levels required when called:    1
 31935 ;; This function calls:
 31936 ;;		Absolute function
 31937 ;;		_UART1_Transmit_ISR
 31938 ;; This function is called by:
 31939 ;;		Interrupt level 2
 31940 ;; This function uses a non-reentrant model
 31941 ;;
 31942                           
 31943                           	psect	text217
 31944  0096E0                     __ptext217:
 31945                           	opt callstack 0
 31946  0096E0                     _UART1_tx_vect_isr:
 31947                           	opt callstack 11
 31948  0096E0                     
 31949                           ;mcc_generated_files/uart1.c: 249:     if(UART1_TxInterruptHandler)
 31950  0096E0  0101               	movlb	1	; () banked
 31951  0096E2  51F6               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 31952  0096E4  11F7               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 31953  0096E6  B4D8               	btfsc	status,2,c
 31954  0096E8  EF78  F04B         	goto	i2u1217_41
 31955  0096EC  EF7A  F04B         	goto	i2u1217_40
 31956  0096F0                     i2u1217_41:
 31957  0096F0  EF86  F04B         	goto	i2l1381
 31958  0096F4                     i2u1217_40:
 31959  0096F4                     
 31960                           ; BSR set to: 1
 31961                           ;mcc_generated_files/uart1.c: 250:     {;mcc_generated_files/uart1.c: 251:         UART1
      +                          _TxInterruptHandler();
 31962  0096F4  D802               	call	i2u1218_48
 31963  0096F6  EF86  F04B         	goto	i2u1218_49
 31964  0096FA                     i2u1218_48:
 31965  0096FA  0005               	push	
 31966  0096FC  6EFA               	movwf	pclath,c
 31967  0096FE  51F6               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 31968  009700  6EFD               	movwf	tosl,c
 31969  009702  51F7               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 31970  009704  6EFE               	movwf	tosh,c
 31971  009706  6AFF               	clrf	tosu,c
 31972  009708  50FA               	movf	pclath,w,c
 31973  00970A  0012               	return		;indir
 31974  00970C                     i2u1218_49:
 31975  00970C                     i2l1381:
 31976  00970C  0011               	retfie		f
 31977  00970E                     __end_of_UART1_tx_vect_isr:
 31978                           	opt callstack 0
 31979                           
 31980 ;; *************** function _UART1_Transmit_ISR *****************
 31981 ;; Defined at:
 31982 ;;		line 265 in file "mcc_generated_files/uart1.c"
 31983 ;; Parameters:    Size  Location     Type
 31984 ;;		None
 31985 ;; Auto vars:     Size  Location     Type
 31986 ;;		None
 31987 ;; Return value:  Size  Location     Type
 31988 ;;                  1    wreg      void 
 31989 ;; Registers used:
 31990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31991 ;; Tracked objects:
 31992 ;;		On entry : 0/0
 31993 ;;		On exit  : 0/0
 31994 ;;		Unchanged: 0/0
 31995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32000 ;;Total ram usage:        0 bytes
 32001 ;; Hardware stack levels used:    1
 32002 ;; This function calls:
 32003 ;;		Nothing
 32004 ;; This function is called by:
 32005 ;;		_UART1_Initialize
 32006 ;;		_UART1_tx_vect_isr
 32007 ;; This function uses a non-reentrant model
 32008 ;;
 32009                           
 32010                           	psect	text218
 32011  008DE0                     __ptext218:
 32012                           	opt callstack 0
 32013  008DE0                     _UART1_Transmit_ISR:
 32014                           	opt callstack 11
 32015  008DE0                     
 32016                           ;mcc_generated_files/uart1.c: 268:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 32017  008DE0  0E40               	movlw	64
 32018  008DE2  0101               	movlb	1	; () banked
 32019  008DE4  61FA               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
 32020  008DE6  EFF7  F046         	goto	i2u1177_41
 32021  008DEA  EFF9  F046         	goto	i2u1177_40
 32022  008DEE                     i2u1177_41:
 32023  008DEE  EF13  F047         	goto	i2l13021
 32024  008DF2                     i2u1177_40:
 32025  008DF2                     
 32026                           ; BSR set to: 1
 32027                           ;mcc_generated_files/uart1.c: 269:     {;mcc_generated_files/uart1.c: 273:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 32028  008DF2  0E00               	movlw	low _uart1TxBuffer
 32029  008DF4  0100               	movlb	0	; () banked
 32030  008DF6  25EE               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 32031  008DF8  6ED9               	movwf	fsr2l,c
 32032  008DFA  6ADA               	clrf	fsr2h,c
 32033  008DFC  0E03               	movlw	high _uart1TxBuffer
 32034  008DFE  22DA               	addwfc	fsr2h,f,c
 32035  008E00  50DF               	movf	indf2,w,c
 32036  008E02  013D               	movlb	61	; () banked
 32037  008E04  6FEA               	movwf	234,b	;volatile
 32038  008E06                     
 32039                           ; BSR set to: 61
 32040  008E06  0100               	movlb	0	; () banked
 32041  008E08  2BEE               	incf	_uart1TxTail& (0+255),f,b	;volatile
 32042  008E0A                     
 32043                           ; BSR set to: 0
 32044                           ;mcc_generated_files/uart1.c: 274:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 32045  008E0A  0E3F               	movlw	63
 32046  008E0C  65EE               	cpfsgt	_uart1TxTail& (0+255),b	;volatile
 32047  008E0E  EF0B  F047         	goto	i2u1178_41
 32048  008E12  EF0D  F047         	goto	i2u1178_40
 32049  008E16                     i2u1178_41:
 32050  008E16  EF0F  F047         	goto	i2l13019
 32051  008E1A                     i2u1178_40:
 32052  008E1A                     
 32053                           ; BSR set to: 0
 32054                           ;mcc_generated_files/uart1.c: 275:         {;mcc_generated_files/uart1.c: 276:          
      +                             uart1TxTail = 0;
 32055  008E1A  0E00               	movlw	0
 32056  008E1C  6FEE               	movwf	_uart1TxTail& (0+255),b	;volatile
 32057  008E1E                     i2l13019:
 32058                           
 32059                           ; BSR set to: 0
 32060                           ;mcc_generated_files/uart1.c: 278:         uart1TxBufferRemaining++;
 32061  008E1E  0101               	movlb	1	; () banked
 32062  008E20  2BFA               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 32063                           
 32064                           ;mcc_generated_files/uart1.c: 279:     }
 32065  008E22  EF17  F047         	goto	i2l1393
 32066  008E26                     i2l13021:
 32067                           
 32068                           ; BSR set to: 1
 32069                           ;mcc_generated_files/uart1.c: 281:     {;mcc_generated_files/uart1.c: 284:         tx_do
      +                          ne = 1;
 32070  008E26  0E01               	movlw	1
 32071  008E28  6F77               	movwf	_tx_done& (0+255),b	;volatile
 32072  008E2A                     
 32073                           ; BSR set to: 1
 32074                           ;mcc_generated_files/uart1.c: 286:         PIE3bits.U1TXIE = 0;
 32075  008E2A  0139               	movlb	57	; () banked
 32076  008E2C  9993               	bcf	147,4,b	;volatile
 32077  008E2E                     i2l1393:
 32078  008E2E  0012               	return		;funcret
 32079  008E30                     __end_of_UART1_Transmit_ISR:
 32080                           	opt callstack 0
 32081                           
 32082 ;; *************** function _UART1_rx_vect_isr *****************
 32083 ;; Defined at:
 32084 ;;		line 255 in file "mcc_generated_files/uart1.c"
 32085 ;; Parameters:    Size  Location     Type
 32086 ;;		None
 32087 ;; Auto vars:     Size  Location     Type
 32088 ;;		None
 32089 ;; Return value:  Size  Location     Type
 32090 ;;                  1    wreg      void 
 32091 ;; Registers used:
 32092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32093 ;; Tracked objects:
 32094 ;;		On entry : 0/0
 32095 ;;		On exit  : 0/0
 32096 ;;		Unchanged: 0/0
 32097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32102 ;;Total ram usage:        0 bytes
 32103 ;; Hardware stack levels used:    1
 32104 ;; Hardware stack levels required when called:    3
 32105 ;; This function calls:
 32106 ;;		Absolute function
 32107 ;;		_UART1_Receive_ISR
 32108 ;; This function is called by:
 32109 ;;		Interrupt level 2
 32110 ;; This function uses a non-reentrant model
 32111 ;;
 32112                           
 32113                           	psect	text219
 32114  009710                     __ptext219:
 32115                           	opt callstack 0
 32116  009710                     _UART1_rx_vect_isr:
 32117                           	opt callstack 9
 32118  009710                     
 32119                           ;mcc_generated_files/uart1.c: 257:     if(UART1_RxInterruptHandler)
 32120  009710  0101               	movlb	1	; () banked
 32121  009712  51F8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32122  009714  11F9               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32123  009716  B4D8               	btfsc	status,2,c
 32124  009718  EF90  F04B         	goto	i2u1219_41
 32125  00971C  EF92  F04B         	goto	i2u1219_40
 32126  009720                     i2u1219_41:
 32127  009720  EF9E  F04B         	goto	i2l1387
 32128  009724                     i2u1219_40:
 32129  009724                     
 32130                           ; BSR set to: 1
 32131                           ;mcc_generated_files/uart1.c: 258:     {;mcc_generated_files/uart1.c: 259:         UART1
      +                          _RxInterruptHandler();
 32132  009724  D802               	call	i2u1220_48
 32133  009726  EF9E  F04B         	goto	i2u1220_49
 32134  00972A                     i2u1220_48:
 32135  00972A  0005               	push	
 32136  00972C  6EFA               	movwf	pclath,c
 32137  00972E  51F8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32138  009730  6EFD               	movwf	tosl,c
 32139  009732  51F9               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32140  009734  6EFE               	movwf	tosh,c
 32141  009736  6AFF               	clrf	tosu,c
 32142  009738  50FA               	movf	pclath,w,c
 32143  00973A  0012               	return		;indir
 32144  00973C                     i2u1220_49:
 32145  00973C                     i2l1387:
 32146  00973C  0011               	retfie		f
 32147  00973E                     __end_of_UART1_rx_vect_isr:
 32148                           	opt callstack 0
 32149                           
 32150 ;; *************** function _UART1_Receive_ISR *****************
 32151 ;; Defined at:
 32152 ;;		line 292 in file "mcc_generated_files/uart1.c"
 32153 ;; Parameters:    Size  Location     Type
 32154 ;;		None
 32155 ;; Auto vars:     Size  Location     Type
 32156 ;;		None
 32157 ;; Return value:  Size  Location     Type
 32158 ;;                  1    wreg      void 
 32159 ;; Registers used:
 32160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32161 ;; Tracked objects:
 32162 ;;		On entry : 0/0
 32163 ;;		On exit  : 0/0
 32164 ;;		Unchanged: 0/0
 32165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32170 ;;Total ram usage:        0 bytes
 32171 ;; Hardware stack levels used:    1
 32172 ;; Hardware stack levels required when called:    2
 32173 ;; This function calls:
 32174 ;;		Absolute function
 32175 ;;		_UART1_DefaultErrorHandler
 32176 ;;		_UART1_DefaultFramingErrorHandler
 32177 ;;		_UART1_DefaultOverrunErrorHandler
 32178 ;;		_UART1_RxDataHandler
 32179 ;; This function is called by:
 32180 ;;		_UART1_Initialize
 32181 ;;		_UART1_rx_vect_isr
 32182 ;; This function uses a non-reentrant model
 32183 ;;
 32184                           
 32185                           	psect	text220
 32186  0075D2                     __ptext220:
 32187                           	opt callstack 0
 32188  0075D2                     _UART1_Receive_ISR:
 32189                           	opt callstack 9
 32190  0075D2                     
 32191                           ;mcc_generated_files/uart1.c: 295:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 32192  0075D2  0E3C               	movlw	low _uart1RxStatusBuffer
 32193  0075D4  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32194  0075D6  6ED9               	movwf	fsr2l,c
 32195  0075D8  6ADA               	clrf	fsr2h,c
 32196  0075DA  0E01               	movlw	high _uart1RxStatusBuffer
 32197  0075DC  22DA               	addwfc	fsr2h,f,c
 32198  0075DE  0E00               	movlw	0
 32199  0075E0  6EDF               	movwf	indf2,c
 32200  0075E2                     
 32201                           ;mcc_generated_files/uart1.c: 297:     if(U1ERRIRbits.FERIF){
 32202  0075E2  013D               	movlb	61	; () banked
 32203  0075E4  A7F9               	btfss	249,3,b	;volatile
 32204  0075E6  EFF7  F03A         	goto	i2u1179_41
 32205  0075EA  EFF9  F03A         	goto	i2u1179_40
 32206  0075EE                     i2u1179_41:
 32207  0075EE  EF0D  F03B         	goto	i2l13033
 32208  0075F2                     i2u1179_40:
 32209  0075F2                     
 32210                           ; BSR set to: 61
 32211                           ;mcc_generated_files/uart1.c: 298:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 32212  0075F2  0E3C               	movlw	low _uart1RxStatusBuffer
 32213  0075F4  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32214  0075F6  6ED9               	movwf	fsr2l,c
 32215  0075F8  6ADA               	clrf	fsr2h,c
 32216  0075FA  0E01               	movlw	high _uart1RxStatusBuffer
 32217  0075FC  22DA               	addwfc	fsr2h,f,c
 32218  0075FE  0101               	movlb	1	; () banked
 32219  007600  82DF               	bsf	indf2,1,c
 32220  007602                     
 32221                           ; BSR set to: 1
 32222                           ;mcc_generated_files/uart1.c: 299:         UART1_FramingErrorHandler();
 32223  007602  D802               	call	i2u1180_48
 32224  007604  EF0D  F03B         	goto	i2u1180_49
 32225  007608                     i2u1180_48:
 32226  007608  0005               	push	
 32227  00760A  6EFA               	movwf	pclath,c
 32228  00760C  51F0               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 32229  00760E  6EFD               	movwf	tosl,c
 32230  007610  51F1               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 32231  007612  6EFE               	movwf	tosh,c
 32232  007614  6AFF               	clrf	tosu,c
 32233  007616  50FA               	movf	pclath,w,c
 32234  007618  0012               	return		;indir
 32235  00761A                     i2u1180_49:
 32236  00761A                     i2l13033:
 32237                           
 32238                           ;mcc_generated_files/uart1.c: 302:     if(U1ERRIRbits.RXFOIF){
 32239  00761A  013D               	movlb	61	; () banked
 32240  00761C  A3F9               	btfss	249,1,b	;volatile
 32241  00761E  EF13  F03B         	goto	i2u1181_41
 32242  007622  EF15  F03B         	goto	i2u1181_40
 32243  007626                     i2u1181_41:
 32244  007626  EF29  F03B         	goto	i2l13039
 32245  00762A                     i2u1181_40:
 32246  00762A                     
 32247                           ; BSR set to: 61
 32248                           ;mcc_generated_files/uart1.c: 303:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 32249  00762A  0E3C               	movlw	low _uart1RxStatusBuffer
 32250  00762C  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32251  00762E  6ED9               	movwf	fsr2l,c
 32252  007630  6ADA               	clrf	fsr2h,c
 32253  007632  0E01               	movlw	high _uart1RxStatusBuffer
 32254  007634  22DA               	addwfc	fsr2h,f,c
 32255  007636  0101               	movlb	1	; () banked
 32256  007638  84DF               	bsf	indf2,2,c
 32257  00763A                     
 32258                           ; BSR set to: 1
 32259                           ;mcc_generated_files/uart1.c: 304:         UART1_OverrunErrorHandler();
 32260  00763A  D802               	call	i2u1182_48
 32261  00763C  EF29  F03B         	goto	i2u1182_49
 32262  007640                     i2u1182_48:
 32263  007640  0005               	push	
 32264  007642  6EFA               	movwf	pclath,c
 32265  007644  51EE               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 32266  007646  6EFD               	movwf	tosl,c
 32267  007648  51EF               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 32268  00764A  6EFE               	movwf	tosh,c
 32269  00764C  6AFF               	clrf	tosu,c
 32270  00764E  50FA               	movf	pclath,w,c
 32271  007650  0012               	return		;indir
 32272  007652                     i2u1182_49:
 32273  007652                     i2l13039:
 32274                           
 32275                           ;mcc_generated_files/uart1.c: 307:     if(uart1RxStatusBuffer[uart1RxHead].status){
 32276  007652  0E3C               	movlw	low _uart1RxStatusBuffer
 32277  007654  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32278  007656  6ED9               	movwf	fsr2l,c
 32279  007658  6ADA               	clrf	fsr2h,c
 32280  00765A  0E01               	movlw	high _uart1RxStatusBuffer
 32281  00765C  22DA               	addwfc	fsr2h,f,c
 32282  00765E  50DF               	movf	indf2,w,c
 32283  007660  B4D8               	btfsc	status,2,c
 32284  007662  EF35  F03B         	goto	i2u1183_41
 32285  007666  EF37  F03B         	goto	i2u1183_40
 32286  00766A                     i2u1183_41:
 32287  00766A  EF46  F03B         	goto	i2l13043
 32288  00766E                     i2u1183_40:
 32289  00766E                     
 32290                           ;mcc_generated_files/uart1.c: 308:         UART1_ErrorHandler();
 32291  00766E  D802               	call	i2u1184_48
 32292  007670  EF44  F03B         	goto	i2u1184_49
 32293  007674                     i2u1184_48:
 32294  007674  0005               	push	
 32295  007676  6EFA               	movwf	pclath,c
 32296  007678  0101               	movlb	1	; () banked
 32297  00767A  51EC               	movf	_UART1_ErrorHandler& (0+255),w,b
 32298  00767C  6EFD               	movwf	tosl,c
 32299  00767E  51ED               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 32300  007680  6EFE               	movwf	tosh,c
 32301  007682  6AFF               	clrf	tosu,c
 32302  007684  50FA               	movf	pclath,w,c
 32303  007686  0012               	return		;indir
 32304  007688                     i2u1184_49:
 32305                           
 32306                           ;mcc_generated_files/uart1.c: 309:     } else {
 32307  007688  EF48  F03B         	goto	i2l1400
 32308  00768C                     i2l13043:
 32309                           
 32310                           ;mcc_generated_files/uart1.c: 310:         UART1_RxDataHandler();
 32311  00768C  EC9F  F04B         	call	_UART1_RxDataHandler	;wreg free
 32312  007690                     i2l1400:
 32313  007690  0012               	return		;funcret
 32314  007692                     __end_of_UART1_Receive_ISR:
 32315                           	opt callstack 0
 32316                           
 32317 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 32318 ;; Defined at:
 32319 ;;		line 328 in file "mcc_generated_files/uart1.c"
 32320 ;; Parameters:    Size  Location     Type
 32321 ;;		None
 32322 ;; Auto vars:     Size  Location     Type
 32323 ;;		None
 32324 ;; Return value:  Size  Location     Type
 32325 ;;                  1    wreg      void 
 32326 ;; Registers used:
 32327 ;;		None
 32328 ;; Tracked objects:
 32329 ;;		On entry : 0/0
 32330 ;;		On exit  : 0/0
 32331 ;;		Unchanged: 0/0
 32332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32337 ;;Total ram usage:        0 bytes
 32338 ;; Hardware stack levels used:    1
 32339 ;; This function calls:
 32340 ;;		Nothing
 32341 ;; This function is called by:
 32342 ;;		_UART1_Initialize
 32343 ;;		_UART1_Receive_ISR
 32344 ;; This function uses a non-reentrant model
 32345 ;;
 32346                           
 32347                           	psect	text221
 32348  009D26                     __ptext221:
 32349                           	opt callstack 0
 32350  009D26                     _UART1_DefaultOverrunErrorHandler:
 32351                           	opt callstack 10
 32352  009D26  0012               	return		;funcret
 32353  009D28                     __end_of_UART1_DefaultOverrunErrorHandler:
 32354                           	opt callstack 0
 32355                           
 32356 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 32357 ;; Defined at:
 32358 ;;		line 326 in file "mcc_generated_files/uart1.c"
 32359 ;; Parameters:    Size  Location     Type
 32360 ;;		None
 32361 ;; Auto vars:     Size  Location     Type
 32362 ;;		None
 32363 ;; Return value:  Size  Location     Type
 32364 ;;                  1    wreg      void 
 32365 ;; Registers used:
 32366 ;;		None
 32367 ;; Tracked objects:
 32368 ;;		On entry : 0/0
 32369 ;;		On exit  : 0/0
 32370 ;;		Unchanged: 0/0
 32371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32376 ;;Total ram usage:        0 bytes
 32377 ;; Hardware stack levels used:    1
 32378 ;; This function calls:
 32379 ;;		Nothing
 32380 ;; This function is called by:
 32381 ;;		_UART1_Initialize
 32382 ;;		_UART1_Receive_ISR
 32383 ;; This function uses a non-reentrant model
 32384 ;;
 32385                           
 32386                           	psect	text222
 32387  009D28                     __ptext222:
 32388                           	opt callstack 0
 32389  009D28                     _UART1_DefaultFramingErrorHandler:
 32390                           	opt callstack 10
 32391  009D28  0012               	return		;funcret
 32392  009D2A                     __end_of_UART1_DefaultFramingErrorHandler:
 32393                           	opt callstack 0
 32394                           
 32395 ;; *************** function _UART1_DefaultErrorHandler *****************
 32396 ;; Defined at:
 32397 ;;		line 330 in file "mcc_generated_files/uart1.c"
 32398 ;; Parameters:    Size  Location     Type
 32399 ;;		None
 32400 ;; Auto vars:     Size  Location     Type
 32401 ;;		None
 32402 ;; Return value:  Size  Location     Type
 32403 ;;                  1    wreg      void 
 32404 ;; Registers used:
 32405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32406 ;; Tracked objects:
 32407 ;;		On entry : 0/0
 32408 ;;		On exit  : 0/0
 32409 ;;		Unchanged: 0/0
 32410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32415 ;;Total ram usage:        0 bytes
 32416 ;; Hardware stack levels used:    1
 32417 ;; Hardware stack levels required when called:    1
 32418 ;; This function calls:
 32419 ;;		_UART1_RxDataHandler
 32420 ;; This function is called by:
 32421 ;;		_UART1_Initialize
 32422 ;;		_UART1_Receive_ISR
 32423 ;; This function uses a non-reentrant model
 32424 ;;
 32425                           
 32426                           	psect	text223
 32427  009D08                     __ptext223:
 32428                           	opt callstack 0
 32429  009D08                     _UART1_DefaultErrorHandler:
 32430                           	opt callstack 9
 32431  009D08                     
 32432                           ;mcc_generated_files/uart1.c: 331:     UART1_RxDataHandler();
 32433  009D08  EC9F  F04B         	call	_UART1_RxDataHandler	;wreg free
 32434  009D0C  0012               	return		;funcret
 32435  009D0E                     __end_of_UART1_DefaultErrorHandler:
 32436                           	opt callstack 0
 32437                           
 32438 ;; *************** function _UART1_RxDataHandler *****************
 32439 ;; Defined at:
 32440 ;;		line 316 in file "mcc_generated_files/uart1.c"
 32441 ;; Parameters:    Size  Location     Type
 32442 ;;		None
 32443 ;; Auto vars:     Size  Location     Type
 32444 ;;		None
 32445 ;; Return value:  Size  Location     Type
 32446 ;;                  1    wreg      void 
 32447 ;; Registers used:
 32448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32449 ;; Tracked objects:
 32450 ;;		On entry : 0/0
 32451 ;;		On exit  : 0/0
 32452 ;;		Unchanged: 0/0
 32453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32458 ;;Total ram usage:        0 bytes
 32459 ;; Hardware stack levels used:    1
 32460 ;; This function calls:
 32461 ;;		Nothing
 32462 ;; This function is called by:
 32463 ;;		_UART1_Receive_ISR
 32464 ;;		_UART1_DefaultErrorHandler
 32465 ;; This function uses a non-reentrant model
 32466 ;;
 32467                           
 32468                           	psect	text224
 32469  00973E                     __ptext224:
 32470                           	opt callstack 0
 32471  00973E                     _UART1_RxDataHandler:
 32472                           	opt callstack 10
 32473  00973E                     
 32474                           ;mcc_generated_files/uart1.c: 318:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 32475  00973E  0E00               	movlw	low _uart1RxBuffer
 32476  009740  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32477  009742  6ED9               	movwf	fsr2l,c
 32478  009744  6ADA               	clrf	fsr2h,c
 32479  009746  0E02               	movlw	high _uart1RxBuffer
 32480  009748  22DA               	addwfc	fsr2h,f,c
 32481  00974A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 32482  009750  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 32483  009752                     
 32484                           ;mcc_generated_files/uart1.c: 319:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 32485  009752  0E0F               	movlw	15
 32486  009754  645E               	cpfsgt	_uart1RxHead^0,c	;volatile
 32487  009756  EFAF  F04B         	goto	i2u1047_41
 32488  00975A  EFB1  F04B         	goto	i2u1047_40
 32489  00975E                     i2u1047_41:
 32490  00975E  EFB3  F04B         	goto	i2l11971
 32491  009762                     i2u1047_40:
 32492  009762                     
 32493                           ;mcc_generated_files/uart1.c: 320:     {;mcc_generated_files/uart1.c: 321:         uart1
      +                          RxHead = 0;
 32494  009762  0E00               	movlw	0
 32495  009764  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 32496  009766                     i2l11971:
 32497                           
 32498                           ;mcc_generated_files/uart1.c: 323:     uart1RxCount++;
 32499  009766  0100               	movlb	0	; () banked
 32500  009768  2BEC               	incf	_uart1RxCount& (0+255),f,b	;volatile
 32501  00976A                     
 32502                           ; BSR set to: 0
 32503  00976A  0012               	return		;funcret
 32504  00976C                     __end_of_UART1_RxDataHandler:
 32505                           	opt callstack 0
 32506                           
 32507                           ;
 32508                           ; Interrupt Vector Table @ 0x8
 32509                           ;
 32510                           
 32511                           	psect	ivt0x8
 32512  000008                     __pivt0x8:
 32513                           	opt callstack 0
 32514  000008                     ivt0x8_base:
 32515                           	opt callstack 0
 32516                           
 32517                           ; Vector 0 : SWINT
 32518  000008  2749               	dw	_Default_ISR shr (0+2)
 32519                           
 32520                           ; Vector 1 : HLVD
 32521  00000A  2749               	dw	_Default_ISR shr (0+2)
 32522                           
 32523                           ; Vector 2 : OSF
 32524  00000C  2749               	dw	_Default_ISR shr (0+2)
 32525                           
 32526                           ; Vector 3 : CSW
 32527  00000E  2749               	dw	_Default_ISR shr (0+2)
 32528                           
 32529                           ; Vector 4 : NVM
 32530  000010  2749               	dw	_Default_ISR shr (0+2)
 32531                           
 32532                           ; Vector 5 : SCAN
 32533  000012  2749               	dw	_Default_ISR shr (0+2)
 32534                           
 32535                           ; Vector 6 : CRC
 32536  000014  2749               	dw	_Default_ISR shr (0+2)
 32537                           
 32538                           ; Vector 7 : IOC
 32539  000016  2749               	dw	_Default_ISR shr (0+2)
 32540                           
 32541                           ; Vector 8 : INT0
 32542  000018  2749               	dw	_Default_ISR shr (0+2)
 32543                           
 32544                           ; Vector 9 : ZCD
 32545  00001A  2749               	dw	_Default_ISR shr (0+2)
 32546                           
 32547                           ; Vector 10 : AD
 32548  00001C  2749               	dw	_Default_ISR shr (0+2)
 32549                           
 32550                           ; Vector 11 : ADT
 32551  00001E  2749               	dw	_Default_ISR shr (0+2)
 32552                           
 32553                           ; Vector 12 : CMP1
 32554  000020  2749               	dw	_Default_ISR shr (0+2)
 32555                           
 32556                           ; Vector 13 : SMT1
 32557  000022  2749               	dw	_Default_ISR shr (0+2)
 32558                           
 32559                           ; Vector 14 : SMT1PRA
 32560  000024  2749               	dw	_Default_ISR shr (0+2)
 32561                           
 32562                           ; Vector 15 : SMT1PRW
 32563  000026  2749               	dw	_Default_ISR shr (0+2)
 32564                           
 32565                           ; Vector 16 : DMA1SCNT
 32566  000028  2749               	dw	_Default_ISR shr (0+2)
 32567                           
 32568                           ; Vector 17 : DMA1DCNT
 32569  00002A  2749               	dw	_Default_ISR shr (0+2)
 32570                           
 32571                           ; Vector 18 : DMA1OR
 32572  00002C  2749               	dw	_Default_ISR shr (0+2)
 32573                           
 32574                           ; Vector 19 : DMA1A
 32575  00002E  2749               	dw	_Default_ISR shr (0+2)
 32576                           
 32577                           ; Vector 20 : SPI1RX
 32578  000030  2749               	dw	_Default_ISR shr (0+2)
 32579                           
 32580                           ; Vector 21 : SPI1TX
 32581  000032  2749               	dw	_Default_ISR shr (0+2)
 32582                           
 32583                           ; Vector 22 : SPI1
 32584  000034  2749               	dw	_Default_ISR shr (0+2)
 32585                           
 32586                           ; Vector 23 : I2C1RX
 32587  000036  2749               	dw	_Default_ISR shr (0+2)
 32588                           
 32589                           ; Vector 24 : I2C1TX
 32590  000038  2749               	dw	_Default_ISR shr (0+2)
 32591                           
 32592                           ; Vector 25 : I2C1
 32593  00003A  2749               	dw	_Default_ISR shr (0+2)
 32594                           
 32595                           ; Vector 26 : I2C1E
 32596  00003C  2749               	dw	_Default_ISR shr (0+2)
 32597                           
 32598                           ; Vector 27 : U1RX
 32599  00003E  25C4               	dw	_UART1_rx_vect_isr shr (0+2)
 32600                           
 32601                           ; Vector 28 : U1TX
 32602  000040  25B8               	dw	_UART1_tx_vect_isr shr (0+2)
 32603                           
 32604                           ; Vector 29 : U1E
 32605  000042  2749               	dw	_Default_ISR shr (0+2)
 32606                           
 32607                           ; Vector 30 : U1
 32608  000044  2749               	dw	_Default_ISR shr (0+2)
 32609                           
 32610                           ; Vector 31 : TMR0
 32611  000046  2646               	dw	_TMR0_ISR shr (0+2)
 32612                           
 32613                           ; Vector 32 : TMR1
 32614  000048  2749               	dw	_Default_ISR shr (0+2)
 32615                           
 32616                           ; Vector 33 : TMR1G
 32617  00004A  2749               	dw	_Default_ISR shr (0+2)
 32618                           
 32619                           ; Vector 34 : TMR2
 32620  00004C  2749               	dw	_Default_ISR shr (0+2)
 32621                           
 32622                           ; Vector 35 : CCP1
 32623  00004E  2749               	dw	_Default_ISR shr (0+2)
 32624                           
 32625                           ; Vector 36 : Undefined
 32626  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 32627                           
 32628                           ; Vector 37 : NCO1
 32629  000052  2749               	dw	_Default_ISR shr (0+2)
 32630                           
 32631                           ; Vector 38 : CWG1
 32632  000054  2749               	dw	_Default_ISR shr (0+2)
 32633                           
 32634                           ; Vector 39 : CLC1
 32635  000056  2749               	dw	_Default_ISR shr (0+2)
 32636                           
 32637                           ; Vector 40 : INT1
 32638  000058  2749               	dw	_Default_ISR shr (0+2)
 32639                           
 32640                           ; Vector 41 : CMP2
 32641  00005A  2749               	dw	_Default_ISR shr (0+2)
 32642                           
 32643                           ; Vector 42 : DMA2SCNT
 32644  00005C  2749               	dw	_Default_ISR shr (0+2)
 32645                           
 32646                           ; Vector 43 : DMA2DCNT
 32647  00005E  2749               	dw	_Default_ISR shr (0+2)
 32648                           
 32649                           ; Vector 44 : DMA2OR
 32650  000060  2749               	dw	_Default_ISR shr (0+2)
 32651                           
 32652                           ; Vector 45 : DMA2A
 32653  000062  2749               	dw	_Default_ISR shr (0+2)
 32654                           
 32655                           ; Vector 46 : I2C2RX
 32656  000064  2749               	dw	_Default_ISR shr (0+2)
 32657                           
 32658                           ; Vector 47 : I2C2TX
 32659  000066  2749               	dw	_Default_ISR shr (0+2)
 32660                           
 32661                           ; Vector 48 : I2C2
 32662  000068  2749               	dw	_Default_ISR shr (0+2)
 32663                           
 32664                           ; Vector 49 : I2C2E
 32665  00006A  2749               	dw	_Default_ISR shr (0+2)
 32666                           
 32667                           ; Vector 50 : U2RX
 32668  00006C  2749               	dw	_Default_ISR shr (0+2)
 32669                           
 32670                           ; Vector 51 : U2TX
 32671  00006E  2749               	dw	_Default_ISR shr (0+2)
 32672                           
 32673                           ; Vector 52 : U2E
 32674  000070  2749               	dw	_Default_ISR shr (0+2)
 32675                           
 32676                           ; Vector 53 : U2
 32677  000072  2749               	dw	_Default_ISR shr (0+2)
 32678                           
 32679                           ; Vector 54 : TMR3
 32680  000074  2749               	dw	_Default_ISR shr (0+2)
 32681                           
 32682                           ; Vector 55 : TMR3G
 32683  000076  2749               	dw	_Default_ISR shr (0+2)
 32684                           
 32685                           ; Vector 56 : TMR4
 32686  000078  2749               	dw	_Default_ISR shr (0+2)
 32687                           
 32688                           ; Vector 57 : CCP2
 32689  00007A  2749               	dw	_Default_ISR shr (0+2)
 32690                           
 32691                           ; Vector 58 : Undefined
 32692  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 32693                           
 32694                           ; Vector 59 : CWG2
 32695  00007E  2749               	dw	_Default_ISR shr (0+2)
 32696                           
 32697                           ; Vector 60 : CLC2
 32698  000080  2749               	dw	_Default_ISR shr (0+2)
 32699                           
 32700                           ; Vector 61 : INT2
 32701  000082  2749               	dw	_Default_ISR shr (0+2)
 32702                           
 32703                           ; Vector 62 : Undefined
 32704  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 32705                           
 32706                           ; Vector 63 : Undefined
 32707  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 32708                           
 32709                           ; Vector 64 : Undefined
 32710  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 32711                           
 32712                           ; Vector 65 : Undefined
 32713  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 32714                           
 32715                           ; Vector 66 : Undefined
 32716  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 32717                           
 32718                           ; Vector 67 : Undefined
 32719  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 32720                           
 32721                           ; Vector 68 : Undefined
 32722  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 32723                           
 32724                           ; Vector 69 : Undefined
 32725  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 32726                           
 32727                           ; Vector 70 : TMR5
 32728  000094  2749               	dw	_Default_ISR shr (0+2)
 32729                           
 32730                           ; Vector 71 : TMR5G
 32731  000096  2749               	dw	_Default_ISR shr (0+2)
 32732                           
 32733                           ; Vector 72 : TMR6
 32734  000098  2749               	dw	_Default_ISR shr (0+2)
 32735                           
 32736                           ; Vector 73 : CCP3
 32737  00009A  2749               	dw	_Default_ISR shr (0+2)
 32738                           
 32739                           ; Vector 74 : CWG3
 32740  00009C  2749               	dw	_Default_ISR shr (0+2)
 32741                           
 32742                           ; Vector 75 : CLC3
 32743  00009E  2749               	dw	_Default_ISR shr (0+2)
 32744                           
 32745                           ; Vector 76 : Undefined
 32746  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 32747                           
 32748                           ; Vector 77 : Undefined
 32749  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 32750                           
 32751                           ; Vector 78 : Undefined
 32752  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 32753                           
 32754                           ; Vector 79 : Undefined
 32755  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 32756                           
 32757                           ; Vector 80 : CCP4
 32758  0000A8  2749               	dw	_Default_ISR shr (0+2)
 32759                           
 32760                           ; Vector 81 : CLC4
 32761  0000AA  2749               	dw	_Default_ISR shr (0+2)
 32762  0000AC                     ivt0x8_undefint:
 32763                           	opt callstack 0
 32764  0000AC  00FF               	reset	
 32765                           
 32766                           	psect	text225
 32767  000000                     __ptext225:
 32768                           	opt callstack 0
 32769  000000                     
 32770                           	psect	rparam
 32771  0000                     tosu	equ	0x3FFF
 32772                           tosh	equ	0x3FFE
 32773                           tosl	equ	0x3FFD
 32774                           stkptr	equ	0x3FFC
 32775                           pclatu	equ	0x3FFB
 32776                           pclath	equ	0x3FFA
 32777                           pcl	equ	0x3FF9
 32778                           tblptru	equ	0x3FF8
 32779                           tblptrh	equ	0x3FF7
 32780                           tblptrl	equ	0x3FF6
 32781                           tablat	equ	0x3FF5
 32782                           prodh	equ	0x3FF4
 32783                           prodl	equ	0x3FF3
 32784                           indf0	equ	0x3FEF
 32785                           postinc0	equ	0x3FEE
 32786                           postdec0	equ	0x3FED
 32787                           preinc0	equ	0x3FEC
 32788                           plusw0	equ	0x3FEB
 32789                           fsr0h	equ	0x3FEA
 32790                           fsr0l	equ	0x3FE9
 32791                           wreg	equ	0x3FE8
 32792                           indf1	equ	0x3FE7
 32793                           postinc1	equ	0x3FE6
 32794                           postdec1	equ	0x3FE5
 32795                           preinc1	equ	0x3FE4
 32796                           plusw1	equ	0x3FE3
 32797                           fsr1h	equ	0x3FE2
 32798                           fsr1l	equ	0x3FE1
 32799                           bsr	equ	0x3FE0
 32800                           indf2	equ	0x3FDF
 32801                           postinc2	equ	0x3FDE
 32802                           postdec2	equ	0x3FDD
 32803                           preinc2	equ	0x3FDC
 32804                           plusw2	equ	0x3FDB
 32805                           fsr2h	equ	0x3FDA
 32806                           fsr2l	equ	0x3FD9
 32807                           status	equ	0x3FD8


Data Sizes:
    Strings     552
    Constant    270
    Data        30
    BSS         1688
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    130     159
    BANK1           256      2     253
    BANK2           256      0     240
    BANK3           256      0     210
    BANK4           256      0     128
    BANK5           256      0     189
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReq.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReq.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReq.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReq.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    nwkDataReq.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReq.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReq.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    handler$0	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    S4306$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    S115$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S2480$4$0	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S133$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    cmdSetTX@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdGetRxCnt@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetRFCH@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetNaddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    set_hop_table_ttl@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetTTL@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAES@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    print_hop_table@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSendSink@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_53(CODE[2]), STR_52(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_127(CODE[10]), STR_125(CODE[10]), STR_123(CODE[6]), STR_121(CODE[6]), 
		 -> STR_119(CODE[7]), STR_117(CODE[5]), STR_115(CODE[7]), STR_113(CODE[7]), 
		 -> STR_111(CODE[6]), STR_109(CODE[9]), STR_107(CODE[8]), STR_105(CODE[8]), 
		 -> STR_103(CODE[7]), STR_101(CODE[6]), STR_99(CODE[3]), STR_97(CODE[9]), 
		 -> STR_95(CODE[7]), STR_93(CODE[7]), STR_91(CODE[10]), STR_89(CODE[10]), 
		 -> STR_87(CODE[15]), STR_85(CODE[13]), STR_83(CODE[9]), STR_81(CODE[7]), 
		 -> STR_79(CODE[7]), STR_77(CODE[10]), STR_75(CODE[7]), STR_73(CODE[8]), 
		 -> STR_71(CODE[11]), STR_69(CODE[5]), STR_67(CODE[5]), STR_65(CODE[7]), 
		 -> STR_63(CODE[9]), STR_61(CODE[7]), STR_55(CODE[2]), STR_49(CODE[6]), 
		 -> STR_47(CODE[6]), STR_45(CODE[5]), STR_41(CODE[2]), STR_36(CODE[2]), 
		 -> STR_32(CODE[2]), STR_23(CODE[2]), STR_20(CODE[2]), STR_14(CODE[2]), 
		 -> STR_10(CODE[2]), STR_6(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_127(CODE[10]), STR_125(CODE[10]), STR_123(CODE[6]), STR_121(CODE[6]), 
		 -> STR_119(CODE[7]), STR_117(CODE[5]), STR_115(CODE[7]), STR_113(CODE[7]), 
		 -> STR_111(CODE[6]), STR_109(CODE[9]), STR_107(CODE[8]), STR_105(CODE[8]), 
		 -> STR_103(CODE[7]), STR_101(CODE[6]), STR_99(CODE[3]), STR_97(CODE[9]), 
		 -> STR_95(CODE[7]), STR_93(CODE[7]), STR_91(CODE[10]), STR_89(CODE[10]), 
		 -> STR_87(CODE[15]), STR_85(CODE[13]), STR_83(CODE[9]), STR_81(CODE[7]), 
		 -> STR_79(CODE[7]), STR_77(CODE[10]), STR_75(CODE[7]), STR_73(CODE[8]), 
		 -> STR_71(CODE[11]), STR_69(CODE[5]), STR_67(CODE[5]), STR_65(CODE[7]), 
		 -> STR_63(CODE[9]), STR_61(CODE[7]), STR_55(CODE[2]), STR_49(CODE[6]), 
		 -> STR_47(CODE[6]), STR_45(CODE[5]), STR_41(CODE[2]), STR_36(CODE[2]), 
		 -> STR_32(CODE[2]), STR_23(CODE[2]), STR_20(CODE[2]), STR_14(CODE[2]), 
		 -> STR_10(CODE[2]), STR_6(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_53(CODE[2]), STR_52(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), 
		 -> cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), cmdSend@p2(BANK0[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtoul@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), 
		 -> cmdSend@p2(BANK0[2]), 

    strtoul@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 3
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_53(CODE[2]), STR_52(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_127(CODE[10]), STR_125(CODE[10]), STR_123(CODE[6]), STR_121(CODE[6]), 
		 -> STR_119(CODE[7]), STR_117(CODE[5]), STR_115(CODE[7]), STR_113(CODE[7]), 
		 -> STR_111(CODE[6]), STR_109(CODE[9]), STR_107(CODE[8]), STR_105(CODE[8]), 
		 -> STR_103(CODE[7]), STR_101(CODE[6]), STR_99(CODE[3]), STR_97(CODE[9]), 
		 -> STR_95(CODE[7]), STR_93(CODE[7]), STR_91(CODE[10]), STR_89(CODE[10]), 
		 -> STR_87(CODE[15]), STR_85(CODE[13]), STR_83(CODE[9]), STR_81(CODE[7]), 
		 -> STR_79(CODE[7]), STR_77(CODE[10]), STR_75(CODE[7]), STR_73(CODE[8]), 
		 -> STR_71(CODE[11]), STR_69(CODE[5]), STR_67(CODE[5]), STR_65(CODE[7]), 
		 -> STR_63(CODE[9]), STR_61(CODE[7]), STR_55(CODE[2]), STR_49(CODE[6]), 
		 -> STR_47(CODE[6]), STR_45(CODE[5]), STR_41(CODE[2]), STR_36(CODE[2]), 
		 -> STR_32(CODE[2]), STR_23(CODE[2]), STR_20(CODE[2]), STR_14(CODE[2]), 
		 -> STR_10(CODE[2]), STR_6(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), STR_127(CODE[10]), 
		 -> STR_125(CODE[10]), STR_123(CODE[6]), STR_121(CODE[6]), STR_119(CODE[7]), 
		 -> STR_117(CODE[5]), STR_115(CODE[7]), STR_113(CODE[7]), STR_111(CODE[6]), 
		 -> STR_109(CODE[9]), STR_107(CODE[8]), STR_105(CODE[8]), STR_103(CODE[7]), 
		 -> STR_101(CODE[6]), STR_99(CODE[3]), STR_97(CODE[9]), STR_95(CODE[7]), 
		 -> STR_93(CODE[7]), STR_91(CODE[10]), STR_89(CODE[10]), STR_87(CODE[15]), 
		 -> STR_85(CODE[13]), STR_83(CODE[9]), STR_81(CODE[7]), STR_79(CODE[7]), 
		 -> STR_77(CODE[10]), STR_75(CODE[7]), STR_73(CODE[8]), STR_71(CODE[11]), 
		 -> STR_69(CODE[5]), STR_67(CODE[5]), STR_65(CODE[7]), STR_63(CODE[9]), 
		 -> STR_61(CODE[7]), STR_55(CODE[2]), STR_53(CODE[2]), STR_52(CODE[2]), 
		 -> STR_49(CODE[6]), STR_47(CODE[6]), STR_45(CODE[5]), STR_41(CODE[2]), 
		 -> STR_36(CODE[2]), STR_32(CODE[2]), STR_23(CODE[2]), STR_20(CODE[2]), 
		 -> STR_14(CODE[2]), STR_10(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_6(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), STR_127(CODE[10]), 
		 -> STR_125(CODE[10]), STR_123(CODE[6]), STR_121(CODE[6]), STR_119(CODE[7]), 
		 -> STR_117(CODE[5]), STR_115(CODE[7]), STR_113(CODE[7]), STR_111(CODE[6]), 
		 -> STR_109(CODE[9]), STR_107(CODE[8]), STR_105(CODE[8]), STR_103(CODE[7]), 
		 -> STR_101(CODE[6]), STR_99(CODE[3]), STR_97(CODE[9]), STR_95(CODE[7]), 
		 -> STR_93(CODE[7]), STR_91(CODE[10]), STR_89(CODE[10]), STR_87(CODE[15]), 
		 -> STR_85(CODE[13]), STR_83(CODE[9]), STR_81(CODE[7]), STR_79(CODE[7]), 
		 -> STR_77(CODE[10]), STR_75(CODE[7]), STR_73(CODE[8]), STR_71(CODE[11]), 
		 -> STR_69(CODE[5]), STR_67(CODE[5]), STR_65(CODE[7]), STR_63(CODE[9]), 
		 -> STR_61(CODE[7]), STR_55(CODE[2]), STR_53(CODE[2]), STR_52(CODE[2]), 
		 -> STR_49(CODE[6]), STR_47(CODE[6]), STR_45(CODE[5]), STR_41(CODE[2]), 
		 -> STR_36(CODE[2]), STR_32(CODE[2]), STR_23(CODE[2]), STR_20(CODE[2]), 
		 -> STR_14(CODE[2]), STR_10(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_6(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_133(CODE[5]), STR_132(CODE[8]), STR_131(CODE[28]), STR_130(CODE[26]), 
		 -> STR_129(CODE[12]), STR_128(CODE[12]), STR_59(CODE[5]), STR_58(CODE[12]), 
		 -> STR_57(CODE[5]), STR_56(CODE[12]), STR_54(CODE[8]), STR_51(CODE[5]), 
		 -> STR_50(CODE[12]), STR_43(CODE[5]), STR_42(CODE[12]), STR_40(CODE[13]), 
		 -> STR_39(CODE[5]), STR_38(CODE[12]), STR_37(CODE[12]), STR_35(CODE[14]), 
		 -> STR_34(CODE[5]), STR_33(CODE[12]), STR_31(CODE[13]), STR_30(CODE[18]), 
		 -> STR_29(CODE[18]), STR_28(CODE[5]), STR_27(CODE[21]), STR_26(CODE[5]), 
		 -> STR_25(CODE[12]), STR_24(CODE[12]), STR_22(CODE[12]), STR_21(CODE[12]), 
		 -> STR_19(CODE[5]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[13]), STR_12(CODE[12]), STR_11(CODE[5]), 
		 -> STR_9(CODE[16]), STR_8(CODE[8]), STR_7(CODE[12]), STR_5(CODE[8]), 
		 -> STR_4(CODE[12]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S7466_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), cmdBcast@msgstr(BANK0[64]), 
		 -> cmdSend@msgstr(BANK0[64]), appDataInd@data(BANK0[65]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), cmdBcast@msgstr(BANK0[64]), 
		 -> cmdSend@msgstr(BANK0[64]), appDataInd@data(BANK0[65]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK3[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), cmdBcast@msgstr(BANK0[64]), NULL(NULL[0]), 
		 -> cmdSend@msgstr(BANK0[64]), cmdSend@destaddr(BANK0[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK3[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), cmdBcast@msgstr(BANK0[64]), NULL(NULL[0]), 
		 -> cmdSend@msgstr(BANK0[64]), cmdSend@destaddr(BANK0[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> phyRxBuffer(BANK4[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK3[96]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), cmdBcast@msgstr(BANK0[64]), NULL(NULL[0]), cmdSend@msgstr(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> phyRxBuffer(BANK4[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK3[96]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), cmdBcast@msgstr(BANK0[64]), NULL(NULL[0]), cmdSend@msgstr(BANK0[64]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_133(CODE[5]), STR_132(CODE[8]), STR_131(CODE[28]), STR_130(CODE[26]), 
		 -> STR_129(CODE[12]), STR_128(CODE[12]), STR_59(CODE[5]), STR_58(CODE[12]), 
		 -> STR_57(CODE[5]), STR_56(CODE[12]), STR_54(CODE[8]), STR_51(CODE[5]), 
		 -> STR_50(CODE[12]), STR_43(CODE[5]), STR_42(CODE[12]), STR_40(CODE[13]), 
		 -> STR_39(CODE[5]), STR_38(CODE[12]), STR_37(CODE[12]), STR_35(CODE[14]), 
		 -> STR_34(CODE[5]), STR_33(CODE[12]), STR_31(CODE[13]), STR_30(CODE[18]), 
		 -> STR_29(CODE[18]), STR_28(CODE[5]), STR_27(CODE[21]), STR_26(CODE[5]), 
		 -> STR_25(CODE[12]), STR_24(CODE[12]), STR_22(CODE[12]), STR_21(CODE[12]), 
		 -> STR_19(CODE[5]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[13]), STR_12(CODE[12]), STR_11(CODE[5]), 
		 -> STR_9(CODE[16]), STR_8(CODE[8]), STR_7(CODE[12]), STR_5(CODE[8]), 
		 -> STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_133(CODE[5]), STR_132(CODE[8]), STR_131(CODE[28]), STR_130(CODE[26]), 
		 -> STR_129(CODE[12]), STR_128(CODE[12]), STR_59(CODE[5]), STR_58(CODE[12]), 
		 -> STR_57(CODE[5]), STR_56(CODE[12]), STR_54(CODE[8]), STR_51(CODE[5]), 
		 -> STR_50(CODE[12]), STR_43(CODE[5]), STR_42(CODE[12]), STR_40(CODE[13]), 
		 -> STR_39(CODE[5]), STR_38(CODE[12]), STR_37(CODE[12]), STR_35(CODE[14]), 
		 -> STR_34(CODE[5]), STR_33(CODE[12]), STR_31(CODE[13]), STR_30(CODE[18]), 
		 -> STR_29(CODE[18]), STR_28(CODE[5]), STR_27(CODE[21]), STR_26(CODE[5]), 
		 -> STR_25(CODE[12]), STR_24(CODE[12]), STR_22(CODE[12]), STR_21(CODE[12]), 
		 -> STR_19(CODE[5]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[13]), STR_12(CODE[12]), STR_11(CODE[5]), 
		 -> STR_9(CODE[16]), STR_8(CODE[8]), STR_7(CODE[12]), STR_5(CODE[8]), 
		 -> STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_133(CODE[5]), STR_132(CODE[8]), STR_131(CODE[28]), STR_130(CODE[26]), 
		 -> STR_129(CODE[12]), STR_128(CODE[12]), STR_59(CODE[5]), STR_58(CODE[12]), 
		 -> STR_57(CODE[5]), STR_56(CODE[12]), STR_54(CODE[8]), STR_51(CODE[5]), 
		 -> STR_50(CODE[12]), STR_43(CODE[5]), STR_42(CODE[12]), STR_40(CODE[13]), 
		 -> STR_39(CODE[5]), STR_38(CODE[12]), STR_37(CODE[12]), STR_35(CODE[14]), 
		 -> STR_34(CODE[5]), STR_33(CODE[12]), STR_31(CODE[13]), STR_30(CODE[18]), 
		 -> STR_29(CODE[18]), STR_28(CODE[5]), STR_27(CODE[21]), STR_26(CODE[5]), 
		 -> STR_25(CODE[12]), STR_24(CODE[12]), STR_22(CODE[12]), STR_21(CODE[12]), 
		 -> STR_19(CODE[5]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[13]), STR_12(CODE[12]), STR_11(CODE[5]), 
		 -> STR_9(CODE[16]), STR_8(CODE[8]), STR_7(CODE[12]), STR_5(CODE[8]), 
		 -> STR_4(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), appDataInd@data(BANK0[65]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), appDataInd@data(BANK0[65]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), appDataInd@data(BANK0[65]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    nwkFrame@nwkFramePayloadSize@frame_6767...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6767.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6371...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6371.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK4[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK4[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5285...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5285.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5063...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5063.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S4338PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK4[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK4[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(2) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S4306SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S4306SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4442...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4442.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4442	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4207...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4207.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3652...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3652.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3228...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3228.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> nwkDataReq(BANK1[19]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkFrame@nwkFramePayloadSize@frame_2782...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2782.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appDataInd(), 

    S2480NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkFrame@nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK4[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK4[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK0[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    get_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK0[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    crc16_app@dptr	PTR void  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    CircularBufferPushBack@val	PTR void  size(2) Largest target is 3
		 -> queueLedEvent@temp(COMRAM[3]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    S847$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK3[96]), 

    executeATCommand@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetSF@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetBaud@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetBaud@ptr	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetParity@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetCADRSSI@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetTX@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetTX@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetRFCH@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetRFCH@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAES@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetAES@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetNaddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdBcast@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdBcast@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_53(CODE[2]), STR_52(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK3[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), cmdBcast@msgstr(BANK0[64]), NULL(NULL[0]), 
		 -> cmdSend@msgstr(BANK0[64]), cmdSend@destaddr(BANK0[5]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSend@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[2]), STR_52(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), cmdBcast@msgstr(BANK0[64]), 
		 -> cmdSend@msgstr(BANK0[64]), appDataInd@data(BANK0[65]), 

    S160NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    S133NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S133NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    nwkDataReq.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdBcast@msgstr(BANK0[64]), cmdSend@msgstr(BANK0[64]), 

    S133NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S133NWK_DataReq_t$next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    nwkDataReq.next	PTR void  size(2) Largest target is 22
		 -> NULL(NULL[0]), nwkDataReq(BANK1[19]), 

    S115$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S114NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _queue_serial_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _CircularBufferPushBack->_memcpy
    _executeATCommand->_cmdBootLoad
    _executeATCommand->_cmdMac
    _executeATCommand->_cmdSetAES
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _setSyncWord->_SX1276Write
    _cmdSetCADRSSI->_printf
    _strtol->___strtoxl
    _cmdSetBaud->_strtoul
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _strtoul->___strtoxl
    ___strtoxl->_toupper
    _cmdRstCAD->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _strstr->_strncmp
    _cmdAddr->_printf
    _bootLoadApplication->_PHY_SetChannel
    _loadMACAddr->_DIA_ReadByte
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_initRadio
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_PHY_DataInd
    _PHY_DataInd->_memcpy
    _PHY_DataInd->_nwkFrameAlloc
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxSendAck->_nwkTxFrame
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appDataInd->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _memcpy->___wmul
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _processATCommand->_executeATCommand
    _executeATCommand->_cmdSend
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _cmdSetCADRSSI->_printf
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _cmdRstCAD->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _cmdAddr->_printf
    _NWK_TaskHandler->_nwkRxTaskHandler
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxIndicateFrame->_appDataInd
    _appDataInd->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _NWK_TaskHandler->_nwkRxTaskHandler

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 2454629
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                _bootLoadApplication
                   _processATCommand
 ---------------------------------------------------------------------------------
 (1) _processATCommand                                     4     4      0 1966301
                                            112 BANK0      4     4      0
                         _UART1_Read
                  _UART1_is_rx_ready
                   _executeATCommand
                     _get_timer0base
                             _memset
             _queue_serial_led_event
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _queue_serial_led_event                               1     1      0   10028
                                             34 COMRAM     1     1      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        6     4      2    9960
                                             28 COMRAM     6     4      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     288
                                              9 COMRAM     4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     155
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                              10     6      4    6936
                                             18 COMRAM    10     6      4
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _executeATCommand                                     5     3      2 1951481
                                            107 BANK0      5     3      2
                            _cmdAddr
                           _cmdBcast
                        _cmdBootLoad
                          _cmdGetCAD
                      _cmdGetCADRSSI
                         _cmdGetMode
                         _cmdGetRFCH
                        _cmdGetRxCnt
                           _cmdGetSF
                          _cmdGetTTL
                           _cmdGetTX
                               _cmdI
                             _cmdMac
                           _cmdNaddr
                            _cmdRecv
                           _cmdReset
                          _cmdRstCAD
                            _cmdSend
                        _cmdSendSink
                          _cmdSetAES
                         _cmdSetAddr
                         _cmdSetBaud
                      _cmdSetCADRSSI
                        _cmdSetNaddr
                       _cmdSetParity
                         _cmdSetRFCH
                           _cmdSetSF
                         _cmdSetSink
                          _cmdSetTTL
                           _cmdSetTX
                    _print_hop_table
                             _printf
                  _set_hop_table_ttl
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _set_hop_table_ttl                                    2     0      2   42683
                                             29 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _print_hop_table                                      2     0      2   42683
                                             29 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetTX                                            10     8      2  183555
                                             29 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _memset
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetTTL                                            2     0      2     208
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetSink                                           0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetSF                                            10     8      2  179052
                                             29 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _cmdSetRFCH                                          10     8      2  180519
                                             29 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetParity                                         2     0      2   55859
                                             29 BANK0      2     0      2
                             _printf
                         _set_parity
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _cmdSetNaddr                                          7     5      2  181884
                                             29 BANK0      7     5      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _printf
                        _setSyncWord
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _setSyncWord                                          1     1      0    6382
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _cmdSetCADRSSI                                       10     8      2  179021
                                             29 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               6     0      6    5690
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) _cmdSetBaud                                           5     3      2   10276
                                             57 COMRAM     5     3      2
                             _strtok
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2848
                                             14 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _cmdSetAddr                                           8     6      2   63084
                                             29 BANK0      8     6      2
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetAES                                           46    44      2   77221
                                             91 COMRAM     2     2      0
                                             29 BANK0     44    42      2
          _DATAEE_WriteByte_Platform
                             _memcpy
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSendSink                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSend                                             78    76      2   72978
                                             29 BANK0     78    76      2
                        _NWK_DataReq
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtoul                                              6     0      6    7250
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    4973
                                             15 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     512
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _cmdRstCAD                                            0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdReset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdRecv                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdNaddr                                             0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdMac                                               2     2      0   42678
                                             91 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdI                                                 0     0      0   42579
                           _sendInfo
 ---------------------------------------------------------------------------------
 (4) _sendInfo                                             0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTX                                             0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTTL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdGetSF                                             0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRxCnt                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdGetRFCH                                           0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetMode                                           0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCADRSSI                                        0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCAD                                            0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBootLoad                                          2     2      0   49964
                                             91 COMRAM     2     2      0
          _DATAEE_WriteByte_Platform
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBcast                                            72    70      2   65463
                                             29 BANK0     68    66      2
                        _NWK_DataReq
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4   12959
                                             12 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     637
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     748
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _NWK_DataReq                                          2     0      2     425
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdAddr                                              0     0      0   42579
                             _printf
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                  5     5      0   45078
                                             47 COMRAM     5     5      0
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                     _PHY_SetChannel
                     _PHY_SetRxState
                          _crc16_app
                        _loadMACAddr
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_parity                                           3     3      0     124
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                          1     1      0     245
                                              5 COMRAM     1     1      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     155
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6     835
                                             18 COMRAM    12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     387
                                              8 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     183
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   21485
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    9385
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte_Platform                            3     0      3    7385
                                              5 COMRAM     3     0      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             5     3      2    4309
                                              5 COMRAM     5     3      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1791
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     311
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  336396
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    8904
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2787
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2954
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    2026
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  190938
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  190938
                                             57 COMRAM     2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   22213
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0   12702
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (2) _set_timer0base                                       4     0      4    1112
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _get_timer0base                                       4     2      2     668
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   39105
                                             25 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _receive
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          7     5      2    8572
                                             18 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0  136554
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   27643
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    2071
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     840
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   21116
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    6351
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   94941
                                            128 BANK0      2     2      0
                                              0 BANK1      2     2      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   18651
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2    9219
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    5052
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1828
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     908
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     234
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    2553
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     424
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2   59691
                                             91 COMRAM     2     2      0
                                            125 BANK0      3     1      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    8162
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2   51131
                                             99 BANK0     26    24      2
                         _appDataInd *
                _nwkRxServiceDataInd *
        nwkFrame@nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (6) nwkFrame@nwkFramePayloadSize                          4     2      2     197
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  6     4      2    3615
                                             29 BANK0      6     4      2
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     8     6      2    1076
                                              7 COMRAM     8     6      2
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     684
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                5     3      2    2338
                                             12 COMRAM     5     3      2
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    2107
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                          70    68      2   45825
                                             29 BANK0     70    68      2
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              10     4      6   42579
                                             87 COMRAM     4     4      0
                                             23 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   37690
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   37085
                                             69 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    9057
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     672
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     323
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    8161
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     440
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     449
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _stoa                                                22    18      4    3920
                                             12 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    9029
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    6665
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2    1274
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    2329
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1773
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      93
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (12) _UART1_Write                                         1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     197
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     641
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     653
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2891
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     391
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     427
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1496
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   15276
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    8401
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     447
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   13970
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2   13586
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    4205
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     512
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     512
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2654
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1806
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1263
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     338
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    3143
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2889
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    4888
                                              7 COMRAM    11     5      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     223
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0  105794
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0  105126
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0  105126
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     135
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    6484
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0   11978
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   15873
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4    1185
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4    1219
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1412
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2138
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    6517
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setFrequency                                        12     8      4    9354
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    7669
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0   21485
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (6) _implicitHeaderMode                                   0     0      0    7536
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _explicitHeaderMode                                   0     0      0    7536
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    7536
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    6351
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    5     2      3    1086
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     546
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SX1276Read                                           2     2      0    1185
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (8) _SX1276ReadBuffer                                     5     2      3    1086
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (9) _SPI1_ReadBlock                                       6     2      4     338
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2983
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     648
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1905
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     668
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     321
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     860
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      90
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (17) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (18) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
               _memset
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                     _isdigit
                     _stoa
                       _fputc
                         _putch
                           _UART1_Write
                       _strlen
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                       _toupper
                         _islower
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
             nwkFrame@nwkFramePayloadSize *
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _bootLoadApplication
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _loadMACAddr
       _DIA_ReadByte
     _set_parity
     _set_uart_baud
   _processATCommand
     _UART1_Read
     _UART1_is_rx_ready
     _executeATCommand
       _cmdAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdBcast
         _NWK_DataReq
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdBootLoad
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCADRSSI
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetMode
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRFCH
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRxCnt
       _cmdGetSF
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetTTL
       _cmdGetTX
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdI
         _sendInfo
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
       _cmdMac
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdNaddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdRecv
       _cmdReset
       _cmdRstCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSend
         _NWK_DataReq
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSendSink
       _cmdSetAES
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetBaud
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetCADRSSI
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetNaddr
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _setSyncWord
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetParity
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _set_parity
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdSetRFCH
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSF
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSink
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSetTTL
       _cmdSetTX
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _print_hop_table
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
       _set_hop_table_ttl
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _strstr
         _strchr
         _strlen
         _strncmp
     _get_timer0base
     _memset
     _queue_serial_led_event
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _set_timer0base

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     2AD      37       16.7%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      BD      15       73.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      80      13       50.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D2      11       82.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4F9      32        0.0%
DATA                 0      0     7A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 06 22:48:37 2020

                         cmdSetNaddr@tempaddr 0083                nwkRouteFrameReceived@discovery 0011  
                           _SPI1_ExchangeByte 988C                                    _RSSITarget 00FB  
                              _setCodingRate4 8E30                            _commandByteCounter 0176  
                                 __CFG_CP$OFF 000000                            ?_SPI1_ExchangeByte 0001  
                     bootLoadApplication@temp 0032                           ___wmul@multiplicand 0004  
                            ??_PHY_SetRxState 0012                             ??_PHY_TaskHandler 003C  
              __end_of_nwkRouteNormalizeRanks 91D8                                _SYS_TimerStart 95F4  
                     ??_nwkDataReqTaskHandler 0031                      __size_of_start_radio_cad 0010  
                                 __CFG_LVP$ON 000000                       ?_nwkTxDelayTimerHandler 0012  
                  __size_of_set_hop_table_ttl 0010                                           l201 7DFC  
                                         l300 9B96                                           l213 8186  
                                         l230 6B1A                                           l311 788A  
                                         l320 60E8                                           l305 9C1E  
                                         l233 9CFA                                           l313 78B4  
                                         l330 71D0                                           l308 9A0E  
                                         l316 9AC0                                           l324 6112  
                                         l245 5BAA                                           l253 7C14  
                                         l510 9108                                           l262 9D16  
                                         l238 4BFE                                           l334 71FA  
                                         l270 9BFE                                           l327 9A28  
                                         l248 9958                                           l352 954A  
                                         l256 9AA8                                           l505 8824  
                                         l337 9CE8                                           l273 9D14  
                                         l361 7100                                           l338 9CE8  
                                         l291 9D18                                           l267 8C2E  
                                         l355 8750                                           l259 83AC  
                                         l371 9BEE                                           l532 2A48  
                                         l460 0800                                           l277 3686  
                                         l349 7964                                           l365 712A  
                                         l358 9AD8                                           l294 9D12  
                                         l374 9BDE                                           l703 56F4  
                                         l368 9D1A                                           l713 9192  
                                         l297 9AF0                                           l561 8A0C  
                                         l547 642C                                           l564 95F2  
                                         l590 7C7E                                           l593 7CBA  
                                         l489 3B12                                           l586 7C3E  
                                         l819 8FEE                                           l839 89AE  
                                         l971 9796                                           l974 9978  
                                         _GIE 01FE97                      __end_of_DIO0_Receive_ISR 7512  
                                         _SNR 016D                            _CircularBufferSize 89B0  
                        __end_of_cmdSetParity 7966                                           _cad 5CCA  
                                         _abs 8E7E                                           _pad 6C0A  
                                ?_loadMACAddr 0001                             _NWK_GroupIsMember 8FF0  
                          nwkRouteFrame@frame 0033                               nwkRxSendAck@ack 002E  
                     __size_of_PMD_Initialize 0024                           ??_SPI1_ExchangeByte 0002  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                      nwkDataReqSendFrame@frame 002F  
                        _FirmwareVersionMajor FDD4                      _DATAEE_ReadByte_Platform 55A8  
                          _UART1_Transmit_ISR 8DE0                          _FirmwareVersionMinor FDD3  
                               __CFG_BBEN$OFF 000000                            ?_NWK_GroupIsMember 0002  
                              ?_queueLedEvent 001D                              _SX1276ReadBuffer 9840  
                       __end_of_SYS_TimerInit 9CC6                         queueLedEvent@LEDState 001F  
                                 ?_SX1276Read 0001                               PHY_DataReq@data 0011  
                                __CFG_ZCD$OFF 000000                        NWK_GroupIsMember@group 0002  
                         ?_CircularBufferSize 0002                               ?_get_timer0base 0002  
                                        l1001 9A90                                          ?_cad 0001  
                                        l1011 989A                                          l1013 98AA  
                                        l1014 98AE                                          l1035 925E  
                                        ?_abs 0014                                          l1029 92E4  
                                        l1151 8EF8                                          l1240 9916  
                             nwkTxFrame@frame 0024                                          l1153 8F06  
                                        l1154 8F12                                          l1243 9B80  
                                        l1163 98F4                                          l1068 9364  
                                        l1341 7B6A                                          l2125 31C6  
                                        l1157 99F2                                          l1246 98D2  
                                        l1422 9C9E                                          l2038 97EC  
                                        l2062 6326                                          l2302 7800  
                                        l1503 832E                                          l1095 9CAC  
                                        l3103 2484                                          l1416 9C90  
                                        l3032 6CA2                                          l3040 21AE  
                                        l3112 253A                                          l2072 86E4  
                                        l1360 8A68                                          l1344 9B08  
                                        l1425 9C74                                          l2049 8CDE  
                                        l3105 2490                                          l2081 2CE4  
                                        l2057 4D84                                          l1186 93A4  
                                        l3034 6CEA                                          l3042 21BA  
                                        l2314 9584                                          l1419 9C82  
                                        l2155 5EC4                                          l2307 8DDE  
                                        l4003 90C2                                          l1428 9C66  
                                        l2500 9A76                                          l3060 244A  
                                        l1365 88A0                                          l3029 6C5C  
                                        l4013 888A                                          l2157 5EF6  
                                        l3206 7ABE                                          l1366 88BA  
                                        l3126 2702                                          l3142 0912  
                                        l4110 5300                                          l1551 8BD6  
                                        l1375 9CE4                                          l2264 3F64  
                                        l4008 887E                                          l3128 2774  
                                        l1800 73B4                                          l2088 7F36  
                                        l2433 9B68                                          l2521 8E7C  
                                        l2505 51AC                                          l1369 88EE  
                                        l2273 55A6                                          l2097 1D94  
                                        l2169 6F84                                          l4105 8582  
                                        l2258 92A2                                          l2450 983E  
                                        l3090 320C                                          l2338 2F5C  
                                        l2290 774A                                          l1562 8654  
                                        l4106 858E                                          l2611 4A74  
                                        l2443 9866                                          l3083 4402  
                                        l3067 42DE                                          l2603 7510  
                                        l1563 8632                                          l1571 6678  
                                        l2436 9BAC                                          l2524 9B20  
                                        l3172 96B0                                          l1804 7450  
                                        l1900 38D0                                          l1716 9C4A  
                                        l2284 76FC                                          l4060 11DA  
                                        l4124 850C                                          l2533 9BBE  
                                        l2269 408A                                          l3069 42EA  
                                        l3157 0EF0                                          l2277 6A28  
                                        l2293 988A                                          l1565 8666  
                                        l1573 6686                                          l1741 80F6  
                                        l4053 118A                                          l4125 8518  
                                        l2446 981A                                          l2470 5A8C  
                                        l3190 7A12                                          l3078 43A8  
                                        l1558 9A42                                          l1566 8672  
                                        l4054 11D2                                          l2439 9842  
                                        l1807 9324                                          l3079 43F6  
                                        l3183 85E8                                          l2527 9C0E  
                                        l1736 9CD0                                          l1816 9654  
                                        l2544 9B50                                          l3088 3200  
                                        l3168 8496                                          l1904 379E  
                                        l1576 6734                                          l3184 8600  
                                        l1681 8950                                          l1761 738C  
                                        l1745 20FC                                          l3169 84A2  
                                        l1753 75D0                                          l1690 9998  
                                        l3442 6634                                          l1930 5830  
                                        l1746 1FE2                                          l3610 6904  
                                        l3098 342E                                          l1914 5962  
                                        l2642 9CF4                                          l4082 145A  
                                        l2547 9B38                                          l2467 9420  
                                        l2571 5056                                          l2811 9CC4  
                                        l2459 9CB8                                          l2619 4442  
                                        l2651 9D1E                                          l1860 8D36  
                                        l2476 5CC8                                          l1828 9036  
                                        l3620 6E7C                                          l2636 45B0  
                                        l1684 99D4                                          l2557 8F88  
                                        l3437 65EE                                          l2741 9C58  
                                        l3189 79E2                                          l2645 93E2  
                                        l4093 7F38                                          l2558 8FA6  
                                        l3286 4748                                          l2670 9D00  
                                        l4078 136E                                          l3199 7AA6  
                                        l2567 4EFA                                          l2639 9D06  
                                        l1935 6DCC                                          l4087 945C  
                                        l1943 87BC                                          l2831 8B20  
                                        l2815 9624                                          l2575 5DE2  
                                        l1687 99B6                                          l4095 7FD0  
                                        l1768 7D5C                                          l2744 9C3C  
                                        l2648 9D1C                                          l2497 190E  
                                        l1793 72C4                                          l3617 6934  
                                        l1881 921A                                          l1866 8216  
                             PHY_DataReq@size 0013                                          l1787 97C2  
                                        l1939 6C08                                          l3299 4EF8  
                                        l3627 6EAC                                          l2667 8AC4  
                                        l2835 531A                                          l1884 8D88  
                                        l1796 9A5C                                          l1948 91D6  
                                        l2836 5454                                          l1885 8D8C  
                                        l1877 6834                                          l2589 9C2E  
                                        l3830 3CEA                                          ?_pad 0014  
                                        l2855 3EBE                                          l3592 828E  
                                        l3904 9498                                          l1896 914E  
                                        l3841 3C76                                          l3913 842A  
                                        l3834 3C1A                                          l3850 8EC8  
                                        l3827 3B7A                                          l3917 48E0  
                                        l3950 9816                                          l3599 82A6  
                                        l3847 8EBC                                          l3935 8066  
                                        l3943 8F5C                                          l3881 424A  
                                        l3890 9510                                          l3955 95BC  
                                        l3964 8B7C                                          l3884 94D4  
                                        l3958 6008                                          l3878 423E  
                                        l3990 621C                                          l3977 6530  
                                        l3993 6210                                          l3898 8C86  
                                        l7701 9A8E                                          l3998 907C  
                                        l7721 937A                                          l7731 93A2  
                                        l7723 9390                                          l7715 9366  
                                        l7725 9392                                          l7717 9368  
                                        l7741 82FE                                          l7733 98B0  
                                        l7727 939C                                          l7719 9370  
                                        l7743 8300                                          l7735 82A8  
                                        l7729 93A0                                          l7745 8302  
                                        l7737 82FA                                          l7747 8304  
                                        l7739 82FC                                          l7749 9B6A  
                                        l7699 9A78                          nwkDataReqConfirm@req 0002  
                        _SYS_TimerTaskHandler 5302                                          STR_1 FE8D  
                                        STR_2 FF66                                          STR_3 FFDF  
                                        STR_4 FECC                                          STR_5 FED0  
                                        STR_6 FFDF                                          STR_7 FECC  
                                        STR_8 FED0                                          STR_9 FE46  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                    __end_of_explicitHeaderMode 9B52  
                                        u5155 939A                                          u5156 939C  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        u8400 91D6                                          u8401 91D2  
                                        u9500 8620                                          u9510 8640  
                                        u9511 863C                                          u9520 8666  
                                        u9521 8662                                          u9505 861A  
                                        u9650 72E0                                          u9651 72DC  
                                        u9660 7348                                          u9661 7344  
                           ?_PHY_SetShortAddr 0002                                          _RSSI 016F  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUE 003A81  
                  _nwkRouteFrameReceived$3856 0012                           _CircularBufferSpace 95BE  
                            PHY_DataInd@frame 0018                                 __CFG_FCMEN$ON 000000  
                         ?_UART1_Transmit_ISR 0001              __end_of_nwkTxAckWaitTimerHandler 774C  
                                        abs@a 0014                                          _cmdI 9CF6  
                         ??_NWK_GroupIsMember 0004                                          _dbuf 02C6  
                                        _idle 9CAE                                          _atoi 408C  
                                        _main 9656                                          _dtoa 20FE  
                         nwkRouteFrame@header 0035                              ?_NWK_TaskHandler 0001  
                                        _rand 5EF8                                          _seed 01D1  
                                        _prec 00E2                                          _nout 015D  
                                        pad@i 001B                                          pad@p 0018  
                                        fsr0h 003FEA                                          fsr1h 003FE2  
                                        indf0 003FEF                                          fsr2h 003FDA  
                                        fsr0l 003FE9                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 001D                                          fsr2l 003FD9  
                                        _stoa 424C                            ??_PHY_SetShortAddr 0004  
                                        _utoa 31C8                        fp__nwkRxServiceDataInd 0000  
                                        _xtoa 244C                       __size_of_SPI1_ReadBlock 0044  
                    nwkRxRejectDuplicate@diff 001A                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                              NWK_DataReq@req 0002                     __end_of_SPI1_ExchangeByte 98B0  
               ??_UART1_SetTxInterruptHandler 0004    nwkRxDuplicateRejectionTimerHandler@restart 0014  
                      CircularBufferSpace@ctx 000A                        __end_of_setCodingRate4 8E7E  
                               __CFG_CSWEN$ON 000000                             _UART1_rx_vect_isr 9710  
                                ___param_bank 000000                          __end_of_DIA_ReadByte 98F6  
                  ??_nwkRxHandleReceivedFrame 002B                             nwkFrameFree@frame 0002  
                  __size_of_UART1_is_rx_ready 0018                          ??_CircularBufferSize 0004  
                                 ?_UART1_Read 0001                              _SYS_TimerStarted 8AC6  
                     ??_nwkRxHandleIndication 005C                            ?_UART1_rx_vect_isr 0001  
                                       ??_cad 0011                                         ??_abs 0016  
                                       ??_pad 001A                     __size_of_DATAEE_WriteByte 004A  
                      __end_of_SYS_TimerStart 9626                       __end_of_TMR0_Initialize 9366  
              __end_of_nwkTxDelayTimerHandler 7802                ??_TMR0_DefaultInterruptHandler 0001  
                        __size_of_cmdGetRxCnt 0002                          ?_CircularBufferSpace 000A  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0001  
                            nwkTxFrame@header 0028                 __end_of_OSCILLATOR_Initialize 9B82  
                        __size_of_cmdBootLoad 003A                      ??_nwkRouteSendRouteError 002F  
                                ?_SX1276Write 000F                                         l12001 9798  
                                       l11201 860A                                         l12011 97B2  
                                       l11203 8626                                         l12013 9CC6  
                                       l12021 8CE4                                         l11205 8640  
                                       l12007 979C                                         l12023 8D24  
                                       l12015 8CE0                                         l11207 8648  
                                       l13001 9906                                         l12009 97B0  
                                       l12033 962A                                         l12025 8D26  
                                       l10441 9194                                         l10361 978A  
                                       l11209 864E                                         l13003 990A  
                                       l12035 9642                                         l12027 9626  
                                       l10451 91C6                                         l10355 976C  
                                       l10371 89B0                                         l13005 990E  
                                       l12037 9644                                         l11261 72FC  
                                       l10357 9770                                         l10365 995A  
                                       l12301 6A5E                                         l13007 9912  
                                       l11183 997C                                         l11263 730C  
                                       l10447 9198                                         l10703 8DA0  
                                       l11431 9574                                         l10359 9788  
                                       l10367 995E                                         l11423 9868  
                                       l12311 6A7E                                         l12303 6A6C  
                                       l11265 7324                                         l11257 72C6  
                                       l14001 6E64                                         l10449 91C4  
                                       l10713 8DAC                                         l11433 957E  
                                       l10369 9976                                         l11425 9878  
                                       l12321 6A9E                                         l12313 6A8C  
                                       l12305 6A74                                         l11267 7348  
                                       l11259 72E0                                         l14011 8C7A  
                                       l14003 6E76                                         l10707 8DA6  
                                       l11427 954E                                         l12331 6ABE  
                                       l12323 6AAC                                         l12315 6A94  
                                       l12307 6A76                                         l11195 95BE  
                                       l11269 7384                                         l14013 8C7E  
                                       l14005 8C30                                         l14021 20FE  
                                       l14101 4316                                         l11429 9564  
                                       l12333 6ACC                                         l12325 6AB4  
                                       l12317 6A96                                         l12309 6A7A  
                                       l12261 8A20                                         l14007 8C34  
                                       l14031 2188                                         l14023 212E  
                                       l14111 4382                                         l14103 432E  
                                       l11199 8602                                         l12511 90C4  
                                       l12327 6AB6                                         l12319 6A9A  
                                       l12271 8A5E                                         l12263 8A44  
                                       l15001 8288                                         l14017 988E  
                                       l14009 8C48                                         l14041 21EC  
                                       l14033 21A2                                         l14025 2156  
                                       l14121 43D4                                         l14113 4386  
                                       l14105 4332                                         l14201 25FA  
                                       l12521 90F8                                         l12329 6ABA  
                                       l12337 6AD4                                         l12273 8A62  
                                       l12265 8A46                                         l12257 8A0E  
                                       l14019 9894                                         l15011 3BA8  
                                       l15003 3B16                                         l14051 22B0  
                                       l14043 21F4                                         l14035 21C6  
                                       l14027 2176                                         l14123 43D8  
                                       l14115 438A                                         l14107 4350  
                                       l14131 31F4                                         l14211 26BE  
                                       l14203 2600                                         l12611 999A  
                                       l12531 7C30                                         l12523 7C16  
                                       l12339 6B16                                         l12291 6A3E  
                                       l12283 6A2C                                         l12275 8A66  
                                       l12267 8A56                                         l12259 8A0E  
                                       l12701 7B16                                         l15021 3C02  
                                       l15005 3B26                                         l14301 81FE  
                                       l14061 238C                                         l14053 22B6  
                                       l14045 21FE                                         l14037 21D8  
                                       l14029 2186                                         l14109 435C  
                                       l14141 32F6                                         l14133 3248  
                                       l14125 31C8                                         l14221 272A  
                                       l14213 26D8                                         l14205 2606  
                                       l15101 3750                                         l10693 8D90  
                                       l12613 99A6                                         l11901 6662  
                                       l12541 7C68                                         l12533 7C32  
                                       l12525 7C22                                         l12517 90C8  
                                       l12293 6A4C                                         l12285 6A34  
                                       l12269 8A5A                                         l12711 7B66  
                                       l12703 7B1A                                         l15031 3C66  
                                       l15023 3C04                                         l15015 3BBC  
                                       l15007 3B34                                         l14303 820E  
                                       l14231 40A4                                         l14071 23DE  
                                       l14063 23A6                                         l14047 2204  
                                       l14055 233A                                         l14039 21E6  
                                       l14119 43BC                                         l14151 33B6  
                                       l14143 32FC                                         l14135 3250  
                                       l14127 31D8                                         l14223 2740  
                                       l14215 26F2                                         l14207 2684  
                                       l14311 91F6                                         l15111 37E4  
                                       l15103 3754                                         l10695 8D94  
                                       l12607 99B8                                         l11911 66AE  
                                       l11903 6670                                         l12543 7C8E  
                                       l12535 7C4E                                         l12527 7C28  
                                       l12519 90F6                                         l12295 6A54  
                                       l12287 6A36                                         l12279 9AF2  
                                       l12705 7B1E                                         l15041 3CC2  
                                       l15033 3C84                                         l15025 3C10  
                                       l15017 3BC4                                         l15009 3B92  
                                       l14233 40A8                                         l14073 23F0  
                                       l14057 2354                                         l14065 23B6  
                                       l14049 22AA                                         l14153 33D0  
                                       l14145 3302                                         l14137 325A  
                                       l14129 31DA                                         l14217 2712  
                                       l14209 26A0                                         l14161 244C  
                                       l14401 0D4A                                         l14321 085A  
                                       l14313 0802                                         l15121 386A  
                                       l15113 380E                                         l15105 3774  
                                       l16001 1D06                                         l12609 99C4  
                                       l11921 6728                                         l11913 66C0  
                                       l11905 6676                                         l12545 7CA8  
                                       l12537 7C60                                         l12529 7C2E  
                                       l12297 6A56                                         l12289 6A3A  
                                       l12651 9354                                         l12643 9326  
                                       l12707 7B2A                                         l15043 3CD0  
                                       l15035 3C86                                         l15027 3C4C  
                                       l15019 3BD0                                         l15131 6B42  
                                       l14251 4172                                         l14243 4112  
                                       l14235 40CA                                         l14227 408C  
                                       l14075 23FC                                         l14067 23C8  
                                       l14059 2372                                         l14091 4286  
                                       l14083 424C                                         l14155 33EA  
                                       l14139 3260                                         l14147 3386  
                                       l14219 2718                                         l14171 24B2  
                                       l14163 245C                                         l14403 0D6C  
                                       l14411 0E26                                         l14331 0884  
                                       l14323 0866                                         l14315 0830  
                                       l14307 91D8                                         l16011 5DE4  
                                       l15123 388E                                         l15115 381E  
                                       l15107 379A                                         l15211 2AB2  
                                       l16003 1D2C                                         l10699 8D9A  
                                       l11931 99E8                                         l11915 66F4  
                                       l11907 668A                                         l12547 7CAC  
                                       l12539 7C64                                         l12299 6A5A  
                                       l15051 7F72                                         l12661 8BB0  
                                       l12653 9360                                         l12645 9332  
                                       l12709 7B36                                         l14501 981C  
                                       l15045 3CD2                                         l15037 3C8A  
                                       l15029 3C58                                         l15141 6BA6  
                                       l15133 6B52                                         l14261 4208  
                                       l14245 4128                                         l14237 4106  
                                       l14229 40A0                                         l14077 2404  
                                       l14069 23D8                                         l14093 42A2  
                                       l14085 4260                                         l14149 3398  
                                       l14157 33FA                                         l14181 2502  
                                       l14173 24E2                                         l14165 245E  
                                       l14413 0E54                                         l14421 0E8A  
                                       l14405 0D7E                                         l14325 0868  
                                       l14317 0842                                         l15301 2FA0  
                                       l16021 5E3C                                         l16013 5DEA  
                                       l15117 3842                                         l15125 38B2  
                                       l15109 37B4                                         l15221 2B7C  
                                       l15213 2AD8                                         l15205 2A56  
                                       l16005 1D4C                                         l11933 99EA  
                                       l11925 99D6                                         l15061 8ECA  
                                       l11917 6704                                         l11909 66A0  
                                       l12549 7CAE                                         l12663 8BB8  
                                       l12655 8B7E                                         l11951 9CA0  
                                       l12647 934E                                         l12671 7AC4  
                                       l14271 92B4                                         l14503 9824  
                                       l15039 3CB2                                         l15143 6BB6  
                                       l15135 6B62                                         l15127 6B1C  
                                       l14263 421A                                         l14255 41B2  
                                       l14247 4130                                         l14239 410A  
                                       l14079 2416                                         l14095 42AE  
                                       l14087 426C                                         l14191 2580  
                                       l14183 251E                                         l14175 24EA  
                                       l14167 2478                                         l14423 0E9C  
                                       l14415 0E66                                         l14407 0DD0  
                                       l14351 0920                                         l14343 0896  
                                       l14335 088A                                         l14327 087E  
                                       l14319 0854                                         l14511 8446  
                                       l15311 3036                                         l16031 5EA8  
                                       l16023 5E62                                         l16015 5DFE  
                                       l15119 385A                                         l15215 2AE8  
                                       l15207 2A66                                         l16007 1D60  
                                       l15151 4C00                                         l16111 748E  
                                       l11935 99EC                                         l11927 99DE  
                                       l15071 8EEA                                         l15063 8ED2  
                                       l11919 6720                                         l15055 7F82  
                                       l12665 8BBC                                         l12657 8BA4  
                                       l12649 9352                                         l11961 9C92  
                                       l11953 9C68                                         l12681 7AEE  
                                       l12673 7AD0                                         l14281 9240  
                                       l14273 92C6                                         l14505 983C  
                                       l15401 5BD6                                         l14521 79A0  
                                       l15081 9A44                                         l15145 6BCE  
                                       l15137 6B76                                         l14249 4138  
                                       l13801 7FF6                                         l14097 42BC  
                                       l14089 427E                                         l14185 252E  
                                       l14177 24F4                                         l14169 24AA  
                                       l14417 0E7E                                         l14361 09BC  
                                       l14353 0922                                         l14513 8474  
                                       l14441 738E                                         l15321 3080  
                                       l15313 3046                                         l15305 2FA6  
                                       l16033 5EBE                                         l16025 5E7E  
                                       l16017 5E18                                         l15217 2B26  
                                       l15225 2B82                                         l15233 2BB2  
                                       l15209 2A82                                         l16009 1D84  
                                       l16041 8A92                                         l15153 4C2A  
                                       l16121 74F8                                         l16113 749C  
                                       l16105 7452                                         l17001 5340  
                                       l11937 99EE                                         l11929 99E4  
                                       l15073 8EEC                                         l15065 8EDA  
                                       l11881 98DE                                         l15057 7FC8  
                                       l15049 7F38                                         l12667 8BC8  
                                       l12659 8BA6                                         l11955 9C5A  
                                       l12691 7B02                                         l12683 7AF2  
                                       l12675 7AE0                                         l14283 9244  
                                       l14275 92CA                                         l15411 5C84  
                                       l15403 5BDA                                         l12747 9CBA  
                                       l14531 477E                                         l14291 818C  
                                       l14523 79B2                                         l14515 7966  
                                       l15083 9A54                                         l15147 6BE6  
                                       l15139 6B8E                                         l14259 41F6  
                                       l13803 8000                                         l13811 8B22  
                                       l14195 25BA                                         l14179 24FA  
                                       l14363 09E8                                         l14371 0A5E  
                                       l14355 0950                                         l14347 08A2  
                                       l14339 0890                                         l14427 0EA8  
                                       l14507 842C                                         l14451 7402  
                                       l14443 73A0                                         l14611 69F0  
                                       l14603 697A                                         l15331 30AE  
                                       l15323 3084                                         l15315 305A  
                                       l15307 3012                                         l16035 5ED6  
                                       l16027 5E82                                         l16019 5E1C  
                                       l15251 2C4C                                         l15235 2BB8  
                                       l15227 2BAC                                         l15219 2B4C  
                                       l16051 8ABE                                         l16043 8A94  
                                       l15171 4D46                                         l15163 4CDC  
                                       l15155 4C60                                         l16123 74FE  
                                       l16115 74DA                                         l16107 7472  
                                       l17003 534C                                         l17011 53E8  
                                       l15075 8EEE                                         l15067 8EE0  
                                       l11891 9A3C                                         l11883 98E4  
                                       l16131 4A7C                                         l16211 7BE6  
                                       l16203 7B6C                                         l11957 9C84  
                                       l12693 7B06                                         l12685 7AF6  
                                       l12677 7AE6                                         l12669 7AC0  
                                       l15501 4A36                                         l14277 921C  
                                       l14269 92A4                                         l15421 1534  
                                       l15413 145C                                         l15405 5BE4  
                                       l14541 4830                                         l14525 474A  
                                       l14461 8FF0                                         l14293 81B4  
                                       l14285 8188                                         l14517 7972  
                                       l14621 5EF8                                         l15149 6BF8  
                                       l13901 461A                                         l13805 801E  
                                       l13821 8F14                                         l13813 8B32  
                                       l14197 25CC                                         l14189 256E  
                                       l14429 0EDA                                         l14381 0B68  
                                       l14373 0A8C                                         l14365 09FA  
                                       l14357 099A                                         l14349 0900  
                                       l14509 8438                                         l14445 73AC  
                                       l14605 6998                                         l14701 7DB8  
                                       l15341 30F8                                         l15333 30C8  
                                       l15325 309E                                         l15317 3074  
                                       l15309 3026                                         l15181 6264  
                                       l15173 621E                                         l16037 5EE6  
                                       l16029 5EA4                                         l15093 36EE  
                                       l15085 3688                                         l15261 2CB4  
                                       l15253 2C5C                                         l15237 2BD6  
                                       l15245 2C22                                         l16045 8A9A  
                                       l15165 4CEC                                         l15157 4C96  
                                       l16117 74E2                                         l16109 7480  
                                       l16125 750A                                         l16061 5CF8  
                                       l16053 5CCA                                         l17013 53FC  
                                       l17005 5380                                         l15077 8EF2  
                                       l15069 8EE6                                         l11885 98EA  
                                       l17101 2776                                         l16221 9A92  
                                       l16141 4B36                                         l16133 4AA2  
                                       l16213 7BEC                                         l16205 7B8E  
                                       l17021 38E4                                         l11959 9C76  
                                       l12695 7B0A                                         l12687 7AFA  
                                       l12679 7AEA                                         l15503 4A4C  
                                       l14279 922C                                         l15431 1664  
                                       l15423 158C                                         l15415 14B4  
                                       l15407 5BEE                                         l14551 48C4  
                                       l14543 4860                                         l14535 47B6  
                                       l14295 81E8                                         l14519 7980  
                                       l14623 5FAE                                         l13911 466E  
                                       l13903 4626                                         l13807 8054  
                                       l13823 8F20                                         l13815 8B36  
                                       l14199 25E8                                         l14391 0C3A  
                                       l14383 0B96                                         l14375 0ABA  
                                       l14359 09AA                                         l14455 7412  
                                       l14607 69C2                                         l14615 69F6  
                                       l14703 7DBC                                         l15351 3140  
                                       l15343 3100                                         l15335 30D0  
                                       l15327 30A6                                         l15319 307C  
                                       l15191 62E6                                         l15183 6278  
                                       l15087 3694                                         l15263 2CC4  
                                       l15247 2C3E                                         l15239 2C0E  
                                       l15271 5456                                         l16047 8AB2  
                                       l16039 8A6A                                         l15167 4D0A  
                                       l15159 4CB6                                         l16119 74E8  
                                       l15511 9C20                                         l16071 5D3C  
                                       l16063 5CFC                                         l16055 5CD2  
                                       l17015 5426                                         l17007 539C  
                                       l15079 8EF6                                         l11879 98D4  
                                       l17103 27A2                                         l16127 9CF6  
                                       l16151 4BAE                                         l16143 4B4C  
                                       l16135 4AC2                                         l16311 3600  
                                       l16215 7BF2                                         l16207 7BBE  
                                       l16231 8382                                         l17031 393C  
                                       l17023 38F4                                         l12697 7B0E  
                                       l12689 7AFE                                         l15505 4A62  
                                       l14633 9B9A                                         l15441 1750  
                                       l15433 1678                                         l15425 15A0  
                                       l15417 14C8                                         l15409 5C10  
                                       l14721 840C                                         l14713 83AE  
                                       l14553 48CA                                         l14537 4816  
                                       l14529 476C                                         l14473 9022  
                                       l14481 8D38                                         l13921 46E2  
                                       l13913 4680                                         l13905 4644  
                                       l13825 8F38                                         l13817 8B70  
                                       l13841 6C54                                         l13833 6C0A  
                                       l14393 0C9E                                         l14385 0BE0  
                                       l14377 0B18                                         l14369 0A4C  
                                       l14457 7448                                         l14449 73E6  
                                       l14609 69D2                                         l14705 7DBE  
                                       l15361 3174                                         l15353 3144  
                                       l15345 3104                                         l15337 30D4  
                                       l15329 30AA                                         l15193 62F8  
                                       l15185 629A                                         l15177 6244  
                                       l15097 3712                                         l15089 36BA  
                                       l15265 2CD4                                         l15249 2C4A  
                                       l15281 54BA                                         l16049 8AB4  
                                       l15169 4D28                                         l16081 5D54  
                                       l16073 5D42                                         l16065 5D02  
                                       l16057 5CF2                                         l17017 5438  
                                       l17009 53AC                                         l11889 9A2C  
                                       l11897 6638                                         l17201 2A0C  
                                       l17121 27F2                                         l17105 27A8  
                                       l15521 51FA                                         l15513 51AE  
                                       l16241 8BD8                                         l15601 111E  
                                       l16161 4BDC                                         l16153 4BB2  
                                       l16145 4B68                                         l16137 4AEA  
                                       l16129 4A76                                         l16321 3666  
                                       l16313 3612                                         l16305 359C  
                                       l16209 7BD2                                         l16217 7C04  
                                       l16233 839A                                         l16225 8330  
                                       l16401 6104                                         l17041 397E  
                                       l17033 3946                                         l17025 38FA  
                                       l12699 7B12                                         l15507 4A64  
                                       l14627 9B54                                         l15443 17A8  
                                       l15435 16D0                                         l15427 15F8  
                                       l15419 1520                                         l15451 1838  
                                       l15371 93FA                                         l14715 83CA  
                                       l14723 8410                                         l14555 48CE  
                                       l14547 487A                                         l14731 7200  
                                       l14475 9024                                         l14467 8FF4  
                                       l14299 81FC                                         l14483 8D5A  
                                       l14571 5754                                         l14563 56F6  
                                       l13915 46AE                                         l13907 464C  
                                       l13923 46E8                                         l13931 4D86  
                                       l13827 8F3C                                         l13851 6CCE  
                                       l13843 6C68                                         l13835 6C1A  
                                       l14491 912C                                         l14707 7DCE  
                                       l15363 3178                                         l15355 3148  
                                       l15347 3108                                         l15339 30D8  
                                       l15195 6316                                         l15187 62BE  
                                       l15179 6254                                         l14811 67D0  
                                       l14803 6768                                         l15099 373E  
                                       l14643 8AF4                                         l14635 8AC6  
                                       l14651 3CEC                                         l15259 2C72  
                                       l15291 5554                                         l15283 54E6  
                                       l15275 547C                                         l16083 5D68  
                                       l16067 5D1A                                         l11899 663E  
                                       l17211 2A3A                                         l17203 2A12  
                                       l17131 2816                                         l17115 27C2  
                                       l17107 27AE                                         l15523 5234  
                                       l15515 51E0                                         l16171 5AC6  
                                       l16251 8C0E                                         l16243 8BE6  
                                       l15611 1182                                         l15603 1152  
                                       l16163 4BE8                                         l16155 4BB6  
                                       l16147 4B9C                                         l16139 4B10  
                                       l16323 366A                                         l16315 3624  
                                       l16307 35B8                                         l16411 7152  
                                       l16235 839E                                         l16227 8352  
                                       l17051 39D2                                         l17043 3996  
                                       l17035 3950                                         l17027 390C  
                                       l17019 38D2                                         l16501 9296  
                                       l14629 9B66                                         l15461 8E4A  
                                       l15381 59EC                                         l14901 510A  
                                       l15453 1856                                         l15445 17BC  
                                       l15437 16E4                                         l15429 160C  
                                       l15373 940A                                         l15509 9586  
                                       l14717 83F6                                         l14549 48B2  
                                       l14741 7296                                         l14733 7220  
                                       l14725 71FC                                         l14477 9034  
                                       l14469 901C                                         l14485 8D6C  
                                       l14573 577C                                         l14565 5702  
                                       l13925 46F8                                         l13917 46CE  
                                       l13909 4660                                         l13941 4DCA  
                                       l13933 4D8A                                         l13781 88B0  
                                       l13845 6C80                                         l13837 6C36  
                                       l13829 9422                                         l14397 0CEE  
                                       l14389 0C0C                                         l14557 97EE  
                                       l14493 913E                                         l14581 8752  
                                       l14709 7DFA                                         l15357 3168  
                                       l15349 3138                                         l15189 62D6  
                                       l14821 6804                                         l14805 6784  
                                       l14813 67DC                                         l14637 8AD6  
                                       l14645 8B0C                                         l14661 3D66  
                                       l14653 3D00                                         l15197 2A4A  
                                       l15293 5578                                         l15285 54FA  
                                       l15277 548C                                         l16085 5D8A  
                                       l16069 5D2E                                         l17205 2A22  
                                       l17141 287C                                         l17133 2826  
                                       l17117 27E0                                         l17109 27BE  
                                       l15525 5256                                         l16181 5B58  
                                       l16173 5AEC                                         l16405 9A10  
                                       l16333 9D18                                         l15701 87BE  
                                       l16253 8C10                                         l16341 9B82  
                                       l15613 119A                                         l15605 1156  
                                       l16157 4BBE                                         l16149 4BA8  
                                       l16325 367A                                         l16317 363E  
                                       l16309 35DE                                         l16261 3430  
                                       l15541 851A                                         l15533 84A4  
                                       l16421 71D6                                         l16413 7172  
                                       l16229 837C                                         l17061 3A16  
                                       l17053 39E6                                         l17045 39AA  
                                       l17037 3964                                         l17029 391E  
                                       l16511 8CA0                                         l16503 8C88  
                                       l14495 9844                                         l15471 9BAE  
                                       l15463 8E5A                                         l15391 5A80  
                                       l15383 5A00                                         l14911 5132  
                                       l15455 18CA                                         l15447 1814  
                                       l15439 173C                                         l15375 940E  
                                       l15367 93E6                                         l17223 9C4C  
                                       l14719 83FA                                         l14735 7244  
                                       l14575 5796                                         l14567 5722  
                                       l13927 4718                                         l13919 46D0  
                                       l13951 4E32                                         l13943 4DEA  
                                       l13935 4D98                                         l13855 8E7E  
                                       l13791 88E6                                         l13783 88BC  
                                       l13847 6C84                                         l13839 6C44  
                                       l13863 949A                                         l13871 8860  
                                       l14399 0D1C                                         l14559 97F6  
                                       l14583 8788                                         l15359 3170  
                                       l14823 6818                                         l14815 67DE  
                                       l14807 6794                                         l14647 8B1E  
                                       l14639 8AEE                                         l14671 3DD8  
                                       l14655 3D08                                         l15199 2A52  
                                       l15295 5590                                         l15287 552C  
                                       l15279 54AA                                         l16095 5D90  
                                       l17231 9C34                                         l17207 2A2E  
                                       l17151 28C2                                         l17143 288C  
                                       l17135 2856                                         l17127 27F6  
                                       l17119 27E2                                         l15527 5268  
                                       l15519 51EC                                         l15703 642E  
                                       l16191 5B82                                         l16183 5B5C  
                                       l16175 5B02                                         l16167 5A8E  
                                       l16255 8C20                                         l16239 9D16  
                                       l16343 9B88                                         l15631 128A  
                                       l15623 122E                                         l15615 11AA  
                                       l15607 1168                                         l15551 0F02  
                                       l16159 4BD4                                         l16319 3650  
                                       l16271 3478                                         l16263 3430  
                                       l15543 8526                                         l15535 84B0  
                                       l16423 71E8                                         l16415 7194  
                                       l16431 78B6                                         l16335 9D12  
                                       l17071 3A46                                         l17063 3A1C  
                                       l17055 39EE                                         l17047 39BE  
                                       l17039 3978                                         l16513 8CA2  
                                       l14497 984C                                         l15473 8F60  
                                       l15465 8E5E                                         l15457 8E32  
                                       l15385 5A58                                         l14913 519C  
                                       l14905 511E                                         l14921 9A5E  
                                       l15449 1828                                         l15377 9414  
                                       l15369 93F6                                         l17225 9C50  
                                       l14737 7258                                         l14745 72AA  
                                       l14577 57C2                                         l14569 573A  
                                       l14761 3F0A                                         l14753 3EC0  
                                       l13881 9684                                         l13961 4EA8  
                                       l13953 4E60                                         l13945 4E08  
                                       l13937 4DB8                                         l13857 8E98  
                                       l13785 88D0                                         l13793 88EA  
                                       l13777 888E                                         l13849 6CB2  
                                       l13873 8872                                         l14489 910A  
                                       l14593 6936                                         l15297 2F5E  
                                       l14825 6828                                         l14817 67E6  
                                       l14809 67A6                                         l14681 3E66  
                                       l14673 3DFC                                         l14665 3D86  
                                       l14657 3D2C                                         l14833 95F4  
                                       l15289 5540                                         l16521 6EAE  
                                       l16097 5DA2                                         l17233 9C38  
                                       l17209 2A34                                         l17161 2908  
                                       l17153 28D2                                         l17145 289C  
                                       l17137 2866                                         l17129 2814  
                                       l15529 52B8                                         l15713 64AA  
                                       l15705 6440                                         l16193 5B8A  
                                       l16185 5B60                                         l16177 5B1E  
                                       l16169 5AB4                                         l16337 9ADA  
                                       l16353 99F4                                         l16249 8BEA  
                                       l15641 12D8                                         l15633 129C  
                                       l15625 1240                                         l15617 11BE  
                                       l15609 1170                                         l15561 0FBE  
                                       l15553 0F0E                                         l16273 3482  
                                       l16281 34A2                                         l16265 3452  
                                       l15545 852E                                         l15537 84B8  
                                       l16425 71EC                                         l16417 71A8  
                                       l16409 712C                                         l16441 7948  
                                       l16433 78E0                                         l16361 7844  
                                       l17081 3A7E                                         l17073 3A5A  
                                       l17065 3A30                                         l17057 3A00  
                                       l17049 39C8                                         l16515 8CB2  
                                       l15491 49A4                                         l14499 9864  
                                       l14931 9B40                                         l15475 8F70  
                                       l15467 8E64                                         l15459 8E42  
                                       l15387 5A68                                         l15379 5964  
                                       l15395 5BAE                                         l17227 9C54  
                                       l14747 72AC                                         l14739 7290  
                                       l14579 57E8                                         l14771 3F98  
                                       l14763 3F1A                                         l14755 3ECC  
                                       l16611 7CF4                                         l16603 7CE0  
                                       l13883 96A4                                         l13891 45C4  
                                       l13963 4EC8                                         l13955 4E80  
                                       l13947 4E10                                         l13939 4DBC  
                                       l13787 88D2                                         l13779 888E  
                                       l13795 9CDE                                         l13971 6860  
                                       l13859 945E                                         l13867 8826  
                                       l14587 878E                                         l14595 694E  
                                       l14843 7EC0                                         l14691 7D78  
                                       l15299 2F6C                                         l14819 67F6  
                                       l14675 3E0E                                         l14667 3DA2  
                                       l14659 3D3C                                         l14683 3E76  
                                       l14835 9614                                         l16523 6EBC  
                                       l16099 5DC0                                         l17171 2956  
                                       l17163 2918                                         l17155 28E2  
                                       l17147 28AC                                         l17139 286A  
                                       l15731 80A2                                         l15707 6460  
                                       l15715 64DC                                         l16195 5B96  
                                       l16187 5B64                                         l16179 5B52  
                                       l16451 9530                                         l16347 9C10  
                                       l15643 1322                                         l15651 1394  
                                       l15635 12A0                                         l15627 1256  
                                       l15619 11F2                                         l15563 0FC2  
                                       l15555 0F20                                         l15723 907E  
                                       l16291 353C                                         l16275 348C  
                                       l16283 34F4                                         l16267 3464  
                                       l15547 854A                                         l15539 84D4  
                                       l15811 6150                                         l15803 6114  
                                       l16419 71BC                                         l16443 7952  
                                       l16435 78EA                                         l16371 78A6  
                                       l16363 7866                                         l16259 9BF0  
                                       l17083 3A8A                                         l17075 3A62  
                                       l17067 3A32                                         l17059 3A06  
                                       l16517 8CC8                                         l16509 8C8C  
                                       l15493 49B8                                         l15485 48E6  
                                       l14925 9B22                                         l15477 8F84  
                                       l15389 5A74                                         l15469 9B0A  
                                       l15397 5BBE                                         l14749 72BC  
                                       l14781 401E                                         l14773 3FAC  
                                       l14765 3F34                                         l14757 3EE6  
                                       l16613 7D32                                         l13877 94D6  
                                       l13893 45E4                                         l13957 4E92  
                                       l13949 4E24                                         l13789 88E2  
                                       l13797 7FD2                                         l13981 68CA  
                                       l13973 6868                                         l14589 87BA  
                                       l14597 6956                                         l14837 7E9C  
                                       l14693 7D94                                         l14829 97C4  
                                       l14685 3E8A                                         l14677 3E32  
                                       l14669 3DC6                                         l16533 6F0C  
                                       l16525 6ED0                                         l15901 58F2  
                                       l16541 2CE6                                         l16701 4498  
                                       l16621 8674                                         l17229 9C30  
                                       l17181 2998                                         l17173 2964  
                                       l17165 292C                                         l17157 28F2  
                                       l17149 28B0                                         l15733 80B6  
                                       l15717 64EE                                         l15709 649A  
                                       l16189 5B6C                                         l16429 9CE6  
                                       l14941 85C8                                         l14933 8590  
                                       l15653 13C4                                         l15645 1340  
                                       l15581 1040                                         l15573 100C  
                                       l15565 0FD4                                         l15557 0F5E  
                                       l15661 13FC                                         l15549 0EF2  
                                       l16293 3560                                         l16285 3516  
                                       l15821 61D4                                         l15813 6174  
                                       l15805 6126                                         l16453 86E6  
                                       l15741 9C02                                         l16437 7914  
                                       l16365 7876                                         l16357 7802  
                                       l16461 7082                                         l16381 602C  
                                       l17077 3A74                                         l17501 965A  
                                       ?_cmdI 0001                                         l12999 98F6  
                                       l16519 8CD0                                         l14951 7A4E  
                                       l14943 7A14                                         l15495 49CC  
                                       l15487 491C                                         l15479 48E2  
                                       l14927 9B28                                         l15399 5BC6  
                                       l15751 4F1A                                         l14783 4032  
                                       l14775 3FD0                                         l14767 3F4C  
                                       l14759 3EFA                                         l16615 7D4A  
                                       l15911 6CF8                                         l13895 45E8  
                                       l13887 45B2                                         l13959 4E98  
                                       l13799 7FE4                                         l13983 68EA  
                                       l13975 687C                                         l13967 6836  
                                       l13991 6DEC                                         l14599 6974  
                                       l14847 7ED4                                         l14839 7EBA  
                                       l14791 6736                                         l14679 3E4E  
                                       l16527 6EE4                                         l16535 6F54  
                                       l15903 5910                                         l16551 2D44  
                                       l16543 2CF2                                         l16703 44AC  
                                       l16631 86AE                                         l15743 9150  
                                       l17191 29D0                                         l17183 299E  
                                       l17175 2974                                         l17167 2940  
                                       l17159 28F6                                         l16199 993A  
                                       l15735 80CA                                         l15727 8068  
                                       l15719 6528                                         l16447 9512  
                                       l16375 9AAA                                         l14935 85A0  
                                       l15663 140E                                         l15647 1350  
                                       l15639 12C8                                         l15655 13CC  
                                       l15591 10CC                                         l15583 1074  
                                       l15575 101E                                         l15567 1000  
                                       l15559 0F8E                                         l16287 3528  
                                       l15823 61F0                                         l15815 6190  
                                       l15807 6144                                         l16455 874E  
                                       l16439 791E                                         l16367 7890  
                                       l16359 7824                                         l16471 7106  
                                       l16463 70A2                                         l16391 60B0  
                                       l16383 603E                                         l15831 6328  
                                       l17087 3A92                                         l17095 3ABC  
                                       l17511 9674                                         l17503 965C  
                                       l14961 7A96                                         l14953 7A5C  
                                       l14945 7A24                                         l15497 4A10  
                                       l15489 4960                                         l14929 9B3A  
                                       l14881 50A6                                         l14873 507E  
                                       l15761 4F50                                         l15753 4F32  
                                       l15745 4EFC                                         l14785 4062  
                                       l14777 3FE8                                         l14769 3F7E  
                                       l15841 1D96                                         l15913 6D3C  
                                       l13897 45F6                                         l13889 45B6  
                                       l13985 68EC                                         l13977 688A  
                                       l13969 6842                                         l13993 6DF4  
                                       l14857 7EE8                                         l14689 7D5E  
                                       l14793 6746                                         l15921 1910  
                                       l16529 6EF8                                         l14865 9CAE  
                                       l15905 5918                                         l16561 2D9E  
                                       l16553 2D58                                         l16545 2D10  
                                       l16721 4524                                         l16713 44D2  
                                       l16705 44B2                                         l16633 86B2  
                                       l16641 7692                                         l15681 8126  
                                       l15673 80FA                                         l17193 29D6  
                                       l17185 29AC                                         l17177 2984  
                                       l17169 2944                                         l15737 80DA  
                                       l15729 809C                                         l16449 9522  
                                       l16457 9AC2                                         l14937 85AE  
                                       l15665 141E                                         l15657 13DC  
                                       l15649 1386                                         l15593 10DE  
                                       l15577 102A                                         l15569 1004  
                                       l16297 3576                                         l15825 6200  
                                       l16369 78A2                                         l16473 7118  
                                       l16465 70C4                                         l16393 60C0  
                                       l16385 6052                                         l16481 9BD0  
                                       l16801 03B8                                         l17089 3A9C  
                                       l17513 9678                                         l17505 966A  
                                       l14963 7AA0                                         l14955 7A66  
                                       l14947 7A3A                                         l15499 4A20  
                                       l14971 659E                                         l14867 5058  
                                       l15771 4FA4                                         l15763 4F80  
                                       l15755 4F3A                                         l15747 4F14  
                                       l14787 4076                                         l14779 3FFE  
                                       l15851 1E44                                         l15843 1DB8  
                                       l15915 6D60                                         l13899 4616  
                                       l13987 68FE                                         l13979 689C  
                                       l13995 6E08                                         l14699 7D9A  
                                       l15931 1964                                         l15923 191C  
                                       l15907 5952                                         l16571 2E1E  
                                       l16563 2DBA                                         l16555 2D64  
                                       l16547 2D20                                         l16723 452A  
                                       l16715 44E6                                         l16707 44C2  
                                       l16731 455C                                         l16635 86B4  
                                       l16627 867C                                         l16651 76E8  
                                       l16643 769A                                         l15691 814A  
                                       l15683 812C                                         l15675 810A  
                                       l17195 29F2                                         l17187 29BC  
                                       l17179 2988                                         l14939 85BE  
                                       l15667 142A                                         l15659 13EC  
                                       l15595 10F2                                         l15587 108A  
                                       l15579 103C                                         l16299 3596  
                                       l15827 6208                                         l15819 61AA  
                                       l16475 711C                                         l16467 70D8  
                                       l16459 705C                                         l16395 60D0  
                                       l16387 606E                                         l16379 600A  
                                       l16811 0444                                         l16803 03DE  
                                       l15835 6394                                         l16483 8FAA  
                                       l17507 966E                                         l16493 9260  
                                       l14957 7A84                                         l14949 7A42  
                                       l14981 662C                                         l14973 65AE  
                                       l14965 6532                                         l14893 50E2  
                                       l14885 50BA                                         l14877 5092  
                                       l14869 506A                                         l15781 4FCE  
                                       l15773 4FAA                                         l15765 4F86  
                                       l15757 4F3C                                         l15749 4F16  
                                       l15861 2010                                         l15853 1E7A  
                                       l14789 92E6                                         l15917 6D74  
                                       l15909 6CEC                                         l13997 6E16  
                                       l13989 6DCE                                         l15941 19E8  
                                       l15925 192C                                         l16581 2E84  
                                       l16565 2DE0                                         l16573 2E2E  
                                       l16557 2D74                                         l16549 2D30  
                                       l16725 4548                                         l16717 44F0  
                                       l16709 44C8                                         l16661 775C  
                                       l16637 86C4                                         l16629 869C  
                                       l16653 772A                                         l16645 76A2  
                                       l15685 8130                                         l15677 811E  
                                       l17197 2A04                                         l17189 29C0  
                                       l15669 1442                                         l15597 1104  
                                       l15589 109C                                         l16469 70EC  
                                       l16397 60EE                                         l16389 608E  
                                       l16821 04BE                                         l16813 0454  
                                       l16805 03F0                                         l16741 00B6  
                                       l15837 6414                                         l16485 8FC8  
                                       l16901 8992                                         l17509 9672  
                                       l16495 926A                                         l14959 7A94  
                                       l14991 8236                                         l14983 6632  
                                       l14975 65BC                                         l14967 6560  
                                       l15791 5006                                         l15783 4FDE  
                                       l15775 4FB6                                         l15767 4F8C  
                                       l15759 4F46                                         l15871 20EC  
                                       l15863 2034                                         l15855 1EB4  
                                       l15847 1DDC                                         l15919 6DBC  
                                       l13999 6E44                                         l14799 674A  
                                       l15951 1A3A                                         l15935 1982  
                                       l16583 2E98                                         l16567 2DFA  
                                       l16575 2E42                                         l16559 2D94  
                                       l16727 4552                                         l16719 450E  
                                       l16671 77E0                                         l16663 777A  
                                       l16639 86D4                                         l16655 773A  
                                       l16647 76C0                                         l16903 55A8  
                                       l15687 8136                                         l15695 8154  
                                       l15679 8122                                         l17199 2A08  
                                       l15599 1116                                         l16399 6100  
                                       l16479 9BE0                                         l16831 0540  
                                       l16823 04E4                                         l16815 047A  
                                       l16807 0416                                         l16751 0144  
                                       l16743 00DC                                         l16487 8FDA  
                                       l16497 927A                                         l14993 8242  
                                       l14977 65CE                                         l14969 6570  
                                       l14897 50F6                                         l14889 50CE  
                                       l15793 500C                                         l15785 4FE8  
                                       l15777 4FBA                                         l15769 4FA0  
                                       l15865 205A                                         l15857 1EF0  
                                       l15849 1E18                                         l15961 1AB2  
                                       l15937 19A2                                         l15945 19FC  
                                       l15929 194A                                         l15881 7596  
                                       l15873 7512                                         l16577 2E56  
                                       l16569 2E0A                                         l16681 4412  
                                       l16673 77F0                                         l16665 777E  
                                       l16657 774C                                         l16649 76C4  
                                       l16905 55DE                                         l15689 8140  
                                       l16841 05B4                                         l16833 0548  
                                       l16825 04EC                                         l16817 048C  
                                       l16809 041E                                         l16761 01BA  
                                       l16753 0154                                         l16745 00F0  
                                       l16499 9286                                         l14995 8250  
                                       l14987 8218                                         l14979 65DC  
                                       l15795 5024                                         l15787 4FF2  
                                       l15779 4FC4                                         l15867 2082  
                                       l15859 1F0A                                         l16595 7CBC  
                                       l15971 1B1C                                         l15963 1ACA  
                                       l15955 1A64                                         l15947 1A1C  
                                       l15939 19C8                                         l15875 7522  
                                       l15883 75AE                                         l15891 5856  
                                       l16587 2ED8                                         l16579 2E66  
                                       l16691 4450                                         l16683 441A  
                                       l16675 4404                                         l16667 77A2  
                                       l16659 7754                                         l16931 566A  
                                       l16907 55F0                                         l16915 5608  
                                       l16851 0636                                         l16843 05DA  
                                       l16835 056E                                         l16827 0512  
                                       l16819 04B6                                         l16771 0252  
                                       l16763 01E0                                         l16755 017A  
                                       l16747 0116                                         l16739 00B2  
                     __end_of_SYS_TaskHandler 9C3E                                         l14997 826E  
                                       l14989 822E                                         l15797 5046  
                                       l15789 4FFC                                         l15869 20CC  
                                       l16597 7CCC                                         l15981 1C2E  
                                       l15973 1B92                                         l15965 1AE8  
                                       l15885 75C0                                         l15877 7546  
                                       l15893 5892                                         l16589 2F2E  
                                       l16693 4458                                         l16685 442A  
                                       l16677 4408                                         l16669 77B2  
                                       l16941 5698                                         l16933 5680  
                                       l16917 561A                                         l16909 5602  
                                       l16861 06AC                                         l16853 0648  
                                       l16845 05E2                                         l16837 0580  
                                       l16829 051A                                         l16781 02BE  
                                       l16773 0262                                         l16765 01F2  
                                       l16757 0182                                         l16749 011E  
                                       l14999 827E                                         l15991 1C82  
                                       l15983 1C3E                                         l15975 1C08  
                                       l15967 1AEC                                         l15959 1A98  
                                       l15879 7582                                         l15895 58A4  
                                       l15887 5832                                         l16695 445C  
                                       l16687 4432                                         l16679 440C  
                                       l16943 56AA                                         l16951 56C4  
                                       l16919 562C                                         l16927 5646  
                                       l17831 6AE8                                         l15799 9038  
                                       l16871 0726                                         l16855 066E  
                                       l16847 0608                                         l16839 05A6  
                                       l16791 0354                                         l16783 02E4  
                                       l16775 0288                                         l16767 0218  
                                       l16759 01A8                                         l16961 88F0  
                                       l15985 1C4E                                         l15977 1C18  
                                       l15969 1B0C                                         l15993 1C96  
                                       l17841 6F2E                                         l15897 58C2  
                                       l16697 4466                                         l16689 4438  
                                       l16929 5658                                         l17833 8168  
                                       l16873 072E                                         l16865 06D6  
                                       l16857 0676                                         l16849 0610  
                                       l16793 035C                                         l16785 02F6  
                                       l16777 0290                                         l16769 022C  
                                       l16881 0780                                         l17825 3AD4  
                                       l16971 8928                                         l17851 5146  
                                       l17843 7F20                                         l15995 1CB6  
                                       l15987 1C5E                                         l15979 1C1C  
                                       l15899 58DE                                         l17835 4572  
                                       l16699 4484                                         l16939 5686  
                                       l17827 07A2                                         l16875 0754  
                                       l16859 069C                                         l16795 0382  
                                       l16787 031C                                         l16779 02B6  
                                       l17499 9656                                         l16981 894C  
                                       l16973 8938                                         l17845 08D2  
                                       l15997 1CDC                                         l15989 1C6E  
                                       l17837 8DC0                                         l16957 93A8  
                                       l17829 34DE                                         l16869 0700  
                                       l16797 038A                                         l16789 032E  
                                       l16877 0766                                         l16975 893C  
                                       l16967 890E                                         l17847 415C  
                                       l15999 1CF6                                         l17839 2EF8  
                                       l16983 9C3E                                         l16991 9CFC  
                                       l16959 9CEE                                         l16799 03B0  
                                       l16895 8964                                         l16887 8952  
                                       l16977 8940                                         l16969 8926  
                                       l17849 7D14                                         l16985 9C42  
                                       l16993 5302                                         l16897 8980  
                                       l16889 8960                                         l16979 8948  
                                       l16987 9C46                                         l16899 8982  
                                       l16989 9D02                                         l16997 5324  
                                       l16999 532E                                         ?_idle 0001  
                             __end_of___aodiv 474A                                         ?_atoi 0009  
                   __end_of_NWK_GroupIsMember 9038                                         ?_main 0001  
                                       ?_dtoa 001F                               __end_of___aomod 4EFA  
                                       ?_rand 001A                                         STR_10 FFDF  
                                       STR_11 FFD7                                         STR_12 FECC  
                                       STR_20 FF66                                         STR_21 FECC  
                                       STR_13 FE73                                         STR_22 FECC  
                                       STR_14 FFDF                                         STR_30 FE22  
                                       STR_15 FFD7                                         STR_23 FFDF  
                                       STR_31 FE9A                                         STR_24 FECC  
                                       STR_32 FFDF                                         STR_16 FFDC  
                                       STR_40 FE80                                         STR_33 FECC  
                                       STR_25 FECC                                         STR_41 FFDF  
                                       STR_17 FFF5                                 __CFG_WDTE$OFF 000000  
                                       STR_18 FFD4                                         STR_34 FFD7  
                                       STR_26 FFD7                                         STR_50 FECC  
                                       STR_42 FECC                                         STR_51 FFD7  
                                       STR_43 FFD7                                         STR_19 FFD7  
                                       STR_35 FE65                                         STR_27 FE0D  
                                       STR_28 FFD7                                         STR_52 FFDF  
                                       STR_36 FFDF                                         STR_44 FFEB  
                                       STR_60 FF61                                         STR_37 FECC  
                                       STR_61 FF61                                         STR_45 FFEB  
                                       STR_53 FFFD                                         STR_29 FE34  
                                       STR_38 FECC                                         STR_46 FFC0  
                                       STR_54 FF39                                         STR_62 FF30  
                                       STR_70 FED8                                         STR_39 FFD7  
                                       STR_55 FFDF                                         STR_71 FED8  
                                       STR_47 FFC0                                         STR_63 FF30  
                                       STR_56 FECC                                         STR_48 FFC6  
                                       STR_64 FFA7                                         STR_80 FF76  
                                       STR_72 FF51                                         STR_57 FFD7  
                                       STR_81 FF76                                         STR_73 FF51  
                                       STR_65 FFA7                                         STR_49 FFC6  
                                       STR_66 FFE6                                         STR_74 FF68  
                                       STR_82 FF15                                         STR_90 FEE3  
                                       STR_58 FEB4                                         STR_59 FFD7  
                                       STR_83 FF15                                         STR_75 FF68  
                                       STR_91 FEE3                                         STR_67 FFE6  
                                       STR_68 FFE1                                         STR_92 FF99  
                                       STR_76 FF0B                                         STR_84 FEA7  
                                       STR_69 FFE1                                         STR_85 FEA7  
                                       STR_93 FF99                                         STR_77 FF0B  
                                       STR_78 FF92                                         STR_94 FF7D  
                                       STR_86 FE56                                         STR_95 FF7D  
                                       STR_79 FF92                                         STR_87 FE56  
                                       STR_96 FF1E                                         STR_88 FEF7  
                                       STR_97 FF1E                                         STR_89 FEF7  
                                       STR_98 FFFA                                         STR_99 FFFA  
                          _implicitHeaderMode 9B22                                         ?_stoa 000D  
                       nwkDataReqConfirm@prev 0006                               __end_of___lldiv 7AC0  
                                       ?_utoa 001F                                         u10400 9A3C  
                                       u11200 9108                                         u10401 9A38  
                                       u11201 9104                                         u10410 6662  
                                       u11210 7C4E                                         u10411 665E  
                                       u11211 7C4A                                         u10500 8D36  
                                       u10420 6686                                         u11220 7C7E  
                                       u10501 8D32                                         u10421 6682  
                                       u11221 7C7A                                         u10510 9654  
                                       u10430 66C0                                         u11230 7C8E  
                                       u10511 9650                                         u10431 66BC  
                                       u11231 7C8A                                         u13000 427E  
                                       u13001 427A                                         u13010 42BC  
                                       u10450 6704                                         u13011 42B8  
                             __end_of___lodiv 6936                                         u10451 6700  
                                       u13020 42DA                                         u13100 3398  
                                       u10444 66DA                                         u13021 42D6  
                                       u13101 3394                                         u10445 66D4  
                                       u13030 4312                                         u13110 33B6  
                                       u13031 430E                                         u13111 33B2  
                                       ?_xtoa 001F                                         u14000 3F34  
                                       u12400 801E                                         u13040 4350  
                                       u13120 33D0                                         u13200 256A  
                             __end_of___llmod 82A8                                         u14001 3F30  
                                       u12401 801A                                         u13041 434C  
                                       u13121 33CC                                         u10490 97C2  
                                       u14010 3F7E                                         u12410 8054  
                                       u13050 43A8                                         u13130 33EA  
                                       u13210 2580                                         u10810 8A20  
                                       _U1P1H 003DED                                         u10491 97BE  
                                       u14011 3F7A                                         u12411 8050  
                                       u13051 43A4                                         u13131 33E6  
                                       u13211 257C                                         u10811 8A1C  
                                       u14020 3F98                                         u12420 8B60  
                                       u12500 6CB2                                         u13060 43B8  
                                       u13140 33FA                                         u13300 2702  
                                       u13220 25B4                                         u14100 7EBA  
                                       u10820 8A56                                         _U1P2H 003DEF  
                                       u14021 3F94                                         u12501 6CAE  
                                       u13061 43B4                                         u13141 33F6  
                                       u13301 26FE                                         u13221 25AE  
                                       u14101 7EB6                                         u10821 8A52  
                                       u14030 401E                                         u12510 8E98  
                                       u12350 88A0                                         u12430 8B70  
                                       u13070 43F6                                         u13310 2712  
                                       u13230 25B6                                         u13150 245C  
                                       u10830 9B06                                         u14110 85AE  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u14031 401A                                         u12511 8E94  
                                       u12351 889C                                         u12431 8B6C  
                                       u13071 43F2                                         u13311 270E  
                                       u13151 2458                                         u10831 9B00  
                                       u14111 85AA                                         u13400 925E  
                                       u14200 662C                                         u12600 950C  
                                       u13320 40CA                                         u12360 88B0  
                                       u12440 8F5C                                         u13080 31D8  
                                       u12520 9492                                         u13240 25CC  
                                       u13160 2478                                         u14040 6764  
                                       u10840 9B08                                         u15000 5234  
                                       u14120 85E8                                         _U1P2L 003DEE  
                                       u13401 925A                                         u14201 6628  
                                       u13321 40C6                                         u12361 88AC  
                                       u12441 8F58                                         u13081 31D4  
                                       u12521 948C                                         u13241 25C8  
                                       u13161 2474                                         u14041 6760  
                                       u15001 5230                                         u14121 85E4  
                                       u14130 7A3A                                         u14210 822E  
                                       u13410 81B4                                         u13330 4106  
                                       u12610 45C4                                         u12370 88E2  
                                       u13090 31F4                                         u12530 9494  
                                       u12450 9456                                         u13250 264E  
                                       u13170 24AA                                         u14050 6784  
                                       u15010 5256                                         _U1P3L 003DF0  
                                       u14131 7A36                                         u14211 822A  
                                       u13411 81B0                                         u13331 4102  
                                       u12611 45C0                                         u12371 88DE  
                                       u12427 8B52                                         u13091 31F0  
                                       u12451 9450                                         u13171 24A6  
                                       u14051 6780                                         u15011 5252  
                                       u14140 7A5C                                         u14220 8250  
                                       u14300 3C76                                         u13420 81D6  
                                       u13340 4124                                         u12620 45F6  
                                       u12700 4E08                                         u12380 7FE4  
                                       u12540 94CE                                         u12460 9458  
                                       u13260 26A0                                         u13180 251E  
                                       u13500 09AA                                         u14060 67A6  
                                       u15020 5268                                         u15100 0F4A  
                                       u14141 7A58                                         u14221 824C  
                                       u14301 3C72                                         u13421 81D0  
                                       u13341 4120                                         u12621 45F2  
                                       u12701 4E04                                         u12381 7FE0  
                                       u12541 94C8                                         u13261 269C  
                                       u13181 251A                                         u13501 09A6  
                                       u14061 67A2                                         u15021 5264  
                                       u14150 7A84                                         u14230 826E  
                                       u14310 3C84                                         u13430 81E8  
                                       u13350 41F0                                         u12710 4E32  
                                       u12390 7FF6                                         u12470 6C1A  
                                       u12550 94D0                                         u13270 26BE  
                                       u13190 2568                                         u13510 0A44  
                                       u14070 67D0                                         u15030 52B8  
                                       u15110 0F5A                                         u14151 7A80  
                                       u14231 826A                                         u14311 3C80  
                                       u13431 81E4                                         u13351 41EA  
                                       u12631 4620                                         u12711 4E2E  
                                       u12391 7FF2                                         u12471 6C16  
                                       u13271 26BA                                         u13255 263C  
                                       u13191 2562                                         u13511 0A3E  
                                       u14071 67CC                                         u15031 52B4  
                                       u15111 0F56                                         u14160 6560  
                                       u14320 3CC2                                         u14240 3B26  
                                       u13440 820E                                         u13360 41F2  
                                       u12640 4644                                         u12720 4E60  
                                       u12480 6C44                                         u12800 6E44  
                                       u12560 885A                                         u13280 26D8  
                                       u13600 0E54                                         u13520 0A46  
                                       u14080 67F6                                         u14400 36BA  
                                       u16000 1CDC                                         u15040 52E2  
                                       u15200 109C                                         u15120 0F88  
                                       u14161 655C                                         u14321 3CBE  
                                       u14241 3B22                                         u13441 820A  
                                       u12641 4640                                         u12721 4E5C  
                                       u12481 6C40                                         u12801 6E40  
                                       u12561 8854                                         u13281 26D4  
                                       u13601 0E50                                         u14081 67F2  
                                       u14401 36B6                                         u16001 1CD8  
                                       u15201 1098                                         u14170 659E  
                                       u14330 3CD0                                         u14250 3B34  
                                       u13426 81D8                                         u12810 8C48  
                                       u13370 4208                                         u12650 466E  
                                       u12730 4EA8                                         u12490 6CA2  
                                       u12570 885C                                         u13290 26F2  
                                       u13530 0A5E                                         u13450 91F2  
                                       u13610 73A0                                         u14410 36EA  
                                       u14090 9614                                         u16010 1CF6  
                                       u15210 10CA                                         u15130 0FBC  
                                       u15050 84D4                                         u14171 659A  
                                       u14331 3CCC                                         u14251 3B30  
                                       u12811 8C44                                         u13371 4204  
                                       u12651 466A                                         u12731 4EA4  
                                       u12491 6C9E                                         u13291 26EE  
                                       u13531 0A5A                                         u13451 91EE  
                                       u13611 739C                                         u14411 36E6  
                                       u14091 9610                                         u16011 1CF2  
                                       u15035 52A8                                         u15107 0F3C  
                                       u15051 84D0                                         u14180 65BC  
                                       u14260 3BA8                                         u12820 8C7A  
                                       u13380 421A                                         u12660 46AE  
                                       u12900 21E6                                         u12580 8872  
                                       u13540 0A8C                                         u13460 0830  
                                       u13620 73E2                                         u16100 5EBE  
                                       u14500 381E                                         u14420 370E  
                                       u16020 1D2C                                         u14340 7F62  
                                       u15300 11AA                                         u15220 10DE  
                                       u15140 0FD4                                         u15060 850C  
                                       u14181 65B8                                         u14261 3BA4  
                                       u13701 796C                                         u12821 8C76  
                                       u13381 4216                                         u12661 46AA  
                                       u12901 21E2                                         u12741 683C  
                                       u12581 886E                                         u13541 0A88  
                                       u13461 082C                                         u13621 73DE  
                                       u16101 5EBA                                         u14501 381A  
                                       u14421 370A                                         u16021 1D28  
                                       u15037 529A                                         u15301 11A6  
                                       u15221 10DA                                         u15141 0FD0  
                                       u15061 8508                                         u12830 98AA  
                                       u13390 92E4                                         u14190 65DC  
                                       u14270 3BFE                                         u13710 7980  
                                       u14510 6B3E                                         u12590 950A  
                                       u12670 46F8                                         u12910 2354  
                                       u12750 6860                                         u13550 0ABA  
                                       u13470 0912                                         u13630 7402  
                                       u16110 5ED6                                         u14430 3750  
                                       u16030 1D4C                                         u14350 7F72  
                                       u15310 1228                                         u15230 10F2  
                                       u15150 1000                                         u15070 854A  
                                       u12831 98A6                                         u13391 92E0  
                                       u14191 65D8                                         u14271 3BFA  
                                       u13711 797C                                         u14511 6B3A  
                                       u12591 9504                                         u12671 46F4  
                                       u12911 2350                                         u12751 685C  
                                       u13551 0AB6                                         u13471 090E  
                                       u13631 73FE                                         u16111 5ED2  
                                       u14431 374C                                         u16031 1D48  
                                       u14351 7F6E                                         u15047 52D4  
                                       u15311 1222                                         u15231 10EE  
                                       u15151 0FFC                                         u15127 0F7A  
                                       u15071 8546                                         u14280 3C48  
                                       u13800 5796                                         u13720 79E2  
                                       u12680 4D98                                         u12920 2372  
                                       u12840 213E                                         u12760 688A  
                                       u13560 0B96                                         u13480 0920  
                                       u13640 7448                                         u14440 3774  
                                       u14600 2AB2                                         u16040 1D84  
                                       u14520 4C2A                                         u16200 748E  
                                       u16120 5CF2                                         u14360 7FB8  
                                       u15400 1350                                         u15320 122A  
                                       u15240 1104                                         u15160 101E  
                                       u15080 8582                                         u17000 05A6  
                                       u14281 3C44                                         u13801 5792  
                                       u13721 79DE                                         u12681 4D94  
                                       u12921 236E                                         u12841 2138  
                                       u12761 6886                               __end_of___lomod 6EAE  
                                       u13561 0B92                                         u13481 091C  
                                       u13641 7444                                         u14441 3770  
                                       u14601 2AAE                                         u16041 1D80  
                                       u14521 4C26                                         u16201 748A  
                                       u16121 5CEE                                         u15401 134C  
                                       u15241 1100                                         u15217 10BC  
                                       u15161 101A                                         u15137 0FAE  
                                       u15081 857E                                         u17001 05A2  
                                       u14290 3C66                                         u13730 4768  
                                       u13650 901C                                         u13810 57C2  
                                       u12690 4DCA                                         u12930 238C  
                                       u12850 2140                                         u12770 68CA  
                                       u13570 0C3A                                         u13490 0950  
                                       u16050 5E18                                         u14450 379A  
                                       u14610 2AE8                                         u14530 4C60  
                                       u16210 749C                                         u16130 5D3C  
                                       u14370 7FC8                                         u15410 136E  
                                       u15330 1240                                         u15250 1116  
                                       u15170 103C                                         u15090 0F20  
                                       u17010 05DA                                         u14291 3C62  
                                       u13731 4764                                         u13651 9018  
                                       u13811 57BE                                         u12691 4DC6  
                                       u12931 2388                                         u12771 68C6  
                                       u13571 0C36                                         u13491 094C  
                                       u16051 5E14                                         u14451 3796  
                                       u14611 2AE4                                         u14531 4C5C  
                                       u16211 7498                                         u16131 5D38  
                                       u14371 7FC4                                         u14347 7F54  
                                       u15411 136A                                         u15331 123C  
                                       u15251 1112                                         u15171 1038  
                                       u15091 0F1C                                         u17011 05D6  
                                       u13740 47B2                                         u13660 9034  
                                       u12940 23A6                                         u12860 2156  
                                       u12780 6DEC                                         u13580 0D1C  
                                       u13820 8788                                         u16060 5E3C  
                                       u14460 37B0                                         u13900 3D00  
                                       u14700 5478                                         u14540 4C96  
                                       u16140 5D50                                         u14380 8F06  
                                       u15500 649A                                         u15420 13C2  
                                       u15340 1284                                         u15260 114C  
                                       u15180 106E                                         u16220 4B36  
                                       u16300 3528                                         u17020 0608  
                                       u17100 8992                                         u13741 47AE  
                                       u13661 9030                                         u12941 23A2  
                                       u12861 2152                                         u12781 6DE8  
                                       u13581 0D18                                         u13821 8784  
                                       u16061 5E38                                         u14461 37AA  
                                       u13901 3CFC                                         u14701 5474  
                                       u14541 4C92                                         u16141 5D4C  
                                       u14381 8F02                                         u15501 6496  
                                       u15341 127E                                         u16221 4B32  
                                       u16301 3524                                         u17021 0604  
                                       u17101 898E                                         u13750 482C  
                                       u13670 8D6C                                         u12950 23B6  
                                       u12870 2186                                         u12790 6E16  
                                       u13590 0D4A                                         u13830 6974  
                                       u14710 2FA0                                         u16070 5E62  
                                       u14470 37B2                                         u13910 3D66  
                                       u14630 2B26                                         u14550 4CB2  
                                       u16150 5D8A                                         u17110 55F0  
                                       u15510 64EE                                         u16230 5AC6  
                                       u15430 13DC                                         u15350 1286  
                                       u15270 1168                                         u15190 1086  
                                       u16310 3560                                         u17030 0636  
                                       u13751 4828                                         u13671 8D68  
                                       u12951 23B2                                         u12871 2182  
                                       u12791 6E12                                         u13591 0D46  
                                       u13831 6970                                         u14711 2F9C  
                                       u16071 5E5E                                         u13911 3D62  
                                       u14631 2B22                                         u14551 4CAE  
                                       u16151 5D86                                         u17111 55EC  
                                       u14367 7FAA                                         u15511 64EA  
                                       u16231 5AC2                                         u15431 13D8  
                                       u15271 1164                                         u15191 1082  
                                       u16311 355C                                         u17031 0632  
                                       u14800 940A                                         u13760 4876  
                                       u15600 1DB8                                         u12960 23C8  
                                       u12880 21A2                                         u13680 913E  
                                       u13840 6998                                         u14720 3074  
                                       u16080 5E7E                                         u14480 37E4  
                                       u13920 3DD8                                         u14640 2B4C  
                                       u14624 2B0C                                         u14560 4CD8  
                                       u16160 5DA2                                         u17200 5316  
                                       u17120 5602                                         u15520 6518  
                                       u16240 5AEC                                         u15440 13EC  
                                       u15360 129C                                         u15280 1182  
                                       u16320 3612                                         u16400 78E0  
                                       u17040 066E                                         u14801 9406  
                                       u13761 4872                                         u15601 1DB4  
                                       u12961 23C4                                         u12881 219E  
                                       u13681 913A                                         u13841 6994  
                                       u14721 3070                                         u16081 5E7A  
                                       u14481 37E0                                         u13921 3DD4  
                                       u14641 2B48                                         u14625 2B08  
                                       u14561 4CD4                                         u16161 5D9E  
                                       u17201 5312                                         u17121 55FE  
                                       u16241 5AE8                                         u15441 13E8  
                                       u15361 1298                                         u15281 117E  
                                       u16321 360E                                         u16401 78DC  
                                       u17041 066A                                         u14810 5BBE  
                                       u13770 48E0                                         u15610 1E40  
                                       u12970 23D8                                         u12890 21D8  
                                       u13690 8496                                         u13850 69C2  
                                       u14730 309E                                         u14570 6240  
                                       u16090 5EA4                                         u14490 380E  
                                       u13930 3E0E                                         u16170 5DC0  
                                       u17210 539C                                         u17130 561A  
                                       u15530 6528                                         u15450 140E  
                                       u15370 12C4                                         u15290 119A  
                                       u16330 367A                                         u16250 7BD2  
                                       u16410 7914                                         u17050 069C  
                                       u14811 5BBA                                         u13771 48DC  
                                       u15611 1E3A                                         u12971 23D4  
                                       u12891 21D4                                         u13691 8492  
                                       u13851 69BE                                         u14731 309A  
                                       u14571 623C                                         u16091 5EA0  
                                       u14491 380A                                         u13931 3E0A  
                                       u16171 5DBC                                         u17211 5398  
                                       u14395 8F10                                         u17131 5616  
                                       u15531 6524                                         u15451 140A  
                                       u15427 13B4                                         u15371 12C0  
                                       u15291 1196                                         u15267 113E  
                                       u15187 1060                                         u16331 3676  
                                       u16251 7BCE                                         u16411 7910  
                                       u17051 0698                                         u14900 173C  
                                       u14820 5BD6                                         u13780 5722  
                                       u15620 1E42                                         u12980 23F0  
                                       u13860 6A24                                         u13940 7DCE  
                                       u14740 30C8                                         u15700 7546  
                                       u16500 2DBA                                         u16180 5DDE  
                                       u14396 8F12                                         u17140 562C  
                                       u15540 80B6                                         u15460 141E  
                                       u15380 12D8                                         u16260 7BE6  
                                       u16420 7948                                         u16340 7876  
                                       u17060 06D2                                         u17300 393C  
                                       u14901 1738                                         u14821 5BD2  
                                       u13781 571E                                         u12981 23EC  
                                       u13861 6A20                                         u13941 7DCA  
                                       u14741 30C4                                         u15701 7542  
                                       u16501 2DB6                                         u16181 5DDA  
                                       u17141 5628                                         u15541 80B2  
                                       u15461 141A                                         u15381 12D4  
                                       u16261 7BE2                                         u16421 7944  
                                       u16341 7872                                         u17061 06CE  
                                       u17301 3938                                         u14910 17A8  
                                       u14830 5C2E                                         u13950 83F4  
                                       u13790 5754                                         u13870 5FF6  
                                       u15630 1E62                                         u14750 30F8  
                                       u14670 2C3E                                         u14654 2B96  
                                       u14590 2A82                                         u15710 75C0  
                                       u16510 2DE0                                         u16190 7480  
                                       u17230 53FC                                         u17150 5658  
                                       u15470 810A                                         u16270 8C20  
                                       u15390 1340                                         u15550 6126  
                                       u16430 70D8                                         u16350 603E  
                                       u17070 06FC                                         u17310 3964  
                                       u14911 17A4                                         u13791 5750  
                                       u15631 1E5A                                         u12991 4256  
                                       u14751 30F4                                         u14671 2C3A  
                                       u14655 2B92                                         u14591 2A7E  
                                       u15711 75BC                                         u16511 2DDC  
                                       u16191 747C                                         u17231 53F8  
                                       u17151 5654                                         u15471 8106  
                                       u15527 650A                                         u16271 8C1C  
                                       u15391 133C                                         u15551 6122  
                                       u16431 70D4                                         u16351 603A  
                                       u17071 06F8                                         u17311 3960  
                                       u14920 1814                                         u14840 14B4  
                                       u13960 842A                                         u14760 3138  
                                       u13880 8AEE                                         u14680 2C5C  
                                       u14664 2C02                                         u15800 1964  
                                       u15720 5852                                         u16520 2DFA  
                                       u16600 76C0                                         u17240 5426  
                                       u17160 566A                                         u15480 811A  
                                       u17400 27F2                                         u16280 3464  
                                       u15560 6144                                         u16440 70EC  
                                       u16360 60C0                                         u17080 0726  
                                       u17320 3978                                         u14921 1810  
                                       u14841 14B0                                         u13961 8426  
                                       u14761 3134                                         u14585 6298  
                                       u13881 8AEA                                         u14681 2C58  
                                       u14665 2BFE                                         u15801 1960  
                                       u15721 584E                                         u16521 2DF6  
                                       u16601 76BC                                         u17241 5422  
                                       u17161 5666                                         u15481 8116  
                                       u17401 27EE                                         u16281 3460  
                                       u15561 6140                                         u16441 70E8  
                                       u16361 60BC                                         u17081 0722  
                                       u17321 3974                                         u14930 1874  
                                       u14850 1520                                         u13970 7220  
                                       u15650 1E98                                         u14770 3168  
                                       u14586 629A                                         u13890 8B1E  
                                       u14690 2C6E                                         u15810 197E  
                                       u15730 58A4                                         u16530 2E84  
                                       u16610 76E8                                         u17250 5438  
                                       u17170 5698                                         u17410 2826  
                                       u15490 6440                                         u16290 34CC  
                                       u15570 6190                                         u16370 60D0  
                                       u17090 0754                                         u16450 8FC8  
                                       u17330 39AA                                         u14851 151C  
                                       u14835 5C24                                         u13971 721C  
                                       u13875 5FE4                                         u15651 1E90  
                                       u14771 3164                                         u13891 8B1A  
                                       u14691 2C6A                                         u15811 197A  
                                       u15731 58A0                                         u16531 2E80  
                                       u16611 76E4                                         u17251 5434  
                                       u17171 5694                                         u17411 2822  
                                       u15491 643C                                         u15571 618C  
                                       u16371 60CC                                         u17091 0750  
                                       u16451 8FC4                                         u17331 39A6  
                                       u16460 8CB2                                         u14940 8E42  
                                       u14860 158C                                         u13980 72BC  
                                       u15900 1B0C                                         u15820 19A2  
                                       u15740 58BE                                         u16700 4484  
                                       u16620 772A                                         u17228 53D6  
                                       u17180 56AA                                         u17500 2984  
                                       u17420 2866                                         u15580 61F0  
                                       u16380 71A8                                         u17340 39BE  
                                       u17260 38E4                                         u16461 8CAE  
                                       u14941 8E3E                                         u14861 1588  
                                       u13957 83E6                                         u13981 72B8  
                                       u15901 1B08                                         u15821 199E  
                                       u15741 58BA                                         u16701 4480  
                                       u16621 7726                                         u17229 53E8  
                                       u17181 56A6                                         u17501 2980  
                                       u17421 2862                                         u15581 61EC  
                                       u16381 71A4                                         u17341 39BA  
                                       u17261 38E0                                         u17190 8938  
                                       u14950 8E5A                                         u14870 15F8  
                                       u14790 93F6                                         u13990 3EE6  
                                       u15670 1ED2                                         u15910 1B1C  
                                       u15830 19C8                                         u16470 6F84  
                                       u15750 58DE                                         u16550 2F5C  
                                       u16710 4498                                         u16630 773A  
                                       u17510 29BC                                         u17430 289C  
                                       u16390 71BC                                         u15590 6390  
                                       u17350 39E6                                         u17270 38F4  
                              __CFG_DEBUG$OFF 000000                                         u17191 8934  
                                       u14951 8E56                                         u14935 186A  
                                       u14871 15F4                                         u14791 93F2  
                                       u13991 3EE2                                         u15671 1ECA  
                                       u15911 1B18                                         u15831 19C4  
                                       u16471 6F80                                         u15751 58DA  
                                       u16551 2F58                                         u16711 4494  
                                       u16631 7736                                         u17511 29B8  
                                       u17431 2898                                         u16391 71B8  
                                       u15591 638C                                         u17351 39E2  
                                       u17271 38F0                                         u14960 8F70  
                                       u14880 1664                                         u15648 1E64  
                                       u16560 7D5C                                         u15920 1B3E  
                                       u15840 19E8                                         u15760 5910  
                                       u16480 2D10                                         u16720 44C2  
                                       u16640 777A                                         u17520 2A04  
                                       u17440 28AC                                         u16800 01A8  
                                       u17360 3A00                                         u17280 390C  
                                       u14961 8F6C                                         u14881 1660  
                                       u16561 7D58                                         u15921 1B38  
                                       u15841 19E4                                         u15761 590C  
                                       u16481 2D0C                                         u16721 44BE  
                                       u16641 7776                                         u17521 2A00  
                                       u17441 28A8                                         u16297 34BE  
                                       u16801 01A4                                         u17361 39FC  
                                       u17281 3908                                         u14970 4A74  
                                       u14890 16D0                                         u15690 1F0A  
                                       u15930 1B40                                         u15850 1A1C  
                                       u15770 5952                                         u16490 2D58  
                                       u16730 450E                                         u16650 77A2  
                                       u16570 869C                                         u17450 28E2  
                                       u16810 01E0                                         u17370 3A42  
                                       u17290 391E                                         u14971 4A70  
                                       u14891 16CC                                         u15691 1F06  
                                       u15851 1A18                                         u15771 594E  
                                       u16491 2D54                                         u16731 450A  
                                       u16651 779E                                         u16571 8698  
                                       u17451 28DE                                         u16811 01DC  
                                       u17371 3A3E                                         u17291 391A  
                                       u15668 1E9A                                         u15780 6D3C  
                                       u14788 31B4                                         u15940 1BB4  
                                       u15860 1A36                                         u16548 2EC2  
                                       u16740 4524                                         u16660 77E0  
                                       u16580 86C4                                         u17460 28F2  
                                       u14980 51E0                                         u16900 03B0  
                                       u16820 0218                                         u17380 3A5A  
                                       u15781 6D38                                         u14789 31C6  
                                       u15941 1BAE                                         u15861 1A32  
                                       u16549 2ED4                                         u16741 4520  
                                       u16661 77DC                                         u16581 86C0  
                                       u17461 28EE                                         u14981 51DC  
                                       u16901 03AC                                         u16821 0214  
                                       u17381 3A56                                         u15950 1BB6  
                                       u15870 1A60                                         u15790 1946  
                                       u16750 4548                                         u16670 77F0  
                                       u16590 86D4                                         u17470 292C  
                                       u14990 5224                                         u16910 03DE  
                                       u16830 0252                                         u17390 3A74  
                                       u15871 1A5C                                         u15791 1942  
                                       u16751 4544                                         u16671 77EC  
                                       u16591 86D0                                         u17471 2928  
                                       u16911 03DA                                         u16831 024E  
                                       u17391 3A70                                         u15688 1ED4  
                                       u15960 1C18                                         u15880 1A94  
                                       u16680 442A                                         u17480 2940  
                                       u16920 0416                                         u16840 0288  
                                       u16760 00DC                                         u15961 1C14  
                                       u15881 1A90                                         u16681 4426  
                                       u17481 293C                                         u16921 0412  
                                       u16841 0284                                         u16761 00D8  
                                       u15970 1C4E                                         u15890 1AB2  
                                       u16690 4450                                         u17490 2974  
                                       u16930 0444                                         u16850 02B6  
                                       u16770 0116                                         u15971 1C4A  
                                       u15891 1AAE                                         u16691 444C  
                                       u17491 2970                                         u16931 0440  
                                       u16851 02B2                                         u16771 0112  
                                       u15980 1C6E                                         u16940 047A  
                                       u16860 02E4                                         u16780 0144  
                                       u15981 1C6A                                         u14997 5216  
                                       u16941 0476                                         u16861 02E0  
                                       u16781 0140                                         u15990 1CB6  
                                       u16950 04B6                                         u16870 031C  
                                       u16790 017A                                         u15991 1CB2  
                                       u16951 04B2                                         u16871 0318  
                                       u16791 0176                                         u16960 04E4  
                                       u16880 0354                                         u16961 04E0  
                                       u16881 0350                                         u16970 0512  
                                       u16890 0382                                         u17907 4F06  
                                       u16971 050E                                         u16891 037E  
                                       u16980 0540                                         u17917 4F24  
                                       u16981 053C                                         u16990 056E  
                                       u17927 5016                                         u16991 056A  
                                       _U1UIR 003DF8                                         u17897 953A  
                                       _U1RXB 003DE8                                   computeFRF@i 002F  
                                       _U1TXB 003DEA                                         i1l967 7E94  
                                       i1l968 7E9A                           ??_UART1_rx_vect_isr 0001  
                           ?_NWK_OpenEndpoint 0002                                         _OSCEN 0039DD  
                             __end_of_cmdAddr 995A                                  vfpfcnvrt@fmt 0048  
                               strtoul@endptr 0036                                         _TMR0H 003FB7  
                                vfpfcnvrt@llu 006F                                         _TMR0L 003FB6  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                   _Default_ISR 9D24  
                             __end_of_cmdRecv 9D18                               __end_of_cmdSend 4C00  
                   ??_CRC_CalculatedResultGet 000B             __size_of_TMR0_SetInterruptHandler 000E  
                         ___lmul@multiplicand 0006                     ?_TMR0_SetInterruptHandler 0002  
                          ??_NWK_OpenEndpoint 0004                              __end_of_TMR0_ISR 993A  
                           _UART1_tx_vect_isr 96E0                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                    __end_of_NWK_RouteNextHop 8D8E                        cmdSetCADRSSI@atCommand 007D  
                             _DATAEE_ReadByte 99D6                           ?_implicitHeaderMode 0001  
                        __size_of_cmdSetNaddr 007E                              __end_of_PHY_Init 9D08  
               nwkRouteSendRouteError@command 002F                         __end_of_Timer0Handler 7E9C  
                                       _flags 00E4                          __size_of_cmdSendSink 0002  
                   __size_of_CRC_ReverseValue 0072                                         _errno 0159  
                                       _fputc 7FD2                               __end_of_isalpha 94D6  
                                       _fputs 8F14                               __end_of_isdigit 9512  
                       ?_SYS_TimerTaskHandler 0001                                         _nwkIb 0100  
                            __end_of_NWK_Init 8952                            __CFG_MCLRE$EXTMCLR 000000  
                          ?_UART1_tx_vect_isr 0001                               __end_of_receive 8FA8  
                                       _srand 9586                                         atoi@n 0016  
                                       pad@fp 0014                                         atoi@s 0009  
                                       _width 015F                                         _putch 9CDC  
                                       dtoa@d 0021                                         dtoa@i 0041  
                                       dtoa@n 0039                                         dtoa@p 0033  
                                       dtoa@s 0037                                         dtoa@w 0035  
                             __end_of_islower 945E                               __end_of_isspace 8C88  
                             __end_of_isupper 949A                                         pclath 003FFA  
                                       tablat 003FF5                              _nwkTxTaskHandler 2CE6  
                           nwkRxSendAck@frame 002A                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 0019  
                                       stoa@l 0021                                         stoa@p 001F  
                                       stoa@s 000F                                         stoa@w 001B  
                         nwkDataReqTxConf@req 0008                                         utoa@d 0021  
                                       utoa@i 003D                                         utoa@n 0035  
                                       utoa@p 0031                                         utoa@w 0033  
                 nwkTxConvertPhyStatus@status 0004                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 9C76                   _UART1_SetRxInterruptHandler 9C68  
                __size_of_nwkRxServiceDataInd 009C                                         xtoa@c 0044  
                                       xtoa@d 0021                                         xtoa@i 0042  
                                       xtoa@n 003A                                         xtoa@p 0036  
                                       xtoa@w 0038                                         xtoa@x 0029  
             nwkTxAckWaitTimerHandler@restart 0016                               __end_of_strcspn 8590  
                             __end_of_strncmp 5302                               __end_of_toupper 888C  
                            ___lodiv@dividend 0002           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 9D2A     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 9D28                               __end_of_strtoul 90C4  
                     SX1276WriteBuffer@buffer 0009                           ??_UART1_tx_vect_isr 0001  
                            __end_of_SYS_Init 9C5A                     __end_of_UART1_rx_vect_isr 973E  
                    __size_of_SPI1_Initialize 001A                    __size_of_setPreambleLength 0018  
                              nwkFrameAlloc@i 0012                                  _toupper$7578 000E  
                           nwkTxConfirm@frame 0002                               ?_setCodingRate4 0001  
                             __initialization 6F86                    __end_of_NWK_RouteFindEntry 8218  
                        ??_implicitHeaderMode 0011                                  __end_of_cmdI 9CFC  
                                __end_of_idle 9CBA                                  __end_of_atoi 424C  
                                __end_of_main 9684                                  __end_of_dtoa 244C  
                                __end_of_rand 600A                             nwkFrameNext@frame 0002  
                 SYS_TimerTaskHandler@elapsed 001E                                  __end_of_stoa 4404  
                                __end_of_utoa 3430                                  __end_of_xtoa 2776  
                              __CFG_SAFEN$OFF 000000                   ??_UART1_DefaultErrorHandler 0001  
                             ?_SYS_TimerStart 0010                           __size_of_SX1276Read 0018  
                       ??_CircularBufferSpace 000C                               cmdSend@destaddr 00BF  
                  __end_of_NWK_RouteFreeEntry 921C                              _need_radio_reset 0170  
                            ??_CRC_Initialize 0002                                  ?_UART1_Write 0001  
                                      ??_cmdI 005C                             cmdSetSF@atCommand 007D  
                                      ??_idle 0011                                        ??_atoi 000B  
                                      ??_main 005E                                        ??_dtoa 0029  
                                      ??_rand 001C                                __CFG_PR1WAY$ON 000000  
                                      ??_stoa 0011                                        ??_utoa 0029  
                                      ??_xtoa 002A                                 __activetblptr 000003  
                 __size_of_getSignalBandwidth 0156                   __size_of_setSignalBandwidth 04B4  
        __size_of_UART1_SetTxInterruptHandler 000E                           executeATCommand@cmd 00CB  
                   __end_of_UART1_tx_vect_isr 970E                                __CFG_MVECEN$ON 000000  
                  __end_of_nwkRxIndicateFrame 31C8                               ??_queueLedEvent 001F  
                         computeFRF@frequency 0023                              ___lodiv@quotient 0012  
                    __end_of_executeATCommand 0802                           CRC_ReverseValue@crc 0002  
                            _UART1_Initialize 7AC0                      ??_CircularBufferPushBack 0017  
                              _nwkDataReqInit 9CC6                         queueLedEvent@duration 001D  
                DIO0_Receive_ISR@packetLength 001A                           NWK_RouteNextHop@dst 0008  
                           ??_start_radio_cad 0011                           _bootLoadApplication 2776  
                __end_of_nwkRxRejectDuplicate 2CE6                  __size_of_nwkDataReqSendFrame 0368  
                                      ?_fputc 0004                              ___llmod@dividend 0002  
                                      STR_100 FFB4                                        STR_101 FFB4  
                                      STR_110 FFCC                                        STR_102 FF84  
                                      ?_fputs 000D                                        STR_103 FF84  
                                      STR_111 FFCC                                        STR_120 FFBA  
                                      STR_112 FF8B                                        STR_104 FF59  
                                      STR_113 FF8B                                        STR_121 FFBA  
                                      STR_105 FF59                                        STR_122 FFAE  
                                      STR_114 FF6F                                        STR_106 FF49  
                                      STR_130 FDF3                                        STR_115 FF6F  
                                      STR_123 FFAE                                        STR_107 FF49  
                                      STR_131 FDD7                                        STR_116 FFF0  
                                      STR_132 FF41                                        STR_108 FF27  
                                      STR_124 FF01                                        STR_109 FF27  
                                      STR_125 FF01                                        STR_117 FFF0  
                                      STR_133 FFD2                                        STR_118 FFA0  
                                      STR_126 FEED                                        STR_127 FEED  
                                      STR_119 FFA0                                        STR_128 FECC  
                                      STR_129 FEC0                               cmdSend@tempaddr 00C5  
                                      ?_srand 0002                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                         __end_of_nwkFrameAlloc 72C6  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                            _processATCommand 38D2                                        _U1CON0 003DF2  
                    nwkRxHandleIndication@ack 00DF                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                           __size_of_UART1_Read 005C  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _RB0PPS 003A08  
                          __CFG_PWRTS$PWRT_64 000000                                        _RC0PPS 003A10  
                                      _RC1PPS 003A11                                        i1l1092 96DE  
                                      i1l1088 9932                                        _ODCONA 003A42  
                                      i1l1098 9D20                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC7PPS 003A17  
                                      i2l1400 7690                                        i2l1410 9D26  
                                      i2l1404 976A                                        i2l1413 9D0C  
                                      i2l1407 9D28                                        i2l1191 9D24  
                              __CFG_WDTCCS$SC 000000                                        i2l1381 970C  
                                      i2l1393 8E2E                                        i2l1387 973C  
                                loadMACAddr@i 0006                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLE 003A84                                        _TABLAT 003FF5  
                           ?_nwkDataReqTxConf 0004                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 006B                              __end_of_cmdBcast 5BAC  
                                      _NVMDAT 0039E3                              __end_of_cmdGetSF 9ADA  
                            __end_of_cmdGetTX 9AC2                         _UART1_SetErrorHandler 9C92  
                            __end_of_cmdNaddr 9AAA                                placeTimer@prev 000C  
                                ?_setSyncWord 0001                              __end_of___xxtofl 3CEC  
                            __end_of_cmdSetSF 712C                              __end_of_cmdSetTX 6114  
                          ??_nwkDataReqTxConf 0006                              __end_of_cmdReset 9CEE  
                          PHY_DataConf@status 0005                              set_parity@parity 0004  
                  __size_of_SPI1_ExchangeByte 0024                                __CFG_XINST$OFF 000000  
                                ___strtoxl@cp 0031                                  vfprintf@cfmt 0056  
                               ?_radio_engine 0001                                  ?_PHY_DataInd 0013  
                                ?_PHY_DataReq 0011                          ?_bootLoadApplication 0001  
                                      ___flge 6532                              __end_of_fhssList FDC5  
                                      ___lmul 8590                                        ___omul 7966  
                                   ??___aodiv 0012                                     ??___aomod 0012  
                                      ___wmul 9684                                        _cmdMac 8BD8  
                              __CFG_STVREN$ON 000000                                        _crcObj 01D9  
                                   ??___lldiv 001E                                     ??___lodiv 0012  
                                   ??___llmod 000A                                     ??___lomod 0012  
                       __size_of_cmdSetParity 00B0                                     ??_cmdAddr 005C  
                                      _memcpy 83AE                              ?_TMR0_Initialize 0001  
                    __end_of_nwkRxTaskHandler 6F86                                        _memset 474A  
                                   ??_cmdRecv 0002                                     ??_cmdSend 005C  
                            ___strtoxl@endptr 0012                                        clear_0 6FF4  
                                      clear_1 7006                                        clear_2 7012  
                                      clear_3 701E                                        clear_4 702A  
                                      clear_5 7036                                        clear_6 7042  
                            setCodingRate4@cr 0012                     CircularBufferPushBack@ctx 0013  
                   CircularBufferPushBack@val 0015                 DATAEE_ReadByte_Platform@copy1 000A  
               DATAEE_ReadByte_Platform@copy2 0009                 DATAEE_ReadByte_Platform@copy3 0008  
                                      _timers 00E6                                        _printf 97EE  
                                      pad@buf 0016             __size_of_nwkTxAckWaitTimerHandler 00BA  
                  __size_of_NWK_GroupIsMember 0048               __size_of_nwkRouteSendRouteError 00EE  
                            ?_SYS_TaskHandler 0001                                        dtoa@fp 001F  
                                      _strchr 7F38                     ?_nwkTxAckWaitTimerHandler 0012  
                     __end_of_DATAEE_ReadByte 99F4                              ___strtoxl@prev_a 001B  
                            __end_of_sendInfo 8826                                        _strlen 8B22  
                                      _strtok 6114                                        _strspn 84A4  
                                      _strtol 9038                                        _strstr 642E  
                               cmdSetAES@byte 00A5                __size_of_nwkTxConvertPhyStatus 0052  
                               cmdSetAES@temp 00A1                 __end_of_nwkTxConvertPhyStatus 8DE0  
                                      fputc@c 0004                                _PMD_Initialize 98B0  
                                      fputs@c 0011                                        fputs@i 0012  
                                __packetIndex 0173                                        fputs@s 000D  
                                   ??_isalpha 0004                                     ??_isdigit 0004  
                      __end_of_nwkDataReqInit 9CD2                __size_of_nwkRouteFrameReceived 024A  
                                   ??_receive 0011                       _setSpreadingFactor$8334 0027  
               __end_of_nwkRouteFrameReceived 38D2                                     ??_islower 0004  
                                __mediumconst FCC8                                     ??_isspace 0004  
                                      tblptrh 003FF7                                     ??_isupper 0004  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                 __end_ofNWK_LinearizeLqi@val FDCE                                        srand@s 0002  
                      ??_SYS_TimerTaskHandler 0019                                  ?_NWK_DataReq 0002  
                                      stoa@cp 001D                                        stoa@fp 000D  
                        __size_of_loadMACAddr 0046                         __end_of_TMR0_CallBack 96E0  
                            __end_of_vfprintf 84A4                                        utoa@fp 001F  
                        processATCommand@data 00D3   UART1_SetTxInterruptHandler@InterruptHandler 0002  
 UART1_SetRxInterruptHandler@InterruptHandler 0002      TMR0_SetInterruptHandler@InterruptHandler 0002  
        __end_of_UART1_SetOverrunErrorHandler 9C84         __size_of_UART1_SetOverrunErrorHandler 000E  
                _UART1_SetOverrunErrorHandler 9C76                                 _curent_parity 017D  
                   _UART1_DefaultErrorHandler 9D08                                        xtoa@fp 001F  
                                   ??_strcspn 000C                                     ??_strncmp 0008  
                                   ??_toupper 000A                                     ??_strtoul 003A  
               __size_of_INTERRUPT_Initialize 0040                  __size_of_UART1_RxDataHandler 002E  
                                  ___flge@ff1 0010                                    ___flge@ff2 0014  
                               cmdSetRFCH@cmd 007D                       ??_nwkRouteErrorReceived 000F  
                                ___xxtofl@arg 000C                                  ___xxtofl@exp 000B  
                           _SYSTEM_Initialize 98F6                                  ___xxtofl@val 0002  
                               cmdSetSF@CHstr 0081                              PHY_SetRxState@rx 0001  
                                  __accesstop 0060                          cmdGetRxCnt@atCommand 0002  
                     __end_of__initialization 7056                                  ?_NWK_SetAddr 0004  
                             SX1276Write@addr 0010                      __size_of_SPI1_WriteBlock 0042  
                        bootLoadApplication@i 0034                               SX1276Write@data 000F  
                              _SPI1_ReadBlock 921C                            __size_of_crc16_app 00A6  
                       __size_of_DIA_ReadByte 0022                            ?_SYSTEM_Initialize 0001  
                          _getSpreadingFactor 9A5E                                    _cadCounter 0171  
                           ?_nwkTxAckReceived 0008                            _setSpreadingFactor 5BAC  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 002E  
                             _PHY_TaskHandler 9CFC                                  _cmdSetParity 78B6  
                    ??_queue_serial_led_event 0023                       SYS_TimerTaskHandler@cnt 001D  
                              ??_radio_engine 003A                            ??_nwkTxAckReceived 000A  
            __end_of_nwkRxHandleReceivedFrame 1D96                         ??_bootLoadApplication 0030  
                          __size_of_cmdGetCAD 0018                                    _cadTimeOut 00F7  
                              __pcstackCOMRAM 0001                            __size_of_cmdGetTTL 0002  
                          __size_of___strtoxl 056A                      __end_of_SX1276ReadBuffer 9868  
                               cmdSetTX@CHstr 0084                  __size_of_nwkFrameCommandInit 0040  
                      __size_of_cmdGetCADRSSI 001A                                 cmdSetAddr@cmd 007D  
                                __pidataBANK0 9D0E                                  __pidataBANK1 9BC0  
                                __pidataBANK2 9CD2                            nwkTxConfirm@status 0004  
                         ??_SYSTEM_Initialize 0007                           ?_getSpreadingFactor 000F  
                                 placeTimer@t 000E                                     ?_TMR0_ISR 0001  
                          __size_of_cmdSetAES 0258                           ?_setSpreadingFactor 0001  
              nwkRxHandleReceivedFrame@header 0031                            __size_of_cmdSetTTL 0002  
                            _DATAEE_WriteByte 8ECA                                ivt0x8_undefint 00AC  
                           PHY_SetPanId@panId 0002                            __size_of_cmdRstCAD 0016  
                                   ?_PHY_Init 0001                                 __end_of_fputc 8068  
                               cmdSetBaud@ptr 003D                                 __end_of_fputs 8F5E  
                           ??_SPI1_Initialize 0002                      nwkRxIndicateFrame@header 00CF  
              nwkRxHandleReceivedFrame@member 002E                                 __end_of_srand 95BE  
                               __end_of_putch 9CE6                         SX1276WriteBuffer@addr 000C  
                  ??_DATAEE_ReadByte_Platform 0008                                     ?_NWK_Init 0001  
                                 receive@size 0011          __size_ofnwkFrame@nwkFramePayloadSize 002A  
                       SX1276WriteBuffer@size 000B                        __end_of_PMD_Initialize 98D4  
                       SPI1_ExchangeByte@data 0002                      nwkDataReqTaskHandler@req 0033  
                          _spi1_configuration FDCE                            __size_of_enableCrc 0012  
              __size_of_nwkDataReqTaskHandler 00A2                    __size_of_UART1_tx_vect_isr 002E  
                           ?_DIO0_Receive_ISR 0001                 __end_of_nwkDataReqTaskHandler 7D5E  
                            ??_get_timer0base 0004                          __size_of_SX1276Write 0016  
                               cmdSend@msgstr 007F                               ?_nwkDataReqInit 0001  
                               cmdSetNaddr@p1 0081                                 cmdSetNaddr@p2 007F  
                                crc16_app@len 0015                                  crc16_app@ptr 001B  
                                   ?_SYS_Init 0001                                _nwkFrameFrames 05BD  
                   _UART1_FramingErrorHandler 01F0                                    _cmdGetRFCH 99F4  
                          ??_DIO0_Receive_ISR 001A               __size_of_CircularBufferPushBack 0106  
                       __end_of_set_uart_baud 6B1C                                    _cmdGetMode 9C10  
                                _DIA_ReadByte 98D4                          ??_getSpreadingFactor 0013  
                            _CRC_ReverseValue 8602                                  ??_SX1276Read 000D  
                        ??_setSpreadingFactor 0023                                       ??_fputc 0008  
                   __end_of_SYSTEM_Initialize 9918                                       ??_fputs 0011  
                    __end_of_SYS_TimerStarted 8B22                               __CFG_IVT1WAY$ON 000000  
                                     ??_srand 0004                                       ??_putch 0003  
                                  _cmdSetRFCH 7802                                 ?_setFrequency 0023  
                      __end_of_SPI1_ReadBlock 9260                                    __pbssBANK0 00E2  
                                  __pbssBANK1 0100                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                                    __pbssBANK4 0400  
                                  __pbssBANK5 0500                                    _cmdSetAddr 7B6C  
                                  _cmdSetBaud 86E6                 ?_UART1_SetOverrunErrorHandler 0002  
                      ?_UART1_SetErrorHandler 0002                                    _cmdSetSink 9BF0  
                       __end_of_nwkRouteFrame 6DCE                        _nwkRouteSendRouteError 6B1C  
                                  _appDataInd 7D5E                            __size_of_initRadio 015E  
                                  crc16_app@i 001D                  __size_of_nwkTxBroadcastFrame 0152  
                                  _atStateVar 0175                   nwkTxBroadcastFrame@newFrame 0027  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                          CRC_ReverseValue@mask 0007  
                             setTxPower@power 0011                       setPreambleLength@length 0011  
                                     ?___flge 0010              __end_of_TMR0_SetInterruptHandler 9CAE  
                                     ?___lmul 0002                            _explicitHeaderMode 9B3A  
                                     ?___omul 0002                                  ??_UART1_Read 0002  
                    __size_of_print_hop_table 0010                                       ?___wmul 0002  
                             _nwkDataReqQueue 00E8                                       ?_cmdMac 0001  
                                  ??_TMR0_ISR 0001                               __CFG_PPS1WAY$ON 000000  
                          NWK_OpenEndpoint@id 0004                          _nwkRxRejectDuplicate 2A4A  
                           _nwkDataReqConfirm 72C6                       __size_of_set_timer0base 0020  
                                  ??_PHY_Init 003A                     __size_of_PHY_SetShortAddr 0002  
                         nwkTxAckReceived@ind 0008                                       ?_memcpy 0008  
                                     ?_memset 0002                __size_of_nwkRxHandleIndication 0114  
                         ___omul@multiplicand 000A                                ___lmul@product 000A  
                                  ??_NWK_Init 0006                            __end_of_SX1276Read 9B6A  
                           _SX1276WriteBuffer 9818                 __end_of_nwkRxHandleIndication 5EF8  
                    __end_of_nwkTxTaskHandler 2F5E                            ?_nwkDataReqConfirm 0002  
                                     _CRCACCH 003963                                       _CRCACCL 003962  
                                     ?_printf 0077                               ?_PMD_Initialize 0001  
                                     _CRCDATH 003961                                       _CRCDATL 003960  
                           _UART1_Receive_ISR 75D2                                       _CRCCON0 003968  
                                     _CRCCON1 003969                            __size_of_nwkRxInit 0058  
                         _nwkRxServiceDataInd 7E9C                            __size_of_nwkTxInit 0044  
                                     ?_strchr 0002                           ?_explicitHeaderMode 0001  
                                     ?_strlen 0002                                       ?_strtok 000F  
                                     ?_strtol 0034                                       ?_strspn 0008  
                                     ?_strstr 000D                                       _CRCXORH 003967  
                                     _CRCXORL 003966                              ?_DATAEE_ReadByte 0002  
                           __end_of_crc16_app 7CBC                                 ?_nwkFrameFree 0002  
                          ?_SX1276WriteBuffer 0009                                 ?_nwkFrameInit 0001  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                               ?_nwkFrameNext 0002                                     ?_cmdBcast 007D  
                                   ?_cmdGetSF 0001                                       i1l12621 7E12  
                                     i1l12631 7E4C                                       i1l12623 7E18  
                                     i1l12641 7E8E                                       i1l12633 7E5E  
                                     i1l12625 7E2C                                       i1l13281 992E  
                                     i1l12635 7E64                                       i1l12627 7E32  
                                     i1l12619 7DFE                                       i1l13275 991E  
                                     i1l12637 7E76                                       i1l12629 7E46  
                                     i1l13277 9922                                       i1l12639 7E7C  
                                     i1l13279 9928                                     ?_cmdGetTX 0001  
                           _CRC_8BitDataWrite 9A2A                                       i1l12995 96B2  
                                     i1l12997 96C6                                       i2l13011 8DF2  
                                     i2l13013 8E06                                       i2l13021 8E26  
                                     i2l13031 7602                                       i2l13023 8E2A  
                                     i2l13015 8E0A                                       i2l13041 766E  
                                     i2l13033 761A                                       i2l13025 75D2  
                                     i2l13017 8E1A                                       i2l13009 8DE0  
                                     i2l13043 768C                                       i2l13035 762A  
                                     i2l13027 75E2                                       i2l13019 8E1E  
                                     i2l13037 763A                                       i2l13029 75F2  
                                     i2l13039 7652                                       i2l12713 9D08  
                                ?_Default_ISR 0001                                       i2l13291 9710  
                                     i2l13293 9724                          __size_of_UART1_Write 0064  
                                     i2l13287 96E0                                       i2l13289 96F4  
                                     i2l11971 9766                                       i2l11963 973E  
                                     i2l11965 9750                                       i2l11967 9752  
                                     i2l11969 9762                                     ?_cmdNaddr 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0002                                     ?_cmdSetSF 007D  
                                   ?_cmdSetTX 007D                                 computeFRF@num 002B  
                                   ?_cmdReset 0001                                 appDataInd@ind 007D  
                                  ??_SYS_Init 003A                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                       nwkRouteNormalizeRanks@i 0003  
                         ??_nwkDataReqConfirm 0004                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 06F0                                       _TBLPTRH 003FF7  
                                     _TBLPTRL 003FF6                            ?_CRC_8BitDataWrite 0001  
                                     _SPI1CLK 003D1C                                       _TBLPTRU 003FF8  
                    print_hop_table@atCommand 007D                                       _SPI1RXB 003D10  
                                     _NVMADRH 0039E1                                       _NVMADRL 0039E0  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _NVMCON2 0039E6                             __end_of_cmdGetCAD 9AF2  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                 _cmdGetCADRSSI 9A10  
                           __end_of_cmdGetTTL 9D1A                             __end_of___strtoxl 145C  
          __size_of_DATAEE_WriteByte_Platform 0044                             ?_NWK_RouteNextHop 0008  
                         ??_SX1276WriteBuffer 000C                        __size_of_cmdSetCADRSSI 00D0  
                                  cmdBcast@p1 00BF                                ??_setFrequency 0027  
                  ?_DATAEE_WriteByte_Platform 0006                             __end_of_cmdSetAES 3688  
                         ??_UART1_Receive_ISR 0001                               placeTimer@timer 0002  
                     __end_of_PHY_TaskHandler 9D02                              ___lomod@dividend 0002  
                           __end_of_cmdSetTTL 9D14                         nwkTxAckReceived@frame 000E  
                           __end_of_cmdRstCAD 9B98                               ?_SPI1_ReadBlock 0003  
                             crc16_app@result 0019                            ??_NWK_RouteNextHop 000B  
                                  _computeFRF 48E2                            __end_of_UART1_Read 8A6A  
                                   NWK_Init@i 0006                                 ?_nwkGroupInit 0001  
                         ??_CRC_8BitDataWrite 0002                       __size_of_nwkRouteRemove 0046  
                        DATAEE_WriteByte@bAdd 0002                              ??_setCodingRate4 0011  
                        ?_nwkRxServiceDataInd 007D                          ??_explicitHeaderMode 0011  
                                     _TXPower 00F0                     __size_of_NWK_OpenEndpoint 0020  
                   INTERRUPT_Initialize@state 0002                             __end_of_enableCrc 9BC0  
                                  _dwellTimer 016B                                     ?_sendInfo 0001  
                                  _packetRSSI 016E                                       __Hparam 0000  
                            ??_SYS_TimerStart 0012               __size_of_queue_serial_led_event 005E  
                        __size_of_setSyncWord 0010                                       __Lparam 0000  
                    __end_of_UART1_Initialize 7B6C                        _CircularBufferPushBack 6328  
                   __end_of_nwkDataReqConfirm 738E                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                           ??_SPI1_WriteBlock 0007                                 ??_cmdGetRxCnt 0004  
                                  cmdSetAES@i 00A8                                 ?_PHY_DataConf 0001  
                               ?_nwkRxSendAck 002A                                 ?_nwkTxConfirm 0002  
                                     cad@RSSI 0012                           _nwkDataReqSendFrame 1D96  
                               ??_cmdBootLoad 005C                               __size_of___flge 0104  
                       ?_nwkRxRejectDuplicate 0012                                       ___aodiv 45B2  
                                     ___aomod 4D86                           nwkRouteRemove@entry 000B  
                    __size_of_NWK_TaskHandler 000E                                       _cadDone 0172  
                   __end_of_SX1276WriteBuffer 9840                                    cmdSetSF@p1 007F  
                             __size_of___lmul 0072                                    cmdSetSF@p2 0084  
                             __size_of___omul 00AE                   __size_of_CircularBufferSize 005E  
                                     ___lldiv 7A14                               __size_of___wmul 002E  
                                     ___lodiv 6836                                       ___llmod 8218  
                             __size_of_cmdMac 0058                        __size_of_SYS_TimerInit 000C  
                                     ___lomod 6DCE                                    cmdSetTX@p1 0081  
                                  cmdSetTX@p2 007F                         nwkRxIndicateFrame@ind 00D1  
                   __end_of_UART1_Receive_ISR 7692                                     ?_vfprintf 0050  
                                  cmdSend@cmd 007D                                       cad@temp 0014  
                        __size_of_PHY_DataInd 0186                      __end_of_processATCommand 3B14  
                        __size_of_PHY_DataReq 005C                                       _cmdAddr 993A  
                           cmdSetCADRSSI@temp 0086                                       _aes_key 0220  
                                     _cmdRecv 9D16                                    _current_sf 00F2  
                             _start_radio_cad 9C20                                       _cmdSend 4A76  
                                     _channel 00F1                                       __pcinit 6F86  
                             __size_of_memcpy 007E                               __size_of_memset 0198  
                                     __ramtop 1000                     __end_of_CRC_8BitDataWrite 9A44  
                 __size_of_UART1_Transmit_ISR 0050                       __size_of_PHY_SetChannel 003E  
                              ??_nwkFrameFree 0004                                       __ptext0 9656  
                                     __ptext1 38D2                                       __ptext2 8952  
                                     __ptext3 8FA8                                       __ptext4 95BE  
                                     __ptext5 89B0                                       __ptext6 6328  
                                     __ptext7 00B2                                       __ptext8 9BD0  
                                     __ptext9 9BE0                                ??_nwkFrameInit 0002  
                              ??_nwkFrameNext 0004                               __size_of_printf 002A  
                    SPI1_WriteBlock@blockSize 0005                                       _fhssReg 0500  
                           __end_of_initRadio 5058                                       cmdMac@i 005D  
                             __CFG_WRTAPP$OFF 000000                               __size_of_strchr 009A  
                             __size_of_strlen 005C                                    ??_cmdBcast 005C  
                             __size_of_strtok 010A                               __size_of_strspn 0076  
                             __size_of_strtol 0046                               __size_of_strstr 0104  
                                  ??_cmdGetSF 005C                                    ??_cmdGetTX 005C  
                       _OSCILLATOR_Initialize 9B6A                                 ?_nwkRouteInit 0001  
                               ??_cmdSetNaddr 005C                                  __size_of_cad 011A  
                                __size_of_abs 004C                                    ??_cmdNaddr 005C  
                                  _placeTimer 3CEC                                  __size_of_pad 00E2  
                                     _isalpha 949A                                       _isdigit 94D6  
                               ??_cmdSendSink 0004                                    ??_cmdSetSF 005C  
                                  ??___xxtofl 0006                            _NWK_RouteFindEntry 8188  
                                     _net_key 0210                                    ??_cmdSetTX 005C  
                                     _receive 8F5E                                    ??_cmdReset 0002  
                    nwkFrameCommandInit@frame 0002          ??strspn@nwkFrame@nwkFramePayloadSize 0004  
         ?strspn@nwkFrame@nwkFramePayloadSize 0002                               _radio_state_var 016A  
                                     _islower 9422                      ??_PIN_MANAGER_Initialize 0002  
                                     _isspace 8C30                               __CFG_WRTSAF$OFF 000000  
                                 ?_cmdGetRFCH 0001                                       _isupper 945E  
                              ?_cmdGetCADRSSI 0001                             ?_executeATCommand 00CB  
           __size_of_nwkRxHandleReceivedFrame 0486                          __end_of_radio_engine 45B2  
                                 ?_cmdGetMode 0001                     ?_nwkRxHandleReceivedFrame 0029  
                                     _uartmsg 014C                                       atoi@neg 000F  
                        ?_nwkDataReqSendFrame 002A                                 ?_PHY_SetPanId 0002  
                          _NWK_RouteFreeEntry 91D8                       __size_of_PHY_SetRxState 0008  
                                     _tx_done 0177                    __size_of_SYSTEM_Initialize 0022  
                          ??_executeATCommand 00CD                                       _strcspn 851A  
                                     _strncmp 51AE                                       _toupper 8826  
                         SYS_TimerStart@timer 0010                          end_of_initialization 7056  
                         ?_NWK_RouteFindEntry 0002                                       _strtoul 907E  
                                 ?_cmdSetRFCH 007D                                     _SCANHADRH 00397A  
                                   _SCANHADRL 003979                                     _SCANHADRU 00397B  
                         __implicitHeaderMode 0174                                ??_nwkGroupInit 0002  
                        __size_of_NWK_DataReq 0090             __end_of_DATAEE_WriteByte_Platform 9194  
                                 ?_cmdSetAddr 007D                                     _SCANLADRH 003977  
                                   _SCANLADRL 003976                                   ?_cmdSetBaud 003A  
                                   _SCANLADRU 003978                                    _nwkDataReq 0181  
        nwkRxDuplicateRejectionTimerHandler@i 0015                                   ?_cmdSetSink 0001  
                           queueLedEvent@temp 0020                                ___omul@product 0012  
                       ??_nwkRxServiceDataInd 007F                                       memcpy@d 000F  
                                     memcpy@n 000C                                       memcpy@s 0011  
                                     fputc@fp 0006                                   ?_appDataInd 007D  
                                   i1u1132_20 7E12                                     i1u1132_21 7E0E  
                                   i1u1133_20 7E2C                                       memset@c 0004  
                                   i1u1133_21 7E28                                     i1u1134_20 7E46  
                                     memset@k 000A                                     i1u1134_21 7E42  
                                     memset@n 0006                                     i1u1135_20 7E5E  
                                     memset@s 000C                                     i1u1135_21 7E5A  
                                   i1u1136_20 7E76                                     i1u1136_21 7E72  
                                   i1u1137_20 7E8E                                     i1u1137_21 7E8A  
         __end_of_UART1_SetTxInterruptHandler 9C68                   _UART1_SetTxInterruptHandler 9C5A  
                                     fputs@fp 000F                                     i1u1175_20 96C6  
                                   i1u1175_21 96C2                                     i1u1176_28 96CC  
                                   i1u1176_29 96DE                   CRC_CalculatedResultGet@mask 000E  
                         ?_NWK_RouteFreeEntry 0002                             __end_of_nwkRxInit 8CE0  
                          _nwkRxIndicateFrame 2F5E                   nwkTxDelayTimerHandler@frame 0017  
                           __end_of_nwkTxInit 92A4                                     i2u1220_48 972A  
                                   i2u1220_49 973C                                     i2u1047_40 9762  
                                   i2u1047_41 975E                                     i2u1217_40 96F4  
                                   i2u1217_41 96F0                                     i2u1219_40 9724  
                                   i2u1218_48 96FA                                     i2u1219_41 9720  
                                   i2u1218_49 970C                                    _setTxPower 93E4  
                                   i2u1181_40 762A                                     i2u1180_48 7608  
                                   i2u1181_41 7626                                     i2u1180_49 761A  
                                   i2u1183_40 766E                                     i2u1182_48 7640  
                                   i2u1183_41 766A                                     i2u1182_49 7652  
                                   i2u1184_48 7674                                     i2u1177_40 8DF2  
                                   i2u1184_49 7688                                     i2u1177_41 8DEE  
                                   i2u1178_40 8E1A                                     i2u1178_41 8E16  
                                   i2u1179_40 75F2                                     i2u1179_41 75EE  
                       NWK_RouteNewEntry@iter 0007                           nwkRxSendAck@command 002C  
                 nwkTxDelayTimerHandler@timer 0012                                    ??_sendInfo 005C  
                        __size_of_NWK_SetAddr 001E                ??_UART1_SetOverrunErrorHandler 0004  
                             ___lldiv@divisor 001A                               ___lldiv@counter 0022  
                 __end_of_CircularBufferSpace 95F4                                ??_PHY_DataConf 0005  
                              ??_nwkRxSendAck 002C                                ??_nwkTxConfirm 0005  
                    ??_nwkRouteNormalizeRanks 0002                             __end_of_vfpfcnvrt 0EF2  
                                  _nwkTxFrame 3EC0                                    _set_parity 80F8  
                                   _SPI1TCNTL 003D12                           ?_nwkRxIndicateFrame 00C3  
                 __size_of_implicitHeaderMode 0018                                       postdec1 003FE5  
                                     postdec2 003FDD                                     _SPI1SSPPS 003AE0  
                               _cmdSetCADRSSI 712C                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                       nwkDataReqTxConf@frame 0004                          ??_NWK_RouteFindEntry 0005  
                      __size_of_Timer0Handler 009E                              fp__Timer0Handler 0000  
                                  ??_vfprintf 0056                     __size_of_nwkDataReqTxConf 00C0  
                                     strchr@c 0004                             UART1_Write@txData 0002  
                         _UART1_RxDataHandler 973E                                       strchr@s 0002  
                       __CFG_WDTCPS$WDTCPS_31 000000                    __end_of_getSignalBandwidth 51AE  
                                     strlen@a 0004                             initRadio@wideRSSI 0038  
                  __end_of_setSignalBandwidth 1910                                       strlen@s 0002  
                       nwkTxTaskHandler@frame 0016                      ?_CRC_CalculatedResultGet 0009  
                           ?_nwkRxTaskHandler 0001                    nwkRxHandleIndication@frame 00DD  
                                     strspn@c 000A                                       strspn@i 000D  
                                     strtok@p 015B                                       strtok@s 000F  
                                     strtol@s 0034                                       strspn@s 0008  
                                     strstr@h 000D                      _TMR0_SetInterruptHandler 9CA0  
                                     strstr@n 000F                                     _PORTBbits 003FCB  
                        ??_NWK_RouteFreeEntry 0004                           __end_of_cmdGetRxCnt 9D1C  
                              ??_nwkRouteInit 0002                             ??_print_hop_table 005C  
                         __end_of_cmdBootLoad 954C                            ??_nwkRxTaskHandler 00E0  
                                  _test_timer 01E8                        _queue_serial_led_event 8952  
                              cmdSetRFCH@temp 0086                         setFrequency@frequency 0023  
                               ___xxtofl@sign 000A                           SPI1_ReadBlock@block 0003  
                                   _TRISBbits 003FC3                                ??_PHY_SetPanId 0004  
                       ??_nwkDataReqSendFrame 002C                                  strtol@endptr 0036  
                       __end_of_queueLedEvent 8FF0                          ??_nwkRxIndicateFrame 00C5  
                         _nwkFrameCommandInit 92E6                                 ?_NWK_SetPanId 0004  
                           placeTimer@timeout 0008                         nwkRxRejectDuplicate@i 0019  
                     nwkTxAckReceived@command 000C                                 _SYS_TimerInit 9CBA  
                            __CFG_FEXTOSC$OFF 000000                      __end_of_DATAEE_WriteByte 8F14  
                         __end_of_cmdSetNaddr 83AE                          ?_UART1_RxDataHandler 0001  
                            ?_PHY_TaskHandler 0001                           __end_of_cmdSendSink 9D16  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                       _nwkRxIndicateFrame$4890 00CA  
                     _nwkRxIndicateFrame$4891 00CB                       _nwkRxIndicateFrame$4892 00CC  
                     _nwkRxIndicateFrame$4893 00CD                       _nwkRxIndicateFrame$4894 00CE  
                     _nwkRxIndicateFrame$4889 00C9                __size_of_nwkRouteErrorReceived 006C  
                       setSignalBandwidth@sbw 0023                               _SPI1_Initialize 9A78  
               __end_of_nwkRouteErrorReceived 87BE                             _nwkTxAckWaitTimer 01A1  
                    ??_nwkTxDelayTimerHandler 0014                       __end_of_start_radio_cad 9C30  
                      ??_nwkRxRejectDuplicate 0014                    __size_of_nwkDataReqConfirm 00C8  
                        _timer0ReloadVal16bit 01F4                                ?_cmdSetCADRSSI 007D  
                         __size_of_cmdGetRFCH 001C                         CircularBufferSize@ctx 0002  
                        ?_nwkFrameCommandInit 0002                      __end_of_CRC_ReverseValue 8674  
                         __size_of_cmdGetMode 0010                    __size_of_SX1276WriteBuffer 0028  
                           ?_SX1276ReadBuffer 0009                                _set_timer0base 995A  
                __end_of_INTERRUPT_Initialize 93A6                       queue_serial_led_event@i 0023  
                     nwkRouteRemove@multicast 000A                              _PHY_SetShortAddr 9D1E  
                              __end_of___flge 6636                    __size_of_UART1_Receive_ISR 00C0  
                        __end_of_setFrequency 5A8E                                __end_of___lmul 8602  
                              __end_of___omul 7A14                                   vfpfcnvrt@ap 004A  
                                 vfpfcnvrt@cp 0068                                   vfpfcnvrt@fp 0046  
                                 vfpfcnvrt@ll 0060                                __end_of___wmul 96B2  
                            ??_nwkDataReqInit 0002                                __end_of_cmdMac 8C30  
                          ??_SX1276ReadBuffer 000C                        __size_of_nwkFrameAlloc 00CA  
                         __size_of_cmdSetRFCH 00B4               CircularBufferPushBack@write_pos 001B  
                           __size_of_TMR0_ISR 0022                    __size_of_CRC_8BitDataWrite 001A  
                         __size_of_cmdSetAddr 00AA                           __size_of_cmdSetBaud 006C  
                           __size_of_PHY_Init 0006                                __end_of_memcpy 842C  
                      ?_OSCILLATOR_Initialize 0001                           __size_of_cmdSetSink 0010  
                              __end_of_memset 48E2                     __size_of_nwkTxAckReceived 00F4  
                              SX1276Read@addr 000D                               setFrequency@num 002B  
                              SX1276Read@data 000E                           __size_of_appDataInd 00A0  
                          NWK_RouteNewEntry@i 0006                             __size_of_NWK_Init 0062  
                           ??_NWK_TaskHandler 005E                                __end_of_printf 9818  
                         _nwkTxBroadcastFrame 5456                                 ??_loadMACAddr 0006  
                             ??_cmdGetCADRSSI 005C                                   ?_placeTimer 0002  
                              __end_of_strchr 7FD2                                __end_of_strlen 8B7E  
                              __end_of_strtok 621E                                __end_of_strspn 851A  
                              __end_of_strtol 907E                                __end_of_strstr 6532  
                         start_initialization 6F86                               ___lodiv@divisor 000A  
                                _SCANCON0bits 00397C                               ___lodiv@counter 001A  
                    __size_of_TMR0_Initialize 0040                         _nwkTxConvertPhyStatus 8D8E  
             __size_of_PIN_MANAGER_Initialize 0088                             cmdSetAES@key_type 00A4  
                              ??_NWK_SetPanId 0006                                   __end_of_cad 5DE4  
                                 __end_of_abs 8ECA                                 nwkFrameInit@i 0002  
                                 __end_of_pad 6CEC                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0004                                ?_SYS_TimerInit 0001  
                       _nwkRouteFrameReceived 3688                       __size_of_CRC_Initialize 005A  
                     ?_nwkRouteSendRouteError 002A                      __size_of_SYS_TaskHandler 000E  
                           __size_of_SYS_Init 000E                         ??_UART1_RxDataHandler 0001  
                               _Timer0Handler 7DFE                                   putch@txData 0003  
                                  ivt0x8_base 0008                 __size_of_SYS_TimerTaskHandler 0154  
                     NWK_RouteFreeEntry@entry 0002                             ?_SYS_TimerStarted 0002  
                              _nwkRouteRemove 910A                                 _uart1RxBuffer 0200  
                                _msgIDCounter 0178                   __end_of_bootLoadApplication 2A4A  
                          ??_SYS_TimerStarted 0004                             ___omul@multiplier 0002  
                               _uart1TxBuffer 0300                              _NWK_OpenEndpoint 997A  
                             ___llmod@divisor 0006                          __end_of_nwkFrameFree 9A5E  
                        __end_of_nwkFrameInit 97C4                     __size_of_DIO0_Receive_ISR 00C0  
                                 ?_setTxPower 0001                          __end_of_nwkFrameNext 7452  
                        ?_nwkTxBroadcastFrame 0024                               ___llmod@counter 000A  
                         DATAEE_ReadByte@bAdd 0002                                cmdSetNaddr@cmd 007D  
                      nwkRouteFrameSent@frame 0008                                 crc16_app@dptr 0013  
                      nwkRouteFrameSent@entry 000C                                 crc16_app@seed 0017  
                            __CFG_LPBOREN$OFF 000000                             _nwkRouteFrameSent 5832  
                      __end_of_set_timer0base 997A                                   ___strtoxl@a 002D  
                                 ___strtoxl@c 0033                                   ___strtoxl@s 0010  
                       ??_nwkFrameCommandInit 0004                               NWK_SetAddr@addr 0004  
                                 vfprintf@fmt 0052                                   ?_nwkTxFrame 0024  
                           nwkRouteRemove@dst 0008                                   ?_set_parity 0001  
             __end_of_CRC_CalculatedResultGet 6736                                      ??___flge 0018  
               nwkTxDelayTimerHandler@restart 0016                              ??_PMD_Initialize 0002  
             __size_of_nwkRouteNormalizeRanks 0044                                      ??___lmul 000A  
                                    ??___omul 0012                                   _cmdGetRxCnt 9D1A  
                                    ??___wmul 0006               CRC_CalculatedResultGet@xorValue 0009  
                                    ??_cmdMac 005C                            ?_nwkRouteFrameSent 0008  
                                 _cmdBootLoad 9512                      _nwkTxAckWaitTimerHandler 7692  
                             ___strtoxl@limit 0027                        __size_of_TMR0_CallBack 002E  
                           NWK_SetPanId@panId 0004                   fp__nwkTxAckWaitTimerHandler 0000  
                                cmdSetAES@cmd 007D                                   __pdataBANK0 00FB  
                                 __pdataBANK1 01DC                                   __pdataBANK2 02E6  
                       CRC_8BitDataWrite@data 0002                                      ??_memcpy 000E  
                           SYS_TimerStarted@t 0004                                      ??_memset 0008  
                              cmdSendSink@cmd 0002                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 93A6                          __end_of_nwkGroupInit 9656  
                                  memset@dest 0002                                      ??_printf 0058  
                         __size_of_computeFRF 0194                             ?_nwkTxTaskHandler 0001  
                              _uart_baud_rate 017F                                      ??_strchr 0006  
                       __size_of_radio_engine 01AE                                      ??_strlen 0004  
                                    ??_strtok 0013                                      ??_strtol 003A  
                                    ??_strspn 000C                                      ??_strstr 0011  
                         ??_nwkRouteFrameSent 000A                                  cmdSetRFCH@p1 007F  
                                cmdSetRFCH@p2 0084                         PHY_SetChannel@channel 002F  
                              _symbolDuration 0152                                   __pbssBIGRAM 05BD  
                          ??_nwkTxTaskHandler 0014                                   _cmdSetNaddr 8330  
                                 __pbssCOMRAM 005E                                set_uart_baud@i 0004  
                                 _cmdSendSink 9D14                              ??_SPI1_ReadBlock 0007  
                          _UART1_ErrorHandler 01EC                                 __pcstackBANK0 0060  
                               __pcstackBANK1 01FB                                  cmdSetSF@temp 0086  
              __end_of_nwkRouteSendRouteError 6C0A                       nwkRoutePrepareTx@header 0011  
                        setSpreadingFactor@sf 002B                              ___aodiv@dividend 0002  
                           __size_of_cmdBcast 011E                             __size_of_cmdGetSF 0018  
                                 _CRCCON0bits 003968                                   _CRCCON1bits 003969  
                           __size_of_cmdGetTX 0018                                  cmdSetAddr@p1 0081  
                                cmdSetAddr@p2 007F                         _nwkDataReqTaskHandler 7CBC  
                         cmdSetBaud@atCommand 003A                                     _crc16_app 7C16  
                           __size_of_cmdNaddr 0018                          __end_of_PHY_DataConf 9586  
                              _PHY_SetRxState 9CEE                          __end_of_nwkRxSendAck 6328  
                                 _appDataConf 000000                          __end_of_nwkTxConfirm 988C  
                                cmdSetTTL@cmd 0002                             __size_of___xxtofl 01D8  
                           __size_of_cmdSetSF 00D0                             __size_of_cmdSetTX 010A  
                              ?_Timer0Handler 0001                       __end_of_SPI1_Initialize 9A92  
                    _UART1_RxInterruptHandler 01F8                             __size_of_cmdReset 0008  
                      __end_of_nwkRouteRemove 9150                 nwkRxHandleReceivedFrame@frame 0029  
                     nwkRxIndicateFrame@frame 00C3                   __size_of_getSpreadingFactor 001A  
                   SYS_TimerTaskHandler@timer 0022                   __size_of_setSpreadingFactor 011E  
                                cmdSetTX@temp 0083                   ??_DATAEE_WriteByte_Platform 0009  
                         __end_of_loadMACAddr 910A             __size_of_DATAEE_ReadByte_Platform 014E  
                     CRC_ReverseValue@reverse 0005                               _SPI1_WriteBlock 92A4  
                                   _atCommand 0230                                  cmdSend@msgid 00C4  
                   ?_DATAEE_ReadByte_Platform 0006                                  _currentAddr0 01EB  
                                _currentAddr1 01EA                                 _nwkFrameAlloc 71FC  
                                   _cmdGetCAD 9ADA                                 setSyncWord@sw 0011  
                           _nwkRoutePrepareTx 56F6                           _nwkTxPhyActiveFrame 0161  
                                _currentNetID 00FC                                     _cmdGetTTL 9D18  
                                   ___strtoxl 0EF2                                  _currentMsgID 017C  
                fp__UART1_DefaultErrorHandler 0000                         ??_nwkTxBroadcastFrame 0026  
                     ?_CircularBufferPushBack 0013                                     _cmdSetAES 3430  
                ?_UART1_SetRxInterruptHandler 0002               nwkRouteSendRouteError@multicast 002E  
                                   _cmdSetTTL 9D12                         _TMR0_InterruptHandler 01F2  
                          ?_nwkRoutePrepareTx 000D                                     _atoi$7412 0011  
                                   _atoi$7413 0015                                     _atoi$7414 0013  
                   __end_of_nwkRouteFrameSent 5964                                     _cmdRstCAD 9B82  
                                   __pnvBANK1 01EC                          __end_of_nwkRouteInit 8D38  
                             ??_cmdSetCADRSSI 005C                                _ATTimeoutTimer 00FD  
                         __size_of_placeTimer 01D4                        _PIN_MANAGER_Initialize 82A8  
                                   _dtoa$6909 0031                              ?_start_radio_cad 0001  
                             ?_set_timer0base 0002               __size_of_nwkTxDelayTimerHandler 00B6  
                           ?_UART1_Initialize 0001                     __size_of_NWK_RouteNextHop 0056  
        __end_of_UART1_SetFramingErrorHandler 9C92         __size_of_UART1_SetFramingErrorHandler 000E  
                _UART1_SetFramingErrorHandler 9C84                             __size_of_sendInfo 0068  
                                _radio_engine 4404                          __end_of_PHY_SetPanId 9D1E  
                               __pmediumconst FCC8                                     _enableCrc 9BAE  
                                    ?___aodiv 0002                                      ?___aomod 0002  
                         UART1_Read@readValue 0002                           ??_nwkRoutePrepareTx 000F  
                                   __ptext100 2A4A                                     __ptext101 95F4  
                               nwkGroupInit@i 0002                                     __ptext110 7D5E  
                                   __ptext102 3CEC                              ___aodiv@quotient 0014  
                                   __ptext111 7E9C                                     __ptext103 8AC6  
                                   __ptext200 9C68                                     __ptext120 244C  
                                   __ptext112 6936                                     __ptext104 3688  
                                   __ptext201 9C76                                     __ptext121 8826  
                                   __ptext113 738E                                     __ptext105 6736  
                                   __ptext210 9366                                     __ptext202 9C84  
                                   __ptext130 6C0A                                     __ptext122 9422  
                                   __ptext114 8752                                     __ptext106 5DE4  
                                   __ptext211 8B7E                                     __ptext203 9C92  
                                   __ptext131 8B22                                     __ptext123 945E  
                                   __ptext115 910A                                     __ptext107 621E  
                                   __ptext220 75D2                                     __ptext212 9918  
                                   __ptext204 9326                                     __ptext140 8C30  
                                   __ptext132 8F14                                     __ptext124 949A  
                                   __ptext116 91D8                                     __ptext108 2F5E  
                                   __ptext221 9D26                                     __ptext213 96B2  
                                   __ptext205 9CA0                                     __ptext141 94D6  
                                   __ptext133 7FD2                                     __ptext125 31C8  
                                   __ptext117 97EE                                     __ptext109 97C4  
                                   __ptext222 9D28                                     __ptext214 9D20  
                                   __ptext206 9A78                                     __ptext150 5EF8  
                                   __ptext142 9684                                     __ptext134 9CDC  
                                   __ptext126 6DCE                                     __ptext118 842C  
                                   __ptext223 9D08                                     __ptext215 7DFE  
                                   __ptext207 98B0                                     __ptext151 7966  
                                   __ptext143 6CEC                                     __ptext135 888C  
                                   __ptext127 6836                                     __ptext119 0802  
                                   __ptext224 973E                                     __ptext216 9D24  
                                   __ptext208 82A8                                     __ptext160 9C4C  
                                   __ptext152 56F6                                     __ptext144 6B1C  
                                   __ptext136 8E7E                                     __ptext128 424C  
                                   __ptext225 0000                                     __ptext217 96E0  
                                   __ptext209 9B6A                                     __ptext161 9CBA  
                                   __ptext153 8D38                                     __ptext145 92E6  
                                   __ptext137 4D86                                     __ptext129 20FE  
                                   __ptext218 8DE0                                     __ptext170 3B14  
                                   __ptext162 9D02                                     __ptext154 8188  
                                   __ptext146 9A44                                     __ptext138 45B2  
                                   __ptext219 9710                                     __ptext171 6532  
                                   __ptext163 4EFA                                     __ptext155 8FF0  
                                   __ptext147 7CBC                                     __ptext139 408C  
                                   __ptext180 9818                                     __ptext172 9B0A  
                                   __ptext164 9586                                     __ptext156 71FC  
                                   __ptext148 1D96                                     __ptext181 92A4  
                                   __ptext173 5964                                     __ptext165 93E4  
                                   __ptext157 474A                                     __ptext149 3EC0  
                                   __ptext190 9260                                     __ptext182 9B52  
                                   __ptext174 8E30                                     __ptext166 5BAC  
                                   __ptext158 83AE                                     __ptext191 8C88  
                                   __ptext183 9840                                     __ptext175 8F5E  
                                   __ptext167 145C                                     __ptext159 72C6  
                                   __ptext192 997A                                     __ptext184 921C  
                                   __ptext176 9B22                                     __ptext168 9A5E  
                                   __ptext193 8CE0                                     __ptext185 988C  
                                   __ptext177 9B3A                                     __ptext169 5058  
                                   __ptext194 9626                                     __ptext186 48E2  
                                   __ptext178 9BAE                                     __ptext195 9798  
                                   __ptext187 8218                                     __ptext179 9B98  
                                   __ptext196 9CC6                                     __ptext188 7A14  
                                   __ptext197 98F6                                     __ptext189 88F0  
                      __end_of_PHY_SetChannel 93E4                                     __ptext198 7AC0  
                      __size_of_set_uart_baud 00F2                                     __ptext199 9C5A  
                                    ?___lldiv 0016                                      ?___lodiv 0002  
                                    ?___llmod 0002                                      ?___lomod 0002  
                          ??_UART1_Initialize 0004                              _nwkDataReqTxConf 7512  
                                    ?_cmdAddr 0001                         NWK_RouteNextHop@entry 000B  
                                    ?_cmdRecv 0001                                      ?_cmdSend 007D  
                            _uart1RxLastError 0168                             ?_processATCommand 0001  
                               ??_UART1_Write 0002                             __size_of_vfprintf 0078  
                      __size_of_nwkRouteFrame 00E2                            ??_processATCommand 00D0  
                             ___lomod@divisor 000A                        __CFG_BBSIZE$BBSIZE_512 000000  
                       _nwkRxHandleIndication 5DE4                                     _fhssdebug 016C  
                             ___lomod@counter 0012           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 9D28     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 9D26                                      ?_isalpha 0002  
                                    ?_isdigit 0002                           __size_of_setTxPower 003E  
                      ?_nwkTxConvertPhyStatus 0001                        __end_of_PHY_SetRxState 9CF6  
                                    ?_receive 0001                               ??_SYS_TimerInit 0002  
                                ??_cmdGetRFCH 005C                                      ?_islower 0002  
                                    ?_isspace 0002                                      ?_isupper 0002  
                      ?_nwkRouteFrameReceived 000B                           __end_of_SX1276Write 9BAE  
                                ??_cmdGetMode 005C                        _nwkRouteNormalizeRanks 9194  
                                   _initRadio 4EFA                                    ?_crc16_app 0013  
                       DIA_ReadByte@flashAddr 0002                                     cmdSend@p1 00C9  
                                   cmdSend@p2 00C7                           __size_of_nwkTxFrame 01CC  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                         __size_of_set_parity 0090                                 _TMR0_CallBack 96B2  
                   __end_of_nwkRoutePrepareTx 5832                                __size_of_fputc 0096  
                              __size_of_fputs 004A                     nwkRxRejectDuplicate@shift 0018  
                                    ?_strcspn 0008                      __size_of_DATAEE_ReadByte 001E  
                                    ?_strncmp 0002                                      ?_toupper 0008  
                                 _U1ERRIRbits 003DF9                                  ??_cmdSetRFCH 005C  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                                    ?_strtoul 0034                                __size_of_putch 000A  
                                ??_cmdSetAddr 005C                                  ??_cmdSetBaud 003C  
                        _INTERRUPT_Initialize 9366                                      _U1CTSPPS 003AE6  
                            __cadBackoffTimer 00F9                __end_of_CircularBufferPushBack 642E  
                                ??_cmdSetSink 005C                                    ?_cmdGetCAD 0001  
                        SX1276ReadBuffer@addr 000C                           ___strtoxl@conv_done 0026  
                                  ?_cmdGetTTL 0001                                    ?___strtoxl 0010  
                                ??_appDataInd 005C                                    nwkRxInit@i 0005  
                           ??_TMR0_Initialize 0004                       __size_of_get_timer0base 002C  
                        SX1276ReadBuffer@size 000B                                 ??_setSyncWord 0011  
                              ___wmul@product 0006                                      _LATAbits 003FBA  
       UART1_SetErrorHandler@interruptHandler 0002                                      _LATCbits 003FBC  
    nwkRxDuplicateRejectionTimerHandler@timer 0012                   __size_of_explicitHeaderMode 0018  
                                  ?_cmdSetAES 007D                                      _SCANCON0 00397C  
                                    _EUIDbyte 01BB                                    ?_cmdSetTTL 0002  
                                 _ledTimerVar 0163                             ??_SYS_TaskHandler 005E  
                                  ?_cmdRstCAD 0001                                      _IPR3bits 003983  
                                    _SCANTRIG 00397D                                      _PIE3bits 003993  
                              appDataInd@data 007F                            cmdSetAddr@tempaddr 0083  
                         __CFG_BORV$VBOR_2P45 000000                                  _SPI1CON0bits 003D14  
                                 _ledStateVar 0169                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                           _NWK_RouteNewEntry 6736                                     _sinkAddr0 017B  
                                   _sinkAddr1 017A                 ??_UART1_SetRxInterruptHandler 0004  
                       __size_of_setFrequency 012A                     __size_of_executeATCommand 0750  
                  ??_TMR0_SetInterruptHandler 0004                                      _PIR0bits 0039A0  
                                   _nwkGroups 0128                    __end_of_CircularBufferSize 8A0E  
                 nwkRouteFrameReceived@header 0015                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      _PIR3bits 0039A3  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                 ??_PHY_DataInd 0015  
                                   _nwkRxInit 8C88                                 ??_PHY_DataReq 0014  
                             _print_hop_table 9BE0                                     _nwkTxInit 9260  
                         ___strtoxl@is_signed 0016                            ?_NWK_RouteNewEntry 0002  
                     _eeprom_write_flags_enum 0180                                _ATVersionMajor FDD6  
                        __end_of_NWK_SetPanId 99B8                                    ?_enableCrc 0001  
                              _ATVersionMinor FDD5                       _setSignalBandwidth$8335 002B  
                          __end_of_cmdGetRFCH 9A10                                      _TMR0_ISR 9918  
                   _DATAEE_WriteByte_Platform 9150                               ?_PHY_SetChannel 0001  
                  __end_of_UART1_Transmit_ISR 8E30                            __end_of_cmdGetMode 9C20  
                                    _PHY_Init 9D02                 ?_UART1_SetFramingErrorHandler 0002  
                            initRadio@version 0037                                     _vfpfcnvrt 0802  
                                    _NWK_Init 88F0                                   cmdBcast@cmd 007D  
                                   _txTimeOut 00F5                            SPI1_ReadBlock@data 0007  
                     ?_queue_serial_led_event 0001                                     _xtoa$6937 0032  
                                   _xtoa$6938 0034                            NWK_GroupIsMember@i 0006  
                          __end_of_cmdSetRFCH 78B6                           ??_NWK_RouteNewEntry 0004  
                           ___wmul@multiplier 0002                              _nwkTxAckReceived 6936  
                          __end_of_cmdSetAddr 7C16                          getSignalBandwidth@bw 0015  
                          __end_of_cmdSetBaud 8752             nwkRxHandleReceivedFrame@broadcast 002D  
                          __end_of_cmdSetSink 9C00                        nwkDataReqSendFrame@req 002A  
                          __end_of_appDataInd 7DFE                          setSignalBandwidth@bw 002F  
                                 _loadMACAddr 90C4                               ?_PHY_SetRxState 0001  
                      ?_nwkDataReqTaskHandler 0001                       __end_of_SPI1_WriteBlock 92E6  
                             ??_Timer0Handler 0001                        _nwkTxDelayTimerHandler 774C  
                                    _SYS_Init 9C4C                           __end_of_UART1_Write 88F0  
                       DATAEE_WriteByte@bData 0004                                 ??_NWK_DataReq 0004  
                 __end_of_nwkRxServiceDataInd 7F38                                    ?_initRadio 0001  
                                _isspace$7439 0008                                _CRC_Initialize 8B7E  
                              ?_TMR0_CallBack 0001                                   strtoul@base 0038  
                               _set_uart_baud 6A2A                                    vfpfcnvrt@c 006A  
                            ?_SPI1_Initialize 0001                            _getSignalBandwidth 5058  
                          _setSignalBandwidth 145C                                   _INTCON0bits 003FD2  
                           ___lmul@multiplier 0002                         __size_of_nwkFrameFree 001A  
                                   copy_data0 6F9A                                     copy_data1 6FBC  
                                   copy_data2 6FDE                         __size_of_nwkFrameInit 002C  
                       ?_INTERRUPT_Initialize 0001                         __size_of_nwkFrameNext 00C4  
                 nwkDataReqSendFrame@mcHeader 002D              __size_of_CRC_CalculatedResultGet 0100  
                    __end_of_PHY_SetShortAddr 9D20                          fp__UART1_Receive_ISR 0000  
                                ??_computeFRF 0023                 nwkRxRejectDuplicate@freeEntry 001B  
                           ?_DATAEE_WriteByte 0002                                  _setFrequency 5964  
                   __size_of_nwkRxTaskHandler 00D8                                 ??_NWK_SetAddr 0006  
                      _uart1TxBufferRemaining 01FA                                ___strtoxl$7600 001F  
                              ___strtoxl$7601 0025                                ___strtoxl$7602 0021  
                              ___strtoxl$7603 0023                  _nwkRxDuplicateRejectionTable 03A0  
                _nwkRxDuplicateRejectionTimer 01AE                     __end_of_NWK_RouteNewEntry 6836  
                               _nwkRouteFrame 6CEC                            ??_DATAEE_WriteByte 0005  
                                 _ledtasksbuf 01C7                              _DIO0_Receive_ISR 7452  
                               _nwkRouteTable 0280                           ?_getSignalBandwidth 000F  
                         ?_setSignalBandwidth 0023                    __size_of_nwkRouteFrameSent 0132  
                               ?_cmdSetParity 007D                                  _uart1RxCount 00EC  
                  __end_of_implicitHeaderMode 9B3A                                      __Hrparam 0000  
                      __end_of_ATVersionMajor FDD7                        __end_of_ATVersionMinor FDD6  
                           computeFRF@num_mod 0027                                     memcpy@tmp 000E  
                                  ?_nwkRxInit 0001                                    vfprintf@ap 0054  
                                    __Lrparam 0000                                    vfprintf@fp 0050  
                                  ?_nwkTxInit 0001                               _NWK_TaskHandler 9C3E  
                       __size_of_nwkGroupInit 0030                            __CFG_BOREN$SBORDIS 000000  
                              ___strtoxl@base 0014                               _nwkRxAckControl 0167  
                                 cmdSetAES@p1 00A6                                   cmdSetAES@p2 009F  
                         __end_of_setSyncWord 9C10                                ___strtoxl@sign 002B  
                              ___strtoxl@skip 002C                            cmdSetCADRSSI@CHstr 0081  
                     ??_OSCILLATOR_Initialize 0002                             ?_CRC_ReverseValue 0002  
                     __size_of_setCodingRate4 004E                             appDataInd@dataptr 00C0  
              __end_of_queue_serial_led_event 89B0                              __size_of___aodiv 0198  
                nwkRouteErrorReceived@command 0010                              __size_of___aomod 0174  
                 __size_of_NWK_RouteFindEntry 0090                  DATAEE_ReadByte_Platform@addr 0006  
                            __size_of___lldiv 00AC                              __size_of___lodiv 0100  
                            __size_of___llmod 0090                      processATCommand@data_785 00D2  
                            __size_of___lomod 00E0                                    ?_vfpfcnvrt 0046  
                       SYS_TimerStarted@timer 0002                         nwkRxTaskHandler@frame 01FB  
                __size_of_CircularBufferSpace 0036                              __size_of_cmdAddr 0020  
                          ??_CRC_ReverseValue 0004        fp__nwkRxDuplicateRejectionTimerHandler 0000  
 __end_of_nwkRxDuplicateRejectionTimerHandler 86E6  __size_of_nwkRxDuplicateRejectionTimerHandler 0072  
       ??_nwkRxDuplicateRejectionTimerHandler 0014          ?_nwkRxDuplicateRejectionTimerHandler 0012  
         _nwkRxDuplicateRejectionTimerHandler 8674                        nwkRoutePrepareTx@frame 000D  
                             ___aodiv@divisor 000A                                   _SX1276Write 9B98  
                         __end_of_PHY_DataInd 4D86                        ?_nwkRxHandleIndication 00DD  
                         __end_of_PHY_DataReq 8AC6                              __size_of_cmdRecv 0002  
                            __size_of_cmdSend 018A                   __end_of_nwkDataReqSendFrame 20FE  
                         NWK_LinearizeLqi@val FDC5                               ___aodiv@counter 0012  
                                 cmdSetTX@cmd 007D                       __size_of_SYS_TimerStart 0032  
                        ??_getSignalBandwidth 0013                   __size_of_NWK_RouteFreeEntry 0044  
                    __end_of_NWK_OpenEndpoint 999A                          ??_setSignalBandwidth 0027  
                          __end_of_computeFRF 4A76                         __size_of_PHY_DataConf 003A  
                       __size_of_nwkRxSendAck 010A                         __size_of_nwkTxConfirm 0024  
                    _nwkRxHandleReceivedFrame 1910                                      _cmdBcast 5A8E  
                                _nwkFrameFree 9A44          __size_of_UART1_SetRxInterruptHandler 000E  
                                _nwkFrameInit 9798                                      _cmdGetSF 9AC2  
                                ??_placeTimer 0004                                      _cmdGetTX 9AAA  
                                _nwkFrameNext 738E                                   _currentMode 0179  
                                    _cmdNaddr 9A92                                      ___xxtofl 3B14  
                                    _cmdSetSF 705C                        __end_of_CRC_Initialize 8BD8  
                                    _cmdSetTX 600A                                    _T0CON0bits 003FB8  
                                    _cmdReset 9CE6                             _set_hop_table_ttl 9BD0  
                            __size_of_isalpha 003C                              __size_of_isdigit 003C  
                                    __pivt0x8 0008                              __size_of_receive 004A  
                 nwkRouteSendRouteError@frame 0031                                   ??_crc16_app 0019  
                            __size_of_islower 003C                                ?_set_uart_baud 0001  
                            __size_of_isspace 0058                                 ?_DIA_ReadByte 0002  
                             ??_nwkFrameAlloc 0010                     __size_of_SX1276ReadBuffer 0028  
                                    __ptext10 600A                                      __ptext11 9D12  
                                    __ptext20 86E6                                      __ptext12 9BF0  
                                    __ptext21 6114                                      __ptext13 705C  
                                    __ptext30 8590                                      __ptext22 84A4  
                                    __ptext14 7802                                      __ptext31 9B82  
                                    __ptext23 851A                                      __ptext15 78B6  
                                    __ptext40 9AC2                                      __ptext32 9CE6  
                                    __ptext24 7B6C                                      __ptext16 8330  
                                    __ptext41 9D1A                                      __ptext33 9D16  
                                    __ptext25 3430                                      __ptext17 9C00  
                                    __ptext50 7F38                                      __ptext42 99F4  
                                    __ptext34 9A92                                      __ptext26 9D14  
                                    __ptext18 712C                                      __ptext51 8068  
                                    __ptext43 9C10                                      __ptext35 8BD8  
                                    __ptext27 4A76                                      __ptext19 9038  
                                    __ptext60 7C16                                      __ptext52 993A  
                                    __ptext44 9A10                                      __ptext36 9CF6  
                                    __ptext28 907E                                      __ptext61 6636  
                                    __ptext53 9AF2                                      __ptext45 9ADA  
                                    __ptext37 87BE                                      __ptext29 0EF2  
                                    __ptext70 9150                                      __ptext62 8602  
                                    __ptext54 8A0E                                      __ptext46 9512  
                                    __ptext38 9AAA                                      __ptext71 55A8  
                                    __ptext63 9A2A                                      __ptext55 2776  
                                    __ptext47 5A8E                                      __ptext39 9D18  
                                    __ptext80 9CFC                                      __ptext72 8ECA  
                                    __ptext64 9CEE                                      __ptext56 6A2A  
                                    __ptext48 642E                                      __ptext81 4404  
                                    __ptext73 99D6                                      __ptext65 93A6  
                                    __ptext57 80F8                                      __ptext49 51AE  
                                    __ptext90 9C3E                                      __ptext82 5CCA  
                                    __ptext74 9C30                                      __ptext66 999A  
                                    __ptext58 90C4                                      __ptext91 2CE6  
                                    __ptext83 9C20                                      __ptext75 5302  
                                    __ptext67 9D1C                                      __ptext59 98D4  
                                    __ptext92 5832                                      __ptext84 995A  
                                    __ptext76 7692                                      __ptext68 99B8  
                                    __ptext93 9194                                      __ptext85 976C  
                                    __ptext77 8674                                      __ptext69 9D1E  
                                    __ptext94 7512                                      __ptext86 954C  
                                    __ptext78 774C                                      __ptext95 8A6A  
                                    __ptext87 8D8E                                      __ptext79 9868  
                                    __ptext96 9CAE                                      __ptext88 7452  
                                    __ptext97 6EAE                                      __ptext89 4C00  
                                    __ptext98 1910                                      __ptext99 5456  
                            __size_of_isupper 003C                            ?_set_hop_table_ttl 007D  
                 __size_of_nwkRxIndicateFrame 026A                                   appDataInd@i 00C2  
                  __size_of_nwkRoutePrepareTx 013C                          set_hop_table_ttl@cmd 007D  
              __size_of_UART1_SetErrorHandler 000E                                      _fhssList FCC9  
               __end_of_UART1_SetErrorHandler 9CA0                         __size_of_nwkRouteInit 0058  
                 DATAEE_WriteByte@GIEBitValue 0005                                 nwkRouteInit@i 0002  
                            __size_of_strcspn 0076                              __size_of_strncmp 0154  
                            __size_of_toupper 0066                      nwkTxBroadcastFrame@frame 0024  
                                 ??_cmdGetCAD 005C                              __size_of_strtoul 0046  
                                    _ledtimer 00F3                                      _ledqueue 0340  
                                 ??_cmdGetTTL 0002                                   ??___strtoxl 0017  
                              ?_nwkRouteFrame 0033                       __end_of_print_hop_table 9BF0  
                                _nwkGroupInit 9626                               cmdSetCADRSSI@p1 007F  
                             cmdSetCADRSSI@p2 0084                                 __size_of_cmdI 0006  
                         __end_of_NWK_DataReq 80F8                                 __size_of_idle 000C  
                               __size_of_atoi 01C0                                 __size_of_main 002E  
                               __size_of_dtoa 034E                           ??_set_hop_table_ttl 005C  
                               __size_of_rand 0112                                   ??_cmdSetAES 005C  
                  ??_nwkTxAckWaitTimerHandler 0014                                ??_cmdSetParity 005C  
                               __size_of_stoa 01B8                                 __size_of_utoa 0268  
                                ??_setTxPower 0011                                   ??_cmdSetTTL 0004  
                               __size_of_xtoa 032A                         __size_of_PHY_SetPanId 0002  
                                 ??_cmdRstCAD 005C                               cmdSetAES@AESstr 007F  
        __end_of_TMR0_DefaultInterruptHandler 9D22         __size_of_TMR0_DefaultInterruptHandler 0002  
                _TMR0_DefaultInterruptHandler 9D20                             ??_DATAEE_ReadByte 0004  
                        __CFG_WDTCWS$WDTCWS_7 000000                           get_timer0base@timer 0002  
                                    _sendInfo 87BE                 DATAEE_WriteByte_Platform@addr 0006  
                __end_of_FirmwareVersionMajor FDD5                 DATAEE_WriteByte_Platform@data 0008  
                                 _IVTLOCKbits 003FD4                            cmdSetBaud@tempbaud 003C  
                __end_of_FirmwareVersionMinor FDD4                           set_timer0base@timer 0002  
                       _nwkRouteErrorReceived 8752                        SX1276ReadBuffer@buffer 0009  
                    __size_of_PHY_TaskHandler 0006              nwkRxHandleReceivedFrame@mcHeader 002F  
                                ??_nwkTxFrame 0026                           sendOKMessage@F16603 01E3  
                  nwkRouteFrameReceived@frame 000B                     _UART1_OverrunErrorHandler 01EE  
                         __end_of_NWK_SetAddr 99D6                            __end_of_placeTimer 3EC0  
                                ??_set_parity 0002                              _NWK_RouteNextHop 8D38  
                                   stoa@F1139 01DC  UART1_SetOverrunErrorHandler@interruptHandler 0002  
                  nwkRouteFrameReceived@entry 0013            __size_of_UART1_DefaultErrorHandler 0006  
                                ?_cmdGetRxCnt 0002                                   ??_enableCrc 0011  
                                _PHY_DataConf 954C                                  _nwkRxSendAck 621E  
                                _nwkTxConfirm 9868                  __end_of_SYS_TimerTaskHandler 5456  
                   __size_of_SYS_TimerStarted 005C                                  ?_cmdBootLoad 0001  
                  ?_UART1_DefaultErrorHandler 0001                        __size_of_queueLedEvent 0048  
                                  strtol@base 0038                 __size_of_nwkRxRejectDuplicate 029C  
                                    _vfprintf 842C                                     printf@fmt 0077  
               nwkTxAckWaitTimerHandler@frame 0017                             _UART1_is_rx_ready 9AF2  
                       cmdSetParity@atCommand 007D                                      _syncList 02E6  
               nwkTxAckWaitTimerHandler@timer 0012                           setFrequency@num_mod 0027  
                                 _UART1_Write 888C                         fp__UART1_Transmit_ISR 0000  
            __end_of_DATAEE_ReadByte_Platform 56F6                              ___aomod@dividend 0002  
                   __end_of_set_hop_table_ttl 9BE0                            ?_UART1_is_rx_ready 0001  
                         fp__nwkDataReqTxConf 0000                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0004                   __end_of_UART1_RxDataHandler 976C  
                              _vfpfcnvrt$6952 006D                                  _nwkRouteInit 8CE0  
                                ?_cmdSetNaddr 007D                                   _uart1RxHead 005E  
                                ?_cmdSendSink 0002                     setCodingRate4@denominator 0013  
                             ?_CRC_Initialize 0001                                   _uart1TxHead 00EF  
                             ??_TMR0_CallBack 0001                                   _uart1RxTail 00ED  
                                 _NVMCON1bits 0039E5                                   _phyRxBuffer 0400  
                            ?_SPI1_WriteBlock 0003                                   _uart1TxTail 00EE  
                                    memcpy@d1 0008                            __end_of_setTxPower 9422  
                                    memcpy@s1 000A                                ??_DIA_ReadByte 0006  
                       __end_of_cmdGetCADRSSI 9A2A                                   ??_initRadio 0033  
                        SPI1_WriteBlock@block 0003                                      isalpha@c 0002  
                                    isdigit@c 0002                        ??_INTERRUPT_Initialize 0002  
                         DIO0_Receive_ISR@ind 001C                           ??_UART1_is_rx_ready 0002  
                                _PHY_SetPanId 9D1C                                    _SX1276Read 9B52  
                          __end_of_nwkTxFrame 408C                            __end_of_set_parity 8188  
                    __end_of_nwkDataReqTxConf 75D2                                      intlevel1 0000  
                                    intlevel2 0000                     nwkRouteSendRouteError@dst 002C  
                   nwkRouteSendRouteError@src 002A                                _get_timer0base 976C  
                   __size_of_nwkTxTaskHandler 0278                        NWK_RouteNewEntry@entry 0009  
                     __end_of_NWK_TaskHandler 9C4C                                      islower@c 0002  
                            ??_set_timer0base 0006                                      isspace@c 0002  
                 __end_of_nwkFrameCommandInit 9326                              ___lldiv@dividend 0016  
                     ?_PIN_MANAGER_Initialize 0001                    __size_of_NWK_RouteNewEntry 0100  
                                 _setSyncWord 9C00                             __CFG_CLKOUTEN$OFF 000000  
                       __size_of_NWK_SetPanId 001E                                      isupper@c 0002  
                                   strncmp@_l 0002                                     strncmp@_r 0004  
                            _executeATCommand 00B2                            get_timer0base@tval 0004  
                 NWK_RouteFindEntry@multicast 0004                        nwkRxServiceDataInd@ind 007D  
                               fp__appDataInd 0000                            set_timer0base@tval 0004  
                     NWK_OpenEndpoint@handler 0002                           _uart1RxStatusBuffer 013C  
             fp__TMR0_DefaultInterruptHandler 0000                 ?_TMR0_DefaultInterruptHandler 0001  
                                 ??_nwkRxInit 0005                                   ??_nwkTxInit 0002  
                             _nwkTxDelayTimer 0194                             _setPreambleLength 9B0A  
                                 _PHY_DataInd 4C00                                   _PHY_DataReq 8A6A  
                        PHY_SetShortAddr@addr 0002                  __size_of_bootLoadApplication 02D4  
                                  _SPI1SCKPPS 003ADE                                    _SPI1SDIPPS 003ADF  
                                   strtok@sep 0011                                      printf@ap 005A  
                   __end_of_UART1_is_rx_ready 9B0A                                    _UART1_Read 8A0E  
UART1_SetFramingErrorHandler@interruptHandler 0002                            ?_setPreambleLength 0011  
           __end_of_UART1_DefaultErrorHandler 9D0E                               ___aomod@divisor 000A  
                    nwkRouteErrorReceived@ind 000D                                   ??_vfpfcnvrt 004C  
                                    stoa@nuls 0012                               ___aomod@counter 0012  
                         SPI1_WriteBlock@data 0007                       ??_nwkTxConvertPhyStatus 0002  
                     ??_nwkRouteFrameReceived 000D                       ?_nwkRouteNormalizeRanks 0001  
      nwkFrame@nwkFramePayloadSize@frame_4442 0002                              ??_nwkRouteRemove 000B  
                            _halTimerIrqCount 0165                           ??_setPreambleLength 0013  
                            ___lldiv@quotient 001E                                   _uart_parity 017E  
                             _TMR0_Initialize 9326                               ??_set_uart_baud 0002  
                                    strcspn@c 000A                                      strcspn@i 000D  
                                    strcspn@s 0008                             _current_baud_rate 0156  
                                    strncmp@l 0009                                      strncmp@n 0006  
                  __end_of_getSpreadingFactor 9A78                                      strncmp@r 000B  
                                    toupper@c 0008                    __end_of_setSpreadingFactor 5CCA  
                   __size_of_UART1_Initialize 00AC                      DIO0_Receive_ISR@irqFlags 001B  
                             _SYS_TaskHandler 9C30                     fp__nwkTxDelayTimerHandler 0000  
                                 _NWK_DataReq 8068                                      strstr@nl 0011  
                     __size_of_nwkDataReqInit 000C                                      strtoul@s 0034  
                     _CRC_CalculatedResultGet 6636                      _UART1_TxInterruptHandler 01F6  
                 __end_of_nwkTxBroadcastFrame 55A8                                 _queueLedEvent 8FA8  
                                _NWK_SetPanId 999A                        __end_of_get_timer0base 9798  
                         __end_of_Default_ISR 9D26                               ??_nwkRouteFrame 0035  
                             cmdSetRFCH@CHstr 0081                     __size_of_processATCommand 0242  
                                ___aodiv@sign 0013                              _nwkRxTaskHandler 6EAE  
              __end_of_PIN_MANAGER_Initialize 8330                       SPI1_ReadBlock@blockSize 0005  
                       NWK_RouteFindEntry@dst 0002                                   _NWK_SetAddr 99B8  
                            ?_print_hop_table 007D           __end_ofnwkFrame@nwkFramePayloadSize 97EE  
                 nwkFrame@nwkFramePayloadSize 97C4                      __end_of_nwkTxAckReceived 6A2A  
                ?_UART1_SetTxInterruptHandler 0002                        ?_nwkRouteErrorReceived 000D  
                          _eeprom_write_flags 00EA                                cmdBcast@msgstr 007F  
                            ??_PHY_SetChannel 002F                     __end_of_setPreambleLength 9B22  
                                ___aomod@sign 0013                           NWK_RouteFindEntry@i 0007  
                  __end_of_spi1_configuration FDD3                    nwkRxRejectDuplicate@header 0012  
              CRC_CalculatedResultGet@reverse 0010                 CRC_CalculatedResultGet@result 0011  
                       __end_of_cmdSetCADRSSI 71FC  
