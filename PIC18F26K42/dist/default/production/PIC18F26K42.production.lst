

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 09 23:18:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1,inline
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=2
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=2
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=2
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=2
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=2
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=2
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=2
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=2
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=2
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1,group=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1,group=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=4,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	text226,global,reloc=4,class=CODE,delta=1
   251                           	psect	text227,global,reloc=2,class=CODE,delta=1
   252                           	psect	text228,global,reloc=4,class=CODE,delta=1
   253                           	psect	text229,global,reloc=2,class=CODE,delta=1
   254                           	psect	text230,global,reloc=2,class=CODE,delta=1
   255                           	psect	text231,global,reloc=2,class=CODE,delta=1
   256                           	psect	text232,global,reloc=2,class=CODE,delta=1
   257                           	psect	text233,global,reloc=2,class=CODE,delta=1
   258                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   259                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   260                           	psect	text234,global,reloc=2,class=CODE,delta=1
   261                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   262  0000                     
   263                           ; Version 2.10
   264                           ; Generated 31/07/2019 GMT
   265                           ; 
   266                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   267                           ; All rights reserved.
   268                           ; 
   269                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   270                           ; 
   271                           ; Redistribution and use in source and binary forms, with or without modification, are
   272                           ; permitted provided that the following conditions are met:
   273                           ; 
   274                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   275                           ;        conditions and the following disclaimer.
   276                           ; 
   277                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   278                           ;        of conditions and the following disclaimer in the documentation and/or other
   279                           ;        materials provided with the distribution.
   280                           ; 
   281                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   282                           ;        software without specific prior written permission.
   283                           ; 
   284                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   285                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   286                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   287                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   288                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   289                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   290                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   291                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   292                           ; 
   293                           ; 
   294                           ; Code-generator required, PIC18F26K42 Definitions
   295                           ; 
   296                           ; SFR Addresses
   297  0000                     
   298                           	psect	idataBANK0
   299  008E4A                     __pidataBANK0:
   300                           	opt callstack 0
   301                           
   302                           ;initializer for _RSSITarget
   303  008E4A  B0                 	db	176
   304                           
   305                           ;initializer for _currentNetID
   306  008E4B  55                 	db	85
   307                           
   308                           ;initializer for _ATTimeoutTimer
   309  008E4C  03E8               	dw	1000
   310                           
   311                           	psect	idataBANK1
   312  008B56                     __pidataBANK1:
   313                           	opt callstack 0
   314                           
   315                           ;initializer for _syncList
   316  008B56  12                 	db	18
   317  008B57  23                 	db	35
   318  008B58  45                 	db	69
   319  008B59  56                 	db	86
   320  008B5A  67                 	db	103
   321  008B5B  78                 	db	120
   322  008B5C  89                 	db	137
   323  008B5D  9A                 	db	154
   324  008B5E  AB                 	db	171
   325  008B5F  BC                 	db	188
   326                           
   327                           ;initializer for stoa@F1139
   328  008B60  28                 	db	40
   329  008B61  6E                 	db	110
   330  008B62  75                 	db	117
   331  008B63  6C                 	db	108
   332  008B64  6C                 	db	108
   333  008B65  29                 	db	41
   334  008B66  00                 	db	0
   335                           
   336                           ;initializer for sendOKMessage@F16639
   337  008B67  4F                 	db	79
   338  008B68  4B                 	db	75
   339  008B69  0D                 	db	13
   340  008B6A  0A                 	db	10
   341  008B6B  00                 	db	0
   342                           
   343                           ;initializer for _test_timer
   344  008B6C  1388               	dw	5000
   345                           
   346                           ;initializer for _currentAddr1
   347  008B6E  34                 	db	52
   348                           
   349                           ;initializer for _currentAddr0
   350  008B6F  12                 	db	18
   351                           
   352                           	psect	mediumconst
   353  00FCB2                     __pmediumconst:
   354                           	opt callstack 0
   355  00FCB2  00                 	db	0
   356  00FCB3                     _fhssList:
   357                           	opt callstack 0
   358  00FCB3  7680               	dw	30336
   359  00FCB5  3600               	dw	13824
   360  00FCB7  FB00               	dw	64256
   361  00FCB9  361E               	dw	13854
   362  00FCBB  7F80               	dw	32640
   363  00FCBD  363D               	dw	13885
   364  00FCBF  0400               	dw	1024
   365  00FCC1  365C               	dw	13916
   366  00FCC3  8880               	dw	34944
   367  00FCC5  367A               	dw	13946
   368  00FCC7  0D00               	dw	3328
   369  00FCC9  3699               	dw	13977
   370  00FCCB  9180               	dw	37248
   371  00FCCD  36B7               	dw	14007
   372  00FCCF  1600               	dw	5632
   373  00FCD1  36D6               	dw	14038
   374  00FCD3  9A80               	dw	39552
   375  00FCD5  36F4               	dw	14068
   376  00FCD7  1F00               	dw	7936
   377  00FCD9  3713               	dw	14099
   378  00FCDB  DCC0               	dw	56512
   379  00FCDD  3703               	dw	14083
   380  00FCDF  5840               	dw	22592
   381  00FCE1  36E5               	dw	14053
   382  00FCE3  D3C0               	dw	54208
   383  00FCE5  36C6               	dw	14022
   384  00FCE7  4F40               	dw	20288
   385  00FCE9  36A8               	dw	13992
   386  00FCEB  CAC0               	dw	51904
   387  00FCED  3689               	dw	13961
   388  00FCEF  4640               	dw	17984
   389  00FCF1  366B               	dw	13931
   390  00FCF3  C1C0               	dw	49600
   391  00FCF5  364C               	dw	13900
   392  00FCF7  3D40               	dw	15680
   393  00FCF9  362E               	dw	13870
   394  00FCFB  B8C0               	dw	47296
   395  00FCFD  360F               	dw	13839
   396  00FCFF  3440               	dw	13376
   397  00FD01  35F1               	dw	13809
   398  00FD03  AFC0               	dw	44992
   399  00FD05  35D2               	dw	13778
   400  00FD07  D560               	dw	54624
   401  00FD09  35F8               	dw	13816
   402  00FD0B  59E0               	dw	23008
   403  00FD0D  3617               	dw	13847
   404  00FD0F  DE60               	dw	56928
   405  00FD11  3635               	dw	13877
   406  00FD13  6BE0               	dw	27616
   407  00FD15  3691               	dw	13969
   408  00FD17  F060               	dw	61536
   409  00FD19  36AF               	dw	13999
   410  00FD1B  74E0               	dw	29920
   411  00FD1D  36CE               	dw	14030
   412  00FD1F  F960               	dw	63840
   413  00FD21  36EC               	dw	14060
   414  00FD23  7DE0               	dw	32224
   415  00FD25  370B               	dw	14091
   416  00FD27  C020               	dw	49184
   417  00FD29  371A               	dw	14106
   418  00FD2B  4710               	dw	18192
   419  00FD2D  3604               	dw	13828
   420  00FD2F  6CB0               	dw	27824
   421  00FD31  362A               	dw	13866
   422  00FD33  5010               	dw	20496
   423  00FD35  3641               	dw	13889
   424  00FD37  75B0               	dw	30128
   425  00FD39  3667               	dw	13927
   426  00FD3B  5910               	dw	22800
   427  00FD3D  367E               	dw	13950
   428  00FD3F  7EB0               	dw	32432
   429  00FD41  36A4               	dw	13988
   430  00FD43  6210               	dw	25104
   431  00FD45  36BB               	dw	14011
   432  00FD47  87B0               	dw	34736
   433  00FD49  36E1               	dw	14049
   434  00FD4B  6B10               	dw	27408
   435  00FD4D  36F8               	dw	14072
   436  00FD4F  90B0               	dw	37040
   437  00FD51  371E               	dw	14110
   438  00FD53  AD50               	dw	44368
   439  00FD55  3707               	dw	14087
   440  00FD57  28D0               	dw	10448
   441  00FD59  36E9               	dw	14057
   442  00FD5B  A450               	dw	42064
   443  00FD5D  36CA               	dw	14026
   444  00FD5F  C0F0               	dw	49392
   445  00FD61  36B3               	dw	14003
   446  00FD63  9B50               	dw	39760
   447  00FD65  368D               	dw	13965
   448  00FD67  B7F0               	dw	47088
   449  00FD69  3676               	dw	13942
   450  00FD6B  9250               	dw	37456
   451  00FD6D  3650               	dw	13904
   452  00FD6F  AEF0               	dw	44784
   453  00FD71  3639               	dw	13881
   454  00FD73  8950               	dw	35152
   455  00FD75  3613               	dw	13843
   456  00FD77  A5F0               	dw	42480
   457  00FD79  35FC               	dw	13820
   458  00FD7B  50E0               	dw	20704
   459  00FD7D  35DA               	dw	13786
   460  00FD7F  04D0               	dw	1232
   461  00FD81  35F5               	dw	13813
   462  00FD83  2A70               	dw	10864
   463  00FD85  361B               	dw	13851
   464  00FD87  0DD0               	dw	3536
   465  00FD89  3632               	dw	13874
   466  00FD8B  3C70               	dw	15472
   467  00FD8D  3695               	dw	13973
   468  00FD8F  1FD0               	dw	8144
   469  00FD91  36AC               	dw	13996
   470  00FD93  4570               	dw	17776
   471  00FD95  36D2               	dw	14034
   472  00FD97  28D0               	dw	10448
   473  00FD99  36E9               	dw	14057
   474  00FD9B  4E70               	dw	20080
   475  00FD9D  370F               	dw	14095
   476  00FD9F  0E40               	dw	3648
   477  00FDA1  371B               	dw	14107
   478  00FDA3  A5F0               	dw	42480
   479  00FDA5  35FC               	dw	13820
   480  00FDA7  F130               	dw	61744
   481  00FDA9  3648               	dw	13896
   482  00FDAB  75B0               	dw	30128
   483  00FDAD  3667               	dw	13927
   484  00FDAF                     __end_of_fhssList:
   485                           	opt callstack 0
   486  00FDAF  03                 	db	3
   487  00FDB0  08                 	db	8
   488  00FDB1  1A                 	db	26
   489  00FDB2  40                 	db	64
   490  00FDB3  80                 	db	128
   491  00FDB4  BE                 	db	190
   492  00FDB5  E6                 	db	230
   493  00FDB6  F7                 	db	247
   494  00FDB7  FC                 	db	252
   495  00FDB8                     __end_ofNWK_LinearizeLqi@val:
   496                           	opt callstack 0
   497  00FDB8  82                 	db	130
   498  00FDB9  C0                 	db	192
   499  00FDBA  03                 	db	3
   500  00FDBB  03                 	db	3
   501  00FDBC  00                 	db	0
   502  00FDBD                     __end_of_spi1_configuration:
   503                           	opt callstack 0
   504  00FDBD  01                 	db	1
   505  00FDBE                     __end_of_FirmwareVersionMinor:
   506                           	opt callstack 0
   507  00FDBE  02                 	db	2
   508  00FDBF                     __end_of_FirmwareVersionMajor:
   509                           	opt callstack 0
   510  00FDBF  00                 	db	0
   511  00FDC0                     __end_of_ATVersionMinor:
   512                           	opt callstack 0
   513  00FDC0  01                 	db	1
   514  00FDC1                     __end_of_ATVersionMajor:
   515                           	opt callstack 0
   516  00FDC1                     STR_60:
   517                           
   518                           ; BSR set to: 0
   519  00FDC1  44                 	db	68	;'D'
   520  00FDC2  53                 	db	83	;'S'
   521  00FDC3  54                 	db	84	;'T'
   522  00FDC4  3A                 	db	58	;':'
   523  00FDC5  25                 	db	37
   524  00FDC6  30                 	db	48	;'0'
   525  00FDC7  34                 	db	52	;'4'
   526  00FDC8  58                 	db	88	;'X'
   527  00FDC9  20                 	db	32
   528  00FDCA  4E                 	db	78	;'N'
   529  00FDCB  58                 	db	88	;'X'
   530  00FDCC  54                 	db	84	;'T'
   531  00FDCD  3A                 	db	58	;':'
   532  00FDCE  25                 	db	37
   533  00FDCF  30                 	db	48	;'0'
   534  00FDD0  34                 	db	52	;'4'
   535  00FDD1  58                 	db	88	;'X'
   536  00FDD2  20                 	db	32
   537  00FDD3  53                 	db	83	;'S'
   538  00FDD4  43                 	db	67	;'C'
   539  00FDD5  4F                 	db	79	;'O'
   540  00FDD6  3A                 	db	58	;':'
   541  00FDD7  25                 	db	37
   542  00FDD8  75                 	db	117	;'u'
   543  00FDD9  20                 	db	32
   544  00FDDA  4C                 	db	76	;'L'
   545  00FDDB  51                 	db	81	;'Q'
   546  00FDDC  49                 	db	73	;'I'
   547  00FDDD  3A                 	db	58	;':'
   548  00FDDE  25                 	db	37
   549  00FDDF  75                 	db	117	;'u'
   550  00FDE0  0D                 	db	13
   551  00FDE1  0A                 	db	10
   552  00FDE2  00                 	db	0
   553  00FDE3                     STR_133:
   554                           
   555                           ; BSR set to: 0
   556  00FDE3  46                 	db	70	;'F'
   557  00FDE4  69                 	db	105	;'i'
   558  00FDE5  72                 	db	114	;'r'
   559  00FDE6  6D                 	db	109	;'m'
   560  00FDE7  77                 	db	119	;'w'
   561  00FDE8  61                 	db	97	;'a'
   562  00FDE9  72                 	db	114	;'r'
   563  00FDEA  65                 	db	101	;'e'
   564  00FDEB  20                 	db	32
   565  00FDEC  56                 	db	86	;'V'
   566  00FDED  65                 	db	101	;'e'
   567  00FDEE  72                 	db	114	;'r'
   568  00FDEF  73                 	db	115	;'s'
   569  00FDF0  69                 	db	105	;'i'
   570  00FDF1  6F                 	db	111	;'o'
   571  00FDF2  6E                 	db	110	;'n'
   572  00FDF3  20                 	db	32
   573  00FDF4  25                 	db	37
   574  00FDF5  31                 	db	49	;'1'
   575  00FDF6  75                 	db	117	;'u'
   576  00FDF7  2E                 	db	46
   577  00FDF8  25                 	db	37
   578  00FDF9  30                 	db	48	;'0'
   579  00FDFA  32                 	db	50	;'2'
   580  00FDFB  75                 	db	117	;'u'
   581  00FDFC  0D                 	db	13
   582  00FDFD  0A                 	db	10
   583  00FDFE  00                 	db	0
   584  00FDFF                     STR_132:
   585                           
   586                           ; BSR set to: 0
   587  00FDFF  41                 	db	65	;'A'
   588  00FE00  54                 	db	84	;'T'
   589  00FE01  20                 	db	32
   590  00FE02  43                 	db	67	;'C'
   591  00FE03  6F                 	db	111	;'o'
   592  00FE04  6D                 	db	109	;'m'
   593  00FE05  6D                 	db	109	;'m'
   594  00FE06  61                 	db	97	;'a'
   595  00FE07  6E                 	db	110	;'n'
   596  00FE08  64                 	db	100	;'d'
   597  00FE09  20                 	db	32
   598  00FE0A  53                 	db	83	;'S'
   599  00FE0B  65                 	db	101	;'e'
   600  00FE0C  74                 	db	116	;'t'
   601  00FE0D  20                 	db	32
   602  00FE0E  25                 	db	37
   603  00FE0F  31                 	db	49	;'1'
   604  00FE10  75                 	db	117	;'u'
   605  00FE11  2E                 	db	46
   606  00FE12  25                 	db	37
   607  00FE13  30                 	db	48	;'0'
   608  00FE14  32                 	db	50	;'2'
   609  00FE15  75                 	db	117	;'u'
   610  00FE16  0D                 	db	13
   611  00FE17  0A                 	db	10
   612  00FE18  00                 	db	0
   613  00FE19                     STR_29:
   614                           
   615                           ; BSR set to: 0
   616  00FE19  43                 	db	67	;'C'
   617  00FE1A  41                 	db	65	;'A'
   618  00FE1B  44                 	db	68	;'D'
   619  00FE1C  20                 	db	32
   620  00FE1D  43                 	db	67	;'C'
   621  00FE1E  4F                 	db	79	;'O'
   622  00FE1F  55                 	db	85	;'U'
   623  00FE20  4E                 	db	78	;'N'
   624  00FE21  54                 	db	84	;'T'
   625  00FE22  45                 	db	69	;'E'
   626  00FE23  52                 	db	82	;'R'
   627  00FE24  20                 	db	32
   628  00FE25  3D                 	db	61	;'='
   629  00FE26  20                 	db	32
   630  00FE27  25                 	db	37
   631  00FE28  30                 	db	48	;'0'
   632  00FE29  32                 	db	50	;'2'
   633  00FE2A  58                 	db	88	;'X'
   634  00FE2B  0D                 	db	13
   635  00FE2C  0A                 	db	10
   636  00FE2D  00                 	db	0
   637  00FE2E                     
   638                           ; BSR set to: 0
   639  00FE2E  4D                 	db	77	;'M'
   640  00FE2F  4F                 	db	79	;'O'
   641  00FE30  44                 	db	68	;'D'
   642  00FE31  45                 	db	69	;'E'
   643  00FE32  20                 	db	32
   644  00FE33  3D                 	db	61	;'='
   645  00FE34  20                 	db	32
   646  00FE35  45                 	db	69	;'E'
   647  00FE36  4E                 	db	78	;'N'
   648  00FE37  44                 	db	68	;'D'
   649  00FE38  20                 	db	32
   650  00FE39  4E                 	db	78	;'N'
   651  00FE3A  4F                 	db	79	;'O'
   652  00FE3B  44                 	db	68	;'D'
   653  00FE3C  45                 	db	69	;'E'
   654  00FE3D  0D                 	db	13
   655  00FE3E  0A                 	db	10
   656  00FE3F  00                 	db	0
   657  00FE40                     STR_31:
   658                           
   659                           ; BSR set to: 0
   660  00FE40  4D                 	db	77	;'M'
   661  00FE41  4F                 	db	79	;'O'
   662  00FE42  44                 	db	68	;'D'
   663  00FE43  45                 	db	69	;'E'
   664  00FE44  20                 	db	32
   665  00FE45  3D                 	db	61	;'='
   666  00FE46  20                 	db	32
   667  00FE47  52                 	db	82	;'R'
   668  00FE48  45                 	db	69	;'E'
   669  00FE49  50                 	db	80	;'P'
   670  00FE4A  45                 	db	69	;'E'
   671  00FE4B  41                 	db	65	;'A'
   672  00FE4C  54                 	db	84	;'T'
   673  00FE4D  45                 	db	69	;'E'
   674  00FE4E  52                 	db	82	;'R'
   675  00FE4F  0D                 	db	13
   676  00FE50  0A                 	db	10
   677  00FE51  00                 	db	0
   678  00FE52                     STR_11:
   679                           
   680                           ; BSR set to: 0
   681  00FE52  41                 	db	65	;'A'
   682  00FE53  44                 	db	68	;'D'
   683  00FE54  44                 	db	68	;'D'
   684  00FE55  52                 	db	82	;'R'
   685  00FE56  3D                 	db	61	;'='
   686  00FE57  25                 	db	37
   687  00FE58  30                 	db	48	;'0'
   688  00FE59  32                 	db	50	;'2'
   689  00FE5A  58                 	db	88	;'X'
   690  00FE5B  25                 	db	37
   691  00FE5C  30                 	db	48	;'0'
   692  00FE5D  32                 	db	50	;'2'
   693  00FE5E  58                 	db	88	;'X'
   694  00FE5F  0D                 	db	13
   695  00FE60  0A                 	db	10
   696  00FE61  00                 	db	0
   697  00FE62                     STR_88:
   698                           
   699                           ; BSR set to: 0
   700  00FE62  2B                 	db	43
   701  00FE63  43                 	db	67	;'C'
   702  00FE64  41                 	db	65	;'A'
   703  00FE65  44                 	db	68	;'D'
   704  00FE66  43                 	db	67	;'C'
   705  00FE67  4F                 	db	79	;'O'
   706  00FE68  55                 	db	85	;'U'
   707  00FE69  4E                 	db	78	;'N'
   708  00FE6A  54                 	db	84	;'T'
   709  00FE6B  45                 	db	69	;'E'
   710  00FE6C  52                 	db	82	;'R'
   711  00FE6D  52                 	db	82	;'R'
   712  00FE6E  53                 	db	83	;'S'
   713  00FE6F  54                 	db	84	;'T'
   714  00FE70  00                 	db	0
   715  00FE71                     STR_37:
   716                           
   717                           ; BSR set to: 0
   718  00FE71  54                 	db	84	;'T'
   719  00FE72  58                 	db	88	;'X'
   720  00FE73  20                 	db	32
   721  00FE74  50                 	db	80	;'P'
   722  00FE75  4F                 	db	79	;'O'
   723  00FE76  57                 	db	87	;'W'
   724  00FE77  45                 	db	69	;'E'
   725  00FE78  52                 	db	82	;'R'
   726  00FE79  3D                 	db	61	;'='
   727  00FE7A  25                 	db	37
   728  00FE7B  75                 	db	117	;'u'
   729  00FE7C  0D                 	db	13
   730  00FE7D  0A                 	db	10
   731  00FE7E  00                 	db	0
   732  00FE7F                     STR_15:
   733                           
   734                           ; BSR set to: 0
   735  00FE7F  4E                 	db	78	;'N'
   736  00FE80  41                 	db	65	;'A'
   737  00FE81  44                 	db	68	;'D'
   738  00FE82  44                 	db	68	;'D'
   739  00FE83  52                 	db	82	;'R'
   740  00FE84  3D                 	db	61	;'='
   741  00FE85  25                 	db	37
   742  00FE86  30                 	db	48	;'0'
   743  00FE87  32                 	db	50	;'2'
   744  00FE88  58                 	db	88	;'X'
   745  00FE89  0D                 	db	13
   746  00FE8A  0A                 	db	10
   747  00FE8B  00                 	db	0
   748  00FE8C                     STR_42:
   749                           
   750                           ; BSR set to: 0
   751  00FE8C  43                 	db	67	;'C'
   752  00FE8D  41                 	db	65	;'A'
   753  00FE8E  44                 	db	68	;'D'
   754  00FE8F  20                 	db	32
   755  00FE90  52                 	db	82	;'R'
   756  00FE91  53                 	db	83	;'S'
   757  00FE92  53                 	db	83	;'S'
   758  00FE93  3D                 	db	61	;'='
   759  00FE94  25                 	db	37
   760  00FE95  69                 	db	105	;'i'
   761  00FE96  0D                 	db	13
   762  00FE97  0A                 	db	10
   763  00FE98  00                 	db	0
   764  00FE99                     STR_1:
   765                           
   766                           ; BSR set to: 0
   767  00FE99  52                 	db	82	;'R'
   768  00FE9A  58                 	db	88	;'X'
   769  00FE9B  3A                 	db	58	;':'
   770  00FE9C  25                 	db	37
   771  00FE9D  30                 	db	48	;'0'
   772  00FE9E  34                 	db	52	;'4'
   773  00FE9F  58                 	db	88	;'X'
   774  00FEA0  3A                 	db	58	;':'
   775  00FEA1  25                 	db	37
   776  00FEA2  73                 	db	115	;'s'
   777  00FEA3  0D                 	db	13
   778  00FEA4  0A                 	db	10
   779  00FEA5  00                 	db	0
   780  00FEA6                     STR_33:
   781                           
   782                           ; BSR set to: 0
   783  00FEA6  43                 	db	67	;'C'
   784  00FEA7  48                 	db	72	;'H'
   785  00FEA8  41                 	db	65	;'A'
   786  00FEA9  4E                 	db	78	;'N'
   787  00FEAA  4E                 	db	78	;'N'
   788  00FEAB  45                 	db	69	;'E'
   789  00FEAC  4C                 	db	76	;'L'
   790  00FEAD  3D                 	db	61	;'='
   791  00FEAE  25                 	db	37
   792  00FEAF  75                 	db	117	;'u'
   793  00FEB0  0D                 	db	13
   794  00FEB1  0A                 	db	10
   795  00FEB2  00                 	db	0
   796  00FEB3                     STR_86:
   797                           
   798                           ; BSR set to: 0
   799  00FEB3  2B                 	db	43
   800  00FEB4  43                 	db	67	;'C'
   801  00FEB5  41                 	db	65	;'A'
   802  00FEB6  44                 	db	68	;'D'
   803  00FEB7  43                 	db	67	;'C'
   804  00FEB8  4F                 	db	79	;'O'
   805  00FEB9  55                 	db	85	;'U'
   806  00FEBA  4E                 	db	78	;'N'
   807  00FEBB  54                 	db	84	;'T'
   808  00FEBC  45                 	db	69	;'E'
   809  00FEBD  52                 	db	82	;'R'
   810  00FEBE  3F                 	db	63	;'?'
   811  00FEBF  00                 	db	0
   812  00FEC0                     STR_131:
   813                           
   814                           ; BSR set to: 0
   815  00FEC0  4C                 	db	76	;'L'
   816  00FEC1  6F                 	db	111	;'o'
   817  00FEC2  52                 	db	82	;'R'
   818  00FEC3  61                 	db	97	;'a'
   819  00FEC4  20                 	db	32
   820  00FEC5  4D                 	db	77	;'M'
   821  00FEC6  65                 	db	101	;'e'
   822  00FEC7  73                 	db	115	;'s'
   823  00FEC8  68                 	db	104	;'h'
   824  00FEC9  0D                 	db	13
   825  00FECA  0A                 	db	10
   826  00FECB  00                 	db	0
   827  00FECC                     STR_4:
   828                           
   829                           ; BSR set to: 0
   830  00FECC  4E                 	db	78	;'N'
   831  00FECD  4F                 	db	79	;'O'
   832  00FECE  54                 	db	84	;'T'
   833  00FECF  20                 	db	32
   834  00FED0  4F                 	db	79	;'O'
   835  00FED1  4B                 	db	75	;'K'
   836  00FED2  3A                 	db	58	;':'
   837  00FED3  25                 	db	37
   838  00FED4  75                 	db	117	;'u'
   839  00FED5  0D                 	db	13
   840  00FED6  0A                 	db	10
   841  00FED7  00                 	db	0
   842  00FED8                     STR_72:
   843                           
   844                           ; BSR set to: 0
   845  00FED8  2B                 	db	43
   846  00FED9  53                 	db	83	;'S'
   847  00FEDA  48                 	db	72	;'H'
   848  00FEDB  4F                 	db	79	;'O'
   849  00FEDC  57                 	db	87	;'W'
   850  00FEDD  48                 	db	72	;'H'
   851  00FEDE  4F                 	db	79	;'O'
   852  00FEDF  50                 	db	80	;'P'
   853  00FEE0  53                 	db	83	;'S'
   854  00FEE1  3F                 	db	63	;'?'
   855  00FEE2  00                 	db	0
   856  00FEE3                     STR_92:
   857                           
   858                           ; BSR set to: 0
   859  00FEE3  2B                 	db	43
   860  00FEE4  43                 	db	67	;'C'
   861  00FEE5  41                 	db	65	;'A'
   862  00FEE6  44                 	db	68	;'D'
   863  00FEE7  52                 	db	82	;'R'
   864  00FEE8  53                 	db	83	;'S'
   865  00FEE9  53                 	db	83	;'S'
   866  00FEEA  49                 	db	73	;'I'
   867  00FEEB  3D                 	db	61	;'='
   868  00FEEC  00                 	db	0
   869  00FEED                     STR_128:
   870                           
   871                           ; BSR set to: 0
   872  00FEED  2B                 	db	43
   873  00FEEE  54                 	db	84	;'T'
   874  00FEEF  58                 	db	88	;'X'
   875  00FEF0  50                 	db	80	;'P'
   876  00FEF1  4F                 	db	79	;'O'
   877  00FEF2  57                 	db	87	;'W'
   878  00FEF3  45                 	db	69	;'E'
   879  00FEF4  52                 	db	82	;'R'
   880  00FEF5  3D                 	db	61	;'='
   881  00FEF6  00                 	db	0
   882  00FEF7                     STR_90:
   883                           
   884                           ; BSR set to: 0
   885  00FEF7  2B                 	db	43
   886  00FEF8  43                 	db	67	;'C'
   887  00FEF9  41                 	db	65	;'A'
   888  00FEFA  44                 	db	68	;'D'
   889  00FEFB  52                 	db	82	;'R'
   890  00FEFC  53                 	db	83	;'S'
   891  00FEFD  53                 	db	83	;'S'
   892  00FEFE  49                 	db	73	;'I'
   893  00FEFF  3F                 	db	63	;'?'
   894  00FF00  00                 	db	0
   895  00FF01                     STR_126:
   896                           
   897                           ; BSR set to: 0
   898  00FF01  2B                 	db	43
   899  00FF02  54                 	db	84	;'T'
   900  00FF03  58                 	db	88	;'X'
   901  00FF04  50                 	db	80	;'P'
   902  00FF05  4F                 	db	79	;'O'
   903  00FF06  57                 	db	87	;'W'
   904  00FF07  45                 	db	69	;'E'
   905  00FF08  52                 	db	82	;'R'
   906  00FF09  3F                 	db	63	;'?'
   907  00FF0A  00                 	db	0
   908  00FF0B                     STR_78:
   909                           
   910                           ; BSR set to: 0
   911  00FF0B  2B                 	db	43
   912  00FF0C  42                 	db	66	;'B'
   913  00FF0D  4F                 	db	79	;'O'
   914  00FF0E  4F                 	db	79	;'O'
   915  00FF0F  54                 	db	84	;'T'
   916  00FF10  4C                 	db	76	;'L'
   917  00FF11  4F                 	db	79	;'O'
   918  00FF12  41                 	db	65	;'A'
   919  00FF13  44                 	db	68	;'D'
   920  00FF14  00                 	db	0
   921  00FF15                     STR_84:
   922                           
   923                           ; BSR set to: 0
   924  00FF15  2B                 	db	43
   925  00FF16  41                 	db	65	;'A'
   926  00FF17  45                 	db	69	;'E'
   927  00FF18  53                 	db	83	;'S'
   928  00FF19  4B                 	db	75	;'K'
   929  00FF1A  45                 	db	69	;'E'
   930  00FF1B  59                 	db	89	;'Y'
   931  00FF1C  3A                 	db	58	;':'
   932  00FF1D  00                 	db	0
   933  00FF1E                     STR_98:
   934                           
   935                           ; BSR set to: 0
   936  00FF1E  2B                 	db	43
   937  00FF1F  48                 	db	72	;'H'
   938  00FF20  4F                 	db	79	;'O'
   939  00FF21  50                 	db	80	;'P'
   940  00FF22  54                 	db	84	;'T'
   941  00FF23  54                 	db	84	;'T'
   942  00FF24  4C                 	db	76	;'L'
   943  00FF25  3D                 	db	61	;'='
   944  00FF26  00                 	db	0
   945  00FF27                     STR_110:
   946                           
   947                           ; BSR set to: 0
   948  00FF27  2B                 	db	43
   949  00FF28  50                 	db	80	;'P'
   950  00FF29  41                 	db	65	;'A'
   951  00FF2A  52                 	db	82	;'R'
   952  00FF2B  49                 	db	73	;'I'
   953  00FF2C  54                 	db	84	;'T'
   954  00FF2D  59                 	db	89	;'Y'
   955  00FF2E  3D                 	db	61	;'='
   956  00FF2F  00                 	db	0
   957  00FF30                     STR_64:
   958                           
   959                           ; BSR set to: 0
   960  00FF30  2B                 	db	43
   961  00FF31  53                 	db	83	;'S'
   962  00FF32  45                 	db	69	;'E'
   963  00FF33  54                 	db	84	;'T'
   964  00FF34  53                 	db	83	;'S'
   965  00FF35  49                 	db	73	;'I'
   966  00FF36  4E                 	db	78	;'N'
   967  00FF37  4B                 	db	75	;'K'
   968  00FF38  00                 	db	0
   969  00FF39                     STR_56:
   970                           
   971                           ; BSR set to: 0
   972  00FF39  53                 	db	83	;'S'
   973  00FF3A  46                 	db	70	;'F'
   974  00FF3B  3D                 	db	61	;'='
   975  00FF3C  25                 	db	37
   976  00FF3D  75                 	db	117	;'u'
   977  00FF3E  0D                 	db	13
   978  00FF3F  0A                 	db	10
   979  00FF40  00                 	db	0
   980  00FF41                     STR_134:
   981                           
   982                           ; BSR set to: 0
   983  00FF41  52                 	db	82	;'R'
   984  00FF42  65                 	db	101	;'e'
   985  00FF43  67                 	db	103	;'g'
   986  00FF44  69                 	db	105	;'i'
   987  00FF45  6F                 	db	111	;'o'
   988  00FF46  6E                 	db	110	;'n'
   989  00FF47  20                 	db	32
   990  00FF48  00                 	db	0
   991  00FF49                     STR_108:
   992                           
   993                           ; BSR set to: 0
   994  00FF49  2B                 	db	43
   995  00FF4A  4E                 	db	78	;'N'
   996  00FF4B  41                 	db	65	;'A'
   997  00FF4C  44                 	db	68	;'D'
   998  00FF4D  44                 	db	68	;'D'
   999  00FF4E  52                 	db	82	;'R'
  1000  00FF4F  3D                 	db	61	;'='
  1001  00FF50  00                 	db	0
  1002  00FF51                     STR_74:
  1003                           
  1004                           ; BSR set to: 0
  1005  00FF51  2B                 	db	43
  1006  00FF52  42                 	db	66	;'B'
  1007  00FF53  43                 	db	67	;'C'
  1008  00FF54  41                 	db	65	;'A'
  1009  00FF55  53                 	db	83	;'S'
  1010  00FF56  54                 	db	84	;'T'
  1011  00FF57  3D                 	db	61	;'='
  1012  00FF58  00                 	db	0
  1013  00FF59                     STR_106:
  1014                           
  1015                           ; BSR set to: 0
  1016  00FF59  2B                 	db	43
  1017  00FF5A  4E                 	db	78	;'N'
  1018  00FF5B  41                 	db	65	;'A'
  1019  00FF5C  44                 	db	68	;'D'
  1020  00FF5D  44                 	db	68	;'D'
  1021  00FF5E  52                 	db	82	;'R'
  1022  00FF5F  3F                 	db	63	;'?'
  1023  00FF60  00                 	db	0
  1024  00FF61                     STR_62:
  1025                           
  1026                           ; BSR set to: 0
  1027  00FF61  2B                 	db	43
  1028  00FF62  53                 	db	83	;'S'
  1029  00FF63  45                 	db	69	;'E'
  1030  00FF64  4E                 	db	78	;'N'
  1031  00FF65  44                 	db	68	;'D'
  1032  00FF66  3A                 	db	58	;':'
  1033  00FF67  00                 	db	0
  1034  00FF68                     STR_76:
  1035                           
  1036                           ; BSR set to: 0
  1037  00FF68  2B                 	db	43
  1038  00FF69  42                 	db	66	;'B'
  1039  00FF6A  41                 	db	65	;'A'
  1040  00FF6B  55                 	db	85	;'U'
  1041  00FF6C  44                 	db	68	;'D'
  1042  00FF6D  3D                 	db	61	;'='
  1043  00FF6E  00                 	db	0
  1044  00FF6F                     STR_116:
  1045                           
  1046                           ; BSR set to: 0
  1047  00FF6F  2B                 	db	43
  1048  00FF70  52                 	db	82	;'R'
  1049  00FF71  46                 	db	70	;'F'
  1050  00FF72  43                 	db	67	;'C'
  1051  00FF73  48                 	db	72	;'H'
  1052  00FF74  3D                 	db	61	;'='
  1053  00FF75  00                 	db	0
  1054  00FF76                     STR_82:
  1055                           
  1056                           ; BSR set to: 0
  1057  00FF76  2B                 	db	43
  1058  00FF77  41                 	db	65	;'A'
  1059  00FF78  44                 	db	68	;'D'
  1060  00FF79  44                 	db	68	;'D'
  1061  00FF7A  52                 	db	82	;'R'
  1062  00FF7B  3D                 	db	61	;'='
  1063  00FF7C  00                 	db	0
  1064  00FF7D                     STR_96:
  1065                           
  1066                           ; BSR set to: 0
  1067  00FF7D  2B                 	db	43
  1068  00FF7E  48                 	db	72	;'H'
  1069  00FF7F  4F                 	db	79	;'O'
  1070  00FF80  50                 	db	80	;'P'
  1071  00FF81  53                 	db	83	;'S'
  1072  00FF82  3D                 	db	61	;'='
  1073  00FF83  00                 	db	0
  1074  00FF84                     STR_104:
  1075                           
  1076                           ; BSR set to: 0
  1077  00FF84  2B                 	db	43
  1078  00FF85  4D                 	db	77	;'M'
  1079  00FF86  4F                 	db	79	;'O'
  1080  00FF87  44                 	db	68	;'D'
  1081  00FF88  45                 	db	69	;'E'
  1082  00FF89  3F                 	db	63	;'?'
  1083  00FF8A  00                 	db	0
  1084  00FF8B                     STR_114:
  1085                           
  1086                           ; BSR set to: 0
  1087  00FF8B  2B                 	db	43
  1088  00FF8C  52                 	db	82	;'R'
  1089  00FF8D  46                 	db	70	;'F'
  1090  00FF8E  43                 	db	67	;'C'
  1091  00FF8F  48                 	db	72	;'H'
  1092  00FF90  3F                 	db	63	;'?'
  1093  00FF91  00                 	db	0
  1094  00FF92                     STR_80:
  1095                           
  1096                           ; BSR set to: 0
  1097  00FF92  2B                 	db	43
  1098  00FF93  41                 	db	65	;'A'
  1099  00FF94  44                 	db	68	;'D'
  1100  00FF95  44                 	db	68	;'D'
  1101  00FF96  52                 	db	82	;'R'
  1102  00FF97  3F                 	db	63	;'?'
  1103  00FF98  00                 	db	0
  1104  00FF99                     STR_94:
  1105                           
  1106                           ; BSR set to: 0
  1107  00FF99  2B                 	db	43
  1108  00FF9A  48                 	db	72	;'H'
  1109  00FF9B  4F                 	db	79	;'O'
  1110  00FF9C  50                 	db	80	;'P'
  1111  00FF9D  53                 	db	83	;'S'
  1112  00FF9E  3F                 	db	63	;'?'
  1113  00FF9F  00                 	db	0
  1114  00FFA0                     STR_120:
  1115                           
  1116                           ; BSR set to: 0
  1117  00FFA0  2B                 	db	43
  1118  00FFA1  52                 	db	82	;'R'
  1119  00FFA2  58                 	db	88	;'X'
  1120  00FFA3  43                 	db	67	;'C'
  1121  00FFA4  54                 	db	84	;'T'
  1122  00FFA5  3F                 	db	63	;'?'
  1123  00FFA6  00                 	db	0
  1124  00FFA7                     STR_66:
  1125                           
  1126                           ; BSR set to: 0
  1127  00FFA7  2B                 	db	43
  1128  00FFA8  53                 	db	83	;'S'
  1129  00FFA9  53                 	db	83	;'S'
  1130  00FFAA  49                 	db	73	;'I'
  1131  00FFAB  4E                 	db	78	;'N'
  1132  00FFAC  4B                 	db	75	;'K'
  1133  00FFAD  00                 	db	0
  1134  00FFAE                     STR_124:
  1135                           
  1136                           ; BSR set to: 0
  1137  00FFAE  2B                 	db	43
  1138  00FFAF  54                 	db	84	;'T'
  1139  00FFB0  54                 	db	84	;'T'
  1140  00FFB1  4C                 	db	76	;'L'
  1141  00FFB2  3D                 	db	61	;'='
  1142  00FFB3  00                 	db	0
  1143  00FFB4                     STR_102:
  1144                           
  1145                           ; BSR set to: 0
  1146  00FFB4  2B                 	db	43
  1147  00FFB5  4D                 	db	77	;'M'
  1148  00FFB6  41                 	db	65	;'A'
  1149  00FFB7  43                 	db	67	;'C'
  1150  00FFB8  3F                 	db	63	;'?'
  1151  00FFB9  00                 	db	0
  1152  00FFBA                     STR_122:
  1153                           
  1154                           ; BSR set to: 0
  1155  00FFBA  2B                 	db	43
  1156  00FFBB  54                 	db	84	;'T'
  1157  00FFBC  54                 	db	84	;'T'
  1158  00FFBD  4C                 	db	76	;'L'
  1159  00FFBE  3F                 	db	63	;'?'
  1160  00FFBF  00                 	db	0
  1161  00FFC0                     STR_48:
  1162                           
  1163                           ; BSR set to: 0
  1164  00FFC0  3D                 	db	61	;'='
  1165  00FFC1  4E                 	db	78	;'N'
  1166  00FFC2  4F                 	db	79	;'O'
  1167  00FFC3  4E                 	db	78	;'N'
  1168  00FFC4  45                 	db	69	;'E'
  1169  00FFC5  00                 	db	0
  1170  00FFC6                     STR_50:
  1171                           
  1172                           ; BSR set to: 0
  1173  00FFC6  3D                 	db	61	;'='
  1174  00FFC7  45                 	db	69	;'E'
  1175  00FFC8  56                 	db	86	;'V'
  1176  00FFC9  45                 	db	69	;'E'
  1177  00FFCA  4E                 	db	78	;'N'
  1178  00FFCB  00                 	db	0
  1179  00FFCC                     STR_112:
  1180                           
  1181                           ; BSR set to: 0
  1182  00FFCC  2B                 	db	43
  1183  00FFCD  52                 	db	82	;'R'
  1184  00FFCE  45                 	db	69	;'E'
  1185  00FFCF  43                 	db	67	;'C'
  1186  00FFD0  56                 	db	86	;'V'
  1187  00FFD1  00                 	db	0
  1188  00FFD2                     STR_135:
  1189                           
  1190                           ; BSR set to: 0
  1191  00FFD2  4E                 	db	78	;'N'
  1192  00FFD3  41                 	db	65	;'A'
  1193  00FFD4  0D                 	db	13
  1194  00FFD5  0A                 	db	10
  1195  00FFD6  00                 	db	0
  1196  00FFD7                     STR_13:
  1197                           
  1198                           ; BSR set to: 0
  1199  00FFD7  4F                 	db	79	;'O'
  1200  00FFD8  4B                 	db	75	;'K'
  1201  00FFD9  0D                 	db	13
  1202  00FFDA  0A                 	db	10
  1203  00FFDB  00                 	db	0
  1204  00FFDC                     STR_18:
  1205                           
  1206                           ; BSR set to: 0
  1207  00FFDC  4D                 	db	77	;'M'
  1208  00FFDD  41                 	db	65	;'A'
  1209  00FFDE  43                 	db	67	;'C'
  1210  00FFDF  3D                 	db	61	;'='
  1211  00FFE0  00                 	db	0
  1212  00FFE1                     STR_70:
  1213                           
  1214                           ; BSR set to: 0
  1215  00FFE1  2B                 	db	43
  1216  00FFE2  53                 	db	83	;'S'
  1217  00FFE3  46                 	db	70	;'F'
  1218  00FFE4  3D                 	db	61	;'='
  1219  00FFE5  00                 	db	0
  1220  00FFE6                     STR_68:
  1221                           
  1222                           ; BSR set to: 0
  1223  00FFE6  2B                 	db	43
  1224  00FFE7  53                 	db	83	;'S'
  1225  00FFE8  46                 	db	70	;'F'
  1226  00FFE9  3F                 	db	63	;'?'
  1227  00FFEA  00                 	db	0
  1228  00FFEB                     STR_46:
  1229                           
  1230                           ; BSR set to: 0
  1231  00FFEB  3D                 	db	61	;'='
  1232  00FFEC  4F                 	db	79	;'O'
  1233  00FFED  44                 	db	68	;'D'
  1234  00FFEE  44                 	db	68	;'D'
  1235  00FFEF  00                 	db	0
  1236  00FFF0                     STR_118:
  1237                           
  1238                           ; BSR set to: 0
  1239  00FFF0  2B                 	db	43
  1240  00FFF1  52                 	db	82	;'R'
  1241  00FFF2  53                 	db	83	;'S'
  1242  00FFF3  54                 	db	84	;'T'
  1243  00FFF4  00                 	db	0
  1244  00FFF5                     STR_19:
  1245                           
  1246                           ; BSR set to: 0
  1247  00FFF5  25                 	db	37
  1248  00FFF6  30                 	db	48	;'0'
  1249  00FFF7  32                 	db	50	;'2'
  1250  00FFF8  58                 	db	88	;'X'
  1251  00FFF9  00                 	db	0
  1252  00FFFA                     STR_100:
  1253                           
  1254                           ; BSR set to: 0
  1255  00FFFA  2B                 	db	43
  1256  00FFFB  49                 	db	73	;'I'
  1257  00FFFC  00                 	db	0
  1258  00FFFD                     STR_55:
  1259                           
  1260                           ; BSR set to: 0
  1261  00FFFD  0D                 	db	13
  1262  00FFFE  00                 	db	0
  1263  0000                     
  1264                           ; #config settings
  1265  00FFFF  00                 	db	0	; dummy byte at the end
  1266  0000                     
  1267                           	psect	nvBANK1
  1268  0001EF                     __pnvBANK1:
  1269                           	opt callstack 0
  1270  0001EF                     _UART1_ErrorHandler:
  1271                           	opt callstack 0
  1272  0001EF                     	ds	2
  1273  0001F1                     _UART1_OverrunErrorHandler:
  1274                           	opt callstack 0
  1275  0001F1                     	ds	2
  1276  0001F3                     _UART1_FramingErrorHandler:
  1277                           	opt callstack 0
  1278  0001F3                     	ds	2
  1279  0001F5                     _TMR0_InterruptHandler:
  1280                           	opt callstack 0
  1281  0001F5                     	ds	2
  1282  0001F7                     _timer0ReloadVal16bit:
  1283                           	opt callstack 0
  1284  0001F7                     	ds	2
  1285  0001F9                     _UART1_TxInterruptHandler:
  1286                           	opt callstack 0
  1287  0001F9                     	ds	2
  1288  0001FB                     _UART1_RxInterruptHandler:
  1289                           	opt callstack 0
  1290  0001FB                     	ds	2
  1291  0001FD                     _uart1TxBufferRemaining:
  1292                           	opt callstack 0
  1293  0001FD                     	ds	1
  1294  0000                     _CRCDATH	set	14689
  1295  0000                     _CRCDATL	set	14688
  1296  0000                     _CRCCON1bits	set	14697
  1297  0000                     _CRCXORL	set	14694
  1298  0000                     _CRCXORH	set	14695
  1299  0000                     _SCANTRIG	set	14717
  1300  0000                     _SCANHADRL	set	14713
  1301  0000                     _SCANHADRH	set	14714
  1302  0000                     _SCANHADRU	set	14715
  1303  0000                     _SCANLADRL	set	14710
  1304  0000                     _SCANLADRH	set	14711
  1305  0000                     _SCANLADRU	set	14712
  1306  0000                     _SCANCON0	set	14716
  1307  0000                     _CRCCON1	set	14697
  1308  0000                     _CRCCON0	set	14696
  1309  0000                     _PMD7	set	14791
  1310  0000                     _PMD6	set	14790
  1311  0000                     _PMD5	set	14789
  1312  0000                     _PMD4	set	14788
  1313  0000                     _PMD3	set	14787
  1314  0000                     _PMD2	set	14786
  1315  0000                     _PMD1	set	14785
  1316  0000                     _PMD0	set	14784
  1317  0000                     _OSCTUNE	set	14814
  1318  0000                     _OSCFRQ	set	14815
  1319  0000                     _OSCEN	set	14813
  1320  0000                     _OSCCON3	set	14811
  1321  0000                     _OSCCON1	set	14809
  1322  0000                     _IPR3bits	set	14723
  1323  0000                     _PIR0bits	set	14752
  1324  0000                     _NVMCON2	set	14822
  1325  0000                     _NVMDAT	set	14819
  1326  0000                     _NVMADRL	set	14816
  1327  0000                     _NVMADRH	set	14817
  1328  0000                     _NVMCON1bits	set	14821
  1329  0000                     _PIR3bits	set	14755
  1330  0000                     _PIR2bits	set	14754
  1331  0000                     _PIE3bits	set	14739
  1332  0000                     _CRCCON0bits	set	14696
  1333  0000                     _CRCACCH	set	14691
  1334  0000                     _CRCACCL	set	14690
  1335  0000                     _SPI1SDIPPS	set	15071
  1336  0000                     _RC7PPS	set	14871
  1337  0000                     _U1CTSPPS	set	15078
  1338  0000                     _U1RXPPS	set	15077
  1339  0000                     _RC1PPS	set	14865
  1340  0000                     _RB0PPS	set	14856
  1341  0000                     _SPI1SSPPS	set	15072
  1342  0000                     _SPI1SCKPPS	set	15070
  1343  0000                     _RC0PPS	set	14864
  1344  0000                     _INLVLE	set	14980
  1345  0000                     _INLVLC	set	14948
  1346  0000                     _INLVLB	set	14932
  1347  0000                     _INLVLA	set	14916
  1348  0000                     _SLRCONC	set	14947
  1349  0000                     _SLRCONB	set	14931
  1350  0000                     _SLRCONA	set	14915
  1351  0000                     _ODCONC	set	14946
  1352  0000                     _ODCONB	set	14930
  1353  0000                     _ODCONA	set	14914
  1354  0000                     _RC4I2C	set	14955
  1355  0000                     _RC3I2C	set	14954
  1356  0000                     _RB2I2C	set	14939
  1357  0000                     _RB1I2C	set	14938
  1358  0000                     _WPUC	set	14945
  1359  0000                     _WPUA	set	14913
  1360  0000                     _WPUB	set	14929
  1361  0000                     _WPUE	set	14977
  1362  0000                     _ANSELA	set	14912
  1363  0000                     _ANSELB	set	14928
  1364  0000                     _ANSELC	set	14944
  1365  0000                     _U1TXB	set	15850
  1366  0000                     _U1ERRIE	set	15866
  1367  0000                     _U1UIR	set	15864
  1368  0000                     _U1P3H	set	15857
  1369  0000                     _U1P3L	set	15856
  1370  0000                     _U1P2H	set	15855
  1371  0000                     _U1P2L	set	15854
  1372  0000                     _U1P1H	set	15853
  1373  0000                     _U1P1L	set	15852
  1374  0000                     _SPI1RXB	set	15632
  1375  0000                     _SPI1TXB	set	15633
  1376  0000                     _SPI1TCNTL	set	15634
  1377  0000                     _SPI1BAUD	set	15641
  1378  0000                     _SPI1CLK	set	15644
  1379  0000                     _SPI1CON2	set	15638
  1380  0000                     _SPI1CON1	set	15637
  1381  0000                     _SPI1CON0	set	15636
  1382  0000                     _U1ERRIR	set	15865
  1383  0000                     _U1FIFO	set	15863
  1384  0000                     _U1ERRIRbits	set	15865
  1385  0000                     _U1BRGH	set	15862
  1386  0000                     _U1BRGL	set	15861
  1387  0000                     _U1CON2	set	15860
  1388  0000                     _U1CON0	set	15858
  1389  0000                     _U1CON1	set	15859
  1390  0000                     _U1RXB	set	15848
  1391  0000                     _PORTBbits	set	16331
  1392  0000                     _LATCbits	set	16316
  1393  0000                     _TRISC	set	16324
  1394  0000                     _TRISB	set	16323
  1395  0000                     _TRISA	set	16322
  1396  0000                     _LATC	set	16316
  1397  0000                     _LATB	set	16315
  1398  0000                     _LATA	set	16314
  1399  0000                     _IVTBASEL	set	16341
  1400  0000                     _IVTBASEH	set	16342
  1401  0000                     _IVTBASEU	set	16343
  1402  0000                     _IVTLOCKbits	set	16340
  1403  0000                     _IVTLOCK	set	16340
  1404  0000                     _INTCON0bits	set	16338
  1405  0000                     _TABLAT	set	16373
  1406  0000                     _TBLPTRL	set	16374
  1407  0000                     _TBLPTRH	set	16375
  1408  0000                     _TBLPTRU	set	16376
  1409  0000                     _T0CON0	set	16312
  1410  0000                     _TMR0L	set	16310
  1411  0000                     _TMR0H	set	16311
  1412  0000                     _T0CON1	set	16313
  1413  0000                     _TRISBbits	set	16323
  1414  0000                     _LATAbits	set	16314
  1415  0000                     _GIE	set	130711
  1416                           
  1417                           	psect	cinit
  1418  0065EC                     __pcinit:
  1419                           	opt callstack 0
  1420  0065EC                     start_initialization:
  1421                           	opt callstack 0
  1422  0065EC                     __initialization:
  1423                           	opt callstack 0
  1424                           
  1425                           ; Initialize objects allocated to BANK1 (26 bytes)
  1426                           ; load TBLPTR registers with __pidataBANK1
  1427  0065EC  0E56               	movlw	low __pidataBANK1
  1428  0065EE  6EF6               	movwf	tblptrl,c
  1429  0065F0  0E8B               	movlw	high __pidataBANK1
  1430  0065F2  6EF7               	movwf	tblptrh,c
  1431  0065F4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1432  0065F6  6EF8               	movwf	tblptru,c
  1433  0065F8  EE00  F1D5         	lfsr	0,__pdataBANK1
  1434  0065FC  EE10 F01A          	lfsr	1,26
  1435  006600                     copy_data0:
  1436  006600  0009               	tblrd		*+
  1437  006602  006F FFD7 FFEE     	movff	tablat,postinc0
  1438  006608  50E5               	movf	postdec1,w,c
  1439  00660A  50E1               	movf	fsr1l,w,c
  1440  00660C  E1F9               	bnz	copy_data0
  1441                           
  1442                           ; Initialize objects allocated to BANK0 (4 bytes)
  1443                           ; load TBLPTR registers with __pidataBANK0
  1444  00660E  0E4A               	movlw	low __pidataBANK0
  1445  006610  6EF6               	movwf	tblptrl,c
  1446  006612  0E8E               	movlw	high __pidataBANK0
  1447  006614  6EF7               	movwf	tblptrh,c
  1448  006616  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1449  006618  6EF8               	movwf	tblptru,c
  1450  00661A  EE00  F0FB         	lfsr	0,__pdataBANK0
  1451  00661E  EE10 F004          	lfsr	1,4
  1452  006622                     copy_data1:
  1453  006622  0009               	tblrd		*+
  1454  006624  006F FFD7 FFEE     	movff	tablat,postinc0
  1455  00662A  50E5               	movf	postdec1,w,c
  1456  00662C  50E1               	movf	fsr1l,w,c
  1457  00662E  E1F9               	bnz	copy_data1
  1458                           
  1459                           ; Clear objects allocated to BIGRAM (1209 bytes)
  1460  006630  EE01  F1BD         	lfsr	0,__pbssBIGRAM
  1461  006634  EE11 F0B9          	lfsr	1,1209
  1462  006638                     clear_0:
  1463  006638  6AEE               	clrf	postinc0,c
  1464  00663A  50E5               	movf	postdec1,w,c
  1465  00663C  50E1               	movf	fsr1l,w,c
  1466  00663E  E1FC               	bnz	clear_0
  1467  006640  50E2               	movf	fsr1h,w,c
  1468  006642  E1FA               	bnz	clear_0
  1469                           
  1470                           ; Clear objects allocated to BANK5 (189 bytes)
  1471  006644  EE01  F100         	lfsr	0,__pbssBANK5
  1472  006648  0EBD               	movlw	189
  1473  00664A                     clear_1:
  1474  00664A  6AEE               	clrf	postinc0,c
  1475  00664C  06E8               	decf	wreg,f,c
  1476  00664E  E1FD               	bnz	clear_1
  1477                           
  1478                           ; Clear objects allocated to BANK4 (96 bytes)
  1479  006650  EE01  F000         	lfsr	0,__pbssBANK4
  1480  006654  0E60               	movlw	96
  1481  006656                     clear_2:
  1482  006656  6AEE               	clrf	postinc0,c
  1483  006658  06E8               	decf	wreg,f,c
  1484  00665A  E1FD               	bnz	clear_2
  1485                           
  1486                           ; Clear objects allocated to BANK3 (242 bytes)
  1487  00665C  EE00  F300         	lfsr	0,__pbssBANK3
  1488  006660  0EF2               	movlw	242
  1489  006662                     clear_3:
  1490  006662  6AEE               	clrf	postinc0,c
  1491  006664  06E8               	decf	wreg,f,c
  1492  006666  E1FD               	bnz	clear_3
  1493                           
  1494                           ; Clear objects allocated to BANK2 (218 bytes)
  1495  006668  EE00  F200         	lfsr	0,__pbssBANK2
  1496  00666C  0EDA               	movlw	218
  1497  00666E                     clear_4:
  1498  00666E  6AEE               	clrf	postinc0,c
  1499  006670  06E8               	decf	wreg,f,c
  1500  006672  E1FD               	bnz	clear_4
  1501                           
  1502                           ; Clear objects allocated to BANK1 (213 bytes)
  1503  006674  EE00  F100         	lfsr	0,__pbssBANK1
  1504  006678  0ED5               	movlw	213
  1505  00667A                     clear_5:
  1506  00667A  6AEE               	clrf	postinc0,c
  1507  00667C  06E8               	decf	wreg,f,c
  1508  00667E  E1FD               	bnz	clear_5
  1509                           
  1510                           ; Clear objects allocated to BANK0 (25 bytes)
  1511  006680  EE00  F0E2         	lfsr	0,__pbssBANK0
  1512  006684  0E19               	movlw	25
  1513  006686                     clear_6:
  1514  006686  6AEE               	clrf	postinc0,c
  1515  006688  06E8               	decf	wreg,f,c
  1516  00668A  E1FD               	bnz	clear_6
  1517                           
  1518                           ; Clear objects allocated to COMRAM (1 bytes)
  1519  00668C  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1520                           
  1521                           ;
  1522                           ; Setup IVTBASE
  1523                           ;
  1524  00668E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1525  006690  6ED5               	movwf	213,c
  1526  006692  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1527  006694  6ED6               	movwf	214,c
  1528  006696  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1529  006698  6ED7               	movwf	215,c
  1530  00669A                     end_of_initialization:
  1531                           	opt callstack 0
  1532  00669A                     __end_of__initialization:
  1533                           	opt callstack 0
  1534  00669A  0100               	movlb	0
  1535  00669C  EF12  F044         	goto	_main	;jump to C main() function
  1536                           
  1537                           	psect	bssCOMRAM
  1538  00005E                     __pbssCOMRAM:
  1539                           	opt callstack 0
  1540  00005E                     _uart1RxHead:
  1541                           	opt callstack 0
  1542  00005E                     	ds	1
  1543                           
  1544                           	psect	bssBANK0
  1545  0000E2                     __pbssBANK0:
  1546                           	opt callstack 0
  1547  0000E2                     _width:
  1548                           	opt callstack 0
  1549  0000E2                     	ds	2
  1550  0000E4                     _prec:
  1551                           	opt callstack 0
  1552  0000E4                     	ds	2
  1553  0000E6                     _flags:
  1554                           	opt callstack 0
  1555  0000E6                     	ds	2
  1556  0000E8                     _timers:
  1557                           	opt callstack 0
  1558  0000E8                     	ds	2
  1559  0000EA                     _nwkDataReqQueue:
  1560                           	opt callstack 0
  1561  0000EA                     	ds	2
  1562  0000EC                     _uart1RxCount:
  1563                           	opt callstack 0
  1564  0000EC                     	ds	1
  1565  0000ED                     _uart1RxTail:
  1566                           	opt callstack 0
  1567  0000ED                     	ds	1
  1568  0000EE                     _uart1TxTail:
  1569                           	opt callstack 0
  1570  0000EE                     	ds	1
  1571  0000EF                     _uart1TxHead:
  1572                           	opt callstack 0
  1573  0000EF                     	ds	1
  1574  0000F0                     _TXPower:
  1575                           	opt callstack 0
  1576  0000F0                     	ds	1
  1577  0000F1                     _channel:
  1578                           	opt callstack 0
  1579  0000F1                     	ds	1
  1580  0000F2                     _current_sf:
  1581                           	opt callstack 0
  1582  0000F2                     	ds	1
  1583  0000F3                     _atStateVar:
  1584                           	opt callstack 0
  1585  0000F3                     	ds	1
  1586  0000F4                     _commandByteCounter:
  1587                           	opt callstack 0
  1588  0000F4                     	ds	1
  1589  0000F5                     _txTimeOut:
  1590                           	opt callstack 0
  1591  0000F5                     	ds	2
  1592  0000F7                     _cadTimeOut:
  1593                           	opt callstack 0
  1594  0000F7                     	ds	2
  1595  0000F9                     __cadBackoffTimer:
  1596                           	opt callstack 0
  1597  0000F9                     	ds	2
  1598                           
  1599                           	psect	dataBANK0
  1600  0000FB                     __pdataBANK0:
  1601                           	opt callstack 0
  1602  0000FB                     _RSSITarget:
  1603                           	opt callstack 0
  1604  0000FB                     	ds	1
  1605  0000FC                     _currentNetID:
  1606                           	opt callstack 0
  1607  0000FC                     	ds	1
  1608  0000FD                     _ATTimeoutTimer:
  1609                           	opt callstack 0
  1610  0000FD                     	ds	2
  1611                           
  1612                           	psect	bssBANK1
  1613  000100                     __pbssBANK1:
  1614                           	opt callstack 0
  1615  000100                     _nwkIb:
  1616                           	opt callstack 0
  1617  000100                     	ds	40
  1618  000128                     _uart1RxStatusBuffer:
  1619                           	opt callstack 0
  1620  000128                     	ds	16
  1621  000138                     _uart1RxBuffer:
  1622                           	opt callstack 0
  1623  000138                     	ds	16
  1624  000148                     _aes_key:
  1625                           	opt callstack 0
  1626  000148                     	ds	16
  1627  000158                     _uartmsg:
  1628                           	opt callstack 0
  1629  000158                     	ds	6
  1630  00015E                     _symbolDuration:
  1631                           	opt callstack 0
  1632  00015E                     	ds	4
  1633  000162                     _current_baud_rate:
  1634                           	opt callstack 0
  1635  000162                     	ds	3
  1636  000165                     _errno:
  1637                           	opt callstack 0
  1638  000165                     	ds	2
  1639  000167                     strtok@p:
  1640                           	opt callstack 0
  1641  000167                     	ds	2
  1642  000169                     _nout:
  1643                           	opt callstack 0
  1644  000169                     	ds	2
  1645  00016B                     _nwkTxPhyActiveFrame:
  1646                           	opt callstack 0
  1647  00016B                     	ds	2
  1648  00016D                     _ledTimerVar:
  1649                           	opt callstack 0
  1650  00016D                     	ds	2
  1651  00016F                     _halTimerIrqCount:
  1652                           	opt callstack 0
  1653  00016F                     	ds	2
  1654  000171                     _eeprom_write_flags:
  1655                           	opt callstack 0
  1656  000171                     	ds	2
  1657  000173                     _nwkRxAckControl:
  1658                           	opt callstack 0
  1659  000173                     	ds	1
  1660  000174                     _uart1RxLastError:
  1661                           	opt callstack 0
  1662  000174                     	ds	1
  1663  000175                     _ledStateVar:
  1664                           	opt callstack 0
  1665  000175                     	ds	1
  1666  000176                     _radio_state_var:
  1667                           	opt callstack 0
  1668  000176                     	ds	1
  1669  000177                     _dwellTimer:
  1670                           	opt callstack 0
  1671  000177                     	ds	1
  1672  000178                     _fhssdebug:
  1673                           	opt callstack 0
  1674  000178                     	ds	1
  1675  000179                     _SNR:
  1676                           	opt callstack 0
  1677  000179                     	ds	1
  1678  00017A                     _packetRSSI:
  1679                           	opt callstack 0
  1680  00017A                     	ds	1
  1681  00017B                     _RSSI:
  1682                           	opt callstack 0
  1683  00017B                     	ds	1
  1684  00017C                     _need_radio_reset:
  1685                           	opt callstack 0
  1686  00017C                     	ds	1
  1687  00017D                     _cadCounter:
  1688                           	opt callstack 0
  1689  00017D                     	ds	1
  1690  00017E                     _cadDone:
  1691                           	opt callstack 0
  1692  00017E                     	ds	1
  1693  00017F                     __packetIndex:
  1694                           	opt callstack 0
  1695  00017F                     	ds	1
  1696  000180                     __implicitHeaderMode:
  1697                           	opt callstack 0
  1698  000180                     	ds	1
  1699  000181                     _tx_done:
  1700                           	opt callstack 0
  1701  000181                     	ds	1
  1702  000182                     _msgIDCounter:
  1703                           	opt callstack 0
  1704  000182                     	ds	1
  1705  000183                     _currentMode:
  1706                           	opt callstack 0
  1707  000183                     	ds	1
  1708  000184                     _sinkAddr1:
  1709                           	opt callstack 0
  1710  000184                     	ds	1
  1711  000185                     _sinkAddr0:
  1712                           	opt callstack 0
  1713  000185                     	ds	1
  1714  000186                     _currentMsgID:
  1715                           	opt callstack 0
  1716  000186                     	ds	1
  1717  000187                     _curent_parity:
  1718                           	opt callstack 0
  1719  000187                     	ds	1
  1720  000188                     _uart_parity:
  1721                           	opt callstack 0
  1722  000188                     	ds	1
  1723  000189                     _uart_baud_rate:
  1724                           	opt callstack 0
  1725  000189                     	ds	1
  1726  00018A                     _eeprom_write_flags_enum:
  1727                           	opt callstack 0
  1728  00018A                     	ds	1
  1729  00018B                     _nwkTxDelayTimer:
  1730                           	opt callstack 0
  1731  00018B                     	ds	13
  1732  000198                     _nwkTxAckWaitTimer:
  1733                           	opt callstack 0
  1734  000198                     	ds	13
  1735  0001A5                     _nwkRxDuplicateRejectionTimer:
  1736                           	opt callstack 0
  1737  0001A5                     	ds	13
  1738  0001B2                     _EUIDbyte:
  1739                           	opt callstack 0
  1740  0001B2                     	ds	12
  1741  0001BE                     _ledtasksbuf:
  1742                           	opt callstack 0
  1743  0001BE                     	ds	10
  1744  0001C8                     _seed:
  1745                           	opt callstack 0
  1746  0001C8                     	ds	8
  1747  0001D0                     _crcObj:
  1748                           	opt callstack 0
  1749  0001D0                     	ds	3
  1750  0001D3                     _ledtimer:
  1751                           	opt callstack 0
  1752  0001D3                     	ds	2
  1753                           
  1754                           	psect	dataBANK1
  1755  0001D5                     __pdataBANK1:
  1756                           	opt callstack 0
  1757  0001D5                     _syncList:
  1758                           	opt callstack 0
  1759  0001D5                     	ds	10
  1760  0001DF                     stoa@F1139:
  1761                           	opt callstack 0
  1762  0001DF                     	ds	7
  1763  0001E6                     	ds	5
  1764  0001EB                     _test_timer:
  1765                           	opt callstack 0
  1766  0001EB                     	ds	2
  1767  0001ED                     _currentAddr1:
  1768                           	opt callstack 0
  1769  0001ED                     	ds	1
  1770  0001EE                     _currentAddr0:
  1771                           	opt callstack 0
  1772  0001EE                     	ds	1
  1773                           
  1774                           	psect	bssBANK2
  1775  000200                     __pbssBANK2:
  1776                           	opt callstack 0
  1777  000200                     _nwkGroups:
  1778                           	opt callstack 0
  1779  000200                     	ds	20
  1780  000214                     _net_key:
  1781                           	opt callstack 0
  1782  000214                     	ds	16
  1783  000224                     _atCommand:
  1784                           	opt callstack 0
  1785  000224                     	ds	80
  1786  000274                     _nwkRouteTable:
  1787                           	opt callstack 0
  1788  000274                     	ds	70
  1789  0002BA                     _dbuf:
  1790                           	opt callstack 0
  1791  0002BA                     	ds	32
  1792                           
  1793                           	psect	bssBANK3
  1794  000300                     __pbssBANK3:
  1795                           	opt callstack 0
  1796  000300                     _uart1TxBuffer:
  1797                           	opt callstack 0
  1798  000300                     	ds	64
  1799  000340                     _phyRxBuffer:
  1800                           	opt callstack 0
  1801  000340                     	ds	128
  1802  0003C0                     _nwkRxDuplicateRejectionTable:
  1803                           	opt callstack 0
  1804  0003C0                     	ds	50
  1805                           
  1806                           	psect	bssBANK4
  1807  000400                     __pbssBANK4:
  1808                           	opt callstack 0
  1809  000400                     _ledqueue:
  1810                           	opt callstack 0
  1811  000400                     	ds	96
  1812                           
  1813                           	psect	bssBANK5
  1814  000500                     __pbssBANK5:
  1815                           	opt callstack 0
  1816  000500                     _fhssReg:
  1817                           	opt callstack 0
  1818  000500                     	ds	189
  1819                           
  1820                           	psect	bssBIGRAM
  1821  0005BD                     __pbssBIGRAM:
  1822                           	opt callstack 0
  1823  0005BD                     _nwkFrameFrames:
  1824                           	opt callstack 0
  1825  0005BD                     	ds	685
  1826  00086A                     _tx_buffer:
  1827                           	opt callstack 0
  1828  00086A                     	ds	524
  1829                           
  1830                           	psect	cstackBANK2
  1831  0002DA                     __pcstackBANK2:
  1832                           	opt callstack 0
  1833  0002DA                     nwkRxTaskHandler@frame:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 2 bytes @ 0x0
  1837  0002DA                     	ds	2
  1838                           
  1839                           	psect	cstackBANK1
  1840  0001FE                     __pcstackBANK1:
  1841                           	opt callstack 0
  1842  0001FE                     ??_nwkRxTaskHandler:
  1843                           
  1844                           ; 1 bytes @ 0x0
  1845  0001FE                     	ds	2
  1846                           
  1847                           	psect	cstackBANK0
  1848  000060                     __pcstackBANK0:
  1849                           	opt callstack 0
  1850  000060                     vfpfcnvrt@ll:
  1851                           	opt callstack 0
  1852                           
  1853                           ; 8 bytes @ 0x0
  1854  000060                     	ds	8
  1855  000068                     vfpfcnvrt@c:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 1 bytes @ 0x8
  1859  000068                     	ds	1
  1860  000069                     vfpfcnvrt@cp:
  1861                           	opt callstack 0
  1862                           
  1863                           ; 1 bytes @ 0x9
  1864  000069                     	ds	1
  1865  00006A                     vfpfcnvrt@done:
  1866                           	opt callstack 0
  1867                           
  1868                           ; 2 bytes @ 0xA
  1869  00006A                     	ds	2
  1870  00006C                     _vfpfcnvrt$7262:
  1871                           	opt callstack 0
  1872                           
  1873                           ; 2 bytes @ 0xC
  1874  00006C                     	ds	2
  1875  00006E                     vfpfcnvrt@llu:
  1876                           	opt callstack 0
  1877                           
  1878                           ; 8 bytes @ 0xE
  1879  00006E                     	ds	8
  1880  000076                     ?_printf:
  1881                           	opt callstack 0
  1882  000076                     printf@fmt:
  1883                           	opt callstack 0
  1884                           
  1885                           ; 2 bytes @ 0x16
  1886  000076                     	ds	10
  1887  000080                     ??_print_hop_table:
  1888  000080                     cmdBcast@p1:
  1889                           	opt callstack 0
  1890  000080                     cmdSetAddr@p2:
  1891                           	opt callstack 0
  1892  000080                     cmdSetNaddr@p2:
  1893                           	opt callstack 0
  1894  000080                     cmdSetRFCH@p1:
  1895                           	opt callstack 0
  1896  000080                     cmdSetTX@p2:
  1897                           	opt callstack 0
  1898  000080                     cmdSetCADRSSI@p1:
  1899                           	opt callstack 0
  1900  000080                     cmdSetSF@p1:
  1901                           	opt callstack 0
  1902  000080                     cmdSend@destaddr:
  1903                           	opt callstack 0
  1904  000080                     cmdSetAES@AESstr:
  1905                           	opt callstack 0
  1906  000080                     appDataInd@data:
  1907                           	opt callstack 0
  1908                           
  1909                           ; 65 bytes @ 0x20
  1910  000080                     	ds	2
  1911  000082                     cmdBcast@buf_id:
  1912                           	opt callstack 0
  1913  000082                     cmdSetAddr@p1:
  1914                           	opt callstack 0
  1915  000082                     cmdSetNaddr@p1:
  1916                           	opt callstack 0
  1917  000082                     cmdSetTX@p1:
  1918                           	opt callstack 0
  1919  000082                     cmdSetRFCH@CHstr:
  1920                           	opt callstack 0
  1921  000082                     cmdSetCADRSSI@CHstr:
  1922                           	opt callstack 0
  1923  000082                     cmdSetSF@CHstr:
  1924                           	opt callstack 0
  1925                           
  1926                           ; 3 bytes @ 0x22
  1927  000082                     	ds	2
  1928  000084                     cmdSetNaddr@tempaddr:
  1929                           	opt callstack 0
  1930  000084                     cmdSetTX@temp:
  1931                           	opt callstack 0
  1932  000084                     cmdSetAddr@tempaddr:
  1933                           	opt callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x24
  1936  000084                     	ds	1
  1937  000085                     cmdSend@tempaddr:
  1938                           	opt callstack 0
  1939  000085                     cmdSetRFCH@p2:
  1940                           	opt callstack 0
  1941  000085                     cmdSetCADRSSI@p2:
  1942                           	opt callstack 0
  1943  000085                     cmdSetSF@p2:
  1944                           	opt callstack 0
  1945  000085                     cmdSetTX@CHstr:
  1946                           	opt callstack 0
  1947                           
  1948                           ; 3 bytes @ 0x25
  1949  000085                     	ds	2
  1950  000087                     cmdSetRFCH@temp:
  1951                           	opt callstack 0
  1952  000087                     cmdSetCADRSSI@temp:
  1953                           	opt callstack 0
  1954  000087                     cmdSetSF@temp:
  1955                           	opt callstack 0
  1956  000087                     cmdSend@p2:
  1957                           	opt callstack 0
  1958                           
  1959                           ; 2 bytes @ 0x27
  1960  000087                     	ds	2
  1961  000089                     cmdSend@p1:
  1962                           	opt callstack 0
  1963                           
  1964                           ; 2 bytes @ 0x29
  1965  000089                     	ds	2
  1966  00008B                     cmdSend@buf_id:
  1967                           	opt callstack 0
  1968                           
  1969                           ; 1 bytes @ 0x2B
  1970  00008B                     	ds	21
  1971  0000A0                     cmdSetAES@p2:
  1972                           	opt callstack 0
  1973                           
  1974                           ; 2 bytes @ 0x40
  1975  0000A0                     	ds	2
  1976  0000A2                     cmdSetAES@temp:
  1977                           	opt callstack 0
  1978                           
  1979                           ; 3 bytes @ 0x42
  1980  0000A2                     	ds	3
  1981  0000A5                     cmdSetAES@key_type:
  1982                           	opt callstack 0
  1983                           
  1984                           ; 1 bytes @ 0x45
  1985  0000A5                     	ds	1
  1986  0000A6                     cmdSetAES@byte:
  1987                           	opt callstack 0
  1988                           
  1989                           ; 1 bytes @ 0x46
  1990  0000A6                     	ds	1
  1991  0000A7                     cmdSetAES@p1:
  1992                           	opt callstack 0
  1993                           
  1994                           ; 2 bytes @ 0x47
  1995  0000A7                     	ds	2
  1996  0000A9                     cmdSetAES@i:
  1997                           	opt callstack 0
  1998                           
  1999                           ; 1 bytes @ 0x49
  2000  0000A9                     	ds	1
  2001  0000AA                     executeATCommand@cmd:
  2002                           	opt callstack 0
  2003                           
  2004                           ; 2 bytes @ 0x4A
  2005  0000AA                     	ds	2
  2006  0000AC                     ??_executeATCommand:
  2007                           
  2008                           ; 1 bytes @ 0x4C
  2009  0000AC                     	ds	2
  2010  0000AE                     ??_processATCommand:
  2011                           
  2012                           ; 1 bytes @ 0x4E
  2013  0000AE                     	ds	2
  2014  0000B0                     processATCommand@data_851:
  2015                           	opt callstack 0
  2016                           
  2017                           ; 1 bytes @ 0x50
  2018  0000B0                     	ds	1
  2019  0000B1                     processATCommand@data:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 1 bytes @ 0x51
  2023  0000B1                     	ds	16
  2024  0000C1                     appDataInd@dataptr:
  2025                           	opt callstack 0
  2026                           
  2027                           ; 2 bytes @ 0x61
  2028  0000C1                     	ds	2
  2029  0000C3                     appDataInd@i:
  2030                           	opt callstack 0
  2031                           
  2032                           ; 1 bytes @ 0x63
  2033  0000C3                     	ds	1
  2034  0000C4                     nwkRxIndicateFrame@frame:
  2035                           	opt callstack 0
  2036                           
  2037                           ; 2 bytes @ 0x64
  2038  0000C4                     	ds	2
  2039  0000C6                     ??_nwkRxIndicateFrame:
  2040                           
  2041                           ; 1 bytes @ 0x66
  2042  0000C6                     	ds	4
  2043  0000CA                     _nwkRxIndicateFrame$5172:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 1 bytes @ 0x6A
  2047  0000CA                     	ds	1
  2048  0000CB                     _nwkRxIndicateFrame$5173:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 1 bytes @ 0x6B
  2052  0000CB                     	ds	1
  2053  0000CC                     _nwkRxIndicateFrame$5174:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 1 bytes @ 0x6C
  2057  0000CC                     	ds	1
  2058  0000CD                     _nwkRxIndicateFrame$5175:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 1 bytes @ 0x6D
  2062  0000CD                     	ds	1
  2063  0000CE                     _nwkRxIndicateFrame$5176:
  2064                           	opt callstack 0
  2065                           
  2066                           ; 1 bytes @ 0x6E
  2067  0000CE                     	ds	1
  2068  0000CF                     _nwkRxIndicateFrame$5177:
  2069                           	opt callstack 0
  2070                           
  2071                           ; 1 bytes @ 0x6F
  2072  0000CF                     	ds	1
  2073  0000D0                     nwkRxIndicateFrame@header:
  2074                           	opt callstack 0
  2075                           
  2076                           ; 2 bytes @ 0x70
  2077  0000D0                     	ds	2
  2078  0000D2                     nwkRxIndicateFrame@ind:
  2079                           	opt callstack 0
  2080                           
  2081                           ; 12 bytes @ 0x72
  2082  0000D2                     	ds	12
  2083  0000DE                     nwkRxHandleIndication@frame:
  2084                           	opt callstack 0
  2085                           
  2086                           ; 2 bytes @ 0x7E
  2087  0000DE                     	ds	2
  2088  0000E0                     
  2089                           ; 1 bytes @ 0x80
  2090  0000E0                     	ds	2
  2091                           
  2092                           	psect	cstackCOMRAM
  2093  000001                     __pcstackCOMRAM:
  2094                           	opt callstack 0
  2095  000001                     ??_TMR0_ISR:
  2096  000001                     
  2097                           ; 1 bytes @ 0x0
  2098  000001                     	ds	1
  2099  000002                     ??_CRC_Initialize:
  2100  000002                     ??_nwkRouteNormalizeRanks:
  2101  000002                     ??_set_parity:
  2102  000002                     ??_set_uart_baud:
  2103  000002                     ??_nwkTxConvertPhyStatus:
  2104  000002                     ?_strlen:
  2105                           	opt callstack 0
  2106  000002                     ?_NWK_RouteTable:
  2107                           	opt callstack 0
  2108  000002                     ?_get_timer0base:
  2109                           	opt callstack 0
  2110  000002                     ?_nwkFrameNext:
  2111                           	opt callstack 0
  2112  000002                     ?_NWK_RouteFindEntry:
  2113                           	opt callstack 0
  2114  000002                     ?_NWK_RouteNewEntry:
  2115                           	opt callstack 0
  2116  000002                     ?_isupper:
  2117                           	opt callstack 0
  2118  000002                     ?_isalpha:
  2119                           	opt callstack 0
  2120  000002                     ?_isdigit:
  2121                           	opt callstack 0
  2122  000002                     ?_isspace:
  2123                           	opt callstack 0
  2124  000002                     ?_strncmp:
  2125                           	opt callstack 0
  2126  000002                     ?_strchr:
  2127                           	opt callstack 0
  2128  000002                     ?_islower:
  2129                           	opt callstack 0
  2130  000002                     ?_CircularBufferSize:
  2131                           	opt callstack 0
  2132  000002                     ?_CRC_ReverseValue:
  2133                           	opt callstack 0
  2134  000002                     ?___wmul:
  2135                           	opt callstack 0
  2136  000002                     ?___lmul:
  2137                           	opt callstack 0
  2138  000002                     ?___llmod:
  2139                           	opt callstack 0
  2140  000002                     ?___xxtofl:
  2141                           	opt callstack 0
  2142  000002                     ?___omul:
  2143                           	opt callstack 0
  2144  000002                     ?___aodiv:
  2145                           	opt callstack 0
  2146  000002                     ?___aomod:
  2147                           	opt callstack 0
  2148  000002                     ?___lodiv:
  2149                           	opt callstack 0
  2150  000002                     ?___lomod:
  2151                           	opt callstack 0
  2152  000002                     get_free_tx_buffer@buf_id:
  2153                           	opt callstack 0
  2154  000002                     SPI1_ExchangeByte@data:
  2155                           	opt callstack 0
  2156  000002                     INTERRUPT_Initialize@state:
  2157                           	opt callstack 0
  2158  000002                     UART1_Read@readValue:
  2159                           	opt callstack 0
  2160  000002                     UART1_Write@txData:
  2161                           	opt callstack 0
  2162  000002                     CRC_8BitDataWrite@data:
  2163                           	opt callstack 0
  2164  000002                     nwkFrameInit@i:
  2165                           	opt callstack 0
  2166  000002                     nwkGroupInit@i:
  2167                           	opt callstack 0
  2168  000002                     nwkRouteInit@i:
  2169                           	opt callstack 0
  2170  000002                     get_rssi@rssi_reg:
  2171                           	opt callstack 0
  2172  000002                     free_tx_buffer@req:
  2173                           	opt callstack 0
  2174  000002                     cmdSendSink@cmd:
  2175                           	opt callstack 0
  2176  000002                     cmdSetTTL@cmd:
  2177                           	opt callstack 0
  2178  000002                     cmdGetRxCnt@atCommand:
  2179                           	opt callstack 0
  2180  000002                     CircularBufferSize@ctx:
  2181                           	opt callstack 0
  2182  000002                     get_timer0base@timer:
  2183                           	opt callstack 0
  2184  000002                     set_timer0base@timer:
  2185                           	opt callstack 0
  2186  000002                     TMR0_SetInterruptHandler@InterruptHandler:
  2187                           	opt callstack 0
  2188  000002                     DATAEE_WriteByte@bAdd:
  2189                           	opt callstack 0
  2190  000002                     DATAEE_ReadByte@bAdd:
  2191                           	opt callstack 0
  2192  000002                     UART1_SetFramingErrorHandler@interruptHandler:
  2193                           	opt callstack 0
  2194  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
  2195                           	opt callstack 0
  2196  000002                     UART1_SetErrorHandler@interruptHandler:
  2197                           	opt callstack 0
  2198  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
  2199                           	opt callstack 0
  2200  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
  2201                           	opt callstack 0
  2202  000002                     CRC_ReverseValue@crc:
  2203                           	opt callstack 0
  2204  000002                     NWK_OpenEndpoint@handler:
  2205                           	opt callstack 0
  2206  000002                     NWK_DataReq@req:
  2207                           	opt callstack 0
  2208  000002                     nwkFrameFree@frame:
  2209                           	opt callstack 0
  2210  000002                     nwkFrameNext@frame:
  2211                           	opt callstack 0
  2212  000002                     nwkFrameCommandInit@frame:
  2213                           	opt callstack 0
  2214  000002                     NWK_GroupIsMember@group:
  2215                           	opt callstack 0
  2216  000002                     NWK_RouteFindEntry@dst:
  2217                           	opt callstack 0
  2218  000002                     NWK_RouteFreeEntry@entry:
  2219                           	opt callstack 0
  2220  000002                     nwkFrame@nwkFramePayloadSize@frame_4725:
  2221                           	opt callstack 0
  2222  000002                     nwkTxConfirm@frame:
  2223                           	opt callstack 0
  2224  000002                     PHY_SetPanId@panId:
  2225                           	opt callstack 0
  2226  000002                     PHY_SetShortAddr@addr:
  2227                           	opt callstack 0
  2228  000002                     SYS_TimerStarted@timer:
  2229                           	opt callstack 0
  2230  000002                     placeTimer@timer:
  2231                           	opt callstack 0
  2232  000002                     ___wmul@multiplier:
  2233                           	opt callstack 0
  2234  000002                     isalpha@c:
  2235                           	opt callstack 0
  2236  000002                     isdigit@c:
  2237                           	opt callstack 0
  2238  000002                     isspace@c:
  2239                           	opt callstack 0
  2240  000002                     isupper@c:
  2241                           	opt callstack 0
  2242  000002                     memset@dest:
  2243                           	opt callstack 0
  2244  000002                     srand@s:
  2245                           	opt callstack 0
  2246  000002                     strlen@s:
  2247                           	opt callstack 0
  2248  000002                     islower@c:
  2249                           	opt callstack 0
  2250  000002                     strchr@s:
  2251                           	opt callstack 0
  2252  000002                     strncmp@_l:
  2253                           	opt callstack 0
  2254  000002                     DIA_ReadByte@flashAddr:
  2255                           	opt callstack 0
  2256  000002                     ___lmul@multiplier:
  2257                           	opt callstack 0
  2258  000002                     ___llmod@dividend:
  2259                           	opt callstack 0
  2260  000002                     ___xxtofl@val:
  2261                           	opt callstack 0
  2262  000002                     ___omul@multiplier:
  2263                           	opt callstack 0
  2264  000002                     ___aodiv@dividend:
  2265                           	opt callstack 0
  2266  000002                     ___aomod@dividend:
  2267                           	opt callstack 0
  2268  000002                     ___lodiv@dividend:
  2269                           	opt callstack 0
  2270  000002                     ___lomod@dividend:
  2271                           	opt callstack 0
  2272                           
  2273                           ; 8 bytes @ 0x1
  2274  000002                     	ds	1
  2275  000003                     ??_get_free_tx_buffer:
  2276  000003                     putch@txData:
  2277                           	opt callstack 0
  2278  000003                     nwkRouteNormalizeRanks@i:
  2279                           	opt callstack 0
  2280  000003                     SPI1_WriteBlock@block:
  2281                           	opt callstack 0
  2282  000003                     SPI1_ReadBlock@block:
  2283                           	opt callstack 0
  2284  000003                     CRC_Initialize@poly:
  2285                           	opt callstack 0
  2286  000003                     get_rssi@temp_rssi:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 2 bytes @ 0x2
  2290  000003                     	ds	1
  2291  000004                     ??_free_tx_buffer:
  2292  000004                     ??_nwkFrameNext:
  2293  000004                     ??_srand:
  2294  000004                     ??_isupper:
  2295  000004                     ??_isalpha:
  2296  000004                     ??_isdigit:
  2297  000004                     ??_isspace:
  2298  000004                     ??_islower:
  2299  000004                     ??_CircularBufferSize:
  2300  000004                     ??_TMR0_Initialize:
  2301  000004                     ??_CRC_ReverseValue:
  2302  000004                     ??strspn@nwkFrame@nwkFramePayloadSize:
  2303  000004                     set_parity@parity:
  2304                           	opt callstack 0
  2305  000004                     set_uart_baud@i:
  2306                           	opt callstack 0
  2307  000004                     DATAEE_WriteByte@bData:
  2308                           	opt callstack 0
  2309  000004                     NWK_OpenEndpoint@id:
  2310                           	opt callstack 0
  2311  000004                     NWK_RouteFindEntry@multicast:
  2312                           	opt callstack 0
  2313  000004                     nwkTxConfirm@status:
  2314                           	opt callstack 0
  2315  000004                     nwkTxConvertPhyStatus@status:
  2316                           	opt callstack 0
  2317  000004                     get_timer0base@tval:
  2318                           	opt callstack 0
  2319  000004                     set_timer0base@tval:
  2320                           	opt callstack 0
  2321  000004                     NWK_SetAddr@addr:
  2322                           	opt callstack 0
  2323  000004                     NWK_SetPanId@panId:
  2324                           	opt callstack 0
  2325  000004                     nwkDataReqTxConf@frame:
  2326                           	opt callstack 0
  2327  000004                     SYS_TimerStarted@t:
  2328                           	opt callstack 0
  2329  000004                     ___wmul@multiplicand:
  2330                           	opt callstack 0
  2331  000004                     memset@c:
  2332                           	opt callstack 0
  2333  000004                     fputc@c:
  2334                           	opt callstack 0
  2335  000004                     strlen@a:
  2336                           	opt callstack 0
  2337  000004                     strchr@c:
  2338                           	opt callstack 0
  2339  000004                     strncmp@_r:
  2340                           	opt callstack 0
  2341                           
  2342                           ; 2 bytes @ 0x3
  2343  000004                     	ds	1
  2344  000005                     DATAEE_WriteByte@GIEBitValue:
  2345                           	opt callstack 0
  2346  000005                     nwkRxInit@i:
  2347                           	opt callstack 0
  2348  000005                     PHY_DataConf@status:
  2349                           	opt callstack 0
  2350  000005                     SPI1_WriteBlock@blockSize:
  2351                           	opt callstack 0
  2352  000005                     SPI1_ReadBlock@blockSize:
  2353                           	opt callstack 0
  2354  000005                     CRC_Initialize@seed:
  2355                           	opt callstack 0
  2356  000005                     CRC_ReverseValue@reverse:
  2357                           	opt callstack 0
  2358                           
  2359                           ; 2 bytes @ 0x4
  2360  000005                     	ds	1
  2361  000006                     ??_strchr:
  2362  000006                     ??___xxtofl:
  2363  000006                     free_tx_buffer@buf_id:
  2364                           	opt callstack 0
  2365  000006                     loadMACAddr@i:
  2366                           	opt callstack 0
  2367  000006                     NWK_Init@i:
  2368                           	opt callstack 0
  2369  000006                     NWK_GroupIsMember@i:
  2370                           	opt callstack 0
  2371  000006                     NWK_RouteNewEntry@i:
  2372                           	opt callstack 0
  2373  000006                     DATAEE_ReadByte_Platform@addr:
  2374                           	opt callstack 0
  2375  000006                     DATAEE_WriteByte_Platform@addr:
  2376                           	opt callstack 0
  2377  000006                     ___wmul@product:
  2378                           	opt callstack 0
  2379  000006                     memset@n:
  2380                           	opt callstack 0
  2381  000006                     fputc@fp:
  2382                           	opt callstack 0
  2383  000006                     strncmp@n:
  2384                           	opt callstack 0
  2385  000006                     ___lmul@multiplicand:
  2386                           	opt callstack 0
  2387  000006                     ___llmod@divisor:
  2388                           	opt callstack 0
  2389                           
  2390                           ; 4 bytes @ 0x5
  2391  000006                     	ds	1
  2392  000007                     NWK_RouteFindEntry@i:
  2393                           	opt callstack 0
  2394  000007                     appDataConf@req:
  2395                           	opt callstack 0
  2396  000007                     SPI1_WriteBlock@data:
  2397                           	opt callstack 0
  2398  000007                     SPI1_ReadBlock@data:
  2399                           	opt callstack 0
  2400  000007                     CRC_ReverseValue@mask:
  2401                           	opt callstack 0
  2402  000007                     NWK_RouteNewEntry@iter:
  2403                           	opt callstack 0
  2404                           
  2405                           ; 2 bytes @ 0x6
  2406  000007                     	ds	1
  2407  000008                     ??_memset:
  2408  000008                     ??_fputc:
  2409  000008                     ??_strncmp:
  2410  000008                     ?_toupper:
  2411                           	opt callstack 0
  2412  000008                     ?_strspn:
  2413                           	opt callstack 0
  2414  000008                     ?_strcspn:
  2415                           	opt callstack 0
  2416  000008                     ?_NWK_RouteNextHop:
  2417                           	opt callstack 0
  2418  000008                     DATAEE_ReadByte_Platform@copy3:
  2419                           	opt callstack 0
  2420  000008                     DATAEE_WriteByte_Platform@data:
  2421                           	opt callstack 0
  2422  000008                     nwkTxAckReceived@ind:
  2423                           	opt callstack 0
  2424  000008                     _isspace$7749:
  2425                           	opt callstack 0
  2426  000008                     nwkDataReqTxConf@req:
  2427                           	opt callstack 0
  2428  000008                     NWK_RouteNextHop@dst:
  2429                           	opt callstack 0
  2430  000008                     nwkRouteRemove@dst:
  2431                           	opt callstack 0
  2432  000008                     nwkRouteFrameSent@frame:
  2433                           	opt callstack 0
  2434  000008                     memcpy@d1:
  2435                           	opt callstack 0
  2436  000008                     toupper@c:
  2437                           	opt callstack 0
  2438  000008                     strcspn@s:
  2439                           	opt callstack 0
  2440  000008                     strspn@s:
  2441                           	opt callstack 0
  2442  000008                     placeTimer@timeout:
  2443                           	opt callstack 0
  2444                           
  2445                           ; 4 bytes @ 0x7
  2446  000008                     	ds	1
  2447  000009                     ?_CRC_CalculatedResultGet:
  2448                           	opt callstack 0
  2449  000009                     ?_atoi:
  2450                           	opt callstack 0
  2451  000009                     DATAEE_ReadByte_Platform@copy2:
  2452                           	opt callstack 0
  2453  000009                     SX1276WriteBuffer@buffer:
  2454                           	opt callstack 0
  2455  000009                     CRC_CalculatedResultGet@xorValue:
  2456                           	opt callstack 0
  2457  000009                     nwkDataReqConfirm@req:
  2458                           	opt callstack 0
  2459  000009                     NWK_RouteNewEntry@entry:
  2460                           	opt callstack 0
  2461  000009                     SX1276ReadBuffer@buffer:
  2462                           	opt callstack 0
  2463  000009                     atoi@s:
  2464                           	opt callstack 0
  2465  000009                     strncmp@l:
  2466                           	opt callstack 0
  2467                           
  2468                           ; 2 bytes @ 0x8
  2469  000009                     	ds	1
  2470  00000A                     ??_toupper:
  2471  00000A                     ??_nwkRouteFrameSent:
  2472  00000A                     ?_CircularBufferSpace:
  2473                           	opt callstack 0
  2474  00000A                     DATAEE_ReadByte_Platform@copy1:
  2475                           	opt callstack 0
  2476  00000A                     NWK_RouteNextHop@multicast:
  2477                           	opt callstack 0
  2478  00000A                     nwkRouteRemove@multicast:
  2479                           	opt callstack 0
  2480  00000A                     SX1276WriteBuffer@size:
  2481                           	opt callstack 0
  2482  00000A                     ___llmod@counter:
  2483                           	opt callstack 0
  2484  00000A                     ___xxtofl@sign:
  2485                           	opt callstack 0
  2486  00000A                     CircularBufferSpace@ctx:
  2487                           	opt callstack 0
  2488  00000A                     memcpy@s1:
  2489                           	opt callstack 0
  2490  00000A                     memset@k:
  2491                           	opt callstack 0
  2492  00000A                     strcspn@c:
  2493                           	opt callstack 0
  2494  00000A                     strspn@c:
  2495                           	opt callstack 0
  2496  00000A                     ___lmul@product:
  2497                           	opt callstack 0
  2498  00000A                     ___omul@multiplicand:
  2499                           	opt callstack 0
  2500  00000A                     ___aodiv@divisor:
  2501                           	opt callstack 0
  2502  00000A                     ___aomod@divisor:
  2503                           	opt callstack 0
  2504  00000A                     ___lodiv@divisor:
  2505                           	opt callstack 0
  2506  00000A                     ___lomod@divisor:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 8 bytes @ 0x9
  2510  00000A                     	ds	1
  2511  00000B                     ??_CRC_CalculatedResultGet:
  2512  00000B                     ??_atoi:
  2513  00000B                     ??_nwkDataReqConfirm:
  2514  00000B                     SX1276ReadBuffer@size:
  2515                           	opt callstack 0
  2516  00000B                     SX1276WriteBuffer@addr:
  2517                           	opt callstack 0
  2518  00000B                     ___xxtofl@exp:
  2519                           	opt callstack 0
  2520  00000B                     NWK_RouteNextHop@entry:
  2521                           	opt callstack 0
  2522  00000B                     nwkRouteRemove@entry:
  2523                           	opt callstack 0
  2524  00000B                     nwkRouteFrameReceived@frame:
  2525                           	opt callstack 0
  2526  00000B                     nwkTxAckReceived@command:
  2527                           	opt callstack 0
  2528  00000B                     strncmp@r:
  2529                           	opt callstack 0
  2530                           
  2531                           ; 2 bytes @ 0xA
  2532  00000B                     	ds	1
  2533  00000C                     ??_strspn:
  2534  00000C                     ??_strcspn:
  2535  00000C                     ??_CircularBufferSpace:
  2536  00000C                     SX1276ReadBuffer@addr:
  2537                           	opt callstack 0
  2538  00000C                     nwkRouteFrameSent@entry:
  2539                           	opt callstack 0
  2540  00000C                     placeTimer@prev:
  2541                           	opt callstack 0
  2542  00000C                     memcpy@n:
  2543                           	opt callstack 0
  2544  00000C                     memset@s:
  2545                           	opt callstack 0
  2546  00000C                     ___xxtofl@arg:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 4 bytes @ 0xB
  2550  00000C                     	ds	1
  2551  00000D                     ??_nwkRouteFrameReceived:
  2552  00000D                     ?_strstr:
  2553                           	opt callstack 0
  2554  00000D                     ?_stoa:
  2555                           	opt callstack 0
  2556  00000D                     nwkRouteErrorReceived@ind:
  2557                           	opt callstack 0
  2558  00000D                     SX1276Read@addr:
  2559                           	opt callstack 0
  2560  00000D                     nwkDataReqConfirm@prev:
  2561                           	opt callstack 0
  2562  00000D                     nwkRoutePrepareTx@frame:
  2563                           	opt callstack 0
  2564  00000D                     nwkTxAckReceived@frame:
  2565                           	opt callstack 0
  2566  00000D                     stoa@fp:
  2567                           	opt callstack 0
  2568  00000D                     fputs@s:
  2569                           	opt callstack 0
  2570  00000D                     strstr@h:
  2571                           	opt callstack 0
  2572  00000D                     strcspn@i:
  2573                           	opt callstack 0
  2574  00000D                     strspn@i:
  2575                           	opt callstack 0
  2576                           
  2577                           ; 2 bytes @ 0xC
  2578  00000D                     	ds	1
  2579  00000E                     ?_nwkFrameAlloc:
  2580                           	opt callstack 0
  2581  00000E                     SX1276Read@data:
  2582                           	opt callstack 0
  2583  00000E                     memcpy@tmp:
  2584                           	opt callstack 0
  2585  00000E                     CRC_CalculatedResultGet@mask:
  2586                           	opt callstack 0
  2587  00000E                     placeTimer@t:
  2588                           	opt callstack 0
  2589  00000E                     _toupper$7888:
  2590                           	opt callstack 0
  2591                           
  2592                           ; 2 bytes @ 0xD
  2593  00000E                     	ds	1
  2594  00000F                     ?_strtok:
  2595                           	opt callstack 0
  2596  00000F                     ?_getSignalBandwidth:
  2597                           	opt callstack 0
  2598  00000F                     ?_getSpreadingFactor:
  2599                           	opt callstack 0
  2600  00000F                     SX1276Write@data:
  2601                           	opt callstack 0
  2602  00000F                     stoa@s:
  2603                           	opt callstack 0
  2604  00000F                     nwkRouteErrorReceived@command:
  2605                           	opt callstack 0
  2606  00000F                     atoi@neg:
  2607                           	opt callstack 0
  2608  00000F                     memcpy@d:
  2609                           	opt callstack 0
  2610  00000F                     fputs@fp:
  2611                           	opt callstack 0
  2612  00000F                     strstr@n:
  2613                           	opt callstack 0
  2614  00000F                     strtok@s:
  2615                           	opt callstack 0
  2616                           
  2617                           ; 2 bytes @ 0xE
  2618  00000F                     	ds	1
  2619  000010                     ??_nwkFrameAlloc:
  2620  000010                     ??_stoa:
  2621  000010                     ?___flmul:
  2622                           	opt callstack 0
  2623  000010                     ?___strtoxl:
  2624                           	opt callstack 0
  2625  000010                     CRC_CalculatedResultGet@reverse:
  2626                           	opt callstack 0
  2627  000010                     SX1276Write@addr:
  2628                           	opt callstack 0
  2629  000010                     SYS_TimerStart@timer:
  2630                           	opt callstack 0
  2631  000010                     ___strtoxl@s:
  2632                           	opt callstack 0
  2633  000010                     ___flge@ff1:
  2634                           	opt callstack 0
  2635  000010                     ___flmul@b:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 4 bytes @ 0xF
  2639  000010                     	ds	1
  2640  000011                     ??_setCodingRate4:
  2641  000011                     ??_cad:
  2642  000011                     nwkRouteFrameReceived@discovery:
  2643                           	opt callstack 0
  2644  000011                     setTxPower@power:
  2645                           	opt callstack 0
  2646  000011                     setSyncWord@sw:
  2647                           	opt callstack 0
  2648  000011                     receive@size:
  2649                           	opt callstack 0
  2650  000011                     fputs@c:
  2651                           	opt callstack 0
  2652  000011                     CRC_CalculatedResultGet@result:
  2653                           	opt callstack 0
  2654  000011                     nwkRoutePrepareTx@header:
  2655                           	opt callstack 0
  2656  000011                     setPreambleLength@length:
  2657                           	opt callstack 0
  2658  000011                     PHY_DataReq@data:
  2659                           	opt callstack 0
  2660  000011                     _atoi$7722:
  2661                           	opt callstack 0
  2662  000011                     memcpy@s:
  2663                           	opt callstack 0
  2664  000011                     strstr@nl:
  2665                           	opt callstack 0
  2666  000011                     strtok@sep:
  2667                           	opt callstack 0
  2668  000011                     stoa@nuls:
  2669                           	opt callstack 0
  2670                           
  2671                           ; 7 bytes @ 0x10
  2672  000011                     	ds	1
  2673  000012                     nwkFrameAlloc@i:
  2674                           	opt callstack 0
  2675  000012                     _nwkRouteFrameReceived$4139:
  2676                           	opt callstack 0
  2677  000012                     setCodingRate4@cr:
  2678                           	opt callstack 0
  2679  000012                     ___aodiv@counter:
  2680                           	opt callstack 0
  2681  000012                     ___aomod@counter:
  2682                           	opt callstack 0
  2683  000012                     ___lomod@counter:
  2684                           	opt callstack 0
  2685  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  2686                           	opt callstack 0
  2687  000012                     nwkRxRejectDuplicate@header:
  2688                           	opt callstack 0
  2689  000012                     nwkTxAckWaitTimerHandler@timer:
  2690                           	opt callstack 0
  2691  000012                     nwkTxDelayTimerHandler@timer:
  2692                           	opt callstack 0
  2693  000012                     cad@RSSI:
  2694                           	opt callstack 0
  2695  000012                     fputs@i:
  2696                           	opt callstack 0
  2697  000012                     ___strtoxl@endptr:
  2698                           	opt callstack 0
  2699  000012                     ___omul@product:
  2700                           	opt callstack 0
  2701  000012                     ___lodiv@quotient:
  2702                           	opt callstack 0
  2703                           
  2704                           ; 8 bytes @ 0x11
  2705  000012                     	ds	1
  2706  000013                     ??_getSignalBandwidth:
  2707  000013                     ??_getSpreadingFactor:
  2708  000013                     ?_crc16_app:
  2709                           	opt callstack 0
  2710  000013                     PHY_DataInd@ind:
  2711                           	opt callstack 0
  2712  000013                     setCodingRate4@denominator:
  2713                           	opt callstack 0
  2714  000013                     PHY_DataReq@size:
  2715                           	opt callstack 0
  2716  000013                     ___aodiv@sign:
  2717                           	opt callstack 0
  2718  000013                     ___aomod@sign:
  2719                           	opt callstack 0
  2720  000013                     CircularBufferPushBack@ctx:
  2721                           	opt callstack 0
  2722  000013                     crc16_app@dptr:
  2723                           	opt callstack 0
  2724  000013                     nwkRouteFrameReceived@entry:
  2725                           	opt callstack 0
  2726  000013                     _atoi$7724:
  2727                           	opt callstack 0
  2728                           
  2729                           ; 2 bytes @ 0x12
  2730  000013                     	ds	1
  2731  000014                     ??_nwkTxTaskHandler:
  2732  000014                     ??_PHY_DataInd:
  2733  000014                     ??_nwkRxRejectDuplicate:
  2734  000014                     ?_abs:
  2735                           	opt callstack 0
  2736  000014                     ?_pad:
  2737                           	opt callstack 0
  2738  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  2739                           	opt callstack 0
  2740  000014                     cad@temp:
  2741                           	opt callstack 0
  2742  000014                     pad@fp:
  2743                           	opt callstack 0
  2744  000014                     abs@a:
  2745                           	opt callstack 0
  2746  000014                     ___strtoxl@base:
  2747                           	opt callstack 0
  2748  000014                     ___flge@ff2:
  2749                           	opt callstack 0
  2750  000014                     ___flmul@a:
  2751                           	opt callstack 0
  2752  000014                     ___aodiv@quotient:
  2753                           	opt callstack 0
  2754                           
  2755                           ; 8 bytes @ 0x13
  2756  000014                     	ds	1
  2757  000015                     CircularBufferPushBack@val:
  2758                           	opt callstack 0
  2759  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  2760                           	opt callstack 0
  2761  000015                     getSignalBandwidth@bw:
  2762                           	opt callstack 0
  2763  000015                     _atoi$7723:
  2764                           	opt callstack 0
  2765  000015                     crc16_app@len:
  2766                           	opt callstack 0
  2767  000015                     nwkRouteFrameReceived@header:
  2768                           	opt callstack 0
  2769                           
  2770                           ; 2 bytes @ 0x14
  2771  000015                     	ds	1
  2772  000016                     ??_abs:
  2773  000016                     ??_CircularBufferPushBack:
  2774  000016                     ?___lldiv:
  2775                           	opt callstack 0
  2776  000016                     nwkTxAckWaitTimerHandler@restart:
  2777                           	opt callstack 0
  2778  000016                     nwkTxDelayTimerHandler@restart:
  2779                           	opt callstack 0
  2780  000016                     ___strtoxl@is_signed:
  2781                           	opt callstack 0
  2782  000016                     nwkTxTaskHandler@frame:
  2783                           	opt callstack 0
  2784  000016                     pad@buf:
  2785                           	opt callstack 0
  2786  000016                     atoi@n:
  2787                           	opt callstack 0
  2788  000016                     ___lldiv@dividend:
  2789                           	opt callstack 0
  2790                           
  2791                           ; 4 bytes @ 0x15
  2792  000016                     	ds	1
  2793  000017                     ??___strtoxl:
  2794  000017                     crc16_app@seed:
  2795                           	opt callstack 0
  2796  000017                     PHY_DataInd@frame:
  2797                           	opt callstack 0
  2798  000017                     nwkTxAckWaitTimerHandler@frame:
  2799                           	opt callstack 0
  2800  000017                     nwkTxDelayTimerHandler@frame:
  2801                           	opt callstack 0
  2802                           
  2803                           ; 2 bytes @ 0x16
  2804  000017                     	ds	1
  2805  000018                     ??___flmul:
  2806  000018                     ??___flge:
  2807  000018                     nwkRxRejectDuplicate@shift:
  2808                           	opt callstack 0
  2809  000018                     pad@p:
  2810                           	opt callstack 0
  2811  000018                     stoa@i:
  2812                           	opt callstack 0
  2813                           
  2814                           ; 2 bytes @ 0x17
  2815  000018                     	ds	1
  2816  000019                     ??_SYS_TimerTaskHandler:
  2817  000019                     nwkRxRejectDuplicate@i:
  2818                           	opt callstack 0
  2819  000019                     crc16_app@result:
  2820                           	opt callstack 0
  2821                           
  2822                           ; 2 bytes @ 0x18
  2823  000019                     	ds	1
  2824  00001A                     ??_pad:
  2825  00001A                     ?_rand:
  2826                           	opt callstack 0
  2827  00001A                     nwkRxRejectDuplicate@diff:
  2828                           	opt callstack 0
  2829  00001A                     ___lodiv@counter:
  2830                           	opt callstack 0
  2831  00001A                     CircularBufferPushBack@write_pos:
  2832                           	opt callstack 0
  2833  00001A                     stoa@w:
  2834                           	opt callstack 0
  2835  00001A                     ___lldiv@divisor:
  2836                           	opt callstack 0
  2837                           
  2838                           ; 4 bytes @ 0x19
  2839  00001A                     	ds	1
  2840  00001B                     crc16_app@ptr:
  2841                           	opt callstack 0
  2842  00001B                     nwkRxRejectDuplicate@freeEntry:
  2843                           	opt callstack 0
  2844  00001B                     pad@i:
  2845                           	opt callstack 0
  2846  00001B                     ___strtoxl@prev_a:
  2847                           	opt callstack 0
  2848                           
  2849                           ; 4 bytes @ 0x1A
  2850  00001B                     	ds	1
  2851  00001C                     ??_rand:
  2852  00001C                     stoa@cp:
  2853                           	opt callstack 0
  2854  00001C                     ___flmul@sign:
  2855                           	opt callstack 0
  2856  00001C                     queueLedEvent@duration:
  2857                           	opt callstack 0
  2858                           
  2859                           ; 2 bytes @ 0x1B
  2860  00001C                     	ds	1
  2861  00001D                     SYS_TimerTaskHandler@cnt:
  2862                           	opt callstack 0
  2863  00001D                     ___flmul@aexp:
  2864                           	opt callstack 0
  2865  00001D                     crc16_app@i:
  2866                           	opt callstack 0
  2867  00001D                     nwkRxRejectDuplicate@entry:
  2868                           	opt callstack 0
  2869  00001D                     pad@w:
  2870                           	opt callstack 0
  2871  00001D                     stoa@p:
  2872                           	opt callstack 0
  2873                           
  2874                           ; 2 bytes @ 0x1C
  2875  00001D                     	ds	1
  2876  00001E                     queueLedEvent@LEDState:
  2877                           	opt callstack 0
  2878  00001E                     SYS_TimerTaskHandler@elapsed:
  2879                           	opt callstack 0
  2880  00001E                     ___lldiv@quotient:
  2881                           	opt callstack 0
  2882  00001E                     ___flmul@grs:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 4 bytes @ 0x1D
  2886  00001E                     	ds	1
  2887  00001F                     ?_dtoa:
  2888                           	opt callstack 0
  2889  00001F                     ?_utoa:
  2890                           	opt callstack 0
  2891  00001F                     ?_xtoa:
  2892                           	opt callstack 0
  2893  00001F                     dtoa@fp:
  2894                           	opt callstack 0
  2895  00001F                     stoa@l:
  2896                           	opt callstack 0
  2897  00001F                     utoa@fp:
  2898                           	opt callstack 0
  2899  00001F                     xtoa@fp:
  2900                           	opt callstack 0
  2901  00001F                     ___strtoxl$7910:
  2902                           	opt callstack 0
  2903  00001F                     queueLedEvent@temp:
  2904                           	opt callstack 0
  2905                           
  2906                           ; 3 bytes @ 0x1E
  2907  00001F                     	ds	2
  2908  000021                     ___strtoxl$7912:
  2909                           	opt callstack 0
  2910  000021                     dtoa@d:
  2911                           	opt callstack 0
  2912  000021                     utoa@d:
  2913                           	opt callstack 0
  2914  000021                     xtoa@d:
  2915                           	opt callstack 0
  2916                           
  2917                           ; 8 bytes @ 0x20
  2918  000021                     	ds	1
  2919  000022                     queue_serial_led_event@i:
  2920                           	opt callstack 0
  2921  000022                     ___lldiv@counter:
  2922                           	opt callstack 0
  2923  000022                     ___flmul@bexp:
  2924                           	opt callstack 0
  2925  000022                     SYS_TimerTaskHandler@timer:
  2926                           	opt callstack 0
  2927                           
  2928                           ; 2 bytes @ 0x21
  2929  000022                     	ds	1
  2930  000023                     ??_setSpreadingFactor:
  2931  000023                     ___strtoxl$7913:
  2932                           	opt callstack 0
  2933  000023                     setFrequency@frequency:
  2934                           	opt callstack 0
  2935  000023                     setSignalBandwidth@sbw:
  2936                           	opt callstack 0
  2937  000023                     computeFRF@frequency:
  2938                           	opt callstack 0
  2939  000023                     ___flmul@prod:
  2940                           	opt callstack 0
  2941                           
  2942                           ; 4 bytes @ 0x22
  2943  000023                     	ds	1
  2944  000024                     nwkTxFrame@frame:
  2945                           	opt callstack 0
  2946  000024                     nwkTxBroadcastFrame@frame:
  2947                           	opt callstack 0
  2948                           
  2949                           ; 2 bytes @ 0x23
  2950  000024                     	ds	1
  2951  000025                     ___strtoxl$7911:
  2952                           	opt callstack 0
  2953                           
  2954                           ; 1 bytes @ 0x24
  2955  000025                     	ds	1
  2956  000026                     ??_nwkTxBroadcastFrame:
  2957  000026                     ___strtoxl@conv_done:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 1 bytes @ 0x25
  2961  000026                     	ds	1
  2962  000027                     ??_setSignalBandwidth:
  2963  000027                     nwkTxBroadcastFrame@newFrame:
  2964                           	opt callstack 0
  2965  000027                     ___flmul@temp:
  2966                           	opt callstack 0
  2967  000027                     setFrequency@num_mod:
  2968                           	opt callstack 0
  2969  000027                     computeFRF@num_mod:
  2970                           	opt callstack 0
  2971  000027                     ___strtoxl@limit:
  2972                           	opt callstack 0
  2973  000027                     _setSpreadingFactor$8654:
  2974                           	opt callstack 0
  2975                           
  2976                           ; 4 bytes @ 0x26
  2977  000027                     	ds	1
  2978  000028                     nwkTxFrame@header:
  2979                           	opt callstack 0
  2980                           
  2981                           ; 2 bytes @ 0x27
  2982  000028                     	ds	1
  2983  000029                     ??_dtoa:
  2984  000029                     ??_utoa:
  2985  000029                     ?___fladd:
  2986                           	opt callstack 0
  2987  000029                     xtoa@x:
  2988                           	opt callstack 0
  2989  000029                     nwkRxHandleReceivedFrame@frame:
  2990                           	opt callstack 0
  2991  000029                     ___fladd@b:
  2992                           	opt callstack 0
  2993                           
  2994                           ; 4 bytes @ 0x28
  2995  000029                     	ds	1
  2996  00002A                     ??_xtoa:
  2997  00002A                     nwkDataReqSendFrame@req:
  2998                           	opt callstack 0
  2999  00002A                     nwkRouteSendRouteError@src:
  3000                           	opt callstack 0
  3001  00002A                     nwkRxSendAck@frame:
  3002                           	opt callstack 0
  3003                           
  3004                           ; 2 bytes @ 0x29
  3005  00002A                     	ds	1
  3006  00002B                     ??_nwkRxHandleReceivedFrame:
  3007  00002B                     setSpreadingFactor@sf:
  3008                           	opt callstack 0
  3009  00002B                     ___strtoxl@sign:
  3010                           	opt callstack 0
  3011  00002B                     setFrequency@num:
  3012                           	opt callstack 0
  3013  00002B                     computeFRF@num:
  3014                           	opt callstack 0
  3015  00002B                     _setSignalBandwidth$8655:
  3016                           	opt callstack 0
  3017                           
  3018                           ; 4 bytes @ 0x2A
  3019  00002B                     	ds	1
  3020  00002C                     ??_nwkDataReqSendFrame:
  3021  00002C                     ___strtoxl@skip:
  3022                           	opt callstack 0
  3023  00002C                     nwkRouteSendRouteError@dst:
  3024                           	opt callstack 0
  3025  00002C                     nwkRxSendAck@command:
  3026                           	opt callstack 0
  3027                           
  3028                           ; 2 bytes @ 0x2B
  3029  00002C                     	ds	1
  3030  00002D                     nwkRxHandleReceivedFrame@broadcast:
  3031                           	opt callstack 0
  3032  00002D                     nwkDataReqSendFrame@mcHeader:
  3033                           	opt callstack 0
  3034  00002D                     ___fladd@a:
  3035                           	opt callstack 0
  3036  00002D                     ___strtoxl@a:
  3037                           	opt callstack 0
  3038                           
  3039                           ; 4 bytes @ 0x2C
  3040  00002D                     	ds	1
  3041  00002E                     nwkRouteSendRouteError@multicast:
  3042                           	opt callstack 0
  3043  00002E                     nwkRxHandleReceivedFrame@member:
  3044                           	opt callstack 0
  3045  00002E                     nwkRxSendAck@ack:
  3046                           	opt callstack 0
  3047                           
  3048                           ; 2 bytes @ 0x2D
  3049  00002E                     	ds	1
  3050  00002F                     computeFRF@i:
  3051                           	opt callstack 0
  3052  00002F                     PHY_SetChannel@channel:
  3053                           	opt callstack 0
  3054  00002F                     nwkDataReqSendFrame@frame:
  3055                           	opt callstack 0
  3056  00002F                     nwkRouteSendRouteError@command:
  3057                           	opt callstack 0
  3058  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  3059                           	opt callstack 0
  3060  00002F                     setSignalBandwidth@bw:
  3061                           	opt callstack 0
  3062                           
  3063                           ; 4 bytes @ 0x2E
  3064  00002F                     	ds	1
  3065  000030                     ??_bootLoadApplication:
  3066                           
  3067                           ; 1 bytes @ 0x2F
  3068  000030                     	ds	1
  3069  000031                     ??_nwkDataReqTaskHandler:
  3070  000031                     ??___fladd:
  3071  000031                     nwkRouteSendRouteError@frame:
  3072                           	opt callstack 0
  3073  000031                     nwkRxHandleReceivedFrame@header:
  3074                           	opt callstack 0
  3075  000031                     _dtoa$7219:
  3076                           	opt callstack 0
  3077  000031                     utoa@p:
  3078                           	opt callstack 0
  3079  000031                     ___strtoxl@cp:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 2 bytes @ 0x30
  3083  000031                     	ds	1
  3084  000032                     bootLoadApplication@buf_id:
  3085                           	opt callstack 0
  3086  000032                     _xtoa$7247:
  3087                           	opt callstack 0
  3088                           
  3089                           ; 2 bytes @ 0x31
  3090  000032                     	ds	1
  3091  000033                     ??_initRadio:
  3092  000033                     ___strtoxl@c:
  3093                           	opt callstack 0
  3094  000033                     bootLoadApplication@temp:
  3095                           	opt callstack 0
  3096  000033                     nwkDataReqTaskHandler@req:
  3097                           	opt callstack 0
  3098  000033                     nwkRouteFrame@frame:
  3099                           	opt callstack 0
  3100  000033                     dtoa@p:
  3101                           	opt callstack 0
  3102  000033                     utoa@w:
  3103                           	opt callstack 0
  3104                           
  3105                           ; 2 bytes @ 0x32
  3106  000033                     	ds	1
  3107  000034                     ?_strtoul:
  3108                           	opt callstack 0
  3109  000034                     ?_strtol:
  3110                           	opt callstack 0
  3111  000034                     strtol@s:
  3112                           	opt callstack 0
  3113  000034                     _xtoa$7248:
  3114                           	opt callstack 0
  3115  000034                     strtoul@s:
  3116                           	opt callstack 0
  3117                           
  3118                           ; 2 bytes @ 0x33
  3119  000034                     	ds	1
  3120  000035                     bootLoadApplication@i:
  3121                           	opt callstack 0
  3122  000035                     ___fladd@signs:
  3123                           	opt callstack 0
  3124  000035                     strtol@endptr:
  3125                           	opt callstack 0
  3126  000035                     nwkRouteFrame@header:
  3127                           	opt callstack 0
  3128  000035                     dtoa@w:
  3129                           	opt callstack 0
  3130  000035                     utoa@n:
  3131                           	opt callstack 0
  3132                           
  3133                           ; 8 bytes @ 0x34
  3134  000035                     	ds	1
  3135  000036                     ___fladd@aexp:
  3136                           	opt callstack 0
  3137  000036                     xtoa@p:
  3138                           	opt callstack 0
  3139  000036                     strtol@base:
  3140                           	opt callstack 0
  3141  000036                     strtoul@endptr:
  3142                           	opt callstack 0
  3143                           
  3144                           ; 2 bytes @ 0x35
  3145  000036                     	ds	1
  3146  000037                     initRadio@version:
  3147                           	opt callstack 0
  3148  000037                     ___fladd@bexp:
  3149                           	opt callstack 0
  3150  000037                     dtoa@s:
  3151                           	opt callstack 0
  3152                           
  3153                           ; 2 bytes @ 0x36
  3154  000037                     	ds	1
  3155  000038                     ___fladd@grs:
  3156                           	opt callstack 0
  3157  000038                     initRadio@wideRSSI:
  3158                           	opt callstack 0
  3159  000038                     xtoa@w:
  3160                           	opt callstack 0
  3161  000038                     strtoul@base:
  3162                           	opt callstack 0
  3163                           
  3164                           ; 2 bytes @ 0x37
  3165  000038                     	ds	1
  3166  000039                     ?___fltol:
  3167                           	opt callstack 0
  3168  000039                     ___fltol@f1:
  3169                           	opt callstack 0
  3170  000039                     dtoa@n:
  3171                           	opt callstack 0
  3172                           
  3173                           ; 8 bytes @ 0x38
  3174  000039                     	ds	1
  3175  00003A                     cmdSetBaud@atCommand:
  3176                           	opt callstack 0
  3177  00003A                     xtoa@n:
  3178                           	opt callstack 0
  3179                           
  3180                           ; 8 bytes @ 0x39
  3181  00003A                     	ds	2
  3182  00003C                     cmdSetBaud@tempbaud:
  3183                           	opt callstack 0
  3184                           
  3185                           ; 1 bytes @ 0x3B
  3186  00003C                     	ds	1
  3187  00003D                     ??___fltol:
  3188  00003D                     cmdSetBaud@ptr:
  3189                           	opt callstack 0
  3190  00003D                     utoa@i:
  3191                           	opt callstack 0
  3192                           
  3193                           ; 2 bytes @ 0x3C
  3194  00003D                     	ds	4
  3195  000041                     ___fltol@sign1:
  3196                           	opt callstack 0
  3197  000041                     dtoa@i:
  3198                           	opt callstack 0
  3199                           
  3200                           ; 2 bytes @ 0x40
  3201  000041                     	ds	1
  3202  000042                     ___fltol@exp1:
  3203                           	opt callstack 0
  3204  000042                     xtoa@i:
  3205                           	opt callstack 0
  3206                           
  3207                           ; 2 bytes @ 0x41
  3208  000042                     	ds	1
  3209  000043                     get_lqi@rssi:
  3210                           	opt callstack 0
  3211                           
  3212                           ; 1 bytes @ 0x42
  3213  000043                     	ds	1
  3214  000044                     DIO0_Receive_ISR@packetLength:
  3215                           	opt callstack 0
  3216  000044                     xtoa@c:
  3217                           	opt callstack 0
  3218                           
  3219                           ; 2 bytes @ 0x43
  3220  000044                     	ds	1
  3221  000045                     DIO0_Receive_ISR@irqFlags:
  3222                           	opt callstack 0
  3223                           
  3224                           ; 1 bytes @ 0x44
  3225  000045                     	ds	1
  3226  000046                     ?_vfpfcnvrt:
  3227                           	opt callstack 0
  3228  000046                     vfpfcnvrt@fp:
  3229                           	opt callstack 0
  3230  000046                     DIO0_Receive_ISR@ind:
  3231                           	opt callstack 0
  3232                           
  3233                           ; 5 bytes @ 0x45
  3234  000046                     	ds	2
  3235  000048                     vfpfcnvrt@fmt:
  3236                           	opt callstack 0
  3237                           
  3238                           ; 1 bytes @ 0x47
  3239  000048                     	ds	1
  3240  000049                     vfpfcnvrt@ap:
  3241                           	opt callstack 0
  3242                           
  3243                           ; 1 bytes @ 0x48
  3244  000049                     	ds	1
  3245  00004A                     ??_vfpfcnvrt:
  3246                           
  3247                           ; 1 bytes @ 0x49
  3248  00004A                     	ds	1
  3249  00004B                     ??_radio_engine:
  3250                           
  3251                           ; 1 bytes @ 0x4A
  3252  00004B                     	ds	2
  3253  00004D                     
  3254                           ; 1 bytes @ 0x4C
  3255  00004D                     	ds	1
  3256  00004E                     ?_vfprintf:
  3257                           	opt callstack 0
  3258  00004E                     vfprintf@fp:
  3259                           	opt callstack 0
  3260                           
  3261                           ; 2 bytes @ 0x4D
  3262  00004E                     	ds	2
  3263  000050                     vfprintf@fmt:
  3264                           	opt callstack 0
  3265                           
  3266                           ; 2 bytes @ 0x4F
  3267  000050                     	ds	2
  3268  000052                     vfprintf@ap:
  3269                           	opt callstack 0
  3270                           
  3271                           ; 1 bytes @ 0x51
  3272  000052                     	ds	1
  3273  000053                     vfprintf@cfmt:
  3274                           	opt callstack 0
  3275                           
  3276                           ; 2 bytes @ 0x52
  3277  000053                     	ds	2
  3278  000055                     
  3279                           ; 1 bytes @ 0x54
  3280  000055                     	ds	2
  3281  000057                     printf@ap:
  3282                           	opt callstack 0
  3283                           
  3284                           ; 1 bytes @ 0x56
  3285  000057                     	ds	1
  3286  000058                     ??_cmdMac:
  3287  000058                     ??_cmdBootLoad:
  3288  000058                     appDataInd@ind:
  3289                           	opt callstack 0
  3290  000058                     nwkRxServiceDataInd@ind:
  3291                           	opt callstack 0
  3292  000058                     cmdSend@cmd:
  3293                           	opt callstack 0
  3294  000058                     cmdBcast@cmd:
  3295                           	opt callstack 0
  3296  000058                     cmdSetAddr@cmd:
  3297                           	opt callstack 0
  3298  000058                     cmdSetNaddr@cmd:
  3299                           	opt callstack 0
  3300  000058                     cmdSetAES@cmd:
  3301                           	opt callstack 0
  3302  000058                     cmdSetRFCH@cmd:
  3303                           	opt callstack 0
  3304  000058                     cmdSetTX@cmd:
  3305                           	opt callstack 0
  3306  000058                     cmdSetCADRSSI@atCommand:
  3307                           	opt callstack 0
  3308  000058                     cmdSetParity@atCommand:
  3309                           	opt callstack 0
  3310  000058                     cmdSetSF@atCommand:
  3311                           	opt callstack 0
  3312  000058                     print_hop_table@atCommand:
  3313                           	opt callstack 0
  3314  000058                     set_hop_table_ttl@cmd:
  3315                           	opt callstack 0
  3316                           
  3317                           ; 2 bytes @ 0x57
  3318  000058                     	ds	1
  3319  000059                     ??_nwkRxServiceDataInd:
  3320  000059                     cmdMac@i:
  3321                           	opt callstack 0
  3322                           
  3323                           ; 1 bytes @ 0x58
  3324  000059                     	ds	1
  3325  00005A                     ??_cmdSend:
  3326  00005A                     ??_cmdBcast:
  3327  00005A                     ??_cmdSetAES:
  3328  00005A                     print_hop_table@entry:
  3329                           	opt callstack 0
  3330                           
  3331                           ; 2 bytes @ 0x59
  3332  00005A                     	ds	2
  3333  00005C                     print_hop_table@i:
  3334                           	opt callstack 0
  3335                           
  3336                           ; 1 bytes @ 0x5B
  3337  00005C                     	ds	1
  3338  00005D                     nwkRxHandleIndication@ack:
  3339                           	opt callstack 0
  3340                           
  3341                           ; 1 bytes @ 0x5C
  3342  00005D                     	ds	1
  3343  00005E                     
  3344                           ; 1 bytes @ 0x5D
  3345 ;;
  3346 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3347 ;;
  3348 ;; *************** function _main *****************
  3349 ;; Defined at:
  3350 ;;		line 51 in file "main.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 6/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels required when called:   22
  3370 ;; This function calls:
  3371 ;;		_SYSTEM_Initialize
  3372 ;;		_SYS_Init
  3373 ;;		_SYS_TaskHandler
  3374 ;;		_TMR0_SetInterruptHandler
  3375 ;;		_bootLoadApplication
  3376 ;;		_processATCommand
  3377 ;; This function is called by:
  3378 ;;		Startup code after reset
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text0
  3383  008824                     __ptext0:
  3384                           	opt callstack 0
  3385  008824                     _main:
  3386                           	opt callstack 9
  3387                           
  3388                           ;main.c: 54:     SYSTEM_Initialize();
  3389                           
  3390                           ;incstack = 0
  3391  008824  ECDB  F044         	call	_SYSTEM_Initialize	;wreg free
  3392                           
  3393                           ; BSR set to: 61
  3394                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  3395  008828  8ED2               	bsf	210,7,c	;volatile
  3396                           
  3397                           ; BSR set to: 61
  3398                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  3399  00882A  8CD2               	bsf	210,6,c	;volatile
  3400                           
  3401                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  3402  00882C  0E50               	movlw	low _Timer0Handler
  3403  00882E  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3404  008830  0E7D               	movlw	high _Timer0Handler
  3405  008832  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3406  008834  ECF2  F046         	call	_TMR0_SetInterruptHandler	;wreg free
  3407                           
  3408                           ;main.c: 73:     SYS_Init();
  3409  008838  ECC8  F046         	call	_SYS_Init	;wreg free
  3410                           
  3411                           ; BSR set to: 2
  3412                           ;main.c: 74:     bootLoadApplication();
  3413  00883C  ECD7  F012         	call	_bootLoadApplication	;wreg free
  3414  008840  86BA               	bsf	186,3,c	;volatile
  3415  008842                     l17447:
  3416                           
  3417                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  3418  008842  ECBA  F046         	call	_SYS_TaskHandler	;wreg free
  3419                           
  3420                           ;main.c: 79:         processATCommand();
  3421  008846  ECB1  F01E         	call	_processATCommand	;wreg free
  3422  00884A  D7FB               	goto	l17447
  3423  00884C                     __end_of_main:
  3424                           	opt callstack 0
  3425                           
  3426 ;; *************** function _processATCommand *****************
  3427 ;; Defined at:
  3428 ;;		line 1006 in file "../app/app_src/application.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  data            1   80[BANK0 ] unsigned char 
  3433 ;;  data            1   81[BANK0 ] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 3E/0
  3440 ;;		On exit  : 6/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;Total ram usage:        4 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:   19
  3450 ;; This function calls:
  3451 ;;		_UART1_Read
  3452 ;;		_UART1_is_rx_ready
  3453 ;;		_executeATCommand
  3454 ;;		_get_timer0base
  3455 ;;		_memset
  3456 ;;		_queue_serial_led_event
  3457 ;;		_set_timer0base
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text1
  3464  003D62                     __ptext1:
  3465                           	opt callstack 0
  3466  003D62                     _processATCommand:
  3467                           	opt callstack 11
  3468                           
  3469                           ;../app/app_src/application.c: 1009:     if(tx_done && U1ERRIRbits.TXMTIF){
  3470                           
  3471                           ;incstack = 0
  3472  003D62  0101               	movlb	1	; () banked
  3473  003D64  5181               	movf	_tx_done& (0+255),w,b	;volatile
  3474  003D66  B4D8               	btfsc	status,2,c
  3475  003D68  D006               	goto	l17217
  3476                           
  3477                           ; BSR set to: 1
  3478  003D6A  013D               	movlb	61	; () banked
  3479  003D6C  AFF9               	btfss	249,7,b	;volatile
  3480  003D6E  D003               	goto	l17217
  3481                           
  3482                           ; BSR set to: 61
  3483                           ;../app/app_src/application.c: 1011:        tx_done = 0;
  3484  003D70  0E00               	movlw	0
  3485  003D72  0101               	movlb	1	; () banked
  3486  003D74  6F81               	movwf	_tx_done& (0+255),b	;volatile
  3487  003D76                     l17217:
  3488                           
  3489                           ;../app/app_src/application.c: 1014:     if(((atStateVar != lookingForA) || (atStateVar 
      +                          != processCommand)) &&
  3490  003D76  0100               	movlb	0	; () banked
  3491  003D78  05F3               	decf	_atStateVar& (0+255),w,b
  3492  003D7A  A4D8               	btfss	status,2,c
  3493  003D7C  D004               	goto	u17790
  3494                           
  3495                           ; BSR set to: 0
  3496  003D7E  0E05               	movlw	5
  3497  003D80  19F3               	xorwf	_atStateVar& (0+255),w,b
  3498  003D82  B4D8               	btfsc	status,2,c
  3499  003D84  D08D               	goto	l17287
  3500  003D86                     u17790:
  3501                           
  3502                           ; BSR set to: 0
  3503  003D86  0EFD               	movlw	low _ATTimeoutTimer
  3504  003D88  6E02               	movwf	get_timer0base@timer^0,c
  3505  003D8A  6A03               	clrf	(get_timer0base@timer+1)^0,c
  3506  003D8C  ECBD  F043         	call	_get_timer0base	;wreg free
  3507  003D90  5002               	movf	?_get_timer0base^0,w,c
  3508  003D92  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3509  003D94  A4D8               	btfss	status,2,c
  3510  003D96  D084               	goto	l17287
  3511                           
  3512                           ; BSR set to: 57
  3513                           ;../app/app_src/application.c: 1015:             (!get_timer0base(&ATTimeoutTimer))) {;.
      +                          ./app/app_src/application.c: 1016:         atStateVar = resetATMachine;
  3514  003D98  0E06               	movlw	6
  3515  003D9A  0100               	movlb	0	; () banked
  3516  003D9C  6FF3               	movwf	_atStateVar& (0+255),b
  3517  003D9E  D080               	goto	l17287
  3518  003DA0                     l17225:
  3519                           
  3520                           ;../app/app_src/application.c: 1020:             atStateVar = resetATMachine;
  3521  003DA0  0E06               	movlw	6
  3522  003DA2  0100               	movlb	0	; () banked
  3523  003DA4  6FF3               	movwf	_atStateVar& (0+255),b
  3524                           
  3525                           ;../app/app_src/application.c: 1021:             break;
  3526  003DA6  0012               	return	
  3527  003DA8                     l17227:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;../app/app_src/application.c: 1024:             if(UART1_is_rx_ready()){
  3531  003DA8  ECA2  F046         	call	_UART1_is_rx_ready	;wreg free
  3532  003DAC  0900               	iorlw	0
  3533  003DAE  B4D8               	btfsc	status,2,c
  3534  003DB0  0012               	return	
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;../app/app_src/application.c: 1026:                 if(UART1_Read() == 'A')
  3538  003DB2  ECB3  F03F         	call	_UART1_Read	;wreg free
  3539  003DB6  0A41               	xorlw	65
  3540  003DB8  A4D8               	btfss	status,2,c
  3541  003DBA  0012               	return	
  3542                           
  3543                           ; BSR set to: 57
  3544                           ;../app/app_src/application.c: 1027:                 {;../app/app_src/application.c: 102
      +                          9:                     atStateVar = lookingForT;
  3545  003DBC  0E02               	movlw	2
  3546  003DBE  0100               	movlb	0	; () banked
  3547  003DC0  6FF3               	movwf	_atStateVar& (0+255),b
  3548  003DC2                     l17233:
  3549                           
  3550                           ;../app/app_src/application.c: 1030:                     set_timer0base(&ATTimeoutTimer,
      +                           1000);
  3551  003DC2  0EFD               	movlw	low _ATTimeoutTimer
  3552  003DC4  6E02               	movwf	set_timer0base@timer^0,c
  3553  003DC6  6A03               	clrf	(set_timer0base@timer+1)^0,c
  3554  003DC8  0E03               	movlw	3
  3555  003DCA  6E05               	movwf	(set_timer0base@tval+1)^0,c
  3556  003DCC  0EE8               	movlw	232
  3557  003DCE  6E04               	movwf	set_timer0base@tval^0,c
  3558  003DD0  EC1F  F045         	call	_set_timer0base	;wreg free
  3559  003DD4  0012               	return	
  3560  003DD6                     l17235:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;../app/app_src/application.c: 1035:             if(UART1_is_rx_ready()){
  3564  003DD6  ECA2  F046         	call	_UART1_is_rx_ready	;wreg free
  3565  003DDA  0900               	iorlw	0
  3566  003DDC  B4D8               	btfsc	status,2,c
  3567  003DDE  0012               	return	
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;../app/app_src/application.c: 1037:                 if(UART1_Read() == 'T')
  3571  003DE0  ECB3  F03F         	call	_UART1_Read	;wreg free
  3572  003DE4  0A54               	xorlw	84
  3573  003DE6  A4D8               	btfss	status,2,c
  3574  003DE8  D004               	goto	l17241
  3575                           
  3576                           ; BSR set to: 57
  3577                           ;../app/app_src/application.c: 1038:                 {;../app/app_src/application.c: 104
      +                          0:                     atStateVar = readingCommand;
  3578  003DEA  0E03               	movlw	3
  3579  003DEC  0100               	movlb	0	; () banked
  3580  003DEE  6FF3               	movwf	_atStateVar& (0+255),b
  3581                           
  3582                           ;../app/app_src/application.c: 1041:                 }
  3583  003DF0  0012               	return	
  3584  003DF2                     l17241:
  3585                           
  3586                           ; BSR set to: 57
  3587                           ;../app/app_src/application.c: 1043:                 {;../app/app_src/application.c: 104
      +                          4:                     atStateVar = lookingForA;
  3588  003DF2  0E01               	movlw	1
  3589  003DF4  0100               	movlb	0	; () banked
  3590  003DF6  6FF3               	movwf	_atStateVar& (0+255),b
  3591  003DF8  0012               	return	
  3592  003DFA                     l17243:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;../app/app_src/application.c: 1050:             if(UART1_is_rx_ready())
  3596  003DFA  ECA2  F046         	call	_UART1_is_rx_ready	;wreg free
  3597  003DFE  0900               	iorlw	0
  3598  003E00  B4D8               	btfsc	status,2,c
  3599  003E02  0012               	return	
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;../app/app_src/application.c: 1051:             {;../app/app_src/application.c: 1052:  
      +                                         uint8_t data = UART1_Read();
  3603  003E04  ECB3  F03F         	call	_UART1_Read	;wreg free
  3604  003E08  0100               	movlb	0	; () banked
  3605  003E0A  6FB1               	movwf	processATCommand@data& (0+255),b
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;../app/app_src/application.c: 1053:                 if(data == '\r')
  3609  003E0C  0E0D               	movlw	13
  3610  003E0E  19B1               	xorwf	processATCommand@data& (0+255),w,b
  3611  003E10  A4D8               	btfss	status,2,c
  3612  003E12  D00C               	goto	l17255
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;../app/app_src/application.c: 1054:                 {;../app/app_src/application.c: 105
      +                          6:                     atStateVar = endingCommand;
  3616  003E14  0E04               	movlw	4
  3617  003E16  6FF3               	movwf	_atStateVar& (0+255),b
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;../app/app_src/application.c: 1058:                     atCommand[commandByteCounter++]
      +                           = '\0';
  3621  003E18  0E24               	movlw	low _atCommand
  3622  003E1A  25F4               	addwf	_commandByteCounter& (0+255),w,b
  3623  003E1C  6ED9               	movwf	fsr2l,c
  3624  003E1E  6ADA               	clrf	fsr2h,c
  3625  003E20  0E02               	movlw	high _atCommand
  3626  003E22  22DA               	addwfc	fsr2h,f,c
  3627  003E24  0E00               	movlw	0
  3628  003E26  6EDF               	movwf	indf2,c
  3629                           
  3630                           ; BSR set to: 0
  3631  003E28  2BF4               	incf	_commandByteCounter& (0+255),f,b
  3632                           
  3633                           ;../app/app_src/application.c: 1059:                 }
  3634  003E2A  0012               	return	
  3635  003E2C                     l17255:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;../app/app_src/application.c: 1061:                 {;../app/app_src/application.c: 106
      +                          2:                     atCommand[commandByteCounter++] = data;
  3639  003E2C  0E24               	movlw	low _atCommand
  3640  003E2E  25F4               	addwf	_commandByteCounter& (0+255),w,b
  3641  003E30  6ED9               	movwf	fsr2l,c
  3642  003E32  6ADA               	clrf	fsr2h,c
  3643  003E34  0E02               	movlw	high _atCommand
  3644  003E36  22DA               	addwfc	fsr2h,f,c
  3645  003E38  0060  F2C7  FFDF   	movff	processATCommand@data,indf2
  3646                           
  3647                           ; BSR set to: 0
  3648  003E3E  2BF4               	incf	_commandByteCounter& (0+255),f,b
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;../app/app_src/application.c: 1063:                     if(commandByteCounter >= 80)
  3652  003E40  0E4F               	movlw	79
  3653  003E42  65F4               	cpfsgt	_commandByteCounter& (0+255),b
  3654  003E44  0012               	return	
  3655  003E46  D7AC               	goto	l17225
  3656  003E48                     l17263:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;../app/app_src/application.c: 1073:             if(UART1_is_rx_ready())
  3660  003E48  ECA2  F046         	call	_UART1_is_rx_ready	;wreg free
  3661  003E4C  0900               	iorlw	0
  3662  003E4E  B4D8               	btfsc	status,2,c
  3663  003E50  0012               	return	
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;../app/app_src/application.c: 1074:             {;../app/app_src/application.c: 1075:  
      +                                         uint8_t data = UART1_Read();
  3667  003E52  ECB3  F03F         	call	_UART1_Read	;wreg free
  3668  003E56  0100               	movlb	0	; () banked
  3669  003E58  6FB0               	movwf	processATCommand@data_851& (0+255),b
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;../app/app_src/application.c: 1076:                 if(data == '\n')
  3673  003E5A  0E0A               	movlw	10
  3674  003E5C  19B0               	xorwf	processATCommand@data_851& (0+255),w,b
  3675  003E5E  A4D8               	btfss	status,2,c
  3676  003E60  D79F               	goto	l17225
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;../app/app_src/application.c: 1077:                 {;../app/app_src/application.c: 107
      +                          9:                     atStateVar = processCommand;
  3680  003E62  0E05               	movlw	5
  3681  003E64  6FF3               	movwf	_atStateVar& (0+255),b
  3682                           
  3683                           ;../app/app_src/application.c: 1080:                 }
  3684  003E66  0012               	return	
  3685  003E68                     l17273:
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;../app/app_src/application.c: 1090:             executeATCommand(atCommand);
  3689  003E68  0E24               	movlw	low _atCommand
  3690  003E6A  6FAA               	movwf	executeATCommand@cmd& (0+255),b
  3691  003E6C  0E02               	movlw	high _atCommand
  3692  003E6E  6FAB               	movwf	(executeATCommand@cmd+1)& (0+255),b
  3693  003E70  EC59  F000         	call	_executeATCommand	;wreg free
  3694                           
  3695                           ;../app/app_src/application.c: 1091:             queue_serial_led_event();
  3696  003E74  EC03  F03E         	call	_queue_serial_led_event	;wreg free
  3697  003E78  D793               	goto	l17225
  3698  003E7A                     l17279:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;../app/app_src/application.c: 1095:             atStateVar = lookingForA;
  3702  003E7A  0E01               	movlw	1
  3703  003E7C  6FF3               	movwf	_atStateVar& (0+255),b
  3704                           
  3705                           ;../app/app_src/application.c: 1096:             commandByteCounter = 0;
  3706  003E7E  0E00               	movlw	0
  3707  003E80  6FF4               	movwf	_commandByteCounter& (0+255),b
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;../app/app_src/application.c: 1098:             memset(atCommand,0,sizeof(atCommand));
  3711  003E82  0E24               	movlw	low _atCommand
  3712  003E84  6E02               	movwf	memset@dest^0,c
  3713  003E86  0E02               	movlw	high _atCommand
  3714  003E88  6E03               	movwf	(memset@dest+1)^0,c
  3715  003E8A  0E00               	movlw	0
  3716  003E8C  6E05               	movwf	(memset@c+1)^0,c
  3717  003E8E  0E00               	movlw	0
  3718  003E90  6E04               	movwf	memset@c^0,c
  3719  003E92  0E00               	movlw	0
  3720  003E94  6E07               	movwf	(memset@n+1)^0,c
  3721  003E96  0E50               	movlw	80
  3722  003E98  6E06               	movwf	memset@n^0,c
  3723  003E9A  EC34  F022         	call	_memset	;wreg free
  3724  003E9E  D791               	goto	l17233
  3725  003EA0                     l17287:
  3726  003EA0  0100               	movlb	0	; () banked
  3727  003EA2  51F3               	movf	_atStateVar& (0+255),w,b
  3728  003EA4  6FAE               	movwf	??_processATCommand& (0+255),b
  3729  003EA6  6BAF               	clrf	(??_processATCommand+1)& (0+255),b
  3730                           
  3731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3732                           ; Switch size 1, requested type "simple"
  3733                           ; Number of cases is 1, Range of values is 0 to 0
  3734                           ; switch strategies available:
  3735                           ; Name         Instructions Cycles
  3736                           ; simple_byte            4     3 (average)
  3737                           ;	Chosen strategy is simple_byte
  3738  003EA8  51AF               	movf	(??_processATCommand+1)& (0+255),w,b
  3739  003EAA  0A00               	xorlw	0	; case 0
  3740  003EAC  A4D8               	btfss	status,2,c
  3741  003EAE  D778               	goto	l17225
  3742                           
  3743                           ; BSR set to: 0
  3744                           ; Switch size 1, requested type "simple"
  3745                           ; Number of cases is 7, Range of values is 0 to 6
  3746                           ; switch strategies available:
  3747                           ; Name         Instructions Cycles
  3748                           ; simple_byte           22    12 (average)
  3749                           ;	Chosen strategy is simple_byte
  3750  003EB0  51AE               	movf	??_processATCommand& (0+255),w,b
  3751  003EB2  0A00               	xorlw	0	; case 0
  3752  003EB4  B4D8               	btfsc	status,2,c
  3753  003EB6  D774               	goto	l17225
  3754  003EB8  0A01               	xorlw	1	; case 1
  3755  003EBA  B4D8               	btfsc	status,2,c
  3756  003EBC  D775               	goto	l17227
  3757  003EBE  0A03               	xorlw	3	; case 2
  3758  003EC0  B4D8               	btfsc	status,2,c
  3759  003EC2  D789               	goto	l17235
  3760  003EC4  0A01               	xorlw	1	; case 3
  3761  003EC6  B4D8               	btfsc	status,2,c
  3762  003EC8  D798               	goto	l17243
  3763  003ECA  0A07               	xorlw	7	; case 4
  3764  003ECC  B4D8               	btfsc	status,2,c
  3765  003ECE  D7BC               	goto	l17263
  3766  003ED0  0A01               	xorlw	1	; case 5
  3767  003ED2  B4D8               	btfsc	status,2,c
  3768  003ED4  D7C9               	goto	l17273
  3769  003ED6  0A03               	xorlw	3	; case 6
  3770  003ED8  B4D8               	btfsc	status,2,c
  3771  003EDA  D7CF               	goto	l17279
  3772  003EDC  D761               	goto	l17225
  3773  003EDE                     __end_of_processATCommand:
  3774                           	opt callstack 0
  3775                           
  3776 ;; *************** function _queue_serial_led_event *****************
  3777 ;; Defined at:
  3778 ;;		line 96 in file "../app/app_src/led.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  i               1   33[COMRAM] unsigned char 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;Total ram usage:        1 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:   10
  3799 ;; This function calls:
  3800 ;;		_queueLedEvent
  3801 ;; This function is called by:
  3802 ;;		_processATCommand
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text2
  3807  007C06                     __ptext2:
  3808                           	opt callstack 0
  3809  007C06                     _queue_serial_led_event:
  3810                           	opt callstack 19
  3811                           
  3812                           ;../app/app_src/led.c: 98:     queueLedEvent(0,400);
  3813                           
  3814                           ;incstack = 0
  3815  007C06  0E01               	movlw	1
  3816  007C08  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3817  007C0A  0E90               	movlw	144
  3818  007C0C  6E1C               	movwf	queueLedEvent@duration^0,c
  3819  007C0E  0E00               	movlw	0
  3820  007C10  ECD5  F041         	call	_queueLedEvent
  3821                           
  3822                           ;../app/app_src/led.c: 99:     for(uint8_t i = 0; i < 2; i++)
  3823  007C14  0E00               	movlw	0
  3824  007C16  6E22               	movwf	queue_serial_led_event@i^0,c
  3825  007C18                     l17087:
  3826                           
  3827                           ;../app/app_src/led.c: 100:     {;../app/app_src/led.c: 101:         queueLedEvent(1,100
      +                          );
  3828  007C18  0E00               	movlw	0
  3829  007C1A  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3830  007C1C  0E64               	movlw	100
  3831  007C1E  6E1C               	movwf	queueLedEvent@duration^0,c
  3832  007C20  0E01               	movlw	1
  3833  007C22  ECD5  F041         	call	_queueLedEvent
  3834                           
  3835                           ;../app/app_src/led.c: 102:         queueLedEvent(0,100);
  3836  007C26  0E00               	movlw	0
  3837  007C28  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3838  007C2A  0E64               	movlw	100
  3839  007C2C  6E1C               	movwf	queueLedEvent@duration^0,c
  3840  007C2E  0E00               	movlw	0
  3841  007C30  ECD5  F041         	call	_queueLedEvent
  3842                           
  3843                           ;../app/app_src/led.c: 103:     }
  3844  007C34  2A22               	incf	queue_serial_led_event@i^0,f,c
  3845  007C36  0E01               	movlw	1
  3846  007C38  6422               	cpfsgt	queue_serial_led_event@i^0,c
  3847  007C3A  D7EE               	goto	l17087
  3848                           
  3849                           ;../app/app_src/led.c: 104:     queueLedEvent(0,100);
  3850  007C3C  0E00               	movlw	0
  3851  007C3E  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3852  007C40  0E64               	movlw	100
  3853  007C42  6E1C               	movwf	queueLedEvent@duration^0,c
  3854  007C44  0E00               	movlw	0
  3855  007C46  ECD5  F041         	call	_queueLedEvent
  3856                           
  3857                           ;../app/app_src/led.c: 105:     queueLedEvent(1,100);
  3858  007C4A  0E00               	movlw	0
  3859  007C4C  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3860  007C4E  0E64               	movlw	100
  3861  007C50  6E1C               	movwf	queueLedEvent@duration^0,c
  3862  007C52  0E01               	movlw	1
  3863  007C54  ECD5  F041         	call	_queueLedEvent
  3864  007C58  0012               	return		;funcret
  3865  007C5A                     __end_of_queue_serial_led_event:
  3866                           	opt callstack 0
  3867                           
  3868 ;; *************** function _queueLedEvent *****************
  3869 ;; Defined at:
  3870 ;;		line 53 in file "../app/app_src/led.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  LEDState        1    wreg     unsigned char 
  3873 ;;  duration        2   27[COMRAM] unsigned short 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  LEDState        1   29[COMRAM] unsigned char 
  3876 ;;  temp            3   30[COMRAM] struct ledEvent
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      char 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;Total ram usage:        6 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    9
  3893 ;; This function calls:
  3894 ;;		_CircularBufferPushBack
  3895 ;;		_CircularBufferSpace
  3896 ;; This function is called by:
  3897 ;;		_queue_serial_led_event
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text3
  3902  0083AA                     __ptext3:
  3903                           	opt callstack 0
  3904  0083AA                     _queueLedEvent:
  3905                           	opt callstack 19
  3906                           
  3907                           ;incstack = 0
  3908                           ;queueLedEvent@LEDState stored from wreg
  3909  0083AA  6E1E               	movwf	queueLedEvent@LEDState^0,c
  3910                           
  3911                           ;../app/app_src/led.c: 53: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);../a
      +                          pp/app_src/led.c: 54: {;../app/app_src/led.c: 55:     if(0 != CircularBufferSpace(&ledta
      +                          sksbuf))
  3912  0083AC  0EBE               	movlw	low _ledtasksbuf
  3913  0083AE  6E0A               	movwf	CircularBufferSpace@ctx^0,c
  3914  0083B0  0E01               	movlw	high _ledtasksbuf
  3915  0083B2  6E0B               	movwf	(CircularBufferSpace@ctx+1)^0,c
  3916  0083B4  ECB9  F042         	call	_CircularBufferSpace	;wreg free
  3917  0083B8  500A               	movf	?_CircularBufferSpace^0,w,c
  3918  0083BA  100B               	iorwf	(?_CircularBufferSpace+1)^0,w,c
  3919  0083BC  B4D8               	btfsc	status,2,c
  3920  0083BE  0012               	return	
  3921                           
  3922                           ;../app/app_src/led.c: 56:     {;../app/app_src/led.c: 57:         struct ledEvent temp;
      +                          ;../app/app_src/led.c: 58:         temp.LEDCondition = LEDState;
  3923  0083C0  0060  F078  F01F   	movff	queueLedEvent@LEDState,queueLedEvent@temp
  3924                           
  3925                           ;../app/app_src/led.c: 59:         temp.eventDuration = duration;
  3926  0083C6  0060  F070  F020   	movff	queueLedEvent@duration,queueLedEvent@temp+1
  3927  0083CC  0060  F074  F021   	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
  3928                           
  3929                           ;../app/app_src/led.c: 60:         CircularBufferPushBack(&ledtasksbuf,&temp);
  3930  0083D2  0EBE               	movlw	low _ledtasksbuf
  3931  0083D4  6E13               	movwf	CircularBufferPushBack@ctx^0,c
  3932  0083D6  0E01               	movlw	high _ledtasksbuf
  3933  0083D8  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
  3934  0083DA  0E1F               	movlw	low queueLedEvent@temp
  3935  0083DC  6E15               	movwf	CircularBufferPushBack@val^0,c
  3936  0083DE  EC35  F02A         	call	_CircularBufferPushBack	;wreg free
  3937  0083E2  0012               	return		;funcret
  3938  0083E4                     __end_of_queueLedEvent:
  3939                           	opt callstack 0
  3940                           
  3941 ;; *************** function _CircularBufferSpace *****************
  3942 ;; Defined at:
  3943 ;;		line 126 in file "../app/app_src/circular buffer.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  ctx             2    9[COMRAM] PTR const struct .
  3946 ;;		 -> ledtasksbuf(10), 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  2    9[COMRAM] unsigned int 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;Total ram usage:        4 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    8
  3965 ;; This function calls:
  3966 ;;		_CircularBufferSize
  3967 ;; This function is called by:
  3968 ;;		_queueLedEvent
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text4
  3973  008572                     __ptext4:
  3974                           	opt callstack 0
  3975  008572                     _CircularBufferSpace:
  3976                           	opt callstack 19
  3977                           
  3978                           ;../app/app_src/circular buffer.c: 128:     return (ctx->max_size - CircularBufferSize(c
      +                          tx));
  3979                           
  3980                           ;incstack = 0
  3981  008572  0060  F028  F002   	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
  3982  008578  0060  F02C  F003   	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
  3983  00857E  ECF2  F03C         	call	_CircularBufferSize	;wreg free
  3984  008582  EE20 F008          	lfsr	2,8
  3985  008586  500A               	movf	CircularBufferSpace@ctx^0,w,c
  3986  008588  26D9               	addwf	fsr2l,f,c
  3987  00858A  500B               	movf	(CircularBufferSpace@ctx+1)^0,w,c
  3988  00858C  22DA               	addwfc	fsr2h,f,c
  3989  00858E  006F FF78  F00C    	movff	postinc2,??_CircularBufferSpace
  3990  008594  006F FF74  F00D    	movff	postdec2,??_CircularBufferSpace+1
  3991  00859A  5002               	movf	?_CircularBufferSize^0,w,c
  3992  00859C  5C0C               	subwf	??_CircularBufferSpace^0,w,c
  3993  00859E  6E0A               	movwf	?_CircularBufferSpace^0,c
  3994  0085A0  5003               	movf	(?_CircularBufferSize+1)^0,w,c
  3995  0085A2  580D               	subwfb	(??_CircularBufferSpace+1)^0,w,c
  3996  0085A4  6E0B               	movwf	(?_CircularBufferSpace+1)^0,c
  3997  0085A6  0012               	return		;funcret
  3998  0085A8                     __end_of_CircularBufferSpace:
  3999                           	opt callstack 0
  4000                           
  4001 ;; *************** function _CircularBufferSize *****************
  4002 ;; Defined at:
  4003 ;;		line 122 in file "../app/app_src/circular buffer.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  ctx             2    1[COMRAM] PTR const struct .
  4006 ;;		 -> ledtasksbuf(10), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  2    1[COMRAM] unsigned int 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;Total ram usage:        8 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    7
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_CircularBufferSpace
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text5
  4033  0079E4                     __ptext5:
  4034                           	opt callstack 0
  4035  0079E4                     _CircularBufferSize:
  4036                           	opt callstack 19
  4037                           
  4038                           ;../app/app_src/circular buffer.c: 123:     return ((ctx->write_pos - ctx->read_pos) & c
      +                          tx->max_size);
  4039                           
  4040                           ;incstack = 0
  4041  0079E4  EE20 F008          	lfsr	2,8
  4042  0079E8  5002               	movf	CircularBufferSize@ctx^0,w,c
  4043  0079EA  26D9               	addwf	fsr2l,f,c
  4044  0079EC  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4045  0079EE  22DA               	addwfc	fsr2h,f,c
  4046  0079F0  006F FF78  F004    	movff	postinc2,??_CircularBufferSize
  4047  0079F6  006F FF74  F005    	movff	postdec2,??_CircularBufferSize+1
  4048  0079FC  EE20 F004          	lfsr	2,4
  4049  007A00  5002               	movf	CircularBufferSize@ctx^0,w,c
  4050  007A02  26D9               	addwf	fsr2l,f,c
  4051  007A04  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4052  007A06  22DA               	addwfc	fsr2h,f,c
  4053  007A08  006F FF78  F006    	movff	postinc2,??_CircularBufferSize+2
  4054  007A0E  006F FF74  F007    	movff	postdec2,??_CircularBufferSize+3
  4055  007A14  EE20 F002          	lfsr	2,2
  4056  007A18  5002               	movf	CircularBufferSize@ctx^0,w,c
  4057  007A1A  26D9               	addwf	fsr2l,f,c
  4058  007A1C  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4059  007A1E  22DA               	addwfc	fsr2h,f,c
  4060  007A20  006F FF78  F008    	movff	postinc2,??_CircularBufferSize+4
  4061  007A26  006F FF74  F009    	movff	postdec2,??_CircularBufferSize+5
  4062  007A2C  5006               	movf	(??_CircularBufferSize+2)^0,w,c
  4063  007A2E  5E08               	subwf	(??_CircularBufferSize+4)^0,f,c
  4064  007A30  5007               	movf	(??_CircularBufferSize+3)^0,w,c
  4065  007A32  5A09               	subwfb	(??_CircularBufferSize+5)^0,f,c
  4066  007A34  5004               	movf	??_CircularBufferSize^0,w,c
  4067  007A36  1408               	andwf	(??_CircularBufferSize+4)^0,w,c
  4068  007A38  6E02               	movwf	?_CircularBufferSize^0,c
  4069  007A3A  5005               	movf	(??_CircularBufferSize+1)^0,w,c
  4070  007A3C  1409               	andwf	(??_CircularBufferSize+5)^0,w,c
  4071  007A3E  6E03               	movwf	(?_CircularBufferSize+1)^0,c
  4072  007A40  0012               	return		;funcret
  4073  007A42                     __end_of_CircularBufferSize:
  4074                           	opt callstack 0
  4075                           
  4076 ;; *************** function _CircularBufferPushBack *****************
  4077 ;; Defined at:
  4078 ;;		line 71 in file "../app/app_src/circular buffer.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  ctx             2   18[COMRAM] PTR struct .
  4081 ;;		 -> ledtasksbuf(10), 
  4082 ;;  val             1   20[COMRAM] PTR void 
  4083 ;;		 -> queueLedEvent@temp(3), 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  write_pos       2   25[COMRAM] unsigned int 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      char 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4095 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;Total ram usage:        9 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    8
  4102 ;; This function calls:
  4103 ;;		___wmul
  4104 ;;		_memcpy
  4105 ;; This function is called by:
  4106 ;;		_queueLedEvent
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text6
  4111  00546A                     __ptext6:
  4112                           	opt callstack 0
  4113  00546A                     _CircularBufferPushBack:
  4114                           	opt callstack 19
  4115                           
  4116                           ;../app/app_src/circular buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx
      +                          ->max_size;
  4117                           
  4118                           ;incstack = 0
  4119  00546A  EE20 F008          	lfsr	2,8
  4120  00546E  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4121  005470  26D9               	addwf	fsr2l,f,c
  4122  005472  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4123  005474  22DA               	addwfc	fsr2h,f,c
  4124  005476  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4125  00547C  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4126  005482  EE20 F002          	lfsr	2,2
  4127  005486  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4128  005488  26D9               	addwf	fsr2l,f,c
  4129  00548A  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4130  00548C  22DA               	addwfc	fsr2h,f,c
  4131  00548E  006F FF78  F018    	movff	postinc2,??_CircularBufferPushBack+2
  4132  005494  006F FF74  F019    	movff	postdec2,??_CircularBufferPushBack+3
  4133  00549A  0E01               	movlw	1
  4134  00549C  2618               	addwf	(??_CircularBufferPushBack+2)^0,f,c
  4135  00549E  0E00               	movlw	0
  4136  0054A0  2219               	addwfc	(??_CircularBufferPushBack+3)^0,f,c
  4137  0054A2  5016               	movf	??_CircularBufferPushBack^0,w,c
  4138  0054A4  1418               	andwf	(??_CircularBufferPushBack+2)^0,w,c
  4139  0054A6  6E1A               	movwf	CircularBufferPushBack@write_pos^0,c
  4140  0054A8  5017               	movf	(??_CircularBufferPushBack+1)^0,w,c
  4141  0054AA  1419               	andwf	(??_CircularBufferPushBack+3)^0,w,c
  4142  0054AC  6E1B               	movwf	(CircularBufferPushBack@write_pos+1)^0,c
  4143                           
  4144                           ;../app/app_src/circular buffer.c: 75:     if (write_pos == ctx->read_pos) {
  4145  0054AE  EE20 F004          	lfsr	2,4
  4146  0054B2  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4147  0054B4  26D9               	addwf	fsr2l,f,c
  4148  0054B6  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4149  0054B8  22DA               	addwfc	fsr2h,f,c
  4150  0054BA  501A               	movf	CircularBufferPushBack@write_pos^0,w,c
  4151  0054BC  18DE               	xorwf	postinc2,w,c
  4152  0054BE  E104               	bnz	l15987
  4153  0054C0  501B               	movf	(CircularBufferPushBack@write_pos+1)^0,w,c
  4154  0054C2  18DE               	xorwf	postinc2,w,c
  4155  0054C4  B4D8               	btfsc	status,2,c
  4156  0054C6  0012               	return	
  4157  0054C8                     l15987:
  4158                           
  4159                           ;../app/app_src/circular buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->elemen
      +                          t_size], val,
  4160  0054C8  EE20 F002          	lfsr	2,2
  4161  0054CC  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4162  0054CE  26D9               	addwf	fsr2l,f,c
  4163  0054D0  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4164  0054D2  22DA               	addwfc	fsr2h,f,c
  4165  0054D4  006F FF78  F002    	movff	postinc2,___wmul@multiplier
  4166  0054DA  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
  4167  0054E0  EE20 F006          	lfsr	2,6
  4168  0054E4  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4169  0054E6  26D9               	addwf	fsr2l,f,c
  4170  0054E8  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4171  0054EA  22DA               	addwfc	fsr2h,f,c
  4172  0054EC  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
  4173  0054F2  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
  4174  0054F8  ECA6  F043         	call	___wmul	;wreg free
  4175  0054FC  0060  F04F  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
  4176  005502  0060  F053  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
  4177  005508  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4178  00550E  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4179  005514  5002               	movf	?___wmul^0,w,c
  4180  005516  2416               	addwf	??_CircularBufferPushBack^0,w,c
  4181  005518  6E08               	movwf	memcpy@d1^0,c
  4182  00551A  5003               	movf	(?___wmul+1)^0,w,c
  4183  00551C  2017               	addwfc	(??_CircularBufferPushBack+1)^0,w,c
  4184  00551E  6E09               	movwf	(memcpy@d1+1)^0,c
  4185  005520  0060  F054  F00A   	movff	CircularBufferPushBack@val,memcpy@s1
  4186  005526  6A0B               	clrf	(memcpy@s1+1)^0,c
  4187  005528  EE20 F006          	lfsr	2,6
  4188  00552C  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4189  00552E  26D9               	addwf	fsr2l,f,c
  4190  005530  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4191  005532  22DA               	addwfc	fsr2h,f,c
  4192  005534  006F FF78  F00C    	movff	postinc2,memcpy@n
  4193  00553A  006F FF74  F00D    	movff	postdec2,memcpy@n+1
  4194  005540  EC50  F03A         	call	_memcpy	;wreg free
  4195                           
  4196                           ;../app/app_src/circular buffer.c: 82:     ctx->write_pos = write_pos;
  4197  005544  EE20 F002          	lfsr	2,2
  4198  005548  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4199  00554A  26D9               	addwf	fsr2l,f,c
  4200  00554C  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4201  00554E  22DA               	addwfc	fsr2h,f,c
  4202  005550  0060  F06B  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
  4203  005556  0060  F06F  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
  4204  00555C  0012               	return		;funcret
  4205  00555E                     __end_of_CircularBufferPushBack:
  4206                           	opt callstack 0
  4207                           
  4208 ;; *************** function _executeATCommand *****************
  4209 ;; Defined at:
  4210 ;;		line 829 in file "../app/app_src/application.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  cmd             2   74[BANK0 ] PTR unsigned char 
  4213 ;;		 -> atCommand(80), 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  retcode         1    0        unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      unsigned char 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 3F/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4225 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;Total ram usage:        5 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:   18
  4232 ;; This function calls:
  4233 ;;		_cmdAddr
  4234 ;;		_cmdBcast
  4235 ;;		_cmdBootLoad
  4236 ;;		_cmdGetCAD
  4237 ;;		_cmdGetCADRSSI
  4238 ;;		_cmdGetMode
  4239 ;;		_cmdGetRFCH
  4240 ;;		_cmdGetRxCnt
  4241 ;;		_cmdGetSF
  4242 ;;		_cmdGetTTL
  4243 ;;		_cmdGetTX
  4244 ;;		_cmdI
  4245 ;;		_cmdMac
  4246 ;;		_cmdNaddr
  4247 ;;		_cmdRecv
  4248 ;;		_cmdReset
  4249 ;;		_cmdRstCAD
  4250 ;;		_cmdSend
  4251 ;;		_cmdSendSink
  4252 ;;		_cmdSetAES
  4253 ;;		_cmdSetAddr
  4254 ;;		_cmdSetBaud
  4255 ;;		_cmdSetCADRSSI
  4256 ;;		_cmdSetNaddr
  4257 ;;		_cmdSetParity
  4258 ;;		_cmdSetRFCH
  4259 ;;		_cmdSetSF
  4260 ;;		_cmdSetSink
  4261 ;;		_cmdSetTTL
  4262 ;;		_cmdSetTX
  4263 ;;		_print_hop_table
  4264 ;;		_printf
  4265 ;;		_set_hop_table_ttl
  4266 ;;		_strstr
  4267 ;; This function is called by:
  4268 ;;		_processATCommand
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text7
  4273  0000B2                     __ptext7:
  4274                           	opt callstack 0
  4275  0000B2                     _executeATCommand:
  4276                           	opt callstack 11
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;../app/app_src/application.c: 832:     switch(*(cmd+1))
  4280                           
  4281                           ;incstack = 0
  4282  0000B2  D28D               	goto	l17073
  4283  0000B4                     l16933:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;../app/app_src/application.c: 835:          if(strstr(atCommand,"+SEND:")){
  4287  0000B4  0E24               	movlw	low _atCommand
  4288  0000B6  6E0D               	movwf	strstr@h^0,c
  4289  0000B8  0E02               	movlw	high _atCommand
  4290  0000BA  6E0E               	movwf	(strstr@h+1)^0,c
  4291  0000BC  0E61               	movlw	low STR_62
  4292  0000BE  6E0F               	movwf	strstr@n^0,c
  4293  0000C0  0EFF               	movlw	high STR_62
  4294  0000C2  6E10               	movwf	(strstr@n+1)^0,c
  4295  0000C4  EC41  F02E         	call	_strstr	;wreg free
  4296  0000C8  500D               	movf	?_strstr^0,w,c
  4297  0000CA  100E               	iorwf	(?_strstr+1)^0,w,c
  4298  0000CC  B4D8               	btfsc	status,2,c
  4299  0000CE  D009               	goto	l16937
  4300                           
  4301                           ;../app/app_src/application.c: 836:           cmdSend(cmd);
  4302  0000D0  0060  F2A8  F058   	movff	executeATCommand@cmd,cmdSend@cmd
  4303  0000D6  0060  F2AC  F059   	movff	executeATCommand@cmd+1,cmdSend@cmd+1
  4304  0000DC  EC13  F014         	call	_cmdSend	;wreg free
  4305                           
  4306                           ;../app/app_src/application.c: 837:          }
  4307  0000E0  0012               	return	
  4308  0000E2                     l16937:
  4309  0000E2  0E24               	movlw	low _atCommand
  4310  0000E4  6E0D               	movwf	strstr@h^0,c
  4311  0000E6  0E02               	movlw	high _atCommand
  4312  0000E8  6E0E               	movwf	(strstr@h+1)^0,c
  4313  0000EA  0E30               	movlw	low STR_64
  4314  0000EC  6E0F               	movwf	strstr@n^0,c
  4315  0000EE  0EFF               	movlw	high STR_64
  4316  0000F0  6E10               	movwf	(strstr@n+1)^0,c
  4317  0000F2  EC41  F02E         	call	_strstr	;wreg free
  4318  0000F6  500D               	movf	?_strstr^0,w,c
  4319  0000F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4320  0000FA  B4D8               	btfsc	status,2,c
  4321  0000FC  D003               	goto	l16941
  4322                           
  4323                           ;../app/app_src/application.c: 839:           cmdSetSink();
  4324  0000FE  EC8A  F046         	call	_cmdSetSink	;wreg free
  4325                           
  4326                           ;../app/app_src/application.c: 840:          }
  4327  000102  0012               	return	
  4328  000104                     l16941:
  4329  000104  0E24               	movlw	low _atCommand
  4330  000106  6E0D               	movwf	strstr@h^0,c
  4331  000108  0E02               	movlw	high _atCommand
  4332  00010A  6E0E               	movwf	(strstr@h+1)^0,c
  4333  00010C  0EA7               	movlw	low STR_66
  4334  00010E  6E0F               	movwf	strstr@n^0,c
  4335  000110  0EFF               	movlw	high STR_66
  4336  000112  6E10               	movwf	(strstr@n+1)^0,c
  4337  000114  EC41  F02E         	call	_strstr	;wreg free
  4338  000118  500D               	movf	?_strstr^0,w,c
  4339  00011A  100E               	iorwf	(?_strstr+1)^0,w,c
  4340  00011C  B4D8               	btfsc	status,2,c
  4341  00011E  D007               	goto	l16945
  4342                           
  4343                           ;../app/app_src/application.c: 842:           cmdSendSink(atCommand);
  4344  000120  0E24               	movlw	low _atCommand
  4345  000122  6E02               	movwf	cmdSendSink@cmd^0,c
  4346  000124  0E02               	movlw	high _atCommand
  4347  000126  6E03               	movwf	(cmdSendSink@cmd+1)^0,c
  4348  000128  EC2A  F047         	call	_cmdSendSink	;wreg free
  4349                           
  4350                           ;../app/app_src/application.c: 843:          }
  4351  00012C  0012               	return	
  4352  00012E                     l16945:
  4353  00012E  0E24               	movlw	low _atCommand
  4354  000130  6E0D               	movwf	strstr@h^0,c
  4355  000132  0E02               	movlw	high _atCommand
  4356  000134  6E0E               	movwf	(strstr@h+1)^0,c
  4357  000136  0EE6               	movlw	low STR_68
  4358  000138  6E0F               	movwf	strstr@n^0,c
  4359  00013A  0EFF               	movlw	high STR_68
  4360  00013C  6E10               	movwf	(strstr@n+1)^0,c
  4361  00013E  EC41  F02E         	call	_strstr	;wreg free
  4362  000142  500D               	movf	?_strstr^0,w,c
  4363  000144  100E               	iorwf	(?_strstr+1)^0,w,c
  4364  000146  B4D8               	btfsc	status,2,c
  4365  000148  D003               	goto	l16949
  4366                           
  4367                           ;../app/app_src/application.c: 845:           cmdGetSF();
  4368  00014A  EC1E  F046         	call	_cmdGetSF	;wreg free
  4369                           
  4370                           ;../app/app_src/application.c: 846:          }
  4371  00014E  0012               	return	
  4372  000150                     l16949:
  4373  000150  0E24               	movlw	low _atCommand
  4374  000152  6E0D               	movwf	strstr@h^0,c
  4375  000154  0E02               	movlw	high _atCommand
  4376  000156  6E0E               	movwf	(strstr@h+1)^0,c
  4377  000158  0EE1               	movlw	low STR_70
  4378  00015A  6E0F               	movwf	strstr@n^0,c
  4379  00015C  0EFF               	movlw	high STR_70
  4380  00015E  6E10               	movwf	(strstr@n+1)^0,c
  4381  000160  EC41  F02E         	call	_strstr	;wreg free
  4382  000164  500D               	movf	?_strstr^0,w,c
  4383  000166  100E               	iorwf	(?_strstr+1)^0,w,c
  4384  000168  B4D8               	btfsc	status,2,c
  4385  00016A  D007               	goto	l16953
  4386                           
  4387                           ;../app/app_src/application.c: 848:           cmdSetSF(atCommand);
  4388  00016C  0E24               	movlw	low _atCommand
  4389  00016E  6E58               	movwf	cmdSetSF@atCommand^0,c
  4390  000170  0E02               	movlw	high _atCommand
  4391  000172  6E59               	movwf	(cmdSetSF@atCommand+1)^0,c
  4392  000174  EC03  F034         	call	_cmdSetSF	;wreg free
  4393                           
  4394                           ;../app/app_src/application.c: 849:          }
  4395  000178  0012               	return	
  4396  00017A                     l16953:
  4397  00017A  0E24               	movlw	low _atCommand
  4398  00017C  6E0D               	movwf	strstr@h^0,c
  4399  00017E  0E02               	movlw	high _atCommand
  4400  000180  6E0E               	movwf	(strstr@h+1)^0,c
  4401  000182  0ED8               	movlw	low STR_72
  4402  000184  6E0F               	movwf	strstr@n^0,c
  4403  000186  0EFE               	movlw	high STR_72
  4404  000188  6E10               	movwf	(strstr@n+1)^0,c
  4405  00018A  EC41  F02E         	call	_strstr	;wreg free
  4406  00018E  500D               	movf	?_strstr^0,w,c
  4407  000190  100E               	iorwf	(?_strstr+1)^0,w,c
  4408  000192  B4D8               	btfsc	status,2,c
  4409  000194  D210               	goto	l17069
  4410                           
  4411                           ;../app/app_src/application.c: 851:                 print_hop_table(atCommand);
  4412  000196  0E24               	movlw	low _atCommand
  4413  000198  6E58               	movwf	print_hop_table@atCommand^0,c
  4414  00019A  0E02               	movlw	high _atCommand
  4415  00019C  6E59               	movwf	(print_hop_table@atCommand+1)^0,c
  4416  00019E  EC12  F02C         	call	_print_hop_table	;wreg free
  4417                           
  4418                           ;../app/app_src/application.c: 852:             }
  4419  0001A2  0012               	return	
  4420  0001A4                     l16957:
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;../app/app_src/application.c: 858:          if(strstr(atCommand,"+BCAST=")){
  4424  0001A4  0E24               	movlw	low _atCommand
  4425  0001A6  6E0D               	movwf	strstr@h^0,c
  4426  0001A8  0E02               	movlw	high _atCommand
  4427  0001AA  6E0E               	movwf	(strstr@h+1)^0,c
  4428  0001AC  0E51               	movlw	low STR_74
  4429  0001AE  6E0F               	movwf	strstr@n^0,c
  4430  0001B0  0EFF               	movlw	high STR_74
  4431  0001B2  6E10               	movwf	(strstr@n+1)^0,c
  4432  0001B4  EC41  F02E         	call	_strstr	;wreg free
  4433  0001B8  500D               	movf	?_strstr^0,w,c
  4434  0001BA  100E               	iorwf	(?_strstr+1)^0,w,c
  4435  0001BC  B4D8               	btfsc	status,2,c
  4436  0001BE  D009               	goto	l16961
  4437                           
  4438                           ;../app/app_src/application.c: 859:     cmdBcast(cmd);
  4439  0001C0  0060  F2A8  F058   	movff	executeATCommand@cmd,cmdBcast@cmd
  4440  0001C6  0060  F2AC  F059   	movff	executeATCommand@cmd+1,cmdBcast@cmd+1
  4441  0001CC  EC6F  F017         	call	_cmdBcast	;wreg free
  4442                           
  4443                           ;../app/app_src/application.c: 860:    }
  4444  0001D0  0012               	return	
  4445  0001D2                     l16961:
  4446  0001D2  0E24               	movlw	low _atCommand
  4447  0001D4  6E0D               	movwf	strstr@h^0,c
  4448  0001D6  0E02               	movlw	high _atCommand
  4449  0001D8  6E0E               	movwf	(strstr@h+1)^0,c
  4450  0001DA  0E68               	movlw	low STR_76
  4451  0001DC  6E0F               	movwf	strstr@n^0,c
  4452  0001DE  0EFF               	movlw	high STR_76
  4453  0001E0  6E10               	movwf	(strstr@n+1)^0,c
  4454  0001E2  EC41  F02E         	call	_strstr	;wreg free
  4455  0001E6  500D               	movf	?_strstr^0,w,c
  4456  0001E8  100E               	iorwf	(?_strstr+1)^0,w,c
  4457  0001EA  B4D8               	btfsc	status,2,c
  4458  0001EC  D007               	goto	l16965
  4459                           
  4460                           ;../app/app_src/application.c: 862:                 cmdSetBaud(atCommand);
  4461  0001EE  0E24               	movlw	low _atCommand
  4462  0001F0  6E3A               	movwf	cmdSetBaud@atCommand^0,c
  4463  0001F2  0E02               	movlw	high _atCommand
  4464  0001F4  6E3B               	movwf	(cmdSetBaud@atCommand+1)^0,c
  4465  0001F6  ECC0  F03A         	call	_cmdSetBaud	;wreg free
  4466                           
  4467                           ;../app/app_src/application.c: 863:             }
  4468  0001FA  0012               	return	
  4469  0001FC                     l16965:
  4470  0001FC  0E24               	movlw	low _atCommand
  4471  0001FE  6E0D               	movwf	strstr@h^0,c
  4472  000200  0E02               	movlw	high _atCommand
  4473  000202  6E0E               	movwf	(strstr@h+1)^0,c
  4474  000204  0E0B               	movlw	low STR_78
  4475  000206  6E0F               	movwf	strstr@n^0,c
  4476  000208  0EFF               	movlw	high STR_78
  4477  00020A  6E10               	movwf	(strstr@n+1)^0,c
  4478  00020C  EC41  F02E         	call	_strstr	;wreg free
  4479  000210  500D               	movf	?_strstr^0,w,c
  4480  000212  100E               	iorwf	(?_strstr+1)^0,w,c
  4481  000214  B4D8               	btfsc	status,2,c
  4482  000216  D1CF               	goto	l17069
  4483                           
  4484                           ;../app/app_src/application.c: 865:                 cmdBootLoad();
  4485  000218  ECF2  F041         	call	_cmdBootLoad	;wreg free
  4486                           
  4487                           ;../app/app_src/application.c: 866:             }
  4488  00021C  0012               	return	
  4489  00021E                     l16969:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;../app/app_src/application.c: 872:          if(strstr(atCommand,"+ADDR?")){
  4493  00021E  0E24               	movlw	low _atCommand
  4494  000220  6E0D               	movwf	strstr@h^0,c
  4495  000222  0E02               	movlw	high _atCommand
  4496  000224  6E0E               	movwf	(strstr@h+1)^0,c
  4497  000226  0E92               	movlw	low STR_80
  4498  000228  6E0F               	movwf	strstr@n^0,c
  4499  00022A  0EFF               	movlw	high STR_80
  4500  00022C  6E10               	movwf	(strstr@n+1)^0,c
  4501  00022E  EC41  F02E         	call	_strstr	;wreg free
  4502  000232  500D               	movf	?_strstr^0,w,c
  4503  000234  100E               	iorwf	(?_strstr+1)^0,w,c
  4504  000236  B4D8               	btfsc	status,2,c
  4505  000238  D003               	goto	l16973
  4506                           
  4507                           ;../app/app_src/application.c: 873:           cmdAddr();
  4508  00023A  EC0F  F045         	call	_cmdAddr	;wreg free
  4509                           
  4510                           ;../app/app_src/application.c: 874:          }
  4511  00023E  0012               	return	
  4512  000240                     l16973:
  4513  000240  0E24               	movlw	low _atCommand
  4514  000242  6E0D               	movwf	strstr@h^0,c
  4515  000244  0E02               	movlw	high _atCommand
  4516  000246  6E0E               	movwf	(strstr@h+1)^0,c
  4517  000248  0E76               	movlw	low STR_82
  4518  00024A  6E0F               	movwf	strstr@n^0,c
  4519  00024C  0EFF               	movlw	high STR_82
  4520  00024E  6E10               	movwf	(strstr@n+1)^0,c
  4521  000250  EC41  F02E         	call	_strstr	;wreg free
  4522  000254  500D               	movf	?_strstr^0,w,c
  4523  000256  100E               	iorwf	(?_strstr+1)^0,w,c
  4524  000258  B4D8               	btfsc	status,2,c
  4525  00025A  D007               	goto	l16977
  4526                           
  4527                           ;../app/app_src/application.c: 876:     cmdSetAddr(atCommand);
  4528  00025C  0E24               	movlw	low _atCommand
  4529  00025E  6E58               	movwf	cmdSetAddr@cmd^0,c
  4530  000260  0E02               	movlw	high _atCommand
  4531  000262  6E59               	movwf	(cmdSetAddr@cmd+1)^0,c
  4532  000264  ECE0  F036         	call	_cmdSetAddr	;wreg free
  4533                           
  4534                           ;../app/app_src/application.c: 877:    }
  4535  000268  0012               	return	
  4536  00026A                     l16977:
  4537  00026A  0E24               	movlw	low _atCommand
  4538  00026C  6E0D               	movwf	strstr@h^0,c
  4539  00026E  0E02               	movlw	high _atCommand
  4540  000270  6E0E               	movwf	(strstr@h+1)^0,c
  4541  000272  0E15               	movlw	low STR_84
  4542  000274  6E0F               	movwf	strstr@n^0,c
  4543  000276  0EFF               	movlw	high STR_84
  4544  000278  6E10               	movwf	(strstr@n+1)^0,c
  4545  00027A  EC41  F02E         	call	_strstr	;wreg free
  4546  00027E  500D               	movf	?_strstr^0,w,c
  4547  000280  100E               	iorwf	(?_strstr+1)^0,w,c
  4548  000282  B4D8               	btfsc	status,2,c
  4549  000284  D198               	goto	l17069
  4550                           
  4551                           ;../app/app_src/application.c: 879:           cmdSetAES(atCommand);
  4552  000286  0E24               	movlw	low _atCommand
  4553  000288  6E58               	movwf	cmdSetAES@cmd^0,c
  4554  00028A  0E02               	movlw	high _atCommand
  4555  00028C  6E59               	movwf	(cmdSetAES@cmd+1)^0,c
  4556  00028E  EC73  F018         	call	_cmdSetAES	;wreg free
  4557                           
  4558                           ;../app/app_src/application.c: 880:          }
  4559  000292  0012               	return	
  4560  000294                     l16981:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;../app/app_src/application.c: 886:          if(strstr(atCommand,"+CADCOUNTER?")){
  4564  000294  0E24               	movlw	low _atCommand
  4565  000296  6E0D               	movwf	strstr@h^0,c
  4566  000298  0E02               	movlw	high _atCommand
  4567  00029A  6E0E               	movwf	(strstr@h+1)^0,c
  4568  00029C  0EB3               	movlw	low STR_86
  4569  00029E  6E0F               	movwf	strstr@n^0,c
  4570  0002A0  0EFE               	movlw	high STR_86
  4571  0002A2  6E10               	movwf	(strstr@n+1)^0,c
  4572  0002A4  EC41  F02E         	call	_strstr	;wreg free
  4573  0002A8  500D               	movf	?_strstr^0,w,c
  4574  0002AA  100E               	iorwf	(?_strstr+1)^0,w,c
  4575  0002AC  B4D8               	btfsc	status,2,c
  4576  0002AE  D003               	goto	l16985
  4577                           
  4578                           ;../app/app_src/application.c: 887:           cmdGetCAD();
  4579  0002B0  EC2A  F046         	call	_cmdGetCAD	;wreg free
  4580                           
  4581                           ;../app/app_src/application.c: 888:          }
  4582  0002B4  0012               	return	
  4583  0002B6                     l16985:
  4584  0002B6  0E24               	movlw	low _atCommand
  4585  0002B8  6E0D               	movwf	strstr@h^0,c
  4586  0002BA  0E02               	movlw	high _atCommand
  4587  0002BC  6E0E               	movwf	(strstr@h+1)^0,c
  4588  0002BE  0E62               	movlw	low STR_88
  4589  0002C0  6E0F               	movwf	strstr@n^0,c
  4590  0002C2  0EFE               	movlw	high STR_88
  4591  0002C4  6E10               	movwf	(strstr@n+1)^0,c
  4592  0002C6  EC41  F02E         	call	_strstr	;wreg free
  4593  0002CA  500D               	movf	?_strstr^0,w,c
  4594  0002CC  100E               	iorwf	(?_strstr+1)^0,w,c
  4595  0002CE  B4D8               	btfsc	status,2,c
  4596  0002D0  D003               	goto	l16989
  4597                           
  4598                           ;../app/app_src/application.c: 890:           cmdRstCAD();
  4599  0002D2  EC5A  F046         	call	_cmdRstCAD	;wreg free
  4600                           
  4601                           ;../app/app_src/application.c: 891:          }
  4602  0002D6  0012               	return	
  4603  0002D8                     l16989:
  4604  0002D8  0E24               	movlw	low _atCommand
  4605  0002DA  6E0D               	movwf	strstr@h^0,c
  4606  0002DC  0E02               	movlw	high _atCommand
  4607  0002DE  6E0E               	movwf	(strstr@h+1)^0,c
  4608  0002E0  0EF7               	movlw	low STR_90
  4609  0002E2  6E0F               	movwf	strstr@n^0,c
  4610  0002E4  0EFE               	movlw	high STR_90
  4611  0002E6  6E10               	movwf	(strstr@n+1)^0,c
  4612  0002E8  EC41  F02E         	call	_strstr	;wreg free
  4613  0002EC  500D               	movf	?_strstr^0,w,c
  4614  0002EE  100E               	iorwf	(?_strstr+1)^0,w,c
  4615  0002F0  B4D8               	btfsc	status,2,c
  4616  0002F2  D003               	goto	l16993
  4617                           
  4618                           ;../app/app_src/application.c: 893:           cmdGetCADRSSI();
  4619  0002F4  ECB8  F045         	call	_cmdGetCADRSSI	;wreg free
  4620                           
  4621                           ;../app/app_src/application.c: 894:          }
  4622  0002F8  0012               	return	
  4623  0002FA                     l16993:
  4624  0002FA  0E24               	movlw	low _atCommand
  4625  0002FC  6E0D               	movwf	strstr@h^0,c
  4626  0002FE  0E02               	movlw	high _atCommand
  4627  000300  6E0E               	movwf	(strstr@h+1)^0,c
  4628  000302  0EE3               	movlw	low STR_92
  4629  000304  6E0F               	movwf	strstr@n^0,c
  4630  000306  0EFE               	movlw	high STR_92
  4631  000308  6E10               	movwf	(strstr@n+1)^0,c
  4632  00030A  EC41  F02E         	call	_strstr	;wreg free
  4633  00030E  500D               	movf	?_strstr^0,w,c
  4634  000310  100E               	iorwf	(?_strstr+1)^0,w,c
  4635  000312  B4D8               	btfsc	status,2,c
  4636  000314  D150               	goto	l17069
  4637                           
  4638                           ;../app/app_src/application.c: 896:           cmdSetCADRSSI(atCommand);
  4639  000316  0E24               	movlw	low _atCommand
  4640  000318  6E58               	movwf	cmdSetCADRSSI@atCommand^0,c
  4641  00031A  0E02               	movlw	high _atCommand
  4642  00031C  6E59               	movwf	(cmdSetCADRSSI@atCommand+1)^0,c
  4643  00031E  EC5B  F034         	call	_cmdSetCADRSSI	;wreg free
  4644                           
  4645                           ;../app/app_src/application.c: 897:          }
  4646  000322  0012               	return	
  4647  000324                     l16997:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;../app/app_src/application.c: 903:             if(strstr(atCommand,"+HOPS?")){
  4651  000324  0E24               	movlw	low _atCommand
  4652  000326  6E0D               	movwf	strstr@h^0,c
  4653  000328  0E02               	movlw	high _atCommand
  4654  00032A  6E0E               	movwf	(strstr@h+1)^0,c
  4655  00032C  0E99               	movlw	low STR_94
  4656  00032E  6E0F               	movwf	strstr@n^0,c
  4657  000330  0EFF               	movlw	high STR_94
  4658  000332  6E10               	movwf	(strstr@n+1)^0,c
  4659  000334  EC41  F02E         	call	_strstr	;wreg free
  4660  000338  500D               	movf	?_strstr^0,w,c
  4661  00033A  100E               	iorwf	(?_strstr+1)^0,w,c
  4662  00033C  B4D8               	btfsc	status,2,c
  4663  00033E  D003               	goto	l17001
  4664  000340                     u17420:
  4665                           
  4666                           ;../app/app_src/application.c: 904:                 cmdGetTTL();
  4667  000340  EC2C  F047         	call	_cmdGetTTL	;wreg free
  4668                           
  4669                           ;../app/app_src/application.c: 905:             }
  4670  000344  0012               	return	
  4671  000346                     l17001:
  4672  000346  0E24               	movlw	low _atCommand
  4673  000348  6E0D               	movwf	strstr@h^0,c
  4674  00034A  0E02               	movlw	high _atCommand
  4675  00034C  6E0E               	movwf	(strstr@h+1)^0,c
  4676  00034E  0E7D               	movlw	low STR_96
  4677  000350  6E0F               	movwf	strstr@n^0,c
  4678  000352  0EFF               	movlw	high STR_96
  4679  000354  6E10               	movwf	(strstr@n+1)^0,c
  4680  000356  EC41  F02E         	call	_strstr	;wreg free
  4681  00035A  500D               	movf	?_strstr^0,w,c
  4682  00035C  100E               	iorwf	(?_strstr+1)^0,w,c
  4683  00035E  B4D8               	btfsc	status,2,c
  4684  000360  D007               	goto	l17005
  4685  000362                     u17430:
  4686                           
  4687                           ;../app/app_src/application.c: 907:                 cmdSetTTL(atCommand);
  4688  000362  0E24               	movlw	low _atCommand
  4689  000364  6E02               	movwf	cmdSetTTL@cmd^0,c
  4690  000366  0E02               	movlw	high _atCommand
  4691  000368  6E03               	movwf	(cmdSetTTL@cmd+1)^0,c
  4692  00036A  EC29  F047         	call	_cmdSetTTL	;wreg free
  4693                           
  4694                           ;../app/app_src/application.c: 908:             }
  4695  00036E  0012               	return	
  4696  000370                     l17005:
  4697  000370  0E24               	movlw	low _atCommand
  4698  000372  6E0D               	movwf	strstr@h^0,c
  4699  000374  0E02               	movlw	high _atCommand
  4700  000376  6E0E               	movwf	(strstr@h+1)^0,c
  4701  000378  0E1E               	movlw	low STR_98
  4702  00037A  6E0F               	movwf	strstr@n^0,c
  4703  00037C  0EFF               	movlw	high STR_98
  4704  00037E  6E10               	movwf	(strstr@n+1)^0,c
  4705  000380  EC41  F02E         	call	_strstr	;wreg free
  4706  000384  500D               	movf	?_strstr^0,w,c
  4707  000386  100E               	iorwf	(?_strstr+1)^0,w,c
  4708  000388  B4D8               	btfsc	status,2,c
  4709  00038A  D115               	goto	l17069
  4710                           
  4711                           ;../app/app_src/application.c: 910:                 set_hop_table_ttl(atCommand);
  4712  00038C  0E24               	movlw	low _atCommand
  4713  00038E  6E58               	movwf	set_hop_table_ttl@cmd^0,c
  4714  000390  0E02               	movlw	high _atCommand
  4715  000392  6E59               	movwf	(set_hop_table_ttl@cmd+1)^0,c
  4716  000394  EC82  F046         	call	_set_hop_table_ttl	;wreg free
  4717                           
  4718                           ;../app/app_src/application.c: 911:             }
  4719  000398  0012               	return	
  4720  00039A                     l17009:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;../app/app_src/application.c: 917:             if(strstr(cmd,"+I")){
  4724  00039A  0060  F2A8  F00D   	movff	executeATCommand@cmd,strstr@h
  4725  0003A0  0060  F2AC  F00E   	movff	executeATCommand@cmd+1,strstr@h+1
  4726  0003A6  0EFA               	movlw	low STR_100
  4727  0003A8  6E0F               	movwf	strstr@n^0,c
  4728  0003AA  0EFF               	movlw	high STR_100
  4729  0003AC  6E10               	movwf	(strstr@n+1)^0,c
  4730  0003AE  EC41  F02E         	call	_strstr	;wreg free
  4731  0003B2  500D               	movf	?_strstr^0,w,c
  4732  0003B4  100E               	iorwf	(?_strstr+1)^0,w,c
  4733  0003B6  B4D8               	btfsc	status,2,c
  4734  0003B8  D0FE               	goto	l17069
  4735                           
  4736                           ;../app/app_src/application.c: 918:                 cmdI();
  4737  0003BA  EC19  F047         	call	_cmdI	;wreg free
  4738                           
  4739                           ;../app/app_src/application.c: 919:             }
  4740  0003BE  0012               	return	
  4741  0003C0                     l17013:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;../app/app_src/application.c: 925:          if(strstr(atCommand,"+MAC?")){
  4745  0003C0  0E24               	movlw	low _atCommand
  4746  0003C2  6E0D               	movwf	strstr@h^0,c
  4747  0003C4  0E02               	movlw	high _atCommand
  4748  0003C6  6E0E               	movwf	(strstr@h+1)^0,c
  4749  0003C8  0EB4               	movlw	low STR_102
  4750  0003CA  6E0F               	movwf	strstr@n^0,c
  4751  0003CC  0EFF               	movlw	high STR_102
  4752  0003CE  6E10               	movwf	(strstr@n+1)^0,c
  4753  0003D0  EC41  F02E         	call	_strstr	;wreg free
  4754  0003D4  500D               	movf	?_strstr^0,w,c
  4755  0003D6  100E               	iorwf	(?_strstr+1)^0,w,c
  4756  0003D8  B4D8               	btfsc	status,2,c
  4757  0003DA  D003               	goto	l17017
  4758                           
  4759                           ;../app/app_src/application.c: 926:           cmdMac();
  4760  0003DC  ECD0  F03E         	call	_cmdMac	;wreg free
  4761                           
  4762                           ;../app/app_src/application.c: 927:          }
  4763  0003E0  0012               	return	
  4764  0003E2                     l17017:
  4765  0003E2  0E24               	movlw	low _atCommand
  4766  0003E4  6E0D               	movwf	strstr@h^0,c
  4767  0003E6  0E02               	movlw	high _atCommand
  4768  0003E8  6E0E               	movwf	(strstr@h+1)^0,c
  4769  0003EA  0E84               	movlw	low STR_104
  4770  0003EC  6E0F               	movwf	strstr@n^0,c
  4771  0003EE  0EFF               	movlw	high STR_104
  4772  0003F0  6E10               	movwf	(strstr@n+1)^0,c
  4773  0003F2  EC41  F02E         	call	_strstr	;wreg free
  4774  0003F6  500D               	movf	?_strstr^0,w,c
  4775  0003F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4776  0003FA  B4D8               	btfsc	status,2,c
  4777  0003FC  D0DC               	goto	l17069
  4778                           
  4779                           ;../app/app_src/application.c: 929:           cmdGetMode();
  4780  0003FE  EC9A  F046         	call	_cmdGetMode	;wreg free
  4781                           
  4782                           ;../app/app_src/application.c: 930:          }
  4783  000402  0012               	return	
  4784  000404                     l17021:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;../app/app_src/application.c: 936:          if(strstr(atCommand,"+NADDR?")){
  4788  000404  0E24               	movlw	low _atCommand
  4789  000406  6E0D               	movwf	strstr@h^0,c
  4790  000408  0E02               	movlw	high _atCommand
  4791  00040A  6E0E               	movwf	(strstr@h+1)^0,c
  4792  00040C  0E59               	movlw	low STR_106
  4793  00040E  6E0F               	movwf	strstr@n^0,c
  4794  000410  0EFF               	movlw	high STR_106
  4795  000412  6E10               	movwf	(strstr@n+1)^0,c
  4796  000414  EC41  F02E         	call	_strstr	;wreg free
  4797  000418  500D               	movf	?_strstr^0,w,c
  4798  00041A  100E               	iorwf	(?_strstr+1)^0,w,c
  4799  00041C  B4D8               	btfsc	status,2,c
  4800  00041E  D003               	goto	l17025
  4801                           
  4802                           ;../app/app_src/application.c: 937:     cmdNaddr();
  4803  000420  EC06  F046         	call	_cmdNaddr	;wreg free
  4804                           
  4805                           ;../app/app_src/application.c: 938:    }
  4806  000424  0012               	return	
  4807  000426                     l17025:
  4808  000426  0E24               	movlw	low _atCommand
  4809  000428  6E0D               	movwf	strstr@h^0,c
  4810  00042A  0E02               	movlw	high _atCommand
  4811  00042C  6E0E               	movwf	(strstr@h+1)^0,c
  4812  00042E  0E49               	movlw	low STR_108
  4813  000430  6E0F               	movwf	strstr@n^0,c
  4814  000432  0EFF               	movlw	high STR_108
  4815  000434  6E10               	movwf	(strstr@n+1)^0,c
  4816  000436  EC41  F02E         	call	_strstr	;wreg free
  4817  00043A  500D               	movf	?_strstr^0,w,c
  4818  00043C  100E               	iorwf	(?_strstr+1)^0,w,c
  4819  00043E  B4D8               	btfsc	status,2,c
  4820  000440  D0BA               	goto	l17069
  4821                           
  4822                           ;../app/app_src/application.c: 940:     cmdSetNaddr(atCommand);
  4823  000442  0E24               	movlw	low _atCommand
  4824  000444  6E58               	movwf	cmdSetNaddr@cmd^0,c
  4825  000446  0E02               	movlw	high _atCommand
  4826  000448  6E59               	movwf	(cmdSetNaddr@cmd+1)^0,c
  4827  00044A  EC11  F03A         	call	_cmdSetNaddr	;wreg free
  4828                           
  4829                           ;../app/app_src/application.c: 941:    }
  4830  00044E  0012               	return	
  4831  000450                     l17029:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;../app/app_src/application.c: 947:             if(strstr(atCommand,"+PARITY=")){
  4835  000450  0E24               	movlw	low _atCommand
  4836  000452  6E0D               	movwf	strstr@h^0,c
  4837  000454  0E02               	movlw	high _atCommand
  4838  000456  6E0E               	movwf	(strstr@h+1)^0,c
  4839  000458  0E27               	movlw	low STR_110
  4840  00045A  6E0F               	movwf	strstr@n^0,c
  4841  00045C  0EFF               	movlw	high STR_110
  4842  00045E  6E10               	movwf	(strstr@n+1)^0,c
  4843  000460  EC41  F02E         	call	_strstr	;wreg free
  4844  000464  500D               	movf	?_strstr^0,w,c
  4845  000466  100E               	iorwf	(?_strstr+1)^0,w,c
  4846  000468  B4D8               	btfsc	status,2,c
  4847  00046A  D0A5               	goto	l17069
  4848                           
  4849                           ;../app/app_src/application.c: 948:                 cmdSetParity(atCommand);
  4850  00046C  0E24               	movlw	low _atCommand
  4851  00046E  6E58               	movwf	cmdSetParity@atCommand^0,c
  4852  000470  0E02               	movlw	high _atCommand
  4853  000472  6E59               	movwf	(cmdSetParity@atCommand+1)^0,c
  4854  000474  EC71  F037         	call	_cmdSetParity	;wreg free
  4855  000478                     l17033:
  4856                           
  4857                           ;../app/app_src/application.c: 954:          if(strstr(atCommand,"+RECV")){
  4858  000478  0E24               	movlw	low _atCommand
  4859  00047A  6E0D               	movwf	strstr@h^0,c
  4860  00047C  0E02               	movlw	high _atCommand
  4861  00047E  6E0E               	movwf	(strstr@h+1)^0,c
  4862  000480  0ECC               	movlw	low STR_112
  4863  000482  6E0F               	movwf	strstr@n^0,c
  4864  000484  0EFF               	movlw	high STR_112
  4865  000486  6E10               	movwf	(strstr@n+1)^0,c
  4866  000488  EC41  F02E         	call	_strstr	;wreg free
  4867  00048C  500D               	movf	?_strstr^0,w,c
  4868  00048E  100E               	iorwf	(?_strstr+1)^0,w,c
  4869  000490  B4D8               	btfsc	status,2,c
  4870  000492  D003               	goto	l17037
  4871                           
  4872                           ;../app/app_src/application.c: 955:           cmdRecv();
  4873  000494  EC2B  F047         	call	_cmdRecv	;wreg free
  4874                           
  4875                           ;../app/app_src/application.c: 956:          }
  4876  000498  0012               	return	
  4877  00049A                     l17037:
  4878  00049A  0E24               	movlw	low _atCommand
  4879  00049C  6E0D               	movwf	strstr@h^0,c
  4880  00049E  0E02               	movlw	high _atCommand
  4881  0004A0  6E0E               	movwf	(strstr@h+1)^0,c
  4882  0004A2  0E8B               	movlw	low STR_114
  4883  0004A4  6E0F               	movwf	strstr@n^0,c
  4884  0004A6  0EFF               	movlw	high STR_114
  4885  0004A8  6E10               	movwf	(strstr@n+1)^0,c
  4886  0004AA  EC41  F02E         	call	_strstr	;wreg free
  4887  0004AE  500D               	movf	?_strstr^0,w,c
  4888  0004B0  100E               	iorwf	(?_strstr+1)^0,w,c
  4889  0004B2  B4D8               	btfsc	status,2,c
  4890  0004B4  D003               	goto	l17041
  4891                           
  4892                           ;../app/app_src/application.c: 958:           cmdGetRFCH();
  4893  0004B6  EC9D  F045         	call	_cmdGetRFCH	;wreg free
  4894                           
  4895                           ;../app/app_src/application.c: 959:          }
  4896  0004BA  0012               	return	
  4897  0004BC                     l17041:
  4898  0004BC  0E24               	movlw	low _atCommand
  4899  0004BE  6E0D               	movwf	strstr@h^0,c
  4900  0004C0  0E02               	movlw	high _atCommand
  4901  0004C2  6E0E               	movwf	(strstr@h+1)^0,c
  4902  0004C4  0E6F               	movlw	low STR_116
  4903  0004C6  6E0F               	movwf	strstr@n^0,c
  4904  0004C8  0EFF               	movlw	high STR_116
  4905  0004CA  6E10               	movwf	(strstr@n+1)^0,c
  4906  0004CC  EC41  F02E         	call	_strstr	;wreg free
  4907  0004D0  500D               	movf	?_strstr^0,w,c
  4908  0004D2  100E               	iorwf	(?_strstr+1)^0,w,c
  4909  0004D4  B4D8               	btfsc	status,2,c
  4910  0004D6  D007               	goto	l17045
  4911                           
  4912                           ;../app/app_src/application.c: 961:           cmdSetRFCH(atCommand);
  4913  0004D8  0E24               	movlw	low _atCommand
  4914  0004DA  6E58               	movwf	cmdSetRFCH@cmd^0,c
  4915  0004DC  0E02               	movlw	high _atCommand
  4916  0004DE  6E59               	movwf	(cmdSetRFCH@cmd+1)^0,c
  4917  0004E0  EC5C  F035         	call	_cmdSetRFCH	;wreg free
  4918                           
  4919                           ;../app/app_src/application.c: 962:          }
  4920  0004E4  0012               	return	
  4921  0004E6                     l17045:
  4922  0004E6  0E24               	movlw	low _atCommand
  4923  0004E8  6E0D               	movwf	strstr@h^0,c
  4924  0004EA  0E02               	movlw	high _atCommand
  4925  0004EC  6E0E               	movwf	(strstr@h+1)^0,c
  4926  0004EE  0EF0               	movlw	low STR_118
  4927  0004F0  6E0F               	movwf	strstr@n^0,c
  4928  0004F2  0EFF               	movlw	high STR_118
  4929  0004F4  6E10               	movwf	(strstr@n+1)^0,c
  4930  0004F6  EC41  F02E         	call	_strstr	;wreg free
  4931  0004FA  500D               	movf	?_strstr^0,w,c
  4932  0004FC  100E               	iorwf	(?_strstr+1)^0,w,c
  4933  0004FE  B4D8               	btfsc	status,2,c
  4934  000500  D003               	goto	l17049
  4935                           
  4936                           ;../app/app_src/application.c: 964:           cmdReset();
  4937  000502  EC27  F047         	call	_cmdReset	;wreg free
  4938                           
  4939                           ;../app/app_src/application.c: 965:          }
  4940  000506  0012               	return	
  4941  000508                     l17049:
  4942  000508  0E24               	movlw	low _atCommand
  4943  00050A  6E0D               	movwf	strstr@h^0,c
  4944  00050C  0E02               	movlw	high _atCommand
  4945  00050E  6E0E               	movwf	(strstr@h+1)^0,c
  4946  000510  0EA0               	movlw	low STR_120
  4947  000512  6E0F               	movwf	strstr@n^0,c
  4948  000514  0EFF               	movlw	high STR_120
  4949  000516  6E10               	movwf	(strstr@n+1)^0,c
  4950  000518  EC41  F02E         	call	_strstr	;wreg free
  4951  00051C  500D               	movf	?_strstr^0,w,c
  4952  00051E  100E               	iorwf	(?_strstr+1)^0,w,c
  4953  000520  B4D8               	btfsc	status,2,c
  4954  000522  D049               	goto	l17069
  4955                           
  4956                           ;../app/app_src/application.c: 967:           cmdGetRxCnt(atCommand);
  4957  000524  0E24               	movlw	low _atCommand
  4958  000526  6E02               	movwf	cmdGetRxCnt@atCommand^0,c
  4959  000528  0E02               	movlw	high _atCommand
  4960  00052A  6E03               	movwf	(cmdGetRxCnt@atCommand+1)^0,c
  4961  00052C  EC2D  F047         	call	_cmdGetRxCnt	;wreg free
  4962                           
  4963                           ;../app/app_src/application.c: 968:          }
  4964  000530  0012               	return	
  4965  000532                     l17053:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;../app/app_src/application.c: 974:          if(strstr(atCommand,"+TTL?")){
  4969  000532  0E24               	movlw	low _atCommand
  4970  000534  6E0D               	movwf	strstr@h^0,c
  4971  000536  0E02               	movlw	high _atCommand
  4972  000538  6E0E               	movwf	(strstr@h+1)^0,c
  4973  00053A  0EBA               	movlw	low STR_122
  4974  00053C  6E0F               	movwf	strstr@n^0,c
  4975  00053E  0EFF               	movlw	high STR_122
  4976  000540  6E10               	movwf	(strstr@n+1)^0,c
  4977  000542  EC41  F02E         	call	_strstr	;wreg free
  4978  000546  500D               	movf	?_strstr^0,w,c
  4979  000548  100E               	iorwf	(?_strstr+1)^0,w,c
  4980  00054A  A4D8               	btfss	status,2,c
  4981  00054C  D6F9               	goto	u17420
  4982  00054E  0E24               	movlw	low _atCommand
  4983  000550  6E0D               	movwf	strstr@h^0,c
  4984  000552  0E02               	movlw	high _atCommand
  4985  000554  6E0E               	movwf	(strstr@h+1)^0,c
  4986  000556  0EAE               	movlw	low STR_124
  4987  000558  6E0F               	movwf	strstr@n^0,c
  4988  00055A  0EFF               	movlw	high STR_124
  4989  00055C  6E10               	movwf	(strstr@n+1)^0,c
  4990  00055E  EC41  F02E         	call	_strstr	;wreg free
  4991  000562  500D               	movf	?_strstr^0,w,c
  4992  000564  100E               	iorwf	(?_strstr+1)^0,w,c
  4993  000566  A4D8               	btfss	status,2,c
  4994  000568  D6FC               	goto	u17430
  4995  00056A  0E24               	movlw	low _atCommand
  4996  00056C  6E0D               	movwf	strstr@h^0,c
  4997  00056E  0E02               	movlw	high _atCommand
  4998  000570  6E0E               	movwf	(strstr@h+1)^0,c
  4999  000572  0E01               	movlw	low STR_126
  5000  000574  6E0F               	movwf	strstr@n^0,c
  5001  000576  0EFF               	movlw	high STR_126
  5002  000578  6E10               	movwf	(strstr@n+1)^0,c
  5003  00057A  EC41  F02E         	call	_strstr	;wreg free
  5004  00057E  500D               	movf	?_strstr^0,w,c
  5005  000580  100E               	iorwf	(?_strstr+1)^0,w,c
  5006  000582  B4D8               	btfsc	status,2,c
  5007  000584  D003               	goto	l17065
  5008                           
  5009                           ;../app/app_src/application.c: 981:           cmdGetTX();
  5010  000586  EC12  F046         	call	_cmdGetTX	;wreg free
  5011                           
  5012                           ;../app/app_src/application.c: 982:          }
  5013  00058A  0012               	return	
  5014  00058C                     l17065:
  5015  00058C  0E24               	movlw	low _atCommand
  5016  00058E  6E0D               	movwf	strstr@h^0,c
  5017  000590  0E02               	movlw	high _atCommand
  5018  000592  6E0E               	movwf	(strstr@h+1)^0,c
  5019  000594  0EED               	movlw	low STR_128
  5020  000596  6E0F               	movwf	strstr@n^0,c
  5021  000598  0EFE               	movlw	high STR_128
  5022  00059A  6E10               	movwf	(strstr@n+1)^0,c
  5023  00059C  EC41  F02E         	call	_strstr	;wreg free
  5024  0005A0  500D               	movf	?_strstr^0,w,c
  5025  0005A2  100E               	iorwf	(?_strstr+1)^0,w,c
  5026  0005A4  B4D8               	btfsc	status,2,c
  5027  0005A6  D007               	goto	l17069
  5028                           
  5029                           ;../app/app_src/application.c: 984:           cmdSetTX(atCommand);
  5030  0005A8  0E24               	movlw	low _atCommand
  5031  0005AA  6E58               	movwf	cmdSetTX@cmd^0,c
  5032  0005AC  0E02               	movlw	high _atCommand
  5033  0005AE  6E59               	movwf	(cmdSetTX@cmd+1)^0,c
  5034  0005B0  EC83  F02C         	call	_cmdSetTX	;wreg free
  5035                           
  5036                           ;../app/app_src/application.c: 985:          }
  5037  0005B4  0012               	return	
  5038  0005B6                     l17069:
  5039                           
  5040                           ;../app/app_src/application.c: 994:             printf("NOT OK:%u\r\n", (uint16_t)UNDEFC
      +                          MD);
  5041  0005B6  0ECC               	movlw	low STR_4
  5042  0005B8  0100               	movlb	0	; () banked
  5043  0005BA  6F76               	movwf	printf@fmt& (0+255),b
  5044  0005BC  0EFE               	movlw	high STR_4
  5045  0005BE  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5046  0005C0  0E00               	movlw	0
  5047  0005C2  6F79               	movwf	(?_printf+3)& (0+255),b
  5048  0005C4  0E09               	movlw	9
  5049  0005C6  6F78               	movwf	(?_printf+2)& (0+255),b
  5050  0005C8  ECA8  F044         	call	_printf	;wreg free
  5051                           
  5052                           ;../app/app_src/application.c: 995:             break;
  5053  0005CC  0012               	return	
  5054  0005CE                     l17073:
  5055                           
  5056                           ; BSR set to: 0
  5057  0005CE  EE20 F001          	lfsr	2,1
  5058  0005D2  51AA               	movf	executeATCommand@cmd& (0+255),w,b
  5059  0005D4  26D9               	addwf	fsr2l,f,c
  5060  0005D6  51AB               	movf	(executeATCommand@cmd+1)& (0+255),w,b
  5061  0005D8  22DA               	addwfc	fsr2h,f,c
  5062  0005DA  50DF               	movf	indf2,w,c
  5063  0005DC  6FAC               	movwf	??_executeATCommand& (0+255),b
  5064  0005DE  6BAD               	clrf	(??_executeATCommand+1)& (0+255),b
  5065                           
  5066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5067                           ; Switch size 1, requested type "simple"
  5068                           ; Number of cases is 1, Range of values is 0 to 0
  5069                           ; switch strategies available:
  5070                           ; Name         Instructions Cycles
  5071                           ; simple_byte            4     3 (average)
  5072                           ;	Chosen strategy is simple_byte
  5073  0005E0  51AD               	movf	(??_executeATCommand+1)& (0+255),w,b
  5074  0005E2  0A00               	xorlw	0	; case 0
  5075  0005E4  A4D8               	btfss	status,2,c
  5076  0005E6  D7E7               	goto	l17069
  5077                           
  5078                           ; BSR set to: 0
  5079                           ; Switch size 1, requested type "simple"
  5080                           ; Number of cases is 11, Range of values is 65 to 84
  5081                           ; switch strategies available:
  5082                           ; Name         Instructions Cycles
  5083                           ; simple_byte           34    18 (average)
  5084                           ;	Chosen strategy is simple_byte
  5085  0005E8  51AC               	movf	??_executeATCommand& (0+255),w,b
  5086  0005EA  0A41               	xorlw	65	; case 65
  5087  0005EC  B4D8               	btfsc	status,2,c
  5088  0005EE  D617               	goto	l16969
  5089  0005F0  0A03               	xorlw	3	; case 66
  5090  0005F2  B4D8               	btfsc	status,2,c
  5091  0005F4  D5D7               	goto	l16957
  5092  0005F6  0A01               	xorlw	1	; case 67
  5093  0005F8  B4D8               	btfsc	status,2,c
  5094  0005FA  D64C               	goto	l16981
  5095  0005FC  0A0B               	xorlw	11	; case 72
  5096  0005FE  B4D8               	btfsc	status,2,c
  5097  000600  D691               	goto	l16997
  5098  000602  0A01               	xorlw	1	; case 73
  5099  000604  B4D8               	btfsc	status,2,c
  5100  000606  D6C9               	goto	l17009
  5101  000608  0A04               	xorlw	4	; case 77
  5102  00060A  B4D8               	btfsc	status,2,c
  5103  00060C  D6D9               	goto	l17013
  5104  00060E  0A03               	xorlw	3	; case 78
  5105  000610  B4D8               	btfsc	status,2,c
  5106  000612  D6F8               	goto	l17021
  5107  000614  0A1E               	xorlw	30	; case 80
  5108  000616  B4D8               	btfsc	status,2,c
  5109  000618  D71B               	goto	l17029
  5110  00061A  0A02               	xorlw	2	; case 82
  5111  00061C  B4D8               	btfsc	status,2,c
  5112  00061E  D72C               	goto	l17033
  5113  000620  0A01               	xorlw	1	; case 83
  5114  000622  B4D8               	btfsc	status,2,c
  5115  000624  D547               	goto	l16933
  5116  000626  0A07               	xorlw	7	; case 84
  5117  000628  B4D8               	btfsc	status,2,c
  5118  00062A  D783               	goto	l17053
  5119  00062C  D7C4               	goto	l17069
  5120  00062E                     __end_of_executeATCommand:
  5121                           	opt callstack 0
  5122                           
  5123 ;; *************** function _set_hop_table_ttl *****************
  5124 ;; Defined at:
  5125 ;;		line 807 in file "../app/app_src/application.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5128 ;;		 -> atCommand(80), 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 3F/1
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        2 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:   16
  5147 ;; This function calls:
  5148 ;;		_printf
  5149 ;; This function is called by:
  5150 ;;		_executeATCommand
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text8
  5155  008D04                     __ptext8:
  5156                           	opt callstack 0
  5157  008D04                     _set_hop_table_ttl:
  5158                           	opt callstack 12
  5159                           
  5160                           ;../app/app_src/application.c: 820:     printf("OK\r\n");
  5161                           
  5162                           ;incstack = 0
  5163  008D04  0ED7               	movlw	low STR_13
  5164  008D06  0100               	movlb	0	; () banked
  5165  008D08  6F76               	movwf	printf@fmt& (0+255),b
  5166  008D0A  0EFF               	movlw	high STR_13
  5167  008D0C  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5168  008D0E  ECA8  F044         	call	_printf	;wreg free
  5169                           
  5170                           ; BSR set to: 1
  5171  008D12  0012               	return		;funcret
  5172  008D14                     __end_of_set_hop_table_ttl:
  5173                           	opt callstack 0
  5174                           
  5175 ;; *************** function _print_hop_table *****************
  5176 ;; Defined at:
  5177 ;;		line 793 in file "../app/app_src/application.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5180 ;;		 -> atCommand(80), 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  i               1   91[COMRAM] unsigned char 
  5183 ;;  entry           2   89[COMRAM] PTR struct NWK_RouteTabl
  5184 ;;		 -> nwkRouteTable(70), 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 3F/1
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Totals:         5      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;Total ram usage:       15 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:   16
  5201 ;; This function calls:
  5202 ;;		_NWK_RouteTable
  5203 ;;		_printf
  5204 ;; This function is called by:
  5205 ;;		_executeATCommand
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text9
  5210  005824                     __ptext9:
  5211                           	opt callstack 0
  5212  005824                     _print_hop_table:
  5213                           	opt callstack 12
  5214                           
  5215                           ;../app/app_src/application.c: 794:     NWK_RouteTableEntry_t *entry = NWK_RouteTable();
  5216                           
  5217                           ; BSR set to: 1
  5218                           ;incstack = 0
  5219  005824  EC0B  F047         	call	_NWK_RouteTable	;wreg free
  5220  005828  0060  F008  F05A   	movff	?_NWK_RouteTable,print_hop_table@entry
  5221  00582E  0060  F00C  F05B   	movff	?_NWK_RouteTable+1,print_hop_table@entry+1
  5222                           
  5223                           ;../app/app_src/application.c: 795:     for(uint8_t i = 0; i < 10; i++){
  5224  005834  0E00               	movlw	0
  5225  005836  6E5C               	movwf	print_hop_table@i^0,c
  5226  005838                     l16661:
  5227                           
  5228                           ;../app/app_src/application.c: 796:         printf("DST:%04X NXT:%04X SCO:%u LQI:%u\r\n"
      +                          , (entry+i)->dstAddr,
  5229  005838  0EC1               	movlw	low STR_60
  5230  00583A  0100               	movlb	0	; () banked
  5231  00583C  6F76               	movwf	printf@fmt& (0+255),b
  5232  00583E  0EFD               	movlw	high STR_60
  5233  005840  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5234  005842  505C               	movf	print_hop_table@i^0,w,c
  5235  005844  0D07               	mullw	7
  5236  005846  0060  F168  F080   	movff	print_hop_table@entry,??_print_hop_table
  5237  00584C  0060  F16C  F081   	movff	print_hop_table@entry+1,??_print_hop_table+1
  5238  005852  50F3               	movf	243,w,c
  5239  005854  2780               	addwf	??_print_hop_table& (0+255),f,b
  5240  005856  50F4               	movf	244,w,c
  5241  005858  2381               	addwfc	(??_print_hop_table+1)& (0+255),f,b
  5242  00585A  0E01               	movlw	1
  5243  00585C  2580               	addwf	??_print_hop_table& (0+255),w,b
  5244  00585E  6ED9               	movwf	fsr2l,c
  5245  005860  0E00               	movlw	0
  5246  005862  2181               	addwfc	(??_print_hop_table+1)& (0+255),w,b
  5247  005864  6EDA               	movwf	fsr2h,c
  5248  005866  006F FF78  F078    	movff	postinc2,?_printf+2
  5249  00586C  006F FF74  F079    	movff	postdec2,?_printf+3
  5250  005872  505C               	movf	print_hop_table@i^0,w,c
  5251  005874  0D07               	mullw	7
  5252  005876  0060  F168  F082   	movff	print_hop_table@entry,??_print_hop_table+2
  5253  00587C  0060  F16C  F083   	movff	print_hop_table@entry+1,??_print_hop_table+3
  5254  005882  50F3               	movf	243,w,c
  5255  005884  2782               	addwf	(??_print_hop_table+2)& (0+255),f,b
  5256  005886  50F4               	movf	244,w,c
  5257  005888  2383               	addwfc	(??_print_hop_table+3)& (0+255),f,b
  5258  00588A  0E03               	movlw	3
  5259  00588C  2582               	addwf	(??_print_hop_table+2)& (0+255),w,b
  5260  00588E  6ED9               	movwf	fsr2l,c
  5261  005890  0E00               	movlw	0
  5262  005892  2183               	addwfc	(??_print_hop_table+3)& (0+255),w,b
  5263  005894  6EDA               	movwf	fsr2h,c
  5264  005896  006F FF78  F07A    	movff	postinc2,?_printf+4
  5265  00589C  006F FF74  F07B    	movff	postdec2,?_printf+5
  5266  0058A2  505C               	movf	print_hop_table@i^0,w,c
  5267  0058A4  0D07               	mullw	7
  5268  0058A6  006F FFCC  F084    	movff	prodl,??_print_hop_table+4
  5269  0058AC  006F FFD0  F085    	movff	prodh,??_print_hop_table+5
  5270  0058B2  5184               	movf	(??_print_hop_table+4)& (0+255),w,b
  5271  0058B4  245A               	addwf	print_hop_table@entry^0,w,c
  5272  0058B6  6ED9               	movwf	fsr2l,c
  5273  0058B8  5185               	movf	(??_print_hop_table+5)& (0+255),w,b
  5274  0058BA  205B               	addwfc	(print_hop_table@entry+1)^0,w,c
  5275  0058BC  6EDA               	movwf	fsr2h,c
  5276  0058BE  38DF               	swapf	indf2,w,c
  5277  0058C0  0B0F               	andlw	15
  5278  0058C2  6F86               	movwf	(??_print_hop_table+6)& (0+255),b
  5279  0058C4  5186               	movf	(??_print_hop_table+6)& (0+255),w,b
  5280  0058C6  6F7C               	movwf	(?_printf+6)& (0+255),b
  5281  0058C8  6B7D               	clrf	(?_printf+7)& (0+255),b
  5282  0058CA  505C               	movf	print_hop_table@i^0,w,c
  5283  0058CC  0D07               	mullw	7
  5284  0058CE  0060  F168  F087   	movff	print_hop_table@entry,??_print_hop_table+7
  5285  0058D4  0060  F16C  F088   	movff	print_hop_table@entry+1,??_print_hop_table+8
  5286  0058DA  50F3               	movf	243,w,c
  5287  0058DC  2787               	addwf	(??_print_hop_table+7)& (0+255),f,b
  5288  0058DE  50F4               	movf	244,w,c
  5289  0058E0  2388               	addwfc	(??_print_hop_table+8)& (0+255),f,b
  5290  0058E2  0E06               	movlw	6
  5291  0058E4  2587               	addwf	(??_print_hop_table+7)& (0+255),w,b
  5292  0058E6  6ED9               	movwf	fsr2l,c
  5293  0058E8  0E00               	movlw	0
  5294  0058EA  2188               	addwfc	(??_print_hop_table+8)& (0+255),w,b
  5295  0058EC  6EDA               	movwf	fsr2h,c
  5296  0058EE  50DF               	movf	indf2,w,c
  5297  0058F0  6F89               	movwf	(??_print_hop_table+9)& (0+255),b
  5298  0058F2  5189               	movf	(??_print_hop_table+9)& (0+255),w,b
  5299  0058F4  6F7E               	movwf	(?_printf+8)& (0+255),b
  5300  0058F6  6B7F               	clrf	(?_printf+9)& (0+255),b
  5301  0058F8  ECA8  F044         	call	_printf	;wreg free
  5302                           
  5303                           ; BSR set to: 1
  5304                           ;../app/app_src/application.c: 798:     }
  5305  0058FC  2A5C               	incf	print_hop_table@i^0,f,c
  5306                           
  5307                           ; BSR set to: 1
  5308  0058FE  0E09               	movlw	9
  5309  005900  645C               	cpfsgt	print_hop_table@i^0,c
  5310  005902  D79A               	goto	l16661
  5311  005904  0012               	return	
  5312  005906                     __end_of_print_hop_table:
  5313                           	opt callstack 0
  5314                           
  5315 ;; *************** function _NWK_RouteTable *****************
  5316 ;; Defined at:
  5317 ;;		line 157 in file "../nwk/nwk_src/nwkRoute.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;		None
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;Total ram usage:        2 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    7
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_print_hop_table
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text10
  5346  008E16                     __ptext10:
  5347                           	opt callstack 0
  5348  008E16                     _NWK_RouteTable:
  5349                           	opt callstack 20
  5350                           
  5351                           ;../nwk/nwk_src/nwkRoute.c: 159:   return nwkRouteTable;
  5352                           
  5353                           ; BSR set to: 1
  5354                           ;incstack = 0
  5355  008E16  0E74               	movlw	low _nwkRouteTable
  5356  008E18  6E02               	movwf	?_NWK_RouteTable^0,c
  5357  008E1A  0E02               	movlw	high _nwkRouteTable
  5358  008E1C  6E03               	movwf	(?_NWK_RouteTable+1)^0,c
  5359  008E1E  0012               	return		;funcret
  5360  008E20                     __end_of_NWK_RouteTable:
  5361                           	opt callstack 0
  5362                           
  5363 ;; *************** function _cmdSetTX *****************
  5364 ;; Defined at:
  5365 ;;		line 616 in file "../app/app_src/application.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5368 ;;		 -> atCommand(80), 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  CHstr           3   37[BANK0 ] unsigned char [3]
  5371 ;;  p1              2   34[BANK0 ] PTR unsigned char 
  5372 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5373 ;;  p2              2   32[BANK0 ] PTR unsigned char 
  5374 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5375 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5376 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5377 ;;  temp            1   36[BANK0 ] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 3F/1
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;Total ram usage:       10 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:   16
  5394 ;; This function calls:
  5395 ;;		_DATAEE_WriteByte_Platform
  5396 ;;		_initRadio
  5397 ;;		_memcpy
  5398 ;;		_memset
  5399 ;;		_printf
  5400 ;;		_strstr
  5401 ;;		_strtoul
  5402 ;; This function is called by:
  5403 ;;		_executeATCommand
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text11
  5408  005906                     __ptext11:
  5409                           	opt callstack 0
  5410  005906                     _cmdSetTX:
  5411                           	opt callstack 12
  5412                           
  5413                           ;../app/app_src/application.c: 617:  char *p1,*p2;;../app/app_src/application.c: 618:  c
      +                          har CHstr[3];;../app/app_src/application.c: 619:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 620:  p1 = strstr(atCommand,"=") + 1;
  5414                           
  5415                           ;incstack = 0
  5416  005906  0E24               	movlw	low _atCommand
  5417  005908  6E0D               	movwf	strstr@h^0,c
  5418  00590A  0E02               	movlw	high _atCommand
  5419  00590C  6E0E               	movwf	(strstr@h+1)^0,c
  5420  00590E  0EDF               	movlw	low (STR_18+3)
  5421  005910  6E0F               	movwf	strstr@n^0,c
  5422  005912  0EFF               	movlw	high (STR_18+3)
  5423  005914  6E10               	movwf	(strstr@n+1)^0,c
  5424  005916  EC41  F02E         	call	_strstr	;wreg free
  5425  00591A  0E01               	movlw	1
  5426  00591C  240D               	addwf	?_strstr^0,w,c
  5427  00591E  0100               	movlb	0	; () banked
  5428  005920  6F82               	movwf	cmdSetTX@p1& (0+255),b
  5429  005922  0E00               	movlw	0
  5430  005924  200E               	addwfc	(?_strstr+1)^0,w,c
  5431  005926  6F83               	movwf	(cmdSetTX@p1+1)& (0+255),b
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;../app/app_src/application.c: 621:     if(!p1){
  5435  005928  5182               	movf	cmdSetTX@p1& (0+255),w,b
  5436  00592A  1183               	iorwf	(cmdSetTX@p1+1)& (0+255),w,b
  5437  00592C  A4D8               	btfss	status,2,c
  5438  00592E  D00A               	goto	l16559
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;../app/app_src/application.c: 622:         printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUN
      +                          DS);
  5442  005930  0ECC               	movlw	low STR_4
  5443  005932  6F76               	movwf	printf@fmt& (0+255),b
  5444  005934  0EFE               	movlw	high STR_4
  5445  005936  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5446  005938  0E00               	movlw	0
  5447  00593A  6F79               	movwf	(?_printf+3)& (0+255),b
  5448  00593C  0E0B               	movlw	11
  5449  00593E  6F78               	movwf	(?_printf+2)& (0+255),b
  5450  005940  ECA8  F044         	call	_printf	;wreg free
  5451  005944                     l16559:
  5452                           
  5453                           ;../app/app_src/application.c: 624:     memset(CHstr, 0 , sizeof(CHstr));
  5454  005944  0E85               	movlw	low cmdSetTX@CHstr
  5455  005946  6E02               	movwf	memset@dest^0,c
  5456  005948  6A03               	clrf	(memset@dest+1)^0,c
  5457  00594A  0E00               	movlw	0
  5458  00594C  6E05               	movwf	(memset@c+1)^0,c
  5459  00594E  0E00               	movlw	0
  5460  005950  6E04               	movwf	memset@c^0,c
  5461  005952  0E00               	movlw	0
  5462  005954  6E07               	movwf	(memset@n+1)^0,c
  5463  005956  0E03               	movlw	3
  5464  005958  6E06               	movwf	memset@n^0,c
  5465  00595A  EC34  F022         	call	_memset	;wreg free
  5466                           
  5467                           ;../app/app_src/application.c: 625:  memcpy(CHstr,p1,2);
  5468  00595E  0E85               	movlw	low cmdSetTX@CHstr
  5469  005960  6E08               	movwf	memcpy@d1^0,c
  5470  005962  6A09               	clrf	(memcpy@d1+1)^0,c
  5471  005964  0060  F208  F00A   	movff	cmdSetTX@p1,memcpy@s1
  5472  00596A  0060  F20C  F00B   	movff	cmdSetTX@p1+1,memcpy@s1+1
  5473  005970  0E00               	movlw	0
  5474  005972  6E0D               	movwf	(memcpy@n+1)^0,c
  5475  005974  0E02               	movlw	2
  5476  005976  6E0C               	movwf	memcpy@n^0,c
  5477  005978  EC50  F03A         	call	_memcpy	;wreg free
  5478                           
  5479                           ;../app/app_src/application.c: 626:  temp = (uint8_t)strtoul(CHstr,&p2,10);
  5480  00597C  0E85               	movlw	low cmdSetTX@CHstr
  5481  00597E  6E34               	movwf	strtoul@s^0,c
  5482  005980  6A35               	clrf	(strtoul@s+1)^0,c
  5483  005982  0E80               	movlw	low cmdSetTX@p2
  5484  005984  6E36               	movwf	strtoul@endptr^0,c
  5485  005986  6A37               	clrf	(strtoul@endptr+1)^0,c
  5486  005988  0E00               	movlw	0
  5487  00598A  6E39               	movwf	(strtoul@base+1)^0,c
  5488  00598C  0E0A               	movlw	10
  5489  00598E  6E38               	movwf	strtoul@base^0,c
  5490  005990  EC90  F03F         	call	_strtoul	;wreg free
  5491  005994  5034               	movf	?_strtoul^0,w,c
  5492  005996  0100               	movlb	0	; () banked
  5493  005998  6F84               	movwf	cmdSetTX@temp& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;../app/app_src/application.c: 627:  if((temp > 13) || (temp < 2)){
  5497  00599A  0E0E               	movlw	14
  5498  00599C  6184               	cpfslt	cmdSetTX@temp& (0+255),b
  5499  00599E  D003               	goto	u16860
  5500                           
  5501                           ; BSR set to: 0
  5502  0059A0  0E02               	movlw	2
  5503  0059A2  6184               	cpfslt	cmdSetTX@temp& (0+255),b
  5504  0059A4  D00B               	goto	l340
  5505  0059A6                     u16860:
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;../app/app_src/application.c: 628:   printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS);
  5509  0059A6  0ECC               	movlw	low STR_4
  5510  0059A8  6F76               	movwf	printf@fmt& (0+255),b
  5511  0059AA  0EFE               	movlw	high STR_4
  5512  0059AC  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5513  0059AE  0E00               	movlw	0
  5514  0059B0  6F79               	movwf	(?_printf+3)& (0+255),b
  5515  0059B2  0E0B               	movlw	11
  5516  0059B4  6F78               	movwf	(?_printf+2)& (0+255),b
  5517  0059B6  ECA8  F044         	call	_printf	;wreg free
  5518                           
  5519                           ;../app/app_src/application.c: 629:  }
  5520  0059BA  0012               	return	
  5521  0059BC                     l340:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;../app/app_src/application.c: 631:   TXPower = temp;
  5525  0059BC  0060  F210  F0F0   	movff	cmdSetTX@temp,_TXPower
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;../app/app_src/application.c: 632:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1,TXPower);
  5529  0059C2  0E00               	movlw	0
  5530  0059C4  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5531  0059C6  0E1D               	movlw	29
  5532  0059C8  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5533  0059CA  0060  F3C0  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
  5534  0059D0  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5535                           
  5536                           ;../app/app_src/application.c: 633:   initRadio();
  5537  0059D4  ECD9  F020         	call	_initRadio	;wreg free
  5538                           
  5539                           ; BSR set to: 1
  5540                           ;../app/app_src/application.c: 634:   printf("OK\r\n");
  5541  0059D8  0ED7               	movlw	low STR_13
  5542  0059DA  0100               	movlb	0	; () banked
  5543  0059DC  6F76               	movwf	printf@fmt& (0+255),b
  5544  0059DE  0EFF               	movlw	high STR_13
  5545  0059E0  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5546  0059E2  ECA8  F044         	call	_printf	;wreg free
  5547                           
  5548                           ; BSR set to: 1
  5549  0059E6  0012               	return		;funcret
  5550  0059E8                     __end_of_cmdSetTX:
  5551                           	opt callstack 0
  5552                           
  5553 ;; *************** function _cmdSetTTL *****************
  5554 ;; Defined at:
  5555 ;;		line 514 in file "../app/app_src/application.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  5558 ;;		 -> atCommand(80), 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		None
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;Total ram usage:        2 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    7
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_executeATCommand
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text12
  5585  008E52                     __ptext12:
  5586                           	opt callstack 0
  5587  008E52                     _cmdSetTTL:
  5588                           	opt callstack 21
  5589                           
  5590                           ;../app/app_src/application.c: 521:  return;
  5591                           
  5592                           ; BSR set to: 1
  5593                           ;incstack = 0
  5594  008E52  0012               	return		;funcret
  5595  008E54                     __end_of_cmdSetTTL:
  5596                           	opt callstack 0
  5597                           
  5598 ;; *************** function _cmdSetSink *****************
  5599 ;; Defined at:
  5600 ;;		line 403 in file "../app/app_src/application.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      void 
  5607 ;; Registers used:
  5608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 3F/1
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;Total ram usage:        0 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:   16
  5621 ;; This function calls:
  5622 ;;		_printf
  5623 ;; This function is called by:
  5624 ;;		_executeATCommand
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text13
  5629  008D14                     __ptext13:
  5630                           	opt callstack 0
  5631  008D14                     _cmdSetSink:
  5632                           	opt callstack 12
  5633                           
  5634                           ;../app/app_src/application.c: 417:  printf("OK\r\n");
  5635                           
  5636                           ;incstack = 0
  5637  008D14  0ED7               	movlw	low STR_13
  5638  008D16  0100               	movlb	0	; () banked
  5639  008D18  6F76               	movwf	printf@fmt& (0+255),b
  5640  008D1A  0EFF               	movlw	high STR_13
  5641  008D1C  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5642  008D1E  ECA8  F044         	call	_printf	;wreg free
  5643                           
  5644                           ; BSR set to: 1
  5645  008D22  0012               	return		;funcret
  5646  008D24                     __end_of_cmdSetSink:
  5647                           	opt callstack 0
  5648                           
  5649 ;; *************** function _cmdSetSF *****************
  5650 ;; Defined at:
  5651 ;;		line 757 in file "../app/app_src/application.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5654 ;;		 -> atCommand(80), 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  CHstr           3   34[BANK0 ] unsigned char [3]
  5657 ;;  p2              2   37[BANK0 ] PTR unsigned char 
  5658 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5659 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5660 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5661 ;;  p1              2   32[BANK0 ] PTR unsigned char 
  5662 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5663 ;;  temp            1   39[BANK0 ] char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 3F/1
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;Total ram usage:       10 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:   16
  5680 ;; This function calls:
  5681 ;;		_DATAEE_WriteByte_Platform
  5682 ;;		_initRadio
  5683 ;;		_memcpy
  5684 ;;		_printf
  5685 ;;		_strstr
  5686 ;;		_strtol
  5687 ;; This function is called by:
  5688 ;;		_executeATCommand
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text14
  5693  006806                     __ptext14:
  5694                           	opt callstack 0
  5695  006806                     _cmdSetSF:
  5696                           	opt callstack 12
  5697                           
  5698                           ;../app/app_src/application.c: 758:  char *p1,*p2;;../app/app_src/application.c: 759:  c
      +                          har CHstr[3];;../app/app_src/application.c: 760:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 761:  p1 = strstr(atCommand,"=") + 1;
  5699                           
  5700                           ; BSR set to: 1
  5701                           ;incstack = 0
  5702  006806  0060  F160  F00D   	movff	cmdSetSF@atCommand,strstr@h
  5703  00680C  0060  F164  F00E   	movff	cmdSetSF@atCommand+1,strstr@h+1
  5704  006812  0EDF               	movlw	low (STR_18+3)
  5705  006814  6E0F               	movwf	strstr@n^0,c
  5706  006816  0EFF               	movlw	high (STR_18+3)
  5707  006818  6E10               	movwf	(strstr@n+1)^0,c
  5708  00681A  EC41  F02E         	call	_strstr	;wreg free
  5709  00681E  0E01               	movlw	1
  5710  006820  240D               	addwf	?_strstr^0,w,c
  5711  006822  0100               	movlb	0	; () banked
  5712  006824  6F80               	movwf	cmdSetSF@p1& (0+255),b
  5713  006826  0E00               	movlw	0
  5714  006828  200E               	addwfc	(?_strstr+1)^0,w,c
  5715  00682A  6F81               	movwf	(cmdSetSF@p1+1)& (0+255),b
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;../app/app_src/application.c: 762:  memcpy(CHstr,p1,2);
  5719  00682C  0E82               	movlw	low cmdSetSF@CHstr
  5720  00682E  6E08               	movwf	memcpy@d1^0,c
  5721  006830  6A09               	clrf	(memcpy@d1+1)^0,c
  5722  006832  0060  F200  F00A   	movff	cmdSetSF@p1,memcpy@s1
  5723  006838  0060  F204  F00B   	movff	cmdSetSF@p1+1,memcpy@s1+1
  5724  00683E  0E00               	movlw	0
  5725  006840  6E0D               	movwf	(memcpy@n+1)^0,c
  5726  006842  0E02               	movlw	2
  5727  006844  6E0C               	movwf	memcpy@n^0,c
  5728  006846  EC50  F03A         	call	_memcpy	;wreg free
  5729                           
  5730                           ;../app/app_src/application.c: 763:  temp = (uint8_t)strtol(CHstr,&p2,16);
  5731  00684A  0E82               	movlw	low cmdSetSF@CHstr
  5732  00684C  6E34               	movwf	strtol@s^0,c
  5733  00684E  0E85               	movlw	low cmdSetSF@p2
  5734  006850  6E35               	movwf	strtol@endptr^0,c
  5735  006852  0E00               	movlw	0
  5736  006854  6E37               	movwf	(strtol@base+1)^0,c
  5737  006856  0E10               	movlw	16
  5738  006858  6E36               	movwf	strtol@base^0,c
  5739  00685A  ECDF  F040         	call	_strtol	;wreg free
  5740  00685E  5034               	movf	?_strtol^0,w,c
  5741  006860  0100               	movlb	0	; () banked
  5742  006862  6F87               	movwf	cmdSetSF@temp& (0+255),b
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;../app/app_src/application.c: 764:  if((temp > 12) || (temp < 7)){
  5746  006864  5187               	movf	cmdSetSF@temp& (0+255),w,b
  5747  006866  0A80               	xorlw	128
  5748  006868  0F73               	addlw	-141
  5749  00686A  B0D8               	btfsc	status,0,c
  5750  00686C  D005               	goto	u16930
  5751                           
  5752                           ; BSR set to: 0
  5753  00686E  5187               	movf	cmdSetSF@temp& (0+255),w,b
  5754  006870  0A80               	xorlw	128
  5755  006872  0F79               	addlw	-135
  5756  006874  B0D8               	btfsc	status,0,c
  5757  006876  D009               	goto	l381
  5758  006878                     u16930:
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;../app/app_src/application.c: 765:   printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  5762  006878  0ECC               	movlw	low STR_4
  5763  00687A  6F76               	movwf	printf@fmt& (0+255),b
  5764  00687C  0EFE               	movlw	high STR_4
  5765  00687E  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5766  006880  0E0D               	movlw	13
  5767  006882  6F78               	movwf	(?_printf+2)& (0+255),b
  5768  006884  ECA8  F044         	call	_printf	;wreg free
  5769                           
  5770                           ;../app/app_src/application.c: 766:  }
  5771  006888  0012               	return	
  5772  00688A                     l381:
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;../app/app_src/application.c: 768:   current_sf = temp;
  5776  00688A  0060  F21C  F0F2   	movff	cmdSetSF@temp,_current_sf
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;../app/app_src/application.c: 769:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1,temp);
  5780  006890  0E00               	movlw	0
  5781  006892  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5782  006894  0E21               	movlw	33
  5783  006896  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5784  006898  0060  F21C  F008   	movff	cmdSetSF@temp,DATAEE_WriteByte_Platform@data
  5785  00689E  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5786                           
  5787                           ;../app/app_src/application.c: 770:   initRadio();
  5788  0068A2  ECD9  F020         	call	_initRadio	;wreg free
  5789                           
  5790                           ; BSR set to: 1
  5791                           ;../app/app_src/application.c: 771:   printf("OK\r\n");
  5792  0068A6  0ED7               	movlw	low STR_13
  5793  0068A8  0100               	movlb	0	; () banked
  5794  0068AA  6F76               	movwf	printf@fmt& (0+255),b
  5795  0068AC  0EFF               	movlw	high STR_13
  5796  0068AE  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5797  0068B0  ECA8  F044         	call	_printf	;wreg free
  5798                           
  5799                           ; BSR set to: 1
  5800  0068B4  0012               	return		;funcret
  5801  0068B6                     __end_of_cmdSetSF:
  5802                           	opt callstack 0
  5803                           
  5804 ;; *************** function _cmdSetRFCH *****************
  5805 ;; Defined at:
  5806 ;;		line 580 in file "../app/app_src/application.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5809 ;;		 -> atCommand(80), 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  CHstr           3   34[BANK0 ] unsigned char [3]
  5812 ;;  p2              2   37[BANK0 ] PTR unsigned char 
  5813 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5814 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5815 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5816 ;;  p1              2   32[BANK0 ] PTR unsigned char 
  5817 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5818 ;;  temp            1   39[BANK0 ] unsigned char 
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 3F/1
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;Total ram usage:       10 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:   16
  5835 ;; This function calls:
  5836 ;;		_DATAEE_WriteByte_Platform
  5837 ;;		_initRadio
  5838 ;;		_memcpy
  5839 ;;		_printf
  5840 ;;		_strstr
  5841 ;;		_strtoul
  5842 ;; This function is called by:
  5843 ;;		_executeATCommand
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text15
  5848  006AB8                     __ptext15:
  5849                           	opt callstack 0
  5850  006AB8                     _cmdSetRFCH:
  5851                           	opt callstack 12
  5852                           
  5853                           ;../app/app_src/application.c: 581:  char *p1,*p2;;../app/app_src/application.c: 582:  c
      +                          har CHstr[3];;../app/app_src/application.c: 583:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 584:  p1 = strstr(atCommand,"=") + 1;
  5854                           
  5855                           ; BSR set to: 1
  5856                           ;incstack = 0
  5857  006AB8  0E24               	movlw	low _atCommand
  5858  006ABA  6E0D               	movwf	strstr@h^0,c
  5859  006ABC  0E02               	movlw	high _atCommand
  5860  006ABE  6E0E               	movwf	(strstr@h+1)^0,c
  5861  006AC0  0EDF               	movlw	low (STR_18+3)
  5862  006AC2  6E0F               	movwf	strstr@n^0,c
  5863  006AC4  0EFF               	movlw	high (STR_18+3)
  5864  006AC6  6E10               	movwf	(strstr@n+1)^0,c
  5865  006AC8  EC41  F02E         	call	_strstr	;wreg free
  5866  006ACC  0E01               	movlw	1
  5867  006ACE  240D               	addwf	?_strstr^0,w,c
  5868  006AD0  0100               	movlb	0	; () banked
  5869  006AD2  6F80               	movwf	cmdSetRFCH@p1& (0+255),b
  5870  006AD4  0E00               	movlw	0
  5871  006AD6  200E               	addwfc	(?_strstr+1)^0,w,c
  5872  006AD8  6F81               	movwf	(cmdSetRFCH@p1+1)& (0+255),b
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;../app/app_src/application.c: 585:  memcpy(CHstr,p1,2);
  5876  006ADA  0E82               	movlw	low cmdSetRFCH@CHstr
  5877  006ADC  6E08               	movwf	memcpy@d1^0,c
  5878  006ADE  6A09               	clrf	(memcpy@d1+1)^0,c
  5879  006AE0  0060  F200  F00A   	movff	cmdSetRFCH@p1,memcpy@s1
  5880  006AE6  0060  F204  F00B   	movff	cmdSetRFCH@p1+1,memcpy@s1+1
  5881  006AEC  0E00               	movlw	0
  5882  006AEE  6E0D               	movwf	(memcpy@n+1)^0,c
  5883  006AF0  0E02               	movlw	2
  5884  006AF2  6E0C               	movwf	memcpy@n^0,c
  5885  006AF4  EC50  F03A         	call	_memcpy	;wreg free
  5886                           
  5887                           ;../app/app_src/application.c: 586:  temp = (uint8_t)strtoul(CHstr,&p2,16) - 1;
  5888  006AF8  0E82               	movlw	low cmdSetRFCH@CHstr
  5889  006AFA  6E34               	movwf	strtoul@s^0,c
  5890  006AFC  6A35               	clrf	(strtoul@s+1)^0,c
  5891  006AFE  0E85               	movlw	low cmdSetRFCH@p2
  5892  006B00  6E36               	movwf	strtoul@endptr^0,c
  5893  006B02  6A37               	clrf	(strtoul@endptr+1)^0,c
  5894  006B04  0E00               	movlw	0
  5895  006B06  6E39               	movwf	(strtoul@base+1)^0,c
  5896  006B08  0E10               	movlw	16
  5897  006B0A  6E38               	movwf	strtoul@base^0,c
  5898  006B0C  EC90  F03F         	call	_strtoul	;wreg free
  5899  006B10  0434               	decf	?_strtoul^0,w,c
  5900  006B12  0100               	movlb	0	; () banked
  5901  006B14  6F87               	movwf	cmdSetRFCH@temp& (0+255),b
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;../app/app_src/application.c: 587:  if(temp > sizeof(fhssList)){
  5905  006B16  0EFC               	movlw	252
  5906  006B18  6587               	cpfsgt	cmdSetRFCH@temp& (0+255),b
  5907  006B1A  D009               	goto	l331
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;../app/app_src/application.c: 588:   printf("NOT OK:%u\r\n",CHOUTOFBOUNDS);
  5911  006B1C  0ECC               	movlw	low STR_4
  5912  006B1E  6F76               	movwf	printf@fmt& (0+255),b
  5913  006B20  0EFE               	movlw	high STR_4
  5914  006B22  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5915  006B24  0E0A               	movlw	10
  5916  006B26  6F78               	movwf	(?_printf+2)& (0+255),b
  5917  006B28  ECA8  F044         	call	_printf	;wreg free
  5918                           
  5919                           ;../app/app_src/application.c: 589:  }
  5920  006B2C  0012               	return	
  5921  006B2E                     l331:
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;../app/app_src/application.c: 591:   channel = temp;
  5925  006B2E  0060  F21C  F0F1   	movff	cmdSetRFCH@temp,_channel
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;../app/app_src/application.c: 592:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1,channel);
  5929  006B34  0E00               	movlw	0
  5930  006B36  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5931  006B38  0E1C               	movlw	28
  5932  006B3A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5933  006B3C  0060  F3C4  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
  5934  006B42  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5935                           
  5936                           ;../app/app_src/application.c: 593:   initRadio();
  5937  006B46  ECD9  F020         	call	_initRadio	;wreg free
  5938                           
  5939                           ; BSR set to: 1
  5940                           ;../app/app_src/application.c: 594:         printf("OK\r\n");
  5941  006B4A  0ED7               	movlw	low STR_13
  5942  006B4C  0100               	movlb	0	; () banked
  5943  006B4E  6F76               	movwf	printf@fmt& (0+255),b
  5944  006B50  0EFF               	movlw	high STR_13
  5945  006B52  6F77               	movwf	(printf@fmt+1)& (0+255),b
  5946  006B54  ECA8  F044         	call	_printf	;wreg free
  5947                           
  5948                           ; BSR set to: 1
  5949  006B58  0012               	return		;funcret
  5950  006B5A                     __end_of_cmdSetRFCH:
  5951                           	opt callstack 0
  5952                           
  5953 ;; *************** function _cmdSetParity *****************
  5954 ;; Defined at:
  5955 ;;		line 692 in file "../app/app_src/application.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5958 ;;		 -> atCommand(80), 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;		None
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;Total ram usage:        2 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:   16
  5977 ;; This function calls:
  5978 ;;		_printf
  5979 ;;		_set_parity
  5980 ;;		_strstr
  5981 ;; This function is called by:
  5982 ;;		_executeATCommand
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text16
  5987  006EE2                     __ptext16:
  5988                           	opt callstack 0
  5989  006EE2                     _cmdSetParity:
  5990                           	opt callstack 12
  5991                           
  5992                           ;../app/app_src/application.c: 693:     if(strstr(atCommand,"=ODD"))
  5993                           
  5994                           ; BSR set to: 1
  5995                           ;incstack = 0
  5996  006EE2  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5997  006EE8  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5998  006EEE  0EEB               	movlw	low STR_46
  5999  006EF0  6E0F               	movwf	strstr@n^0,c
  6000  006EF2  0EFF               	movlw	high STR_46
  6001  006EF4  6E10               	movwf	(strstr@n+1)^0,c
  6002  006EF6  EC41  F02E         	call	_strstr	;wreg free
  6003  006EFA  500D               	movf	?_strstr^0,w,c
  6004  006EFC  100E               	iorwf	(?_strstr+1)^0,w,c
  6005  006EFE  B4D8               	btfsc	status,2,c
  6006  006F00  D004               	goto	l16609
  6007                           
  6008                           ;../app/app_src/application.c: 694:     {;../app/app_src/application.c: 695:         set
      +                          _parity(UART_9BIT_ODD_PARITY);
  6009  006F02  0E02               	movlw	2
  6010  006F04  ECC2  F03C         	call	_set_parity
  6011                           
  6012                           ;../app/app_src/application.c: 696:     }
  6013  006F08  0012               	return	
  6014  006F0A                     l16609:
  6015  006F0A  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  6016  006F10  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  6017  006F16  0EC0               	movlw	low STR_48
  6018  006F18  6E0F               	movwf	strstr@n^0,c
  6019  006F1A  0EFF               	movlw	high STR_48
  6020  006F1C  6E10               	movwf	(strstr@n+1)^0,c
  6021  006F1E  EC41  F02E         	call	_strstr	;wreg free
  6022  006F22  500D               	movf	?_strstr^0,w,c
  6023  006F24  100E               	iorwf	(?_strstr+1)^0,w,c
  6024  006F26  B4D8               	btfsc	status,2,c
  6025  006F28  D004               	goto	l16613
  6026                           
  6027                           ;../app/app_src/application.c: 698:     {;../app/app_src/application.c: 699:         set
      +                          _parity(UART_8BIT_NO_PARITY);
  6028  006F2A  0E00               	movlw	0
  6029  006F2C  ECC2  F03C         	call	_set_parity
  6030                           
  6031                           ;../app/app_src/application.c: 700:     }
  6032  006F30  0012               	return	
  6033  006F32                     l16613:
  6034  006F32  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  6035  006F38  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  6036  006F3E  0EC6               	movlw	low STR_50
  6037  006F40  6E0F               	movwf	strstr@n^0,c
  6038  006F42  0EFF               	movlw	high STR_50
  6039  006F44  6E10               	movwf	(strstr@n+1)^0,c
  6040  006F46  EC41  F02E         	call	_strstr	;wreg free
  6041  006F4A  500D               	movf	?_strstr^0,w,c
  6042  006F4C  100E               	iorwf	(?_strstr+1)^0,w,c
  6043  006F4E  B4D8               	btfsc	status,2,c
  6044  006F50  D004               	goto	l16617
  6045                           
  6046                           ;../app/app_src/application.c: 702:     {;../app/app_src/application.c: 703:         set
      +                          _parity(UART_9BIT_EVEN_PARITY);
  6047  006F52  0E03               	movlw	3
  6048  006F54  ECC2  F03C         	call	_set_parity
  6049                           
  6050                           ;../app/app_src/application.c: 704:     }
  6051  006F58  0012               	return	
  6052  006F5A                     l16617:
  6053                           
  6054                           ;../app/app_src/application.c: 706:     {;../app/app_src/application.c: 707:         pri
      +                          ntf("NOT OK:%u\r\n",ILLEGALPARAMETER);
  6055  006F5A  0ECC               	movlw	low STR_4
  6056  006F5C  0100               	movlb	0	; () banked
  6057  006F5E  6F76               	movwf	printf@fmt& (0+255),b
  6058  006F60  0EFE               	movlw	high STR_4
  6059  006F62  6F77               	movwf	(printf@fmt+1)& (0+255),b
  6060  006F64  0E0D               	movlw	13
  6061  006F66  6F78               	movwf	(?_printf+2)& (0+255),b
  6062  006F68  ECA8  F044         	call	_printf	;wreg free
  6063  006F6C  0012               	return		;funcret
  6064  006F6E                     __end_of_cmdSetParity:
  6065                           	opt callstack 0
  6066                           
  6067 ;; *************** function _cmdSetNaddr *****************
  6068 ;; Defined at:
  6069 ;;		line 343 in file "../app/app_src/application.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6072 ;;		 -> atCommand(80), 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  p1              2   34[BANK0 ] PTR unsigned char 
  6075 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6076 ;;  p2              2   32[BANK0 ] PTR unsigned char 
  6077 ;;  tempaddr        1   36[BANK0 ] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 3F/1
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;Total ram usage:        7 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:   16
  6094 ;; This function calls:
  6095 ;;		_DATAEE_WriteByte_Platform
  6096 ;;		_initRadio
  6097 ;;		_printf
  6098 ;;		_setSyncWord
  6099 ;;		_strstr
  6100 ;;		_strtoul
  6101 ;; This function is called by:
  6102 ;;		_executeATCommand
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text17
  6107  007422                     __ptext17:
  6108                           	opt callstack 0
  6109  007422                     _cmdSetNaddr:
  6110                           	opt callstack 12
  6111                           
  6112                           ;../app/app_src/application.c: 344:  uint8_t tempaddr;;../app/app_src/application.c: 345
      +                          :  char *p1,*p2;;../app/app_src/application.c: 346:  p1 = strstr(atCommand,"=") + 1;
  6113                           
  6114                           ;incstack = 0
  6115  007422  0E24               	movlw	low _atCommand
  6116  007424  6E0D               	movwf	strstr@h^0,c
  6117  007426  0E02               	movlw	high _atCommand
  6118  007428  6E0E               	movwf	(strstr@h+1)^0,c
  6119  00742A  0EDF               	movlw	low (STR_18+3)
  6120  00742C  6E0F               	movwf	strstr@n^0,c
  6121  00742E  0EFF               	movlw	high (STR_18+3)
  6122  007430  6E10               	movwf	(strstr@n+1)^0,c
  6123  007432  EC41  F02E         	call	_strstr	;wreg free
  6124  007436  0E01               	movlw	1
  6125  007438  240D               	addwf	?_strstr^0,w,c
  6126  00743A  0100               	movlb	0	; () banked
  6127  00743C  6F82               	movwf	cmdSetNaddr@p1& (0+255),b
  6128  00743E  0E00               	movlw	0
  6129  007440  200E               	addwfc	(?_strstr+1)^0,w,c
  6130  007442  6F83               	movwf	(cmdSetNaddr@p1+1)& (0+255),b
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;../app/app_src/application.c: 348:  tempaddr = strtoul(p1,p2,16);
  6134  007444  0060  F208  F034   	movff	cmdSetNaddr@p1,strtoul@s
  6135  00744A  0060  F20C  F035   	movff	cmdSetNaddr@p1+1,strtoul@s+1
  6136  007450  0060  F200  F036   	movff	cmdSetNaddr@p2,strtoul@endptr
  6137  007456  0060  F204  F037   	movff	cmdSetNaddr@p2+1,strtoul@endptr+1
  6138  00745C  0E00               	movlw	0
  6139  00745E  6E39               	movwf	(strtoul@base+1)^0,c
  6140  007460  0E10               	movlw	16
  6141  007462  6E38               	movwf	strtoul@base^0,c
  6142  007464  EC90  F03F         	call	_strtoul	;wreg free
  6143  007468  5034               	movf	?_strtoul^0,w,c
  6144  00746A  0100               	movlb	0	; () banked
  6145  00746C  6F84               	movwf	cmdSetNaddr@tempaddr& (0+255),b
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;../app/app_src/application.c: 349:  currentNetID = tempaddr;
  6149  00746E  0060  F210  F0FC   	movff	cmdSetNaddr@tempaddr,_currentNetID
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;../app/app_src/application.c: 350:  setSyncWord(currentNetID);
  6153  007474  51FC               	movf	_currentNetID& (0+255),w,b
  6154  007476  EC92  F046         	call	_setSyncWord
  6155                           
  6156                           ;../app/app_src/application.c: 352:  DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,current
      +                          NetID);
  6157  00747A  0E00               	movlw	0
  6158  00747C  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6159  00747E  0E19               	movlw	25
  6160  007480  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6161  007482  0060  F3F0  F008   	movff	_currentNetID,DATAEE_WriteByte_Platform@data
  6162  007488  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  6163                           
  6164                           ;../app/app_src/application.c: 353:     initRadio();
  6165  00748C  ECD9  F020         	call	_initRadio	;wreg free
  6166                           
  6167                           ; BSR set to: 1
  6168                           ;../app/app_src/application.c: 354:  printf("OK\r\n");
  6169  007490  0ED7               	movlw	low STR_13
  6170  007492  0100               	movlb	0	; () banked
  6171  007494  6F76               	movwf	printf@fmt& (0+255),b
  6172  007496  0EFF               	movlw	high STR_13
  6173  007498  6F77               	movwf	(printf@fmt+1)& (0+255),b
  6174  00749A  ECA8  F044         	call	_printf	;wreg free
  6175                           
  6176                           ; BSR set to: 1
  6177  00749E  0012               	return		;funcret
  6178  0074A0                     __end_of_cmdSetNaddr:
  6179                           	opt callstack 0
  6180                           
  6181 ;; *************** function _setSyncWord *****************
  6182 ;; Defined at:
  6183 ;;		line 329 in file "../phy/sx1216/phy_src/phy.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  sw              1    wreg     unsigned char 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  sw              1   16[COMRAM] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 3F/0
  6194 ;;		On exit  : 3F/3D
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;Total ram usage:        1 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:   11
  6204 ;; This function calls:
  6205 ;;		_SX1276Write
  6206 ;; This function is called by:
  6207 ;;		_cmdSetNaddr
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text18
  6212  008D24                     __ptext18:
  6213                           	opt callstack 0
  6214  008D24                     _setSyncWord:
  6215                           	opt callstack 16
  6216                           
  6217                           ; BSR set to: 1
  6218                           ;incstack = 0
  6219                           ;setSyncWord@sw stored from wreg
  6220  008D24  6E11               	movwf	setSyncWord@sw^0,c
  6221                           
  6222                           ;../phy/sx1216/phy_src/phy.c: 329: void setSyncWord(uint8_t sw);../phy/sx1216/phy_src/ph
      +                          y.c: 330: {;../phy/sx1216/phy_src/phy.c: 331:   SX1276Write(0x39, sw);
  6223  008D26  0060  F044  F00F   	movff	setSyncWord@sw,SX1276Write@data
  6224  008D2C  0E39               	movlw	57
  6225  008D2E  EC79  F046         	call	_SX1276Write
  6226                           
  6227                           ; BSR set to: 61
  6228  008D32  0012               	return		;funcret
  6229  008D34                     __end_of_setSyncWord:
  6230                           	opt callstack 0
  6231                           
  6232 ;; *************** function _cmdSetCADRSSI *****************
  6233 ;; Defined at:
  6234 ;;		line 656 in file "../app/app_src/application.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  6237 ;;		 -> atCommand(80), 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  CHstr           3   34[BANK0 ] unsigned char [3]
  6240 ;;  p2              2   37[BANK0 ] PTR unsigned char 
  6241 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  6242 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6243 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6244 ;;  p1              2   32[BANK0 ] PTR unsigned char 
  6245 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6246 ;;  temp            1   39[BANK0 ] char 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 3F/1
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6257 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;Total ram usage:       10 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:   16
  6263 ;; This function calls:
  6264 ;;		_DATAEE_WriteByte_Platform
  6265 ;;		_initRadio
  6266 ;;		_memcpy
  6267 ;;		_printf
  6268 ;;		_strstr
  6269 ;;		_strtol
  6270 ;; This function is called by:
  6271 ;;		_executeATCommand
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text19
  6276  0068B6                     __ptext19:
  6277                           	opt callstack 0
  6278  0068B6                     _cmdSetCADRSSI:
  6279                           	opt callstack 12
  6280                           
  6281                           ;../app/app_src/application.c: 657:  char *p1,*p2;;../app/app_src/application.c: 658:  c
      +                          har CHstr[3];;../app/app_src/application.c: 659:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 660:  p1 = strstr(atCommand,"=") + 1;
  6282                           
  6283                           ; BSR set to: 61
  6284                           ;incstack = 0
  6285  0068B6  0060  F160  F00D   	movff	cmdSetCADRSSI@atCommand,strstr@h
  6286  0068BC  0060  F164  F00E   	movff	cmdSetCADRSSI@atCommand+1,strstr@h+1
  6287  0068C2  0EDF               	movlw	low (STR_18+3)
  6288  0068C4  6E0F               	movwf	strstr@n^0,c
  6289  0068C6  0EFF               	movlw	high (STR_18+3)
  6290  0068C8  6E10               	movwf	(strstr@n+1)^0,c
  6291  0068CA  EC41  F02E         	call	_strstr	;wreg free
  6292  0068CE  0E01               	movlw	1
  6293  0068D0  240D               	addwf	?_strstr^0,w,c
  6294  0068D2  0100               	movlb	0	; () banked
  6295  0068D4  6F80               	movwf	cmdSetCADRSSI@p1& (0+255),b
  6296  0068D6  0E00               	movlw	0
  6297  0068D8  200E               	addwfc	(?_strstr+1)^0,w,c
  6298  0068DA  6F81               	movwf	(cmdSetCADRSSI@p1+1)& (0+255),b
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;../app/app_src/application.c: 661:  memcpy(CHstr,p1,3);
  6302  0068DC  0E82               	movlw	low cmdSetCADRSSI@CHstr
  6303  0068DE  6E08               	movwf	memcpy@d1^0,c
  6304  0068E0  6A09               	clrf	(memcpy@d1+1)^0,c
  6305  0068E2  0060  F200  F00A   	movff	cmdSetCADRSSI@p1,memcpy@s1
  6306  0068E8  0060  F204  F00B   	movff	cmdSetCADRSSI@p1+1,memcpy@s1+1
  6307  0068EE  0E00               	movlw	0
  6308  0068F0  6E0D               	movwf	(memcpy@n+1)^0,c
  6309  0068F2  0E03               	movlw	3
  6310  0068F4  6E0C               	movwf	memcpy@n^0,c
  6311  0068F6  EC50  F03A         	call	_memcpy	;wreg free
  6312                           
  6313                           ;../app/app_src/application.c: 662:  temp = (uint8_t)strtol(CHstr,&p2,10);
  6314  0068FA  0E82               	movlw	low cmdSetCADRSSI@CHstr
  6315  0068FC  6E34               	movwf	strtol@s^0,c
  6316  0068FE  0E85               	movlw	low cmdSetCADRSSI@p2
  6317  006900  6E35               	movwf	strtol@endptr^0,c
  6318  006902  0E00               	movlw	0
  6319  006904  6E37               	movwf	(strtol@base+1)^0,c
  6320  006906  0E0A               	movlw	10
  6321  006908  6E36               	movwf	strtol@base^0,c
  6322  00690A  ECDF  F040         	call	_strtol	;wreg free
  6323  00690E  5034               	movf	?_strtol^0,w,c
  6324  006910  0100               	movlb	0	; () banked
  6325  006912  6F87               	movwf	cmdSetCADRSSI@temp& (0+255),b
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;../app/app_src/application.c: 663:  if((temp > 0) || (temp < -120)){
  6329  006914  5187               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6330  006916  0A80               	xorlw	128
  6331  006918  0F7F               	addlw	-129
  6332  00691A  B0D8               	btfsc	status,0,c
  6333  00691C  D005               	goto	u16880
  6334                           
  6335                           ; BSR set to: 0
  6336  00691E  5187               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6337  006920  0A80               	xorlw	128
  6338  006922  0FF8               	addlw	248
  6339  006924  B0D8               	btfsc	status,0,c
  6340  006926  D009               	goto	l350
  6341  006928                     u16880:
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;../app/app_src/application.c: 664:   printf("NOT OK:%u\r\n",TXOUTOFBOUNDS);
  6345  006928  0ECC               	movlw	low STR_4
  6346  00692A  6F76               	movwf	printf@fmt& (0+255),b
  6347  00692C  0EFE               	movlw	high STR_4
  6348  00692E  6F77               	movwf	(printf@fmt+1)& (0+255),b
  6349  006930  0E0B               	movlw	11
  6350  006932  6F78               	movwf	(?_printf+2)& (0+255),b
  6351  006934  ECA8  F044         	call	_printf	;wreg free
  6352                           
  6353                           ;../app/app_src/application.c: 665:  }
  6354  006938  0012               	return	
  6355  00693A                     l350:
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;../app/app_src/application.c: 667:   RSSITarget = temp;
  6359  00693A  0060  F21C  F0FB   	movff	cmdSetCADRSSI@temp,_RSSITarget
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;../app/app_src/application.c: 668:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1,RSSITarget);
  6363  006940  0E00               	movlw	0
  6364  006942  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6365  006944  0E1E               	movlw	30
  6366  006946  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6367  006948  0060  F3EC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  6368  00694E  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  6369                           
  6370                           ;../app/app_src/application.c: 669:   initRadio();
  6371  006952  ECD9  F020         	call	_initRadio	;wreg free
  6372                           
  6373                           ; BSR set to: 1
  6374                           ;../app/app_src/application.c: 670:   printf("OK\r\n");
  6375  006956  0ED7               	movlw	low STR_13
  6376  006958  0100               	movlb	0	; () banked
  6377  00695A  6F76               	movwf	printf@fmt& (0+255),b
  6378  00695C  0EFF               	movlw	high STR_13
  6379  00695E  6F77               	movwf	(printf@fmt+1)& (0+255),b
  6380  006960  ECA8  F044         	call	_printf	;wreg free
  6381                           
  6382                           ; BSR set to: 1
  6383  006964  0012               	return		;funcret
  6384  006966                     __end_of_cmdSetCADRSSI:
  6385                           	opt callstack 0
  6386                           
  6387 ;; *************** function _strtol *****************
  6388 ;; Defined at:
  6389 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtol.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  s               1   51[COMRAM] PTR const unsigned char 
  6392 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), 
  6393 ;;  endptr          1   52[COMRAM] PTR PTR unsigned char 
  6394 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), 
  6395 ;;  base            2   53[COMRAM] int 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  4   51[COMRAM] long 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;Total ram usage:        4 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:   10
  6414 ;; This function calls:
  6415 ;;		___strtoxl
  6416 ;; This function is called by:
  6417 ;;		_cmdSetCADRSSI
  6418 ;;		_cmdSetSF
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text20
  6423  0081BE                     __ptext20:
  6424                           	opt callstack 0
  6425  0081BE                     _strtol:
  6426                           	opt callstack 17
  6427                           
  6428                           ; BSR set to: 1
  6429                           ;incstack = 0
  6430  0081BE  0060  F0D0  F010   	movff	strtol@s,___strtoxl@s
  6431  0081C4  6A11               	clrf	(___strtoxl@s+1)^0,c
  6432  0081C6  0060  F0D4  F012   	movff	strtol@endptr,___strtoxl@endptr
  6433  0081CC  6A13               	clrf	(___strtoxl@endptr+1)^0,c
  6434  0081CE  0060  F0D8  F014   	movff	strtol@base,___strtoxl@base
  6435  0081D4  0060  F0DC  F015   	movff	strtol@base+1,___strtoxl@base+1
  6436  0081DA  0E01               	movlw	1
  6437  0081DC  6E16               	movwf	___strtoxl@is_signed^0,c
  6438  0081DE  EC8F  F005         	call	___strtoxl	;wreg free
  6439  0081E2  0060  F040  F034   	movff	?___strtoxl,?_strtol
  6440  0081E8  0060  F044  F035   	movff	?___strtoxl+1,?_strtol+1
  6441  0081EE  0060  F048  F036   	movff	?___strtoxl+2,?_strtol+2
  6442  0081F4  0060  F04C  F037   	movff	?___strtoxl+3,?_strtol+3
  6443  0081FA  0012               	return		;funcret
  6444  0081FC                     __end_of_strtol:
  6445                           	opt callstack 0
  6446                           
  6447 ;; *************** function _cmdSetBaud *****************
  6448 ;; Defined at:
  6449 ;;		line 731 in file "../app/app_src/application.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  atCommand       2   57[COMRAM] PTR unsigned char 
  6452 ;;		 -> atCommand(80), 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  ptr             2   60[COMRAM] PTR unsigned char 
  6455 ;;		 -> atCommand(80), NULL(0), 
  6456 ;;  tempbaud        1   59[COMRAM] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;Total ram usage:        5 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:   11
  6473 ;; This function calls:
  6474 ;;		_strtok
  6475 ;;		_strtoul
  6476 ;; This function is called by:
  6477 ;;		_executeATCommand
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text21
  6482  007580                     __ptext21:
  6483                           	opt callstack 0
  6484  007580                     _cmdSetBaud:
  6485                           	opt callstack 17
  6486                           
  6487                           ;../app/app_src/application.c: 731: static void cmdSetBaud(char* atCommand);../app/app_s
      +                          rc/application.c: 732: {;../app/app_src/application.c: 733:     uint8_t tempbaud;;../app
      +                          /app_src/application.c: 734:     char *ptr;;../app/app_src/application.c: 735:     ptr =
      +                           strtok(atCommand,"=");
  6488                           
  6489                           ;incstack = 0
  6490  007580  0060  F0E8  F00F   	movff	cmdSetBaud@atCommand,strtok@s
  6491  007586  0060  F0EC  F010   	movff	cmdSetBaud@atCommand+1,strtok@s+1
  6492  00758C  0EDF               	movlw	low (STR_18+3)
  6493  00758E  6E11               	movwf	strtok@sep^0,c
  6494  007590  0EFF               	movlw	high (STR_18+3)
  6495  007592  6E12               	movwf	(strtok@sep+1)^0,c
  6496  007594  ECD3  F02D         	call	_strtok	;wreg free
  6497  007598  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6498  00759E  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6499                           
  6500                           ;../app/app_src/application.c: 736:     ptr = strtok(((void*)0),"\r");
  6501  0075A4  0E00               	movlw	0
  6502  0075A6  6E0F               	movwf	strtok@s^0,c
  6503  0075A8  0E00               	movlw	0
  6504  0075AA  6E10               	movwf	(strtok@s+1)^0,c
  6505  0075AC  0EFD               	movlw	low STR_55
  6506  0075AE  6E11               	movwf	strtok@sep^0,c
  6507  0075B0  0EFF               	movlw	high STR_55
  6508  0075B2  6E12               	movwf	(strtok@sep+1)^0,c
  6509  0075B4  ECD3  F02D         	call	_strtok	;wreg free
  6510  0075B8  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6511  0075BE  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6512                           
  6513                           ;../app/app_src/application.c: 737:     tempbaud = (uint8_t)strtoul(ptr,((void*)0),10);
  6514  0075C4  0060  F0F4  F034   	movff	cmdSetBaud@ptr,strtoul@s
  6515  0075CA  0060  F0F8  F035   	movff	cmdSetBaud@ptr+1,strtoul@s+1
  6516  0075D0  0E00               	movlw	0
  6517  0075D2  6E36               	movwf	strtoul@endptr^0,c
  6518  0075D4  0E00               	movlw	0
  6519  0075D6  6E37               	movwf	(strtoul@endptr+1)^0,c
  6520  0075D8  0E00               	movlw	0
  6521  0075DA  6E39               	movwf	(strtoul@base+1)^0,c
  6522  0075DC  0E0A               	movlw	10
  6523  0075DE  6E38               	movwf	strtoul@base^0,c
  6524  0075E0  EC90  F03F         	call	_strtoul	;wreg free
  6525  0075E4  5034               	movf	?_strtoul^0,w,c
  6526  0075E6  6E3C               	movwf	cmdSetBaud@tempbaud^0,c
  6527                           
  6528                           ;../app/app_src/application.c: 738:     tempbaud++;
  6529  0075E8  2A3C               	incf	cmdSetBaud@tempbaud^0,f,c
  6530  0075EA  0012               	return		;funcret
  6531  0075EC                     __end_of_cmdSetBaud:
  6532                           	opt callstack 0
  6533                           
  6534 ;; *************** function _strtok *****************
  6535 ;; Defined at:
  6536 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtok.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  s               2   14[COMRAM] PTR unsigned char 
  6539 ;;		 -> atCommand(80), NULL(0), 
  6540 ;;  sep             2   16[COMRAM] PTR const unsigned char 
  6541 ;;		 -> STR_55(2), STR_54(2), 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  2   14[COMRAM] PTR unsigned char 
  6546 ;; Registers used:
  6547 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;Total ram usage:        4 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    9
  6560 ;; This function calls:
  6561 ;;		_strcspn
  6562 ;;		_strspn
  6563 ;; This function is called by:
  6564 ;;		_cmdSetBaud
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text22
  6569  005BA6                     __ptext22:
  6570                           	opt callstack 0
  6571  005BA6                     _strtok:
  6572                           	opt callstack 18
  6573                           
  6574                           ;incstack = 0
  6575  005BA6  500F               	movf	strtok@s^0,w,c
  6576  005BA8  1010               	iorwf	(strtok@s+1)^0,w,c
  6577  005BAA  A4D8               	btfss	status,2,c
  6578  005BAC  D00F               	goto	l15959
  6579  005BAE  0060  F59C  F00F   	movff	strtok@p,strtok@s
  6580  005BB4  0060  F5A0  F010   	movff	strtok@p+1,strtok@s+1
  6581  005BBA  500F               	movf	strtok@s^0,w,c
  6582  005BBC  1010               	iorwf	(strtok@s+1)^0,w,c
  6583  005BBE  A4D8               	btfss	status,2,c
  6584  005BC0  D005               	goto	l15959
  6585  005BC2  0E00               	movlw	0
  6586  005BC4  6E0F               	movwf	?_strtok^0,c
  6587  005BC6  0E00               	movlw	0
  6588  005BC8  6E10               	movwf	(?_strtok+1)^0,c
  6589  005BCA  0012               	return	
  6590  005BCC                     l15959:
  6591  005BCC  0060  F03C  F008   	movff	strtok@s,strspn@s
  6592  005BD2  0060  F040  F009   	movff	strtok@s+1,strspn@s+1
  6593  005BD8  0060  F044  F00A   	movff	strtok@sep,strspn@c
  6594  005BDE  0060  F048  F00B   	movff	strtok@sep+1,strspn@c+1
  6595  005BE4  EC62  F03C         	call	_strspn	;wreg free
  6596  005BE8  5008               	movf	?_strspn^0,w,c
  6597  005BEA  260F               	addwf	strtok@s^0,f,c
  6598  005BEC  5009               	movf	(?_strspn+1)^0,w,c
  6599  005BEE  2210               	addwfc	(strtok@s+1)^0,f,c
  6600  005BF0  0060  F03F  FFD9   	movff	strtok@s,fsr2l
  6601  005BF6  0060  F043  FFDA   	movff	strtok@s+1,fsr2h
  6602  005BFC  50DF               	movf	indf2,w,c
  6603  005BFE  A4D8               	btfss	status,2,c
  6604  005C00  D00C               	goto	l15967
  6605  005C02  0E00               	movlw	0
  6606  005C04  0101               	movlb	1	; () banked
  6607  005C06  6F67               	movwf	strtok@p& (0+255),b
  6608  005C08  0E00               	movlw	0
  6609  005C0A  6F68               	movwf	(strtok@p+1)& (0+255),b
  6610  005C0C  0060  F59C  F00F   	movff	strtok@p,?_strtok
  6611  005C12  0060  F5A0  F010   	movff	strtok@p+1,?_strtok+1
  6612  005C18  0012               	return	
  6613  005C1A                     l15967:
  6614  005C1A  0060  F03C  F008   	movff	strtok@s,strcspn@s
  6615  005C20  0060  F040  F009   	movff	strtok@s+1,strcspn@s+1
  6616  005C26  0060  F044  F00A   	movff	strtok@sep,strcspn@c
  6617  005C2C  0060  F048  F00B   	movff	strtok@sep+1,strcspn@c+1
  6618  005C32  EC92  F03C         	call	_strcspn	;wreg free
  6619  005C36  5008               	movf	?_strcspn^0,w,c
  6620  005C38  240F               	addwf	strtok@s^0,w,c
  6621  005C3A  0101               	movlb	1	; () banked
  6622  005C3C  6F67               	movwf	strtok@p& (0+255),b
  6623  005C3E  5009               	movf	(?_strcspn+1)^0,w,c
  6624  005C40  2010               	addwfc	(strtok@s+1)^0,w,c
  6625  005C42  6F68               	movwf	(strtok@p+1)& (0+255),b
  6626                           
  6627                           ; BSR set to: 1
  6628  005C44  0060  F59F  FFD9   	movff	strtok@p,fsr2l
  6629  005C4A  0060  F5A3  FFDA   	movff	strtok@p+1,fsr2h
  6630  005C50  50DF               	movf	indf2,w,c
  6631  005C52  B4D8               	btfsc	status,2,c
  6632  005C54  D00B               	goto	l15975
  6633                           
  6634                           ; BSR set to: 1
  6635  005C56  0060  F59F  FFD9   	movff	strtok@p,fsr2l
  6636  005C5C  0060  F5A3  FFDA   	movff	strtok@p+1,fsr2h
  6637  005C62  0E00               	movlw	0
  6638  005C64  6EDF               	movwf	indf2,c
  6639                           
  6640                           ; BSR set to: 1
  6641  005C66  4B67               	infsnz	strtok@p& (0+255),f,b
  6642  005C68  2B68               	incf	(strtok@p+1)& (0+255),f,b
  6643  005C6A  D004               	goto	l4021
  6644  005C6C                     l15975:
  6645                           
  6646                           ; BSR set to: 1
  6647  005C6C  0E00               	movlw	0
  6648  005C6E  6F67               	movwf	strtok@p& (0+255),b
  6649  005C70  0E00               	movlw	0
  6650  005C72  6F68               	movwf	(strtok@p+1)& (0+255),b
  6651  005C74                     l4021:
  6652                           
  6653                           ; BSR set to: 1
  6654  005C74  0060  F03C  F00F   	movff	strtok@s,?_strtok
  6655  005C7A  0060  F040  F010   	movff	strtok@s+1,?_strtok+1
  6656  005C80  0012               	return		;funcret
  6657  005C82                     __end_of_strtok:
  6658                           	opt callstack 0
  6659                           
  6660 ;; *************** function _strspn *****************
  6661 ;; Defined at:
  6662 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strspn.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6665 ;;		 -> atCommand(80), NULL(0), 
  6666 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6667 ;;		 -> STR_55(2), STR_54(2), 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  i               2   12[COMRAM] unsigned int 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  2    7[COMRAM] unsigned int 
  6672 ;; Registers used:
  6673 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;Total ram usage:        7 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    8
  6686 ;; This function calls:
  6687 ;;		_strchr
  6688 ;; This function is called by:
  6689 ;;		_strtok
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text23
  6694  0078C4                     __ptext23:
  6695                           	opt callstack 0
  6696  0078C4                     _strspn:
  6697                           	opt callstack 18
  6698                           
  6699                           ;incstack = 0
  6700  0078C4  0E00               	movlw	0
  6701  0078C6  6E0E               	movwf	(strspn@i+1)^0,c
  6702  0078C8  0E00               	movlw	0
  6703  0078CA  6E0D               	movwf	strspn@i^0,c
  6704  0078CC  D004               	goto	l15669
  6705  0078CE                     l15667:
  6706  0078CE  4A08               	infsnz	strspn@s^0,f,c
  6707  0078D0  2A09               	incf	(strspn@s+1)^0,f,c
  6708  0078D2  4A0D               	infsnz	strspn@i^0,f,c
  6709  0078D4  2A0E               	incf	(strspn@i+1)^0,f,c
  6710  0078D6                     l15669:
  6711  0078D6  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6712  0078DC  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6713  0078E2  50DF               	movf	indf2,w,c
  6714  0078E4  B4D8               	btfsc	status,2,c
  6715  0078E6  D017               	goto	u15510
  6716  0078E8  0060  F028  F002   	movff	strspn@c,strchr@s
  6717  0078EE  0060  F02C  F003   	movff	strspn@c+1,strchr@s+1
  6718  0078F4  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6719  0078FA  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6720  007900  50DF               	movf	indf2,w,c
  6721  007902  6E0C               	movwf	??_strspn^0,c
  6722  007904  500C               	movf	??_strspn^0,w,c
  6723  007906  6E04               	movwf	strchr@c^0,c
  6724  007908  6A05               	clrf	(strchr@c+1)^0,c
  6725  00790A  ECCB  F038         	call	_strchr	;wreg free
  6726  00790E  5002               	movf	?_strchr^0,w,c
  6727  007910  1003               	iorwf	(?_strchr+1)^0,w,c
  6728  007912  A4D8               	btfss	status,2,c
  6729  007914  D7DC               	goto	l15667
  6730  007916                     u15510:
  6731  007916  0060  F034  F008   	movff	strspn@i,?_strspn
  6732  00791C  0060  F038  F009   	movff	strspn@i+1,?_strspn+1
  6733  007922  0012               	return		;funcret
  6734  007924                     __end_of_strspn:
  6735                           	opt callstack 0
  6736                           
  6737 ;; *************** function _strcspn *****************
  6738 ;; Defined at:
  6739 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcspn.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6742 ;;		 -> atCommand(80), NULL(0), 
  6743 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6744 ;;		 -> STR_55(2), STR_54(2), 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  i               2   12[COMRAM] unsigned int 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  2    7[COMRAM] unsigned int 
  6749 ;; Registers used:
  6750 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;Total ram usage:        7 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    8
  6763 ;; This function calls:
  6764 ;;		_strchr
  6765 ;; This function is called by:
  6766 ;;		_strtok
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text24
  6771  007924                     __ptext24:
  6772                           	opt callstack 0
  6773  007924                     _strcspn:
  6774                           	opt callstack 18
  6775                           
  6776                           ;incstack = 0
  6777  007924  0E00               	movlw	0
  6778  007926  6E0E               	movwf	(strcspn@i+1)^0,c
  6779  007928  0E00               	movlw	0
  6780  00792A  6E0D               	movwf	strcspn@i^0,c
  6781  00792C  D004               	goto	l15677
  6782  00792E                     l15675:
  6783  00792E  4A08               	infsnz	strcspn@s^0,f,c
  6784  007930  2A09               	incf	(strcspn@s+1)^0,f,c
  6785  007932  4A0D               	infsnz	strcspn@i^0,f,c
  6786  007934  2A0E               	incf	(strcspn@i+1)^0,f,c
  6787  007936                     l15677:
  6788  007936  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6789  00793C  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6790  007942  50DF               	movf	indf2,w,c
  6791  007944  B4D8               	btfsc	status,2,c
  6792  007946  D017               	goto	u15530
  6793  007948  0060  F028  F002   	movff	strcspn@c,strchr@s
  6794  00794E  0060  F02C  F003   	movff	strcspn@c+1,strchr@s+1
  6795  007954  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6796  00795A  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6797  007960  50DF               	movf	indf2,w,c
  6798  007962  6E0C               	movwf	??_strcspn^0,c
  6799  007964  500C               	movf	??_strcspn^0,w,c
  6800  007966  6E04               	movwf	strchr@c^0,c
  6801  007968  6A05               	clrf	(strchr@c+1)^0,c
  6802  00796A  ECCB  F038         	call	_strchr	;wreg free
  6803  00796E  5002               	movf	?_strchr^0,w,c
  6804  007970  1003               	iorwf	(?_strchr+1)^0,w,c
  6805  007972  B4D8               	btfsc	status,2,c
  6806  007974  D7DC               	goto	l15675
  6807  007976                     u15530:
  6808  007976  0060  F034  F008   	movff	strcspn@i,?_strcspn
  6809  00797C  0060  F038  F009   	movff	strcspn@i+1,?_strcspn+1
  6810  007982  0012               	return		;funcret
  6811  007984                     __end_of_strcspn:
  6812                           	opt callstack 0
  6813                           
  6814 ;; *************** function _cmdSetAddr *****************
  6815 ;; Defined at:
  6816 ;;		line 308 in file "../app/app_src/application.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6819 ;;		 -> atCommand(80), 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  tempaddr        2   36[BANK0 ] unsigned short 
  6822 ;;  p1              2   34[BANK0 ] PTR unsigned char 
  6823 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6824 ;;  p2              2   32[BANK0 ] PTR unsigned char 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 3F/1
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;Total ram usage:        8 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:   16
  6841 ;; This function calls:
  6842 ;;		_printf
  6843 ;;		_strstr
  6844 ;;		_strtoul
  6845 ;; This function is called by:
  6846 ;;		_executeATCommand
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text25
  6851  006DC0                     __ptext25:
  6852                           	opt callstack 0
  6853  006DC0                     _cmdSetAddr:
  6854                           	opt callstack 12
  6855                           
  6856                           ;../app/app_src/application.c: 309:  uint16_t tempaddr;;../app/app_src/application.c: 31
      +                          0:  char *p1,*p2;;../app/app_src/application.c: 311:  p1 = strstr(atCommand,"=") + 1;
  6857                           
  6858                           ;incstack = 0
  6859  006DC0  0E24               	movlw	low _atCommand
  6860  006DC2  6E0D               	movwf	strstr@h^0,c
  6861  006DC4  0E02               	movlw	high _atCommand
  6862  006DC6  6E0E               	movwf	(strstr@h+1)^0,c
  6863  006DC8  0EDF               	movlw	low (STR_18+3)
  6864  006DCA  6E0F               	movwf	strstr@n^0,c
  6865  006DCC  0EFF               	movlw	high (STR_18+3)
  6866  006DCE  6E10               	movwf	(strstr@n+1)^0,c
  6867  006DD0  EC41  F02E         	call	_strstr	;wreg free
  6868  006DD4  0E01               	movlw	1
  6869  006DD6  240D               	addwf	?_strstr^0,w,c
  6870  006DD8  0100               	movlb	0	; () banked
  6871  006DDA  6F82               	movwf	cmdSetAddr@p1& (0+255),b
  6872  006DDC  0E00               	movlw	0
  6873  006DDE  200E               	addwfc	(?_strstr+1)^0,w,c
  6874  006DE0  6F83               	movwf	(cmdSetAddr@p1+1)& (0+255),b
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;../app/app_src/application.c: 313:  tempaddr = strtoul(p1,p2,16);
  6878  006DE2  0060  F208  F034   	movff	cmdSetAddr@p1,strtoul@s
  6879  006DE8  0060  F20C  F035   	movff	cmdSetAddr@p1+1,strtoul@s+1
  6880  006DEE  0060  F200  F036   	movff	cmdSetAddr@p2,strtoul@endptr
  6881  006DF4  0060  F204  F037   	movff	cmdSetAddr@p2+1,strtoul@endptr+1
  6882  006DFA  0E00               	movlw	0
  6883  006DFC  6E39               	movwf	(strtoul@base+1)^0,c
  6884  006DFE  0E10               	movlw	16
  6885  006E00  6E38               	movwf	strtoul@base^0,c
  6886  006E02  EC90  F03F         	call	_strtoul	;wreg free
  6887  006E06  0060  F0D0  F084   	movff	?_strtoul,cmdSetAddr@tempaddr
  6888  006E0C  0060  F0D4  F085   	movff	?_strtoul+1,cmdSetAddr@tempaddr+1
  6889                           
  6890                           ;../app/app_src/application.c: 315:  if((tempaddr != 0x0000) && (tempaddr != 0xFFFF)){
  6891  006E12  0100               	movlb	0	; () banked
  6892  006E14  5184               	movf	cmdSetAddr@tempaddr& (0+255),w,b
  6893  006E16  1185               	iorwf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6894  006E18  B4D8               	btfsc	status,2,c
  6895  006E1A  D012               	goto	l16391
  6896                           
  6897                           ; BSR set to: 0
  6898  006E1C  2984               	incf	cmdSetAddr@tempaddr& (0+255),w,b
  6899  006E1E  E103               	bnz	u16750
  6900  006E20  2985               	incf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6901  006E22  B4D8               	btfsc	status,2,c
  6902  006E24  D00D               	goto	l16391
  6903  006E26                     u16750:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;../app/app_src/application.c: 316:   currentAddr0 = (uint8_t)(tempaddr >> 8);
  6907  006E26  0060  F214  F1EE   	movff	cmdSetAddr@tempaddr+1,_currentAddr0
  6908                           
  6909                           ;../app/app_src/application.c: 317:   currentAddr1 = (uint8_t)(tempaddr & 0xFF);
  6910  006E2C  0060  F210  F1ED   	movff	cmdSetAddr@tempaddr,_currentAddr1
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;../app/app_src/application.c: 318:   printf("OK\r\n");
  6914  006E32  0ED7               	movlw	low STR_13
  6915  006E34  6F76               	movwf	printf@fmt& (0+255),b
  6916  006E36  0EFF               	movlw	high STR_13
  6917  006E38  6F77               	movwf	(printf@fmt+1)& (0+255),b
  6918  006E3A  ECA8  F044         	call	_printf	;wreg free
  6919                           
  6920                           ;../app/app_src/application.c: 319:  }
  6921  006E3E  0012               	return	
  6922  006E40                     l16391:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;../app/app_src/application.c: 321:   printf("NOT OK:%u\r\n", NOT_VADLID_ADDR);
  6926  006E40  0ECC               	movlw	low STR_4
  6927  006E42  6F76               	movwf	printf@fmt& (0+255),b
  6928  006E44  0EFE               	movlw	high STR_4
  6929  006E46  6F77               	movwf	(printf@fmt+1)& (0+255),b
  6930  006E48  0E05               	movlw	5
  6931  006E4A  6F78               	movwf	(?_printf+2)& (0+255),b
  6932  006E4C  ECA8  F044         	call	_printf	;wreg free
  6933                           
  6934                           ; BSR set to: 1
  6935  006E50  0012               	return		;funcret
  6936  006E52                     __end_of_cmdSetAddr:
  6937                           	opt callstack 0
  6938                           
  6939 ;; *************** function _cmdSetAES *****************
  6940 ;; Defined at:
  6941 ;;		line 449 in file "../app/app_src/application.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6944 ;;		 -> atCommand(80), 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  temp            3   66[BANK0 ] unsigned char [3]
  6947 ;;  p2              2   64[BANK0 ] PTR unsigned char 
  6948 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  6949 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6950 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6951 ;;  byte            1   70[BANK0 ] unsigned char 
  6952 ;;  i               1   73[BANK0 ] unsigned char 
  6953 ;;  AESstr         32   32[BANK0 ] unsigned char [32]
  6954 ;;  p1              2   71[BANK0 ] PTR unsigned char 
  6955 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6956 ;;  key_type        1   69[BANK0 ] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  1    wreg      void 
  6959 ;; Registers used:
  6960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 3F/1
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6969 ;;      Totals:         4      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6970 ;;Total ram usage:       46 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:   16
  6973 ;; This function calls:
  6974 ;;		_DATAEE_WriteByte_Platform
  6975 ;;		_memcpy
  6976 ;;		_printf
  6977 ;;		_strlen
  6978 ;;		_strstr
  6979 ;;		_strtoul
  6980 ;; This function is called by:
  6981 ;;		_executeATCommand
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text26
  6986  0030E6                     __ptext26:
  6987                           	opt callstack 0
  6988  0030E6                     _cmdSetAES:
  6989                           	opt callstack 12
  6990                           
  6991                           ;../app/app_src/application.c: 453:  p1 = strstr(atCommand,":") + 1;
  6992                           
  6993                           ; BSR set to: 1
  6994                           ;incstack = 0
  6995  0030E6  0E24               	movlw	low _atCommand
  6996  0030E8  6E0D               	movwf	strstr@h^0,c
  6997  0030EA  0E02               	movlw	high _atCommand
  6998  0030EC  6E0E               	movwf	(strstr@h+1)^0,c
  6999  0030EE  0E66               	movlw	low (STR_62+5)
  7000  0030F0  6E0F               	movwf	strstr@n^0,c
  7001  0030F2  0EFF               	movlw	high (STR_62+5)
  7002  0030F4  6E10               	movwf	(strstr@n+1)^0,c
  7003  0030F6  EC41  F02E         	call	_strstr	;wreg free
  7004  0030FA  0E01               	movlw	1
  7005  0030FC  240D               	addwf	?_strstr^0,w,c
  7006  0030FE  0100               	movlb	0	; () banked
  7007  003100  6FA7               	movwf	cmdSetAES@p1& (0+255),b
  7008  003102  0E00               	movlw	0
  7009  003104  200E               	addwfc	(?_strstr+1)^0,w,c
  7010  003106  6FA8               	movwf	(cmdSetAES@p1+1)& (0+255),b
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;../app/app_src/application.c: 454:     if(!p1){
  7014  003108  51A7               	movf	cmdSetAES@p1& (0+255),w,b
  7015  00310A  11A8               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  7016  00310C  A4D8               	btfss	status,2,c
  7017  00310E  D019               	goto	l16455
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;../app/app_src/application.c: 455:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7021  003110  0ECC               	movlw	low STR_4
  7022  003112  6F76               	movwf	printf@fmt& (0+255),b
  7023  003114  0EFE               	movlw	high STR_4
  7024  003116  6F77               	movwf	(printf@fmt+1)& (0+255),b
  7025  003118  0E09               	movlw	9
  7026  00311A  6F78               	movwf	(?_printf+2)& (0+255),b
  7027  00311C  ECA8  F044         	call	_printf	;wreg free
  7028  003120  0012               	return	
  7029  003122                     l16445:
  7030  003122  0E4E               	movlw	78
  7031  003124  D001               	goto	L1
  7032  003126                     l16447:
  7033  003126  0E41               	movlw	65
  7034  003128                     L1:
  7035  003128  0100               	movlb	0	; () banked
  7036  00312A  6FA5               	movwf	cmdSetAES@key_type& (0+255),b
  7037  00312C  D02D               	goto	l16457
  7038  00312E                     l16449:
  7039                           
  7040                           ;../app/app_src/application.c: 462:             printf("NOT OK:%u\r\n", ILLEGALPARAMETER
      +                          );
  7041  00312E  0ECC               	movlw	low STR_4
  7042  003130  0100               	movlb	0	; () banked
  7043  003132  6F76               	movwf	printf@fmt& (0+255),b
  7044  003134  0EFE               	movlw	high STR_4
  7045  003136  6F77               	movwf	(printf@fmt+1)& (0+255),b
  7046  003138  0E0D               	movlw	13
  7047  00313A  6F78               	movwf	(?_printf+2)& (0+255),b
  7048  00313C  ECA8  F044         	call	_printf	;wreg free
  7049  003140  0012               	return	
  7050  003142                     l16455:
  7051                           
  7052                           ; BSR set to: 0
  7053  003142  0060  F29F  FFF6   	movff	cmdSetAES@p1,tblptrl
  7054  003148  0060  F2A3  FFF7   	movff	cmdSetAES@p1+1,tblptrh
  7055  00314E  0E00               	movlw	low (__mediumconst shr (0+16))
  7056  003150  6EF8               	movwf	tblptru,c
  7057  003152  0E0F               	movlw	(high __ramtop+-1)
  7058  003154  64F7               	cpfsgt	tblptrh,c
  7059  003156  D003               	bra	u16787
  7060  003158  0008               	tblrd		*
  7061  00315A  50F5               	movf	tablat,w,c
  7062  00315C  D007               	bra	u16780
  7063  00315E                     u16787:
  7064  00315E  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7065  003164  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7066  00316A  50EF               	movf	indf0,w,c
  7067  00316C                     u16780:
  7068  00316C  6E5A               	movwf	??_cmdSetAES^0,c
  7069  00316E  6A5B               	clrf	(??_cmdSetAES+1)^0,c
  7070                           
  7071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7072                           ; Switch size 1, requested type "simple"
  7073                           ; Number of cases is 1, Range of values is 0 to 0
  7074                           ; switch strategies available:
  7075                           ; Name         Instructions Cycles
  7076                           ; simple_byte            4     3 (average)
  7077                           ;	Chosen strategy is simple_byte
  7078  003170  505B               	movf	(??_cmdSetAES+1)^0,w,c
  7079  003172  0A00               	xorlw	0	; case 0
  7080  003174  A4D8               	btfss	status,2,c
  7081  003176  D7DB               	goto	l16449
  7082                           
  7083                           ; Switch size 1, requested type "simple"
  7084                           ; Number of cases is 2, Range of values is 65 to 78
  7085                           ; switch strategies available:
  7086                           ; Name         Instructions Cycles
  7087                           ; simple_byte            7     4 (average)
  7088                           ;	Chosen strategy is simple_byte
  7089  003178  505A               	movf	??_cmdSetAES^0,w,c
  7090  00317A  0A41               	xorlw	65	; case 65
  7091  00317C  B4D8               	btfsc	status,2,c
  7092  00317E  D7D3               	goto	l16447
  7093  003180  0A0F               	xorlw	15	; case 78
  7094  003182  B4D8               	btfsc	status,2,c
  7095  003184  D7CE               	goto	l16445
  7096  003186  D7D3               	goto	l16449
  7097  003188                     l16457:
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;../app/app_src/application.c: 465:     p1 = strstr(atCommand,"=") + 1;
  7101  003188  0E24               	movlw	low _atCommand
  7102  00318A  6E0D               	movwf	strstr@h^0,c
  7103  00318C  0E02               	movlw	high _atCommand
  7104  00318E  6E0E               	movwf	(strstr@h+1)^0,c
  7105  003190  0EDF               	movlw	low (STR_18+3)
  7106  003192  6E0F               	movwf	strstr@n^0,c
  7107  003194  0EFF               	movlw	high (STR_18+3)
  7108  003196  6E10               	movwf	(strstr@n+1)^0,c
  7109  003198  EC41  F02E         	call	_strstr	;wreg free
  7110  00319C  0E01               	movlw	1
  7111  00319E  240D               	addwf	?_strstr^0,w,c
  7112  0031A0  0100               	movlb	0	; () banked
  7113  0031A2  6FA7               	movwf	cmdSetAES@p1& (0+255),b
  7114  0031A4  0E00               	movlw	0
  7115  0031A6  200E               	addwfc	(?_strstr+1)^0,w,c
  7116  0031A8  6FA8               	movwf	(cmdSetAES@p1+1)& (0+255),b
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;../app/app_src/application.c: 466:     if(!p1){
  7120  0031AA  51A7               	movf	cmdSetAES@p1& (0+255),w,b
  7121  0031AC  11A8               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  7122  0031AE  A4D8               	btfss	status,2,c
  7123  0031B0  D009               	goto	l16465
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;../app/app_src/application.c: 467:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7127  0031B2  0ECC               	movlw	low STR_4
  7128  0031B4  6F76               	movwf	printf@fmt& (0+255),b
  7129  0031B6  0EFE               	movlw	high STR_4
  7130  0031B8  6F77               	movwf	(printf@fmt+1)& (0+255),b
  7131  0031BA  0E09               	movlw	9
  7132  0031BC  6F78               	movwf	(?_printf+2)& (0+255),b
  7133  0031BE  ECA8  F044         	call	_printf	;wreg free
  7134  0031C2  0012               	return	
  7135  0031C4                     l16465:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;../app/app_src/application.c: 471:  if(strlen(p1) != 32){
  7139  0031C4  0060  F29C  F002   	movff	cmdSetAES@p1,strlen@s
  7140  0031CA  0060  F2A0  F003   	movff	cmdSetAES@p1+1,strlen@s+1
  7141  0031D0  EC80  F03E         	call	_strlen	;wreg free
  7142  0031D4  0E20               	movlw	32
  7143  0031D6  1802               	xorwf	?_strlen^0,w,c
  7144  0031D8  1003               	iorwf	(?_strlen+1)^0,w,c
  7145  0031DA  B4D8               	btfsc	status,2,c
  7146  0031DC  D00A               	goto	l16471
  7147                           
  7148                           ;../app/app_src/application.c: 472:   printf("NOT OK:%u\r\n",KEYLENERROR);
  7149  0031DE  0ECC               	movlw	low STR_4
  7150  0031E0  0100               	movlb	0	; () banked
  7151  0031E2  6F76               	movwf	printf@fmt& (0+255),b
  7152  0031E4  0EFE               	movlw	high STR_4
  7153  0031E6  6F77               	movwf	(printf@fmt+1)& (0+255),b
  7154  0031E8  0E08               	movlw	8
  7155  0031EA  6F78               	movwf	(?_printf+2)& (0+255),b
  7156  0031EC  ECA8  F044         	call	_printf	;wreg free
  7157  0031F0  0012               	return	
  7158  0031F2                     l16471:
  7159                           
  7160                           ;../app/app_src/application.c: 475:  memcpy(AESstr,p1,32);
  7161  0031F2  0E80               	movlw	low cmdSetAES@AESstr
  7162  0031F4  6E08               	movwf	memcpy@d1^0,c
  7163  0031F6  6A09               	clrf	(memcpy@d1+1)^0,c
  7164  0031F8  0060  F29C  F00A   	movff	cmdSetAES@p1,memcpy@s1
  7165  0031FE  0060  F2A0  F00B   	movff	cmdSetAES@p1+1,memcpy@s1+1
  7166  003204  0E00               	movlw	0
  7167  003206  6E0D               	movwf	(memcpy@n+1)^0,c
  7168  003208  0E20               	movlw	32
  7169  00320A  6E0C               	movwf	memcpy@n^0,c
  7170  00320C  EC50  F03A         	call	_memcpy	;wreg free
  7171                           
  7172                           ;../app/app_src/application.c: 477:  for(uint8_t i = 0; i < 16; i++){
  7173  003210  0E00               	movlw	0
  7174  003212  0100               	movlb	0	; () banked
  7175  003214  6FA9               	movwf	cmdSetAES@i& (0+255),b
  7176  003216                     l16479:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;../app/app_src/application.c: 478:   char temp[3];;../app/app_src/application.c: 479:  
      +                           char *p2;;../app/app_src/application.c: 480:   uint8_t byte;;../app/app_src/application
      +                          .c: 481:   memcpy(temp,0,sizeof(temp));
  7180  003216  0EA2               	movlw	low cmdSetAES@temp
  7181  003218  6E08               	movwf	memcpy@d1^0,c
  7182  00321A  6A09               	clrf	(memcpy@d1+1)^0,c
  7183  00321C  0E00               	movlw	0
  7184  00321E  6E0A               	movwf	memcpy@s1^0,c
  7185  003220  0E00               	movlw	0
  7186  003222  6E0B               	movwf	(memcpy@s1+1)^0,c
  7187  003224  0E00               	movlw	0
  7188  003226  6E0D               	movwf	(memcpy@n+1)^0,c
  7189  003228  0E03               	movlw	3
  7190  00322A  6E0C               	movwf	memcpy@n^0,c
  7191  00322C  EC50  F03A         	call	_memcpy	;wreg free
  7192                           
  7193                           ;../app/app_src/application.c: 482:   memcpy(temp,(AESstr + i*2),2);
  7194  003230  0EA2               	movlw	low cmdSetAES@temp
  7195  003232  6E08               	movwf	memcpy@d1^0,c
  7196  003234  6A09               	clrf	(memcpy@d1+1)^0,c
  7197  003236  0100               	movlb	0	; () banked
  7198  003238  51A9               	movf	cmdSetAES@i& (0+255),w,b
  7199  00323A  0D02               	mullw	2
  7200  00323C  50F3               	movf	243,w,c
  7201  00323E  0F80               	addlw	low cmdSetAES@AESstr
  7202  003240  6E5A               	movwf	??_cmdSetAES^0,c
  7203  003242  0060  F168  F00A   	movff	??_cmdSetAES,memcpy@s1
  7204  003248  6A0B               	clrf	(memcpy@s1+1)^0,c
  7205  00324A  0E00               	movlw	0
  7206  00324C  6E0D               	movwf	(memcpy@n+1)^0,c
  7207  00324E  0E02               	movlw	2
  7208  003250  6E0C               	movwf	memcpy@n^0,c
  7209  003252  EC50  F03A         	call	_memcpy	;wreg free
  7210                           
  7211                           ;../app/app_src/application.c: 483:   byte = (uint8_t)strtoul(temp,&p2,16);
  7212  003256  0EA2               	movlw	low cmdSetAES@temp
  7213  003258  6E34               	movwf	strtoul@s^0,c
  7214  00325A  6A35               	clrf	(strtoul@s+1)^0,c
  7215  00325C  0EA0               	movlw	low cmdSetAES@p2
  7216  00325E  6E36               	movwf	strtoul@endptr^0,c
  7217  003260  6A37               	clrf	(strtoul@endptr+1)^0,c
  7218  003262  0E00               	movlw	0
  7219  003264  6E39               	movwf	(strtoul@base+1)^0,c
  7220  003266  0E10               	movlw	16
  7221  003268  6E38               	movwf	strtoul@base^0,c
  7222  00326A  EC90  F03F         	call	_strtoul	;wreg free
  7223  00326E  5034               	movf	?_strtoul^0,w,c
  7224  003270  0100               	movlb	0	; () banked
  7225  003272  6FA6               	movwf	cmdSetAES@byte& (0+255),b
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;../app/app_src/application.c: 484:         if('A' == key_type){
  7229  003274  0E41               	movlw	65
  7230  003276  19A5               	xorwf	cmdSetAES@key_type& (0+255),w,b
  7231  003278  A4D8               	btfss	status,2,c
  7232  00327A  D015               	goto	l16491
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;../app/app_src/application.c: 485:             aes_key[i] = byte;
  7236  00327C  0E48               	movlw	low _aes_key
  7237  00327E  25A9               	addwf	cmdSetAES@i& (0+255),w,b
  7238  003280  6ED9               	movwf	fsr2l,c
  7239  003282  6ADA               	clrf	fsr2h,c
  7240  003284  0E01               	movlw	high _aes_key
  7241  003286  22DA               	addwfc	fsr2h,f,c
  7242  003288  0060  F29B  FFDF   	movff	cmdSetAES@byte,indf2
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;../app/app_src/application.c: 486:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7246  00328E  0E09               	movlw	9
  7247  003290  25A9               	addwf	cmdSetAES@i& (0+255),w,b
  7248  003292  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7249  003294  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7250  003296  0E00               	movlw	0
  7251  003298  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7252  00329A  0060  F298  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7253  0032A0  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  7254                           
  7255                           ;../app/app_src/application.c: 487:         }
  7256  0032A4  D014               	goto	l16495
  7257  0032A6                     l16491:
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;../app/app_src/application.c: 489:             net_key[i] = byte;
  7261  0032A6  0E14               	movlw	low _net_key
  7262  0032A8  25A9               	addwf	cmdSetAES@i& (0+255),w,b
  7263  0032AA  6ED9               	movwf	fsr2l,c
  7264  0032AC  6ADA               	clrf	fsr2h,c
  7265  0032AE  0E02               	movlw	high _net_key
  7266  0032B0  22DA               	addwfc	fsr2h,f,c
  7267  0032B2  0060  F29B  FFDF   	movff	cmdSetAES@byte,indf2
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;../app/app_src/application.c: 490:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7271  0032B8  0E23               	movlw	35
  7272  0032BA  25A9               	addwf	cmdSetAES@i& (0+255),w,b
  7273  0032BC  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7274  0032BE  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7275  0032C0  0E00               	movlw	0
  7276  0032C2  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7277  0032C4  0060  F298  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7278  0032CA  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  7279  0032CE                     l16495:
  7280                           
  7281                           ;../app/app_src/application.c: 492:  }
  7282  0032CE  0100               	movlb	0	; () banked
  7283  0032D0  2BA9               	incf	cmdSetAES@i& (0+255),f,b
  7284                           
  7285                           ; BSR set to: 0
  7286  0032D2  0E0F               	movlw	15
  7287  0032D4  65A9               	cpfsgt	cmdSetAES@i& (0+255),b
  7288  0032D6  D79F               	goto	l16479
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;../app/app_src/application.c: 493:  printf("OK\r\n");
  7292  0032D8  0ED7               	movlw	low STR_13
  7293  0032DA  6F76               	movwf	printf@fmt& (0+255),b
  7294  0032DC  0EFF               	movlw	high STR_13
  7295  0032DE  6F77               	movwf	(printf@fmt+1)& (0+255),b
  7296  0032E0  ECA8  F044         	call	_printf	;wreg free
  7297                           
  7298                           ; BSR set to: 1
  7299  0032E4  0012               	return		;funcret
  7300  0032E6                     __end_of_cmdSetAES:
  7301                           	opt callstack 0
  7302                           
  7303 ;; *************** function _cmdSendSink *****************
  7304 ;; Defined at:
  7305 ;;		line 428 in file "../app/app_src/application.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  7308 ;;		 -> atCommand(80), 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;		None
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		None
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;Total ram usage:        2 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    7
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_executeATCommand
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text27
  7335  008E54                     __ptext27:
  7336                           	opt callstack 0
  7337  008E54                     _cmdSendSink:
  7338                           	opt callstack 21
  7339                           
  7340                           ; BSR set to: 1
  7341                           ;incstack = 0
  7342  008E54  0012               	return		;funcret
  7343  008E56                     __end_of_cmdSendSink:
  7344                           	opt callstack 0
  7345                           
  7346 ;; *************** function _cmdSend *****************
  7347 ;; Defined at:
  7348 ;;		line 219 in file "../app/app_src/application.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  7351 ;;		 -> atCommand(80), 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  buf_id          1   43[BANK0 ] unsigned char 
  7354 ;;  destaddr        5   32[BANK0 ] unsigned char [5]
  7355 ;;  p1              2   41[BANK0 ] PTR unsigned char 
  7356 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  7357 ;;  p2              2   39[BANK0 ] PTR unsigned char 
  7358 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7359 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7360 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7361 ;;  tempaddr        2   37[BANK0 ] unsigned short 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 3F/1
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;Total ram usage:       16 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:   16
  7378 ;; This function calls:
  7379 ;;		_NWK_DataReq
  7380 ;;		_get_free_tx_buffer
  7381 ;;		_memcpy
  7382 ;;		_memset
  7383 ;;		_printf
  7384 ;;		_strlen
  7385 ;;		_strstr
  7386 ;;		_strtoul
  7387 ;; This function is called by:
  7388 ;;		_executeATCommand
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text28
  7393  002826                     __ptext28:
  7394                           	opt callstack 0
  7395  002826                     _cmdSend:
  7396                           	opt callstack 12
  7397                           
  7398                           ;../app/app_src/application.c: 220:  uint16_t tempaddr;;../app/app_src/application.c: 22
      +                          1:  char *p1,*p2;;../app/app_src/application.c: 222:  char destaddr[5];;../app/app_src/a
      +                          pplication.c: 223:         destaddr[4] = 0;
  7399                           
  7400                           ;incstack = 0
  7401  002826  0E00               	movlw	0
  7402  002828  0100               	movlb	0	; () banked
  7403  00282A  6F84               	movwf	(cmdSend@destaddr+4)& (0+255),b
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;../app/app_src/application.c: 224:  p1 = strstr(cmd,":") + 1;
  7407  00282C  0060  F160  F00D   	movff	cmdSend@cmd,strstr@h
  7408  002832  0060  F164  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7409  002838  0E66               	movlw	low (STR_62+5)
  7410  00283A  6E0F               	movwf	strstr@n^0,c
  7411  00283C  0EFF               	movlw	high (STR_62+5)
  7412  00283E  6E10               	movwf	(strstr@n+1)^0,c
  7413  002840  EC41  F02E         	call	_strstr	;wreg free
  7414  002844  0E01               	movlw	1
  7415  002846  240D               	addwf	?_strstr^0,w,c
  7416  002848  0100               	movlb	0	; () banked
  7417  00284A  6F89               	movwf	cmdSend@p1& (0+255),b
  7418  00284C  0E00               	movlw	0
  7419  00284E  200E               	addwfc	(?_strstr+1)^0,w,c
  7420  002850  6F8A               	movwf	(cmdSend@p1+1)& (0+255),b
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;../app/app_src/application.c: 225:  memcpy(destaddr,p1,4);
  7424  002852  0E80               	movlw	low cmdSend@destaddr
  7425  002854  6E08               	movwf	memcpy@d1^0,c
  7426  002856  6A09               	clrf	(memcpy@d1+1)^0,c
  7427  002858  0060  F224  F00A   	movff	cmdSend@p1,memcpy@s1
  7428  00285E  0060  F228  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7429  002864  0E00               	movlw	0
  7430  002866  6E0D               	movwf	(memcpy@n+1)^0,c
  7431  002868  0E04               	movlw	4
  7432  00286A  6E0C               	movwf	memcpy@n^0,c
  7433  00286C  EC50  F03A         	call	_memcpy	;wreg free
  7434                           
  7435                           ;../app/app_src/application.c: 227:  tempaddr = strtoul(destaddr,&p2,16);
  7436  002870  0E80               	movlw	low cmdSend@destaddr
  7437  002872  6E34               	movwf	strtoul@s^0,c
  7438  002874  6A35               	clrf	(strtoul@s+1)^0,c
  7439  002876  0E87               	movlw	low cmdSend@p2
  7440  002878  6E36               	movwf	strtoul@endptr^0,c
  7441  00287A  6A37               	clrf	(strtoul@endptr+1)^0,c
  7442  00287C  0E00               	movlw	0
  7443  00287E  6E39               	movwf	(strtoul@base+1)^0,c
  7444  002880  0E10               	movlw	16
  7445  002882  6E38               	movwf	strtoul@base^0,c
  7446  002884  EC90  F03F         	call	_strtoul	;wreg free
  7447  002888  0060  F0D0  F085   	movff	?_strtoul,cmdSend@tempaddr
  7448  00288E  0060  F0D4  F086   	movff	?_strtoul+1,cmdSend@tempaddr+1
  7449                           
  7450                           ;../app/app_src/application.c: 229:  p1 = strstr(cmd,"=") + 1;
  7451  002894  0060  F160  F00D   	movff	cmdSend@cmd,strstr@h
  7452  00289A  0060  F164  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7453  0028A0  0EDF               	movlw	low (STR_18+3)
  7454  0028A2  6E0F               	movwf	strstr@n^0,c
  7455  0028A4  0EFF               	movlw	high (STR_18+3)
  7456  0028A6  6E10               	movwf	(strstr@n+1)^0,c
  7457  0028A8  EC41  F02E         	call	_strstr	;wreg free
  7458  0028AC  0E01               	movlw	1
  7459  0028AE  240D               	addwf	?_strstr^0,w,c
  7460  0028B0  0100               	movlb	0	; () banked
  7461  0028B2  6F89               	movwf	cmdSend@p1& (0+255),b
  7462  0028B4  0E00               	movlw	0
  7463  0028B6  200E               	addwfc	(?_strstr+1)^0,w,c
  7464  0028B8  6F8A               	movwf	(cmdSend@p1+1)& (0+255),b
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;../app/app_src/application.c: 230:  if(strlen(p1) > 64){
  7468  0028BA  0060  F224  F002   	movff	cmdSend@p1,strlen@s
  7469  0028C0  0060  F228  F003   	movff	cmdSend@p1+1,strlen@s+1
  7470  0028C6  EC80  F03E         	call	_strlen	;wreg free
  7471  0028CA  5003               	movf	(?_strlen+1)^0,w,c
  7472  0028CC  E104               	bnz	u16690
  7473  0028CE  0E41               	movlw	65
  7474  0028D0  5C02               	subwf	?_strlen^0,w,c
  7475  0028D2  A0D8               	btfss	status,0,c
  7476  0028D4  D00A               	goto	l16299
  7477  0028D6                     u16690:
  7478                           
  7479                           ;../app/app_src/application.c: 231:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  7480  0028D6  0ECC               	movlw	low STR_4
  7481  0028D8  0100               	movlb	0	; () banked
  7482  0028DA  6F76               	movwf	printf@fmt& (0+255),b
  7483  0028DC  0EFE               	movlw	high STR_4
  7484  0028DE  6F77               	movwf	(printf@fmt+1)& (0+255),b
  7485  0028E0  0E07               	movlw	7
  7486  0028E2  6F78               	movwf	(?_printf+2)& (0+255),b
  7487  0028E4  ECA8  F044         	call	_printf	;wreg free
  7488                           
  7489                           ;../app/app_src/application.c: 232:  }
  7490  0028E8  0012               	return	
  7491  0028EA                     l16299:
  7492                           
  7493                           ;../app/app_src/application.c: 234:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 235:         if(!get_free_tx_buffer(&buf_id)){
  7494  0028EA  0E8B               	movlw	low cmdSend@buf_id
  7495  0028EC  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  7496  0028EE  EC00  F03C         	call	_get_free_tx_buffer	;wreg free
  7497  0028F2  0900               	iorlw	0
  7498  0028F4  A4D8               	btfss	status,2,c
  7499  0028F6  D00A               	goto	l16305
  7500                           
  7501                           ;../app/app_src/application.c: 236:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  7502  0028F8  0ECC               	movlw	low STR_4
  7503  0028FA  0100               	movlb	0	; () banked
  7504  0028FC  6F76               	movwf	printf@fmt& (0+255),b
  7505  0028FE  0EFE               	movlw	high STR_4
  7506  002900  6F77               	movwf	(printf@fmt+1)& (0+255),b
  7507  002902  0E11               	movlw	17
  7508  002904  6F78               	movwf	(?_printf+2)& (0+255),b
  7509  002906  ECA8  F044         	call	_printf	;wreg free
  7510  00290A  0012               	return	
  7511  00290C                     l16305:
  7512                           
  7513                           ;../app/app_src/application.c: 239:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  7514  00290C  0100               	movlb	0	; () banked
  7515  00290E  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7516  002910  0D83               	mullw	131
  7517  002912  0E80               	movlw	low (_tx_buffer+22)
  7518  002914  24F3               	addwf	243,w,c
  7519  002916  6E02               	movwf	memset@dest^0,c
  7520  002918  0E08               	movlw	high (_tx_buffer+22)
  7521  00291A  20F4               	addwfc	prodh,w,c
  7522  00291C  6E03               	movwf	(memset@dest+1)^0,c
  7523  00291E  0E00               	movlw	0
  7524  002920  6E05               	movwf	(memset@c+1)^0,c
  7525  002922  0E00               	movlw	0
  7526  002924  6E04               	movwf	memset@c^0,c
  7527  002926  0E00               	movlw	0
  7528  002928  6E07               	movwf	(memset@n+1)^0,c
  7529  00292A  0E6D               	movlw	109
  7530  00292C  6E06               	movwf	memset@n^0,c
  7531  00292E  EC34  F022         	call	_memset	;wreg free
  7532                           
  7533                           ;../app/app_src/application.c: 240:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  7534  002932  0100               	movlb	0	; () banked
  7535  002934  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7536  002936  0D83               	mullw	131
  7537  002938  0E80               	movlw	low (_tx_buffer+22)
  7538  00293A  24F3               	addwf	243,w,c
  7539  00293C  6E08               	movwf	memcpy@d1^0,c
  7540  00293E  0E08               	movlw	high (_tx_buffer+22)
  7541  002940  20F4               	addwfc	prodh,w,c
  7542  002942  6E09               	movwf	(memcpy@d1+1)^0,c
  7543  002944  0060  F224  F00A   	movff	cmdSend@p1,memcpy@s1
  7544  00294A  0060  F228  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7545  002950  0060  F224  F002   	movff	cmdSend@p1,strlen@s
  7546  002956  0060  F228  F003   	movff	cmdSend@p1+1,strlen@s+1
  7547  00295C  EC80  F03E         	call	_strlen	;wreg free
  7548  002960  0060  F008  F00C   	movff	?_strlen,memcpy@n
  7549  002966  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  7550  00296C  EC50  F03A         	call	_memcpy	;wreg free
  7551                           
  7552                           ;../app/app_src/application.c: 241:   tx_buffer[buf_id].nwkDataReq.dstAddr = tempaddr;
  7553  002970  0100               	movlb	0	; () banked
  7554  002972  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7555  002974  0D83               	mullw	131
  7556  002976  0E72               	movlw	low (_tx_buffer+8)
  7557  002978  24F3               	addwf	243,w,c
  7558  00297A  6ED9               	movwf	fsr2l,c
  7559  00297C  0E08               	movlw	high (_tx_buffer+8)
  7560  00297E  20F4               	addwfc	prodh,w,c
  7561  002980  6EDA               	movwf	fsr2h,c
  7562  002982  0060  F217  FFDE   	movff	cmdSend@tempaddr,postinc2
  7563  002988  0060  F21B  FFDD   	movff	cmdSend@tempaddr+1,postdec2
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;../app/app_src/application.c: 242:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  7567  00298E  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7568  002990  0D83               	mullw	131
  7569  002992  0E74               	movlw	low (_tx_buffer+10)
  7570  002994  24F3               	addwf	243,w,c
  7571  002996  6ED9               	movwf	fsr2l,c
  7572  002998  0E08               	movlw	high (_tx_buffer+10)
  7573  00299A  20F4               	addwfc	prodh,w,c
  7574  00299C  6EDA               	movwf	fsr2h,c
  7575  00299E  0E01               	movlw	1
  7576  0029A0  6EDF               	movwf	indf2,c
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;../app/app_src/application.c: 243:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  7580  0029A2  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7581  0029A4  0D83               	mullw	131
  7582  0029A6  0E75               	movlw	low (_tx_buffer+11)
  7583  0029A8  24F3               	addwf	243,w,c
  7584  0029AA  6ED9               	movwf	fsr2l,c
  7585  0029AC  0E08               	movlw	high (_tx_buffer+11)
  7586  0029AE  20F4               	addwfc	prodh,w,c
  7587  0029B0  6EDA               	movwf	fsr2h,c
  7588  0029B2  0E01               	movlw	1
  7589  0029B4  6EDF               	movwf	indf2,c
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;../app/app_src/application.c: 244:         tx_buffer[buf_id].nwkDataReq.options = NWK_O
      +                          PT_ACK_REQUEST;
  7593  0029B6  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7594  0029B8  0D83               	mullw	131
  7595  0029BA  0E76               	movlw	low (_tx_buffer+12)
  7596  0029BC  24F3               	addwf	243,w,c
  7597  0029BE  6ED9               	movwf	fsr2l,c
  7598  0029C0  0E08               	movlw	high (_tx_buffer+12)
  7599  0029C2  20F4               	addwfc	prodh,w,c
  7600  0029C4  6EDA               	movwf	fsr2h,c
  7601  0029C6  0E01               	movlw	1
  7602  0029C8  6EDF               	movwf	indf2,c
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;../app/app_src/application.c: 245:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  7606  0029CA  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7607  0029CC  0D83               	mullw	131
  7608  0029CE  0E6A               	movlw	low _tx_buffer
  7609  0029D0  6E5A               	movwf	??_cmdSend^0,c
  7610  0029D2  0E08               	movlw	high _tx_buffer
  7611  0029D4  6E5B               	movwf	(??_cmdSend+1)^0,c
  7612  0029D6  0E16               	movlw	22
  7613  0029D8  265A               	addwf	??_cmdSend^0,f,c
  7614  0029DA  0E00               	movlw	0
  7615  0029DC  225B               	addwfc	(??_cmdSend+1)^0,f,c
  7616  0029DE  50F3               	movf	243,w,c
  7617  0029E0  265A               	addwf	??_cmdSend^0,f,c
  7618  0029E2  50F4               	movf	244,w,c
  7619  0029E4  225B               	addwfc	(??_cmdSend+1)^0,f,c
  7620  0029E6  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7621  0029E8  0D83               	mullw	131
  7622  0029EA  0E79               	movlw	low (_tx_buffer+15)
  7623  0029EC  24F3               	addwf	243,w,c
  7624  0029EE  6ED9               	movwf	fsr2l,c
  7625  0029F0  0E08               	movlw	high (_tx_buffer+15)
  7626  0029F2  20F4               	addwfc	prodh,w,c
  7627  0029F4  6EDA               	movwf	fsr2h,c
  7628  0029F6  0060  F16B  FFDE   	movff	??_cmdSend,postinc2
  7629  0029FC  0060  F16F  FFDD   	movff	??_cmdSend+1,postdec2
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;../app/app_src/application.c: 246:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  7633  002A02  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7634  002A04  0D83               	mullw	131
  7635  002A06  0E7B               	movlw	low (_tx_buffer+17)
  7636  002A08  24F3               	addwf	243,w,c
  7637  002A0A  6ED9               	movwf	fsr2l,c
  7638  002A0C  0E08               	movlw	high (_tx_buffer+17)
  7639  002A0E  20F4               	addwfc	prodh,w,c
  7640  002A10  6EDA               	movwf	fsr2h,c
  7641  002A12  0060  F224  F002   	movff	cmdSend@p1,strlen@s
  7642  002A18  0060  F228  F003   	movff	cmdSend@p1+1,strlen@s+1
  7643  002A1E  EC80  F03E         	call	_strlen	;wreg free
  7644  002A22  5002               	movf	?_strlen^0,w,c
  7645  002A24  6EDF               	movwf	indf2,c
  7646                           
  7647                           ;../app/app_src/application.c: 247:         tx_buffer[buf_id].nwkDataReq.confirm = appDa
      +                          taConf;
  7648  002A26  0100               	movlb	0	; () banked
  7649  002A28  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7650  002A2A  0D83               	mullw	131
  7651  002A2C  0E7C               	movlw	low (_tx_buffer+18)
  7652  002A2E  24F3               	addwf	243,w,c
  7653  002A30  6ED9               	movwf	fsr2l,c
  7654  002A32  0E08               	movlw	high (_tx_buffer+18)
  7655  002A34  20F4               	addwfc	prodh,w,c
  7656  002A36  6EDA               	movwf	fsr2h,c
  7657  002A38  0E72               	movlw	low _appDataConf
  7658  002A3A  6EDE               	movwf	postinc2,c
  7659  002A3C  0E89               	movlw	high _appDataConf
  7660  002A3E  6EDD               	movwf	postdec2,c
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;../app/app_src/application.c: 248:         tx_buffer[buf_id].msgid = msgIDCounter++;
  7664  002A40  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7665  002A42  0D83               	mullw	131
  7666  002A44  0E6C               	movlw	low (_tx_buffer+2)
  7667  002A46  24F3               	addwf	243,w,c
  7668  002A48  6ED9               	movwf	fsr2l,c
  7669  002A4A  0E08               	movlw	high (_tx_buffer+2)
  7670  002A4C  20F4               	addwfc	prodh,w,c
  7671  002A4E  6EDA               	movwf	fsr2h,c
  7672  002A50  0060  F60B  FFDF   	movff	_msgIDCounter,indf2
  7673                           
  7674                           ; BSR set to: 0
  7675  002A56  0101               	movlb	1	; () banked
  7676  002A58  2B82               	incf	_msgIDCounter& (0+255),f,b
  7677                           
  7678                           ; BSR set to: 1
  7679                           ;../app/app_src/application.c: 249:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  7680  002A5A  0100               	movlb	0	; () banked
  7681  002A5C  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7682  002A5E  0D83               	mullw	131
  7683  002A60  0E6D               	movlw	low (_tx_buffer+3)
  7684  002A62  24F3               	addwf	243,w,c
  7685  002A64  6E02               	movwf	NWK_DataReq@req^0,c
  7686  002A66  0E08               	movlw	high (_tx_buffer+3)
  7687  002A68  20F4               	addwfc	prodh,w,c
  7688  002A6A  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  7689  002A6C  ECD1  F039         	call	_NWK_DataReq	;wreg free
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;../app/app_src/application.c: 250:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  7693  002A70  0ED0               	movlw	low (STR_4+4)
  7694  002A72  6F76               	movwf	printf@fmt& (0+255),b
  7695  002A74  0EFE               	movlw	high (STR_4+4)
  7696  002A76  6F77               	movwf	(printf@fmt+1)& (0+255),b
  7697  002A78  518B               	movf	cmdSend@buf_id& (0+255),w,b
  7698  002A7A  0D83               	mullw	131
  7699  002A7C  0E6C               	movlw	low (_tx_buffer+2)
  7700  002A7E  24F3               	addwf	243,w,c
  7701  002A80  6ED9               	movwf	fsr2l,c
  7702  002A82  0E08               	movlw	high (_tx_buffer+2)
  7703  002A84  20F4               	addwfc	prodh,w,c
  7704  002A86  6EDA               	movwf	fsr2h,c
  7705  002A88  50DF               	movf	indf2,w,c
  7706  002A8A  6E5A               	movwf	??_cmdSend^0,c
  7707  002A8C  505A               	movf	??_cmdSend^0,w,c
  7708  002A8E  6F78               	movwf	(?_printf+2)& (0+255),b
  7709  002A90  6B79               	clrf	(?_printf+3)& (0+255),b
  7710  002A92  ECA8  F044         	call	_printf	;wreg free
  7711                           
  7712                           ; BSR set to: 1
  7713  002A96  0012               	return		;funcret
  7714  002A98                     __end_of_cmdSend:
  7715                           	opt callstack 0
  7716                           
  7717 ;; *************** function _strtoul *****************
  7718 ;; Defined at:
  7719 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtoul.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  s               2   51[COMRAM] PTR const unsigned char 
  7722 ;;		 -> STR_55(2), STR_54(2), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
  7723 ;;		 -> cmdSetAES@temp(3), atCommand(80), NULL(0), cmdSend@destaddr(5), 
  7724 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  7725 ;;		 -> cmdSetTX@p2(2), cmdSetRFCH@p2(2), cmdSetAES@p2(2), NULL(0), 
  7726 ;;		 -> cmdSend@p2(2), 
  7727 ;;  base            2   55[COMRAM] int 
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  4   51[COMRAM] unsigned long 
  7732 ;; Registers used:
  7733 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7739 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;Total ram usage:        6 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; Hardware stack levels required when called:   10
  7746 ;; This function calls:
  7747 ;;		___strtoxl
  7748 ;; This function is called by:
  7749 ;;		_cmdSend
  7750 ;;		_cmdSetAddr
  7751 ;;		_cmdSetNaddr
  7752 ;;		_cmdSetAES
  7753 ;;		_cmdSetRFCH
  7754 ;;		_cmdSetTX
  7755 ;;		_cmdSetBaud
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text29
  7760  007F20                     __ptext29:
  7761                           	opt callstack 0
  7762  007F20                     _strtoul:
  7763                           	opt callstack 17
  7764                           
  7765                           ; BSR set to: 1
  7766                           ;incstack = 0
  7767  007F20  0060  F0D0  F010   	movff	strtoul@s,___strtoxl@s
  7768  007F26  0060  F0D4  F011   	movff	strtoul@s+1,___strtoxl@s+1
  7769  007F2C  0060  F0D8  F012   	movff	strtoul@endptr,___strtoxl@endptr
  7770  007F32  0060  F0DC  F013   	movff	strtoul@endptr+1,___strtoxl@endptr+1
  7771  007F38  0060  F0E0  F014   	movff	strtoul@base,___strtoxl@base
  7772  007F3E  0060  F0E4  F015   	movff	strtoul@base+1,___strtoxl@base+1
  7773  007F44  0E00               	movlw	0
  7774  007F46  6E16               	movwf	___strtoxl@is_signed^0,c
  7775  007F48  EC8F  F005         	call	___strtoxl	;wreg free
  7776  007F4C  0060  F040  F034   	movff	?___strtoxl,?_strtoul
  7777  007F52  0060  F044  F035   	movff	?___strtoxl+1,?_strtoul+1
  7778  007F58  0060  F048  F036   	movff	?___strtoxl+2,?_strtoul+2
  7779  007F5E  0060  F04C  F037   	movff	?___strtoxl+3,?_strtoul+3
  7780  007F64  0012               	return		;funcret
  7781  007F66                     __end_of_strtoul:
  7782                           	opt callstack 0
  7783                           
  7784 ;; *************** function ___strtoxl *****************
  7785 ;; Defined at:
  7786 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__strtoxl.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7789 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7790 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7791 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7792 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
  7793 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), cmdSetTX@p2(2), cmdSetRFCH@p2(2), 
  7794 ;;		 -> cmdSetAES@p2(2), NULL(0), cmdSend@p2(2), 
  7795 ;;  base            2   19[COMRAM] int 
  7796 ;;  is_signed       1   21[COMRAM] unsigned char 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;  a               4   44[COMRAM] unsigned long 
  7799 ;;  limit           4   38[COMRAM] unsigned long 
  7800 ;;  prev_a          4   26[COMRAM] unsigned long 
  7801 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  7802 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7803 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7804 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7805 ;;  c               1   50[COMRAM] unsigned char 
  7806 ;;  skip            1   43[COMRAM] unsigned char 
  7807 ;;  sign            1   42[COMRAM] unsigned char 
  7808 ;;  conv_done       1   37[COMRAM] unsigned char 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  4   15[COMRAM] unsigned long 
  7811 ;; Registers used:
  7812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7818 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;Total ram usage:       36 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    9
  7825 ;; This function calls:
  7826 ;;		___lmul
  7827 ;;		_isalpha
  7828 ;;		_isdigit
  7829 ;;		_isspace
  7830 ;;		_toupper
  7831 ;; This function is called by:
  7832 ;;		_strtol
  7833 ;;		_strtoul
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text30
  7838  000B1E                     __ptext30:
  7839                           	opt callstack 0
  7840  000B1E                     ___strtoxl:
  7841                           	opt callstack 17
  7842                           
  7843                           ;incstack = 0
  7844  000B1E  0E00               	movlw	0
  7845  000B20  6E2D               	movwf	___strtoxl@a^0,c
  7846  000B22  0E00               	movlw	0
  7847  000B24  6E2E               	movwf	(___strtoxl@a+1)^0,c
  7848  000B26  0E00               	movlw	0
  7849  000B28  6E2F               	movwf	(___strtoxl@a+2)^0,c
  7850  000B2A  0E00               	movlw	0
  7851  000B2C  6E30               	movwf	(___strtoxl@a+3)^0,c
  7852  000B2E  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  7853  000B34  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  7854  000B3A  5031               	movf	___strtoxl@cp^0,w,c
  7855  000B3C  1032               	iorwf	(___strtoxl@cp+1)^0,w,c
  7856  000B3E  B4D8               	btfsc	status,2,c
  7857  000B40  D1DF               	goto	l15793
  7858  000B42  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7859  000B48  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7860  000B4E  0E00               	movlw	low (__mediumconst shr (0+16))
  7861  000B50  6EF8               	movwf	tblptru,c
  7862  000B52  0E0F               	movlw	(high __ramtop+-1)
  7863  000B54  64F7               	cpfsgt	tblptrh,c
  7864  000B56  D003               	bra	u15557
  7865  000B58  0008               	tblrd		*
  7866  000B5A  50F5               	movf	tablat,w,c
  7867  000B5C  D007               	bra	u15550
  7868  000B5E                     u15557:
  7869  000B5E  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7870  000B64  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7871  000B6A  50EF               	movf	indf0,w,c
  7872  000B6C                     u15550:
  7873  000B6C  0900               	iorlw	0
  7874  000B6E  B4D8               	btfsc	status,2,c
  7875  000B70  D1C7               	goto	l15793
  7876  000B72  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7877  000B78  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7878  000B7E  0E00               	movlw	low (__mediumconst shr (0+16))
  7879  000B80  6EF8               	movwf	tblptru,c
  7880  000B82  0E0F               	movlw	(high __ramtop+-1)
  7881  000B84  64F7               	cpfsgt	tblptrh,c
  7882  000B86  D003               	bra	u15577
  7883  000B88  0008               	tblrd		*
  7884  000B8A  50F5               	movf	tablat,w,c
  7885  000B8C  D007               	bra	u15570
  7886  000B8E                     u15577:
  7887  000B8E  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7888  000B94  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7889  000B9A  50EF               	movf	indf0,w,c
  7890  000B9C                     u15570:
  7891  000B9C  D017               	goto	u15580
  7892  000B9E                     l15691:
  7893  000B9E  4A31               	infsnz	___strtoxl@cp^0,f,c
  7894  000BA0  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7895  000BA2  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7896  000BA8  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7897  000BAE  0E00               	movlw	low (__mediumconst shr (0+16))
  7898  000BB0  6EF8               	movwf	tblptru,c
  7899  000BB2  0E0F               	movlw	(high __ramtop+-1)
  7900  000BB4  64F7               	cpfsgt	tblptrh,c
  7901  000BB6  D003               	bra	u15587
  7902  000BB8  0008               	tblrd		*
  7903  000BBA  50F5               	movf	tablat,w,c
  7904  000BBC  D007               	bra	u15580
  7905  000BBE                     u15587:
  7906  000BBE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7907  000BC4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7908  000BCA  50EF               	movf	indf0,w,c
  7909  000BCC                     u15580:
  7910  000BCC  6E33               	movwf	___strtoxl@c^0,c
  7911  000BCE  0E01               	movlw	1
  7912  000BD0  6E25               	movwf	___strtoxl$7911^0,c
  7913  000BD2  0E20               	movlw	32
  7914  000BD4  1833               	xorwf	___strtoxl@c^0,w,c
  7915  000BD6  B4D8               	btfsc	status,2,c
  7916  000BD8  D013               	goto	l15701
  7917  000BDA  0EF7               	movlw	247
  7918  000BDC  6E17               	movwf	??___strtoxl^0,c
  7919  000BDE  0EFF               	movlw	255
  7920  000BE0  6E18               	movwf	(??___strtoxl+1)^0,c
  7921  000BE2  5033               	movf	___strtoxl@c^0,w,c
  7922  000BE4  6E19               	movwf	(??___strtoxl+2)^0,c
  7923  000BE6  6A1A               	clrf	(??___strtoxl+3)^0,c
  7924  000BE8  5017               	movf	??___strtoxl^0,w,c
  7925  000BEA  2619               	addwf	(??___strtoxl+2)^0,f,c
  7926  000BEC  5018               	movf	(??___strtoxl+1)^0,w,c
  7927  000BEE  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7928  000BF0  501A               	movf	(??___strtoxl+3)^0,w,c
  7929  000BF2  E104               	bnz	u15600
  7930  000BF4  0E05               	movlw	5
  7931  000BF6  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7932  000BF8  A0D8               	btfss	status,0,c
  7933  000BFA  D002               	goto	l15701
  7934  000BFC                     u15600:
  7935  000BFC  0E00               	movlw	0
  7936  000BFE  6E25               	movwf	___strtoxl$7911^0,c
  7937  000C00                     l15701:
  7938  000C00  0060  F094  F01F   	movff	___strtoxl$7911,___strtoxl$7910
  7939  000C06  6A20               	clrf	(___strtoxl$7910+1)^0,c
  7940  000C08  501F               	movf	___strtoxl$7910^0,w,c
  7941  000C0A  1020               	iorwf	(___strtoxl$7910+1)^0,w,c
  7942  000C0C  A4D8               	btfss	status,2,c
  7943  000C0E  D7C7               	goto	l15691
  7944  000C10  0E00               	movlw	0
  7945  000C12  6E2B               	movwf	___strtoxl@sign^0,c
  7946  000C14  0E00               	movlw	0
  7947  000C16  6E26               	movwf	___strtoxl@conv_done^0,c
  7948  000C18  0E00               	movlw	0
  7949  000C1A  6E2C               	movwf	___strtoxl@skip^0,c
  7950  000C1C  0E2D               	movlw	45
  7951  000C1E  1833               	xorwf	___strtoxl@c^0,w,c
  7952  000C20  A4D8               	btfss	status,2,c
  7953  000C22  D01B               	goto	l15715
  7954  000C24  0E01               	movlw	1
  7955  000C26  6E2B               	movwf	___strtoxl@sign^0,c
  7956  000C28                     l15713:
  7957  000C28  4A31               	infsnz	___strtoxl@cp^0,f,c
  7958  000C2A  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7959  000C2C  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7960  000C32  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7961  000C38  0E00               	movlw	low (__mediumconst shr (0+16))
  7962  000C3A  6EF8               	movwf	tblptru,c
  7963  000C3C  0E0F               	movlw	(high __ramtop+-1)
  7964  000C3E  64F7               	cpfsgt	tblptrh,c
  7965  000C40  D003               	bra	u15637
  7966  000C42  0008               	tblrd		*
  7967  000C44  50F5               	movf	tablat,w,c
  7968  000C46  D007               	bra	u15630
  7969  000C48                     u15637:
  7970  000C48  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7971  000C4E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7972  000C54  50EF               	movf	indf0,w,c
  7973  000C56                     u15630:
  7974  000C56  6E33               	movwf	___strtoxl@c^0,c
  7975  000C58  D004               	goto	l15719
  7976  000C5A                     l15715:
  7977  000C5A  0E2B               	movlw	43
  7978  000C5C  1833               	xorwf	___strtoxl@c^0,w,c
  7979  000C5E  B4D8               	btfsc	status,2,c
  7980  000C60  D7E3               	goto	l15713
  7981  000C62                     l15719:
  7982  000C62  0E30               	movlw	48
  7983  000C64  1833               	xorwf	___strtoxl@c^0,w,c
  7984  000C66  A4D8               	btfss	status,2,c
  7985  000C68  D050               	goto	l15741
  7986  000C6A  4A31               	infsnz	___strtoxl@cp^0,f,c
  7987  000C6C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7988  000C6E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7989  000C74  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7990  000C7A  0E00               	movlw	low (__mediumconst shr (0+16))
  7991  000C7C  6EF8               	movwf	tblptru,c
  7992  000C7E  0E0F               	movlw	(high __ramtop+-1)
  7993  000C80  64F7               	cpfsgt	tblptrh,c
  7994  000C82  D003               	bra	u15667
  7995  000C84  0008               	tblrd		*
  7996  000C86  50F5               	movf	tablat,w,c
  7997  000C88  D007               	bra	u15660
  7998  000C8A                     u15667:
  7999  000C8A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8000  000C90  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8001  000C96  50EF               	movf	indf0,w,c
  8002  000C98                     u15660:
  8003  000C98  6E33               	movwf	___strtoxl@c^0,c
  8004  000C9A  5014               	movf	___strtoxl@base^0,w,c
  8005  000C9C  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8006  000C9E  B4D8               	btfsc	status,2,c
  8007  000CA0  D005               	goto	u15680
  8008  000CA2  0E10               	movlw	16
  8009  000CA4  1814               	xorwf	___strtoxl@base^0,w,c
  8010  000CA6  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8011  000CA8  A4D8               	btfss	status,2,c
  8012  000CAA  D025               	goto	l15735
  8013  000CAC                     u15680:
  8014  000CAC  0E78               	movlw	120
  8015  000CAE  1833               	xorwf	___strtoxl@c^0,w,c
  8016  000CB0  B4D8               	btfsc	status,2,c
  8017  000CB2  D004               	goto	u15700
  8018  000CB4  0E58               	movlw	88
  8019  000CB6  1833               	xorwf	___strtoxl@c^0,w,c
  8020  000CB8  A4D8               	btfss	status,2,c
  8021  000CBA  D01D               	goto	l15735
  8022  000CBC                     u15700:
  8023  000CBC  0E00               	movlw	0
  8024  000CBE  6E15               	movwf	(___strtoxl@base+1)^0,c
  8025  000CC0  0E10               	movlw	16
  8026  000CC2  6E14               	movwf	___strtoxl@base^0,c
  8027  000CC4  4A31               	infsnz	___strtoxl@cp^0,f,c
  8028  000CC6  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8029  000CC8  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8030  000CCE  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8031  000CD4  0E00               	movlw	low (__mediumconst shr (0+16))
  8032  000CD6  6EF8               	movwf	tblptru,c
  8033  000CD8  0E0F               	movlw	(high __ramtop+-1)
  8034  000CDA  64F7               	cpfsgt	tblptrh,c
  8035  000CDC  D003               	bra	u15717
  8036  000CDE  0008               	tblrd		*
  8037  000CE0  50F5               	movf	tablat,w,c
  8038  000CE2  D007               	bra	u15710
  8039  000CE4                     u15717:
  8040  000CE4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8041  000CEA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8042  000CF0  50EF               	movf	indf0,w,c
  8043  000CF2                     u15710:
  8044  000CF2  6E33               	movwf	___strtoxl@c^0,c
  8045  000CF4  D00A               	goto	l15741
  8046  000CF6                     l15735:
  8047  000CF6  0E01               	movlw	1
  8048  000CF8  6E26               	movwf	___strtoxl@conv_done^0,c
  8049  000CFA  5014               	movf	___strtoxl@base^0,w,c
  8050  000CFC  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8051  000CFE  A4D8               	btfss	status,2,c
  8052  000D00  D004               	goto	l15741
  8053  000D02  0E00               	movlw	0
  8054  000D04  6E15               	movwf	(___strtoxl@base+1)^0,c
  8055  000D06  0E08               	movlw	8
  8056  000D08  6E14               	movwf	___strtoxl@base^0,c
  8057  000D0A                     l15741:
  8058  000D0A  5014               	movf	___strtoxl@base^0,w,c
  8059  000D0C  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8060  000D0E  A4D8               	btfss	status,2,c
  8061  000D10  D004               	goto	l4081
  8062  000D12  0E00               	movlw	0
  8063  000D14  6E15               	movwf	(___strtoxl@base+1)^0,c
  8064  000D16  0E0A               	movlw	10
  8065  000D18  6E14               	movwf	___strtoxl@base^0,c
  8066  000D1A                     l4081:
  8067  000D1A  5016               	movf	___strtoxl@is_signed^0,w,c
  8068  000D1C  B4D8               	btfsc	status,2,c
  8069  000D1E  D014               	goto	l4082
  8070  000D20  502B               	movf	___strtoxl@sign^0,w,c
  8071  000D22  A4D8               	btfss	status,2,c
  8072  000D24  D008               	goto	l15749
  8073  000D26  0EFF               	movlw	255
  8074  000D28  6E27               	movwf	___strtoxl@limit^0,c
  8075  000D2A  0EFF               	movlw	255
  8076  000D2C  6E28               	movwf	(___strtoxl@limit+1)^0,c
  8077  000D2E  0EFF               	movlw	255
  8078  000D30  6E29               	movwf	(___strtoxl@limit+2)^0,c
  8079  000D32  0E7F               	movlw	127
  8080  000D34  D007               	goto	L2
  8081  000D36                     l15749:
  8082  000D36  0E00               	movlw	0
  8083  000D38  6E27               	movwf	___strtoxl@limit^0,c
  8084  000D3A  0E00               	movlw	0
  8085  000D3C  6E28               	movwf	(___strtoxl@limit+1)^0,c
  8086  000D3E  0E00               	movlw	0
  8087  000D40  6E29               	movwf	(___strtoxl@limit+2)^0,c
  8088  000D42  0E80               	movlw	128
  8089  000D44                     L2:
  8090  000D44  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  8091  000D46  D004               	goto	l4088
  8092  000D48                     l4082:
  8093  000D48  6827               	setf	___strtoxl@limit^0,c
  8094  000D4A  6828               	setf	(___strtoxl@limit+1)^0,c
  8095  000D4C  6829               	setf	(___strtoxl@limit+2)^0,c
  8096  000D4E  682A               	setf	(___strtoxl@limit+3)^0,c
  8097  000D50                     l4088:
  8098  000D50  0060  F0B4  F01B   	movff	___strtoxl@a,___strtoxl@prev_a
  8099  000D56  0060  F0B8  F01C   	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  8100  000D5C  0060  F0BC  F01D   	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  8101  000D62  0060  F0C0  F01E   	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  8102  000D68  0E9F               	movlw	159
  8103  000D6A  6E17               	movwf	??___strtoxl^0,c
  8104  000D6C  0EFF               	movlw	255
  8105  000D6E  6E18               	movwf	(??___strtoxl+1)^0,c
  8106  000D70  5033               	movf	___strtoxl@c^0,w,c
  8107  000D72  6E19               	movwf	(??___strtoxl+2)^0,c
  8108  000D74  6A1A               	clrf	(??___strtoxl+3)^0,c
  8109  000D76  0E20               	movlw	32
  8110  000D78  1219               	iorwf	(??___strtoxl+2)^0,f,c
  8111  000D7A  0E00               	movlw	0
  8112  000D7C  121A               	iorwf	(??___strtoxl+3)^0,f,c
  8113  000D7E  5017               	movf	??___strtoxl^0,w,c
  8114  000D80  2619               	addwf	(??___strtoxl+2)^0,f,c
  8115  000D82  5018               	movf	(??___strtoxl+1)^0,w,c
  8116  000D84  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8117  000D86  501A               	movf	(??___strtoxl+3)^0,w,c
  8118  000D88  E106               	bnz	u15760
  8119  000D8A  0E1A               	movlw	26
  8120  000D8C  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8121  000D8E  B0D8               	btfsc	status,0,c
  8122  000D90  D002               	goto	u15760
  8123  000D92  0E01               	movlw	1
  8124  000D94  D001               	goto	u15770
  8125  000D96                     u15760:
  8126  000D96  0E00               	movlw	0
  8127  000D98                     u15770:
  8128  000D98  6E21               	movwf	___strtoxl$7912^0,c
  8129  000D9A  6A22               	clrf	(___strtoxl$7912+1)^0,c
  8130  000D9C  5021               	movf	___strtoxl$7912^0,w,c
  8131  000D9E  1022               	iorwf	(___strtoxl$7912+1)^0,w,c
  8132  000DA0  B4D8               	btfsc	status,2,c
  8133  000DA2  D00A               	goto	l15759
  8134  000DA4  0060  F0CC  F008   	movff	___strtoxl@c,toupper@c
  8135  000DAA  6A09               	clrf	(toupper@c+1)^0,c
  8136  000DAC  EC57  F03E         	call	_toupper	;wreg free
  8137  000DB0  5008               	movf	?_toupper^0,w,c
  8138  000DB2  0FC9               	addlw	201
  8139  000DB4  6E33               	movwf	___strtoxl@c^0,c
  8140  000DB6  D01C               	goto	l15767
  8141  000DB8                     l15759:
  8142  000DB8  0ED0               	movlw	208
  8143  000DBA  6E17               	movwf	??___strtoxl^0,c
  8144  000DBC  0EFF               	movlw	255
  8145  000DBE  6E18               	movwf	(??___strtoxl+1)^0,c
  8146  000DC0  5033               	movf	___strtoxl@c^0,w,c
  8147  000DC2  6E19               	movwf	(??___strtoxl+2)^0,c
  8148  000DC4  6A1A               	clrf	(??___strtoxl+3)^0,c
  8149  000DC6  5017               	movf	??___strtoxl^0,w,c
  8150  000DC8  2619               	addwf	(??___strtoxl+2)^0,f,c
  8151  000DCA  5018               	movf	(??___strtoxl+1)^0,w,c
  8152  000DCC  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8153  000DCE  501A               	movf	(??___strtoxl+3)^0,w,c
  8154  000DD0  E106               	bnz	u15790
  8155  000DD2  0E0A               	movlw	10
  8156  000DD4  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8157  000DD6  B0D8               	btfsc	status,0,c
  8158  000DD8  D002               	goto	u15790
  8159  000DDA  0E01               	movlw	1
  8160  000DDC  D001               	goto	u15800
  8161  000DDE                     u15790:
  8162  000DDE  0E00               	movlw	0
  8163  000DE0                     u15800:
  8164  000DE0  6E23               	movwf	___strtoxl$7913^0,c
  8165  000DE2  6A24               	clrf	(___strtoxl$7913+1)^0,c
  8166  000DE4  5023               	movf	___strtoxl$7913^0,w,c
  8167  000DE6  1024               	iorwf	(___strtoxl$7913+1)^0,w,c
  8168  000DE8  B4D8               	btfsc	status,2,c
  8169  000DEA  D07C               	goto	l15787
  8170  000DEC  0E30               	movlw	48
  8171  000DEE  5E33               	subwf	___strtoxl@c^0,f,c
  8172  000DF0                     l15767:
  8173  000DF0  5033               	movf	___strtoxl@c^0,w,c
  8174  000DF2  6E17               	movwf	??___strtoxl^0,c
  8175  000DF4  6A18               	clrf	(??___strtoxl+1)^0,c
  8176  000DF6  5014               	movf	___strtoxl@base^0,w,c
  8177  000DF8  5C17               	subwf	??___strtoxl^0,w,c
  8178  000DFA  5018               	movf	(??___strtoxl+1)^0,w,c
  8179  000DFC  0A80               	xorlw	128
  8180  000DFE  6E19               	movwf	(??___strtoxl+2)^0,c
  8181  000E00  5015               	movf	(___strtoxl@base+1)^0,w,c
  8182  000E02  0A80               	xorlw	128
  8183  000E04  5819               	subwfb	(??___strtoxl+2)^0,w,c
  8184  000E06  B0D8               	btfsc	status,0,c
  8185  000E08  D06D               	goto	l15787
  8186  000E0A  502C               	movf	___strtoxl@skip^0,w,c
  8187  000E0C  A4D8               	btfss	status,2,c
  8188  000E0E  D04F               	goto	l15783
  8189  000E10  0060  F050  F002   	movff	___strtoxl@base,___lmul@multiplier
  8190  000E16  0060  F054  F003   	movff	___strtoxl@base+1,___lmul@multiplier+1
  8191  000E1C  0E00               	movlw	0
  8192  000E1E  BE03               	btfsc	(___lmul@multiplier+1)^0,7,c
  8193  000E20  0EFF               	movlw	-1
  8194  000E22  6E04               	movwf	(___lmul@multiplier+2)^0,c
  8195  000E24  6E05               	movwf	(___lmul@multiplier+3)^0,c
  8196  000E26  0060  F0B4  F006   	movff	___strtoxl@a,___lmul@multiplicand
  8197  000E2C  0060  F0B8  F007   	movff	___strtoxl@a+1,___lmul@multiplicand+1
  8198  000E32  0060  F0BC  F008   	movff	___strtoxl@a+2,___lmul@multiplicand+2
  8199  000E38  0060  F0C0  F009   	movff	___strtoxl@a+3,___lmul@multiplicand+3
  8200  000E3E  EC21  F03D         	call	___lmul	;wreg free
  8201  000E42  5033               	movf	___strtoxl@c^0,w,c
  8202  000E44  2402               	addwf	?___lmul^0,w,c
  8203  000E46  6E2D               	movwf	___strtoxl@a^0,c
  8204  000E48  0E00               	movlw	0
  8205  000E4A  2003               	addwfc	(?___lmul+1)^0,w,c
  8206  000E4C  6E2E               	movwf	(___strtoxl@a+1)^0,c
  8207  000E4E  0E00               	movlw	0
  8208  000E50  2004               	addwfc	(?___lmul+2)^0,w,c
  8209  000E52  6E2F               	movwf	(___strtoxl@a+2)^0,c
  8210  000E54  0E00               	movlw	0
  8211  000E56  2005               	addwfc	(?___lmul+3)^0,w,c
  8212  000E58  6E30               	movwf	(___strtoxl@a+3)^0,c
  8213  000E5A  501B               	movf	___strtoxl@prev_a^0,w,c
  8214  000E5C  5C2D               	subwf	___strtoxl@a^0,w,c
  8215  000E5E  501C               	movf	(___strtoxl@prev_a+1)^0,w,c
  8216  000E60  582E               	subwfb	(___strtoxl@a+1)^0,w,c
  8217  000E62  501D               	movf	(___strtoxl@prev_a+2)^0,w,c
  8218  000E64  582F               	subwfb	(___strtoxl@a+2)^0,w,c
  8219  000E66  501E               	movf	(___strtoxl@prev_a+3)^0,w,c
  8220  000E68  5830               	subwfb	(___strtoxl@a+3)^0,w,c
  8221  000E6A  A0D8               	btfss	status,0,c
  8222  000E6C  D00D               	goto	u15860
  8223  000E6E  5016               	movf	___strtoxl@is_signed^0,w,c
  8224  000E70  B4D8               	btfsc	status,2,c
  8225  000E72  D01D               	goto	l15783
  8226  000E74  502D               	movf	___strtoxl@a^0,w,c
  8227  000E76  5C27               	subwf	___strtoxl@limit^0,w,c
  8228  000E78  502E               	movf	(___strtoxl@a+1)^0,w,c
  8229  000E7A  5828               	subwfb	(___strtoxl@limit+1)^0,w,c
  8230  000E7C  502F               	movf	(___strtoxl@a+2)^0,w,c
  8231  000E7E  5829               	subwfb	(___strtoxl@limit+2)^0,w,c
  8232  000E80  5030               	movf	(___strtoxl@a+3)^0,w,c
  8233  000E82  582A               	subwfb	(___strtoxl@limit+3)^0,w,c
  8234  000E84  B0D8               	btfsc	status,0,c
  8235  000E86  D013               	goto	l15783
  8236  000E88                     u15860:
  8237  000E88  0060  F09C  F02D   	movff	___strtoxl@limit,___strtoxl@a
  8238  000E8E  0060  F0A0  F02E   	movff	___strtoxl@limit+1,___strtoxl@a+1
  8239  000E94  0060  F0A4  F02F   	movff	___strtoxl@limit+2,___strtoxl@a+2
  8240  000E9A  0060  F0A8  F030   	movff	___strtoxl@limit+3,___strtoxl@a+3
  8241  000EA0  0E00               	movlw	0
  8242  000EA2  0101               	movlb	1	; () banked
  8243  000EA4  6F66               	movwf	(_errno+1)& (0+255),b
  8244  000EA6  0E22               	movlw	34
  8245  000EA8  6F65               	movwf	_errno& (0+255),b
  8246  000EAA  0E01               	movlw	1
  8247  000EAC  6E2C               	movwf	___strtoxl@skip^0,c
  8248  000EAE                     l15783:
  8249  000EAE  4A31               	infsnz	___strtoxl@cp^0,f,c
  8250  000EB0  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8251  000EB2  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8252  000EB8  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8253  000EBE  0E00               	movlw	low (__mediumconst shr (0+16))
  8254  000EC0  6EF8               	movwf	tblptru,c
  8255  000EC2  0E0F               	movlw	(high __ramtop+-1)
  8256  000EC4  64F7               	cpfsgt	tblptrh,c
  8257  000EC6  D003               	bra	u15877
  8258  000EC8  0008               	tblrd		*
  8259  000ECA  50F5               	movf	tablat,w,c
  8260  000ECC  D007               	bra	u15870
  8261  000ECE                     u15877:
  8262  000ECE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8263  000ED4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8264  000EDA  50EF               	movf	indf0,w,c
  8265  000EDC                     u15870:
  8266  000EDC  6E33               	movwf	___strtoxl@c^0,c
  8267  000EDE  0E01               	movlw	1
  8268  000EE0  6E26               	movwf	___strtoxl@conv_done^0,c
  8269  000EE2  D736               	goto	l4088
  8270  000EE4                     l15787:
  8271  000EE4  502C               	movf	___strtoxl@skip^0,w,c
  8272  000EE6  A4D8               	btfss	status,2,c
  8273  000EE8  D00B               	goto	l15793
  8274  000EEA  502B               	movf	___strtoxl@sign^0,w,c
  8275  000EEC  B4D8               	btfsc	status,2,c
  8276  000EEE  D008               	goto	l15793
  8277  000EF0  1E30               	comf	(___strtoxl@a+3)^0,f,c
  8278  000EF2  1E2F               	comf	(___strtoxl@a+2)^0,f,c
  8279  000EF4  1E2E               	comf	(___strtoxl@a+1)^0,f,c
  8280  000EF6  6C2D               	negf	___strtoxl@a^0,c
  8281  000EF8  0E00               	movlw	0
  8282  000EFA  222E               	addwfc	(___strtoxl@a+1)^0,f,c
  8283  000EFC  222F               	addwfc	(___strtoxl@a+2)^0,f,c
  8284  000EFE  2230               	addwfc	(___strtoxl@a+3)^0,f,c
  8285  000F00                     l15793:
  8286  000F00  5012               	movf	___strtoxl@endptr^0,w,c
  8287  000F02  1013               	iorwf	(___strtoxl@endptr+1)^0,w,c
  8288  000F04  B4D8               	btfsc	status,2,c
  8289  000F06  D015               	goto	l15801
  8290  000F08  5026               	movf	___strtoxl@conv_done^0,w,c
  8291  000F0A  A4D8               	btfss	status,2,c
  8292  000F0C  D006               	goto	l15799
  8293  000F0E  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  8294  000F14  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  8295  000F1A                     l15799:
  8296  000F1A  0060  F04B  FFD9   	movff	___strtoxl@endptr,fsr2l
  8297  000F20  0060  F04F  FFDA   	movff	___strtoxl@endptr+1,fsr2h
  8298  000F26  0060  F0C7  FFDE   	movff	___strtoxl@cp,postinc2
  8299  000F2C  0060  F0CB  FFDD   	movff	___strtoxl@cp+1,postdec2
  8300  000F32                     l15801:
  8301  000F32  0060  F0B4  F010   	movff	___strtoxl@a,?___strtoxl
  8302  000F38  0060  F0B8  F011   	movff	___strtoxl@a+1,?___strtoxl+1
  8303  000F3E  0060  F0BC  F012   	movff	___strtoxl@a+2,?___strtoxl+2
  8304  000F44  0060  F0C0  F013   	movff	___strtoxl@a+3,?___strtoxl+3
  8305  000F4A  0012               	return		;funcret
  8306  000F4C                     __end_of___strtoxl:
  8307                           	opt callstack 0
  8308                           
  8309 ;; *************** function ___lmul *****************
  8310 ;; Defined at:
  8311 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  multiplier      4    1[COMRAM] unsigned long 
  8314 ;;  multiplicand    4    5[COMRAM] unsigned long 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  product         4    9[COMRAM] unsigned long 
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  4    1[COMRAM] unsigned long 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8326 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;Total ram usage:       12 bytes
  8331 ;; Hardware stack levels used:    1
  8332 ;; Hardware stack levels required when called:    7
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		___strtoxl
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text31
  8341  007A42                     __ptext31:
  8342                           	opt callstack 0
  8343  007A42                     ___lmul:
  8344                           	opt callstack 18
  8345                           
  8346                           ;incstack = 0
  8347  007A42  0E00               	movlw	0
  8348  007A44  6E0A               	movwf	___lmul@product^0,c
  8349  007A46  0E00               	movlw	0
  8350  007A48  6E0B               	movwf	(___lmul@product+1)^0,c
  8351  007A4A  0E00               	movlw	0
  8352  007A4C  6E0C               	movwf	(___lmul@product+2)^0,c
  8353  007A4E  0E00               	movlw	0
  8354  007A50  6E0D               	movwf	(___lmul@product+3)^0,c
  8355  007A52                     l15037:
  8356  007A52  A002               	btfss	___lmul@multiplier^0,0,c
  8357  007A54  D008               	goto	l15041
  8358  007A56  5006               	movf	___lmul@multiplicand^0,w,c
  8359  007A58  260A               	addwf	___lmul@product^0,f,c
  8360  007A5A  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  8361  007A5C  220B               	addwfc	(___lmul@product+1)^0,f,c
  8362  007A5E  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  8363  007A60  220C               	addwfc	(___lmul@product+2)^0,f,c
  8364  007A62  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  8365  007A64  220D               	addwfc	(___lmul@product+3)^0,f,c
  8366  007A66                     l15041:
  8367  007A66  90D8               	bcf	status,0,c
  8368  007A68  3606               	rlcf	___lmul@multiplicand^0,f,c
  8369  007A6A  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8370  007A6C  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8371  007A6E  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8372  007A70  90D8               	bcf	status,0,c
  8373  007A72  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  8374  007A74  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  8375  007A76  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  8376  007A78  3202               	rrcf	___lmul@multiplier^0,f,c
  8377  007A7A  5002               	movf	___lmul@multiplier^0,w,c
  8378  007A7C  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  8379  007A7E  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  8380  007A80  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  8381  007A82  A4D8               	btfss	status,2,c
  8382  007A84  D7E6               	goto	l15037
  8383  007A86  0060  F028  F002   	movff	___lmul@product,?___lmul
  8384  007A8C  0060  F02C  F003   	movff	___lmul@product+1,?___lmul+1
  8385  007A92  0060  F030  F004   	movff	___lmul@product+2,?___lmul+2
  8386  007A98  0060  F034  F005   	movff	___lmul@product+3,?___lmul+3
  8387  007A9E  0012               	return		;funcret
  8388  007AA0                     __end_of___lmul:
  8389                           	opt callstack 0
  8390                           
  8391 ;; *************** function _cmdRstCAD *****************
  8392 ;; Defined at:
  8393 ;;		line 541 in file "../app/app_src/application.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 3F/1
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8411 ;;Total ram usage:        0 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:   16
  8414 ;; This function calls:
  8415 ;;		_printf
  8416 ;; This function is called by:
  8417 ;;		_executeATCommand
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text32
  8422  008CB4                     __ptext32:
  8423                           	opt callstack 0
  8424  008CB4                     _cmdRstCAD:
  8425                           	opt callstack 12
  8426                           
  8427                           ;../app/app_src/application.c: 542:  cadCounter = 0;
  8428                           
  8429                           ;incstack = 0
  8430  008CB4  0E00               	movlw	0
  8431  008CB6  0101               	movlb	1	; () banked
  8432  008CB8  6F7D               	movwf	_cadCounter& (0+255),b
  8433                           
  8434                           ; BSR set to: 1
  8435                           ;../app/app_src/application.c: 543:  printf("OK\r\n");
  8436  008CBA  0ED7               	movlw	low STR_13
  8437  008CBC  0100               	movlb	0	; () banked
  8438  008CBE  6F76               	movwf	printf@fmt& (0+255),b
  8439  008CC0  0EFF               	movlw	high STR_13
  8440  008CC2  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8441  008CC4  ECA8  F044         	call	_printf	;wreg free
  8442                           
  8443                           ; BSR set to: 1
  8444  008CC8  0012               	return		;funcret
  8445  008CCA                     __end_of_cmdRstCAD:
  8446                           	opt callstack 0
  8447                           
  8448 ;; *************** function _cmdReset *****************
  8449 ;; Defined at:
  8450 ;;		line 681 in file "../app/app_src/application.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;		None
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;		None
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  1    wreg      void 
  8457 ;; Registers used:
  8458 ;;		None
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;Total ram usage:        0 bytes
  8469 ;; Hardware stack levels used:    1
  8470 ;; Hardware stack levels required when called:    7
  8471 ;; This function calls:
  8472 ;;		Nothing
  8473 ;; This function is called by:
  8474 ;;		_executeATCommand
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text33
  8479  008E4E                     __ptext33:
  8480                           	opt callstack 0
  8481  008E4E                     _cmdReset:
  8482                           	opt callstack 21
  8483                           
  8484                           ; BSR set to: 1
  8485                           ;incstack = 0
  8486  008E4E  00FF               	reset		;# 
  8487  008E50                     l357:
  8488  008E50  D7FF               	goto	l357
  8489  008E52                     __end_of_cmdReset:
  8490                           	opt callstack 0
  8491                           
  8492 ;; *************** function _cmdRecv *****************
  8493 ;; Defined at:
  8494 ;;		line 364 in file "../app/app_src/application.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;		None
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		None
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;Total ram usage:        0 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    7
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_executeATCommand
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	text34
  8523  008E56                     __ptext34:
  8524                           	opt callstack 0
  8525  008E56                     _cmdRecv:
  8526                           	opt callstack 21
  8527                           
  8528                           ;../app/app_src/application.c: 378:  return;
  8529                           
  8530                           ;incstack = 0
  8531  008E56  0012               	return		;funcret
  8532  008E58                     __end_of_cmdRecv:
  8533                           	opt callstack 0
  8534                           
  8535 ;; *************** function _cmdNaddr *****************
  8536 ;; Defined at:
  8537 ;;		line 332 in file "../app/app_src/application.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 3F/1
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:   16
  8558 ;; This function calls:
  8559 ;;		_printf
  8560 ;; This function is called by:
  8561 ;;		_executeATCommand
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text35
  8566  008C0C                     __ptext35:
  8567                           	opt callstack 0
  8568  008C0C                     _cmdNaddr:
  8569                           	opt callstack 12
  8570                           
  8571                           ;../app/app_src/application.c: 333:  printf("NADDR=%02X\r\n",currentNetID);
  8572                           
  8573                           ;incstack = 0
  8574  008C0C  0E7F               	movlw	low STR_15
  8575  008C0E  0100               	movlb	0	; () banked
  8576  008C10  6F76               	movwf	printf@fmt& (0+255),b
  8577  008C12  0EFE               	movlw	high STR_15
  8578  008C14  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8579  008C16  0060  F3F0  F078   	movff	_currentNetID,?_printf+2
  8580  008C1C  6B79               	clrf	(?_printf+3)& (0+255),b
  8581  008C1E  ECA8  F044         	call	_printf	;wreg free
  8582                           
  8583                           ; BSR set to: 1
  8584  008C22  0012               	return		;funcret
  8585  008C24                     __end_of_cmdNaddr:
  8586                           	opt callstack 0
  8587                           
  8588 ;; *************** function _cmdMac *****************
  8589 ;; Defined at:
  8590 ;;		line 387 in file "../app/app_src/application.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;		None
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  i               1   88[COMRAM] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 3F/1
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;Total ram usage:        2 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:   16
  8611 ;; This function calls:
  8612 ;;		_printf
  8613 ;; This function is called by:
  8614 ;;		_executeATCommand
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text36
  8619  007DA0                     __ptext36:
  8620                           	opt callstack 0
  8621  007DA0                     _cmdMac:
  8622                           	opt callstack 12
  8623                           
  8624                           ;../app/app_src/application.c: 388:  printf("MAC=");
  8625                           
  8626                           ; BSR set to: 1
  8627                           ;incstack = 0
  8628  007DA0  0EDC               	movlw	low STR_18
  8629  007DA2  0100               	movlb	0	; () banked
  8630  007DA4  6F76               	movwf	printf@fmt& (0+255),b
  8631  007DA6  0EFF               	movlw	high STR_18
  8632  007DA8  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8633  007DAA  ECA8  F044         	call	_printf	;wreg free
  8634                           
  8635                           ; BSR set to: 1
  8636                           ;../app/app_src/application.c: 389:  for(uint8_t i = 0; i < sizeof(EUIDbyte); i++){
  8637  007DAE  0E00               	movlw	0
  8638  007DB0  6E59               	movwf	cmdMac@i^0,c
  8639  007DB2                     l16423:
  8640                           
  8641                           ; BSR set to: 1
  8642                           ;../app/app_src/application.c: 390:   printf("%02X", EUIDbyte[i]);
  8643  007DB2  0EF5               	movlw	low STR_19
  8644  007DB4  0100               	movlb	0	; () banked
  8645  007DB6  6F76               	movwf	printf@fmt& (0+255),b
  8646  007DB8  0EFF               	movlw	high STR_19
  8647  007DBA  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8648  007DBC  0EB2               	movlw	low _EUIDbyte
  8649  007DBE  2459               	addwf	cmdMac@i^0,w,c
  8650  007DC0  6ED9               	movwf	fsr2l,c
  8651  007DC2  6ADA               	clrf	fsr2h,c
  8652  007DC4  0E01               	movlw	high _EUIDbyte
  8653  007DC6  22DA               	addwfc	fsr2h,f,c
  8654  007DC8  50DF               	movf	indf2,w,c
  8655  007DCA  6E58               	movwf	??_cmdMac^0,c
  8656  007DCC  5058               	movf	??_cmdMac^0,w,c
  8657  007DCE  6F78               	movwf	(?_printf+2)& (0+255),b
  8658  007DD0  6B79               	clrf	(?_printf+3)& (0+255),b
  8659  007DD2  ECA8  F044         	call	_printf	;wreg free
  8660                           
  8661                           ; BSR set to: 1
  8662                           ;../app/app_src/application.c: 391:  }
  8663  007DD6  2A59               	incf	cmdMac@i^0,f,c
  8664                           
  8665                           ; BSR set to: 1
  8666  007DD8  0E0B               	movlw	11
  8667  007DDA  6459               	cpfsgt	cmdMac@i^0,c
  8668  007DDC  D7EA               	goto	l16423
  8669                           
  8670                           ; BSR set to: 1
  8671                           ;../app/app_src/application.c: 392:  printf("\r\n");
  8672  007DDE  0ED4               	movlw	low (STR_135+2)
  8673  007DE0  0100               	movlb	0	; () banked
  8674  007DE2  6F76               	movwf	printf@fmt& (0+255),b
  8675  007DE4  0EFF               	movlw	high (STR_135+2)
  8676  007DE6  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8677  007DE8  ECA8  F044         	call	_printf	;wreg free
  8678                           
  8679                           ; BSR set to: 1
  8680  007DEC  0012               	return		;funcret
  8681  007DEE                     __end_of_cmdMac:
  8682                           	opt callstack 0
  8683                           
  8684 ;; *************** function _cmdI *****************
  8685 ;; Defined at:
  8686 ;;		line 207 in file "../app/app_src/application.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;		None
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;		None
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 3F/1
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;Total ram usage:        0 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:   17
  8707 ;; This function calls:
  8708 ;;		_sendInfo
  8709 ;; This function is called by:
  8710 ;;		_executeATCommand
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text37
  8715  008E32                     __ptext37:
  8716                           	opt callstack 0
  8717  008E32                     _cmdI:
  8718                           	opt callstack 11
  8719                           
  8720                           ;../app/app_src/application.c: 209:     sendInfo();
  8721                           
  8722                           ; BSR set to: 1
  8723                           ;incstack = 0
  8724  008E32  EC98  F03B         	call	_sendInfo	;wreg free
  8725                           
  8726                           ; BSR set to: 1
  8727  008E36  0012               	return		;funcret
  8728  008E38                     __end_of_cmdI:
  8729                           	opt callstack 0
  8730                           
  8731 ;; *************** function _sendInfo *****************
  8732 ;; Defined at:
  8733 ;;		line 1144 in file "../app/app_src/application.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;		None
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;		None
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  1    wreg      void 
  8740 ;; Registers used:
  8741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 3F/1
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;Total ram usage:        0 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; Hardware stack levels required when called:   16
  8754 ;; This function calls:
  8755 ;;		_printf
  8756 ;; This function is called by:
  8757 ;;		_cmdI
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text38
  8762  007730                     __ptext38:
  8763                           	opt callstack 0
  8764  007730                     _sendInfo:
  8765                           	opt callstack 11
  8766                           
  8767                           ;../app/app_src/application.c: 1146:     printf("LoRa Mesh\r\n");
  8768                           
  8769                           ; BSR set to: 1
  8770                           ;incstack = 0
  8771  007730  0EC0               	movlw	low STR_131
  8772  007732  0100               	movlb	0	; () banked
  8773  007734  6F76               	movwf	printf@fmt& (0+255),b
  8774  007736  0EFE               	movlw	high STR_131
  8775  007738  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8776  00773A  ECA8  F044         	call	_printf	;wreg free
  8777  00773E  0EFF               	movlw	low STR_132
  8778  007740  0100               	movlb	0	; () banked
  8779  007742  6F76               	movwf	printf@fmt& (0+255),b
  8780  007744  0EFD               	movlw	high STR_132
  8781  007746  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8782  007748  0E00               	movlw	0
  8783  00774A  6F79               	movwf	(?_printf+3)& (0+255),b
  8784  00774C  0E01               	movlw	1
  8785  00774E  6F78               	movwf	(?_printf+2)& (0+255),b
  8786  007750  0E00               	movlw	0
  8787  007752  6F7B               	movwf	(?_printf+5)& (0+255),b
  8788  007754  0E00               	movlw	0
  8789  007756  6F7A               	movwf	(?_printf+4)& (0+255),b
  8790  007758  ECA8  F044         	call	_printf	;wreg free
  8791  00775C  0EE3               	movlw	low STR_133
  8792  00775E  0100               	movlb	0	; () banked
  8793  007760  6F76               	movwf	printf@fmt& (0+255),b
  8794  007762  0EFD               	movlw	high STR_133
  8795  007764  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8796  007766  0E00               	movlw	0
  8797  007768  6F79               	movwf	(?_printf+3)& (0+255),b
  8798  00776A  0E02               	movlw	2
  8799  00776C  6F78               	movwf	(?_printf+2)& (0+255),b
  8800  00776E  0E00               	movlw	0
  8801  007770  6F7B               	movwf	(?_printf+5)& (0+255),b
  8802  007772  0E01               	movlw	1
  8803  007774  6F7A               	movwf	(?_printf+4)& (0+255),b
  8804  007776  ECA8  F044         	call	_printf	;wreg free
  8805                           
  8806                           ;../app/app_src/application.c: 1150:     printf("Region ");
  8807  00777A  0E41               	movlw	low STR_134
  8808  00777C  0100               	movlb	0	; () banked
  8809  00777E  6F76               	movwf	printf@fmt& (0+255),b
  8810  007780  0EFF               	movlw	high STR_134
  8811  007782  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8812  007784  ECA8  F044         	call	_printf	;wreg free
  8813                           
  8814                           ;../app/app_src/application.c: 1152:     printf("NA\r\n");
  8815  007788  0ED2               	movlw	low STR_135
  8816  00778A  0100               	movlb	0	; () banked
  8817  00778C  6F76               	movwf	printf@fmt& (0+255),b
  8818  00778E  0EFF               	movlw	high STR_135
  8819  007790  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8820  007792  ECA8  F044         	call	_printf	;wreg free
  8821                           
  8822                           ; BSR set to: 1
  8823  007796  0012               	return		;funcret
  8824  007798                     __end_of_sendInfo:
  8825                           	opt callstack 0
  8826                           
  8827 ;; *************** function _cmdGetTX *****************
  8828 ;; Defined at:
  8829 ;;		line 605 in file "../app/app_src/application.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;		None
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;		None
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 3F/1
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;Total ram usage:        0 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:   16
  8850 ;; This function calls:
  8851 ;;		_printf
  8852 ;; This function is called by:
  8853 ;;		_executeATCommand
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           	psect	text39
  8858  008C24                     __ptext39:
  8859                           	opt callstack 0
  8860  008C24                     _cmdGetTX:
  8861                           	opt callstack 12
  8862                           
  8863                           ;../app/app_src/application.c: 606:  printf("TX POWER=%u\r\n",(uint16_t)TXPower);
  8864                           
  8865                           ; BSR set to: 1
  8866                           ;incstack = 0
  8867  008C24  0E71               	movlw	low STR_37
  8868  008C26  0100               	movlb	0	; () banked
  8869  008C28  6F76               	movwf	printf@fmt& (0+255),b
  8870  008C2A  0EFE               	movlw	high STR_37
  8871  008C2C  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8872  008C2E  0060  F3C0  F078   	movff	_TXPower,?_printf+2
  8873  008C34  6B79               	clrf	(?_printf+3)& (0+255),b
  8874  008C36  ECA8  F044         	call	_printf	;wreg free
  8875                           
  8876                           ; BSR set to: 1
  8877  008C3A  0012               	return		;funcret
  8878  008C3C                     __end_of_cmdGetTX:
  8879                           	opt callstack 0
  8880                           
  8881 ;; *************** function _cmdGetTTL *****************
  8882 ;; Defined at:
  8883 ;;		line 503 in file "../app/app_src/application.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;		None
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		None
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;Total ram usage:        0 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:    7
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_executeATCommand
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	text40
  8912  008E58                     __ptext40:
  8913                           	opt callstack 0
  8914  008E58                     _cmdGetTTL:
  8915                           	opt callstack 21
  8916                           
  8917                           ;../app/app_src/application.c: 505:  return;
  8918                           
  8919                           ; BSR set to: 1
  8920                           ;incstack = 0
  8921  008E58  0012               	return		;funcret
  8922  008E5A                     __end_of_cmdGetTTL:
  8923                           	opt callstack 0
  8924                           
  8925 ;; *************** function _cmdGetSF *****************
  8926 ;; Defined at:
  8927 ;;		line 747 in file "../app/app_src/application.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 3F/1
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;Total ram usage:        0 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:   16
  8948 ;; This function calls:
  8949 ;;		_printf
  8950 ;; This function is called by:
  8951 ;;		_executeATCommand
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text41
  8956  008C3C                     __ptext41:
  8957                           	opt callstack 0
  8958  008C3C                     _cmdGetSF:
  8959                           	opt callstack 12
  8960                           
  8961                           ;../app/app_src/application.c: 748:     printf("SF=%u\r\n", current_sf);
  8962                           
  8963                           ;incstack = 0
  8964  008C3C  0E39               	movlw	low STR_56
  8965  008C3E  0100               	movlb	0	; () banked
  8966  008C40  6F76               	movwf	printf@fmt& (0+255),b
  8967  008C42  0EFF               	movlw	high STR_56
  8968  008C44  6F77               	movwf	(printf@fmt+1)& (0+255),b
  8969  008C46  0060  F3C8  F078   	movff	_current_sf,?_printf+2
  8970  008C4C  6B79               	clrf	(?_printf+3)& (0+255),b
  8971  008C4E  ECA8  F044         	call	_printf	;wreg free
  8972                           
  8973                           ; BSR set to: 1
  8974  008C52  0012               	return		;funcret
  8975  008C54                     __end_of_cmdGetSF:
  8976                           	opt callstack 0
  8977                           
  8978 ;; *************** function _cmdGetRxCnt *****************
  8979 ;; Defined at:
  8980 ;;		line 782 in file "../app/app_src/application.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  atCommand       2    1[COMRAM] PTR unsigned char 
  8983 ;;		 -> atCommand(80), 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;		None
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      void 
  8988 ;; Registers used:
  8989 ;;		None
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;Total ram usage:        2 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    7
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_executeATCommand
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text42
  9010  008E5A                     __ptext42:
  9011                           	opt callstack 0
  9012  008E5A                     _cmdGetRxCnt:
  9013                           	opt callstack 21
  9014                           
  9015                           ; BSR set to: 1
  9016                           ;incstack = 0
  9017  008E5A  0012               	return		;funcret
  9018  008E5C                     __end_of_cmdGetRxCnt:
  9019                           	opt callstack 0
  9020                           
  9021 ;; *************** function _cmdGetRFCH *****************
  9022 ;; Defined at:
  9023 ;;		line 569 in file "../app/app_src/application.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;		None
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;		None
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  1    wreg      void 
  9030 ;; Registers used:
  9031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 3F/1
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;Total ram usage:        0 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:   16
  9044 ;; This function calls:
  9045 ;;		_printf
  9046 ;; This function is called by:
  9047 ;;		_executeATCommand
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text43
  9052  008B3A                     __ptext43:
  9053                           	opt callstack 0
  9054  008B3A                     _cmdGetRFCH:
  9055                           	opt callstack 12
  9056                           
  9057                           ;../app/app_src/application.c: 570:  printf("CHANNEL=%u\r\n",(channel + 1));
  9058                           
  9059                           ;incstack = 0
  9060  008B3A  0EA6               	movlw	low STR_33
  9061  008B3C  0100               	movlb	0	; () banked
  9062  008B3E  6F76               	movwf	printf@fmt& (0+255),b
  9063  008B40  0EFE               	movlw	high STR_33
  9064  008B42  6F77               	movwf	(printf@fmt+1)& (0+255),b
  9065  008B44  0E01               	movlw	1
  9066  008B46  25F1               	addwf	_channel& (0+255),w,b
  9067  008B48  6F78               	movwf	(?_printf+2)& (0+255),b
  9068  008B4A  6B79               	clrf	(?_printf+3)& (0+255),b
  9069  008B4C  0E00               	movlw	0
  9070  008B4E  2379               	addwfc	(?_printf+3)& (0+255),f,b
  9071  008B50  ECA8  F044         	call	_printf	;wreg free
  9072                           
  9073                           ; BSR set to: 1
  9074  008B54  0012               	return		;funcret
  9075  008B56                     __end_of_cmdGetRFCH:
  9076                           	opt callstack 0
  9077                           
  9078 ;; *************** function _cmdGetMode *****************
  9079 ;; Defined at:
  9080 ;;		line 553 in file "../app/app_src/application.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 3F/1
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9098 ;;Total ram usage:        0 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:   16
  9101 ;; This function calls:
  9102 ;;		_printf
  9103 ;; This function is called by:
  9104 ;;		_executeATCommand
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text44
  9109  008D34                     __ptext44:
  9110                           	opt callstack 0
  9111  008D34                     _cmdGetMode:
  9112                           	opt callstack 12
  9113                           
  9114                           ;../app/app_src/application.c: 555:   printf("MODE = REPEATER\r\n");
  9115                           
  9116                           ; BSR set to: 1
  9117                           ;incstack = 0
  9118  008D34  0E40               	movlw	low STR_31
  9119  008D36  0100               	movlb	0	; () banked
  9120  008D38  6F76               	movwf	printf@fmt& (0+255),b
  9121  008D3A  0EFE               	movlw	high STR_31
  9122  008D3C  6F77               	movwf	(printf@fmt+1)& (0+255),b
  9123  008D3E  ECA8  F044         	call	_printf	;wreg free
  9124                           
  9125                           ; BSR set to: 1
  9126                           
  9127                           ;../app/app_src/application.c: 556:  }
  9128  008D42  0012               	return		;funcret
  9129  008D44                     __end_of_cmdGetMode:
  9130                           	opt callstack 0
  9131                           
  9132 ;; *************** function _cmdGetCADRSSI *****************
  9133 ;; Defined at:
  9134 ;;		line 645 in file "../app/app_src/application.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;		None
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 3F/1
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9152 ;;Total ram usage:        0 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:   16
  9155 ;; This function calls:
  9156 ;;		_printf
  9157 ;; This function is called by:
  9158 ;;		_executeATCommand
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text45
  9163  008B70                     __ptext45:
  9164                           	opt callstack 0
  9165  008B70                     _cmdGetCADRSSI:
  9166                           	opt callstack 12
  9167                           
  9168                           ;../app/app_src/application.c: 646:  printf("CAD RSS=%i\r\n",RSSITarget);
  9169                           
  9170                           ; BSR set to: 1
  9171                           ;incstack = 0
  9172  008B70  0E8C               	movlw	low STR_42
  9173  008B72  0100               	movlb	0	; () banked
  9174  008B74  6F76               	movwf	printf@fmt& (0+255),b
  9175  008B76  0EFE               	movlw	high STR_42
  9176  008B78  6F77               	movwf	(printf@fmt+1)& (0+255),b
  9177  008B7A  51FB               	movf	_RSSITarget& (0+255),w,b
  9178  008B7C  6F78               	movwf	(?_printf+2)& (0+255),b
  9179  008B7E  6B79               	clrf	(?_printf+3)& (0+255),b
  9180  008B80  BF78               	btfsc	(?_printf+2)& (0+255),7,b
  9181  008B82  0779               	decf	(?_printf+3)& (0+255),f,b
  9182  008B84  ECA8  F044         	call	_printf	;wreg free
  9183                           
  9184                           ; BSR set to: 1
  9185  008B88  0012               	return		;funcret
  9186  008B8A                     __end_of_cmdGetCADRSSI:
  9187                           	opt callstack 0
  9188                           
  9189 ;; *************** function _cmdGetCAD *****************
  9190 ;; Defined at:
  9191 ;;		line 530 in file "../app/app_src/application.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;		None
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;		None
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      void 
  9198 ;; Registers used:
  9199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 3F/1
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;Total ram usage:        0 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:   16
  9212 ;; This function calls:
  9213 ;;		_printf
  9214 ;; This function is called by:
  9215 ;;		_executeATCommand
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text46
  9220  008C54                     __ptext46:
  9221                           	opt callstack 0
  9222  008C54                     _cmdGetCAD:
  9223                           	opt callstack 12
  9224                           
  9225                           ;../app/app_src/application.c: 531:  printf("CAD COUNTER = %02X\r\n",cadCounter);
  9226                           
  9227                           ; BSR set to: 1
  9228                           ;incstack = 0
  9229  008C54  0E19               	movlw	low STR_29
  9230  008C56  0100               	movlb	0	; () banked
  9231  008C58  6F76               	movwf	printf@fmt& (0+255),b
  9232  008C5A  0EFE               	movlw	high STR_29
  9233  008C5C  6F77               	movwf	(printf@fmt+1)& (0+255),b
  9234  008C5E  0060  F5F4  F078   	movff	_cadCounter,?_printf+2
  9235  008C64  6B79               	clrf	(?_printf+3)& (0+255),b
  9236  008C66  ECA8  F044         	call	_printf	;wreg free
  9237                           
  9238                           ; BSR set to: 1
  9239  008C6A  0012               	return		;funcret
  9240  008C6C                     __end_of_cmdGetCAD:
  9241                           	opt callstack 0
  9242                           
  9243 ;; *************** function _cmdBootLoad *****************
  9244 ;; Defined at:
  9245 ;;		line 718 in file "../app/app_src/application.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;		None
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;		None
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  1    wreg      void 
  9252 ;; Registers used:
  9253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;Total ram usage:        2 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:   16
  9266 ;; This function calls:
  9267 ;;		_DATAEE_WriteByte_Platform
  9268 ;;		_printf
  9269 ;; This function is called by:
  9270 ;;		_executeATCommand
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text47
  9275  0083E4                     __ptext47:
  9276                           	opt callstack 0
  9277  0083E4                     _cmdBootLoad:
  9278                           	opt callstack 12
  9279                           
  9280                           ;../app/app_src/application.c: 719:     DATAEE_WriteByte_Platform(0 + 0,0x00);
  9281                           
  9282                           ; BSR set to: 1
  9283                           ;incstack = 0
  9284  0083E4  0E00               	movlw	0
  9285  0083E6  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  9286  0083E8  0E00               	movlw	0
  9287  0083EA  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  9288  0083EC  0E00               	movlw	0
  9289  0083EE  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
  9290  0083F0  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  9291                           
  9292                           ;../app/app_src/application.c: 720:     printf("OK\r\n");
  9293  0083F4  0ED7               	movlw	low STR_13
  9294  0083F6  0100               	movlb	0	; () banked
  9295  0083F8  6F76               	movwf	printf@fmt& (0+255),b
  9296  0083FA  0EFF               	movlw	high STR_13
  9297  0083FC  6F77               	movwf	(printf@fmt+1)& (0+255),b
  9298  0083FE  ECA8  F044         	call	_printf	;wreg free
  9299                           
  9300                           ; BSR set to: 1
  9301                           ;../app/app_src/application.c: 721:     _delay((unsigned long)((1000)*(64000000/4000.0))
      +                          );
  9302  008402  0E52               	movlw	82
  9303  008404  6E59               	movwf	(??_cmdBootLoad+1)^0,c
  9304  008406  0E2B               	movlw	43
  9305  008408  6E58               	movwf	??_cmdBootLoad^0,c
  9306  00840A  0E00               	movlw	0
  9307  00840C                     u18057:
  9308  00840C  2EE8               	decfsz	wreg,f,c
  9309  00840E  D7FE               	bra	u18057
  9310  008410  2E58               	decfsz	??_cmdBootLoad^0,f,c
  9311  008412  D7FC               	bra	u18057
  9312  008414  2E59               	decfsz	(??_cmdBootLoad+1)^0,f,c
  9313  008416  D7FA               	bra	u18057
  9314  008418  D000               	nop2	
  9315  00841A  00FF               	reset		;# 
  9316  00841C  0012               	return		;funcret
  9317  00841E                     __end_of_cmdBootLoad:
  9318                           	opt callstack 0
  9319                           
  9320 ;; *************** function _cmdBcast *****************
  9321 ;; Defined at:
  9322 ;;		line 261 in file "../app/app_src/application.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  9325 ;;		 -> atCommand(80), 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  buf_id          1   34[BANK0 ] unsigned char 
  9328 ;;  p2              3    0        PTR unsigned char 
  9329 ;;  p1              2   32[BANK0 ] PTR unsigned char 
  9330 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 3F/1
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;Total ram usage:        7 bytes
  9345 ;; Hardware stack levels used:    1
  9346 ;; Hardware stack levels required when called:   16
  9347 ;; This function calls:
  9348 ;;		_NWK_DataReq
  9349 ;;		_get_free_tx_buffer
  9350 ;;		_memcpy
  9351 ;;		_memset
  9352 ;;		_printf
  9353 ;;		_strlen
  9354 ;;		_strstr
  9355 ;; This function is called by:
  9356 ;;		_executeATCommand
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           	psect	text48
  9361  002EDE                     __ptext48:
  9362                           	opt callstack 0
  9363  002EDE                     _cmdBcast:
  9364                           	opt callstack 12
  9365                           
  9366                           ;../app/app_src/application.c: 262:  char *p1,*p2;;../app/app_src/application.c: 264:  p
      +                          1 = strstr(cmd,"=") + 1;
  9367                           
  9368                           ;incstack = 0
  9369  002EDE  0060  F160  F00D   	movff	cmdBcast@cmd,strstr@h
  9370  002EE4  0060  F164  F00E   	movff	cmdBcast@cmd+1,strstr@h+1
  9371  002EEA  0EDF               	movlw	low (STR_18+3)
  9372  002EEC  6E0F               	movwf	strstr@n^0,c
  9373  002EEE  0EFF               	movlw	high (STR_18+3)
  9374  002EF0  6E10               	movwf	(strstr@n+1)^0,c
  9375  002EF2  EC41  F02E         	call	_strstr	;wreg free
  9376  002EF6  0E01               	movlw	1
  9377  002EF8  240D               	addwf	?_strstr^0,w,c
  9378  002EFA  0100               	movlb	0	; () banked
  9379  002EFC  6F80               	movwf	cmdBcast@p1& (0+255),b
  9380  002EFE  0E00               	movlw	0
  9381  002F00  200E               	addwfc	(?_strstr+1)^0,w,c
  9382  002F02  6F81               	movwf	(cmdBcast@p1+1)& (0+255),b
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;../app/app_src/application.c: 266:  if((!p1) || (strlen(p1) > 64)){
  9386  002F04  5180               	movf	cmdBcast@p1& (0+255),w,b
  9387  002F06  1181               	iorwf	(cmdBcast@p1+1)& (0+255),w,b
  9388  002F08  B4D8               	btfsc	status,2,c
  9389  002F0A  D00E               	goto	u16720
  9390                           
  9391                           ; BSR set to: 0
  9392  002F0C  0060  F200  F002   	movff	cmdBcast@p1,strlen@s
  9393  002F12  0060  F204  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9394  002F18  EC80  F03E         	call	_strlen	;wreg free
  9395  002F1C  5003               	movf	(?_strlen+1)^0,w,c
  9396  002F1E  E104               	bnz	u16720
  9397  002F20  0E41               	movlw	65
  9398  002F22  5C02               	subwf	?_strlen^0,w,c
  9399  002F24  A0D8               	btfss	status,0,c
  9400  002F26  D00A               	goto	l16341
  9401  002F28                     u16720:
  9402                           
  9403                           ;../app/app_src/application.c: 267:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  9404  002F28  0ECC               	movlw	low STR_4
  9405  002F2A  0100               	movlb	0	; () banked
  9406  002F2C  6F76               	movwf	printf@fmt& (0+255),b
  9407  002F2E  0EFE               	movlw	high STR_4
  9408  002F30  6F77               	movwf	(printf@fmt+1)& (0+255),b
  9409  002F32  0E07               	movlw	7
  9410  002F34  6F78               	movwf	(?_printf+2)& (0+255),b
  9411  002F36  ECA8  F044         	call	_printf	;wreg free
  9412                           
  9413                           ;../app/app_src/application.c: 268:  }
  9414  002F3A  0012               	return	
  9415  002F3C                     l16341:
  9416                           
  9417                           ;../app/app_src/application.c: 270:   uint8_t buf_id;;../app/app_src/application.c: 271:
      +                                   if(!get_free_tx_buffer(&buf_id)){
  9418  002F3C  0E82               	movlw	low cmdBcast@buf_id
  9419  002F3E  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  9420  002F40  EC00  F03C         	call	_get_free_tx_buffer	;wreg free
  9421  002F44  0900               	iorlw	0
  9422  002F46  A4D8               	btfss	status,2,c
  9423  002F48  D00A               	goto	l16347
  9424                           
  9425                           ;../app/app_src/application.c: 272:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  9426  002F4A  0ECC               	movlw	low STR_4
  9427  002F4C  0100               	movlb	0	; () banked
  9428  002F4E  6F76               	movwf	printf@fmt& (0+255),b
  9429  002F50  0EFE               	movlw	high STR_4
  9430  002F52  6F77               	movwf	(printf@fmt+1)& (0+255),b
  9431  002F54  0E11               	movlw	17
  9432  002F56  6F78               	movwf	(?_printf+2)& (0+255),b
  9433  002F58  ECA8  F044         	call	_printf	;wreg free
  9434  002F5C  0012               	return	
  9435  002F5E                     l16347:
  9436                           
  9437                           ;../app/app_src/application.c: 275:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  9438  002F5E  0100               	movlb	0	; () banked
  9439  002F60  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9440  002F62  0D83               	mullw	131
  9441  002F64  0E80               	movlw	low (_tx_buffer+22)
  9442  002F66  24F3               	addwf	243,w,c
  9443  002F68  6E02               	movwf	memset@dest^0,c
  9444  002F6A  0E08               	movlw	high (_tx_buffer+22)
  9445  002F6C  20F4               	addwfc	prodh,w,c
  9446  002F6E  6E03               	movwf	(memset@dest+1)^0,c
  9447  002F70  0E00               	movlw	0
  9448  002F72  6E05               	movwf	(memset@c+1)^0,c
  9449  002F74  0E00               	movlw	0
  9450  002F76  6E04               	movwf	memset@c^0,c
  9451  002F78  0E00               	movlw	0
  9452  002F7A  6E07               	movwf	(memset@n+1)^0,c
  9453  002F7C  0E6D               	movlw	109
  9454  002F7E  6E06               	movwf	memset@n^0,c
  9455  002F80  EC34  F022         	call	_memset	;wreg free
  9456                           
  9457                           ;../app/app_src/application.c: 276:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  9458  002F84  0100               	movlb	0	; () banked
  9459  002F86  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9460  002F88  0D83               	mullw	131
  9461  002F8A  0E80               	movlw	low (_tx_buffer+22)
  9462  002F8C  24F3               	addwf	243,w,c
  9463  002F8E  6E08               	movwf	memcpy@d1^0,c
  9464  002F90  0E08               	movlw	high (_tx_buffer+22)
  9465  002F92  20F4               	addwfc	prodh,w,c
  9466  002F94  6E09               	movwf	(memcpy@d1+1)^0,c
  9467  002F96  0060  F200  F00A   	movff	cmdBcast@p1,memcpy@s1
  9468  002F9C  0060  F204  F00B   	movff	cmdBcast@p1+1,memcpy@s1+1
  9469  002FA2  0060  F200  F002   	movff	cmdBcast@p1,strlen@s
  9470  002FA8  0060  F204  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9471  002FAE  EC80  F03E         	call	_strlen	;wreg free
  9472  002FB2  0060  F008  F00C   	movff	?_strlen,memcpy@n
  9473  002FB8  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  9474  002FBE  EC50  F03A         	call	_memcpy	;wreg free
  9475                           
  9476                           ;../app/app_src/application.c: 277:   tx_buffer[buf_id].nwkDataReq.dstAddr = 0xffff;
  9477  002FC2  0100               	movlb	0	; () banked
  9478  002FC4  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9479  002FC6  0D83               	mullw	131
  9480  002FC8  0E72               	movlw	low (_tx_buffer+8)
  9481  002FCA  24F3               	addwf	243,w,c
  9482  002FCC  6ED9               	movwf	fsr2l,c
  9483  002FCE  0E08               	movlw	high (_tx_buffer+8)
  9484  002FD0  20F4               	addwfc	prodh,w,c
  9485  002FD2  6EDA               	movwf	fsr2h,c
  9486  002FD4  0EFF               	movlw	255
  9487  002FD6  6EDE               	movwf	postinc2,c
  9488  002FD8  0EFF               	movlw	255
  9489  002FDA  6EDD               	movwf	postdec2,c
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;../app/app_src/application.c: 278:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  9493  002FDC  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9494  002FDE  0D83               	mullw	131
  9495  002FE0  0E74               	movlw	low (_tx_buffer+10)
  9496  002FE2  24F3               	addwf	243,w,c
  9497  002FE4  6ED9               	movwf	fsr2l,c
  9498  002FE6  0E08               	movlw	high (_tx_buffer+10)
  9499  002FE8  20F4               	addwfc	prodh,w,c
  9500  002FEA  6EDA               	movwf	fsr2h,c
  9501  002FEC  0E01               	movlw	1
  9502  002FEE  6EDF               	movwf	indf2,c
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;../app/app_src/application.c: 279:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  9506  002FF0  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9507  002FF2  0D83               	mullw	131
  9508  002FF4  0E75               	movlw	low (_tx_buffer+11)
  9509  002FF6  24F3               	addwf	243,w,c
  9510  002FF8  6ED9               	movwf	fsr2l,c
  9511  002FFA  0E08               	movlw	high (_tx_buffer+11)
  9512  002FFC  20F4               	addwfc	prodh,w,c
  9513  002FFE  6EDA               	movwf	fsr2h,c
  9514  003000  0E01               	movlw	1
  9515  003002  6EDF               	movwf	indf2,c
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;../app/app_src/application.c: 280:         tx_buffer[buf_id].nwkDataReq.options = 0;
  9519  003004  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9520  003006  0D83               	mullw	131
  9521  003008  0E76               	movlw	low (_tx_buffer+12)
  9522  00300A  24F3               	addwf	243,w,c
  9523  00300C  6ED9               	movwf	fsr2l,c
  9524  00300E  0E08               	movlw	high (_tx_buffer+12)
  9525  003010  20F4               	addwfc	prodh,w,c
  9526  003012  6EDA               	movwf	fsr2h,c
  9527  003014  0E00               	movlw	0
  9528  003016  6EDF               	movwf	indf2,c
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;../app/app_src/application.c: 281:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  9532  003018  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9533  00301A  0D83               	mullw	131
  9534  00301C  0E6A               	movlw	low _tx_buffer
  9535  00301E  6E5A               	movwf	??_cmdBcast^0,c
  9536  003020  0E08               	movlw	high _tx_buffer
  9537  003022  6E5B               	movwf	(??_cmdBcast+1)^0,c
  9538  003024  0E16               	movlw	22
  9539  003026  265A               	addwf	??_cmdBcast^0,f,c
  9540  003028  0E00               	movlw	0
  9541  00302A  225B               	addwfc	(??_cmdBcast+1)^0,f,c
  9542  00302C  50F3               	movf	243,w,c
  9543  00302E  265A               	addwf	??_cmdBcast^0,f,c
  9544  003030  50F4               	movf	244,w,c
  9545  003032  225B               	addwfc	(??_cmdBcast+1)^0,f,c
  9546  003034  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9547  003036  0D83               	mullw	131
  9548  003038  0E79               	movlw	low (_tx_buffer+15)
  9549  00303A  24F3               	addwf	243,w,c
  9550  00303C  6ED9               	movwf	fsr2l,c
  9551  00303E  0E08               	movlw	high (_tx_buffer+15)
  9552  003040  20F4               	addwfc	prodh,w,c
  9553  003042  6EDA               	movwf	fsr2h,c
  9554  003044  0060  F16B  FFDE   	movff	??_cmdBcast,postinc2
  9555  00304A  0060  F16F  FFDD   	movff	??_cmdBcast+1,postdec2
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;../app/app_src/application.c: 282:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  9559  003050  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9560  003052  0D83               	mullw	131
  9561  003054  0E7B               	movlw	low (_tx_buffer+17)
  9562  003056  24F3               	addwf	243,w,c
  9563  003058  6ED9               	movwf	fsr2l,c
  9564  00305A  0E08               	movlw	high (_tx_buffer+17)
  9565  00305C  20F4               	addwfc	prodh,w,c
  9566  00305E  6EDA               	movwf	fsr2h,c
  9567  003060  0060  F200  F002   	movff	cmdBcast@p1,strlen@s
  9568  003066  0060  F204  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9569  00306C  EC80  F03E         	call	_strlen	;wreg free
  9570  003070  5002               	movf	?_strlen^0,w,c
  9571  003072  6EDF               	movwf	indf2,c
  9572                           
  9573                           ;../app/app_src/application.c: 283:         tx_buffer[buf_id].nwkDataReq.confirm = (void
      +                          *)&appDataConf;
  9574  003074  0100               	movlb	0	; () banked
  9575  003076  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9576  003078  0D83               	mullw	131
  9577  00307A  0E7C               	movlw	low (_tx_buffer+18)
  9578  00307C  24F3               	addwf	243,w,c
  9579  00307E  6ED9               	movwf	fsr2l,c
  9580  003080  0E08               	movlw	high (_tx_buffer+18)
  9581  003082  20F4               	addwfc	prodh,w,c
  9582  003084  6EDA               	movwf	fsr2h,c
  9583  003086  0E72               	movlw	low _appDataConf
  9584  003088  6EDE               	movwf	postinc2,c
  9585  00308A  0E89               	movlw	high _appDataConf
  9586  00308C  6EDD               	movwf	postdec2,c
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;../app/app_src/application.c: 284:         tx_buffer[buf_id].msgid = msgIDCounter++;
  9590  00308E  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9591  003090  0D83               	mullw	131
  9592  003092  0E6C               	movlw	low (_tx_buffer+2)
  9593  003094  24F3               	addwf	243,w,c
  9594  003096  6ED9               	movwf	fsr2l,c
  9595  003098  0E08               	movlw	high (_tx_buffer+2)
  9596  00309A  20F4               	addwfc	prodh,w,c
  9597  00309C  6EDA               	movwf	fsr2h,c
  9598  00309E  0060  F60B  FFDF   	movff	_msgIDCounter,indf2
  9599                           
  9600                           ; BSR set to: 0
  9601  0030A4  0101               	movlb	1	; () banked
  9602  0030A6  2B82               	incf	_msgIDCounter& (0+255),f,b
  9603                           
  9604                           ; BSR set to: 1
  9605                           ;../app/app_src/application.c: 285:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  9606  0030A8  0100               	movlb	0	; () banked
  9607  0030AA  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9608  0030AC  0D83               	mullw	131
  9609  0030AE  0E6D               	movlw	low (_tx_buffer+3)
  9610  0030B0  24F3               	addwf	243,w,c
  9611  0030B2  6E02               	movwf	NWK_DataReq@req^0,c
  9612  0030B4  0E08               	movlw	high (_tx_buffer+3)
  9613  0030B6  20F4               	addwfc	prodh,w,c
  9614  0030B8  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  9615  0030BA  ECD1  F039         	call	_NWK_DataReq	;wreg free
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;../app/app_src/application.c: 286:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  9619  0030BE  0ED0               	movlw	low (STR_4+4)
  9620  0030C0  6F76               	movwf	printf@fmt& (0+255),b
  9621  0030C2  0EFE               	movlw	high (STR_4+4)
  9622  0030C4  6F77               	movwf	(printf@fmt+1)& (0+255),b
  9623  0030C6  5182               	movf	cmdBcast@buf_id& (0+255),w,b
  9624  0030C8  0D83               	mullw	131
  9625  0030CA  0E6C               	movlw	low (_tx_buffer+2)
  9626  0030CC  24F3               	addwf	243,w,c
  9627  0030CE  6ED9               	movwf	fsr2l,c
  9628  0030D0  0E08               	movlw	high (_tx_buffer+2)
  9629  0030D2  20F4               	addwfc	prodh,w,c
  9630  0030D4  6EDA               	movwf	fsr2h,c
  9631  0030D6  50DF               	movf	indf2,w,c
  9632  0030D8  6E5A               	movwf	??_cmdBcast^0,c
  9633  0030DA  505A               	movf	??_cmdBcast^0,w,c
  9634  0030DC  6F78               	movwf	(?_printf+2)& (0+255),b
  9635  0030DE  6B79               	clrf	(?_printf+3)& (0+255),b
  9636  0030E0  ECA8  F044         	call	_printf	;wreg free
  9637                           
  9638                           ; BSR set to: 1
  9639  0030E4  0012               	return		;funcret
  9640  0030E6                     __end_of_cmdBcast:
  9641                           	opt callstack 0
  9642                           
  9643 ;; *************** function _strstr *****************
  9644 ;; Defined at:
  9645 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strstr.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  h               2   12[COMRAM] PTR const unsigned char 
  9648 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9649 ;;  n               2   14[COMRAM] PTR const unsigned char 
  9650 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9651 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9652 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9653 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9654 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9655 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9656 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9657 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9658 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9659 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9660 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9661 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  nl              2   16[COMRAM] unsigned int 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  2   12[COMRAM] PTR unsigned char 
  9666 ;; Registers used:
  9667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;Total ram usage:        6 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:    8
  9680 ;; This function calls:
  9681 ;;		_strchr
  9682 ;;		_strlen
  9683 ;;		_strncmp
  9684 ;; This function is called by:
  9685 ;;		_cmdSend
  9686 ;;		_cmdBcast
  9687 ;;		_cmdSetAddr
  9688 ;;		_cmdSetNaddr
  9689 ;;		_cmdSetAES
  9690 ;;		_cmdSetRFCH
  9691 ;;		_cmdSetTX
  9692 ;;		_cmdSetCADRSSI
  9693 ;;		_cmdSetParity
  9694 ;;		_cmdSetSF
  9695 ;;		_executeATCommand
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text49
  9700  005C82                     __ptext49:
  9701                           	opt callstack 0
  9702  005C82                     _strstr:
  9703                           	opt callstack 20
  9704                           
  9705                           ; BSR set to: 1
  9706                           ;incstack = 0
  9707  005C82  500F               	movf	strstr@n^0,w,c
  9708  005C84  1010               	iorwf	(strstr@n+1)^0,w,c
  9709  005C86  B4D8               	btfsc	status,2,c
  9710  005C88  D063               	goto	u16000
  9711  005C8A  0060  F03C  F002   	movff	strstr@n,strlen@s
  9712  005C90  0060  F040  F003   	movff	strstr@n+1,strlen@s+1
  9713  005C96  EC80  F03E         	call	_strlen	;wreg free
  9714  005C9A  0060  F008  F011   	movff	?_strlen,strstr@nl
  9715  005CA0  0060  F00C  F012   	movff	?_strlen+1,strstr@nl+1
  9716  005CA6  D038               	goto	l15863
  9717  005CA8                     l15855:
  9718  005CA8  0060  F034  F002   	movff	strstr@h,strncmp@_l
  9719  005CAE  0060  F038  F003   	movff	strstr@h+1,strncmp@_l+1
  9720  005CB4  0060  F03C  F004   	movff	strstr@n,strncmp@_r
  9721  005CBA  0060  F040  F005   	movff	strstr@n+1,strncmp@_r+1
  9722  005CC0  0060  F044  F006   	movff	strstr@nl,strncmp@n
  9723  005CC6  0060  F048  F007   	movff	strstr@nl+1,strncmp@n+1
  9724  005CCC  EC0B  F027         	call	_strncmp	;wreg free
  9725  005CD0  5002               	movf	?_strncmp^0,w,c
  9726  005CD2  1003               	iorwf	(?_strncmp+1)^0,w,c
  9727  005CD4  A4D8               	btfss	status,2,c
  9728  005CD6  D007               	goto	l15861
  9729  005CD8  0060  F034  F00D   	movff	strstr@h,?_strstr
  9730  005CDE  0060  F038  F00E   	movff	strstr@h+1,?_strstr+1
  9731  005CE4  0012               	return	
  9732  005CE6                     l15861:
  9733  005CE6  0E01               	movlw	1
  9734  005CE8  240D               	addwf	strstr@h^0,w,c
  9735  005CEA  6E02               	movwf	strchr@s^0,c
  9736  005CEC  0E00               	movlw	0
  9737  005CEE  200E               	addwfc	(strstr@h+1)^0,w,c
  9738  005CF0  6E03               	movwf	(strchr@s+1)^0,c
  9739  005CF2  0060  F03F  FFF6   	movff	strstr@n,tblptrl
  9740  005CF8  0060  F043  FFF7   	movff	strstr@n+1,tblptrh
  9741  005CFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9742  005CFE  6AF8               	clrf	tblptru,c
  9743  005D00                     	endif
  9744  005D00                     	if	0	;tblptru may be non-zero
  9745  005D00                     	endif
  9746  005D00  0008               	tblrd		*
  9747  005D02  50F5               	movf	tablat,w,c
  9748  005D04  6E04               	movwf	strchr@c^0,c
  9749  005D06  6A05               	clrf	(strchr@c+1)^0,c
  9750  005D08  ECCB  F038         	call	_strchr	;wreg free
  9751  005D0C  0060  F008  F00D   	movff	?_strchr,strstr@h
  9752  005D12  0060  F00C  F00E   	movff	?_strchr+1,strstr@h+1
  9753  005D18                     l15863:
  9754  005D18  500D               	movf	strstr@h^0,w,c
  9755  005D1A  100E               	iorwf	(strstr@h+1)^0,w,c
  9756  005D1C  B4D8               	btfsc	status,2,c
  9757  005D1E  D018               	goto	u16000
  9758  005D20  0060  F037  FFF6   	movff	strstr@h,tblptrl
  9759  005D26  0060  F03B  FFF7   	movff	strstr@h+1,tblptrh
  9760  005D2C  0E00               	movlw	low (__mediumconst shr (0+16))
  9761  005D2E  6EF8               	movwf	tblptru,c
  9762  005D30  0E0F               	movlw	(high __ramtop+-1)
  9763  005D32  64F7               	cpfsgt	tblptrh,c
  9764  005D34  D003               	bra	u15997
  9765  005D36  0008               	tblrd		*
  9766  005D38  50F5               	movf	tablat,w,c
  9767  005D3A  D007               	bra	u15990
  9768  005D3C                     u15997:
  9769  005D3C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9770  005D42  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9771  005D48  50EF               	movf	indf0,w,c
  9772  005D4A                     u15990:
  9773  005D4A  0900               	iorlw	0
  9774  005D4C  A4D8               	btfss	status,2,c
  9775  005D4E  D7AC               	goto	l15855
  9776  005D50                     u16000:
  9777  005D50  0E00               	movlw	0
  9778  005D52  6E0D               	movwf	?_strstr^0,c
  9779  005D54  0E00               	movlw	0
  9780  005D56  6E0E               	movwf	(?_strstr+1)^0,c
  9781  005D58  0012               	return		;funcret
  9782  005D5A                     __end_of_strstr:
  9783                           	opt callstack 0
  9784                           
  9785 ;; *************** function _strncmp *****************
  9786 ;; Defined at:
  9787 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  9790 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9791 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  9792 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9793 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9794 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9795 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9796 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9797 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9798 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9799 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9800 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9801 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9802 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9803 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9804 ;;  n               2    5[COMRAM] unsigned int 
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;  r               2   10[COMRAM] PTR const unsigned char 
  9807 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9808 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9809 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9810 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9811 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9812 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9813 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9814 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9815 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9816 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9817 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9818 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9819 ;;  l               2    8[COMRAM] PTR const unsigned char 
  9820 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  2    1[COMRAM] int 
  9823 ;; Registers used:
  9824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9830 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;Total ram usage:       11 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; Hardware stack levels required when called:    7
  9837 ;; This function calls:
  9838 ;;		Nothing
  9839 ;; This function is called by:
  9840 ;;		_strstr
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           	psect	text50
  9845  004E16                     __ptext50:
  9846                           	opt callstack 0
  9847  004E16                     _strncmp:
  9848                           	opt callstack 20
  9849                           
  9850                           ;incstack = 0
  9851  004E16  0060  F008  F009   	movff	strncmp@_l,strncmp@l
  9852  004E1C  0060  F00C  F00A   	movff	strncmp@_l+1,strncmp@l+1
  9853  004E22  0060  F010  F00B   	movff	strncmp@_r,strncmp@r
  9854  004E28  0060  F014  F00C   	movff	strncmp@_r+1,strncmp@r+1
  9855  004E2E  0606               	decf	strncmp@n^0,f,c
  9856  004E30  A0D8               	btfss	status,0,c
  9857  004E32  0607               	decf	(strncmp@n+1)^0,f,c
  9858  004E34  2806               	incf	strncmp@n^0,w,c
  9859  004E36  E10F               	bnz	l15653
  9860  004E38  2807               	incf	(strncmp@n+1)^0,w,c
  9861  004E3A  A4D8               	btfss	status,2,c
  9862  004E3C  D00C               	goto	l15653
  9863  004E3E  0E00               	movlw	0
  9864  004E40  6E03               	movwf	(?_strncmp+1)^0,c
  9865  004E42  0E00               	movlw	0
  9866  004E44  6E02               	movwf	?_strncmp^0,c
  9867  004E46  0012               	return	
  9868  004E48                     l15651:
  9869  004E48  4A09               	infsnz	strncmp@l^0,f,c
  9870  004E4A  2A0A               	incf	(strncmp@l+1)^0,f,c
  9871  004E4C  4A0B               	infsnz	strncmp@r^0,f,c
  9872  004E4E  2A0C               	incf	(strncmp@r+1)^0,f,c
  9873  004E50  0606               	decf	strncmp@n^0,f,c
  9874  004E52  A0D8               	btfss	status,0,c
  9875  004E54  0607               	decf	(strncmp@n+1)^0,f,c
  9876  004E56                     l15653:
  9877  004E56  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9878  004E5C  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9879  004E62  0E00               	movlw	low (__mediumconst shr (0+16))
  9880  004E64  6EF8               	movwf	tblptru,c
  9881  004E66  0E0F               	movlw	(high __ramtop+-1)
  9882  004E68  64F7               	cpfsgt	tblptrh,c
  9883  004E6A  D003               	bra	u15447
  9884  004E6C  0008               	tblrd		*
  9885  004E6E  50F5               	movf	tablat,w,c
  9886  004E70  D007               	bra	u15440
  9887  004E72                     u15447:
  9888  004E72  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9889  004E78  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9890  004E7E  50EF               	movf	indf0,w,c
  9891  004E80                     u15440:
  9892  004E80  0900               	iorlw	0
  9893  004E82  B4D8               	btfsc	status,2,c
  9894  004E84  D033               	goto	u15480
  9895  004E86  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9896  004E8C  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9897  004E92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9898  004E92  6AF8               	clrf	tblptru,c
  9899  004E94                     	endif
  9900  004E94                     	if	0	;tblptru may be non-zero
  9901  004E94                     	endif
  9902  004E94  0008               	tblrd		*
  9903  004E96  50F5               	movf	tablat,w,c
  9904  004E98  0900               	iorlw	0
  9905  004E9A  B4D8               	btfsc	status,2,c
  9906  004E9C  D027               	goto	u15480
  9907  004E9E  5006               	movf	strncmp@n^0,w,c
  9908  004EA0  1007               	iorwf	(strncmp@n+1)^0,w,c
  9909  004EA2  B4D8               	btfsc	status,2,c
  9910  004EA4  D023               	goto	u15480
  9911  004EA6  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9912  004EAC  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9913  004EB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9914  004EB2  6AF8               	clrf	tblptru,c
  9915  004EB4                     	endif
  9916  004EB4                     	if	0	;tblptru may be non-zero
  9917  004EB4                     	endif
  9918  004EB4  0008               	tblrd		*
  9919  004EB6  006F FFD4  F008    	movff	tablat,??_strncmp
  9920  004EBC  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9921  004EC2  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9922  004EC8  0E00               	movlw	low (__mediumconst shr (0+16))
  9923  004ECA  6EF8               	movwf	tblptru,c
  9924  004ECC  0E0F               	movlw	(high __ramtop+-1)
  9925  004ECE  64F7               	cpfsgt	tblptrh,c
  9926  004ED0  D003               	bra	u15487
  9927  004ED2  0008               	tblrd		*
  9928  004ED4  50F5               	movf	tablat,w,c
  9929  004ED6  D007               	bra	u15485
  9930  004ED8                     u15487:
  9931  004ED8  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9932  004EDE  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9933  004EE4  50EF               	movf	indf0,w,c
  9934  004EE6                     u15485:
  9935  004EE6  1808               	xorwf	??_strncmp^0,w,c
  9936  004EE8  B4D8               	btfsc	status,2,c
  9937  004EEA  D7AE               	goto	l15651
  9938  004EEC                     u15480:
  9939  004EEC  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9940  004EF2  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9941  004EF8  0E00               	movlw	low (__mediumconst shr (0+16))
  9942  004EFA  6EF8               	movwf	tblptru,c
  9943  004EFC  0E0F               	movlw	(high __ramtop+-1)
  9944  004EFE  64F7               	cpfsgt	tblptrh,c
  9945  004F00  D003               	bra	u15497
  9946  004F02  0008               	tblrd		*
  9947  004F04  50F5               	movf	tablat,w,c
  9948  004F06  D007               	bra	u15490
  9949  004F08                     u15497:
  9950  004F08  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9951  004F0E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9952  004F14  50EF               	movf	indf0,w,c
  9953  004F16                     u15490:
  9954  004F16  6E08               	movwf	??_strncmp^0,c
  9955  004F18  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9956  004F1E  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9957  004F24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9958  004F24  6AF8               	clrf	tblptru,c
  9959  004F26                     	endif
  9960  004F26                     	if	0	;tblptru may be non-zero
  9961  004F26                     	endif
  9962  004F26  0008               	tblrd		*
  9963  004F28  50F5               	movf	tablat,w,c
  9964  004F2A  5C08               	subwf	??_strncmp^0,w,c
  9965  004F2C  6E02               	movwf	?_strncmp^0,c
  9966  004F2E  6A03               	clrf	(?_strncmp+1)^0,c
  9967  004F30  A0D8               	btfss	status,0,c
  9968  004F32  0603               	decf	(?_strncmp+1)^0,f,c
  9969  004F34  0012               	return		;funcret
  9970  004F36                     __end_of_strncmp:
  9971                           	opt callstack 0
  9972                           
  9973 ;; *************** function _strchr *****************
  9974 ;; Defined at:
  9975 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strchr.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  s               2    1[COMRAM] PTR const unsigned char 
  9978 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9979 ;;  c               2    3[COMRAM] int 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  2    1[COMRAM] PTR unsigned char 
  9984 ;; Registers used:
  9985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;Total ram usage:        6 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:    7
  9998 ;; This function calls:
  9999 ;;		Nothing
 10000 ;; This function is called by:
 10001 ;;		_strstr
 10002 ;;		_strcspn
 10003 ;;		_strspn
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           	psect	text51
 10008  007196                     __ptext51:
 10009                           	opt callstack 0
 10010  007196                     _strchr:
 10011                           	opt callstack 20
 10012                           
 10013                           ;incstack = 0
 10014  007196  0060  F00B  FFF6   	movff	strchr@s,tblptrl
 10015  00719C  0060  F00F  FFF7   	movff	strchr@s+1,tblptrh
 10016  0071A2  0E00               	movlw	low (__mediumconst shr (0+16))
 10017  0071A4  6EF8               	movwf	tblptru,c
 10018  0071A6  0E0F               	movlw	(high __ramtop+-1)
 10019  0071A8  64F7               	cpfsgt	tblptrh,c
 10020  0071AA  D003               	bra	u14787
 10021  0071AC  0008               	tblrd		*
 10022  0071AE  50F5               	movf	tablat,w,c
 10023  0071B0  D007               	bra	u14780
 10024  0071B2                     u14787:
 10025  0071B2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10026  0071B8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10027  0071BE  50EF               	movf	indf0,w,c
 10028  0071C0                     u14780:
 10029  0071C0  1804               	xorwf	strchr@c^0,w,c
 10030  0071C2  A4D8               	btfss	status,2,c
 10031  0071C4  D007               	goto	l15157
 10032  0071C6  0060  F008  F002   	movff	strchr@s,?_strchr
 10033  0071CC  0060  F00C  F003   	movff	strchr@s+1,?_strchr+1
 10034  0071D2  0012               	return	
 10035  0071D4                     l15157:
 10036  0071D4  5002               	movf	strchr@s^0,w,c
 10037  0071D6  6E06               	movwf	??_strchr^0,c
 10038  0071D8  5003               	movf	(strchr@s+1)^0,w,c
 10039  0071DA  6E07               	movwf	(??_strchr+1)^0,c
 10040  0071DC  4A02               	infsnz	strchr@s^0,f,c
 10041  0071DE  2A03               	incf	(strchr@s+1)^0,f,c
 10042  0071E0  0060  F01B  FFF6   	movff	??_strchr,tblptrl
 10043  0071E6  0060  F01F  FFF7   	movff	??_strchr+1,tblptrh
 10044  0071EC  0E00               	movlw	low (__mediumconst shr (0+16))
 10045  0071EE  6EF8               	movwf	tblptru,c
 10046  0071F0  0E0F               	movlw	(high __ramtop+-1)
 10047  0071F2  64F7               	cpfsgt	tblptrh,c
 10048  0071F4  D003               	bra	u14807
 10049  0071F6  0008               	tblrd		*
 10050  0071F8  50F5               	movf	tablat,w,c
 10051  0071FA  D007               	bra	u14800
 10052  0071FC                     u14807:
 10053  0071FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10054  007202  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10055  007208  50EF               	movf	indf0,w,c
 10056  00720A                     u14800:
 10057  00720A  0900               	iorlw	0
 10058  00720C  A4D8               	btfss	status,2,c
 10059  00720E  D7C3               	goto	_strchr
 10060  007210  0E00               	movlw	0
 10061  007212  6E02               	movwf	?_strchr^0,c
 10062  007214  0E00               	movlw	0
 10063  007216  6E03               	movwf	(?_strchr+1)^0,c
 10064  007218  0012               	return		;funcret
 10065  00721A                     __end_of_strchr:
 10066                           	opt callstack 0
 10067                           
 10068 ;; *************** function _get_free_tx_buffer *****************
 10069 ;; Defined at:
 10070 ;;		line 58 in file "../app/app_src/application.c"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
 10073 ;;		 -> cmdBcast@buf_id(1), cmdSend@buf_id(1), 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      _Bool 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;Total ram usage:        2 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    7
 10092 ;; This function calls:
 10093 ;;		Nothing
 10094 ;; This function is called by:
 10095 ;;		_cmdSend
 10096 ;;		_cmdBcast
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text52
 10101  007800                     __ptext52:
 10102                           	opt callstack 0
 10103  007800                     _get_free_tx_buffer:
 10104                           	opt callstack 20
 10105                           
 10106                           ;../app/app_src/application.c: 59:     *buf_id = 0;
 10107                           
 10108                           ;incstack = 0
 10109  007800  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10110  007802  6ED9               	movwf	fsr2l,c
 10111  007804  6ADA               	clrf	fsr2h,c
 10112  007806  0E00               	movlw	0
 10113  007808  6EDF               	movwf	indf2,c
 10114                           
 10115                           ;../app/app_src/application.c: 60:     while(*buf_id < 4){
 10116  00780A  D023               	goto	l208
 10117  00780C                     l15807:
 10118                           
 10119                           ;../app/app_src/application.c: 61:         if(tx_buffer[*buf_id].free){
 10120  00780C  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10121  00780E  6ED9               	movwf	fsr2l,c
 10122  007810  6ADA               	clrf	fsr2h,c
 10123  007812  50DF               	movf	indf2,w,c
 10124  007814  6E03               	movwf	??_get_free_tx_buffer^0,c
 10125  007816  5003               	movf	??_get_free_tx_buffer^0,w,c
 10126  007818  0D83               	mullw	131
 10127  00781A  0E6A               	movlw	low _tx_buffer
 10128  00781C  24F3               	addwf	243,w,c
 10129  00781E  6ED9               	movwf	fsr2l,c
 10130  007820  0E08               	movlw	high _tx_buffer
 10131  007822  20F4               	addwfc	prodh,w,c
 10132  007824  6EDA               	movwf	fsr2h,c
 10133  007826  A4DF               	btfss	indf2,2,c
 10134  007828  D010               	goto	l15815
 10135                           
 10136                           ;../app/app_src/application.c: 62:             tx_buffer[*buf_id].free = 0;
 10137  00782A  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10138  00782C  6ED9               	movwf	fsr2l,c
 10139  00782E  6ADA               	clrf	fsr2h,c
 10140  007830  50DF               	movf	indf2,w,c
 10141  007832  6E03               	movwf	??_get_free_tx_buffer^0,c
 10142  007834  5003               	movf	??_get_free_tx_buffer^0,w,c
 10143  007836  0D83               	mullw	131
 10144  007838  0E6A               	movlw	low _tx_buffer
 10145  00783A  24F3               	addwf	243,w,c
 10146  00783C  6ED9               	movwf	fsr2l,c
 10147  00783E  0E08               	movlw	high _tx_buffer
 10148  007840  20F4               	addwfc	prodh,w,c
 10149  007842  6EDA               	movwf	fsr2h,c
 10150  007844  94DF               	bcf	indf2,2,c
 10151                           
 10152                           ;../app/app_src/application.c: 63:             return 1;
 10153  007846  0E01               	movlw	1
 10154  007848  0012               	return	
 10155  00784A                     l15815:
 10156                           
 10157                           ;../app/app_src/application.c: 65:         (*buf_id)++;
 10158  00784A  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10159  00784C  6ED9               	movwf	fsr2l,c
 10160  00784E  6ADA               	clrf	fsr2h,c
 10161  007850  2ADF               	incf	indf2,f,c
 10162  007852                     l208:
 10163                           
 10164                           ;../app/app_src/application.c: 60:     while(*buf_id < 4){
 10165  007852  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10166  007854  6ED9               	movwf	fsr2l,c
 10167  007856  6ADA               	clrf	fsr2h,c
 10168  007858  0E03               	movlw	3
 10169  00785A  64DF               	cpfsgt	indf2,c
 10170  00785C  D7D7               	goto	l15807
 10171                           
 10172                           ;../app/app_src/application.c: 67:     return 0;
 10173  00785E  0E00               	movlw	0
 10174  007860  0012               	return		;funcret
 10175  007862                     __end_of_get_free_tx_buffer:
 10176                           	opt callstack 0
 10177                           
 10178 ;; *************** function _NWK_DataReq *****************
 10179 ;; Defined at:
 10180 ;;		line 87 in file "../nwk/nwk_src/nwkDataReq.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 10183 ;;		 -> tx_buffer(524), 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;		None
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10190 ;; Tracked objects:
 10191 ;;		On entry : 3F/0
 10192 ;;		On exit  : 3F/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;Total ram usage:        2 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:    7
 10202 ;; This function calls:
 10203 ;;		Nothing
 10204 ;; This function is called by:
 10205 ;;		_cmdSend
 10206 ;;		_cmdBcast
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text53
 10211  0073A2                     __ptext53:
 10212                           	opt callstack 0
 10213  0073A2                     _NWK_DataReq:
 10214                           	opt callstack 20
 10215                           
 10216                           ; BSR set to: 0
 10217                           ;../nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);../nwk/nwk_src/nw
      +                          kDataReq.c: 88: {;../nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INI
      +                          TIAL;
 10218                           
 10219                           ;incstack = 0
 10220  0073A2  EE20 F004          	lfsr	2,4
 10221  0073A6  5002               	movf	NWK_DataReq@req^0,w,c
 10222  0073A8  26D9               	addwf	fsr2l,f,c
 10223  0073AA  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10224  0073AC  22DA               	addwfc	fsr2h,f,c
 10225  0073AE  0E00               	movlw	0
 10226  0073B0  6EDF               	movwf	indf2,c
 10227                           
 10228                           ;../nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 10229  0073B2  EE20 F011          	lfsr	2,17
 10230  0073B6  5002               	movf	NWK_DataReq@req^0,w,c
 10231  0073B8  26D9               	addwf	fsr2l,f,c
 10232  0073BA  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10233  0073BC  22DA               	addwfc	fsr2h,f,c
 10234  0073BE  0E00               	movlw	0
 10235  0073C0  6EDF               	movwf	indf2,c
 10236                           
 10237                           ;../nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
 10238  0073C2  EE20 F002          	lfsr	2,2
 10239  0073C6  5002               	movf	NWK_DataReq@req^0,w,c
 10240  0073C8  26D9               	addwf	fsr2l,f,c
 10241  0073CA  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10242  0073CC  22DA               	addwfc	fsr2h,f,c
 10243  0073CE  0E00               	movlw	0
 10244  0073D0  6EDE               	movwf	postinc2,c
 10245  0073D2  0E00               	movlw	0
 10246  0073D4  6EDD               	movwf	postdec2,c
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;../nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 10250  0073D6  0101               	movlb	1	; () banked
 10251  0073D8  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 10252  0073DA  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 10253                           
 10254                           ; BSR set to: 1
 10255                           ;../nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
 10256  0073DC  0100               	movlb	0	; () banked
 10257  0073DE  51EA               	movf	_nwkDataReqQueue& (0+255),w,b
 10258  0073E0  11EB               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 10259  0073E2  A4D8               	btfss	status,2,c
 10260  0073E4  D011               	goto	l15885
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;../nwk/nwk_src/nwkDataReq.c: 96:   {;../nwk/nwk_src/nwkDataReq.c: 97:     req->next = (
      +                          (void*)0);
 10264  0073E6  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10265  0073EC  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10266  0073F2  0E00               	movlw	0
 10267  0073F4  6EDE               	movwf	postinc2,c
 10268  0073F6  0E00               	movlw	0
 10269  0073F8  6EDD               	movwf	postdec2,c
 10270  0073FA                     l15883:
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;../nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 10274  0073FA  0060  F008  F0EA   	movff	NWK_DataReq@req,_nwkDataReqQueue
 10275  007400  0060  F00C  F0EB   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 10276                           
 10277                           ;../nwk/nwk_src/nwkDataReq.c: 99:   }
 10278  007406  0012               	return	
 10279  007408                     l15885:
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;../nwk/nwk_src/nwkDataReq.c: 101:   {;../nwk/nwk_src/nwkDataReq.c: 102:     req->next =
      +                           nwkDataReqQueue;
 10283  007408  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10284  00740E  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10285  007414  0060  F3AB  FFDE   	movff	_nwkDataReqQueue,postinc2
 10286  00741A  0060  F3AF  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 10287  007420  D7EC               	goto	l15883
 10288  007422                     __end_of_NWK_DataReq:
 10289                           	opt callstack 0
 10290                           
 10291 ;; *************** function _cmdAddr *****************
 10292 ;; Defined at:
 10293 ;;		line 297 in file "../app/app_src/application.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;		None
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;		None
 10298 ;; Return value:  Size  Location     Type
 10299 ;;                  1    wreg      void 
 10300 ;; Registers used:
 10301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 3F/1
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10311 ;;Total ram usage:        0 bytes
 10312 ;; Hardware stack levels used:    1
 10313 ;; Hardware stack levels required when called:   16
 10314 ;; This function calls:
 10315 ;;		_printf
 10316 ;; This function is called by:
 10317 ;;		_executeATCommand
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           	psect	text54
 10322  008A1E                     __ptext54:
 10323                           	opt callstack 0
 10324  008A1E                     _cmdAddr:
 10325                           	opt callstack 12
 10326                           
 10327                           ;../app/app_src/application.c: 298:  printf("ADDR=%02X%02X\r\n",currentAddr0,currentAddr
      +                          1);
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;incstack = 0
 10331  008A1E  0E52               	movlw	low STR_11
 10332  008A20  0100               	movlb	0	; () banked
 10333  008A22  6F76               	movwf	printf@fmt& (0+255),b
 10334  008A24  0EFE               	movlw	high STR_11
 10335  008A26  6F77               	movwf	(printf@fmt+1)& (0+255),b
 10336  008A28  0060  F7B8  F078   	movff	_currentAddr0,?_printf+2
 10337  008A2E  6B79               	clrf	(?_printf+3)& (0+255),b
 10338  008A30  0060  F7B4  F07A   	movff	_currentAddr1,?_printf+4
 10339  008A36  6B7B               	clrf	(?_printf+5)& (0+255),b
 10340  008A38  ECA8  F044         	call	_printf	;wreg free
 10341                           
 10342                           ; BSR set to: 1
 10343  008A3C  0012               	return		;funcret
 10344  008A3E                     __end_of_cmdAddr:
 10345                           	opt callstack 0
 10346                           
 10347 ;; *************** function _UART1_is_rx_ready *****************
 10348 ;; Defined at:
 10349 ;;		line 169 in file "mcc_generated_files/uart1.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;		None
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;		None
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      _Bool 
 10356 ;; Registers used:
 10357 ;;		wreg, status,2
 10358 ;; Tracked objects:
 10359 ;;		On entry : 3E/0
 10360 ;;		On exit  : 3F/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;Total ram usage:        0 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    7
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_processATCommand
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text55
 10378  008D44                     __ptext55:
 10379                           	opt callstack 0
 10380  008D44                     _UART1_is_rx_ready:
 10381                           	opt callstack 22
 10382                           
 10383                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 10384                           
 10385                           ; BSR set to: 1
 10386                           ;incstack = 0
 10387  008D44  0100               	movlb	0	; () banked
 10388  008D46  51EC               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10389  008D48  B4D8               	btfsc	status,2,c
 10390  008D4A  D002               	goto	u11730
 10391  008D4C  0E01               	movlw	1
 10392  008D4E  0012               	return	
 10393  008D50                     u11730:
 10394  008D50  0E00               	movlw	0
 10395                           
 10396                           ; BSR set to: 0
 10397  008D52  0012               	return		;funcret
 10398  008D54                     __end_of_UART1_is_rx_ready:
 10399                           	opt callstack 0
 10400                           
 10401 ;; *************** function _UART1_Read *****************
 10402 ;; Defined at:
 10403 ;;		line 188 in file "mcc_generated_files/uart1.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;		None
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;  readValue       1    1[COMRAM] unsigned char 
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      unsigned char 
 10410 ;; Registers used:
 10411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10412 ;; Tracked objects:
 10413 ;;		On entry : 3F/0
 10414 ;;		On exit  : 3F/39
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;Total ram usage:        1 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    7
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_processATCommand
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text56
 10432  007F66                     __ptext56:
 10433                           	opt callstack 0
 10434  007F66                     _UART1_Read:
 10435                           	opt callstack 22
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;incstack = 0
 10445  007F66  51EC               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10446  007F68  B4D8               	btfsc	status,2,c
 10447  007F6A  D7FD               	goto	_UART1_Read
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10451  007F6C  0E28               	movlw	low _uart1RxStatusBuffer
 10452  007F6E  25ED               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10453  007F70  6ED9               	movwf	fsr2l,c
 10454  007F72  6ADA               	clrf	fsr2h,c
 10455  007F74  0E01               	movlw	high _uart1RxStatusBuffer
 10456  007F76  22DA               	addwfc	fsr2h,f,c
 10457  007F78  50DF               	movf	indf2,w,c
 10458  007F7A  0101               	movlb	1	; () banked
 10459  007F7C  6F74               	movwf	_uart1RxLastError& (0+255),b	;volatile
 10460                           
 10461                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 10462  007F7E  0E38               	movlw	low _uart1RxBuffer
 10463  007F80  0100               	movlb	0	; () banked
 10464  007F82  25ED               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10465  007F84  6ED9               	movwf	fsr2l,c
 10466  007F86  6ADA               	clrf	fsr2h,c
 10467  007F88  0E01               	movlw	high _uart1RxBuffer
 10468  007F8A  22DA               	addwfc	fsr2h,f,c
 10469  007F8C  50DF               	movf	indf2,w,c
 10470  007F8E  6E02               	movwf	UART1_Read@readValue^0,c
 10471                           
 10472                           ; BSR set to: 0
 10473  007F90  2BED               	incf	_uart1RxTail& (0+255),f,b	;volatile
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10477  007F92  0E0F               	movlw	15
 10478  007F94  65ED               	cpfsgt	_uart1RxTail& (0+255),b
 10479  007F96  D002               	goto	l12675
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 10483  007F98  0E00               	movlw	0
 10484  007F9A  6FED               	movwf	_uart1RxTail& (0+255),b	;volatile
 10485  007F9C                     l12675:
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 10489  007F9C  0139               	movlb	57	; () banked
 10490  007F9E  9793               	bcf	147,3,b	;volatile
 10491                           
 10492                           ; BSR set to: 57
 10493                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 10494  007FA0  0100               	movlb	0	; () banked
 10495  007FA2  07EC               	decf	_uart1RxCount& (0+255),f,b	;volatile
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 10499  007FA4  0139               	movlb	57	; () banked
 10500  007FA6  8793               	bsf	147,3,b	;volatile
 10501                           
 10502                           ; BSR set to: 57
 10503                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 10504  007FA8  5002               	movf	UART1_Read@readValue^0,w,c
 10505                           
 10506                           ; BSR set to: 57
 10507  007FAA  0012               	return		;funcret
 10508  007FAC                     __end_of_UART1_Read:
 10509                           	opt callstack 0
 10510                           
 10511 ;; *************** function _bootLoadApplication *****************
 10512 ;; Defined at:
 10513 ;;		line 1275 in file "../app/app_src/application.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;		None
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;  buf_id          1   49[COMRAM] unsigned char 
 10518 ;;  temp            2   50[COMRAM] unsigned short 
 10519 ;;  i               1   52[COMRAM] unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10524 ;; Tracked objects:
 10525 ;;		On entry : 3F/2
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;Total ram usage:        6 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:   14
 10536 ;; This function calls:
 10537 ;;		_DATAEE_ReadByte_Platform
 10538 ;;		_DATAEE_WriteByte_Platform
 10539 ;;		_NWK_OpenEndpoint
 10540 ;;		_NWK_SetAddr
 10541 ;;		_NWK_SetPanId
 10542 ;;		_PHY_SetChannel
 10543 ;;		_PHY_SetRxState
 10544 ;;		_crc16_app
 10545 ;;		_loadMACAddr
 10546 ;;		_set_parity
 10547 ;;		_set_uart_baud
 10548 ;; This function is called by:
 10549 ;;		_main
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           	psect	text57
 10554  0025AE                     __ptext57:
 10555                           	opt callstack 0
 10556  0025AE                     _bootLoadApplication:
 10557                           	opt callstack 16
 10558                           
 10559                           ; BSR set to: 2
 10560                           ;../app/app_src/application.c: 1277:     uint16_t temp;;../app/app_src/application.c: 12
      +                          78:     uint8_t i;;../app/app_src/application.c: 1283:     loadMACAddr();
 10561                           
 10562                           ; BSR set to: 57
 10563                           ;incstack = 0
 10564  0025AE  EC99  F041         	call	_loadMACAddr	;wreg free
 10565                           
 10566                           ;../app/app_src/application.c: 1285:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte)
      +                          , 0);
 10567  0025B2  0EB2               	movlw	low _EUIDbyte
 10568  0025B4  6E13               	movwf	crc16_app@dptr^0,c
 10569  0025B6  0E01               	movlw	high _EUIDbyte
 10570  0025B8  6E14               	movwf	(crc16_app@dptr+1)^0,c
 10571  0025BA  0E00               	movlw	0
 10572  0025BC  6E16               	movwf	(crc16_app@len+1)^0,c
 10573  0025BE  0E0C               	movlw	12
 10574  0025C0  6E15               	movwf	crc16_app@len^0,c
 10575  0025C2  0E00               	movlw	0
 10576  0025C4  6E18               	movwf	(crc16_app@seed+1)^0,c
 10577  0025C6  0E00               	movlw	0
 10578  0025C8  6E17               	movwf	crc16_app@seed^0,c
 10579  0025CA  EC0D  F039         	call	_crc16_app	;wreg free
 10580  0025CE  0060  F04C  F033   	movff	?_crc16_app,bootLoadApplication@temp
 10581  0025D4  0060  F050  F034   	movff	?_crc16_app+1,bootLoadApplication@temp+1
 10582                           
 10583                           ; BSR set to: 57
 10584                           ;../app/app_src/application.c: 1286:     currentAddr0 = (temp >> 8) & 0xFF;
 10585  0025DA  0060  F0D0  F1EE   	movff	bootLoadApplication@temp+1,_currentAddr0
 10586                           
 10587                           ; BSR set to: 57
 10588                           ;../app/app_src/application.c: 1287:     currentAddr1 = (temp) & 0xFF;
 10589  0025E0  0060  F0CC  F1ED   	movff	bootLoadApplication@temp,_currentAddr1
 10590                           
 10591                           ; BSR set to: 57
 10592                           ;../app/app_src/application.c: 1290:     currentNetID = DATAEE_ReadByte_Platform(0 + 0 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1);
 10593  0025E6  0E00               	movlw	0
 10594  0025E8  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10595  0025EA  0E19               	movlw	25
 10596  0025EC  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10597  0025EE  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10598  0025F2  0100               	movlb	0	; () banked
 10599  0025F4  6FFC               	movwf	_currentNetID& (0+255),b
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;../app/app_src/application.c: 1293:     for(i = 0; i < 16; i++){
 10603  0025F6  0E00               	movlw	0
 10604  0025F8  6E35               	movwf	bootLoadApplication@i^0,c
 10605  0025FA                     l17307:
 10606                           
 10607                           ;../app/app_src/application.c: 1294:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10608  0025FA  0E48               	movlw	low _aes_key
 10609  0025FC  2435               	addwf	bootLoadApplication@i^0,w,c
 10610  0025FE  6ED9               	movwf	fsr2l,c
 10611  002600  6ADA               	clrf	fsr2h,c
 10612  002602  0E01               	movlw	high _aes_key
 10613  002604  22DA               	addwfc	fsr2h,f,c
 10614  002606  0E09               	movlw	9
 10615  002608  2435               	addwf	bootLoadApplication@i^0,w,c
 10616  00260A  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10617  00260C  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10618  00260E  0E00               	movlw	0
 10619  002610  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10620  002612  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10621  002616  6EDF               	movwf	indf2,c
 10622                           
 10623                           ;../app/app_src/application.c: 1295:     }
 10624  002618  2A35               	incf	bootLoadApplication@i^0,f,c
 10625  00261A  0E0F               	movlw	15
 10626  00261C  6435               	cpfsgt	bootLoadApplication@i^0,c
 10627  00261E  D7ED               	goto	l17307
 10628                           
 10629                           ;../app/app_src/application.c: 1296:     for(i = 0; i < 16; i++){
 10630  002620  0E00               	movlw	0
 10631  002622  6E35               	movwf	bootLoadApplication@i^0,c
 10632  002624                     l17319:
 10633                           
 10634                           ;../app/app_src/application.c: 1297:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10635  002624  0E14               	movlw	low _net_key
 10636  002626  2435               	addwf	bootLoadApplication@i^0,w,c
 10637  002628  6ED9               	movwf	fsr2l,c
 10638  00262A  6ADA               	clrf	fsr2h,c
 10639  00262C  0E02               	movlw	high _net_key
 10640  00262E  22DA               	addwfc	fsr2h,f,c
 10641  002630  0E23               	movlw	35
 10642  002632  2435               	addwf	bootLoadApplication@i^0,w,c
 10643  002634  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10644  002636  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10645  002638  0E00               	movlw	0
 10646  00263A  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10647  00263C  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10648  002640  6EDF               	movwf	indf2,c
 10649                           
 10650                           ;../app/app_src/application.c: 1298:     }
 10651  002642  2A35               	incf	bootLoadApplication@i^0,f,c
 10652  002644  0E0F               	movlw	15
 10653  002646  6435               	cpfsgt	bootLoadApplication@i^0,c
 10654  002648  D7ED               	goto	l17319
 10655                           
 10656                           ;../app/app_src/application.c: 1305:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1);
 10657  00264A  0E00               	movlw	0
 10658  00264C  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10659  00264E  0E1A               	movlw	26
 10660  002650  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10661  002652  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10662  002656  0101               	movlb	1	; () banked
 10663  002658  6F85               	movwf	_sinkAddr0& (0+255),b
 10664                           
 10665                           ;../app/app_src/application.c: 1306:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1);
 10666  00265A  0E00               	movlw	0
 10667  00265C  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10668  00265E  0E1B               	movlw	27
 10669  002660  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10670  002662  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10671  002666  0101               	movlb	1	; () banked
 10672  002668  6F84               	movwf	_sinkAddr1& (0+255),b
 10673                           
 10674                           ;../app/app_src/application.c: 1309:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1);
 10675  00266A  0E00               	movlw	0
 10676  00266C  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10677  00266E  0E1C               	movlw	28
 10678  002670  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10679  002672  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10680  002676  0100               	movlb	0	; () banked
 10681  002678  6FF1               	movwf	_channel& (0+255),b
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;../app/app_src/application.c: 1310:     if(channel > sizeof(fhssList)){
 10685  00267A  0EFC               	movlw	252
 10686  00267C  65F1               	cpfsgt	_channel& (0+255),b
 10687  00267E  D00B               	goto	l17333
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;../app/app_src/application.c: 1311:         channel = 0;
 10691  002680  0E00               	movlw	0
 10692  002682  6FF1               	movwf	_channel& (0+255),b
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;../app/app_src/application.c: 1312:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1,channel);
 10696  002684  0E00               	movlw	0
 10697  002686  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10698  002688  0E1C               	movlw	28
 10699  00268A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10700  00268C  0060  F3C4  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
 10701  002692  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10702  002696                     l17333:
 10703                           
 10704                           ;../app/app_src/application.c: 1316:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1);
 10705  002696  0E00               	movlw	0
 10706  002698  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10707  00269A  0E1D               	movlw	29
 10708  00269C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10709  00269E  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10710  0026A2  0100               	movlb	0	; () banked
 10711  0026A4  6FF0               	movwf	_TXPower& (0+255),b
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;../app/app_src/application.c: 1317:     if((TXPower < 2) || (TXPower > 13)){
 10715  0026A6  0E01               	movlw	1
 10716  0026A8  65F0               	cpfsgt	_TXPower& (0+255),b
 10717  0026AA  D003               	goto	u17940
 10718                           
 10719                           ; BSR set to: 0
 10720  0026AC  0E0D               	movlw	13
 10721  0026AE  65F0               	cpfsgt	_TXPower& (0+255),b
 10722  0026B0  D00B               	goto	l17343
 10723  0026B2                     u17940:
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;../app/app_src/application.c: 1318:         TXPower = 13;
 10727  0026B2  0E0D               	movlw	13
 10728  0026B4  6FF0               	movwf	_TXPower& (0+255),b
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;../app/app_src/application.c: 1319:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1,TXPower);
 10732  0026B6  0E00               	movlw	0
 10733  0026B8  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10734  0026BA  0E1D               	movlw	29
 10735  0026BC  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10736  0026BE  0060  F3C0  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
 10737  0026C4  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10738  0026C8                     l17343:
 10739                           
 10740                           ;../app/app_src/application.c: 1323:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10741  0026C8  0E00               	movlw	0
 10742  0026CA  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10743  0026CC  0E21               	movlw	33
 10744  0026CE  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10745  0026D0  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10746  0026D4  0100               	movlb	0	; () banked
 10747  0026D6  6FF2               	movwf	_current_sf& (0+255),b
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;../app/app_src/application.c: 1324:     if((current_sf < 7) || (current_sf > 12)){
 10751  0026D8  0E06               	movlw	6
 10752  0026DA  65F2               	cpfsgt	_current_sf& (0+255),b
 10753  0026DC  D003               	goto	u17960
 10754                           
 10755                           ; BSR set to: 0
 10756  0026DE  0E0C               	movlw	12
 10757  0026E0  65F2               	cpfsgt	_current_sf& (0+255),b
 10758  0026E2  D00B               	goto	l17353
 10759  0026E4                     u17960:
 10760                           
 10761                           ; BSR set to: 0
 10762                           ;../app/app_src/application.c: 1325:         current_sf = 7;
 10763  0026E4  0E07               	movlw	7
 10764  0026E6  6FF2               	movwf	_current_sf& (0+255),b
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;../app/app_src/application.c: 1326:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
 10768  0026E8  0E00               	movlw	0
 10769  0026EA  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10770  0026EC  0E21               	movlw	33
 10771  0026EE  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10772  0026F0  0060  F3C8  F008   	movff	_current_sf,DATAEE_WriteByte_Platform@data
 10773  0026F6  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10774  0026FA                     l17353:
 10775                           
 10776                           ;../app/app_src/application.c: 1330:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10777  0026FA  0E00               	movlw	0
 10778  0026FC  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10779  0026FE  0E1E               	movlw	30
 10780  002700  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10781  002702  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10782  002706  0100               	movlb	0	; () banked
 10783  002708  6FFB               	movwf	_RSSITarget& (0+255),b
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;../app/app_src/application.c: 1331:     if((RSSITarget >= -30) || (RSSITarget < -120)){
 10787  00270A  51FB               	movf	_RSSITarget& (0+255),w,b
 10788  00270C  0A80               	xorlw	128
 10789  00270E  0F9E               	addlw	158
 10790  002710  B0D8               	btfsc	status,0,c
 10791  002712  D005               	goto	u17980
 10792                           
 10793                           ; BSR set to: 0
 10794  002714  51FB               	movf	_RSSITarget& (0+255),w,b
 10795  002716  0A80               	xorlw	128
 10796  002718  0FF8               	addlw	248
 10797  00271A  B0D8               	btfsc	status,0,c
 10798  00271C  D00B               	goto	l17363
 10799  00271E                     u17980:
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;../app/app_src/application.c: 1332:         RSSITarget = -80;
 10803  00271E  0EB0               	movlw	176
 10804  002720  6FFB               	movwf	_RSSITarget& (0+255),b
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;../app/app_src/application.c: 1333:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1,RSSITarget);
 10808  002722  0E00               	movlw	0
 10809  002724  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10810  002726  0E1E               	movlw	30
 10811  002728  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10812  00272A  0060  F3EC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
 10813  002730  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10814  002734                     l17363:
 10815                           
 10816                           ;../app/app_src/application.c: 1337:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1);
 10817  002734  0E00               	movlw	0
 10818  002736  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10819  002738  0E1F               	movlw	31
 10820  00273A  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10821  00273C  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10822  002740  6E35               	movwf	bootLoadApplication@i^0,c
 10823                           
 10824                           ;../app/app_src/application.c: 1338:     if((i > UART_9BIT_EVEN_PARITY) | (UART_7BIT_MOD
      +                          E == i)){
 10825  002742  0E04               	movlw	4
 10826  002744  6035               	cpfslt	bootLoadApplication@i^0,c
 10827  002746  D003               	goto	u18000
 10828  002748  0435               	decf	bootLoadApplication@i^0,w,c
 10829  00274A  A4D8               	btfss	status,2,c
 10830  00274C  D00A               	goto	l17373
 10831  00274E                     u18000:
 10832                           
 10833                           ;../app/app_src/application.c: 1339:         i = UART_9BIT_EVEN_PARITY;
 10834  00274E  0E03               	movlw	3
 10835  002750  6E35               	movwf	bootLoadApplication@i^0,c
 10836                           
 10837                           ;../app/app_src/application.c: 1340:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
 10838  002752  0E00               	movlw	0
 10839  002754  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10840  002756  0E1F               	movlw	31
 10841  002758  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10842  00275A  0E03               	movlw	3
 10843  00275C  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10844  00275E  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10845  002762                     l17373:
 10846                           
 10847                           ;../app/app_src/application.c: 1343:     set_parity(i);
 10848  002762  5035               	movf	bootLoadApplication@i^0,w,c
 10849  002764  ECC2  F03C         	call	_set_parity
 10850                           
 10851                           ;../app/app_src/application.c: 1346:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10852  002768  0E00               	movlw	0
 10853  00276A  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10854  00276C  0E20               	movlw	32
 10855  00276E  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10856  002770  ECAF  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10857  002774  6E35               	movwf	bootLoadApplication@i^0,c
 10858                           
 10859                           ;../app/app_src/application.c: 1347:     if(i > UART_BAUD_19200){
 10860  002776  0E01               	movlw	1
 10861  002778  6435               	cpfsgt	bootLoadApplication@i^0,c
 10862  00277A  D00A               	goto	l17383
 10863                           
 10864                           ;../app/app_src/application.c: 1348:         i = UART_BAUD_19200;
 10865  00277C  0E01               	movlw	1
 10866  00277E  6E35               	movwf	bootLoadApplication@i^0,c
 10867                           
 10868                           ;../app/app_src/application.c: 1349:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
 10869  002780  0E00               	movlw	0
 10870  002782  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10871  002784  0E20               	movlw	32
 10872  002786  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10873  002788  0E01               	movlw	1
 10874  00278A  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10875  00278C  ECD6  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10876  002790                     l17383:
 10877                           
 10878                           ;../app/app_src/application.c: 1351:     set_uart_baud(i);
 10879  002790  5035               	movf	bootLoadApplication@i^0,w,c
 10880  002792  ECE8  F02F         	call	_set_uart_baud
 10881                           
 10882                           ;../app/app_src/application.c: 1390:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 10883  002796  0E00               	movlw	0
 10884  002798  6E32               	movwf	bootLoadApplication@buf_id^0,c
 10885  00279A                     l17389:
 10886                           
 10887                           ;../app/app_src/application.c: 1391:         tx_buffer[buf_id].free = 1;
 10888  00279A  5032               	movf	bootLoadApplication@buf_id^0,w,c
 10889  00279C  0D83               	mullw	131
 10890  00279E  0E6A               	movlw	low _tx_buffer
 10891  0027A0  24F3               	addwf	243,w,c
 10892  0027A2  6ED9               	movwf	fsr2l,c
 10893  0027A4  0E08               	movlw	high _tx_buffer
 10894  0027A6  20F4               	addwfc	prodh,w,c
 10895  0027A8  6EDA               	movwf	fsr2h,c
 10896  0027AA  84DF               	bsf	indf2,2,c
 10897                           
 10898                           ;../app/app_src/application.c: 1392:     }
 10899  0027AC  2A32               	incf	bootLoadApplication@buf_id^0,f,c
 10900  0027AE  0E03               	movlw	3
 10901  0027B0  6432               	cpfsgt	bootLoadApplication@buf_id^0,c
 10902  0027B2  D7F3               	goto	l17389
 10903                           
 10904                           ;../app/app_src/application.c: 1393:     temp = (currentAddr0 << 8) | currentAddr1;
 10905  0027B4  0101               	movlb	1	; () banked
 10906  0027B6  51ED               	movf	_currentAddr1& (0+255),w,b
 10907  0027B8  0060  F7B8  F030   	movff	_currentAddr0,??_bootLoadApplication
 10908  0027BE  6A31               	clrf	(??_bootLoadApplication+1)^0,c
 10909  0027C0  0060  F0C0  F031   	movff	??_bootLoadApplication,??_bootLoadApplication+1
 10910  0027C6  6A30               	clrf	??_bootLoadApplication^0,c
 10911  0027C8  1030               	iorwf	??_bootLoadApplication^0,w,c
 10912  0027CA  6E33               	movwf	bootLoadApplication@temp^0,c
 10913  0027CC  5031               	movf	(??_bootLoadApplication+1)^0,w,c
 10914  0027CE  6E34               	movwf	(bootLoadApplication@temp+1)^0,c
 10915                           
 10916                           ;../app/app_src/application.c: 1394:     if(temp > 0x8000){
 10917  0027D0  0433               	decf	bootLoadApplication@temp^0,w,c
 10918  0027D2  0E80               	movlw	128
 10919  0027D4  5834               	subwfb	(bootLoadApplication@temp+1)^0,w,c
 10920  0027D6  A0D8               	btfss	status,0,c
 10921  0027D8  D00A               	goto	l17403
 10922                           
 10923                           ; BSR set to: 1
 10924                           ;../app/app_src/application.c: 1395:         temp -= 0x8000;
 10925  0027DA  0E00               	movlw	0
 10926  0027DC  5E33               	subwf	bootLoadApplication@temp^0,f,c
 10927  0027DE  0E80               	movlw	128
 10928  0027E0  5A34               	subwfb	(bootLoadApplication@temp+1)^0,f,c
 10929                           
 10930                           ; BSR set to: 1
 10931                           ;../app/app_src/application.c: 1396:         currentAddr0 = (temp >> 8) & 0xFF;
 10932  0027E2  0060  F0D0  F1EE   	movff	bootLoadApplication@temp+1,_currentAddr0
 10933                           
 10934                           ; BSR set to: 1
 10935                           ;../app/app_src/application.c: 1397:         currentAddr1 = temp & 0xFF;
 10936  0027E8  0060  F0CC  F1ED   	movff	bootLoadApplication@temp,_currentAddr1
 10937  0027EE                     l17403:
 10938                           
 10939                           ; BSR set to: 1
 10940                           ;../app/app_src/application.c: 1399:     NWK_SetAddr(temp);
 10941  0027EE  0060  F0CC  F004   	movff	bootLoadApplication@temp,NWK_SetAddr@addr
 10942  0027F4  0060  F0D0  F005   	movff	bootLoadApplication@temp+1,NWK_SetAddr@addr+1
 10943  0027FA  EC7F  F045         	call	_NWK_SetAddr	;wreg free
 10944                           
 10945                           ; BSR set to: 1
 10946                           ;../app/app_src/application.c: 1400:     NWK_SetPanId(0x1234);
 10947  0027FE  0E12               	movlw	18
 10948  002800  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
 10949  002802  0E34               	movlw	52
 10950  002804  6E04               	movwf	NWK_SetPanId@panId^0,c
 10951  002806  EC70  F045         	call	_NWK_SetPanId	;wreg free
 10952                           
 10953                           ; BSR set to: 1
 10954                           ;../app/app_src/application.c: 1401:     PHY_SetChannel(0x00);
 10955  00280A  0E00               	movlw	0
 10956  00280C  ECFE  F040         	call	_PHY_SetChannel
 10957                           
 10958                           ; BSR set to: 61
 10959                           ;../app/app_src/application.c: 1402:     PHY_SetRxState(1);
 10960  002810  0E01               	movlw	1
 10961  002812  EC15  F047         	call	_PHY_SetRxState
 10962                           
 10963                           ; BSR set to: 61
 10964                           ;../app/app_src/application.c: 1403:     NWK_OpenEndpoint(ASCII_EP, appDataInd);
 10965  002816  0E9E               	movlw	low _appDataInd
 10966  002818  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 10967  00281A  0E72               	movlw	high _appDataInd
 10968  00281C  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 10969  00281E  0E01               	movlw	1
 10970  002820  EC2F  F045         	call	_NWK_OpenEndpoint
 10971  002824  0012               	return		;funcret
 10972  002826                     __end_of_bootLoadApplication:
 10973                           	opt callstack 0
 10974                           
 10975 ;; *************** function _set_uart_baud *****************
 10976 ;; Defined at:
 10977 ;;		line 148 in file "../app/app_src/application.c"
 10978 ;; Parameters:    Size  Location     Type
 10979 ;;  i               1    wreg     unsigned char 
 10980 ;; Auto vars:     Size  Location     Type
 10981 ;;  i               1    3[COMRAM] unsigned char 
 10982 ;; Return value:  Size  Location     Type
 10983 ;;                  1    wreg      unsigned char 
 10984 ;; Registers used:
 10985 ;;		wreg, status,2, status,0
 10986 ;; Tracked objects:
 10987 ;;		On entry : 0/0
 10988 ;;		On exit  : 3F/3D
 10989 ;;		Unchanged: 0/0
 10990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;Total ram usage:        3 bytes
 10996 ;; Hardware stack levels used:    1
 10997 ;; Hardware stack levels required when called:    7
 10998 ;; This function calls:
 10999 ;;		Nothing
 11000 ;; This function is called by:
 11001 ;;		_bootLoadApplication
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           	psect	text58
 11006  005FD0                     __ptext58:
 11007                           	opt callstack 0
 11008  005FD0                     _set_uart_baud:
 11009                           	opt callstack 22
 11010                           
 11011                           ;incstack = 0
 11012                           ;set_uart_baud@i stored from wreg
 11013  005FD0  6E04               	movwf	set_uart_baud@i^0,c
 11014                           
 11015                           ;../app/app_src/application.c: 148: static uint8_t set_uart_baud(uint8_t i);../app/app_s
      +                          rc/application.c: 149: {;../app/app_src/application.c: 150:     U1CON1 &= ~(1<<7);
 11016  005FD2  013D               	movlb	61	; () banked
 11017  005FD4  9FF3               	bcf	243,7,b	;volatile
 11018                           
 11019                           ;../app/app_src/application.c: 151:     switch(i)
 11020  005FD6  D047               	goto	l12743
 11021  005FD8                     l12691:
 11022                           
 11023                           ; BSR set to: 61
 11024                           ;../app/app_src/application.c: 155:             U1CON0 &=~ (1<<7);
 11025  005FD8  9FF2               	bcf	242,7,b	;volatile
 11026                           
 11027                           ; BSR set to: 61
 11028                           ;../app/app_src/application.c: 156:             U1BRGL = 0xA0;
 11029  005FDA  0EA0               	movlw	160
 11030  005FDC  6FF5               	movwf	245,b	;volatile
 11031                           
 11032                           ; BSR set to: 61
 11033                           ;../app/app_src/application.c: 157:             U1BRGH = 0x01;
 11034  005FDE  0E01               	movlw	1
 11035  005FE0  6FF6               	movwf	246,b	;volatile
 11036                           
 11037                           ; BSR set to: 61
 11038                           ;../app/app_src/application.c: 158:             current_baud_rate = 9600;
 11039  005FE2  0E80               	movlw	128
 11040  005FE4  0101               	movlb	1	; () banked
 11041  005FE6  6F62               	movwf	_current_baud_rate& (0+255),b
 11042  005FE8  0E25               	movlw	37
 11043  005FEA  6F63               	movwf	(_current_baud_rate+1)& (0+255),b
 11044  005FEC  0E00               	movlw	0
 11045  005FEE  6F64               	movwf	(_current_baud_rate+2)& (0+255),b
 11046                           
 11047                           ; BSR set to: 1
 11048                           ;../app/app_src/application.c: 159:             uart_baud_rate = UART_BAUD_9600;
 11049  005FF0  0E00               	movlw	0
 11050  005FF2  D037               	goto	L6
 11051  005FF4                     l12701:
 11052                           
 11053                           ; BSR set to: 61
 11054                           ;../app/app_src/application.c: 163:             U1CON0 &=~ (1<<7);
 11055  005FF4  9FF2               	bcf	242,7,b	;volatile
 11056                           
 11057                           ; BSR set to: 61
 11058                           ;../app/app_src/application.c: 164:             U1BRGL = 0xCF;
 11059  005FF6  0ECF               	movlw	207
 11060  005FF8  6FF5               	movwf	245,b	;volatile
 11061                           
 11062                           ; BSR set to: 61
 11063                           ;../app/app_src/application.c: 165:             U1BRGH = 0x00;
 11064  005FFA  0E00               	movlw	0
 11065  005FFC  6FF6               	movwf	246,b	;volatile
 11066                           
 11067                           ; BSR set to: 61
 11068                           ;../app/app_src/application.c: 166:             current_baud_rate = 19200;
 11069  005FFE  0E00               	movlw	0
 11070  006000  0101               	movlb	1	; () banked
 11071  006002  6F62               	movwf	_current_baud_rate& (0+255),b
 11072  006004  0E4B               	movlw	75
 11073  006006  6F63               	movwf	(_current_baud_rate+1)& (0+255),b
 11074  006008  0E00               	movlw	0
 11075  00600A  6F64               	movwf	(_current_baud_rate+2)& (0+255),b
 11076                           
 11077                           ; BSR set to: 1
 11078                           ;../app/app_src/application.c: 167:             uart_baud_rate = UART_BAUD_19200;
 11079  00600C  0E01               	movlw	1
 11080  00600E  D029               	goto	L6
 11081  006010                     l12711:
 11082                           
 11083                           ; BSR set to: 61
 11084                           ;../app/app_src/application.c: 171:             U1CON0 &=~ (1<<7);
 11085  006010  9FF2               	bcf	242,7,b	;volatile
 11086                           
 11087                           ; BSR set to: 61
 11088                           ;../app/app_src/application.c: 172:             U1BRGL = 0x67;
 11089  006012  0E67               	movlw	103
 11090  006014  6FF5               	movwf	245,b	;volatile
 11091                           
 11092                           ; BSR set to: 61
 11093                           ;../app/app_src/application.c: 173:             U1BRGH = 0x00;
 11094  006016  0E00               	movlw	0
 11095  006018  6FF6               	movwf	246,b	;volatile
 11096                           
 11097                           ; BSR set to: 61
 11098                           ;../app/app_src/application.c: 174:             current_baud_rate = 38400;
 11099  00601A  0E00               	movlw	0
 11100  00601C  0101               	movlb	1	; () banked
 11101  00601E  6F62               	movwf	_current_baud_rate& (0+255),b
 11102  006020  0E96               	movlw	150
 11103  006022  6F63               	movwf	(_current_baud_rate+1)& (0+255),b
 11104  006024  0E00               	movlw	0
 11105  006026  6F64               	movwf	(_current_baud_rate+2)& (0+255),b
 11106                           
 11107                           ; BSR set to: 1
 11108                           ;../app/app_src/application.c: 175:             uart_baud_rate = UART_BAUD_38400;
 11109  006028  0E02               	movlw	2
 11110  00602A  D01B               	goto	L6
 11111  00602C                     l12721:
 11112                           
 11113                           ; BSR set to: 61
 11114                           ;../app/app_src/application.c: 179:             U1CON0 |= (1<<7);
 11115  00602C  8FF2               	bsf	242,7,b	;volatile
 11116                           
 11117                           ; BSR set to: 61
 11118                           ;../app/app_src/application.c: 180:             U1BRGL = 0x14;
 11119  00602E  0E14               	movlw	20
 11120  006030  6FF5               	movwf	245,b	;volatile
 11121                           
 11122                           ; BSR set to: 61
 11123                           ;../app/app_src/application.c: 181:             U1BRGH = 0x01;
 11124  006032  0E01               	movlw	1
 11125  006034  6FF6               	movwf	246,b	;volatile
 11126                           
 11127                           ; BSR set to: 61
 11128                           ;../app/app_src/application.c: 182:             current_baud_rate = 57600;
 11129  006036  0E00               	movlw	0
 11130  006038  0101               	movlb	1	; () banked
 11131  00603A  6F62               	movwf	_current_baud_rate& (0+255),b
 11132  00603C  0EE1               	movlw	225
 11133  00603E  6F63               	movwf	(_current_baud_rate+1)& (0+255),b
 11134  006040  0E00               	movlw	0
 11135  006042  6F64               	movwf	(_current_baud_rate+2)& (0+255),b
 11136                           
 11137                           ; BSR set to: 1
 11138                           ;../app/app_src/application.c: 183:             uart_baud_rate = UART_BAUD_57600;
 11139  006044  0E03               	movlw	3
 11140  006046  D00D               	goto	L6
 11141  006048                     l12731:
 11142                           
 11143                           ; BSR set to: 61
 11144                           ;../app/app_src/application.c: 187:             U1CON0 |= (1<<7);
 11145  006048  8FF2               	bsf	242,7,b	;volatile
 11146                           
 11147                           ; BSR set to: 61
 11148                           ;../app/app_src/application.c: 188:             U1BRGL = 0x89;
 11149  00604A  0E89               	movlw	137
 11150  00604C  6FF5               	movwf	245,b	;volatile
 11151                           
 11152                           ; BSR set to: 61
 11153                           ;../app/app_src/application.c: 189:             U1BRGH = 0x00;
 11154  00604E  0E00               	movlw	0
 11155  006050  6FF6               	movwf	246,b	;volatile
 11156                           
 11157                           ; BSR set to: 61
 11158                           ;../app/app_src/application.c: 190:             current_baud_rate = 115200;
 11159  006052  0E00               	movlw	0
 11160  006054  0101               	movlb	1	; () banked
 11161  006056  6F62               	movwf	_current_baud_rate& (0+255),b
 11162  006058  0EC2               	movlw	194
 11163  00605A  6F63               	movwf	(_current_baud_rate+1)& (0+255),b
 11164  00605C  0E01               	movlw	1
 11165  00605E  6F64               	movwf	(_current_baud_rate+2)& (0+255),b
 11166                           
 11167                           ; BSR set to: 1
 11168                           ;../app/app_src/application.c: 191:             uart_baud_rate = UART_BAUD_115200;
 11169  006060  0E04               	movlw	4
 11170  006062                     L6:
 11171  006062  6F89               	movwf	_uart_baud_rate& (0+255),b
 11172                           
 11173                           ;../app/app_src/application.c: 192:             break;
 11174  006064  D018               	goto	l12745
 11175  006066                     l12743:
 11176                           
 11177                           ; BSR set to: 61
 11178  006066  5004               	movf	set_uart_baud@i^0,w,c
 11179  006068  6E02               	movwf	??_set_uart_baud^0,c
 11180  00606A  6A03               	clrf	(??_set_uart_baud+1)^0,c
 11181                           
 11182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11183                           ; Switch size 1, requested type "simple"
 11184                           ; Number of cases is 1, Range of values is 0 to 0
 11185                           ; switch strategies available:
 11186                           ; Name         Instructions Cycles
 11187                           ; simple_byte            4     3 (average)
 11188                           ;	Chosen strategy is simple_byte
 11189  00606C  5003               	movf	(??_set_uart_baud+1)^0,w,c
 11190  00606E  0A00               	xorlw	0	; case 0
 11191  006070  A4D8               	btfss	status,2,c
 11192  006072  0012               	return	
 11193                           
 11194                           ; BSR set to: 61
 11195                           ; Switch size 1, requested type "simple"
 11196                           ; Number of cases is 5, Range of values is 0 to 4
 11197                           ; switch strategies available:
 11198                           ; Name         Instructions Cycles
 11199                           ; simple_byte           16     9 (average)
 11200                           ;	Chosen strategy is simple_byte
 11201  006074  5002               	movf	??_set_uart_baud^0,w,c
 11202  006076  0A00               	xorlw	0	; case 0
 11203  006078  B4D8               	btfsc	status,2,c
 11204  00607A  D7AE               	goto	l12691
 11205  00607C  0A01               	xorlw	1	; case 1
 11206  00607E  B4D8               	btfsc	status,2,c
 11207  006080  D7B9               	goto	l12701
 11208  006082  0A03               	xorlw	3	; case 2
 11209  006084  B4D8               	btfsc	status,2,c
 11210  006086  D7C4               	goto	l12711
 11211  006088  0A01               	xorlw	1	; case 3
 11212  00608A  B4D8               	btfsc	status,2,c
 11213  00608C  D7CF               	goto	l12721
 11214  00608E  0A07               	xorlw	7	; case 4
 11215  006090  A4D8               	btfss	status,2,c
 11216  006092  0012               	return	
 11217  006094  D7D9               	goto	l12731
 11218  006096                     l12745:
 11219                           
 11220                           ; BSR set to: 1
 11221                           ;../app/app_src/application.c: 196:     U1CON1 |= (1<<7);
 11222  006096  013D               	movlb	61	; () banked
 11223  006098  8FF3               	bsf	243,7,b	;volatile
 11224                           
 11225                           ; BSR set to: 61
 11226  00609A  0012               	return		;funcret
 11227  00609C                     __end_of_set_uart_baud:
 11228                           	opt callstack 0
 11229                           
 11230 ;; *************** function _set_parity *****************
 11231 ;; Defined at:
 11232 ;;		line 104 in file "../app/app_src/application.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;  parity          1    wreg     unsigned char 
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  parity          1    3[COMRAM] unsigned char 
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  1    wreg      unsigned char 
 11239 ;; Registers used:
 11240 ;;		wreg, status,2, status,0
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11248 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11249 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11250 ;;Total ram usage:        3 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:    7
 11253 ;; This function calls:
 11254 ;;		Nothing
 11255 ;; This function is called by:
 11256 ;;		_cmdSetParity
 11257 ;;		_bootLoadApplication
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text59
 11262  007984                     __ptext59:
 11263                           	opt callstack 0
 11264  007984                     _set_parity:
 11265                           	opt callstack 20
 11266                           
 11267                           ; BSR set to: 61
 11268                           ;incstack = 0
 11269                           ;set_parity@parity stored from wreg
 11270  007984  6E04               	movwf	set_parity@parity^0,c
 11271                           
 11272                           ;../app/app_src/application.c: 104: static uint8_t set_parity(uint8_t parity);../app/app
      +                          _src/application.c: 105: {;../app/app_src/application.c: 106:     if((parity >= UART_PAR
      +                          ITY_SENTINAL) || (UART_7BIT_MODE == parity)){
 11273  007986  0E04               	movlw	4
 11274  007988  6004               	cpfslt	set_parity@parity^0,c
 11275  00798A  0012               	return	
 11276  00798C  0404               	decf	set_parity@parity^0,w,c
 11277  00798E  B4D8               	btfsc	status,2,c
 11278  007990  0012               	return	
 11279                           
 11280                           ;../app/app_src/application.c: 109:     U1CON1 &= 0b01111111;
 11281  007992  013D               	movlb	61	; () banked
 11282  007994  9FF3               	bcf	243,7,b	;volatile
 11283                           
 11284                           ; BSR set to: 61
 11285                           ;../app/app_src/application.c: 110:     U1CON0 &= 0b11110000;
 11286  007996  0EF0               	movlw	240
 11287  007998  17F2               	andwf	242,f,b	;volatile
 11288                           
 11289                           ; BSR set to: 61
 11290                           ;../app/app_src/application.c: 111:     U1CON0 |= (parity & 0b00001111);
 11291  00799A  5004               	movf	set_parity@parity^0,w,c
 11292  00799C  0B0F               	andlw	15
 11293  00799E  13F2               	iorwf	242,f,b	;volatile
 11294                           
 11295                           ; BSR set to: 61
 11296                           ;../app/app_src/application.c: 112:     U1CON2 &=~ (0b00110000);
 11297  0079A0  0ECF               	movlw	207
 11298  0079A2  17F4               	andwf	244,f,b	;volatile
 11299                           
 11300                           ; BSR set to: 61
 11301                           ;../app/app_src/application.c: 113:     U1CON1 |= 0b10000000;
 11302  0079A4  8FF3               	bsf	243,7,b	;volatile
 11303                           
 11304                           ;../app/app_src/application.c: 114:     switch(parity){
 11305  0079A6  D00C               	goto	l15843
 11306  0079A8                     l15835:
 11307                           
 11308                           ; BSR set to: 61
 11309                           ;../app/app_src/application.c: 116:             uart_parity = UART_8BIT_NO_PARITY;
 11310  0079A8  0E00               	movlw	0
 11311  0079AA  0101               	movlb	1	; () banked
 11312  0079AC  6F88               	movwf	_uart_parity& (0+255),b
 11313                           
 11314                           ;../app/app_src/application.c: 120:             break;
 11315  0079AE  0012               	return	
 11316  0079B0                     l15837:
 11317                           
 11318                           ; BSR set to: 61
 11319                           ;../app/app_src/application.c: 122:             uart_parity = UART_9BIT_ODD_PARITY;
 11320  0079B0  0E02               	movlw	2
 11321  0079B2  0101               	movlb	1	; () banked
 11322  0079B4  6F88               	movwf	_uart_parity& (0+255),b
 11323                           
 11324                           ;../app/app_src/application.c: 126:             break;
 11325  0079B6  0012               	return	
 11326  0079B8                     l15839:
 11327                           
 11328                           ; BSR set to: 61
 11329                           ;../app/app_src/application.c: 128:             uart_parity = UART_9BIT_EVEN_PARITY;
 11330  0079B8  0E03               	movlw	3
 11331  0079BA  0101               	movlb	1	; () banked
 11332  0079BC  6F88               	movwf	_uart_parity& (0+255),b
 11333                           
 11334                           ;../app/app_src/application.c: 132:             break;
 11335  0079BE  0012               	return	
 11336  0079C0                     l15843:
 11337                           
 11338                           ; BSR set to: 61
 11339  0079C0  5004               	movf	set_parity@parity^0,w,c
 11340  0079C2  6E02               	movwf	??_set_parity^0,c
 11341  0079C4  6A03               	clrf	(??_set_parity+1)^0,c
 11342                           
 11343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11344                           ; Switch size 1, requested type "simple"
 11345                           ; Number of cases is 1, Range of values is 0 to 0
 11346                           ; switch strategies available:
 11347                           ; Name         Instructions Cycles
 11348                           ; simple_byte            4     3 (average)
 11349                           ;	Chosen strategy is simple_byte
 11350  0079C6  5003               	movf	(??_set_parity+1)^0,w,c
 11351  0079C8  0A00               	xorlw	0	; case 0
 11352  0079CA  A4D8               	btfss	status,2,c
 11353  0079CC  D7ED               	goto	l15835
 11354                           
 11355                           ; BSR set to: 61
 11356                           ; Switch size 1, requested type "simple"
 11357                           ; Number of cases is 3, Range of values is 0 to 3
 11358                           ; switch strategies available:
 11359                           ; Name         Instructions Cycles
 11360                           ; simple_byte           10     6 (average)
 11361                           ;	Chosen strategy is simple_byte
 11362  0079CE  5002               	movf	??_set_parity^0,w,c
 11363  0079D0  0A00               	xorlw	0	; case 0
 11364  0079D2  B4D8               	btfsc	status,2,c
 11365  0079D4  D7E9               	goto	l15835
 11366  0079D6  0A02               	xorlw	2	; case 2
 11367  0079D8  B4D8               	btfsc	status,2,c
 11368  0079DA  D7EA               	goto	l15837
 11369  0079DC  0A01               	xorlw	1	; case 3
 11370  0079DE  B4D8               	btfsc	status,2,c
 11371  0079E0  D7EB               	goto	l15839
 11372  0079E2  D7E2               	goto	l15835
 11373  0079E4                     __end_of_set_parity:
 11374                           	opt callstack 0
 11375                           
 11376 ;; *************** function _loadMACAddr *****************
 11377 ;; Defined at:
 11378 ;;		line 1256 in file "../app/app_src/application.c"
 11379 ;; Parameters:    Size  Location     Type
 11380 ;;		None
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;  i               1    5[COMRAM] unsigned char 
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  1    wreg      void 
 11385 ;; Registers used:
 11386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11387 ;; Tracked objects:
 11388 ;;		On entry : 3F/2
 11389 ;;		On exit  : 0/0
 11390 ;;		Unchanged: 0/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11396 ;;Total ram usage:        1 bytes
 11397 ;; Hardware stack levels used:    1
 11398 ;; Hardware stack levels required when called:    8
 11399 ;; This function calls:
 11400 ;;		_DIA_ReadByte
 11401 ;; This function is called by:
 11402 ;;		_bootLoadApplication
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text60
 11407  008332                     __ptext60:
 11408                           	opt callstack 0
 11409  008332                     _loadMACAddr:
 11410                           	opt callstack 21
 11411                           
 11412                           ; BSR set to: 2
 11413                           ;../app/app_src/application.c: 1259:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
 11414                           
 11415                           ;incstack = 0
 11416  008332  0E00               	movlw	0
 11417  008334  6E06               	movwf	loadMACAddr@i^0,c
 11418  008336                     l12925:
 11419                           
 11420                           ;../app/app_src/application.c: 1260:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8
      +                          _t)DIA_ReadByte(0x3F0000 + i);
 11421  008336  5006               	movf	loadMACAddr@i^0,w,c
 11422  008338  08BD               	sublw	low (_EUIDbyte+11)
 11423  00833A  6ED9               	movwf	fsr2l,c
 11424  00833C  0E00               	movlw	0
 11425  00833E  A0D8               	btfss	status,0,c
 11426  008340  2AE8               	incf	wreg,f,c
 11427  008342  0801               	sublw	high (_EUIDbyte+11)
 11428  008344  6EDA               	movwf	fsr2h,c
 11429  008346  0E00               	movlw	0
 11430  008348  2406               	addwf	loadMACAddr@i^0,w,c
 11431  00834A  6E02               	movwf	DIA_ReadByte@flashAddr^0,c
 11432  00834C  6A03               	clrf	(DIA_ReadByte@flashAddr+1)^0,c
 11433  00834E  0E00               	movlw	0
 11434  008350  2203               	addwfc	(DIA_ReadByte@flashAddr+1)^0,f,c
 11435  008352  6A04               	clrf	(DIA_ReadByte@flashAddr+2)^0,c
 11436  008354  0E3F               	movlw	63
 11437  008356  2204               	addwfc	(DIA_ReadByte@flashAddr+2)^0,f,c
 11438  008358  6A05               	clrf	(DIA_ReadByte@flashAddr+3)^0,c
 11439  00835A  0E00               	movlw	0
 11440  00835C  2205               	addwfc	(DIA_ReadByte@flashAddr+3)^0,f,c
 11441  00835E  EC97  F044         	call	_DIA_ReadByte	;wreg free
 11442  008362  6EDF               	movwf	indf2,c
 11443                           
 11444                           ;../app/app_src/application.c: 1261:     }
 11445  008364  2A06               	incf	loadMACAddr@i^0,f,c
 11446  008366  0E0B               	movlw	11
 11447  008368  6406               	cpfsgt	loadMACAddr@i^0,c
 11448  00836A  D7E5               	goto	l12925
 11449  00836C  0012               	return	
 11450  00836E                     __end_of_loadMACAddr:
 11451                           	opt callstack 0
 11452                           
 11453 ;; *************** function _DIA_ReadByte *****************
 11454 ;; Defined at:
 11455 ;;		line 212 in file "mcc_generated_files/memory.c"
 11456 ;; Parameters:    Size  Location     Type
 11457 ;;  flashAddr       4    1[COMRAM] unsigned long 
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;		None
 11460 ;; Return value:  Size  Location     Type
 11461 ;;                  1    wreg      unsigned char 
 11462 ;; Registers used:
 11463 ;;		wreg, status,2
 11464 ;; Tracked objects:
 11465 ;;		On entry : 0/2
 11466 ;;		On exit  : 0/0
 11467 ;;		Unchanged: 0/0
 11468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;Total ram usage:        4 bytes
 11474 ;; Hardware stack levels used:    1
 11475 ;; Hardware stack levels required when called:    7
 11476 ;; This function calls:
 11477 ;;		Nothing
 11478 ;; This function is called by:
 11479 ;;		_loadMACAddr
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           	psect	text61
 11484  00892E                     __ptext61:
 11485                           	opt callstack 0
 11486  00892E                     _DIA_ReadByte:
 11487                           	opt callstack 21
 11488                           
 11489                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
 11490                           
 11491                           ;incstack = 0
 11492  00892E  0139               	movlb	57	; () banked
 11493  008930  51E5               	movf	229,w,b	;volsfr
 11494  008932  0B3F               	andlw	-193
 11495  008934  0940               	iorlw	64
 11496  008936  6FE5               	movwf	229,b	;volsfr
 11497                           
 11498                           ; BSR set to: 57
 11499                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
 11500  008938  0060  F013  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
 11501                           
 11502                           ; BSR set to: 57
 11503                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
 11504  00893E  0060  F00F  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
 11505                           
 11506                           ; BSR set to: 57
 11507                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 11508  008944  0060  F00B  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
 11509  00894A  0008               	tblrd		*	;# 
 11510                           
 11511                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
 11512  00894C  50F5               	movf	245,w,c	;volatile
 11513  00894E  0012               	return		;funcret
 11514  008950                     __end_of_DIA_ReadByte:
 11515                           	opt callstack 0
 11516                           
 11517 ;; *************** function _crc16_app *****************
 11518 ;; Defined at:
 11519 ;;		line 4 in file "../app/app_src/crc.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;  dptr            2   18[COMRAM] PTR void 
 11522 ;;		 -> EUIDbyte(12), 
 11523 ;;  len             2   20[COMRAM] unsigned short 
 11524 ;;  seed            2   22[COMRAM] unsigned short 
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;  i               2   28[COMRAM] unsigned short 
 11527 ;;  ptr             2   26[COMRAM] PTR unsigned char 
 11528 ;;		 -> EUIDbyte(12), 
 11529 ;;  result          2   24[COMRAM] unsigned short 
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  2   18[COMRAM] unsigned short 
 11532 ;; Registers used:
 11533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/2
 11536 ;;		On exit  : 3F/39
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11539 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11540 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11542 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11543 ;;Total ram usage:       12 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; Hardware stack levels required when called:    9
 11546 ;; This function calls:
 11547 ;;		_CRC_8BitDataWrite
 11548 ;;		_CRC_CalculatedResultGet
 11549 ;; This function is called by:
 11550 ;;		_bootLoadApplication
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           	psect	text62
 11555  00721A                     __ptext62:
 11556                           	opt callstack 0
 11557  00721A                     _crc16_app:
 11558                           	opt callstack 20
 11559                           
 11560                           ;../app/app_src/crc.c: 5:     uint8_t* ptr = (uint8_t*)dptr;
 11561                           
 11562                           ;incstack = 0
 11563  00721A  0060  F04C  F01B   	movff	crc16_app@dptr,crc16_app@ptr
 11564  007220  0060  F050  F01C   	movff	crc16_app@dptr+1,crc16_app@ptr+1
 11565                           
 11566                           ;../app/app_src/crc.c: 6:     uint16_t result;;../app/app_src/crc.c: 8:     CRCACCL = se
      +                          ed;
 11567  007226  0060  F05F  F962   	movff	crc16_app@seed,14690	;volatile
 11568                           
 11569                           ;../app/app_src/crc.c: 9:     CRCACCH = seed >> 8;
 11570  00722C  0060  F063  F963   	movff	crc16_app@seed+1,14691	;volatile
 11571                           
 11572                           ;../app/app_src/crc.c: 12:     CRCCON0bits.EN = 1;
 11573  007232  0139               	movlb	57	; () banked
 11574  007234  8F68               	bsf	104,7,b	;volatile
 11575                           
 11576                           ; BSR set to: 57
 11577                           ;../app/app_src/crc.c: 13:     CRCCON0bits.CRCGO = 1;
 11578  007236  8D68               	bsf	104,6,b	;volatile
 11579                           
 11580                           ; BSR set to: 57
 11581                           ;../app/app_src/crc.c: 14:     for(uint16_t i = 0; i < len; i++ )
 11582  007238  0E00               	movlw	0
 11583  00723A  6E1E               	movwf	(crc16_app@i+1)^0,c
 11584  00723C  0E00               	movlw	0
 11585  00723E  6E1D               	movwf	crc16_app@i^0,c
 11586  007240  D00F               	goto	l12949
 11587  007242                     l610:
 11588                           
 11589                           ; BSR set to: 57
 11590  007242  B168               	btfsc	104,0,b	;volatile
 11591  007244  D7FE               	goto	l610
 11592                           
 11593                           ; BSR set to: 57
 11594                           ;../app/app_src/crc.c: 17:         CRC_8BitDataWrite(*ptr);
 11595  007246  0060  F06F  FFD9   	movff	crc16_app@ptr,fsr2l
 11596  00724C  0060  F073  FFDA   	movff	crc16_app@ptr+1,fsr2h
 11597  007252  50DF               	movf	indf2,w,c
 11598  007254  ECAA  F046         	call	_CRC_8BitDataWrite
 11599                           
 11600                           ; BSR set to: 57
 11601                           ;../app/app_src/crc.c: 18:         ptr++;
 11602  007258  4A1B               	infsnz	crc16_app@ptr^0,f,c
 11603  00725A  2A1C               	incf	(crc16_app@ptr+1)^0,f,c
 11604                           
 11605                           ; BSR set to: 57
 11606                           ;../app/app_src/crc.c: 19:     }
 11607  00725C  4A1D               	infsnz	crc16_app@i^0,f,c
 11608  00725E  2A1E               	incf	(crc16_app@i+1)^0,f,c
 11609  007260                     l12949:
 11610                           
 11611                           ; BSR set to: 57
 11612  007260  5015               	movf	crc16_app@len^0,w,c
 11613  007262  5C1D               	subwf	crc16_app@i^0,w,c
 11614  007264  5016               	movf	(crc16_app@len+1)^0,w,c
 11615  007266  581E               	subwfb	(crc16_app@i+1)^0,w,c
 11616  007268  A0D8               	btfss	status,0,c
 11617  00726A  D7EB               	goto	l610
 11618  00726C                     u12120:
 11619                           
 11620                           ; BSR set to: 57
 11621  00726C  BB68               	btfsc	104,5,b	;volatile
 11622  00726E  D7FE               	goto	u12120
 11623                           
 11624                           ; BSR set to: 57
 11625                           ;../app/app_src/crc.c: 22:     result = CRC_CalculatedResultGet(0,0);
 11626  007270  0E00               	movlw	0
 11627  007272  6E0A               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
 11628  007274  0E00               	movlw	0
 11629  007276  6E09               	movwf	CRC_CalculatedResultGet@xorValue^0,c
 11630  007278  0E00               	movlw	0
 11631  00727A  EC18  F02F         	call	_CRC_CalculatedResultGet
 11632  00727E  0060  F024  F019   	movff	?_CRC_CalculatedResultGet,crc16_app@result
 11633  007284  0060  F028  F01A   	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 11634                           
 11635                           ;../app/app_src/crc.c: 23:     CRCCON0bits.CRCGO = 0;
 11636  00728A  0139               	movlb	57	; () banked
 11637  00728C  9D68               	bcf	104,6,b	;volatile
 11638                           
 11639                           ; BSR set to: 57
 11640                           ;../app/app_src/crc.c: 24:     CRCCON0bits.EN = 0;
 11641  00728E  9F68               	bcf	104,7,b	;volatile
 11642                           
 11643                           ; BSR set to: 57
 11644                           ;../app/app_src/crc.c: 25:     return(result);
 11645  007290  0060  F064  F013   	movff	crc16_app@result,?_crc16_app
 11646  007296  0060  F068  F014   	movff	crc16_app@result+1,?_crc16_app+1
 11647                           
 11648                           ; BSR set to: 57
 11649  00729C  0012               	return		;funcret
 11650  00729E                     __end_of_crc16_app:
 11651                           	opt callstack 0
 11652                           
 11653 ;; *************** function _CRC_CalculatedResultGet *****************
 11654 ;; Defined at:
 11655 ;;		line 159 in file "mcc_generated_files/crc.c"
 11656 ;; Parameters:    Size  Location     Type
 11657 ;;  reverse         1    wreg     _Bool 
 11658 ;;  xorValue        2    8[COMRAM] unsigned short 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;  reverse         1   15[COMRAM] _Bool 
 11661 ;;  result          2   16[COMRAM] unsigned short 
 11662 ;;  mask            2   13[COMRAM] unsigned short 
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  2    8[COMRAM] unsigned short 
 11665 ;; Registers used:
 11666 ;;		wreg, status,2, status,0, cstack
 11667 ;; Tracked objects:
 11668 ;;		On entry : 3F/39
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11673 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11674 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11675 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11676 ;;Total ram usage:       10 bytes
 11677 ;; Hardware stack levels used:    1
 11678 ;; Hardware stack levels required when called:    8
 11679 ;; This function calls:
 11680 ;;		_CRC_ReverseValue
 11681 ;; This function is called by:
 11682 ;;		_crc16_app
 11683 ;; This function uses a non-reentrant model
 11684 ;;
 11685                           
 11686                           	psect	text63
 11687  005E30                     __ptext63:
 11688                           	opt callstack 0
 11689  005E30                     _CRC_CalculatedResultGet:
 11690                           	opt callstack 20
 11691                           
 11692                           ; BSR set to: 57
 11693                           ;incstack = 0
 11694                           ;CRC_CalculatedResultGet@reverse stored from wreg
 11695  005E30  6E10               	movwf	CRC_CalculatedResultGet@reverse^0,c
 11696                           
 11697                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11698  005E32  0139               	movlb	57	; () banked
 11699  005E34  9D68               	bcf	104,6,b	;volatile
 11700                           
 11701                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11702  005E36  9DA0               	bcf	160,6,b	;volatile
 11703                           
 11704                           ; BSR set to: 57
 11705                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11706  005E38  5169               	movf	105,w,b	;volatile
 11707  005E3A  0B0F               	andlw	15
 11708  005E3C  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11709  005E3E  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11710  005E40  5169               	movf	105,w,b	;volatile
 11711  005E42  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11712  005E44  0B0F               	andlw	-241
 11713  005E46  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11714  005E48  6F69               	movwf	105,b	;volatile
 11715                           
 11716                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11717  005E4A  0E08               	movlw	8
 11718  005E4C  0101               	movlb	1	; () banked
 11719  005E4E  65D1               	cpfsgt	(_crcObj+1)& (0+255),b
 11720  005E50  D005               	goto	l12303
 11721                           
 11722                           ; BSR set to: 1
 11723                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11724  005E52  0E00               	movlw	0
 11725  005E54  0139               	movlb	57	; () banked
 11726  005E56  6F61               	movwf	97,b	;volatile
 11727                           
 11728                           ;mcc_generated_files/crc.c: 171:          CRCDATL = 0;
 11729  005E58  0E00               	movlw	0
 11730  005E5A  D002               	goto	L7
 11731  005E5C                     l12303:
 11732                           
 11733                           ; BSR set to: 1
 11734                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11735  005E5C  0E00               	movlw	0
 11736  005E5E  0139               	movlb	57	; () banked
 11737  005E60                     L7:
 11738  005E60  6F60               	movwf	96,b	;volatile
 11739                           
 11740                           ; BSR set to: 57
 11741                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11742  005E62  8D68               	bsf	104,6,b	;volatile
 11743  005E64                     l1604:
 11744                           
 11745                           ; BSR set to: 57
 11746  005E64  ADA0               	btfss	160,6,b	;volatile
 11747  005E66  D7FE               	goto	l1604
 11748                           
 11749                           ; BSR set to: 57
 11750                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11751  005E68  9DA0               	bcf	160,6,b	;volatile
 11752                           
 11753                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11754  005E6A  9D68               	bcf	104,6,b	;volatile
 11755                           
 11756                           ; BSR set to: 57
 11757                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11758  005E6C  0060  F740  F00B   	movff	_crcObj,??_CRC_CalculatedResultGet
 11759  005E72  0EFF               	movlw	255
 11760  005E74  260B               	addwf	??_CRC_CalculatedResultGet^0,f,c
 11761  005E76  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11762  005E78  5169               	movf	105,w,b	;volatile
 11763  005E7A  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11764  005E7C  0B0F               	andlw	-241
 11765  005E7E  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11766  005E80  6F69               	movwf	105,b	;volatile
 11767                           
 11768                           ; BSR set to: 57
 11769                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11770  005E82  5163               	movf	99,w,b	;volatile
 11771  005E84  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11772  005E86  5162               	movf	98,w,b	;volatile
 11773  005E88  6E11               	movwf	CRC_CalculatedResultGet@result^0,c
 11774  005E8A  0060  F02C  F012   	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 11775                           
 11776                           ; BSR set to: 57
 11777                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11778  005E90  0E10               	movlw	16
 11779  005E92  0101               	movlb	1	; () banked
 11780  005E94  61D1               	cpfslt	(_crcObj+1)& (0+255),b
 11781  005E96  D018               	goto	l12315
 11782                           
 11783                           ; BSR set to: 1
 11784                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11785  005E98  0060  F744  F00B   	movff	_crcObj+1,??_CRC_CalculatedResultGet
 11786  005E9E  0E01               	movlw	1
 11787  005EA0  6E0C               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 11788  005EA2  0E00               	movlw	0
 11789  005EA4  6E0D               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 11790  005EA6  2A0B               	incf	??_CRC_CalculatedResultGet^0,f,c
 11791  005EA8  D003               	goto	u11344
 11792  005EAA                     u11345:
 11793  005EAA  90D8               	bcf	status,0,c
 11794  005EAC  360C               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 11795  005EAE  360D               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 11796  005EB0                     u11344:
 11797  005EB0  2E0B               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 11798  005EB2  D7FB               	goto	u11345
 11799  005EB4  0EFF               	movlw	255
 11800  005EB6  240C               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 11801  005EB8  6E0E               	movwf	CRC_CalculatedResultGet@mask^0,c
 11802  005EBA  0EFF               	movlw	255
 11803  005EBC  200D               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 11804  005EBE  6E0F               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 11805                           
 11806                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11807  005EC0  500E               	movf	CRC_CalculatedResultGet@mask^0,w,c
 11808  005EC2  1611               	andwf	CRC_CalculatedResultGet@result^0,f,c
 11809  005EC4  500F               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 11810  005EC6  1612               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11811  005EC8                     l12315:
 11812                           
 11813                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11814  005EC8  5010               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 11815  005ECA  B4D8               	btfsc	status,2,c
 11816  005ECC  D00E               	goto	l12319
 11817                           
 11818                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11819  005ECE  0060  F044  F002   	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 11820  005ED4  0060  F048  F003   	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 11821  005EDA  ECAC  F03D         	call	_CRC_ReverseValue	;wreg free
 11822  005EDE  0060  F008  F011   	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 11823  005EE4  0060  F00C  F012   	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 11824  005EEA                     l12319:
 11825                           
 11826                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11827  005EEA  5009               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 11828  005EEC  1A11               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 11829  005EEE  500A               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 11830  005EF0  1A12               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11831                           
 11832                           ;mcc_generated_files/crc.c: 198:     return result;
 11833  005EF2  0060  F044  F009   	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 11834  005EF8  0060  F048  F00A   	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 11835  005EFE  0012               	return		;funcret
 11836  005F00                     __end_of_CRC_CalculatedResultGet:
 11837                           	opt callstack 0
 11838                           
 11839 ;; *************** function _CRC_ReverseValue *****************
 11840 ;; Defined at:
 11841 ;;		line 138 in file "mcc_generated_files/crc.c"
 11842 ;; Parameters:    Size  Location     Type
 11843 ;;  crc             2    1[COMRAM] unsigned short 
 11844 ;; Auto vars:     Size  Location     Type
 11845 ;;  mask            2    6[COMRAM] unsigned short 
 11846 ;;  reverse         2    4[COMRAM] unsigned short 
 11847 ;; Return value:  Size  Location     Type
 11848 ;;                  2    1[COMRAM] unsigned short 
 11849 ;; Registers used:
 11850 ;;		wreg, status,2, status,0
 11851 ;; Tracked objects:
 11852 ;;		On entry : 0/1
 11853 ;;		On exit  : 0/0
 11854 ;;		Unchanged: 0/0
 11855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;Total ram usage:        7 bytes
 11861 ;; Hardware stack levels used:    1
 11862 ;; Hardware stack levels required when called:    7
 11863 ;; This function calls:
 11864 ;;		Nothing
 11865 ;; This function is called by:
 11866 ;;		_CRC_CalculatedResultGet
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           	psect	text64
 11871  007B58                     __ptext64:
 11872                           	opt callstack 0
 11873  007B58                     _CRC_ReverseValue:
 11874                           	opt callstack 20
 11875                           
 11876                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11877                           
 11878                           ;incstack = 0
 11879  007B58  0E00               	movlw	0
 11880  007B5A  6E08               	movwf	(CRC_ReverseValue@mask+1)^0,c
 11881  007B5C  0E01               	movlw	1
 11882  007B5E  6E07               	movwf	CRC_ReverseValue@mask^0,c
 11883                           
 11884                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11885  007B60  0060  F744  F004   	movff	_crcObj+1,??_CRC_ReverseValue
 11886  007B66  0EFF               	movlw	255
 11887  007B68  2604               	addwf	??_CRC_ReverseValue^0,f,c
 11888  007B6A  2804               	incf	??_CRC_ReverseValue^0,w,c
 11889  007B6C  D003               	goto	u10360
 11890  007B6E                     u10365:
 11891  007B6E  90D8               	bcf	status,0,c
 11892  007B70  3607               	rlcf	CRC_ReverseValue@mask^0,f,c
 11893  007B72  3608               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 11894  007B74                     u10360:
 11895  007B74  2EE8               	decfsz	wreg,f,c
 11896  007B76  D7FB               	goto	u10365
 11897                           
 11898                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11899  007B78  0E00               	movlw	0
 11900  007B7A  6E06               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 11901  007B7C  0E00               	movlw	0
 11902  007B7E  6E05               	movwf	CRC_ReverseValue@reverse^0,c
 11903                           
 11904                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11905  007B80  D00C               	goto	l1595
 11906  007B82                     l1596:
 11907                           
 11908                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11909  007B82  A002               	btfss	CRC_ReverseValue@crc^0,0,c
 11910  007B84  D004               	goto	l11575
 11911                           
 11912                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11913  007B86  5007               	movf	CRC_ReverseValue@mask^0,w,c
 11914  007B88  1205               	iorwf	CRC_ReverseValue@reverse^0,f,c
 11915  007B8A  5008               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 11916  007B8C  1206               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 11917  007B8E                     l11575:
 11918                           
 11919                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11920  007B8E  90D8               	bcf	status,0,c
 11921  007B90  3208               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 11922  007B92  3207               	rrcf	CRC_ReverseValue@mask^0,f,c
 11923                           
 11924                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11925  007B94  90D8               	bcf	status,0,c
 11926  007B96  3203               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 11927  007B98  3202               	rrcf	CRC_ReverseValue@crc^0,f,c
 11928  007B9A                     l1595:
 11929                           
 11930                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11931  007B9A  5002               	movf	CRC_ReverseValue@crc^0,w,c
 11932  007B9C  1003               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 11933  007B9E  A4D8               	btfss	status,2,c
 11934  007BA0  D7F0               	goto	l1596
 11935                           
 11936                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11937  007BA2  0060  F014  F002   	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 11938  007BA8  0060  F018  F003   	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 11939  007BAE  0012               	return		;funcret
 11940  007BB0                     __end_of_CRC_ReverseValue:
 11941                           	opt callstack 0
 11942                           
 11943 ;; *************** function _CRC_8BitDataWrite *****************
 11944 ;; Defined at:
 11945 ;;		line 125 in file "mcc_generated_files/crc.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;  data            1    wreg     unsigned char 
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;  data            1    1[COMRAM] unsigned char 
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      _Bool 
 11952 ;; Registers used:
 11953 ;;		wreg
 11954 ;; Tracked objects:
 11955 ;;		On entry : 3F/39
 11956 ;;		On exit  : 3F/39
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11963 ;;Total ram usage:        1 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:    7
 11966 ;; This function calls:
 11967 ;;		Nothing
 11968 ;; This function is called by:
 11969 ;;		_crc16_app
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           	psect	text65
 11974  008D54                     __ptext65:
 11975                           	opt callstack 0
 11976  008D54                     _CRC_8BitDataWrite:
 11977                           	opt callstack 21
 11978                           
 11979                           ;incstack = 0
 11980                           ;CRC_8BitDataWrite@data stored from wreg
 11981  008D54  6E02               	movwf	CRC_8BitDataWrite@data^0,c
 11982                           
 11983                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11984  008D56  0139               	movlb	57	; () banked
 11985  008D58  B168               	btfsc	104,0,b	;volatile
 11986  008D5A  0012               	return	
 11987                           
 11988                           ; BSR set to: 57
 11989                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11990  008D5C  0060  F00B  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 11991                           
 11992                           ; BSR set to: 57
 11993  008D62  0012               	return		;funcret
 11994  008D64                     __end_of_CRC_8BitDataWrite:
 11995                           	opt callstack 0
 11996                           
 11997 ;; *************** function _PHY_SetRxState *****************
 11998 ;; Defined at:
 11999 ;;		line 814 in file "../phy/sx1216/phy_src/phy.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;  rx              1    wreg     _Bool 
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;  rx              1    0[COMRAM] _Bool 
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      void 
 12006 ;; Registers used:
 12007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 3F/3D
 12010 ;;		On exit  : 3F/3D
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12017 ;;Total ram usage:        0 bytes
 12018 ;; Hardware stack levels used:    1
 12019 ;; Hardware stack levels required when called:   13
 12020 ;; This function calls:
 12021 ;;		_receive
 12022 ;; This function is called by:
 12023 ;;		_bootLoadApplication
 12024 ;; This function uses a non-reentrant model
 12025 ;;
 12026                           
 12027                           	psect	text66
 12028  008E2A                     __ptext66:
 12029                           	opt callstack 0
 12030  008E2A                     _PHY_SetRxState:
 12031                           	opt callstack 16
 12032                           
 12033                           ; BSR set to: 61
 12034                           ;../phy/sx1216/phy_src/phy.c: 815:     receive(0);
 12035                           
 12036                           ; BSR set to: 57
 12037                           ;incstack = 0
 12038  008E2A  0E00               	movlw	0
 12039  008E2C  EC5B  F041         	call	_receive
 12040                           
 12041                           ; BSR set to: 61
 12042  008E30  0012               	return		;funcret
 12043  008E32                     __end_of_PHY_SetRxState:
 12044                           	opt callstack 0
 12045                           
 12046 ;; *************** function _PHY_SetChannel *****************
 12047 ;; Defined at:
 12048 ;;		line 818 in file "../phy/sx1216/phy_src/phy.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;  channel         1    wreg     unsigned char 
 12051 ;; Auto vars:     Size  Location     Type
 12052 ;;  channel         1   46[COMRAM] unsigned char 
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      void 
 12055 ;; Registers used:
 12056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12057 ;; Tracked objects:
 12058 ;;		On entry : 3F/1
 12059 ;;		On exit  : 3F/3D
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;Total ram usage:        1 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; Hardware stack levels required when called:   12
 12069 ;; This function calls:
 12070 ;;		_setFrequency
 12071 ;; This function is called by:
 12072 ;;		_bootLoadApplication
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           
 12076                           	psect	text67
 12077  0081FC                     __ptext67:
 12078                           	opt callstack 0
 12079  0081FC                     _PHY_SetChannel:
 12080                           	opt callstack 17
 12081                           
 12082                           ; BSR set to: 61
 12083                           ;incstack = 0
 12084                           ;PHY_SetChannel@channel stored from wreg
 12085  0081FC  6E2F               	movwf	PHY_SetChannel@channel^0,c
 12086                           
 12087                           ;../phy/sx1216/phy_src/phy.c: 819:     setFrequency(fhssList[channel]);
 12088  0081FE  502F               	movf	PHY_SetChannel@channel^0,w,c
 12089  008200  0D04               	mullw	4
 12090  008202  0EB3               	movlw	low _fhssList
 12091  008204  24F3               	addwf	243,w,c
 12092  008206  6EF6               	movwf	tblptrl,c
 12093  008208  0EFC               	movlw	high _fhssList
 12094  00820A  20F4               	addwfc	244,w,c
 12095  00820C  6EF7               	movwf	tblptrh,c
 12096  00820E                     	if	1	;There are 3 active tblptr bytes
 12097  00820E  6AF8               	clrf	tblptru,c
 12098  008210  0E00               	movlw	low (__mediumconst shr (0+16))
 12099  008212  22F8               	addwfc	tblptru,f,c
 12100  008214                     	endif
 12101  008214  0009               	tblrd		*+
 12102  008216  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 12103  00821C  0009               	tblrd		*+
 12104  00821E  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 12105  008224  0009               	tblrd		*+
 12106  008226  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 12107  00822C  000A               	tblrd		*-
 12108  00822E  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 12109  008234  EC53  F025         	call	_setFrequency	;wreg free
 12110                           
 12111                           ; BSR set to: 61
 12112  008238  0012               	return		;funcret
 12113  00823A                     __end_of_PHY_SetChannel:
 12114                           	opt callstack 0
 12115                           
 12116 ;; *************** function _NWK_SetPanId *****************
 12117 ;; Defined at:
 12118 ;;		line 116 in file "../nwk/nwk_src/nwk.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;  panId           2    3[COMRAM] unsigned short 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;		None
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      void 
 12125 ;; Registers used:
 12126 ;;		cstack
 12127 ;; Tracked objects:
 12128 ;;		On entry : 3F/1
 12129 ;;		On exit  : 3F/1
 12130 ;;		Unchanged: 3F/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;Total ram usage:        2 bytes
 12137 ;; Hardware stack levels used:    1
 12138 ;; Hardware stack levels required when called:    8
 12139 ;; This function calls:
 12140 ;;		_PHY_SetPanId
 12141 ;; This function is called by:
 12142 ;;		_bootLoadApplication
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           	psect	text68
 12147  008AE0                     __ptext68:
 12148                           	opt callstack 0
 12149  008AE0                     _NWK_SetPanId:
 12150                           	opt callstack 21
 12151                           
 12152                           ; BSR set to: 1
 12153                           ;../nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);../nwk/nwk_src/nwk.c: 117:
      +                           {;../nwk/nwk_src/nwk.c: 118:   nwkIb.panId = panId;
 12154                           
 12155                           ; BSR set to: 61
 12156                           ;incstack = 0
 12157  008AE0  0060  F010  F102   	movff	NWK_SetPanId@panId,_nwkIb+2
 12158  008AE6  0060  F014  F103   	movff	NWK_SetPanId@panId+1,_nwkIb+3
 12159                           
 12160                           ; BSR set to: 1
 12161                           ;../nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
 12162  008AEC  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
 12163  008AF2  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
 12164  008AF8  EC2E  F047         	call	_PHY_SetPanId	;wreg free
 12165                           
 12166                           ; BSR set to: 1
 12167  008AFC  0012               	return		;funcret
 12168  008AFE                     __end_of_NWK_SetPanId:
 12169                           	opt callstack 0
 12170                           
 12171 ;; *************** function _PHY_SetPanId *****************
 12172 ;; Defined at:
 12173 ;;		line 822 in file "../phy/sx1216/phy_src/phy.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;  panId           2    1[COMRAM] unsigned short 
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;		None
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      void 
 12180 ;; Registers used:
 12181 ;;		None
 12182 ;; Tracked objects:
 12183 ;;		On entry : 3F/1
 12184 ;;		On exit  : 3F/1
 12185 ;;		Unchanged: 3F/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12191 ;;Total ram usage:        2 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:    7
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		_NWK_SetPanId
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           	psect	text69
 12202  008E5C                     __ptext69:
 12203                           	opt callstack 0
 12204  008E5C                     _PHY_SetPanId:
 12205                           	opt callstack 21
 12206                           
 12207                           ; BSR set to: 1
 12208                           
 12209                           ; BSR set to: 1
 12210                           ;incstack = 0
 12211  008E5C  0012               	return		;funcret
 12212  008E5E                     __end_of_PHY_SetPanId:
 12213                           	opt callstack 0
 12214                           
 12215 ;; *************** function _NWK_SetAddr *****************
 12216 ;; Defined at:
 12217 ;;		line 106 in file "../nwk/nwk_src/nwk.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;  addr            2    3[COMRAM] unsigned short 
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;		None
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 3F/1
 12228 ;;		On exit  : 3F/1
 12229 ;;		Unchanged: 3F/0
 12230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12235 ;;Total ram usage:        2 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:    8
 12238 ;; This function calls:
 12239 ;;		_PHY_SetShortAddr
 12240 ;; This function is called by:
 12241 ;;		_bootLoadApplication
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           	psect	text70
 12246  008AFE                     __ptext70:
 12247                           	opt callstack 0
 12248  008AFE                     _NWK_SetAddr:
 12249                           	opt callstack 21
 12250                           
 12251                           ; BSR set to: 1
 12252                           ;../nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);../nwk/nwk_src/nwk.c: 107: {
      +                          ;../nwk/nwk_src/nwk.c: 108:   nwkIb.addr = addr;
 12253                           
 12254                           ; BSR set to: 1
 12255                           ;incstack = 0
 12256  008AFE  0060  F010  F100   	movff	NWK_SetAddr@addr,_nwkIb
 12257  008B04  0060  F014  F101   	movff	NWK_SetAddr@addr+1,_nwkIb+1
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;../nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
 12261  008B0A  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
 12262  008B10  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
 12263  008B16  EC2F  F047         	call	_PHY_SetShortAddr	;wreg free
 12264                           
 12265                           ; BSR set to: 1
 12266  008B1A  0012               	return		;funcret
 12267  008B1C                     __end_of_NWK_SetAddr:
 12268                           	opt callstack 0
 12269                           
 12270 ;; *************** function _PHY_SetShortAddr *****************
 12271 ;; Defined at:
 12272 ;;		line 826 in file "../phy/sx1216/phy_src/phy.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;  addr            2    1[COMRAM] unsigned short 
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;		None
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  1    wreg      void 
 12279 ;; Registers used:
 12280 ;;		None
 12281 ;; Tracked objects:
 12282 ;;		On entry : 3F/1
 12283 ;;		On exit  : 3F/1
 12284 ;;		Unchanged: 3F/0
 12285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12290 ;;Total ram usage:        2 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:    7
 12293 ;; This function calls:
 12294 ;;		Nothing
 12295 ;; This function is called by:
 12296 ;;		_NWK_SetAddr
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text71
 12301  008E5E                     __ptext71:
 12302                           	opt callstack 0
 12303  008E5E                     _PHY_SetShortAddr:
 12304                           	opt callstack 21
 12305                           
 12306                           ; BSR set to: 1
 12307                           
 12308                           ; BSR set to: 1
 12309                           ;incstack = 0
 12310  008E5E  0012               	return		;funcret
 12311  008E60                     __end_of_PHY_SetShortAddr:
 12312                           	opt callstack 0
 12313                           
 12314 ;; *************** function _DATAEE_WriteByte_Platform *****************
 12315 ;; Defined at:
 12316 ;;		line 40 in file "../app/app_src/EEPROM.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;  addr            2    5[COMRAM] unsigned short 
 12319 ;;  data            1    7[COMRAM] unsigned char 
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;		None
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, status,2, status,0, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12331 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12334 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;Total ram usage:        3 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:    8
 12338 ;; This function calls:
 12339 ;;		_DATAEE_WriteByte
 12340 ;; This function is called by:
 12341 ;;		_cmdSetNaddr
 12342 ;;		_cmdSetAES
 12343 ;;		_cmdSetRFCH
 12344 ;;		_cmdSetTX
 12345 ;;		_cmdSetCADRSSI
 12346 ;;		_cmdBootLoad
 12347 ;;		_cmdSetSF
 12348 ;;		_bootLoadApplication
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text72
 12353  007FAC                     __ptext72:
 12354                           	opt callstack 0
 12355  007FAC                     _DATAEE_WriteByte_Platform:
 12356                           	opt callstack 19
 12357                           
 12358                           ;../app/app_src/EEPROM.c: 42:     DATAEE_WriteByte(addr, data);
 12359                           
 12360                           ; BSR set to: 1
 12361                           ;incstack = 0
 12362  007FAC  0060  F018  F002   	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 12363  007FB2  0060  F01C  F003   	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12364  007FB8  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12365  007FBE  EC7F  F040         	call	_DATAEE_WriteByte	;wreg free
 12366                           
 12367                           ;../app/app_src/EEPROM.c: 43:     DATAEE_WriteByte(addr + 256, data);
 12368  007FC2  0E00               	movlw	0
 12369  007FC4  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12370  007FC6  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12371  007FC8  0E01               	movlw	1
 12372  007FCA  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12373  007FCC  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12374  007FCE  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12375  007FD4  EC7F  F040         	call	_DATAEE_WriteByte	;wreg free
 12376                           
 12377                           ;../app/app_src/EEPROM.c: 44:     DATAEE_WriteByte(addr + 512, data);
 12378  007FD8  0E00               	movlw	0
 12379  007FDA  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12380  007FDC  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12381  007FDE  0E02               	movlw	2
 12382  007FE0  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12383  007FE2  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12384  007FE4  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12385  007FEA  EC7F  F040         	call	_DATAEE_WriteByte	;wreg free
 12386  007FEE  0012               	return		;funcret
 12387  007FF0                     __end_of_DATAEE_WriteByte_Platform:
 12388                           	opt callstack 0
 12389                           
 12390 ;; *************** function _DATAEE_ReadByte_Platform *****************
 12391 ;; Defined at:
 12392 ;;		line 6 in file "../app/app_src/EEPROM.c"
 12393 ;; Parameters:    Size  Location     Type
 12394 ;;  addr            2    5[COMRAM] unsigned short 
 12395 ;; Auto vars:     Size  Location     Type
 12396 ;;  copy1           1    9[COMRAM] unsigned char 
 12397 ;;  copy2           1    8[COMRAM] unsigned char 
 12398 ;;  copy3           1    7[COMRAM] unsigned char 
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1    wreg      unsigned char 
 12401 ;; Registers used:
 12402 ;;		wreg, status,2, status,0, cstack
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/39
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12409 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12411 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;Total ram usage:        5 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:    8
 12415 ;; This function calls:
 12416 ;;		_DATAEE_ReadByte
 12417 ;;		_DATAEE_WriteByte
 12418 ;; This function is called by:
 12419 ;;		_bootLoadApplication
 12420 ;; This function uses a non-reentrant model
 12421 ;;
 12422                           
 12423                           	psect	text73
 12424  00555E                     __ptext73:
 12425                           	opt callstack 0
 12426  00555E                     _DATAEE_ReadByte_Platform:
 12427                           	opt callstack 21
 12428                           
 12429                           ;../app/app_src/EEPROM.c: 7:     uint8_t copy1, copy2, copy3;;../app/app_src/EEPROM.c: 8
      +                          :     copy1 = DATAEE_ReadByte(addr);
 12430                           
 12431                           ;incstack = 0
 12432  00555E  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
 12433  005564  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
 12434  00556A  EC8E  F045         	call	_DATAEE_ReadByte	;wreg free
 12435  00556E  6E0A               	movwf	DATAEE_ReadByte_Platform@copy1^0,c
 12436                           
 12437                           ;../app/app_src/EEPROM.c: 9:     copy2 = DATAEE_ReadByte(addr + 256);
 12438  005570  0E00               	movlw	0
 12439  005572  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12440  005574  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12441  005576  0E01               	movlw	1
 12442  005578  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12443  00557A  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12444  00557C  EC8E  F045         	call	_DATAEE_ReadByte	;wreg free
 12445  005580  6E09               	movwf	DATAEE_ReadByte_Platform@copy2^0,c
 12446                           
 12447                           ;../app/app_src/EEPROM.c: 10:     copy3 = DATAEE_ReadByte(addr + 512);
 12448  005582  0E00               	movlw	0
 12449  005584  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12450  005586  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12451  005588  0E02               	movlw	2
 12452  00558A  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12453  00558C  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12454  00558E  EC8E  F045         	call	_DATAEE_ReadByte	;wreg free
 12455  005592  6E08               	movwf	DATAEE_ReadByte_Platform@copy3^0,c
 12456                           
 12457                           ; BSR set to: 57
 12458                           ;../app/app_src/EEPROM.c: 13:     if((copy1 == copy2) && (copy2 == copy3)){
 12459  005594  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12460  005596  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12461  005598  A4D8               	btfss	status,2,c
 12462  00559A  D006               	goto	l17107
 12463                           
 12464                           ; BSR set to: 57
 12465  00559C  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12466  00559E  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12467  0055A0  A4D8               	btfss	status,2,c
 12468  0055A2  D002               	goto	l17107
 12469  0055A4                     u17620:
 12470                           
 12471                           ;../app/app_src/EEPROM.c: 14:         return copy1;
 12472  0055A4  500A               	movf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12473  0055A6  0012               	return	
 12474  0055A8                     l17107:
 12475                           
 12476                           ; BSR set to: 57
 12477  0055A8  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12478  0055AA  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12479  0055AC  A4D8               	btfss	status,2,c
 12480  0055AE  D010               	goto	l17119
 12481                           
 12482                           ; BSR set to: 57
 12483  0055B0  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12484  0055B2  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12485  0055B4  B4D8               	btfsc	status,2,c
 12486  0055B6  D00C               	goto	l17119
 12487                           
 12488                           ; BSR set to: 57
 12489                           ;../app/app_src/EEPROM.c: 18:         DATAEE_WriteByte(addr + 512, copy1);
 12490  0055B8  0E00               	movlw	0
 12491  0055BA  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12492  0055BC  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12493  0055BE  0E02               	movlw	2
 12494  0055C0  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12495  0055C2  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12496  0055C4  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12497  0055CA  EC7F  F040         	call	_DATAEE_WriteByte	;wreg free
 12498  0055CE  D7EA               	goto	u17620
 12499  0055D0                     l17119:
 12500                           
 12501                           ; BSR set to: 57
 12502  0055D0  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12503  0055D2  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12504  0055D4  B4D8               	btfsc	status,2,c
 12505  0055D6  D011               	goto	l17131
 12506                           
 12507                           ; BSR set to: 57
 12508  0055D8  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12509  0055DA  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12510  0055DC  A4D8               	btfss	status,2,c
 12511  0055DE  D00D               	goto	l17131
 12512                           
 12513                           ; BSR set to: 57
 12514                           ;../app/app_src/EEPROM.c: 23:         DATAEE_WriteByte(addr , copy2);
 12515  0055E0  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
 12516  0055E6  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12517  0055EC  0060  F024  F004   	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
 12518  0055F2  EC7F  F040         	call	_DATAEE_WriteByte	;wreg free
 12519                           
 12520                           ;../app/app_src/EEPROM.c: 24:         return copy2;
 12521  0055F6  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12522  0055F8  0012               	return	
 12523  0055FA                     l17131:
 12524                           
 12525                           ; BSR set to: 57
 12526  0055FA  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12527  0055FC  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12528  0055FE  A4D8               	btfss	status,2,c
 12529  005600  D010               	goto	l17143
 12530                           
 12531                           ; BSR set to: 57
 12532  005602  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12533  005604  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12534  005606  B4D8               	btfsc	status,2,c
 12535  005608  D00C               	goto	l17143
 12536                           
 12537                           ; BSR set to: 57
 12538                           ;../app/app_src/EEPROM.c: 28:         DATAEE_WriteByte(addr + 256, copy1);
 12539  00560A  0E00               	movlw	0
 12540  00560C  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12541  00560E  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12542  005610  0E01               	movlw	1
 12543  005612  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12544  005614  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12545  005616  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12546  00561C  EC7F  F040         	call	_DATAEE_WriteByte	;wreg free
 12547  005620  D7C1               	goto	u17620
 12548  005622                     l17143:
 12549                           
 12550                           ; BSR set to: 57
 12551                           ;../app/app_src/EEPROM.c: 34:         DATAEE_WriteByte(addr + 256, copy1);
 12552  005622  0E00               	movlw	0
 12553  005624  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12554  005626  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12555  005628  0E01               	movlw	1
 12556  00562A  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12557  00562C  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12558  00562E  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12559  005634  EC7F  F040         	call	_DATAEE_WriteByte	;wreg free
 12560                           
 12561                           ;../app/app_src/EEPROM.c: 35:         DATAEE_WriteByte(addr + 512, copy1);
 12562  005638  0E00               	movlw	0
 12563  00563A  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12564  00563C  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12565  00563E  0E02               	movlw	2
 12566  005640  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12567  005642  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12568  005644  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12569  00564A  EC7F  F040         	call	_DATAEE_WriteByte	;wreg free
 12570  00564E  D7AA               	goto	u17620
 12571  005650                     __end_of_DATAEE_ReadByte_Platform:
 12572                           	opt callstack 0
 12573                           
 12574 ;; *************** function _DATAEE_WriteByte *****************
 12575 ;; Defined at:
 12576 ;;		line 172 in file "mcc_generated_files/memory.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  bAdd            2    1[COMRAM] unsigned short 
 12579 ;;  bData           1    3[COMRAM] unsigned char 
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  1    wreg      void 
 12584 ;; Registers used:
 12585 ;;		wreg, status,2, status,0
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12591 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12595 ;;Total ram usage:        4 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; Hardware stack levels required when called:    7
 12598 ;; This function calls:
 12599 ;;		Nothing
 12600 ;; This function is called by:
 12601 ;;		_DATAEE_ReadByte_Platform
 12602 ;;		_DATAEE_WriteByte_Platform
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           	psect	text74
 12607  0080FE                     __ptext74:
 12608                           	opt callstack 0
 12609  0080FE                     _DATAEE_WriteByte:
 12610                           	opt callstack 19
 12611                           
 12612                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 12613                           
 12614                           ;incstack = 0
 12615  0080FE  0E00               	movlw	0
 12616  008100  BED2               	btfsc	210,7,c	;volatile
 12617  008102  0E01               	movlw	1
 12618  008104  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 12619                           
 12620                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 12621  008106  5003               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 12622  008108  0B03               	andlw	3
 12623  00810A  0139               	movlb	57	; () banked
 12624  00810C  6FE1               	movwf	225,b	;volatile
 12625                           
 12626                           ; BSR set to: 57
 12627                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12628  00810E  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 12629                           
 12630                           ; BSR set to: 57
 12631                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 12632  008114  0060  F013  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 12633                           
 12634                           ; BSR set to: 57
 12635                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 12636  00811A  0E3F               	movlw	-193
 12637  00811C  17E5               	andwf	229,f,b	;volsfr
 12638                           
 12639                           ; BSR set to: 57
 12640                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 12641  00811E  85E5               	bsf	229,2,b	;volsfr
 12642                           
 12643                           ; BSR set to: 57
 12644                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 12645  008120  9ED2               	bcf	210,7,c	;volatile
 12646                           
 12647                           ; BSR set to: 57
 12648                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 12649  008122  0E55               	movlw	85
 12650  008124  6FE6               	movwf	230,b	;volsfr
 12651                           
 12652                           ; BSR set to: 57
 12653                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 12654  008126  0EAA               	movlw	170
 12655  008128  6FE6               	movwf	230,b	;volsfr
 12656                           
 12657                           ; BSR set to: 57
 12658                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 12659  00812A  83E5               	bsf	229,1,b	;volsfr
 12660  00812C                     l1184:
 12661                           
 12662                           ; BSR set to: 57
 12663                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 12664  00812C  B3E5               	btfsc	229,1,b	;volsfr
 12665  00812E  D7FE               	goto	l1184
 12666                           
 12667                           ; BSR set to: 57
 12668                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 12669  008130  95E5               	bcf	229,2,b	;volsfr
 12670                           
 12671                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 12672  008132  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 12673  008134  D002               	bra	u14835
 12674  008136  9ED2               	bcf	210,7,c	;volatile
 12675  008138  D001               	bra	u14836
 12676  00813A                     u14835:
 12677  00813A  8ED2               	bsf	210,7,c	;volatile
 12678  00813C                     u14836:
 12679  00813C  0012               	return		;funcret
 12680  00813E                     __end_of_DATAEE_WriteByte:
 12681                           	opt callstack 0
 12682                           
 12683 ;; *************** function _DATAEE_ReadByte *****************
 12684 ;; Defined at:
 12685 ;;		line 194 in file "mcc_generated_files/memory.c"
 12686 ;; Parameters:    Size  Location     Type
 12687 ;;  bAdd            2    1[COMRAM] unsigned short 
 12688 ;; Auto vars:     Size  Location     Type
 12689 ;;		None
 12690 ;; Return value:  Size  Location     Type
 12691 ;;                  1    wreg      unsigned char 
 12692 ;; Registers used:
 12693 ;;		wreg, status,2, status,0
 12694 ;; Tracked objects:
 12695 ;;		On entry : 0/39
 12696 ;;		On exit  : 3F/39
 12697 ;;		Unchanged: 0/0
 12698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12703 ;;Total ram usage:        2 bytes
 12704 ;; Hardware stack levels used:    1
 12705 ;; Hardware stack levels required when called:    7
 12706 ;; This function calls:
 12707 ;;		Nothing
 12708 ;; This function is called by:
 12709 ;;		_DATAEE_ReadByte_Platform
 12710 ;; This function uses a non-reentrant model
 12711 ;;
 12712                           
 12713                           	psect	text75
 12714  008B1C                     __ptext75:
 12715                           	opt callstack 0
 12716  008B1C                     _DATAEE_ReadByte:
 12717                           	opt callstack 21
 12718                           
 12719                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 12720                           
 12721                           ;incstack = 0
 12722  008B1C  5003               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 12723  008B1E  0B03               	andlw	3
 12724  008B20  0139               	movlb	57	; () banked
 12725  008B22  6FE1               	movwf	225,b	;volatile
 12726                           
 12727                           ; BSR set to: 57
 12728                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12729  008B24  0060  F00B  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 12730                           
 12731                           ; BSR set to: 57
 12732                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
 12733  008B2A  0E3F               	movlw	-193
 12734  008B2C  17E5               	andwf	229,f,b	;volsfr
 12735                           
 12736                           ; BSR set to: 57
 12737                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
 12738  008B2E  81E5               	bsf	229,0,b	;volsfr
 12739                           
 12740                           ; BSR set to: 57
 12741                           ;mcc_generated_files/memory.c: 200:     __nop();
 12742  008B30  F000               	nop	
 12743                           
 12744                           ;mcc_generated_files/memory.c: 201:     __nop();
 12745  008B32  F000               	nop	
 12746                           
 12747                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
 12748  008B34  0139               	movlb	57	; () banked
 12749  008B36  51E3               	movf	227,w,b	;volatile
 12750                           
 12751                           ; BSR set to: 57
 12752  008B38  0012               	return		;funcret
 12753  008B3A                     __end_of_DATAEE_ReadByte:
 12754                           	opt callstack 0
 12755                           
 12756 ;; *************** function _SYS_TaskHandler *****************
 12757 ;; Defined at:
 12758 ;;		line 67 in file "../sys/sys_src/sys.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;		None
 12761 ;; Auto vars:     Size  Location     Type
 12762 ;;		None
 12763 ;; Return value:  Size  Location     Type
 12764 ;;                  1    wreg      void 
 12765 ;; Registers used:
 12766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 12767 ;; Tracked objects:
 12768 ;;		On entry : 0/2
 12769 ;;		On exit  : 3E/0
 12770 ;;		Unchanged: 0/0
 12771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12776 ;;Total ram usage:        0 bytes
 12777 ;; Hardware stack levels used:    1
 12778 ;; Hardware stack levels required when called:   21
 12779 ;; This function calls:
 12780 ;;		_NWK_TaskHandler
 12781 ;;		_PHY_TaskHandler
 12782 ;;		_SYS_TimerTaskHandler
 12783 ;; This function is called by:
 12784 ;;		_main
 12785 ;; This function uses a non-reentrant model
 12786 ;;
 12787                           
 12788                           	psect	text76
 12789  008D74                     __ptext76:
 12790                           	opt callstack 0
 12791  008D74                     _SYS_TaskHandler:
 12792                           	opt callstack 9
 12793                           
 12794                           ;../sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 12795                           
 12796                           ; BSR set to: 57
 12797                           ;incstack = 0
 12798  008D74  EC1C  F047         	call	_PHY_TaskHandler	;wreg free
 12799                           
 12800                           ;../sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 12801  008D78  ECC1  F046         	call	_NWK_TaskHandler	;wreg free
 12802                           
 12803                           ;../sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 12804  008D7C  EC9B  F027         	call	_SYS_TimerTaskHandler	;wreg free
 12805  008D80  0012               	return		;funcret
 12806  008D82                     __end_of_SYS_TaskHandler:
 12807                           	opt callstack 0
 12808                           
 12809 ;; *************** function _SYS_TimerTaskHandler *****************
 12810 ;; Defined at:
 12811 ;;		line 112 in file "../sys/sys_src/sysTimer.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;		None
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
 12816 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12817 ;;  elapsed         4   29[COMRAM] unsigned long 
 12818 ;;  cnt             1   28[COMRAM] unsigned char 
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      void 
 12821 ;; Registers used:
 12822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/1
 12825 ;;		On exit  : 3E/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12829 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12830 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12831 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12832 ;;Total ram usage:       11 bytes
 12833 ;; Hardware stack levels used:    1
 12834 ;; Hardware stack levels required when called:   10
 12835 ;; This function calls:
 12836 ;;		_nwkRxDuplicateRejectionTimerHandler
 12837 ;;		_nwkTxAckWaitTimerHandler
 12838 ;;		_nwkTxDelayTimerHandler
 12839 ;;		_placeTimer
 12840 ;; This function is called by:
 12841 ;;		_SYS_TaskHandler
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           	psect	text77
 12846  004F36                     __ptext77:
 12847                           	opt callstack 0
 12848  004F36                     _SYS_TimerTaskHandler:
 12849                           	opt callstack 19
 12850                           
 12851                           ;../sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;../sys/sys_src/sysTimer.c: 115:  
      +                             uint8_t cnt;;../sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 12852                           
 12853                           ;incstack = 0
 12854  004F36  0101               	movlb	1	; () banked
 12855  004F38  516F               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 12856  004F3A  1170               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 12857  004F3C  B4D8               	btfsc	status,2,c
 12858  004F3E  0012               	return	
 12859                           
 12860                           ; BSR set to: 1
 12861                           ;../sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 12862                           
 12863                           ;../sys/sys_src/sysTimer.c: 119:     }
 12864  004F40  0139               	movlb	57	; () banked
 12865  004F42  9F93               	bcf	147,7,b	;volatile
 12866                           
 12867                           ;../sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 12868  004F44  0060  F5BC  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 12869                           
 12870                           ; BSR set to: 57
 12871                           ;../sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 12872  004F4A  0E00               	movlw	0
 12873  004F4C  0101               	movlb	1	; () banked
 12874  004F4E  6F70               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 12875  004F50  0E00               	movlw	0
 12876  004F52  6F6F               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 12877                           
 12878                           ; BSR set to: 1
 12879                           ;../sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 12880  004F54  0139               	movlb	57	; () banked
 12881  004F56  8F93               	bsf	147,7,b	;volatile
 12882                           
 12883                           ;../sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 12884  004F58  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
 12885  004F5A  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
 12886  004F5C  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
 12887  004F5E  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
 12888  004F60  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
 12889                           
 12890                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12891  004F62  D04E               	goto	u17729
 12892  004F64                     l17193:
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;../sys/sys_src/sysTimer.c: 129:     {;../sys/sys_src/sysTimer.c: 130:         SYS_Timer
      +                          _t *timer = timers;
 12896  004F64  0060  F3A0  F022   	movff	_timers,SYS_TimerTaskHandler@timer
 12897  004F6A  0060  F3A4  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;../sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 12901  004F70  EE20 F002          	lfsr	2,2
 12902  004F74  51E8               	movf	_timers& (0+255),w,b
 12903  004F76  26D9               	addwf	fsr2l,f,c
 12904  004F78  51E9               	movf	(_timers+1)& (0+255),w,b
 12905  004F7A  22DA               	addwfc	fsr2h,f,c
 12906  004F7C  50DE               	movf	postinc2,w,c
 12907  004F7E  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
 12908  004F80  50DE               	movf	postinc2,w,c
 12909  004F82  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
 12910  004F84  50DE               	movf	postinc2,w,c
 12911  004F86  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
 12912  004F88  50DD               	movf	postdec2,w,c
 12913  004F8A  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
 12914                           
 12915                           ;../sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 12916  004F8C  0060  F3A3  FFD9   	movff	_timers,fsr2l
 12917  004F92  0060  F3A7  FFDA   	movff	_timers+1,fsr2h
 12918  004F98  006F FF78  F0E8    	movff	postinc2,_timers
 12919  004F9E  006F FF74  F0E9    	movff	postdec2,_timers+1
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;../sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 12923  004FA4  EE20 F00A          	lfsr	2,10
 12924  004FA8  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12925  004FAA  26D9               	addwf	fsr2l,f,c
 12926  004FAC  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12927  004FAE  22DA               	addwfc	fsr2h,f,c
 12928  004FB0  04DE               	decf	postinc2,w,c
 12929  004FB2  A4D8               	btfss	status,2,c
 12930  004FB4  D008               	goto	l17201
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;../sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 12934  004FB6  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 12935  004FBC  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 12936  004FC2  EC5C  F01C         	call	_placeTimer	;wreg free
 12937  004FC6                     l17201:
 12938                           
 12939                           ;../sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 12940  004FC6  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 12941  004FCC  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 12942  004FD2  EE20 F00B          	lfsr	2,11
 12943  004FD6  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12944  004FD8  26D9               	addwf	fsr2l,f,c
 12945  004FDA  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12946  004FDC  22DA               	addwfc	fsr2h,f,c
 12947  004FDE  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
 12948  004FE4  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
 12949  004FEA  D801               	call	u17728
 12950  004FEC  D009               	goto	u17729
 12951  004FEE                     u17728:
 12952  004FEE  0005               	push	
 12953  004FF0  6EFA               	movwf	pclath,c
 12954  004FF2  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
 12955  004FF4  6EFD               	movwf	tosl,c
 12956  004FF6  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
 12957  004FF8  6EFE               	movwf	tosh,c
 12958  004FFA  6AFF               	clrf	tosu,c
 12959  004FFC  50FA               	movf	pclath,w,c
 12960  004FFE  0012               	return		;indir
 12961  005000                     u17729:
 12962                           
 12963                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12964  005000  0100               	movlb	0	; () banked
 12965  005002  51E8               	movf	_timers& (0+255),w,b
 12966  005004  11E9               	iorwf	(_timers+1)& (0+255),w,b
 12967  005006  B4D8               	btfsc	status,2,c
 12968  005008  D010               	goto	u17740
 12969                           
 12970                           ; BSR set to: 0
 12971  00500A  EE20 F002          	lfsr	2,2
 12972  00500E  51E8               	movf	_timers& (0+255),w,b
 12973  005010  26D9               	addwf	fsr2l,f,c
 12974  005012  51E9               	movf	(_timers+1)& (0+255),w,b
 12975  005014  22DA               	addwfc	fsr2h,f,c
 12976  005016  50DE               	movf	postinc2,w,c
 12977  005018  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
 12978  00501A  50DE               	movf	postinc2,w,c
 12979  00501C  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12980  00501E  50DE               	movf	postinc2,w,c
 12981  005020  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12982  005022  50DE               	movf	postinc2,w,c
 12983  005024  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12984  005026  B0D8               	btfsc	status,0,c
 12985  005028  D79D               	goto	l17193
 12986  00502A                     u17740:
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;../sys/sys_src/sysTimer.c: 139:     if (timers){
 12990  00502A  51E8               	movf	_timers& (0+255),w,b
 12991  00502C  11E9               	iorwf	(_timers+1)& (0+255),w,b
 12992  00502E  B4D8               	btfsc	status,2,c
 12993  005030  0012               	return	
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;../sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 12997  005032  EE20 F002          	lfsr	2,2
 12998  005036  51E8               	movf	_timers& (0+255),w,b
 12999  005038  26D9               	addwf	fsr2l,f,c
 13000  00503A  51E9               	movf	(_timers+1)& (0+255),w,b
 13001  00503C  22DA               	addwfc	fsr2h,f,c
 13002  00503E  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
 13003  005040  5EDE               	subwf	postinc2,f,c
 13004  005042  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 13005  005044  5ADE               	subwfb	postinc2,f,c
 13006  005046  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 13007  005048  5ADE               	subwfb	postinc2,f,c
 13008  00504A  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 13009  00504C  5ADE               	subwfb	postinc2,f,c
 13010  00504E  0012               	return		;funcret
 13011  005050                     __end_of_SYS_TimerTaskHandler:
 13012                           	opt callstack 0
 13013                           
 13014 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 13015 ;; Defined at:
 13016 ;;		line 205 in file "../nwk/nwk_src/nwkTx.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 13019 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 13022 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13023 ;;  restart         1   21[COMRAM] _Bool 
 13024 ;; Return value:  Size  Location     Type
 13025 ;;                  1    wreg      void 
 13026 ;; Registers used:
 13027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13028 ;; Tracked objects:
 13029 ;;		On entry : 0/0
 13030 ;;		On exit  : 0/0
 13031 ;;		Unchanged: 0/0
 13032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13037 ;;Total ram usage:        7 bytes
 13038 ;; Hardware stack levels used:    1
 13039 ;; Hardware stack levels required when called:    9
 13040 ;; This function calls:
 13041 ;;		_SYS_TimerStart
 13042 ;;		_nwkFrameNext
 13043 ;;		_nwkTxConfirm
 13044 ;; This function is called by:
 13045 ;;		_nwkTxInit
 13046 ;;		_SYS_TimerTaskHandler
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text78
 13051  006E52                     __ptext78:
 13052                           	opt callstack 0
 13053  006E52                     _nwkTxAckWaitTimerHandler:
 13054                           	opt callstack 19
 13055                           
 13056                           ;../nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);.
      +                          ./nwk/nwk_src/nwkTx.c: 206: {;../nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*
      +                          )0);
 13057                           
 13058                           ;incstack = 0
 13059  006E52  0E00               	movlw	0
 13060  006E54  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
 13061  006E56  0E00               	movlw	0
 13062  006E58  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
 13063                           
 13064                           ;../nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 13065  006E5A  0E00               	movlw	0
 13066  006E5C  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 13067                           
 13068                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13069  006E5E  D023               	goto	l2317
 13070  006E60                     l16837:
 13071                           
 13072                           ;../nwk/nwk_src/nwkTx.c: 211:   {;../nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state)
 13073  006E60  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 13074  006E66  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 13075  006E6C  0E16               	movlw	22
 13076  006E6E  18DE               	xorwf	postinc2,w,c
 13077  006E70  A4D8               	btfss	status,2,c
 13078  006E72  D019               	goto	l2317
 13079                           
 13080                           ;../nwk/nwk_src/nwkTx.c: 213:     {;../nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 13081  006E74  0E01               	movlw	1
 13082  006E76  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 13083                           
 13084                           ;../nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 13085  006E78  EE20 F084          	lfsr	2,132
 13086  006E7C  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 13087  006E7E  26D9               	addwf	fsr2l,f,c
 13088  006E80  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 13089  006E82  22DA               	addwfc	fsr2h,f,c
 13090  006E84  06DE               	decf	postinc2,f,c
 13091  006E86  0E00               	movlw	0
 13092  006E88  5ADD               	subwfb	postdec2,f,c
 13093  006E8A  50DE               	movf	postinc2,w,c
 13094  006E8C  10DE               	iorwf	postinc2,w,c
 13095  006E8E  A4D8               	btfss	status,2,c
 13096  006E90  D00A               	goto	l2317
 13097                           
 13098                           ;../nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 13099  006E92  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 13100  006E98  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 13101  006E9E  0E10               	movlw	16
 13102  006EA0  6E04               	movwf	nwkTxConfirm@status^0,c
 13103  006EA2  EC61  F044         	call	_nwkTxConfirm	;wreg free
 13104  006EA6                     l2317:
 13105                           
 13106                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13107  006EA6  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 13108  006EAC  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 13109  006EB2  ECFD  F037         	call	_nwkFrameNext	;wreg free
 13110  006EB6  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 13111  006EBC  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 13112  006EC2  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 13113  006EC4  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 13114  006EC6  A4D8               	btfss	status,2,c
 13115  006EC8  D7CB               	goto	l16837
 13116                           
 13117                           ;../nwk/nwk_src/nwkTx.c: 221:   if (restart)
 13118  006ECA  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
 13119  006ECC  B4D8               	btfsc	status,2,c
 13120  006ECE  0012               	return	
 13121                           
 13122                           ;../nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 13123  006ED0  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 13124  006ED6  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 13125  006EDC  EC26  F044         	call	_SYS_TimerStart	;wreg free
 13126  006EE0  0012               	return		;funcret
 13127  006EE2                     __end_of_nwkTxAckWaitTimerHandler:
 13128                           	opt callstack 0
 13129                           
 13130 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 13131 ;; Defined at:
 13132 ;;		line 181 in file "../nwk/nwk_src/nwkRx.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 13135 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;  i               1   20[COMRAM] unsigned char 
 13138 ;;  restart         1   19[COMRAM] _Bool 
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  1    wreg      void 
 13141 ;; Registers used:
 13142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13143 ;; Tracked objects:
 13144 ;;		On entry : 0/0
 13145 ;;		On exit  : 0/0
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;Total ram usage:        4 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; Hardware stack levels required when called:    9
 13155 ;; This function calls:
 13156 ;;		_SYS_TimerStart
 13157 ;; This function is called by:
 13158 ;;		_nwkRxInit
 13159 ;;		_SYS_TimerTaskHandler
 13160 ;; This function uses a non-reentrant model
 13161 ;;
 13162                           
 13163                           	psect	text79
 13164  007C5A                     __ptext79:
 13165                           	opt callstack 0
 13166  007C5A                     _nwkRxDuplicateRejectionTimerHandler:
 13167                           	opt callstack 19
 13168                           
 13169                           ;../nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_
      +                          t *timer);../nwk/nwk_src/nwkRx.c: 182: {;../nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 
      +                          0;
 13170                           
 13171                           ;incstack = 0
 13172  007C5A  0E00               	movlw	0
 13173  007C5C  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 13174                           
 13175                           ;../nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
 13176  007C5E  0E00               	movlw	0
 13177  007C60  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13178  007C62                     l16819:
 13179                           
 13180                           ;../nwk/nwk_src/nwkRx.c: 186:   {;../nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRej
      +                          ectionTable[i].ttl)
 13181  007C62  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 13182  007C64  0D05               	mullw	5
 13183  007C66  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 13184  007C68  24F3               	addwf	243,w,c
 13185  007C6A  6ED9               	movwf	fsr2l,c
 13186  007C6C  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 13187  007C6E  20F4               	addwfc	prodh,w,c
 13188  007C70  6EDA               	movwf	fsr2h,c
 13189  007C72  50DF               	movf	indf2,w,c
 13190  007C74  B4D8               	btfsc	status,2,c
 13191  007C76  D00B               	goto	l16825
 13192                           
 13193                           ;../nwk/nwk_src/nwkRx.c: 188:     {;../nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRej
      +                          ectionTable[i].ttl--;
 13194  007C78  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 13195  007C7A  0D05               	mullw	5
 13196  007C7C  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 13197  007C7E  24F3               	addwf	243,w,c
 13198  007C80  6ED9               	movwf	fsr2l,c
 13199  007C82  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 13200  007C84  20F4               	addwfc	prodh,w,c
 13201  007C86  6EDA               	movwf	fsr2h,c
 13202  007C88  06DF               	decf	indf2,f,c
 13203                           
 13204                           ;../nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 13205  007C8A  0E01               	movlw	1
 13206  007C8C  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 13207  007C8E                     l16825:
 13208                           
 13209                           ;../nwk/nwk_src/nwkRx.c: 192:   }
 13210  007C8E  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
 13211  007C90  0E09               	movlw	9
 13212  007C92  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13213  007C94  D7E6               	goto	l16819
 13214                           
 13215                           ;../nwk/nwk_src/nwkRx.c: 194:   if (restart)
 13216  007C96  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
 13217  007C98  B4D8               	btfsc	status,2,c
 13218  007C9A  0012               	return	
 13219                           
 13220                           ;../nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 13221  007C9C  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 13222  007CA2  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 13223  007CA8  EC26  F044         	call	_SYS_TimerStart	;wreg free
 13224  007CAC  0012               	return		;funcret
 13225  007CAE                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 13226                           	opt callstack 0
 13227                           
 13228 ;; *************** function _nwkTxDelayTimerHandler *****************
 13229 ;; Defined at:
 13230 ;;		line 244 in file "../nwk/nwk_src/nwkTx.c"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 13233 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 13236 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13237 ;;  restart         1   21[COMRAM] _Bool 
 13238 ;; Return value:  Size  Location     Type
 13239 ;;                  1    wreg      void 
 13240 ;; Registers used:
 13241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13242 ;; Tracked objects:
 13243 ;;		On entry : 0/0
 13244 ;;		On exit  : 0/0
 13245 ;;		Unchanged: 0/0
 13246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13248 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13251 ;;Total ram usage:        7 bytes
 13252 ;; Hardware stack levels used:    1
 13253 ;; Hardware stack levels required when called:    9
 13254 ;; This function calls:
 13255 ;;		_SYS_TimerStart
 13256 ;;		_nwkFrameNext
 13257 ;; This function is called by:
 13258 ;;		_nwkTxInit
 13259 ;;		_SYS_TimerTaskHandler
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263                           	psect	text80
 13264  006F6E                     __ptext80:
 13265                           	opt callstack 0
 13266  006F6E                     _nwkTxDelayTimerHandler:
 13267                           	opt callstack 19
 13268                           
 13269                           ;../nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);../
      +                          nwk/nwk_src/nwkTx.c: 245: {;../nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0
      +                          );
 13270                           
 13271                           ;incstack = 0
 13272  006F6E  0E00               	movlw	0
 13273  006F70  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
 13274  006F72  0E00               	movlw	0
 13275  006F74  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
 13276                           
 13277                           ;../nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 13278  006F76  0E00               	movlw	0
 13279  006F78  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13280                           
 13281                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13282  006F7A  D021               	goto	l16861
 13283  006F7C                     l16853:
 13284                           
 13285                           ;../nwk/nwk_src/nwkTx.c: 250:   {;../nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT
      +                          _DELAY == frame->state)
 13286  006F7C  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13287  006F82  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13288  006F88  0E11               	movlw	17
 13289  006F8A  18DE               	xorwf	postinc2,w,c
 13290  006F8C  A4D8               	btfss	status,2,c
 13291  006F8E  D017               	goto	l16861
 13292                           
 13293                           ;../nwk/nwk_src/nwkTx.c: 252:     {;../nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 13294  006F90  0E01               	movlw	1
 13295  006F92  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13296                           
 13297                           ;../nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 13298  006F94  EE20 F084          	lfsr	2,132
 13299  006F98  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13300  006F9A  26D9               	addwf	fsr2l,f,c
 13301  006F9C  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13302  006F9E  22DA               	addwfc	fsr2h,f,c
 13303  006FA0  06DE               	decf	postinc2,f,c
 13304  006FA2  0E00               	movlw	0
 13305  006FA4  5ADD               	subwfb	postdec2,f,c
 13306  006FA6  50DE               	movf	postinc2,w,c
 13307  006FA8  10DE               	iorwf	postinc2,w,c
 13308  006FAA  A4D8               	btfss	status,2,c
 13309  006FAC  D008               	goto	l16861
 13310                           
 13311                           ;../nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 13312  006FAE  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13313  006FB4  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13314  006FBA  0E13               	movlw	19
 13315  006FBC  6EDF               	movwf	indf2,c
 13316  006FBE                     l16861:
 13317                           
 13318                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13319  006FBE  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 13320  006FC4  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 13321  006FCA  ECFD  F037         	call	_nwkFrameNext	;wreg free
 13322  006FCE  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 13323  006FD4  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 13324  006FDA  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13325  006FDC  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13326  006FDE  A4D8               	btfss	status,2,c
 13327  006FE0  D7CD               	goto	l16853
 13328                           
 13329                           ;../nwk/nwk_src/nwkTx.c: 260:   if (restart)
 13330  006FE2  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
 13331  006FE4  B4D8               	btfsc	status,2,c
 13332  006FE6  0012               	return	
 13333                           
 13334                           ;../nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 13335  006FE8  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 13336  006FEE  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 13337  006FF4  EC26  F044         	call	_SYS_TimerStart	;wreg free
 13338  006FF8  0012               	return		;funcret
 13339  006FFA                     __end_of_nwkTxDelayTimerHandler:
 13340                           	opt callstack 0
 13341                           
 13342 ;; *************** function _nwkTxConfirm *****************
 13343 ;; Defined at:
 13344 ;;		line 227 in file "../nwk/nwk_src/nwkTx.c"
 13345 ;; Parameters:    Size  Location     Type
 13346 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 13347 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13348 ;;  status          1    3[COMRAM] unsigned char 
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;		None
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  1    wreg      void 
 13353 ;; Registers used:
 13354 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/0
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13360 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;Total ram usage:        3 bytes
 13365 ;; Hardware stack levels used:    1
 13366 ;; Hardware stack levels required when called:    7
 13367 ;; This function calls:
 13368 ;;		Nothing
 13369 ;; This function is called by:
 13370 ;;		_nwkTxAckWaitTimerHandler
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           	psect	text81
 13375  0088C2                     __ptext81:
 13376                           	opt callstack 0
 13377  0088C2                     _nwkTxConfirm:
 13378                           	opt callstack 20
 13379                           
 13380                           ;../nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 228: {;../nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CON
      +                          FIRM;
 13381                           
 13382                           ;incstack = 0
 13383  0088C2  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 13384  0088C8  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 13385  0088CE  0E17               	movlw	23
 13386  0088D0  6EDF               	movwf	indf2,c
 13387                           
 13388                           ;../nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 13389  0088D2  EE20 F083          	lfsr	2,131
 13390  0088D6  5002               	movf	nwkTxConfirm@frame^0,w,c
 13391  0088D8  26D9               	addwf	fsr2l,f,c
 13392  0088DA  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
 13393  0088DC  22DA               	addwfc	fsr2h,f,c
 13394  0088DE  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
 13395  0088E4  0012               	return		;funcret
 13396  0088E6                     __end_of_nwkTxConfirm:
 13397                           	opt callstack 0
 13398                           
 13399 ;; *************** function _PHY_TaskHandler *****************
 13400 ;; Defined at:
 13401 ;;		line 859 in file "../phy/sx1216/phy_src/phy.c"
 13402 ;; Parameters:    Size  Location     Type
 13403 ;;		None
 13404 ;; Auto vars:     Size  Location     Type
 13405 ;;		None
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  1    wreg      void 
 13408 ;; Registers used:
 13409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/2
 13412 ;;		On exit  : 3/1
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;Total ram usage:        0 bytes
 13420 ;; Hardware stack levels used:    1
 13421 ;; Hardware stack levels required when called:   15
 13422 ;; This function calls:
 13423 ;;		_radio_engine
 13424 ;; This function is called by:
 13425 ;;		_SYS_TaskHandler
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429                           	psect	text82
 13430  008E38                     __ptext82:
 13431                           	opt callstack 0
 13432  008E38                     _PHY_TaskHandler:
 13433                           	opt callstack 14
 13434                           
 13435                           ;../phy/sx1216/phy_src/phy.c: 860:     radio_engine();
 13436                           
 13437                           ;incstack = 0
 13438  008E38  ECE8  F025         	call	_radio_engine	;wreg free
 13439  008E3C  0012               	return		;funcret
 13440  008E3E                     __end_of_PHY_TaskHandler:
 13441                           	opt callstack 0
 13442                           
 13443 ;; *************** function _radio_engine *****************
 13444 ;; Defined at:
 13445 ;;		line 742 in file "../phy/sx1216/phy_src/phy.c"
 13446 ;; Parameters:    Size  Location     Type
 13447 ;;		None
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;		None
 13450 ;; Return value:  Size  Location     Type
 13451 ;;                  1    wreg      void 
 13452 ;; Registers used:
 13453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13454 ;; Tracked objects:
 13455 ;;		On entry : 0/2
 13456 ;;		On exit  : 3/1
 13457 ;;		Unchanged: 0/0
 13458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;Total ram usage:        2 bytes
 13464 ;; Hardware stack levels used:    1
 13465 ;; Hardware stack levels required when called:   14
 13466 ;; This function calls:
 13467 ;;		_DIO0_Receive_ISR
 13468 ;;		_PHY_DataConf
 13469 ;;		_SX1276Read
 13470 ;;		_cad
 13471 ;;		_get_timer0base
 13472 ;;		_initRadio
 13473 ;;		_receive
 13474 ;;		_set_timer0base
 13475 ;; This function is called by:
 13476 ;;		_PHY_TaskHandler
 13477 ;; This function uses a non-reentrant model
 13478 ;;
 13479                           
 13480                           	psect	text83
 13481  004BD0                     __ptext83:
 13482                           	opt callstack 0
 13483  004BD0                     _radio_engine:
 13484                           	opt callstack 14
 13485                           
 13486                           ;../phy/sx1216/phy_src/phy.c: 743:     switch(radio_state_var){
 13487                           
 13488                           ;incstack = 0
 13489  004BD0  D072               	goto	l16923
 13490  004BD2                     l16869:
 13491                           
 13492                           ; BSR set to: 1
 13493                           ;../phy/sx1216/phy_src/phy.c: 745:             initRadio();
 13494  004BD2  ECD9  F020         	call	_initRadio	;wreg free
 13495                           
 13496                           ; BSR set to: 1
 13497                           ;../phy/sx1216/phy_src/phy.c: 746:             radio_state_var = START_RX;
 13498  004BD6  0E01               	movlw	1
 13499  004BD8  6F76               	movwf	_radio_state_var& (0+255),b
 13500                           
 13501                           ; BSR set to: 1
 13502                           ;../phy/sx1216/phy_src/phy.c: 747:             need_radio_reset = 0;
 13503  004BDA  0E00               	movlw	0
 13504  004BDC  6F7C               	movwf	_need_radio_reset& (0+255),b
 13505                           
 13506                           ;../phy/sx1216/phy_src/phy.c: 748:             break;
 13507  004BDE  0012               	return	
 13508  004BE0                     l16875:
 13509                           
 13510                           ; BSR set to: 1
 13511                           ;../phy/sx1216/phy_src/phy.c: 750:             if(need_radio_reset){
 13512  004BE0  517C               	movf	_need_radio_reset& (0+255),w,b
 13513  004BE2  B4D8               	btfsc	status,2,c
 13514  004BE4  D003               	goto	l16879
 13515  004BE6                     u17180:
 13516                           
 13517                           ; BSR set to: 1
 13518                           ;../phy/sx1216/phy_src/phy.c: 751:                 radio_state_var = INIT_RADIO;
 13519  004BE6  0E00               	movlw	0
 13520  004BE8  6F76               	movwf	_radio_state_var& (0+255),b
 13521                           
 13522                           ;../phy/sx1216/phy_src/phy.c: 752:                 break;
 13523  004BEA  0012               	return	
 13524  004BEC                     l16879:
 13525                           
 13526                           ; BSR set to: 1
 13527                           ;../phy/sx1216/phy_src/phy.c: 754:             receive(0);
 13528  004BEC  0E00               	movlw	0
 13529  004BEE  EC5B  F041         	call	_receive
 13530                           
 13531                           ; BSR set to: 61
 13532                           ;../phy/sx1216/phy_src/phy.c: 755:             radio_state_var = WAIT_FOR_RX;
 13533  004BF2  0E02               	movlw	2
 13534  004BF4  0101               	movlb	1	; () banked
 13535  004BF6  6F76               	movwf	_radio_state_var& (0+255),b
 13536                           
 13537                           ;../phy/sx1216/phy_src/phy.c: 756:             break;
 13538  004BF8  0012               	return	
 13539  004BFA                     l2645:
 13540                           
 13541                           ; BSR set to: 1
 13542                           ;../phy/sx1216/phy_src/phy.c: 758:             if(PORTBbits.RB4){
 13543  004BFA  A8CB               	btfss	203,4,c	;volatile
 13544  004BFC  0012               	return	
 13545                           
 13546                           ; BSR set to: 1
 13547                           ;../phy/sx1216/phy_src/phy.c: 759:                 radio_state_var = RX_MESSAGE;
 13548  004BFE  0E03               	movlw	3
 13549  004C00  6F76               	movwf	_radio_state_var& (0+255),b
 13550  004C02  0012               	return	
 13551  004C04                     l16885:
 13552                           
 13553                           ; BSR set to: 1
 13554                           ;../phy/sx1216/phy_src/phy.c: 763:             DIO0_Receive_ISR();
 13555  004C04  EC95  F036         	call	_DIO0_Receive_ISR	;wreg free
 13556  004C08                     l16887:
 13557                           
 13558                           ;../phy/sx1216/phy_src/phy.c: 764:             radio_state_var = START_RX;
 13559  004C08  0E01               	movlw	1
 13560  004C0A  0101               	movlb	1	; () banked
 13561  004C0C  6F76               	movwf	_radio_state_var& (0+255),b
 13562                           
 13563                           ;../phy/sx1216/phy_src/phy.c: 765:             break;
 13564  004C0E  0012               	return	
 13565  004C10                     l16889:
 13566                           
 13567                           ; BSR set to: 1
 13568                           ;../phy/sx1216/phy_src/phy.c: 767:             if(!get_timer0base(&_cadBackoffTimer)){
 13569  004C10  0EF9               	movlw	low __cadBackoffTimer
 13570  004C12  6E02               	movwf	get_timer0base@timer^0,c
 13571  004C14  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13572  004C16  ECBD  F043         	call	_get_timer0base	;wreg free
 13573  004C1A  5002               	movf	?_get_timer0base^0,w,c
 13574  004C1C  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13575  004C1E  A4D8               	btfss	status,2,c
 13576  004C20  D7F3               	goto	l16887
 13577                           
 13578                           ; BSR set to: 57
 13579                           ;../phy/sx1216/phy_src/phy.c: 768:                 if(cad()){
 13580  004C22  EC7C  F031         	call	_cad	;wreg free
 13581  004C26  0900               	iorlw	0
 13582  004C28  B4D8               	btfsc	status,2,c
 13583  004C2A  D011               	goto	l16901
 13584                           
 13585                           ;../phy/sx1216/phy_src/phy.c: 770:                     set_timer0base(&_cadBackoffTimer,
      +                           2000);
 13586  004C2C  0EF9               	movlw	low __cadBackoffTimer
 13587  004C2E  6E02               	movwf	set_timer0base@timer^0,c
 13588  004C30  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13589  004C32  0E07               	movlw	7
 13590  004C34  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13591  004C36  0ED0               	movlw	208
 13592  004C38  6E04               	movwf	set_timer0base@tval^0,c
 13593  004C3A  EC1F  F045         	call	_set_timer0base	;wreg free
 13594                           
 13595                           ; BSR set to: 57
 13596                           ;../phy/sx1216/phy_src/phy.c: 772:                     radio_state_var = START_RX;
 13597  004C3E  0E01               	movlw	1
 13598  004C40  0101               	movlb	1	; () banked
 13599  004C42  6F76               	movwf	_radio_state_var& (0+255),b
 13600                           
 13601                           ; BSR set to: 1
 13602                           ;../phy/sx1216/phy_src/phy.c: 773:                     if(cadCounter < 10)
 13603  004C44  0E0A               	movlw	10
 13604  004C46  617D               	cpfslt	_cadCounter& (0+255),b
 13605  004C48  0012               	return	
 13606                           
 13607                           ; BSR set to: 1
 13608                           ;../phy/sx1216/phy_src/phy.c: 774:                     {;../phy/sx1216/phy_src/phy.c: 77
      +                          5:                         cadCounter++;
 13609  004C4A  2B7D               	incf	_cadCounter& (0+255),f,b
 13610  004C4C  0012               	return	
 13611  004C4E                     l16901:
 13612                           
 13613                           ;../phy/sx1216/phy_src/phy.c: 780:                 radio_state_var = START_TX;
 13614  004C4E  0E06               	movlw	6
 13615  004C50  0101               	movlb	1	; () banked
 13616  004C52  6F76               	movwf	_radio_state_var& (0+255),b
 13617  004C54  0012               	return	
 13618  004C56                     l16905:
 13619                           
 13620                           ; BSR set to: 1
 13621                           ;../phy/sx1216/phy_src/phy.c: 789:             set_timer0base(&txTimeOut, 1000);
 13622  004C56  0EF5               	movlw	low _txTimeOut
 13623  004C58  6E02               	movwf	set_timer0base@timer^0,c
 13624  004C5A  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13625  004C5C  0E03               	movlw	3
 13626  004C5E  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13627  004C60  0EE8               	movlw	232
 13628  004C62  6E04               	movwf	set_timer0base@tval^0,c
 13629  004C64  EC1F  F045         	call	_set_timer0base	;wreg free
 13630                           
 13631                           ; BSR set to: 57
 13632                           ;../phy/sx1216/phy_src/phy.c: 790:             radio_state_var = WAIT_FOR_TX;
 13633  004C68  0E07               	movlw	7
 13634  004C6A  0101               	movlb	1	; () banked
 13635  004C6C  6F76               	movwf	_radio_state_var& (0+255),b
 13636                           
 13637                           ;../phy/sx1216/phy_src/phy.c: 791:             break;
 13638  004C6E  0012               	return	
 13639  004C70                     l16909:
 13640                           
 13641                           ; BSR set to: 1
 13642                           ;../phy/sx1216/phy_src/phy.c: 793:             if((!get_timer0base(&txTimeOut)) || ((SX1
      +                          276Read(0x12) & 0x08))){
 13643  004C70  0EF5               	movlw	low _txTimeOut
 13644  004C72  6E02               	movwf	get_timer0base@timer^0,c
 13645  004C74  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13646  004C76  ECBD  F043         	call	_get_timer0base	;wreg free
 13647  004C7A  5002               	movf	?_get_timer0base^0,w,c
 13648  004C7C  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13649  004C7E  B4D8               	btfsc	status,2,c
 13650  004C80  D006               	goto	u17240
 13651                           
 13652                           ; BSR set to: 57
 13653  004C82  0E12               	movlw	18
 13654  004C84  EC65  F046         	call	_SX1276Read
 13655  004C88  6E4B               	movwf	??_radio_engine^0,c
 13656  004C8A  A64B               	btfss	??_radio_engine^0,3,c
 13657  004C8C  0012               	return	
 13658  004C8E                     u17240:
 13659                           
 13660                           ;../phy/sx1216/phy_src/phy.c: 794:                 radio_state_var = START_RX;
 13661  004C8E  0E01               	movlw	1
 13662  004C90  0101               	movlb	1	; () banked
 13663  004C92  6F76               	movwf	_radio_state_var& (0+255),b
 13664                           
 13665                           ; BSR set to: 1
 13666                           ;../phy/sx1216/phy_src/phy.c: 795:                 if(get_timer0base(&txTimeOut)){
 13667  004C94  0EF5               	movlw	low _txTimeOut
 13668  004C96  6E02               	movwf	get_timer0base@timer^0,c
 13669  004C98  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13670  004C9A  ECBD  F043         	call	_get_timer0base	;wreg free
 13671  004C9E  5002               	movf	?_get_timer0base^0,w,c
 13672  004CA0  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13673  004CA2  B4D8               	btfsc	status,2,c
 13674  004CA4  D004               	goto	l16919
 13675                           
 13676                           ; BSR set to: 57
 13677                           ;../phy/sx1216/phy_src/phy.c: 796:                     PHY_DataConf(PHY_STATUS_SUCCESS);
 13678  004CA6  0E00               	movlw	0
 13679  004CA8  EC0F  F042         	call	_PHY_DataConf
 13680                           
 13681                           ;../phy/sx1216/phy_src/phy.c: 797:                 }
 13682  004CAC  0012               	return	
 13683  004CAE                     l16919:
 13684                           
 13685                           ; BSR set to: 57
 13686                           ;../phy/sx1216/phy_src/phy.c: 799:                     PHY_DataConf(PHY_STATUS_NO_ACK);
 13687  004CAE  0E02               	movlw	2
 13688  004CB0  EC0F  F042         	call	_PHY_DataConf
 13689  004CB4  0012               	return	
 13690  004CB6                     l16923:
 13691  004CB6  0101               	movlb	1	; () banked
 13692  004CB8  5176               	movf	_radio_state_var& (0+255),w,b
 13693  004CBA  6E4B               	movwf	??_radio_engine^0,c
 13694  004CBC  6A4C               	clrf	(??_radio_engine+1)^0,c
 13695                           
 13696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13697                           ; Switch size 1, requested type "simple"
 13698                           ; Number of cases is 1, Range of values is 0 to 0
 13699                           ; switch strategies available:
 13700                           ; Name         Instructions Cycles
 13701                           ; simple_byte            4     3 (average)
 13702                           ;	Chosen strategy is simple_byte
 13703  004CBE  504C               	movf	(??_radio_engine+1)^0,w,c
 13704  004CC0  0A00               	xorlw	0	; case 0
 13705  004CC2  A4D8               	btfss	status,2,c
 13706  004CC4  D790               	goto	u17180
 13707                           
 13708                           ; BSR set to: 1
 13709                           ; Switch size 1, requested type "simple"
 13710                           ; Number of cases is 7, Range of values is 0 to 7
 13711                           ; switch strategies available:
 13712                           ; Name         Instructions Cycles
 13713                           ; simple_byte           22    12 (average)
 13714                           ;	Chosen strategy is simple_byte
 13715  004CC6  504B               	movf	??_radio_engine^0,w,c
 13716  004CC8  0A00               	xorlw	0	; case 0
 13717  004CCA  B4D8               	btfsc	status,2,c
 13718  004CCC  D782               	goto	l16869
 13719  004CCE  0A01               	xorlw	1	; case 1
 13720  004CD0  B4D8               	btfsc	status,2,c
 13721  004CD2  D786               	goto	l16875
 13722  004CD4  0A03               	xorlw	3	; case 2
 13723  004CD6  B4D8               	btfsc	status,2,c
 13724  004CD8  D790               	goto	l2645
 13725  004CDA  0A01               	xorlw	1	; case 3
 13726  004CDC  B4D8               	btfsc	status,2,c
 13727  004CDE  D792               	goto	l16885
 13728  004CE0  0A07               	xorlw	7	; case 4
 13729  004CE2  B4D8               	btfsc	status,2,c
 13730  004CE4  D795               	goto	l16889
 13731  004CE6  0A02               	xorlw	2	; case 6
 13732  004CE8  B4D8               	btfsc	status,2,c
 13733  004CEA  D7B5               	goto	l16905
 13734  004CEC  0A01               	xorlw	1	; case 7
 13735  004CEE  B4D8               	btfsc	status,2,c
 13736  004CF0  D7BF               	goto	l16909
 13737  004CF2  D779               	goto	u17180
 13738  004CF4                     __end_of_radio_engine:
 13739                           	opt callstack 0
 13740                           
 13741 ;; *************** function _cad *****************
 13742 ;; Defined at:
 13743 ;;		line 509 in file "../phy/sx1216/phy_src/phy.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;		None
 13746 ;; Auto vars:     Size  Location     Type
 13747 ;;  RSSI            2   17[COMRAM] short 
 13748 ;;  temp            1   19[COMRAM] unsigned char 
 13749 ;; Return value:  Size  Location     Type
 13750 ;;                  1    wreg      unsigned char 
 13751 ;; Registers used:
 13752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13753 ;; Tracked objects:
 13754 ;;		On entry : 3F/39
 13755 ;;		On exit  : 2/0
 13756 ;;		Unchanged: 0/0
 13757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13759 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13762 ;;Total ram usage:        4 bytes
 13763 ;; Hardware stack levels used:    1
 13764 ;; Hardware stack levels required when called:   13
 13765 ;; This function calls:
 13766 ;;		_SX1276Read
 13767 ;;		_SX1276Write
 13768 ;;		_get_timer0base
 13769 ;;		_set_timer0base
 13770 ;;		_start_radio_cad
 13771 ;; This function is called by:
 13772 ;;		_radio_engine
 13773 ;; This function uses a non-reentrant model
 13774 ;;
 13775                           
 13776                           	psect	text84
 13777  0062F8                     __ptext84:
 13778                           	opt callstack 0
 13779  0062F8                     _cad:
 13780                           	opt callstack 14
 13781                           
 13782                           ; BSR set to: 57
 13783                           ;../phy/sx1216/phy_src/phy.c: 511:     uint8_t temp;;../phy/sx1216/phy_src/phy.c: 513:  
      +                             temp = SX1276Read(0x18);
 13784                           
 13785                           ;incstack = 0
 13786  0062F8  0E18               	movlw	24
 13787  0062FA  EC65  F046         	call	_SX1276Read
 13788  0062FE  6E14               	movwf	cad@temp^0,c
 13789                           
 13790                           ; BSR set to: 61
 13791                           ;../phy/sx1216/phy_src/phy.c: 514:     if((temp & 0x01) | (temp & 0x02))
 13792  006300  0060  F050  F011   	movff	cad@temp,??_cad
 13793  006306  0E02               	movlw	2
 13794  006308  1611               	andwf	??_cad^0,f,c
 13795  00630A  5014               	movf	cad@temp^0,w,c
 13796  00630C  0B01               	andlw	1
 13797  00630E  1011               	iorwf	??_cad^0,w,c
 13798  006310  0900               	iorlw	0
 13799  006312  B4D8               	btfsc	status,2,c
 13800  006314  D002               	goto	l16217
 13801  006316                     u16590:
 13802                           
 13803                           ;../phy/sx1216/phy_src/phy.c: 515:     {;../phy/sx1216/phy_src/phy.c: 516:         retur
      +                          n 1;
 13804  006316  0E01               	movlw	1
 13805  006318  0012               	return	
 13806  00631A                     l16217:
 13807                           
 13808                           ; BSR set to: 61
 13809                           ;../phy/sx1216/phy_src/phy.c: 518:     start_radio_cad();
 13810  00631A  ECB2  F046         	call	_start_radio_cad	;wreg free
 13811                           
 13812                           ; BSR set to: 61
 13813                           ;../phy/sx1216/phy_src/phy.c: 519:     cadDone = 0;
 13814  00631E  0E00               	movlw	0
 13815  006320  0101               	movlb	1	; () banked
 13816  006322  6F7E               	movwf	_cadDone& (0+255),b
 13817                           
 13818                           ; BSR set to: 1
 13819                           ;../phy/sx1216/phy_src/phy.c: 520:     set_timer0base(&cadTimeOut, 2000);
 13820  006324  0EF7               	movlw	low _cadTimeOut
 13821  006326  6E02               	movwf	set_timer0base@timer^0,c
 13822  006328  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13823  00632A  0E07               	movlw	7
 13824  00632C  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13825  00632E  0ED0               	movlw	208
 13826  006330  6E04               	movwf	set_timer0base@tval^0,c
 13827  006332  EC1F  F045         	call	_set_timer0base	;wreg free
 13828                           
 13829                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 13830  006336  D029               	goto	l16251
 13831  006338                     l16223:
 13832                           
 13833                           ; BSR set to: 57
 13834                           ;../phy/sx1216/phy_src/phy.c: 523:     {;../phy/sx1216/phy_src/phy.c: 524:         temp 
      +                          = SX1276Read(0x12);
 13835  006338  0E12               	movlw	18
 13836  00633A  EC65  F046         	call	_SX1276Read
 13837  00633E  6E14               	movwf	cad@temp^0,c
 13838                           
 13839                           ;../phy/sx1216/phy_src/phy.c: 525:         SX1276Write(0x12,temp);
 13840  006340  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
 13841  006346  0E12               	movlw	18
 13842  006348  EC79  F046         	call	_SX1276Write
 13843                           
 13844                           ; BSR set to: 61
 13845                           ;../phy/sx1216/phy_src/phy.c: 526:         if(temp & 0x04)
 13846  00634C  A414               	btfss	cad@temp^0,2,c
 13847  00634E  D01D               	goto	l16251
 13848                           
 13849                           ; BSR set to: 61
 13850                           ;../phy/sx1216/phy_src/phy.c: 527:         {;../phy/sx1216/phy_src/phy.c: 528:          
      +                             cadDone = 1;
 13851  006350  0E01               	movlw	1
 13852  006352  0101               	movlb	1	; () banked
 13853  006354  6F7E               	movwf	_cadDone& (0+255),b
 13854                           
 13855                           ; BSR set to: 1
 13856                           ;../phy/sx1216/phy_src/phy.c: 529:             if(temp & 0x01)
 13857  006356  B014               	btfsc	cad@temp^0,0,c
 13858  006358  D7DE               	goto	u16590
 13859                           
 13860                           ; BSR set to: 1
 13861                           ;../phy/sx1216/phy_src/phy.c: 534:             {;../phy/sx1216/phy_src/phy.c: 535:      
      +                                     int16_t RSSI;;../phy/sx1216/phy_src/phy.c: 536:                 RSSI = -157 +
      +                           SX1276Read(0x1B);
 13862  00635A  0E1B               	movlw	27
 13863  00635C  EC65  F046         	call	_SX1276Read
 13864  006360  6E11               	movwf	??_cad^0,c
 13865  006362  0E63               	movlw	99
 13866  006364  2411               	addwf	??_cad^0,w,c
 13867  006366  6E12               	movwf	cad@RSSI^0,c
 13868  006368  6A13               	clrf	(cad@RSSI+1)^0,c
 13869  00636A  0EFF               	movlw	255
 13870  00636C  2213               	addwfc	(cad@RSSI+1)^0,f,c
 13871                           
 13872                           ; BSR set to: 61
 13873                           ;../phy/sx1216/phy_src/phy.c: 538:                 if(RSSI < RSSITarget)
 13874  00636E  5013               	movf	(cad@RSSI+1)^0,w,c
 13875  006370  0A80               	xorlw	128
 13876  006372  6E11               	movwf	??_cad^0,c
 13877  006374  0100               	movlb	0	; () banked
 13878  006376  51FB               	movf	_RSSITarget& (0+255),w,b
 13879  006378  5C12               	subwf	cad@RSSI^0,w,c
 13880  00637A  0E80               	movlw	128
 13881  00637C  BFFB               	btfsc	_RSSITarget& (0+255),7,b
 13882  00637E  0E7F               	movlw	127
 13883  006380  5811               	subwfb	??_cad^0,w,c
 13884  006382  B0D8               	btfsc	status,0,c
 13885  006384  D7C8               	goto	u16590
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;../phy/sx1216/phy_src/phy.c: 539:                 {;../phy/sx1216/phy_src/phy.c: 540:  
      +                                             return 0;
 13889  006386  0E00               	movlw	0
 13890  006388  0012               	return	
 13891  00638A                     l16251:
 13892                           
 13893                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 13894  00638A  0101               	movlb	1	; () banked
 13895  00638C  517E               	movf	_cadDone& (0+255),w,b
 13896  00638E  A4D8               	btfss	status,2,c
 13897  006390  D009               	goto	u16640
 13898                           
 13899                           ; BSR set to: 1
 13900  006392  0EF7               	movlw	low _cadTimeOut
 13901  006394  6E02               	movwf	get_timer0base@timer^0,c
 13902  006396  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13903  006398  ECBD  F043         	call	_get_timer0base	;wreg free
 13904  00639C  5002               	movf	?_get_timer0base^0,w,c
 13905  00639E  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13906  0063A0  A4D8               	btfss	status,2,c
 13907  0063A2  D7CA               	goto	l16223
 13908  0063A4                     u16640:
 13909                           
 13910                           ;../phy/sx1216/phy_src/phy.c: 549:     if(!get_timer0base(&cadTimeOut))
 13911  0063A4  0EF7               	movlw	low _cadTimeOut
 13912  0063A6  6E02               	movwf	get_timer0base@timer^0,c
 13913  0063A8  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13914  0063AA  ECBD  F043         	call	_get_timer0base	;wreg free
 13915  0063AE  5002               	movf	?_get_timer0base^0,w,c
 13916  0063B0  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13917  0063B2  A4D8               	btfss	status,2,c
 13918  0063B4  0012               	return	
 13919  0063B6  D7AF               	goto	u16590
 13920  0063B8                     __end_of_cad:
 13921                           	opt callstack 0
 13922                           
 13923 ;; *************** function _start_radio_cad *****************
 13924 ;; Defined at:
 13925 ;;		line 562 in file "../phy/sx1216/phy_src/phy.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;		None
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;		None
 13930 ;; Return value:  Size  Location     Type
 13931 ;;                  1    wreg      void 
 13932 ;; Registers used:
 13933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13934 ;; Tracked objects:
 13935 ;;		On entry : 3F/3D
 13936 ;;		On exit  : 3F/3D
 13937 ;;		Unchanged: 0/0
 13938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13943 ;;Total ram usage:        0 bytes
 13944 ;; Hardware stack levels used:    1
 13945 ;; Hardware stack levels required when called:   12
 13946 ;; This function calls:
 13947 ;;		_SX1276Write
 13948 ;;		_idle
 13949 ;; This function is called by:
 13950 ;;		_cad
 13951 ;; This function uses a non-reentrant model
 13952 ;;
 13953                           
 13954                           	psect	text85
 13955  008D64                     __ptext85:
 13956                           	opt callstack 0
 13957  008D64                     _start_radio_cad:
 13958                           	opt callstack 14
 13959                           
 13960                           ; BSR set to: 61
 13961                           ;../phy/sx1216/phy_src/phy.c: 564:     idle();
 13962                           
 13963                           ;incstack = 0
 13964  008D64  ECF9  F046         	call	_idle	;wreg free
 13965                           
 13966                           ;../phy/sx1216/phy_src/phy.c: 565:     SX1276Write(0x01,0x80 | 0x07);
 13967  008D68  0E87               	movlw	135
 13968  008D6A  6E0F               	movwf	SX1276Write@data^0,c
 13969  008D6C  0E01               	movlw	1
 13970  008D6E  EC79  F046         	call	_SX1276Write
 13971                           
 13972                           ; BSR set to: 61
 13973  008D72  0012               	return		;funcret
 13974  008D74                     __end_of_start_radio_cad:
 13975                           	opt callstack 0
 13976                           
 13977 ;; *************** function _set_timer0base *****************
 13978 ;; Defined at:
 13979 ;;		line 35 in file "../hal/hal_src/Timers.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13982 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13983 ;;		 -> ATTimeoutTimer(2), 
 13984 ;;  tval            2    3[COMRAM] unsigned short 
 13985 ;; Auto vars:     Size  Location     Type
 13986 ;;		None
 13987 ;; Return value:  Size  Location     Type
 13988 ;;                  1    wreg      void 
 13989 ;; Registers used:
 13990 ;;		fsr2l, fsr2h
 13991 ;; Tracked objects:
 13992 ;;		On entry : 0/0
 13993 ;;		On exit  : 3F/39
 13994 ;;		Unchanged: 0/0
 13995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14000 ;;Total ram usage:        4 bytes
 14001 ;; Hardware stack levels used:    1
 14002 ;; Hardware stack levels required when called:    7
 14003 ;; This function calls:
 14004 ;;		Nothing
 14005 ;; This function is called by:
 14006 ;;		_processATCommand
 14007 ;;		_cad
 14008 ;;		_radio_engine
 14009 ;; This function uses a non-reentrant model
 14010 ;;
 14011                           
 14012                           	psect	text86
 14013  008A3E                     __ptext86:
 14014                           	opt callstack 0
 14015  008A3E                     _set_timer0base:
 14016                           	opt callstack 22
 14017                           
 14018                           ;../hal/hal_src/Timers.c: 36:     PIE3bits.TMR0IE = 0;;
 14019                           
 14020                           ; BSR set to: 61
 14021                           ;incstack = 0
 14022  008A3E  0139               	movlb	57	; () banked
 14023  008A40  9F93               	bcf	147,7,b	;volatile
 14024                           
 14025                           ; BSR set to: 57
 14026                           ;../hal/hal_src/Timers.c: 37:     *timer = tval;
 14027  008A42  0060  F00B  FFD9   	movff	set_timer0base@timer,fsr2l
 14028  008A48  0060  F00F  FFDA   	movff	set_timer0base@timer+1,fsr2h
 14029  008A4E  0060  F013  FFDE   	movff	set_timer0base@tval,postinc2
 14030  008A54  0060  F017  FFDD   	movff	set_timer0base@tval+1,postdec2
 14031                           
 14032                           ; BSR set to: 57
 14033                           ;../hal/hal_src/Timers.c: 38:     PIE3bits.TMR0IE = 1;;
 14034  008A5A  8F93               	bsf	147,7,b	;volatile
 14035                           
 14036                           ; BSR set to: 57
 14037  008A5C  0012               	return		;funcret
 14038  008A5E                     __end_of_set_timer0base:
 14039                           	opt callstack 0
 14040                           
 14041 ;; *************** function _get_timer0base *****************
 14042 ;; Defined at:
 14043 ;;		line 27 in file "../hal/hal_src/Timers.c"
 14044 ;; Parameters:    Size  Location     Type
 14045 ;;  timer           2    1[COMRAM] PTR unsigned short 
 14046 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 14047 ;;		 -> ATTimeoutTimer(2), 
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;  tval            2    3[COMRAM] unsigned short 
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  2    1[COMRAM] unsigned short 
 14052 ;; Registers used:
 14053 ;;		fsr2l, fsr2h
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/0
 14056 ;;		On exit  : 3F/39
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14063 ;;Total ram usage:        4 bytes
 14064 ;; Hardware stack levels used:    1
 14065 ;; Hardware stack levels required when called:    7
 14066 ;; This function calls:
 14067 ;;		Nothing
 14068 ;; This function is called by:
 14069 ;;		_processATCommand
 14070 ;;		_cad
 14071 ;;		_radio_engine
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           	psect	text87
 14076  00877A                     __ptext87:
 14077                           	opt callstack 0
 14078  00877A                     _get_timer0base:
 14079                           	opt callstack 22
 14080                           
 14081                           ;../hal/hal_src/Timers.c: 28:     uint16_t tval;;../hal/hal_src/Timers.c: 29:     PIE3bi
      +                          ts.TMR0IE = 0;;
 14082                           
 14083                           ; BSR set to: 57
 14084                           ;incstack = 0
 14085  00877A  0139               	movlb	57	; () banked
 14086  00877C  9F93               	bcf	147,7,b	;volatile
 14087                           
 14088                           ; BSR set to: 57
 14089                           ;../hal/hal_src/Timers.c: 30:     tval = *timer;
 14090  00877E  0060  F00B  FFD9   	movff	get_timer0base@timer,fsr2l
 14091  008784  0060  F00F  FFDA   	movff	get_timer0base@timer+1,fsr2h
 14092  00878A  006F FF78  F004    	movff	postinc2,get_timer0base@tval
 14093  008790  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
 14094                           
 14095                           ; BSR set to: 57
 14096                           ;../hal/hal_src/Timers.c: 31:     PIE3bits.TMR0IE = 1;;
 14097  008796  8F93               	bsf	147,7,b	;volatile
 14098                           
 14099                           ; BSR set to: 57
 14100                           ;../hal/hal_src/Timers.c: 32:     return tval;
 14101  008798  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
 14102  00879E  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
 14103                           
 14104                           ; BSR set to: 57
 14105  0087A4  0012               	return		;funcret
 14106  0087A6                     __end_of_get_timer0base:
 14107                           	opt callstack 0
 14108                           
 14109 ;; *************** function _PHY_DataConf *****************
 14110 ;; Defined at:
 14111 ;;		line 286 in file "../nwk/nwk_src/nwkTx.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  status          1    wreg     unsigned char 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;  status          1    4[COMRAM] unsigned char 
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  1    wreg      void 
 14118 ;; Registers used:
 14119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14120 ;; Tracked objects:
 14121 ;;		On entry : 3F/39
 14122 ;;		On exit  : 3F/1
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;Total ram usage:        1 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:    8
 14132 ;; This function calls:
 14133 ;;		_nwkTxConvertPhyStatus
 14134 ;; This function is called by:
 14135 ;;		_radio_engine
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text88
 14140  00841E                     __ptext88:
 14141                           	opt callstack 0
 14142  00841E                     _PHY_DataConf:
 14143                           	opt callstack 19
 14144                           
 14145                           ; BSR set to: 57
 14146                           ;incstack = 0
 14147                           ;PHY_DataConf@status stored from wreg
 14148  00841E  6E05               	movwf	PHY_DataConf@status^0,c
 14149                           
 14150                           ;../nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);../nwk/nwk_src/nwkTx.c: 
      +                          287: {;../nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhySt
      +                          atus(status);
 14151  008420  0101               	movlb	1	; () banked
 14152  008422  EE20 F083          	lfsr	2,131
 14153  008426  516B               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 14154  008428  26D9               	addwf	fsr2l,f,c
 14155  00842A  516C               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 14156  00842C  22DA               	addwfc	fsr2h,f,c
 14157  00842E  5005               	movf	PHY_DataConf@status^0,w,c
 14158  008430  EC49  F042         	call	_nwkTxConvertPhyStatus
 14159  008434  6EDF               	movwf	indf2,c
 14160                           
 14161                           ;../nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 14162  008436  0060  F5AF  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 14163  00843C  0060  F5B3  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 14164  008442  0E15               	movlw	21
 14165  008444  6EDF               	movwf	indf2,c
 14166                           
 14167                           ;../nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
 14168  008446  0E00               	movlw	0
 14169  008448  0101               	movlb	1	; () banked
 14170  00844A  6F6B               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 14171  00844C  0E00               	movlw	0
 14172  00844E  6F6C               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 14173                           
 14174                           ; BSR set to: 1
 14175                           ;../nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 14176  008450  0726               	decf	(_nwkIb+38)& (0+255),f,b
 14177  008452  A0D8               	btfss	status,0,c
 14178  008454  0727               	decf	(_nwkIb+39)& (0+255),f,b
 14179                           
 14180                           ; BSR set to: 1
 14181  008456  0012               	return		;funcret
 14182  008458                     __end_of_PHY_DataConf:
 14183                           	opt callstack 0
 14184                           
 14185 ;; *************** function _nwkTxConvertPhyStatus *****************
 14186 ;; Defined at:
 14187 ;;		line 266 in file "../nwk/nwk_src/nwkTx.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;  status          1    wreg     unsigned char 
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;  status          1    3[COMRAM] unsigned char 
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  1    wreg      unsigned char 
 14194 ;; Registers used:
 14195 ;;		wreg, status,2, status,0
 14196 ;; Tracked objects:
 14197 ;;		On entry : 3F/1
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14205 ;;Total ram usage:        3 bytes
 14206 ;; Hardware stack levels used:    1
 14207 ;; Hardware stack levels required when called:    7
 14208 ;; This function calls:
 14209 ;;		Nothing
 14210 ;; This function is called by:
 14211 ;;		_PHY_DataConf
 14212 ;; This function uses a non-reentrant model
 14213 ;;
 14214                           
 14215                           	psect	text89
 14216  008492                     __ptext89:
 14217                           	opt callstack 0
 14218  008492                     _nwkTxConvertPhyStatus:
 14219                           	opt callstack 19
 14220                           
 14221                           ; BSR set to: 1
 14222                           ;incstack = 0
 14223                           ;nwkTxConvertPhyStatus@status stored from wreg
 14224  008492  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
 14225                           
 14226                           ;../nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 267: {;../nwk/nwk_src/nwkTx.c: 268:   switch (status)
 14227  008494  D008               	goto	l11045
 14228  008496                     l11027:
 14229                           
 14230                           ;../nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 14231  008496  0E00               	movlw	0
 14232  008498  0012               	return	
 14233  00849A                     l11031:
 14234                           
 14235                           ;../nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 14236  00849A  0E20               	movlw	32
 14237  00849C  0012               	return	
 14238  00849E                     l11035:
 14239                           
 14240                           ;../nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 14241  00849E  0E21               	movlw	33
 14242  0084A0  0012               	return	
 14243  0084A2                     l11039:
 14244                           
 14245                           ;../nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 14246  0084A2  0E01               	movlw	1
 14247  0084A4  0012               	return	
 14248  0084A6                     l11045:
 14249  0084A6  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
 14250  0084A8  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
 14251  0084AA  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
 14252                           
 14253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14254                           ; Switch size 1, requested type "simple"
 14255                           ; Number of cases is 1, Range of values is 0 to 0
 14256                           ; switch strategies available:
 14257                           ; Name         Instructions Cycles
 14258                           ; simple_byte            4     3 (average)
 14259                           ;	Chosen strategy is simple_byte
 14260  0084AC  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
 14261  0084AE  0A00               	xorlw	0	; case 0
 14262  0084B0  A4D8               	btfss	status,2,c
 14263  0084B2  D7F7               	goto	l11039
 14264                           
 14265                           ; Switch size 1, requested type "simple"
 14266                           ; Number of cases is 3, Range of values is 0 to 2
 14267                           ; switch strategies available:
 14268                           ; Name         Instructions Cycles
 14269                           ; simple_byte           10     6 (average)
 14270                           ;	Chosen strategy is simple_byte
 14271  0084B4  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
 14272  0084B6  0A00               	xorlw	0	; case 0
 14273  0084B8  B4D8               	btfsc	status,2,c
 14274  0084BA  D7ED               	goto	l11027
 14275  0084BC  0A01               	xorlw	1	; case 1
 14276  0084BE  B4D8               	btfsc	status,2,c
 14277  0084C0  D7EC               	goto	l11031
 14278  0084C2  0A03               	xorlw	3	; case 2
 14279  0084C4  B4D8               	btfsc	status,2,c
 14280  0084C6  D7EB               	goto	l11035
 14281  0084C8  D7EC               	goto	l11039
 14282  0084CA                     __end_of_nwkTxConvertPhyStatus:
 14283                           	opt callstack 0
 14284                           
 14285 ;; *************** function _DIO0_Receive_ISR *****************
 14286 ;; Defined at:
 14287 ;;		line 642 in file "../phy/sx1216/phy_src/phy.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;		None
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;  ind             5   69[COMRAM] struct PHY_DataInd_t
 14292 ;;  packetLength    1   67[COMRAM] unsigned char 
 14293 ;;  irqFlags        1   68[COMRAM] unsigned char 
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      void 
 14296 ;; Registers used:
 14297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14298 ;; Tracked objects:
 14299 ;;		On entry : 0/1
 14300 ;;		On exit  : 3F/3D
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14304 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;Total ram usage:        7 bytes
 14308 ;; Hardware stack levels used:    1
 14309 ;; Hardware stack levels required when called:   13
 14310 ;; This function calls:
 14311 ;;		_PHY_DataInd
 14312 ;;		_SX1276Read
 14313 ;;		_SX1276ReadBuffer
 14314 ;;		_SX1276Write
 14315 ;;		_get_lqi
 14316 ;;		_get_rssi
 14317 ;;		_receive
 14318 ;; This function is called by:
 14319 ;;		_radio_engine
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text90
 14324  006D2A                     __ptext90:
 14325                           	opt callstack 0
 14326  006D2A                     _DIO0_Receive_ISR:
 14327                           	opt callstack 14
 14328                           
 14329                           ;../phy/sx1216/phy_src/phy.c: 644:     uint8_t irqFlags = SX1276Read(0x12);
 14330                           
 14331                           ;incstack = 0
 14332  006D2A  0E12               	movlw	18
 14333  006D2C  EC65  F046         	call	_SX1276Read
 14334  006D30  6E45               	movwf	DIO0_Receive_ISR@irqFlags^0,c
 14335                           
 14336                           ;../phy/sx1216/phy_src/phy.c: 647:     SX1276Write(0x12, irqFlags);
 14337  006D32  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14338  006D38  0E12               	movlw	18
 14339  006D3A  EC79  F046         	call	_SX1276Write
 14340                           
 14341                           ;../phy/sx1216/phy_src/phy.c: 648:     SX1276Write(0x12, irqFlags);
 14342  006D3E  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14343  006D44  0E12               	movlw	18
 14344  006D46  EC79  F046         	call	_SX1276Write
 14345                           
 14346                           ; BSR set to: 61
 14347                           ;../phy/sx1216/phy_src/phy.c: 650:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40)
      +                           && ((irqFlags & 0x80) == 0))
 14348  006D4A  AA45               	btfss	DIO0_Receive_ISR@irqFlags^0,5,c
 14349                           
 14350                           ; BSR set to: 61
 14351  006D4C  AC45               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
 14352  006D4E  D034               	goto	l16281
 14353                           
 14354                           ; BSR set to: 61
 14355  006D50  BE45               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
 14356  006D52  D032               	goto	l16281
 14357                           
 14358                           ; BSR set to: 61
 14359                           ;../phy/sx1216/phy_src/phy.c: 651:     {;../phy/sx1216/phy_src/phy.c: 652:         PHY_D
      +                          ataInd_t ind;;../phy/sx1216/phy_src/phy.c: 653:         uint8_t packetLength;;../phy/sx1
      +                          216/phy_src/phy.c: 656:         packetLength = SX1276Read(0x13);
 14360  006D54  0E13               	movlw	19
 14361  006D56  EC65  F046         	call	_SX1276Read
 14362  006D5A  6E44               	movwf	DIO0_Receive_ISR@packetLength^0,c
 14363                           
 14364                           ;../phy/sx1216/phy_src/phy.c: 659:         SX1276Write(0x0D, SX1276Read(0x10));
 14365  006D5C  0E10               	movlw	16
 14366  006D5E  EC65  F046         	call	_SX1276Read
 14367  006D62  6E0F               	movwf	SX1276Write@data^0,c
 14368  006D64  0E0D               	movlw	13
 14369  006D66  EC79  F046         	call	_SX1276Write
 14370                           
 14371                           ;../phy/sx1216/phy_src/phy.c: 660:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLe
      +                          ngth);
 14372  006D6A  0E40               	movlw	low _phyRxBuffer
 14373  006D6C  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 14374  006D6E  0E03               	movlw	high _phyRxBuffer
 14375  006D70  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 14376  006D72  0060  F110  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 14377  006D78  0E00               	movlw	0
 14378  006D7A  EC3A  F044         	call	_SX1276ReadBuffer
 14379                           
 14380                           ;../phy/sx1216/phy_src/phy.c: 662:         SNR = SX1276Read(0x19);
 14381  006D7E  0E19               	movlw	25
 14382  006D80  EC65  F046         	call	_SX1276Read
 14383  006D84  0101               	movlb	1	; () banked
 14384  006D86  6F79               	movwf	_SNR& (0+255),b
 14385                           
 14386                           ;../phy/sx1216/phy_src/phy.c: 663:         packetRSSI = SX1276Read(0x1A);
 14387  006D88  0E1A               	movlw	26
 14388  006D8A  EC65  F046         	call	_SX1276Read
 14389  006D8E  0101               	movlb	1	; () banked
 14390  006D90  6F7A               	movwf	_packetRSSI& (0+255),b
 14391                           
 14392                           ; BSR set to: 1
 14393                           ;../phy/sx1216/phy_src/phy.c: 664:         ind.data = phyRxBuffer;
 14394  006D92  0E40               	movlw	low _phyRxBuffer
 14395  006D94  6E46               	movwf	DIO0_Receive_ISR@ind^0,c
 14396  006D96  0E03               	movlw	high _phyRxBuffer
 14397  006D98  6E47               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
 14398                           
 14399                           ; BSR set to: 1
 14400                           ;../phy/sx1216/phy_src/phy.c: 665:         ind.size = packetLength;
 14401  006D9A  0060  F110  F048   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 14402                           
 14403                           ; BSR set to: 1
 14404                           ;../phy/sx1216/phy_src/phy.c: 666:         ind.rssi = get_rssi(packetRSSI);
 14405  006DA0  517A               	movf	_packetRSSI& (0+255),w,b
 14406  006DA2  ECD3  F043         	call	_get_rssi
 14407  006DA6  6E4A               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
 14408                           
 14409                           ;../phy/sx1216/phy_src/phy.c: 667:         ind.lqi = get_lqi(ind.rssi);
 14410  006DA8  504A               	movf	(DIO0_Receive_ISR@ind+4)^0,w,c
 14411  006DAA  ECAD  F035         	call	_get_lqi
 14412  006DAE  6E49               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
 14413                           
 14414                           ;../phy/sx1216/phy_src/phy.c: 668:         PHY_DataInd(&ind);
 14415  006DB0  0E46               	movlw	low DIO0_Receive_ISR@ind
 14416  006DB2  6E13               	movwf	PHY_DataInd@ind^0,c
 14417  006DB4  ECBD  F024         	call	_PHY_DataInd	;wreg free
 14418  006DB8                     l16281:
 14419                           
 14420                           ;../phy/sx1216/phy_src/phy.c: 671:     receive(0);
 14421  006DB8  0E00               	movlw	0
 14422  006DBA  EC5B  F041         	call	_receive
 14423                           
 14424                           ; BSR set to: 61
 14425  006DBE  0012               	return		;funcret
 14426  006DC0                     __end_of_DIO0_Receive_ISR:
 14427                           	opt callstack 0
 14428                           
 14429 ;; *************** function _get_rssi *****************
 14430 ;; Defined at:
 14431 ;;		line 615 in file "../phy/sx1216/phy_src/phy.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;  rssi_reg        1    wreg     unsigned char 
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;  rssi_reg        1    1[COMRAM] unsigned char 
 14436 ;;  temp_rssi       2    2[COMRAM] short 
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      char 
 14439 ;; Registers used:
 14440 ;;		wreg, status,2, status,0
 14441 ;; Tracked objects:
 14442 ;;		On entry : 3F/1
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14447 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14450 ;;Total ram usage:        3 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:    7
 14453 ;; This function calls:
 14454 ;;		Nothing
 14455 ;; This function is called by:
 14456 ;;		_DIO0_Receive_ISR
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           	psect	text91
 14461  0087A6                     __ptext91:
 14462                           	opt callstack 0
 14463  0087A6                     _get_rssi:
 14464                           	opt callstack 19
 14465                           
 14466                           ; BSR set to: 61
 14467                           ;incstack = 0
 14468                           ;get_rssi@rssi_reg stored from wreg
 14469  0087A6  6E02               	movwf	get_rssi@rssi_reg^0,c
 14470                           
 14471                           ;../phy/sx1216/phy_src/phy.c: 616:     int16_t temp_rssi = -157 + rssi_reg;
 14472  0087A8  0E63               	movlw	99
 14473  0087AA  2402               	addwf	get_rssi@rssi_reg^0,w,c
 14474  0087AC  6E03               	movwf	get_rssi@temp_rssi^0,c
 14475  0087AE  6A04               	clrf	(get_rssi@temp_rssi+1)^0,c
 14476  0087B0  0EFF               	movlw	255
 14477  0087B2  2204               	addwfc	(get_rssi@temp_rssi+1)^0,f,c
 14478                           
 14479                           ;../phy/sx1216/phy_src/phy.c: 617:     if(temp_rssi < -127){
 14480  0087B4  AE04               	btfss	(get_rssi@temp_rssi+1)^0,7,c
 14481  0087B6  D00A               	goto	l2619
 14482  0087B8  0E81               	movlw	129
 14483  0087BA  5C03               	subwf	get_rssi@temp_rssi^0,w,c
 14484  0087BC  0EFF               	movlw	255
 14485  0087BE  5804               	subwfb	(get_rssi@temp_rssi+1)^0,w,c
 14486  0087C0  B0D8               	btfsc	status,0,c
 14487  0087C2  D004               	goto	l2619
 14488                           
 14489                           ;../phy/sx1216/phy_src/phy.c: 618:         temp_rssi = -127;
 14490  0087C4  0EFF               	movlw	255
 14491  0087C6  6E04               	movwf	(get_rssi@temp_rssi+1)^0,c
 14492  0087C8  0E81               	movlw	129
 14493  0087CA  6E03               	movwf	get_rssi@temp_rssi^0,c
 14494  0087CC                     l2619:
 14495                           
 14496                           ;../phy/sx1216/phy_src/phy.c: 620:     return (temp_rssi);
 14497  0087CC  5003               	movf	get_rssi@temp_rssi^0,w,c
 14498  0087CE  0012               	return		;funcret
 14499  0087D0                     __end_of_get_rssi:
 14500                           	opt callstack 0
 14501                           
 14502 ;; *************** function _get_lqi *****************
 14503 ;; Defined at:
 14504 ;;		line 629 in file "../phy/sx1216/phy_src/phy.c"
 14505 ;; Parameters:    Size  Location     Type
 14506 ;;  rssi            1    wreg     char 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;  rssi            1   66[COMRAM] char 
 14509 ;; Return value:  Size  Location     Type
 14510 ;;                  1    wreg      unsigned char 
 14511 ;; Registers used:
 14512 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14513 ;; Tracked objects:
 14514 ;;		On entry : 0/1
 14515 ;;		On exit  : 0/0
 14516 ;;		Unchanged: 0/0
 14517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14522 ;;Total ram usage:        1 bytes
 14523 ;; Hardware stack levels used:    1
 14524 ;; Hardware stack levels required when called:    8
 14525 ;; This function calls:
 14526 ;;		___fladd
 14527 ;;		___flmul
 14528 ;;		___fltol
 14529 ;;		___xxtofl
 14530 ;; This function is called by:
 14531 ;;		_DIO0_Receive_ISR
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           
 14535                           	psect	text92
 14536  006B5A                     __ptext92:
 14537                           	opt callstack 0
 14538  006B5A                     _get_lqi:
 14539                           	opt callstack 18
 14540                           
 14541                           ;incstack = 0
 14542                           ;get_lqi@rssi stored from wreg
 14543  006B5A  6E43               	movwf	get_lqi@rssi^0,c
 14544                           
 14545                           ;../phy/sx1216/phy_src/phy.c: 630:     if(rssi > -10){
 14546  006B5C  5043               	movf	get_lqi@rssi^0,w,c
 14547  006B5E  0A80               	xorlw	128
 14548  006B60  0F89               	addlw	137
 14549  006B62  A0D8               	btfss	status,0,c
 14550  006B64  D002               	goto	l15641
 14551                           
 14552                           ;../phy/sx1216/phy_src/phy.c: 631:         return 255;
 14553  006B66  0EFF               	movlw	255
 14554  006B68  0012               	return	
 14555  006B6A                     l15641:
 14556                           
 14557                           ;../phy/sx1216/phy_src/phy.c: 633:     return ((2.18*(int16_t)rssi) + 10795);
 14558  006B6A  0E00               	movlw	0
 14559  006B6C  6E2D               	movwf	___fladd@a^0,c
 14560  006B6E  0EAC               	movlw	172
 14561  006B70  6E2E               	movwf	(___fladd@a+1)^0,c
 14562  006B72  0E28               	movlw	40
 14563  006B74  6E2F               	movwf	(___fladd@a+2)^0,c
 14564  006B76  0E46               	movlw	70
 14565  006B78  6E30               	movwf	(___fladd@a+3)^0,c
 14566  006B7A  0E1F               	movlw	31
 14567  006B7C  6E14               	movwf	___flmul@a^0,c
 14568  006B7E  0E85               	movlw	133
 14569  006B80  6E15               	movwf	(___flmul@a+1)^0,c
 14570  006B82  0E0B               	movlw	11
 14571  006B84  6E16               	movwf	(___flmul@a+2)^0,c
 14572  006B86  0E40               	movlw	64
 14573  006B88  6E17               	movwf	(___flmul@a+3)^0,c
 14574  006B8A  5043               	movf	get_lqi@rssi^0,w,c
 14575  006B8C  6E02               	movwf	___xxtofl@val^0,c
 14576  006B8E  0E00               	movlw	0
 14577  006B90  BE02               	btfsc	___xxtofl@val^0,7,c
 14578  006B92  0EFF               	movlw	-1
 14579  006B94  6E03               	movwf	(___xxtofl@val+1)^0,c
 14580  006B96  6E04               	movwf	(___xxtofl@val+2)^0,c
 14581  006B98  6E05               	movwf	(___xxtofl@val+3)^0,c
 14582  006B9A  0E01               	movlw	1
 14583  006B9C  EC27  F020         	call	___xxtofl
 14584  006BA0  0060  F008  F010   	movff	?___xxtofl,___flmul@b
 14585  006BA6  0060  F00C  F011   	movff	?___xxtofl+1,___flmul@b+1
 14586  006BAC  0060  F010  F012   	movff	?___xxtofl+2,___flmul@b+2
 14587  006BB2  0060  F014  F013   	movff	?___xxtofl+3,___flmul@b+3
 14588  006BB8  EC89  F009         	call	___flmul	;wreg free
 14589  006BBC  0060  F040  F029   	movff	?___flmul,___fladd@b
 14590  006BC2  0060  F044  F02A   	movff	?___flmul+1,___fladd@b+1
 14591  006BC8  0060  F048  F02B   	movff	?___flmul+2,___fladd@b+2
 14592  006BCE  0060  F04C  F02C   	movff	?___flmul+3,___fladd@b+3
 14593  006BD4  EC02  F00D         	call	___fladd	;wreg free
 14594  006BD8  0060  F0A4  F039   	movff	?___fladd,___fltol@f1
 14595  006BDE  0060  F0A8  F03A   	movff	?___fladd+1,___fltol@f1+1
 14596  006BE4  0060  F0AC  F03B   	movff	?___fladd+2,___fltol@f1+2
 14597  006BEA  0060  F0B0  F03C   	movff	?___fladd+3,___fltol@f1+3
 14598  006BF0  EC4E  F030         	call	___fltol	;wreg free
 14599  006BF4  5039               	movf	?___fltol^0,w,c
 14600  006BF6  0012               	return		;funcret
 14601  006BF8                     __end_of_get_lqi:
 14602                           	opt callstack 0
 14603                           
 14604 ;; *************** function ___fltol *****************
 14605 ;; Defined at:
 14606 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 14607 ;; Parameters:    Size  Location     Type
 14608 ;;  f1              4   56[COMRAM] unsigned char 
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;  exp1            1   65[COMRAM] unsigned char 
 14611 ;;  sign1           1   64[COMRAM] unsigned char 
 14612 ;; Return value:  Size  Location     Type
 14613 ;;                  4   56[COMRAM] long 
 14614 ;; Registers used:
 14615 ;;		wreg, status,2, status,0
 14616 ;; Tracked objects:
 14617 ;;		On entry : 0/1
 14618 ;;		On exit  : 0/0
 14619 ;;		Unchanged: 0/0
 14620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14624 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14625 ;;Total ram usage:       10 bytes
 14626 ;; Hardware stack levels used:    1
 14627 ;; Hardware stack levels required when called:    7
 14628 ;; This function calls:
 14629 ;;		Nothing
 14630 ;; This function is called by:
 14631 ;;		_get_lqi
 14632 ;; This function uses a non-reentrant model
 14633 ;;
 14634                           
 14635                           	psect	text93
 14636  00609C                     __ptext93:
 14637                           	opt callstack 0
 14638  00609C                     ___fltol:
 14639                           	opt callstack 18
 14640                           
 14641                           ;incstack = 0
 14642  00609C  343B               	rlcf	(___fltol@f1+2)^0,w,c
 14643  00609E  343C               	rlcf	(___fltol@f1+3)^0,w,c
 14644  0060A0  6E42               	movwf	___fltol@exp1^0,c
 14645  0060A2  5042               	movf	___fltol@exp1^0,w,c
 14646  0060A4  A4D8               	btfss	status,2,c
 14647  0060A6  D009               	goto	l10569
 14648  0060A8                     u8840:
 14649  0060A8  0E00               	movlw	0
 14650  0060AA  6E39               	movwf	?___fltol^0,c
 14651  0060AC  0E00               	movlw	0
 14652  0060AE  6E3A               	movwf	(?___fltol+1)^0,c
 14653  0060B0  0E00               	movlw	0
 14654  0060B2  6E3B               	movwf	(?___fltol+2)^0,c
 14655  0060B4  0E00               	movlw	0
 14656  0060B6  6E3C               	movwf	(?___fltol+3)^0,c
 14657  0060B8  0012               	return	
 14658  0060BA                     l10569:
 14659  0060BA  0060  F0E4  F03D   	movff	___fltol@f1,??___fltol
 14660  0060C0  0060  F0E8  F03E   	movff	___fltol@f1+1,??___fltol+1
 14661  0060C6  0060  F0EC  F03F   	movff	___fltol@f1+2,??___fltol+2
 14662  0060CC  0060  F0F0  F040   	movff	___fltol@f1+3,??___fltol+3
 14663  0060D2  0E20               	movlw	32
 14664  0060D4  D005               	goto	u8850
 14665  0060D6                     u8855:
 14666  0060D6  90D8               	bcf	status,0,c
 14667  0060D8  3240               	rrcf	(??___fltol+3)^0,f,c
 14668  0060DA  323F               	rrcf	(??___fltol+2)^0,f,c
 14669  0060DC  323E               	rrcf	(??___fltol+1)^0,f,c
 14670  0060DE  323D               	rrcf	??___fltol^0,f,c
 14671  0060E0                     u8850:
 14672  0060E0  2EE8               	decfsz	wreg,f,c
 14673  0060E2  D7F9               	goto	u8855
 14674  0060E4  503D               	movf	??___fltol^0,w,c
 14675  0060E6  6E41               	movwf	___fltol@sign1^0,c
 14676  0060E8  8E3B               	bsf	(___fltol@f1+2)^0,7,c
 14677  0060EA  0EFF               	movlw	255
 14678  0060EC  1639               	andwf	___fltol@f1^0,f,c
 14679  0060EE  0EFF               	movlw	255
 14680  0060F0  163A               	andwf	(___fltol@f1+1)^0,f,c
 14681  0060F2  0EFF               	movlw	255
 14682  0060F4  163B               	andwf	(___fltol@f1+2)^0,f,c
 14683  0060F6  0E00               	movlw	0
 14684  0060F8  163C               	andwf	(___fltol@f1+3)^0,f,c
 14685  0060FA  0E96               	movlw	150
 14686  0060FC  5E42               	subwf	___fltol@exp1^0,f,c
 14687  0060FE  AE42               	btfss	___fltol@exp1^0,7,c
 14688  006100  D00D               	goto	l10589
 14689  006102  5042               	movf	___fltol@exp1^0,w,c
 14690  006104  0A80               	xorlw	128
 14691  006106  0F97               	addlw	151
 14692  006108  A0D8               	btfss	status,0,c
 14693  00610A  D7CE               	goto	u8840
 14694  00610C                     l10585:
 14695  00610C  90D8               	bcf	status,0,c
 14696  00610E  323C               	rrcf	(___fltol@f1+3)^0,f,c
 14697  006110  323B               	rrcf	(___fltol@f1+2)^0,f,c
 14698  006112  323A               	rrcf	(___fltol@f1+1)^0,f,c
 14699  006114  3239               	rrcf	___fltol@f1^0,f,c
 14700  006116  3E42               	incfsz	___fltol@exp1^0,f,c
 14701  006118  D7F9               	goto	l10585
 14702  00611A  D00D               	goto	u8890
 14703  00611C                     l10589:
 14704  00611C  0E1F               	movlw	31
 14705  00611E  6442               	cpfsgt	___fltol@exp1^0,c
 14706  006120  D007               	goto	l10597
 14707  006122  D7C2               	goto	u8840
 14708  006124                     l10595:
 14709  006124  90D8               	bcf	status,0,c
 14710  006126  3639               	rlcf	___fltol@f1^0,f,c
 14711  006128  363A               	rlcf	(___fltol@f1+1)^0,f,c
 14712  00612A  363B               	rlcf	(___fltol@f1+2)^0,f,c
 14713  00612C  363C               	rlcf	(___fltol@f1+3)^0,f,c
 14714  00612E  0642               	decf	___fltol@exp1^0,f,c
 14715  006130                     l10597:
 14716  006130  5042               	movf	___fltol@exp1^0,w,c
 14717  006132  A4D8               	btfss	status,2,c
 14718  006134  D7F7               	goto	l10595
 14719  006136                     u8890:
 14720  006136  5041               	movf	___fltol@sign1^0,w,c
 14721  006138  B4D8               	btfsc	status,2,c
 14722  00613A  D008               	goto	l10603
 14723  00613C  1E3C               	comf	(___fltol@f1+3)^0,f,c
 14724  00613E  1E3B               	comf	(___fltol@f1+2)^0,f,c
 14725  006140  1E3A               	comf	(___fltol@f1+1)^0,f,c
 14726  006142  6C39               	negf	___fltol@f1^0,c
 14727  006144  0E00               	movlw	0
 14728  006146  223A               	addwfc	(___fltol@f1+1)^0,f,c
 14729  006148  223B               	addwfc	(___fltol@f1+2)^0,f,c
 14730  00614A  223C               	addwfc	(___fltol@f1+3)^0,f,c
 14731  00614C                     l10603:
 14732  00614C  0060  F0E4  F039   	movff	___fltol@f1,?___fltol
 14733  006152  0060  F0E8  F03A   	movff	___fltol@f1+1,?___fltol+1
 14734  006158  0060  F0EC  F03B   	movff	___fltol@f1+2,?___fltol+2
 14735  00615E  0060  F0F0  F03C   	movff	___fltol@f1+3,?___fltol+3
 14736  006164  0012               	return		;funcret
 14737  006166                     __end_of___fltol:
 14738                           	opt callstack 0
 14739                           
 14740 ;; *************** function ___flmul *****************
 14741 ;; Defined at:
 14742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;  b               4   15[COMRAM] long 
 14745 ;;  a               4   19[COMRAM] long 
 14746 ;; Auto vars:     Size  Location     Type
 14747 ;;  prod            4   34[COMRAM] struct .
 14748 ;;  grs             4   29[COMRAM] unsigned long 
 14749 ;;  temp            2   38[COMRAM] struct .
 14750 ;;  bexp            1   33[COMRAM] unsigned char 
 14751 ;;  aexp            1   28[COMRAM] unsigned char 
 14752 ;;  sign            1   27[COMRAM] unsigned char 
 14753 ;; Return value:  Size  Location     Type
 14754 ;;                  4   15[COMRAM] unsigned char 
 14755 ;; Registers used:
 14756 ;;		wreg, status,2, status,0, prodl, prodh
 14757 ;; Tracked objects:
 14758 ;;		On entry : 0/1
 14759 ;;		On exit  : 0/0
 14760 ;;		Unchanged: 0/0
 14761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14762 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14763 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14765 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14766 ;;Total ram usage:       25 bytes
 14767 ;; Hardware stack levels used:    1
 14768 ;; Hardware stack levels required when called:    7
 14769 ;; This function calls:
 14770 ;;		Nothing
 14771 ;; This function is called by:
 14772 ;;		_get_lqi
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           	psect	text94
 14777  001312                     __ptext94:
 14778                           	opt callstack 0
 14779  001312                     ___flmul:
 14780                           	opt callstack 18
 14781                           
 14782                           ;incstack = 0
 14783  001312  5013               	movf	(___flmul@b+3)^0,w,c
 14784  001314  0B80               	andlw	128
 14785  001316  6E1C               	movwf	___flmul@sign^0,c
 14786  001318  5013               	movf	(___flmul@b+3)^0,w,c
 14787  00131A  2413               	addwf	(___flmul@b+3)^0,w,c
 14788  00131C  6E22               	movwf	___flmul@bexp^0,c
 14789  00131E  BE12               	btfsc	(___flmul@b+2)^0,7,c
 14790  001320  8022               	bsf	___flmul@bexp^0,0,c
 14791  001322  5022               	movf	___flmul@bexp^0,w,c
 14792  001324  B4D8               	btfsc	status,2,c
 14793  001326  D00D               	goto	l10425
 14794  001328  2822               	incf	___flmul@bexp^0,w,c
 14795  00132A  A4D8               	btfss	status,2,c
 14796  00132C  D008               	goto	l10423
 14797  00132E  0E00               	movlw	0
 14798  001330  6E10               	movwf	___flmul@b^0,c
 14799  001332  0E00               	movlw	0
 14800  001334  6E11               	movwf	(___flmul@b+1)^0,c
 14801  001336  0E00               	movlw	0
 14802  001338  6E12               	movwf	(___flmul@b+2)^0,c
 14803  00133A  0E00               	movlw	0
 14804  00133C  6E13               	movwf	(___flmul@b+3)^0,c
 14805  00133E                     l10423:
 14806  00133E  8E12               	bsf	(___flmul@b+2)^0,7,c
 14807  001340  D008               	goto	l10427
 14808  001342                     l10425:
 14809  001342  0E00               	movlw	0
 14810  001344  6E10               	movwf	___flmul@b^0,c
 14811  001346  0E00               	movlw	0
 14812  001348  6E11               	movwf	(___flmul@b+1)^0,c
 14813  00134A  0E00               	movlw	0
 14814  00134C  6E12               	movwf	(___flmul@b+2)^0,c
 14815  00134E  0E00               	movlw	0
 14816  001350  6E13               	movwf	(___flmul@b+3)^0,c
 14817  001352                     l10427:
 14818  001352  5017               	movf	(___flmul@a+3)^0,w,c
 14819  001354  0B80               	andlw	128
 14820  001356  1A1C               	xorwf	___flmul@sign^0,f,c
 14821  001358  5017               	movf	(___flmul@a+3)^0,w,c
 14822  00135A  2417               	addwf	(___flmul@a+3)^0,w,c
 14823  00135C  6E1D               	movwf	___flmul@aexp^0,c
 14824  00135E  BE16               	btfsc	(___flmul@a+2)^0,7,c
 14825  001360  801D               	bsf	___flmul@aexp^0,0,c
 14826  001362  501D               	movf	___flmul@aexp^0,w,c
 14827  001364  B4D8               	btfsc	status,2,c
 14828  001366  D00D               	goto	l10443
 14829  001368  281D               	incf	___flmul@aexp^0,w,c
 14830  00136A  A4D8               	btfss	status,2,c
 14831  00136C  D008               	goto	l10441
 14832  00136E  0E00               	movlw	0
 14833  001370  6E14               	movwf	___flmul@a^0,c
 14834  001372  0E00               	movlw	0
 14835  001374  6E15               	movwf	(___flmul@a+1)^0,c
 14836  001376  0E00               	movlw	0
 14837  001378  6E16               	movwf	(___flmul@a+2)^0,c
 14838  00137A  0E00               	movlw	0
 14839  00137C  6E17               	movwf	(___flmul@a+3)^0,c
 14840  00137E                     l10441:
 14841  00137E  8E16               	bsf	(___flmul@a+2)^0,7,c
 14842  001380  D008               	goto	l3814
 14843  001382                     l10443:
 14844  001382  0E00               	movlw	0
 14845  001384  6E14               	movwf	___flmul@a^0,c
 14846  001386  0E00               	movlw	0
 14847  001388  6E15               	movwf	(___flmul@a+1)^0,c
 14848  00138A  0E00               	movlw	0
 14849  00138C  6E16               	movwf	(___flmul@a+2)^0,c
 14850  00138E  0E00               	movlw	0
 14851  001390  6E17               	movwf	(___flmul@a+3)^0,c
 14852  001392                     l3814:
 14853  001392  501D               	movf	___flmul@aexp^0,w,c
 14854  001394  B4D8               	btfsc	status,2,c
 14855  001396  D003               	goto	u8680
 14856  001398  5022               	movf	___flmul@bexp^0,w,c
 14857  00139A  A4D8               	btfss	status,2,c
 14858  00139C  D009               	goto	l10451
 14859  00139E                     u8680:
 14860  00139E  0E00               	movlw	0
 14861  0013A0  6E10               	movwf	?___flmul^0,c
 14862  0013A2  0E00               	movlw	0
 14863  0013A4  6E11               	movwf	(?___flmul+1)^0,c
 14864  0013A6  0E00               	movlw	0
 14865  0013A8  6E12               	movwf	(?___flmul+2)^0,c
 14866  0013AA  0E00               	movlw	0
 14867  0013AC  6E13               	movwf	(?___flmul+3)^0,c
 14868  0013AE  0012               	return	
 14869  0013B0                     l10451:
 14870  0013B0  5016               	movf	(___flmul@a+2)^0,w,c
 14871  0013B2  0210               	mulwf	___flmul@b^0,c
 14872  0013B4  006F FFCC  F027    	movff	prodl,___flmul@temp
 14873  0013BA  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14874  0013C0  5027               	movf	___flmul@temp^0,w,c
 14875  0013C2  6E1E               	movwf	___flmul@grs^0,c
 14876  0013C4  6A1F               	clrf	(___flmul@grs+1)^0,c
 14877  0013C6  6A20               	clrf	(___flmul@grs+2)^0,c
 14878  0013C8  6A21               	clrf	(___flmul@grs+3)^0,c
 14879  0013CA  5028               	movf	(___flmul@temp+1)^0,w,c
 14880  0013CC  6E23               	movwf	___flmul@prod^0,c
 14881  0013CE  6A24               	clrf	(___flmul@prod+1)^0,c
 14882  0013D0  6A25               	clrf	(___flmul@prod+2)^0,c
 14883  0013D2  6A26               	clrf	(___flmul@prod+3)^0,c
 14884  0013D4  5015               	movf	(___flmul@a+1)^0,w,c
 14885  0013D6  0211               	mulwf	(___flmul@b+1)^0,c
 14886  0013D8  006F FFCC  F027    	movff	prodl,___flmul@temp
 14887  0013DE  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14888  0013E4  5027               	movf	___flmul@temp^0,w,c
 14889  0013E6  261E               	addwf	___flmul@grs^0,f,c
 14890  0013E8  0E00               	movlw	0
 14891  0013EA  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14892  0013EC  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14893  0013EE  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14894  0013F0  5028               	movf	(___flmul@temp+1)^0,w,c
 14895  0013F2  2623               	addwf	___flmul@prod^0,f,c
 14896  0013F4  0E00               	movlw	0
 14897  0013F6  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14898  0013F8  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14899  0013FA  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14900  0013FC  5014               	movf	___flmul@a^0,w,c
 14901  0013FE  0212               	mulwf	(___flmul@b+2)^0,c
 14902  001400  006F FFCC  F027    	movff	prodl,___flmul@temp
 14903  001406  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14904  00140C  5027               	movf	___flmul@temp^0,w,c
 14905  00140E  261E               	addwf	___flmul@grs^0,f,c
 14906  001410  0E00               	movlw	0
 14907  001412  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14908  001414  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14909  001416  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14910  001418  5028               	movf	(___flmul@temp+1)^0,w,c
 14911  00141A  2623               	addwf	___flmul@prod^0,f,c
 14912  00141C  0E00               	movlw	0
 14913  00141E  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14914  001420  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14915  001422  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14916  001424  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 14917  00142A  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 14918  001430  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 14919  001436  6A1E               	clrf	___flmul@grs^0,c
 14920  001438  5014               	movf	___flmul@a^0,w,c
 14921  00143A  0211               	mulwf	(___flmul@b+1)^0,c
 14922  00143C  006F FFCC  F027    	movff	prodl,___flmul@temp
 14923  001442  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14924  001448  5027               	movf	___flmul@temp^0,w,c
 14925  00144A  261E               	addwf	___flmul@grs^0,f,c
 14926  00144C  5028               	movf	(___flmul@temp+1)^0,w,c
 14927  00144E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14928  001450  0E00               	movlw	0
 14929  001452  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14930  001454  0E00               	movlw	0
 14931  001456  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14932  001458  5015               	movf	(___flmul@a+1)^0,w,c
 14933  00145A  0210               	mulwf	___flmul@b^0,c
 14934  00145C  006F FFCC  F027    	movff	prodl,___flmul@temp
 14935  001462  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14936  001468  5027               	movf	___flmul@temp^0,w,c
 14937  00146A  261E               	addwf	___flmul@grs^0,f,c
 14938  00146C  5028               	movf	(___flmul@temp+1)^0,w,c
 14939  00146E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14940  001470  0E00               	movlw	0
 14941  001472  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14942  001474  0E00               	movlw	0
 14943  001476  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14944  001478  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 14945  00147E  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 14946  001484  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 14947  00148A  6A1E               	clrf	___flmul@grs^0,c
 14948  00148C  5014               	movf	___flmul@a^0,w,c
 14949  00148E  0210               	mulwf	___flmul@b^0,c
 14950  001490  006F FFCC  F027    	movff	prodl,___flmul@temp
 14951  001496  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14952  00149C  5027               	movf	___flmul@temp^0,w,c
 14953  00149E  261E               	addwf	___flmul@grs^0,f,c
 14954  0014A0  5028               	movf	(___flmul@temp+1)^0,w,c
 14955  0014A2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14956  0014A4  0E00               	movlw	0
 14957  0014A6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14958  0014A8  0E00               	movlw	0
 14959  0014AA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14960  0014AC  5016               	movf	(___flmul@a+2)^0,w,c
 14961  0014AE  0211               	mulwf	(___flmul@b+1)^0,c
 14962  0014B0  006F FFCC  F027    	movff	prodl,___flmul@temp
 14963  0014B6  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14964  0014BC  5027               	movf	___flmul@temp^0,w,c
 14965  0014BE  2623               	addwf	___flmul@prod^0,f,c
 14966  0014C0  5028               	movf	(___flmul@temp+1)^0,w,c
 14967  0014C2  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14968  0014C4  0E00               	movlw	0
 14969  0014C6  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14970  0014C8  0E00               	movlw	0
 14971  0014CA  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14972  0014CC  5015               	movf	(___flmul@a+1)^0,w,c
 14973  0014CE  0212               	mulwf	(___flmul@b+2)^0,c
 14974  0014D0  006F FFCC  F027    	movff	prodl,___flmul@temp
 14975  0014D6  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14976  0014DC  5027               	movf	___flmul@temp^0,w,c
 14977  0014DE  2623               	addwf	___flmul@prod^0,f,c
 14978  0014E0  5028               	movf	(___flmul@temp+1)^0,w,c
 14979  0014E2  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14980  0014E4  0E00               	movlw	0
 14981  0014E6  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14982  0014E8  0E00               	movlw	0
 14983  0014EA  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14984  0014EC  5016               	movf	(___flmul@a+2)^0,w,c
 14985  0014EE  0212               	mulwf	(___flmul@b+2)^0,c
 14986  0014F0  006F FFCC  F027    	movff	prodl,___flmul@temp
 14987  0014F6  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14988  0014FC  5027               	movf	___flmul@temp^0,w,c
 14989  0014FE  6E18               	movwf	??___flmul^0,c
 14990  001500  5028               	movf	(___flmul@temp+1)^0,w,c
 14991  001502  6E19               	movwf	(??___flmul+1)^0,c
 14992  001504  6A1A               	clrf	(??___flmul+2)^0,c
 14993  001506  6A1B               	clrf	(??___flmul+3)^0,c
 14994  001508  0060  F068  F01B   	movff	??___flmul+2,??___flmul+3
 14995  00150E  0060  F064  F01A   	movff	??___flmul+1,??___flmul+2
 14996  001514  0060  F060  F019   	movff	??___flmul,??___flmul+1
 14997  00151A  6A18               	clrf	??___flmul^0,c
 14998  00151C  5018               	movf	??___flmul^0,w,c
 14999  00151E  2623               	addwf	___flmul@prod^0,f,c
 15000  001520  5019               	movf	(??___flmul+1)^0,w,c
 15001  001522  2224               	addwfc	(___flmul@prod+1)^0,f,c
 15002  001524  501A               	movf	(??___flmul+2)^0,w,c
 15003  001526  2225               	addwfc	(___flmul@prod+2)^0,f,c
 15004  001528  501B               	movf	(??___flmul+3)^0,w,c
 15005  00152A  2226               	addwfc	(___flmul@prod+3)^0,f,c
 15006  00152C  5021               	movf	(___flmul@grs+3)^0,w,c
 15007  00152E  2623               	addwf	___flmul@prod^0,f,c
 15008  001530  0E00               	movlw	0
 15009  001532  2224               	addwfc	(___flmul@prod+1)^0,f,c
 15010  001534  2225               	addwfc	(___flmul@prod+2)^0,f,c
 15011  001536  2226               	addwfc	(___flmul@prod+3)^0,f,c
 15012  001538  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 15013  00153E  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 15014  001544  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 15015  00154A  6A1E               	clrf	___flmul@grs^0,c
 15016  00154C  501D               	movf	___flmul@aexp^0,w,c
 15017  00154E  0060  F088  F018   	movff	___flmul@bexp,??___flmul
 15018  001554  6A19               	clrf	(??___flmul+1)^0,c
 15019  001556  2618               	addwf	??___flmul^0,f,c
 15020  001558  0E00               	movlw	0
 15021  00155A  2219               	addwfc	(??___flmul+1)^0,f,c
 15022  00155C  0E82               	movlw	130
 15023  00155E  2418               	addwf	??___flmul^0,w,c
 15024  001560  6E27               	movwf	___flmul@temp^0,c
 15025  001562  0EFF               	movlw	255
 15026  001564  2019               	addwfc	(??___flmul+1)^0,w,c
 15027  001566  6E28               	movwf	(___flmul@temp+1)^0,c
 15028  001568  D00F               	goto	l10499
 15029  00156A                     l10493:
 15030  00156A  90D8               	bcf	status,0,c
 15031  00156C  3623               	rlcf	___flmul@prod^0,f,c
 15032  00156E  3624               	rlcf	(___flmul@prod+1)^0,f,c
 15033  001570  3625               	rlcf	(___flmul@prod+2)^0,f,c
 15034  001572  3626               	rlcf	(___flmul@prod+3)^0,f,c
 15035  001574  BE21               	btfsc	(___flmul@grs+3)^0,7,c
 15036  001576  8023               	bsf	___flmul@prod^0,0,c
 15037  001578  90D8               	bcf	status,0,c
 15038  00157A  361E               	rlcf	___flmul@grs^0,f,c
 15039  00157C  361F               	rlcf	(___flmul@grs+1)^0,f,c
 15040  00157E  3620               	rlcf	(___flmul@grs+2)^0,f,c
 15041  001580  3621               	rlcf	(___flmul@grs+3)^0,f,c
 15042  001582  0627               	decf	___flmul@temp^0,f,c
 15043  001584  A0D8               	btfss	status,0,c
 15044  001586  0628               	decf	(___flmul@temp+1)^0,f,c
 15045  001588                     l10499:
 15046  001588  AE25               	btfss	(___flmul@prod+2)^0,7,c
 15047  00158A  D7EF               	goto	l10493
 15048  00158C  0E00               	movlw	0
 15049  00158E  6E1D               	movwf	___flmul@aexp^0,c
 15050  001590  AE21               	btfss	(___flmul@grs+3)^0,7,c
 15051  001592  D017               	goto	l3823
 15052  001594  0EFF               	movlw	255
 15053  001596  141E               	andwf	___flmul@grs^0,w,c
 15054  001598  6E18               	movwf	??___flmul^0,c
 15055  00159A  0EFF               	movlw	255
 15056  00159C  141F               	andwf	(___flmul@grs+1)^0,w,c
 15057  00159E  6E19               	movwf	(??___flmul+1)^0,c
 15058  0015A0  0EFF               	movlw	255
 15059  0015A2  1420               	andwf	(___flmul@grs+2)^0,w,c
 15060  0015A4  6E1A               	movwf	(??___flmul+2)^0,c
 15061  0015A6  0E7F               	movlw	127
 15062  0015A8  1421               	andwf	(___flmul@grs+3)^0,w,c
 15063  0015AA  6E1B               	movwf	(??___flmul+3)^0,c
 15064  0015AC  5018               	movf	??___flmul^0,w,c
 15065  0015AE  1019               	iorwf	(??___flmul+1)^0,w,c
 15066  0015B0  101A               	iorwf	(??___flmul+2)^0,w,c
 15067  0015B2  101B               	iorwf	(??___flmul+3)^0,w,c
 15068  0015B4  B4D8               	btfsc	status,2,c
 15069  0015B6  D003               	goto	l3824
 15070  0015B8                     u8720:
 15071  0015B8  0E01               	movlw	1
 15072  0015BA  6E1D               	movwf	___flmul@aexp^0,c
 15073  0015BC  D002               	goto	l3823
 15074  0015BE                     l3824:
 15075  0015BE  B023               	btfsc	___flmul@prod^0,0,c
 15076  0015C0  D7FB               	goto	u8720
 15077  0015C2                     l3823:
 15078  0015C2  501D               	movf	___flmul@aexp^0,w,c
 15079  0015C4  B4D8               	btfsc	status,2,c
 15080  0015C6  D027               	goto	l10519
 15081  0015C8  0E01               	movlw	1
 15082  0015CA  2623               	addwf	___flmul@prod^0,f,c
 15083  0015CC  0E00               	movlw	0
 15084  0015CE  2224               	addwfc	(___flmul@prod+1)^0,f,c
 15085  0015D0  2225               	addwfc	(___flmul@prod+2)^0,f,c
 15086  0015D2  2226               	addwfc	(___flmul@prod+3)^0,f,c
 15087  0015D4  A026               	btfss	(___flmul@prod+3)^0,0,c
 15088  0015D6  D01F               	goto	l10519
 15089  0015D8  0060  F08C  F018   	movff	___flmul@prod,??___flmul
 15090  0015DE  0060  F090  F019   	movff	___flmul@prod+1,??___flmul+1
 15091  0015E4  0060  F094  F01A   	movff	___flmul@prod+2,??___flmul+2
 15092  0015EA  0060  F098  F01B   	movff	___flmul@prod+3,??___flmul+3
 15093  0015F0  341B               	rlcf	(??___flmul+3)^0,w,c
 15094  0015F2  321B               	rrcf	(??___flmul+3)^0,f,c
 15095  0015F4  321A               	rrcf	(??___flmul+2)^0,f,c
 15096  0015F6  3219               	rrcf	(??___flmul+1)^0,f,c
 15097  0015F8  3218               	rrcf	??___flmul^0,f,c
 15098  0015FA  0060  F060  F023   	movff	??___flmul,___flmul@prod
 15099  001600  0060  F064  F024   	movff	??___flmul+1,___flmul@prod+1
 15100  001606  0060  F068  F025   	movff	??___flmul+2,___flmul@prod+2
 15101  00160C  0060  F06C  F026   	movff	??___flmul+3,___flmul@prod+3
 15102  001612  4A27               	infsnz	___flmul@temp^0,f,c
 15103  001614  2A28               	incf	(___flmul@temp+1)^0,f,c
 15104  001616                     l10519:
 15105  001616  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 15106  001618  D00D               	goto	l10523
 15107  00161A  5028               	movf	(___flmul@temp+1)^0,w,c
 15108  00161C  E103               	bnz	u8760
 15109  00161E  2827               	incf	___flmul@temp^0,w,c
 15110  001620  A0D8               	btfss	status,0,c
 15111  001622  D008               	goto	l10523
 15112  001624                     u8760:
 15113  001624  0E00               	movlw	0
 15114  001626  6E23               	movwf	___flmul@prod^0,c
 15115  001628  0E00               	movlw	0
 15116  00162A  6E24               	movwf	(___flmul@prod+1)^0,c
 15117  00162C  0E80               	movlw	128
 15118  00162E  6E25               	movwf	(___flmul@prod+2)^0,c
 15119  001630  0E7F               	movlw	127
 15120  001632  D021               	goto	L8
 15121  001634                     l10523:
 15122  001634  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 15123  001636  D005               	goto	u8770
 15124  001638  5028               	movf	(___flmul@temp+1)^0,w,c
 15125  00163A  E10E               	bnz	l3831
 15126  00163C  0427               	decf	___flmul@temp^0,w,c
 15127  00163E  B0D8               	btfsc	status,0,c
 15128  001640  D00B               	goto	l3831
 15129  001642                     u8770:
 15130  001642  0E00               	movlw	0
 15131  001644  6E23               	movwf	___flmul@prod^0,c
 15132  001646  0E00               	movlw	0
 15133  001648  6E24               	movwf	(___flmul@prod+1)^0,c
 15134  00164A  0E00               	movlw	0
 15135  00164C  6E25               	movwf	(___flmul@prod+2)^0,c
 15136  00164E  0E00               	movlw	0
 15137  001650  6E26               	movwf	(___flmul@prod+3)^0,c
 15138  001652  0E00               	movlw	0
 15139  001654  6E1C               	movwf	___flmul@sign^0,c
 15140  001656  D010               	goto	l10535
 15141  001658                     l3831:
 15142  001658  0060  F09C  F022   	movff	___flmul@temp,___flmul@bexp
 15143  00165E  0EFF               	movlw	255
 15144  001660  1623               	andwf	___flmul@prod^0,f,c
 15145  001662  0EFF               	movlw	255
 15146  001664  1624               	andwf	(___flmul@prod+1)^0,f,c
 15147  001666  0E7F               	movlw	127
 15148  001668  1625               	andwf	(___flmul@prod+2)^0,f,c
 15149  00166A  0E00               	movlw	0
 15150  00166C  1626               	andwf	(___flmul@prod+3)^0,f,c
 15151  00166E  B022               	btfsc	___flmul@bexp^0,0,c
 15152  001670  8E25               	bsf	(___flmul@prod+2)^0,7,c
 15153  001672  90D8               	bcf	status,0,c
 15154  001674  3022               	rrcf	___flmul@bexp^0,w,c
 15155  001676                     L8:
 15156  001676  6E26               	movwf	(___flmul@prod+3)^0,c
 15157  001678                     l10535:
 15158  001678  501C               	movf	___flmul@sign^0,w,c
 15159  00167A  1226               	iorwf	(___flmul@prod+3)^0,f,c
 15160  00167C  0060  F08C  F010   	movff	___flmul@prod,?___flmul
 15161  001682  0060  F090  F011   	movff	___flmul@prod+1,?___flmul+1
 15162  001688  0060  F094  F012   	movff	___flmul@prod+2,?___flmul+2
 15163  00168E  0060  F098  F013   	movff	___flmul@prod+3,?___flmul+3
 15164  001694  0012               	return		;funcret
 15165  001696                     __end_of___flmul:
 15166                           	opt callstack 0
 15167                           
 15168 ;; *************** function ___fladd *****************
 15169 ;; Defined at:
 15170 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;  b               4   40[COMRAM] unsigned char 
 15173 ;;  a               4   44[COMRAM] unsigned char 
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;  grs             1   55[COMRAM] unsigned char 
 15176 ;;  bexp            1   54[COMRAM] unsigned char 
 15177 ;;  aexp            1   53[COMRAM] unsigned char 
 15178 ;;  signs           1   52[COMRAM] unsigned char 
 15179 ;; Return value:  Size  Location     Type
 15180 ;;                  4   40[COMRAM] unsigned char 
 15181 ;; Registers used:
 15182 ;;		wreg, status,2, status,0
 15183 ;; Tracked objects:
 15184 ;;		On entry : 0/1
 15185 ;;		On exit  : 0/0
 15186 ;;		Unchanged: 0/0
 15187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15188 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15189 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15191 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15192 ;;Total ram usage:       16 bytes
 15193 ;; Hardware stack levels used:    1
 15194 ;; Hardware stack levels required when called:    7
 15195 ;; This function calls:
 15196 ;;		Nothing
 15197 ;; This function is called by:
 15198 ;;		_get_lqi
 15199 ;; This function uses a non-reentrant model
 15200 ;;
 15201                           
 15202                           	psect	text95
 15203  001A04                     __ptext95:
 15204                           	opt callstack 0
 15205  001A04                     ___fladd:
 15206                           	opt callstack 18
 15207                           
 15208                           ;incstack = 0
 15209  001A04  502C               	movf	(___fladd@b+3)^0,w,c
 15210  001A06  0B80               	andlw	128
 15211  001A08  6E35               	movwf	___fladd@signs^0,c
 15212  001A0A  502C               	movf	(___fladd@b+3)^0,w,c
 15213  001A0C  242C               	addwf	(___fladd@b+3)^0,w,c
 15214  001A0E  6E37               	movwf	___fladd@bexp^0,c
 15215  001A10  BE2B               	btfsc	(___fladd@b+2)^0,7,c
 15216  001A12  8037               	bsf	___fladd@bexp^0,0,c
 15217  001A14  5037               	movf	___fladd@bexp^0,w,c
 15218  001A16  B4D8               	btfsc	status,2,c
 15219  001A18  D00D               	goto	l10225
 15220  001A1A  2837               	incf	___fladd@bexp^0,w,c
 15221  001A1C  A4D8               	btfss	status,2,c
 15222  001A1E  D008               	goto	l10221
 15223  001A20  0E00               	movlw	0
 15224  001A22  6E29               	movwf	___fladd@b^0,c
 15225  001A24  0E00               	movlw	0
 15226  001A26  6E2A               	movwf	(___fladd@b+1)^0,c
 15227  001A28  0E00               	movlw	0
 15228  001A2A  6E2B               	movwf	(___fladd@b+2)^0,c
 15229  001A2C  0E00               	movlw	0
 15230  001A2E  6E2C               	movwf	(___fladd@b+3)^0,c
 15231  001A30                     l10221:
 15232  001A30  8E2B               	bsf	(___fladd@b+2)^0,7,c
 15233  001A32  D006               	goto	L9
 15234  001A34                     l10225:
 15235  001A34  0E00               	movlw	0
 15236  001A36  6E29               	movwf	___fladd@b^0,c
 15237  001A38  0E00               	movlw	0
 15238  001A3A  6E2A               	movwf	(___fladd@b+1)^0,c
 15239  001A3C  0E00               	movlw	0
 15240  001A3E  6E2B               	movwf	(___fladd@b+2)^0,c
 15241  001A40                     L9:
 15242  001A40  0E00               	movlw	0
 15243  001A42  6E2C               	movwf	(___fladd@b+3)^0,c
 15244  001A44  5030               	movf	(___fladd@a+3)^0,w,c
 15245  001A46  0B80               	andlw	128
 15246  001A48  6E36               	movwf	___fladd@aexp^0,c
 15247  001A4A  5035               	movf	___fladd@signs^0,w,c
 15248  001A4C  1836               	xorwf	___fladd@aexp^0,w,c
 15249  001A4E  A4D8               	btfss	status,2,c
 15250  001A50  8C35               	bsf	___fladd@signs^0,6,c
 15251  001A52  5030               	movf	(___fladd@a+3)^0,w,c
 15252  001A54  2430               	addwf	(___fladd@a+3)^0,w,c
 15253  001A56  6E36               	movwf	___fladd@aexp^0,c
 15254  001A58  BE2F               	btfsc	(___fladd@a+2)^0,7,c
 15255  001A5A  8036               	bsf	___fladd@aexp^0,0,c
 15256  001A5C  5036               	movf	___fladd@aexp^0,w,c
 15257  001A5E  B4D8               	btfsc	status,2,c
 15258  001A60  D00D               	goto	l10249
 15259  001A62  2836               	incf	___fladd@aexp^0,w,c
 15260  001A64  A4D8               	btfss	status,2,c
 15261  001A66  D008               	goto	l10245
 15262  001A68  0E00               	movlw	0
 15263  001A6A  6E2D               	movwf	___fladd@a^0,c
 15264  001A6C  0E00               	movlw	0
 15265  001A6E  6E2E               	movwf	(___fladd@a+1)^0,c
 15266  001A70  0E00               	movlw	0
 15267  001A72  6E2F               	movwf	(___fladd@a+2)^0,c
 15268  001A74  0E00               	movlw	0
 15269  001A76  6E30               	movwf	(___fladd@a+3)^0,c
 15270  001A78                     l10245:
 15271  001A78  8E2F               	bsf	(___fladd@a+2)^0,7,c
 15272  001A7A  D006               	goto	L10
 15273  001A7C                     l10249:
 15274  001A7C  0E00               	movlw	0
 15275  001A7E  6E2D               	movwf	___fladd@a^0,c
 15276  001A80  0E00               	movlw	0
 15277  001A82  6E2E               	movwf	(___fladd@a+1)^0,c
 15278  001A84  0E00               	movlw	0
 15279  001A86  6E2F               	movwf	(___fladd@a+2)^0,c
 15280  001A88                     L10:
 15281  001A88  0E00               	movlw	0
 15282  001A8A  6E30               	movwf	(___fladd@a+3)^0,c
 15283  001A8C  5037               	movf	___fladd@bexp^0,w,c
 15284  001A8E  5C36               	subwf	___fladd@aexp^0,w,c
 15285  001A90  B0D8               	btfsc	status,0,c
 15286  001A92  D031               	goto	l10287
 15287  001A94  AC35               	btfss	___fladd@signs^0,6,c
 15288  001A96  D002               	goto	l10257
 15289  001A98  0E80               	movlw	128
 15290  001A9A  1A35               	xorwf	___fladd@signs^0,f,c
 15291  001A9C                     l10257:
 15292  001A9C  0060  F0DC  F038   	movff	___fladd@bexp,___fladd@grs
 15293  001AA2  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 15294  001AA8  0060  F0E0  F036   	movff	___fladd@grs,___fladd@aexp
 15295  001AAE  0060  F0A4  F038   	movff	___fladd@b,___fladd@grs
 15296  001AB4  0060  F0B4  F029   	movff	___fladd@a,___fladd@b
 15297  001ABA  0060  F0E0  F02D   	movff	___fladd@grs,___fladd@a
 15298  001AC0  0060  F0A8  F038   	movff	___fladd@b+1,___fladd@grs
 15299  001AC6  0060  F0B8  F02A   	movff	___fladd@a+1,___fladd@b+1
 15300  001ACC  0060  F0E0  F02E   	movff	___fladd@grs,___fladd@a+1
 15301  001AD2  0060  F0AC  F038   	movff	___fladd@b+2,___fladd@grs
 15302  001AD8  0060  F0BC  F02B   	movff	___fladd@a+2,___fladd@b+2
 15303  001ADE  0060  F0E0  F02F   	movff	___fladd@grs,___fladd@a+2
 15304  001AE4  0060  F0B0  F038   	movff	___fladd@b+3,___fladd@grs
 15305  001AEA  0060  F0C0  F02C   	movff	___fladd@a+3,___fladd@b+3
 15306  001AF0  0060  F0E0  F030   	movff	___fladd@grs,___fladd@a+3
 15307  001AF6                     l10287:
 15308  001AF6  0E00               	movlw	0
 15309  001AF8  6E38               	movwf	___fladd@grs^0,c
 15310  001AFA  5037               	movf	___fladd@bexp^0,w,c
 15311  001AFC  0060  F0D8  F031   	movff	___fladd@aexp,??___fladd
 15312  001B02  6A32               	clrf	(??___fladd+1)^0,c
 15313  001B04  5E31               	subwf	??___fladd^0,f,c
 15314  001B06  0E00               	movlw	0
 15315  001B08  5A32               	subwfb	(??___fladd+1)^0,f,c
 15316  001B0A  BE32               	btfsc	(??___fladd+1)^0,7,c
 15317  001B0C  D02D               	goto	l3729
 15318  001B0E  5032               	movf	(??___fladd+1)^0,w,c
 15319  001B10  E104               	bnz	u8310
 15320  001B12  0E1A               	movlw	26
 15321  001B14  5C31               	subwf	??___fladd^0,w,c
 15322  001B16  A0D8               	btfss	status,0,c
 15323  001B18  D027               	goto	l3729
 15324  001B1A                     u8310:
 15325  001B1A  5029               	movf	___fladd@b^0,w,c
 15326  001B1C  102A               	iorwf	(___fladd@b+1)^0,w,c
 15327  001B1E  102B               	iorwf	(___fladd@b+2)^0,w,c
 15328  001B20  102C               	iorwf	(___fladd@b+3)^0,w,c
 15329  001B22  B4D8               	btfsc	status,2,c
 15330  001B24  D002               	goto	u8320
 15331  001B26  0E01               	movlw	1
 15332  001B28  D001               	goto	u8330
 15333  001B2A                     u8320:
 15334  001B2A  0E00               	movlw	0
 15335  001B2C                     u8330:
 15336  001B2C  6E38               	movwf	___fladd@grs^0,c
 15337  001B2E  0E00               	movlw	0
 15338  001B30  6E29               	movwf	___fladd@b^0,c
 15339  001B32  0E00               	movlw	0
 15340  001B34  6E2A               	movwf	(___fladd@b+1)^0,c
 15341  001B36  0E00               	movlw	0
 15342  001B38  6E2B               	movwf	(___fladd@b+2)^0,c
 15343  001B3A  0E00               	movlw	0
 15344  001B3C  6E2C               	movwf	(___fladd@b+3)^0,c
 15345  001B3E  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 15346  001B44  D015               	goto	u8360
 15347  001B46                     l3730:
 15348  001B46  A038               	btfss	___fladd@grs^0,0,c
 15349  001B48  D005               	goto	l10299
 15350  001B4A  90D8               	bcf	status,0,c
 15351  001B4C  3038               	rrcf	___fladd@grs^0,w,c
 15352  001B4E  0901               	iorlw	1
 15353  001B50  6E38               	movwf	___fladd@grs^0,c
 15354  001B52  D002               	goto	l10301
 15355  001B54                     l10299:
 15356  001B54  90D8               	bcf	status,0,c
 15357  001B56  3238               	rrcf	___fladd@grs^0,f,c
 15358  001B58                     l10301:
 15359  001B58  B029               	btfsc	___fladd@b^0,0,c
 15360  001B5A  8E38               	bsf	___fladd@grs^0,7,c
 15361  001B5C  342C               	rlcf	(___fladd@b+3)^0,w,c
 15362  001B5E  322C               	rrcf	(___fladd@b+3)^0,f,c
 15363  001B60  322B               	rrcf	(___fladd@b+2)^0,f,c
 15364  001B62  322A               	rrcf	(___fladd@b+1)^0,f,c
 15365  001B64  3229               	rrcf	___fladd@b^0,f,c
 15366  001B66  2A37               	incf	___fladd@bexp^0,f,c
 15367  001B68                     l3729:
 15368  001B68  5036               	movf	___fladd@aexp^0,w,c
 15369  001B6A  5C37               	subwf	___fladd@bexp^0,w,c
 15370  001B6C  A0D8               	btfss	status,0,c
 15371  001B6E  D7EB               	goto	l3730
 15372  001B70                     u8360:
 15373  001B70  BC35               	btfsc	___fladd@signs^0,6,c
 15374  001B72  D028               	goto	l10333
 15375  001B74  5037               	movf	___fladd@bexp^0,w,c
 15376  001B76  A4D8               	btfss	status,2,c
 15377  001B78  D009               	goto	l10315
 15378  001B7A  0E00               	movlw	0
 15379  001B7C  6E29               	movwf	?___fladd^0,c
 15380  001B7E  0E00               	movlw	0
 15381  001B80  6E2A               	movwf	(?___fladd+1)^0,c
 15382  001B82  0E00               	movlw	0
 15383  001B84  6E2B               	movwf	(?___fladd+2)^0,c
 15384  001B86  0E00               	movlw	0
 15385  001B88  6E2C               	movwf	(?___fladd+3)^0,c
 15386  001B8A  0012               	return	
 15387  001B8C                     l10315:
 15388  001B8C  502D               	movf	___fladd@a^0,w,c
 15389  001B8E  2629               	addwf	___fladd@b^0,f,c
 15390  001B90  502E               	movf	(___fladd@a+1)^0,w,c
 15391  001B92  222A               	addwfc	(___fladd@b+1)^0,f,c
 15392  001B94  502F               	movf	(___fladd@a+2)^0,w,c
 15393  001B96  222B               	addwfc	(___fladd@b+2)^0,f,c
 15394  001B98  5030               	movf	(___fladd@a+3)^0,w,c
 15395  001B9A  222C               	addwfc	(___fladd@b+3)^0,f,c
 15396  001B9C  A02C               	btfss	(___fladd@b+3)^0,0,c
 15397  001B9E  D071               	goto	u8490
 15398  001BA0  A038               	btfss	___fladd@grs^0,0,c
 15399  001BA2  D005               	goto	l10323
 15400  001BA4  90D8               	bcf	status,0,c
 15401  001BA6  3038               	rrcf	___fladd@grs^0,w,c
 15402  001BA8  0901               	iorlw	1
 15403  001BAA  6E38               	movwf	___fladd@grs^0,c
 15404  001BAC  D002               	goto	l10325
 15405  001BAE                     l10323:
 15406  001BAE  90D8               	bcf	status,0,c
 15407  001BB0  3238               	rrcf	___fladd@grs^0,f,c
 15408  001BB2                     l10325:
 15409  001BB2  B029               	btfsc	___fladd@b^0,0,c
 15410  001BB4  8E38               	bsf	___fladd@grs^0,7,c
 15411  001BB6  342C               	rlcf	(___fladd@b+3)^0,w,c
 15412  001BB8  322C               	rrcf	(___fladd@b+3)^0,f,c
 15413  001BBA  322B               	rrcf	(___fladd@b+2)^0,f,c
 15414  001BBC  322A               	rrcf	(___fladd@b+1)^0,f,c
 15415  001BBE  3229               	rrcf	___fladd@b^0,f,c
 15416  001BC0  2A37               	incf	___fladd@bexp^0,f,c
 15417  001BC2  D05F               	goto	u8490
 15418  001BC4                     l10333:
 15419  001BC4  502D               	movf	___fladd@a^0,w,c
 15420  001BC6  5C29               	subwf	___fladd@b^0,w,c
 15421  001BC8  502E               	movf	(___fladd@a+1)^0,w,c
 15422  001BCA  582A               	subwfb	(___fladd@b+1)^0,w,c
 15423  001BCC  502F               	movf	(___fladd@a+2)^0,w,c
 15424  001BCE  582B               	subwfb	(___fladd@b+2)^0,w,c
 15425  001BD0  502C               	movf	(___fladd@b+3)^0,w,c
 15426  001BD2  0A80               	xorlw	128
 15427  001BD4  6E31               	movwf	??___fladd^0,c
 15428  001BD6  5030               	movf	(___fladd@a+3)^0,w,c
 15429  001BD8  0A80               	xorlw	128
 15430  001BDA  5831               	subwfb	??___fladd^0,w,c
 15431  001BDC  B0D8               	btfsc	status,0,c
 15432  001BDE  D025               	goto	l10343
 15433  001BE0  5029               	movf	___fladd@b^0,w,c
 15434  001BE2  5C2D               	subwf	___fladd@a^0,w,c
 15435  001BE4  6E31               	movwf	??___fladd^0,c
 15436  001BE6  502A               	movf	(___fladd@b+1)^0,w,c
 15437  001BE8  582E               	subwfb	(___fladd@a+1)^0,w,c
 15438  001BEA  6E32               	movwf	(??___fladd+1)^0,c
 15439  001BEC  502B               	movf	(___fladd@b+2)^0,w,c
 15440  001BEE  582F               	subwfb	(___fladd@a+2)^0,w,c
 15441  001BF0  6E33               	movwf	(??___fladd+2)^0,c
 15442  001BF2  502C               	movf	(___fladd@b+3)^0,w,c
 15443  001BF4  5830               	subwfb	(___fladd@a+3)^0,w,c
 15444  001BF6  6E34               	movwf	(??___fladd+3)^0,c
 15445  001BF8  0EFF               	movlw	255
 15446  001BFA  2431               	addwf	??___fladd^0,w,c
 15447  001BFC  6E29               	movwf	___fladd@b^0,c
 15448  001BFE  0EFF               	movlw	255
 15449  001C00  2032               	addwfc	(??___fladd+1)^0,w,c
 15450  001C02  6E2A               	movwf	(___fladd@b+1)^0,c
 15451  001C04  0EFF               	movlw	255
 15452  001C06  2033               	addwfc	(??___fladd+2)^0,w,c
 15453  001C08  6E2B               	movwf	(___fladd@b+2)^0,c
 15454  001C0A  0EFF               	movlw	255
 15455  001C0C  2034               	addwfc	(??___fladd+3)^0,w,c
 15456  001C0E  6E2C               	movwf	(___fladd@b+3)^0,c
 15457  001C10  0E80               	movlw	128
 15458  001C12  1A35               	xorwf	___fladd@signs^0,f,c
 15459  001C14  6C38               	negf	___fladd@grs^0,c
 15460  001C16  5038               	movf	___fladd@grs^0,w,c
 15461  001C18  A4D8               	btfss	status,2,c
 15462  001C1A  D00F               	goto	l3745
 15463  001C1C  0E01               	movlw	1
 15464  001C1E  2629               	addwf	___fladd@b^0,f,c
 15465  001C20  0E00               	movlw	0
 15466  001C22  222A               	addwfc	(___fladd@b+1)^0,f,c
 15467  001C24  222B               	addwfc	(___fladd@b+2)^0,f,c
 15468  001C26  222C               	addwfc	(___fladd@b+3)^0,f,c
 15469  001C28  D008               	goto	l3745
 15470  001C2A                     l10343:
 15471  001C2A  502D               	movf	___fladd@a^0,w,c
 15472  001C2C  5E29               	subwf	___fladd@b^0,f,c
 15473  001C2E  502E               	movf	(___fladd@a+1)^0,w,c
 15474  001C30  5A2A               	subwfb	(___fladd@b+1)^0,f,c
 15475  001C32  502F               	movf	(___fladd@a+2)^0,w,c
 15476  001C34  5A2B               	subwfb	(___fladd@b+2)^0,f,c
 15477  001C36  5030               	movf	(___fladd@a+3)^0,w,c
 15478  001C38  5A2C               	subwfb	(___fladd@b+3)^0,f,c
 15479  001C3A                     l3745:
 15480  001C3A  5029               	movf	___fladd@b^0,w,c
 15481  001C3C  102A               	iorwf	(___fladd@b+1)^0,w,c
 15482  001C3E  102B               	iorwf	(___fladd@b+2)^0,w,c
 15483  001C40  102C               	iorwf	(___fladd@b+3)^0,w,c
 15484  001C42  A4D8               	btfss	status,2,c
 15485  001C44  D01C               	goto	l10367
 15486  001C46  5038               	movf	___fladd@grs^0,w,c
 15487  001C48  A4D8               	btfss	status,2,c
 15488  001C4A  D019               	goto	l10367
 15489  001C4C  0E00               	movlw	0
 15490  001C4E  6E29               	movwf	?___fladd^0,c
 15491  001C50  0E00               	movlw	0
 15492  001C52  6E2A               	movwf	(?___fladd+1)^0,c
 15493  001C54  0E00               	movlw	0
 15494  001C56  6E2B               	movwf	(?___fladd+2)^0,c
 15495  001C58  0E00               	movlw	0
 15496  001C5A  6E2C               	movwf	(?___fladd+3)^0,c
 15497  001C5C  0012               	return	
 15498  001C5E                     l10351:
 15499  001C5E  90D8               	bcf	status,0,c
 15500  001C60  3629               	rlcf	___fladd@b^0,f,c
 15501  001C62  362A               	rlcf	(___fladd@b+1)^0,f,c
 15502  001C64  362B               	rlcf	(___fladd@b+2)^0,f,c
 15503  001C66  362C               	rlcf	(___fladd@b+3)^0,f,c
 15504  001C68  BE38               	btfsc	___fladd@grs^0,7,c
 15505  001C6A  8029               	bsf	___fladd@b^0,0,c
 15506  001C6C  A038               	btfss	___fladd@grs^0,0,c
 15507  001C6E  D002               	goto	l10361
 15508  001C70  80D8               	bsf	status,0,c
 15509  001C72  D001               	goto	L11
 15510  001C74                     l10361:
 15511  001C74  90D8               	bcf	status,0,c
 15512  001C76                     L11:
 15513  001C76  3638               	rlcf	___fladd@grs^0,f,c
 15514  001C78  5037               	movf	___fladd@bexp^0,w,c
 15515  001C7A  A4D8               	btfss	status,2,c
 15516  001C7C  0637               	decf	___fladd@bexp^0,f,c
 15517  001C7E                     l10367:
 15518  001C7E  AE2B               	btfss	(___fladd@b+2)^0,7,c
 15519  001C80  D7EE               	goto	l10351
 15520  001C82                     u8490:
 15521  001C82  0E00               	movlw	0
 15522  001C84  6E36               	movwf	___fladd@aexp^0,c
 15523  001C86  AE38               	btfss	___fladd@grs^0,7,c
 15524  001C88  D00C               	goto	l3754
 15525  001C8A  0060  F0E0  F031   	movff	___fladd@grs,??___fladd
 15526  001C90  0E7F               	movlw	127
 15527  001C92  1631               	andwf	??___fladd^0,f,c
 15528  001C94  B4D8               	btfsc	status,2,c
 15529  001C96  D003               	goto	l3755
 15530  001C98                     u8510:
 15531  001C98  0E01               	movlw	1
 15532  001C9A  6E36               	movwf	___fladd@aexp^0,c
 15533  001C9C  D002               	goto	l3754
 15534  001C9E                     l3755:
 15535  001C9E  B029               	btfsc	___fladd@b^0,0,c
 15536  001CA0  D7FB               	goto	u8510
 15537  001CA2                     l3754:
 15538  001CA2  5036               	movf	___fladd@aexp^0,w,c
 15539  001CA4  B4D8               	btfsc	status,2,c
 15540  001CA6  D028               	goto	l10387
 15541  001CA8  0E01               	movlw	1
 15542  001CAA  2629               	addwf	___fladd@b^0,f,c
 15543  001CAC  0E00               	movlw	0
 15544  001CAE  222A               	addwfc	(___fladd@b+1)^0,f,c
 15545  001CB0  222B               	addwfc	(___fladd@b+2)^0,f,c
 15546  001CB2  222C               	addwfc	(___fladd@b+3)^0,f,c
 15547  001CB4  A02C               	btfss	(___fladd@b+3)^0,0,c
 15548  001CB6  D020               	goto	l10387
 15549  001CB8  0060  F0A4  F031   	movff	___fladd@b,??___fladd
 15550  001CBE  0060  F0A8  F032   	movff	___fladd@b+1,??___fladd+1
 15551  001CC4  0060  F0AC  F033   	movff	___fladd@b+2,??___fladd+2
 15552  001CCA  0060  F0B0  F034   	movff	___fladd@b+3,??___fladd+3
 15553  001CD0  3434               	rlcf	(??___fladd+3)^0,w,c
 15554  001CD2  3234               	rrcf	(??___fladd+3)^0,f,c
 15555  001CD4  3233               	rrcf	(??___fladd+2)^0,f,c
 15556  001CD6  3232               	rrcf	(??___fladd+1)^0,f,c
 15557  001CD8  3231               	rrcf	??___fladd^0,f,c
 15558  001CDA  0060  F0C4  F029   	movff	??___fladd,___fladd@b
 15559  001CE0  0060  F0C8  F02A   	movff	??___fladd+1,___fladd@b+1
 15560  001CE6  0060  F0CC  F02B   	movff	??___fladd+2,___fladd@b+2
 15561  001CEC  0060  F0D0  F02C   	movff	??___fladd+3,___fladd@b+3
 15562  001CF2  2837               	incf	___fladd@bexp^0,w,c
 15563  001CF4  A4D8               	btfss	status,2,c
 15564  001CF6  2A37               	incf	___fladd@bexp^0,f,c
 15565  001CF8                     l10387:
 15566  001CF8  2837               	incf	___fladd@bexp^0,w,c
 15567  001CFA  B4D8               	btfsc	status,2,c
 15568  001CFC  D003               	goto	u8570
 15569  001CFE  5037               	movf	___fladd@bexp^0,w,c
 15570  001D00  A4D8               	btfss	status,2,c
 15571  001D02  D00D               	goto	l10395
 15572  001D04                     u8570:
 15573  001D04  0E00               	movlw	0
 15574  001D06  6E29               	movwf	___fladd@b^0,c
 15575  001D08  0E00               	movlw	0
 15576  001D0A  6E2A               	movwf	(___fladd@b+1)^0,c
 15577  001D0C  0E00               	movlw	0
 15578  001D0E  6E2B               	movwf	(___fladd@b+2)^0,c
 15579  001D10  0E00               	movlw	0
 15580  001D12  6E2C               	movwf	(___fladd@b+3)^0,c
 15581  001D14  5037               	movf	___fladd@bexp^0,w,c
 15582  001D16  A4D8               	btfss	status,2,c
 15583  001D18  D002               	goto	l10395
 15584  001D1A  0E00               	movlw	0
 15585  001D1C  6E35               	movwf	___fladd@signs^0,c
 15586  001D1E                     l10395:
 15587  001D1E  A037               	btfss	___fladd@bexp^0,0,c
 15588  001D20  D002               	goto	l10399
 15589  001D22  8E2B               	bsf	(___fladd@b+2)^0,7,c
 15590  001D24  D001               	goto	l10401
 15591  001D26                     l10399:
 15592  001D26  9E2B               	bcf	(___fladd@b+2)^0,7,c
 15593  001D28                     l10401:
 15594  001D28  90D8               	bcf	status,0,c
 15595  001D2A  3037               	rrcf	___fladd@bexp^0,w,c
 15596  001D2C  6E2C               	movwf	(___fladd@b+3)^0,c
 15597  001D2E  BE35               	btfsc	___fladd@signs^0,7,c
 15598  001D30  8E2C               	bsf	(___fladd@b+3)^0,7,c
 15599  001D32  0060  F0A4  F029   	movff	___fladd@b,?___fladd
 15600  001D38  0060  F0A8  F02A   	movff	___fladd@b+1,?___fladd+1
 15601  001D3E  0060  F0AC  F02B   	movff	___fladd@b+2,?___fladd+2
 15602  001D44  0060  F0B0  F02C   	movff	___fladd@b+3,?___fladd+3
 15603  001D4A  0012               	return		;funcret
 15604  001D4C                     __end_of___fladd:
 15605                           	opt callstack 0
 15606                           
 15607 ;; *************** function _PHY_DataInd *****************
 15608 ;; Defined at:
 15609 ;;		line 116 in file "../nwk/nwk_src/nwkRx.c"
 15610 ;; Parameters:    Size  Location     Type
 15611 ;;  ind             1   18[COMRAM] PTR struct PHY_DataInd_t
 15612 ;;		 -> DIO0_Receive_ISR@ind(5), 
 15613 ;; Auto vars:     Size  Location     Type
 15614 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 15615 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15616 ;; Return value:  Size  Location     Type
 15617 ;;                  1    wreg      void 
 15618 ;; Registers used:
 15619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15620 ;; Tracked objects:
 15621 ;;		On entry : 0/1
 15622 ;;		On exit  : 0/0
 15623 ;;		Unchanged: 0/0
 15624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15627 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15628 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15629 ;;Total ram usage:        6 bytes
 15630 ;; Hardware stack levels used:    1
 15631 ;; Hardware stack levels required when called:    9
 15632 ;; This function calls:
 15633 ;;		_memcpy
 15634 ;;		_nwkFrameAlloc
 15635 ;; This function is called by:
 15636 ;;		_DIO0_Receive_ISR
 15637 ;; This function uses a non-reentrant model
 15638 ;;
 15639                           
 15640                           	psect	text96
 15641  00497A                     __ptext96:
 15642                           	opt callstack 0
 15643  00497A                     _PHY_DataInd:
 15644                           	opt callstack 17
 15645                           
 15646                           ;../nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);../nwk/nwk_src/nwkRx.
      +                          c: 117: {;../nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRx.c: 120:
      +                             if (0x88 != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 15647                           
 15648                           ;incstack = 0
 15649  00497A  5013               	movf	PHY_DataInd@ind^0,w,c
 15650  00497C  6ED9               	movwf	fsr2l,c
 15651  00497E  6ADA               	clrf	fsr2h,c
 15652  004980  EE10 F001          	lfsr	1,1
 15653  004984  50DE               	movf	postinc2,w,c
 15654  004986  26E1               	addwf	fsr1l,f,c
 15655  004988  50DD               	movf	postdec2,w,c
 15656  00498A  22E2               	addwfc	fsr1h,f,c
 15657  00498C  0E88               	movlw	136
 15658  00498E  18E6               	xorwf	postinc1,w,c
 15659  004990  A4D8               	btfss	status,2,c
 15660  004992  0012               	return	
 15661  004994  5013               	movf	PHY_DataInd@ind^0,w,c
 15662  004996  6ED9               	movwf	fsr2l,c
 15663  004998  6ADA               	clrf	fsr2h,c
 15664  00499A  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 15665  0049A0  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 15666  0049A6  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 15667  0049AC  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 15668  0049B2  0E61               	movlw	97
 15669  0049B4  18DE               	xorwf	postinc2,w,c
 15670  0049B6  B4D8               	btfsc	status,2,c
 15671  0049B8  D013               	goto	u14980
 15672  0049BA  5013               	movf	PHY_DataInd@ind^0,w,c
 15673  0049BC  6ED9               	movwf	fsr2l,c
 15674  0049BE  6ADA               	clrf	fsr2h,c
 15675  0049C0  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 15676  0049C6  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 15677  0049CC  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 15678  0049D2  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 15679  0049D8  0E41               	movlw	65
 15680  0049DA  18DE               	xorwf	postinc2,w,c
 15681  0049DC  A4D8               	btfss	status,2,c
 15682  0049DE  0012               	return	
 15683  0049E0                     u14980:
 15684  0049E0  5013               	movf	PHY_DataInd@ind^0,w,c
 15685  0049E2  6ED9               	movwf	fsr2l,c
 15686  0049E4  6ADA               	clrf	fsr2h,c
 15687  0049E6  0E02               	movlw	2
 15688  0049E8  26D9               	addwf	fsr2l,f,c
 15689  0049EA  0E10               	movlw	16
 15690  0049EC  60DF               	cpfslt	indf2,c
 15691  0049EE  D001               	goto	l15281
 15692  0049F0  0012               	return	
 15693  0049F2                     l15281:
 15694                           
 15695                           ;../nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
 15696  0049F2  EC50  F033         	call	_nwkFrameAlloc	;wreg free
 15697  0049F6  0060  F038  F017   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 15698  0049FC  0060  F03C  F018   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 15699  004A02  5017               	movf	PHY_DataInd@frame^0,w,c
 15700  004A04  1018               	iorwf	(PHY_DataInd@frame+1)^0,w,c
 15701  004A06  B4D8               	btfsc	status,2,c
 15702  004A08  0012               	return	
 15703                           
 15704                           ;../nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 15705  004A0A  0060  F05F  FFD9   	movff	PHY_DataInd@frame,fsr2l
 15706  004A10  0060  F063  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 15707  004A16  0E20               	movlw	32
 15708  004A18  6EDF               	movwf	indf2,c
 15709                           
 15710                           ;../nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 15711  004A1A  5013               	movf	PHY_DataInd@ind^0,w,c
 15712  004A1C  6ED9               	movwf	fsr2l,c
 15713  004A1E  6ADA               	clrf	fsr2h,c
 15714  004A20  0E02               	movlw	2
 15715  004A22  26D9               	addwf	fsr2l,f,c
 15716  004A24  EE10 F001          	lfsr	1,1
 15717  004A28  5017               	movf	PHY_DataInd@frame^0,w,c
 15718  004A2A  26E1               	addwf	fsr1l,f,c
 15719  004A2C  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15720  004A2E  22E2               	addwfc	fsr1h,f,c
 15721  004A30  006F FF7F FFE7     	movff	indf2,indf1
 15722                           
 15723                           ;../nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 15724  004A36  5013               	movf	PHY_DataInd@ind^0,w,c
 15725  004A38  6ED9               	movwf	fsr2l,c
 15726  004A3A  6ADA               	clrf	fsr2h,c
 15727  004A3C  0E03               	movlw	3
 15728  004A3E  26D9               	addwf	fsr2l,f,c
 15729  004A40  EE10 F083          	lfsr	1,131
 15730  004A44  5017               	movf	PHY_DataInd@frame^0,w,c
 15731  004A46  26E1               	addwf	fsr1l,f,c
 15732  004A48  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15733  004A4A  22E2               	addwfc	fsr1h,f,c
 15734  004A4C  006F FF7F FFE7     	movff	indf2,indf1
 15735                           
 15736                           ;../nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 15737  004A52  5013               	movf	PHY_DataInd@ind^0,w,c
 15738  004A54  6ED9               	movwf	fsr2l,c
 15739  004A56  6ADA               	clrf	fsr2h,c
 15740  004A58  0E04               	movlw	4
 15741  004A5A  26D9               	addwf	fsr2l,f,c
 15742  004A5C  EE10 F084          	lfsr	1,132
 15743  004A60  5017               	movf	PHY_DataInd@frame^0,w,c
 15744  004A62  26E1               	addwf	fsr1l,f,c
 15745  004A64  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15746  004A66  22E2               	addwfc	fsr1h,f,c
 15747  004A68  006F FF7F FFE7     	movff	indf2,indf1
 15748                           
 15749                           ;../nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 15750  004A6E  0E02               	movlw	2
 15751  004A70  2417               	addwf	PHY_DataInd@frame^0,w,c
 15752  004A72  6E08               	movwf	memcpy@d1^0,c
 15753  004A74  0E00               	movlw	0
 15754  004A76  2018               	addwfc	(PHY_DataInd@frame+1)^0,w,c
 15755  004A78  6E09               	movwf	(memcpy@d1+1)^0,c
 15756  004A7A  5013               	movf	PHY_DataInd@ind^0,w,c
 15757  004A7C  6ED9               	movwf	fsr2l,c
 15758  004A7E  6ADA               	clrf	fsr2h,c
 15759  004A80  006F FF78  F00A    	movff	postinc2,memcpy@s1
 15760  004A86  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 15761  004A8C  5013               	movf	PHY_DataInd@ind^0,w,c
 15762  004A8E  6ED9               	movwf	fsr2l,c
 15763  004A90  6ADA               	clrf	fsr2h,c
 15764  004A92  0E02               	movlw	2
 15765  004A94  26D9               	addwf	fsr2l,f,c
 15766  004A96  50DF               	movf	indf2,w,c
 15767  004A98  6E14               	movwf	??_PHY_DataInd^0,c
 15768  004A9A  5014               	movf	??_PHY_DataInd^0,w,c
 15769  004A9C  6E0C               	movwf	memcpy@n^0,c
 15770  004A9E  6A0D               	clrf	(memcpy@n+1)^0,c
 15771  004AA0  EC50  F03A         	call	_memcpy	;wreg free
 15772  004AA4  0012               	return		;funcret
 15773  004AA6                     __end_of_PHY_DataInd:
 15774                           	opt callstack 0
 15775                           
 15776 ;; *************** function _NWK_TaskHandler *****************
 15777 ;; Defined at:
 15778 ;;		line 196 in file "../nwk/nwk_src/nwk.c"
 15779 ;; Parameters:    Size  Location     Type
 15780 ;;		None
 15781 ;; Auto vars:     Size  Location     Type
 15782 ;;		None
 15783 ;; Return value:  Size  Location     Type
 15784 ;;                  1    wreg      void 
 15785 ;; Registers used:
 15786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15787 ;; Tracked objects:
 15788 ;;		On entry : 3/1
 15789 ;;		On exit  : 0/0
 15790 ;;		Unchanged: 0/0
 15791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15796 ;;Total ram usage:        0 bytes
 15797 ;; Hardware stack levels used:    1
 15798 ;; Hardware stack levels required when called:   20
 15799 ;; This function calls:
 15800 ;;		_nwkDataReqTaskHandler
 15801 ;;		_nwkRxTaskHandler
 15802 ;;		_nwkTxTaskHandler
 15803 ;; This function is called by:
 15804 ;;		_SYS_TaskHandler
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808                           	psect	text97
 15809  008D82                     __ptext97:
 15810                           	opt callstack 0
 15811  008D82                     _NWK_TaskHandler:
 15812                           	opt callstack 9
 15813                           
 15814                           ;../nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 15815                           
 15816                           ;incstack = 0
 15817  008D82  ECAA  F033         	call	_nwkRxTaskHandler	;wreg free
 15818                           
 15819                           ; BSR set to: 2
 15820                           ;../nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 15821  008D86  EC73  F01A         	call	_nwkTxTaskHandler	;wreg free
 15822                           
 15823                           ;../nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 15824  008D8A  EC90  F039         	call	_nwkDataReqTaskHandler	;wreg free
 15825  008D8E  0012               	return		;funcret
 15826  008D90                     __end_of_NWK_TaskHandler:
 15827                           	opt callstack 0
 15828                           
 15829 ;; *************** function _nwkTxTaskHandler *****************
 15830 ;; Defined at:
 15831 ;;		line 297 in file "../nwk/nwk_src/nwkTx.c"
 15832 ;; Parameters:    Size  Location     Type
 15833 ;;		None
 15834 ;; Auto vars:     Size  Location     Type
 15835 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
 15836 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  1    wreg      void 
 15839 ;; Registers used:
 15840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15841 ;; Tracked objects:
 15842 ;;		On entry : 3F/2
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15850 ;;Total ram usage:        4 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; Hardware stack levels required when called:   13
 15853 ;; This function calls:
 15854 ;;		_PHY_DataReq
 15855 ;;		_SYS_TimerStart
 15856 ;;		_nwkDataReqTxConf
 15857 ;;		_nwkFrameFree
 15858 ;;		_nwkFrameNext
 15859 ;;		_nwkRouteFrameSent
 15860 ;; This function is called by:
 15861 ;;		_NWK_TaskHandler
 15862 ;; This function uses a non-reentrant model
 15863 ;;
 15864                           
 15865                           	psect	text98
 15866  0034E6                     __ptext98:
 15867                           	opt callstack 0
 15868  0034E6                     _nwkTxTaskHandler:
 15869                           	opt callstack 15
 15870                           
 15871                           ; BSR set to: 2
 15872                           ;../nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
 15873                           
 15874                           ;incstack = 0
 15875  0034E6  0E00               	movlw	0
 15876  0034E8  6E16               	movwf	nwkTxTaskHandler@frame^0,c
 15877  0034EA  0E00               	movlw	0
 15878  0034EC  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
 15879                           
 15880                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15881  0034EE  D0E0               	goto	l16777
 15882  0034F0                     l16731:
 15883                           
 15884                           ;../nwk/nwk_src/nwkTx.c: 313:       {;../nwk/nwk_src/nwkTx.c: 314:         if (frame->tx
      +                          .timeout > 0)
 15885  0034F0  EE20 F084          	lfsr	2,132
 15886  0034F4  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15887  0034F6  26D9               	addwf	fsr2l,f,c
 15888  0034F8  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15889  0034FA  22DA               	addwfc	fsr2h,f,c
 15890  0034FC  50DE               	movf	postinc2,w,c
 15891  0034FE  10DE               	iorwf	postinc2,w,c
 15892  003500  B4D8               	btfsc	status,2,c
 15893  003502  D00F               	goto	l16737
 15894                           
 15895                           ;../nwk/nwk_src/nwkTx.c: 315:         {;../nwk/nwk_src/nwkTx.c: 316:           frame->st
      +                          ate = NWK_TX_STATE_WAIT_DELAY;
 15896  003504  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15897  00350A  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15898  003510  0E11               	movlw	17
 15899  003512  6EDF               	movwf	indf2,c
 15900                           
 15901                           ;../nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 15902  003514  0E8B               	movlw	low _nwkTxDelayTimer
 15903  003516  6E10               	movwf	SYS_TimerStart@timer^0,c
 15904  003518  0E01               	movlw	high _nwkTxDelayTimer
 15905  00351A  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 15906  00351C  EC26  F044         	call	_SYS_TimerStart	;wreg free
 15907                           
 15908                           ;../nwk/nwk_src/nwkTx.c: 318:         }
 15909  003520  D0C7               	goto	l16777
 15910  003522                     l16737:
 15911                           
 15912                           ;../nwk/nwk_src/nwkTx.c: 320:         {;../nwk/nwk_src/nwkTx.c: 321:           frame->st
      +                          ate = NWK_TX_STATE_SEND;
 15913  003522  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15914  003528  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15915  00352E  0E13               	movlw	19
 15916  003530  D065               	goto	L13
 15917  003532                     l16739:
 15918                           
 15919                           ;../nwk/nwk_src/nwkTx.c: 326:       {;../nwk/nwk_src/nwkTx.c: 327:         if (((void*)0
      +                          ) == nwkTxPhyActiveFrame)
 15920  003532  0101               	movlb	1	; () banked
 15921  003534  516B               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 15922  003536  116C               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 15923  003538  A4D8               	btfss	status,2,c
 15924  00353A  D0BA               	goto	l16777
 15925                           
 15926                           ; BSR set to: 1
 15927                           ;../nwk/nwk_src/nwkTx.c: 328:         {;../nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyA
      +                          ctiveFrame = frame;
 15928  00353C  0060  F058  F16B   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 15929  003542  0060  F05C  F16C   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 15930                           
 15931                           ; BSR set to: 1
 15932                           ;../nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 15933  003548  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15934  00354E  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15935  003554  0E14               	movlw	20
 15936  003556  6EDF               	movwf	indf2,c
 15937                           
 15938                           ; BSR set to: 1
 15939                           ;../nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 15940  003558  0E02               	movlw	2
 15941  00355A  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
 15942  00355C  6E11               	movwf	PHY_DataReq@data^0,c
 15943  00355E  0E00               	movlw	0
 15944  003560  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
 15945  003562  6E12               	movwf	(PHY_DataReq@data+1)^0,c
 15946  003564  EE20 F001          	lfsr	2,1
 15947  003568  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15948  00356A  26D9               	addwf	fsr2l,f,c
 15949  00356C  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15950  00356E  22DA               	addwfc	fsr2h,f,c
 15951  003570  50DF               	movf	indf2,w,c
 15952  003572  6E13               	movwf	PHY_DataReq@size^0,c
 15953  003574  EC50  F03D         	call	_PHY_DataReq	;wreg free
 15954                           
 15955                           ; BSR set to: 1
 15956                           ;../nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 15957  003578  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 15958  00357A  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 15959  00357C  D099               	goto	l16777
 15960  00357E                     l16749:
 15961                           
 15962                           ;../nwk/nwk_src/nwkTx.c: 340:       {;../nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCE
      +                          SS_STATUS == frame->tx.status)
 15963  00357E  EE20 F083          	lfsr	2,131
 15964  003582  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15965  003584  26D9               	addwf	fsr2l,f,c
 15966  003586  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15967  003588  22DA               	addwfc	fsr2h,f,c
 15968  00358A  50DF               	movf	indf2,w,c
 15969  00358C  A4D8               	btfss	status,2,c
 15970  00358E  D02F               	goto	l16761
 15971                           
 15972                           ;../nwk/nwk_src/nwkTx.c: 342:         {;../nwk/nwk_src/nwkTx.c: 343:           if (frame
      +                          ->header.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 15973  003590  EE20 F00D          	lfsr	2,13
 15974  003594  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15975  003596  26D9               	addwf	fsr2l,f,c
 15976  003598  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15977  00359A  22DA               	addwfc	fsr2h,f,c
 15978  00359C  0101               	movlb	1	; () banked
 15979  00359E  5100               	movf	_nwkIb& (0+255),w,b
 15980  0035A0  18DE               	xorwf	postinc2,w,c
 15981  0035A2  E125               	bnz	l16763
 15982  0035A4  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15983  0035A6  18DE               	xorwf	postinc2,w,c
 15984  0035A8  A4D8               	btfss	status,2,c
 15985  0035AA  D021               	goto	l16761
 15986                           
 15987                           ; BSR set to: 1
 15988  0035AC  EE20 F00B          	lfsr	2,11
 15989  0035B0  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15990  0035B2  26D9               	addwf	fsr2l,f,c
 15991  0035B4  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15992  0035B6  22DA               	addwfc	fsr2h,f,c
 15993  0035B8  A0DF               	btfss	indf2,0,c
 15994  0035BA  D019               	goto	l16761
 15995                           
 15996                           ; BSR set to: 1
 15997                           ;../nwk/nwk_src/nwkTx.c: 344:           {;../nwk/nwk_src/nwkTx.c: 345:             frame
      +                          ->state = NWK_TX_STATE_WAIT_ACK;
 15998  0035BC  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15999  0035C2  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 16000  0035C8  0E16               	movlw	22
 16001  0035CA  6EDF               	movwf	indf2,c
 16002                           
 16003                           ; BSR set to: 1
 16004                           ;../nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
 16005  0035CC  EE20 F084          	lfsr	2,132
 16006  0035D0  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 16007  0035D2  26D9               	addwf	fsr2l,f,c
 16008  0035D4  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 16009  0035D6  22DA               	addwfc	fsr2h,f,c
 16010  0035D8  0E06               	movlw	6
 16011  0035DA  6EDE               	movwf	postinc2,c
 16012  0035DC  0E00               	movlw	0
 16013  0035DE  6EDD               	movwf	postdec2,c
 16014                           
 16015                           ; BSR set to: 1
 16016                           ;../nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 16017  0035E0  0E98               	movlw	low _nwkTxAckWaitTimer
 16018  0035E2  6E10               	movwf	SYS_TimerStart@timer^0,c
 16019  0035E4  0E01               	movlw	high _nwkTxAckWaitTimer
 16020  0035E6  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 16021  0035E8  EC26  F044         	call	_SYS_TimerStart	;wreg free
 16022                           
 16023                           ;../nwk/nwk_src/nwkTx.c: 348:           }
 16024  0035EC  D061               	goto	l16777
 16025  0035EE                     l16761:
 16026  0035EE                     l16763:
 16027                           
 16028                           ;../nwk/nwk_src/nwkTx.c: 355:         {;../nwk/nwk_src/nwkTx.c: 356:           frame->st
      +                          ate = NWK_TX_STATE_CONFIRM;
 16029  0035EE  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 16030  0035F4  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 16031  0035FA  0E17               	movlw	23
 16032  0035FC                     L13:
 16033  0035FC  6EDF               	movwf	indf2,c
 16034  0035FE  D058               	goto	l16777
 16035  003600                     l16765:
 16036                           
 16037                           ;../nwk/nwk_src/nwkTx.c: 364:       {;../nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrame
      +                          Sent(frame);
 16038  003600  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 16039  003606  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 16040  00360C  EC28  F02B         	call	_nwkRouteFrameSent	;wreg free
 16041                           
 16042                           ;../nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
 16043  003610  EE20 F087          	lfsr	2,135
 16044  003614  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 16045  003616  26D9               	addwf	fsr2l,f,c
 16046  003618  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 16047  00361A  22DA               	addwfc	fsr2h,f,c
 16048  00361C  50DE               	movf	postinc2,w,c
 16049  00361E  10DE               	iorwf	postinc2,w,c
 16050  003620  A4D8               	btfss	status,2,c
 16051  003622  D009               	goto	l16771
 16052                           
 16053                           ;../nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 16054  003624  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 16055  00362A  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 16056  003630  ECC5  F045         	call	_nwkFrameFree	;wreg free
 16057  003634  D03D               	goto	l16777
 16058  003636                     l16771:
 16059                           
 16060                           ;../nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 16061  003636  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 16062  00363C  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 16063  003642  EE20 F087          	lfsr	2,135
 16064  003646  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 16065  003648  26D9               	addwf	fsr2l,f,c
 16066  00364A  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 16067  00364C  22DA               	addwfc	fsr2h,f,c
 16068  00364E  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
 16069  003654  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
 16070  00365A  D801               	call	u17048
 16071  00365C  D029               	goto	l16777
 16072  00365E                     u17048:
 16073  00365E  0005               	push	
 16074  003660  6EFA               	movwf	pclath,c
 16075  003662  5014               	movf	??_nwkTxTaskHandler^0,w,c
 16076  003664  6EFD               	movwf	tosl,c
 16077  003666  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 16078  003668  6EFE               	movwf	tosh,c
 16079  00366A  6AFF               	clrf	tosu,c
 16080  00366C  50FA               	movf	pclath,w,c
 16081  00366E  0012               	return		;indir
 16082  003670                     l16775:
 16083  003670  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 16084  003676  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 16085  00367C  50DF               	movf	indf2,w,c
 16086  00367E  6E14               	movwf	??_nwkTxTaskHandler^0,c
 16087  003680  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
 16088                           
 16089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16090                           ; Switch size 1, requested type "simple"
 16091                           ; Number of cases is 1, Range of values is 0 to 0
 16092                           ; switch strategies available:
 16093                           ; Name         Instructions Cycles
 16094                           ; simple_byte            4     3 (average)
 16095                           ;	Chosen strategy is simple_byte
 16096  003682  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 16097  003684  0A00               	xorlw	0	; case 0
 16098  003686  A4D8               	btfss	status,2,c
 16099  003688  D013               	goto	l16777
 16100                           
 16101                           ; Switch size 1, requested type "simple"
 16102                           ; Number of cases is 6, Range of values is 18 to 23
 16103                           ; switch strategies available:
 16104                           ; Name         Instructions Cycles
 16105                           ; simple_byte           19    10 (average)
 16106                           ;	Chosen strategy is simple_byte
 16107  00368A  5014               	movf	??_nwkTxTaskHandler^0,w,c
 16108  00368C  0A12               	xorlw	18	; case 18
 16109  00368E  B4D8               	btfsc	status,2,c
 16110  003690  D72F               	goto	l16731
 16111  003692  0A01               	xorlw	1	; case 19
 16112  003694  B4D8               	btfsc	status,2,c
 16113  003696  D74D               	goto	l16739
 16114  003698  0A07               	xorlw	7	; case 20
 16115  00369A  B4D8               	btfsc	status,2,c
 16116  00369C  D009               	goto	l16777
 16117  00369E  0A01               	xorlw	1	; case 21
 16118  0036A0  B4D8               	btfsc	status,2,c
 16119  0036A2  D76D               	goto	l16749
 16120  0036A4  0A03               	xorlw	3	; case 22
 16121  0036A6  B4D8               	btfsc	status,2,c
 16122  0036A8  D003               	goto	l16777
 16123  0036AA  0A01               	xorlw	1	; case 23
 16124  0036AC  B4D8               	btfsc	status,2,c
 16125  0036AE  D7A8               	goto	l16765
 16126  0036B0                     l16777:
 16127                           
 16128                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 16129  0036B0  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 16130  0036B6  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 16131  0036BC  ECFD  F037         	call	_nwkFrameNext	;wreg free
 16132  0036C0  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 16133  0036C6  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 16134  0036CC  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 16135  0036CE  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
 16136  0036D0  B4D8               	btfsc	status,2,c
 16137  0036D2  0012               	return	
 16138  0036D4  D7CD               	goto	l16775
 16139  0036D6                     __end_of_nwkTxTaskHandler:
 16140                           	opt callstack 0
 16141                           
 16142 ;; *************** function _nwkRouteFrameSent *****************
 16143 ;; Defined at:
 16144 ;;		line 236 in file "../nwk/nwk_src/nwkRoute.c"
 16145 ;; Parameters:    Size  Location     Type
 16146 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
 16147 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
 16150 ;;		 -> nwkRouteTable(70), NULL(0), 
 16151 ;; Return value:  Size  Location     Type
 16152 ;;                  1    wreg      void 
 16153 ;; Registers used:
 16154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16155 ;; Tracked objects:
 16156 ;;		On entry : 0/2
 16157 ;;		On exit  : 0/0
 16158 ;;		Unchanged: 0/0
 16159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16164 ;;Total ram usage:        6 bytes
 16165 ;; Hardware stack levels used:    1
 16166 ;; Hardware stack levels required when called:    8
 16167 ;; This function calls:
 16168 ;;		_NWK_RouteFindEntry
 16169 ;;		_NWK_RouteFreeEntry
 16170 ;;		_nwkRouteNormalizeRanks
 16171 ;; This function is called by:
 16172 ;;		_nwkTxTaskHandler
 16173 ;; This function uses a non-reentrant model
 16174 ;;
 16175                           
 16176                           	psect	text99
 16177  005650                     __ptext99:
 16178                           	opt callstack 0
 16179  005650                     _nwkRouteFrameSent:
 16180                           	opt callstack 19
 16181                           
 16182                           ;../nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 237: {;../nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;../
      +                          nwk/nwk_src/nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
 16183                           
 16184                           ;incstack = 0
 16185  005650  EE20 F00F          	lfsr	2,15
 16186  005654  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16187  005656  26D9               	addwf	fsr2l,f,c
 16188  005658  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16189  00565A  22DA               	addwfc	fsr2h,f,c
 16190  00565C  28DE               	incf	postinc2,w,c
 16191  00565E  E103               	bnz	l16047
 16192  005660  28DE               	incf	postinc2,w,c
 16193  005662  B4D8               	btfsc	status,2,c
 16194  005664  0012               	return	
 16195  005666                     l16047:
 16196                           
 16197                           ;../nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, 
      +                          frame->header.nwkFcf.multicast);
 16198  005666  EE20 F00F          	lfsr	2,15
 16199  00566A  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16200  00566C  26D9               	addwf	fsr2l,f,c
 16201  00566E  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16202  005670  22DA               	addwfc	fsr2h,f,c
 16203  005672  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 16204  005678  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 16205  00567E  EE20 F00B          	lfsr	2,11
 16206  005682  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16207  005684  26D9               	addwf	fsr2l,f,c
 16208  005686  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16209  005688  22DA               	addwfc	fsr2h,f,c
 16210  00568A  0E00               	movlw	0
 16211  00568C  B6DF               	btfsc	indf2,3,c
 16212  00568E  0E01               	movlw	1
 16213  005690  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 16214  005692  ECCC  F03B         	call	_NWK_RouteFindEntry	;wreg free
 16215  005696  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 16216  00569C  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 16217                           
 16218                           ;../nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
 16219  0056A2  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 16220  0056A4  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
 16221  0056A6  B4D8               	btfsc	status,2,c
 16222  0056A8  0012               	return	
 16223  0056AA  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16224  0056B0  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16225  0056B6  B0DF               	btfsc	indf2,0,c
 16226  0056B8  0012               	return	
 16227                           
 16228                           ;../nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 16229  0056BA  EE20 F083          	lfsr	2,131
 16230  0056BE  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16231  0056C0  26D9               	addwf	fsr2l,f,c
 16232  0056C2  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16233  0056C4  22DA               	addwfc	fsr2h,f,c
 16234  0056C6  50DF               	movf	indf2,w,c
 16235  0056C8  A4D8               	btfss	status,2,c
 16236  0056CA  D017               	goto	l16061
 16237                           
 16238                           ;../nwk/nwk_src/nwkRoute.c: 249:   {;../nwk/nwk_src/nwkRoute.c: 250:     entry->score = 
      +                          3;
 16239  0056CC  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16240  0056D2  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16241  0056D8  50DF               	movf	indf2,w,c
 16242  0056DA  0B0F               	andlw	-241
 16243  0056DC  0930               	iorlw	48
 16244  0056DE  6EDF               	movwf	indf2,c
 16245                           
 16246                           ;../nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
 16247  0056E0  EE20 F005          	lfsr	2,5
 16248  0056E4  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 16249  0056E6  26D9               	addwf	fsr2l,f,c
 16250  0056E8  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
 16251  0056EA  22DA               	addwfc	fsr2h,f,c
 16252  0056EC  2ADF               	incf	indf2,f,c
 16253  0056EE  28DE               	incf	postinc2,w,c
 16254  0056F0  A4D8               	btfss	status,2,c
 16255  0056F2  0012               	return	
 16256                           
 16257                           ;../nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
 16258  0056F4  EC2C  F042         	call	_nwkRouteNormalizeRanks	;wreg free
 16259  0056F8  0012               	return	
 16260  0056FA                     l16061:
 16261                           
 16262                           ;../nwk/nwk_src/nwkRoute.c: 256:   {;../nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entr
      +                          y->score)
 16263  0056FA  0E01               	movlw	1
 16264  0056FC  6E0A               	movwf	??_nwkRouteFrameSent^0,c
 16265  0056FE  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16266  005704  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16267  00570A  38DF               	swapf	indf2,w,c
 16268  00570C  0B0F               	andlw	15
 16269  00570E  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
 16270  005710  500A               	movf	??_nwkRouteFrameSent^0,w,c
 16271  005712  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
 16272  005714  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
 16273  005716  50DF               	movf	indf2,w,c
 16274  005718  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 16275  00571A  0B0F               	andlw	-241
 16276  00571C  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 16277  00571E  6EDF               	movwf	indf2,c
 16278  005720  38DF               	swapf	indf2,w,c
 16279  005722  0B0F               	andlw	15
 16280  005724  0900               	iorlw	0
 16281  005726  A4D8               	btfss	status,2,c
 16282  005728  0012               	return	
 16283                           
 16284                           ;../nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
 16285  00572A  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 16286  005730  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 16287  005736  ECD4  F042         	call	_NWK_RouteFreeEntry	;wreg free
 16288  00573A  0012               	return		;funcret
 16289  00573C                     __end_of_nwkRouteFrameSent:
 16290                           	opt callstack 0
 16291                           
 16292 ;; *************** function _nwkRouteNormalizeRanks *****************
 16293 ;; Defined at:
 16294 ;;		line 358 in file "../nwk/nwk_src/nwkRoute.c"
 16295 ;; Parameters:    Size  Location     Type
 16296 ;;		None
 16297 ;; Auto vars:     Size  Location     Type
 16298 ;;  i               1    2[COMRAM] unsigned char 
 16299 ;; Return value:  Size  Location     Type
 16300 ;;                  1    wreg      void 
 16301 ;; Registers used:
 16302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16303 ;; Tracked objects:
 16304 ;;		On entry : 0/2
 16305 ;;		On exit  : 0/0
 16306 ;;		Unchanged: 0/0
 16307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16312 ;;Total ram usage:        2 bytes
 16313 ;; Hardware stack levels used:    1
 16314 ;; Hardware stack levels required when called:    7
 16315 ;; This function calls:
 16316 ;;		Nothing
 16317 ;; This function is called by:
 16318 ;;		_nwkRouteFrameSent
 16319 ;; This function uses a non-reentrant model
 16320 ;;
 16321                           
 16322                           	psect	text100
 16323  008458                     __ptext100:
 16324                           	opt callstack 0
 16325  008458                     _nwkRouteNormalizeRanks:
 16326                           	opt callstack 19
 16327                           
 16328                           ;../nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
 16329                           
 16330                           ;incstack = 0
 16331  008458  0E00               	movlw	0
 16332  00845A  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
 16333  00845C                     l10779:
 16334                           
 16335                           ;../nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1
      +                          ) + 1;
 16336  00845C  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 16337  00845E  0D07               	mullw	7
 16338  008460  0E79               	movlw	low (_nwkRouteTable+5)
 16339  008462  24F3               	addwf	243,w,c
 16340  008464  6ED9               	movwf	fsr2l,c
 16341  008466  0E02               	movlw	high (_nwkRouteTable+5)
 16342  008468  20F4               	addwfc	prodh,w,c
 16343  00846A  6EDA               	movwf	fsr2h,c
 16344  00846C  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 16345  00846E  0D07               	mullw	7
 16346  008470  0E79               	movlw	low (_nwkRouteTable+5)
 16347  008472  24F3               	addwf	243,w,c
 16348  008474  6EE1               	movwf	fsr1l,c
 16349  008476  0E02               	movlw	high (_nwkRouteTable+5)
 16350  008478  20F4               	addwfc	prodh,w,c
 16351  00847A  6EE2               	movwf	fsr1h,c
 16352  00847C  50E7               	movf	indf1,w,c
 16353  00847E  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
 16354  008480  90D8               	bcf	status,0,c
 16355  008482  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
 16356  008484  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
 16357  008486  6EDF               	movwf	indf2,c
 16358  008488  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
 16359  00848A  0E09               	movlw	9
 16360  00848C  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
 16361  00848E  D7E6               	goto	l10779
 16362  008490  0012               	return	
 16363  008492                     __end_of_nwkRouteNormalizeRanks:
 16364                           	opt callstack 0
 16365                           
 16366 ;; *************** function _nwkDataReqTxConf *****************
 16367 ;; Defined at:
 16368 ;;		line 168 in file "../nwk/nwk_src/nwkDataReq.c"
 16369 ;; Parameters:    Size  Location     Type
 16370 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
 16371 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16372 ;; Auto vars:     Size  Location     Type
 16373 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
 16374 ;;		 -> NULL(0), tx_buffer(524), 
 16375 ;; Return value:  Size  Location     Type
 16376 ;;                  1    wreg      void 
 16377 ;; Registers used:
 16378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16379 ;; Tracked objects:
 16380 ;;		On entry : 0/2
 16381 ;;		On exit  : 3F/1
 16382 ;;		Unchanged: 0/0
 16383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16388 ;;Total ram usage:        6 bytes
 16389 ;; Hardware stack levels used:    1
 16390 ;; Hardware stack levels required when called:    8
 16391 ;; This function calls:
 16392 ;;		_nwkFrameFree
 16393 ;; This function is called by:
 16394 ;;		_nwkDataReqSendFrame
 16395 ;;		_nwkTxTaskHandler
 16396 ;; This function uses a non-reentrant model
 16397 ;;
 16398                           
 16399                           	psect	text101
 16400  006A10                     __ptext101:
 16401                           	opt callstack 0
 16402  006A10                     _nwkDataReqTxConf:
 16403                           	opt callstack 19
 16404                           
 16405                           ;../nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkDataReq.c: 169: {;../nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *r
      +                          eq = nwkDataReqQueue; req; req = req->next)
 16406                           
 16407                           ;incstack = 0
 16408  006A10  0060  F3A8  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 16409  006A16  0060  F3AC  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 16410  006A1C  D040               	goto	l16039
 16411  006A1E                     l16031:
 16412                           
 16413                           ;../nwk/nwk_src/nwkDataReq.c: 171:   {;../nwk/nwk_src/nwkDataReq.c: 172:     if (req->fr
      +                          ame == frame)
 16414  006A1E  EE20 F002          	lfsr	2,2
 16415  006A22  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16416  006A24  26D9               	addwf	fsr2l,f,c
 16417  006A26  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16418  006A28  22DA               	addwfc	fsr2h,f,c
 16419  006A2A  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16420  006A2C  18DE               	xorwf	postinc2,w,c
 16421  006A2E  E12B               	bnz	l16037
 16422  006A30  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16423  006A32  18DE               	xorwf	postinc2,w,c
 16424  006A34  A4D8               	btfss	status,2,c
 16425  006A36  D027               	goto	l16037
 16426                           
 16427                           ;../nwk/nwk_src/nwkDataReq.c: 173:     {;../nwk/nwk_src/nwkDataReq.c: 174:       req->st
      +                          atus = frame->tx.status;
 16428  006A38  EE20 F083          	lfsr	2,131
 16429  006A3C  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16430  006A3E  26D9               	addwf	fsr2l,f,c
 16431  006A40  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16432  006A42  22DA               	addwfc	fsr2h,f,c
 16433  006A44  EE10 F011          	lfsr	1,17
 16434  006A48  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16435  006A4A  26E1               	addwf	fsr1l,f,c
 16436  006A4C  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16437  006A4E  22E2               	addwfc	fsr1h,f,c
 16438  006A50  006F FF7F FFE7     	movff	indf2,indf1
 16439                           
 16440                           ;../nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
 16441  006A56  EE20 F086          	lfsr	2,134
 16442  006A5A  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16443  006A5C  26D9               	addwf	fsr2l,f,c
 16444  006A5E  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16445  006A60  22DA               	addwfc	fsr2h,f,c
 16446  006A62  EE10 F012          	lfsr	1,18
 16447  006A66  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16448  006A68  26E1               	addwf	fsr1l,f,c
 16449  006A6A  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16450  006A6C  22E2               	addwfc	fsr1h,f,c
 16451  006A6E  006F FF7F FFE7     	movff	indf2,indf1
 16452                           
 16453                           ;../nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 16454  006A74  EE20 F004          	lfsr	2,4
 16455  006A78  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16456  006A7A  26D9               	addwf	fsr2l,f,c
 16457  006A7C  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16458  006A7E  22DA               	addwfc	fsr2h,f,c
 16459  006A80  0E02               	movlw	2
 16460  006A82  6EDF               	movwf	indf2,c
 16461                           
 16462                           ;../nwk/nwk_src/nwkDataReq.c: 177:       break;
 16463  006A84  D010               	goto	u16180
 16464  006A86                     l16037:
 16465                           
 16466                           ;../nwk/nwk_src/nwkDataReq.c: 179:   }
 16467  006A86  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 16468  006A8C  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 16469  006A92  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
 16470  006A98  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
 16471  006A9E                     l16039:
 16472  006A9E  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16473  006AA0  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
 16474  006AA2  A4D8               	btfss	status,2,c
 16475  006AA4  D7BC               	goto	l16031
 16476  006AA6                     u16180:
 16477                           
 16478                           ;../nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
 16479  006AA6  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 16480  006AAC  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 16481  006AB2  ECC5  F045         	call	_nwkFrameFree	;wreg free
 16482                           
 16483                           ; BSR set to: 1
 16484  006AB6  0012               	return		;funcret
 16485  006AB8                     __end_of_nwkDataReqTxConf:
 16486                           	opt callstack 0
 16487                           
 16488 ;; *************** function _PHY_DataReq *****************
 16489 ;; Defined at:
 16490 ;;		line 842 in file "../phy/sx1216/phy_src/phy.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;  data            2   16[COMRAM] PTR unsigned char 
 16493 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16494 ;;  size            1   18[COMRAM] unsigned char 
 16495 ;; Auto vars:     Size  Location     Type
 16496 ;;		None
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  1    wreg      void 
 16499 ;; Registers used:
 16500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16501 ;; Tracked objects:
 16502 ;;		On entry : 3F/1
 16503 ;;		On exit  : 3F/1
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16506 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16510 ;;Total ram usage:        3 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; Hardware stack levels required when called:   12
 16513 ;; This function calls:
 16514 ;;		_SPI1_ExchangeByte
 16515 ;;		_SPI1_WriteBlock
 16516 ;;		_SX1276Write
 16517 ;;		_explicitHeaderMode
 16518 ;;		_idle
 16519 ;; This function is called by:
 16520 ;;		_nwkTxTaskHandler
 16521 ;; This function uses a non-reentrant model
 16522 ;;
 16523                           
 16524                           	psect	text102
 16525  007AA0                     __ptext102:
 16526                           	opt callstack 0
 16527  007AA0                     _PHY_DataReq:
 16528                           	opt callstack 15
 16529                           
 16530                           ; BSR set to: 1
 16531                           ;../phy/sx1216/phy_src/phy.c: 843:     idle();
 16532                           
 16533                           ; BSR set to: 1
 16534                           ;incstack = 0
 16535  007AA0  ECF9  F046         	call	_idle	;wreg free
 16536                           
 16537                           ;../phy/sx1216/phy_src/phy.c: 844:     explicitHeaderMode();
 16538  007AA4  EC42  F046         	call	_explicitHeaderMode	;wreg free
 16539                           
 16540                           ;../phy/sx1216/phy_src/phy.c: 846:     SX1276Write(0x0E, 0x0);
 16541  007AA8  0E00               	movlw	0
 16542  007AAA  6E0F               	movwf	SX1276Write@data^0,c
 16543  007AAC  0E0E               	movlw	14
 16544  007AAE  EC79  F046         	call	_SX1276Write
 16545                           
 16546                           ;../phy/sx1216/phy_src/phy.c: 847:     SX1276Write(0x0D, 0x00);
 16547  007AB2  0E00               	movlw	0
 16548  007AB4  6E0F               	movwf	SX1276Write@data^0,c
 16549  007AB6  0E0D               	movlw	13
 16550  007AB8  EC79  F046         	call	_SX1276Write
 16551                           
 16552                           ;../phy/sx1216/phy_src/phy.c: 848:     SX1276Write(0x22, size);
 16553  007ABC  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
 16554  007AC2  0E22               	movlw	34
 16555  007AC4  EC79  F046         	call	_SX1276Write
 16556                           
 16557                           ; BSR set to: 61
 16558  007AC8  9CBC               	bcf	188,6,c	;volatile
 16559                           
 16560                           ; BSR set to: 61
 16561                           ;../phy/sx1216/phy_src/phy.c: 851:     SPI1_ExchangeByte(0x00 | 0x80);
 16562  007ACA  0E80               	movlw	128
 16563  007ACC  ECEC  F045         	call	_SPI1_ExchangeByte
 16564                           
 16565                           ; BSR set to: 61
 16566                           ;../phy/sx1216/phy_src/phy.c: 852:     SPI1_WriteBlock(data,size);
 16567  007AD0  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
 16568  007AD6  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
 16569  007ADC  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
 16570  007AE2  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 16571  007AE4  EC0A  F043         	call	_SPI1_WriteBlock	;wreg free
 16572                           
 16573                           ; BSR set to: 61
 16574  007AE8  8CBC               	bsf	188,6,c	;volatile
 16575                           
 16576                           ; BSR set to: 61
 16577                           ;../phy/sx1216/phy_src/phy.c: 854:     SX1276Write(0x01,
 16578  007AEA  0E83               	movlw	131
 16579  007AEC  6E0F               	movwf	SX1276Write@data^0,c
 16580  007AEE  0E01               	movlw	1
 16581  007AF0  EC79  F046         	call	_SX1276Write
 16582                           
 16583                           ; BSR set to: 61
 16584                           ;../phy/sx1216/phy_src/phy.c: 856:     radio_state_var = START_TX;
 16585  007AF4  0E06               	movlw	6
 16586  007AF6  0101               	movlb	1	; () banked
 16587  007AF8  6F76               	movwf	_radio_state_var& (0+255),b
 16588                           
 16589                           ; BSR set to: 1
 16590  007AFA  0012               	return		;funcret
 16591  007AFC                     __end_of_PHY_DataReq:
 16592                           	opt callstack 0
 16593                           
 16594 ;; *************** function _idle *****************
 16595 ;; Defined at:
 16596 ;;		line 116 in file "../phy/sx1216/phy_src/phy.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;		None
 16599 ;; Auto vars:     Size  Location     Type
 16600 ;;		None
 16601 ;; Return value:  Size  Location     Type
 16602 ;;                  1    wreg      void 
 16603 ;; Registers used:
 16604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16605 ;; Tracked objects:
 16606 ;;		On entry : 3/3D
 16607 ;;		On exit  : 3F/3D
 16608 ;;		Unchanged: 0/0
 16609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16614 ;;Total ram usage:        0 bytes
 16615 ;; Hardware stack levels used:    1
 16616 ;; Hardware stack levels required when called:   11
 16617 ;; This function calls:
 16618 ;;		_SX1276Write
 16619 ;; This function is called by:
 16620 ;;		_start_radio_cad
 16621 ;;		_PHY_DataReq
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           	psect	text103
 16626  008DF2                     __ptext103:
 16627                           	opt callstack 0
 16628  008DF2                     _idle:
 16629                           	opt callstack 14
 16630                           
 16631                           ;../phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 16632                           
 16633                           ; BSR set to: 1
 16634                           ;incstack = 0
 16635  008DF2  0E81               	movlw	129
 16636  008DF4  6E0F               	movwf	SX1276Write@data^0,c
 16637  008DF6  0E01               	movlw	1
 16638  008DF8  EC79  F046         	call	_SX1276Write
 16639                           
 16640                           ; BSR set to: 61
 16641  008DFC  0012               	return		;funcret
 16642  008DFE                     __end_of_idle:
 16643                           	opt callstack 0
 16644                           
 16645 ;; *************** function _nwkRxTaskHandler *****************
 16646 ;; Defined at:
 16647 ;;		line 483 in file "../nwk/nwk_src/nwkRx.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;		None
 16650 ;; Auto vars:     Size  Location     Type
 16651 ;;  frame           2    0[BANK2 ] PTR struct NwkFrame_t
 16652 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16653 ;; Return value:  Size  Location     Type
 16654 ;;                  1    wreg      void 
 16655 ;; Registers used:
 16656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16657 ;; Tracked objects:
 16658 ;;		On entry : 3/1
 16659 ;;		On exit  : 3F/2
 16660 ;;		Unchanged: 0/0
 16661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16663 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16664 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16665 ;;      Totals:         0       0       2       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16666 ;;Total ram usage:        4 bytes
 16667 ;; Hardware stack levels used:    1
 16668 ;; Hardware stack levels required when called:   19
 16669 ;; This function calls:
 16670 ;;		_nwkFrameFree
 16671 ;;		_nwkFrameNext
 16672 ;;		_nwkRouteFrame
 16673 ;;		_nwkRxHandleIndication
 16674 ;;		_nwkRxHandleReceivedFrame
 16675 ;; This function is called by:
 16676 ;;		_NWK_TaskHandler
 16677 ;; This function uses a non-reentrant model
 16678 ;;
 16679                           
 16680                           	psect	text104
 16681  006754                     __ptext104:
 16682                           	opt callstack 0
 16683  006754                     _nwkRxTaskHandler:
 16684                           	opt callstack 9
 16685                           
 16686                           ;../nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
 16687                           
 16688                           ; BSR set to: 61
 16689                           ;incstack = 0
 16690  006754  0E00               	movlw	0
 16691  006756  0102               	movlb	2	; () banked
 16692  006758  6FDA               	movwf	nwkRxTaskHandler@frame& (0+255),b
 16693  00675A  0E00               	movlw	0
 16694  00675C  6FDB               	movwf	(nwkRxTaskHandler@frame+1)& (0+255),b
 16695                           
 16696                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 16697  00675E  D03F               	goto	l16721
 16698  006760                     l16709:
 16699                           
 16700                           ; BSR set to: 1
 16701                           ;../nwk/nwk_src/nwkRx.c: 492:       {;../nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleRe
      +                          ceivedFrame(frame);
 16702  006760  0060  FB68  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 16703  006766  0060  FB6C  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 16704  00676C  EC4B  F00B         	call	_nwkRxHandleReceivedFrame	;wreg free
 16705                           
 16706                           ;../nwk/nwk_src/nwkRx.c: 494:       } break;
 16707  006770  D036               	goto	l16721
 16708  006772                     l16711:
 16709                           
 16710                           ; BSR set to: 1
 16711                           ;../nwk/nwk_src/nwkRx.c: 504:       {;../nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIn
      +                          dication(frame);
 16712  006772  0060  FB68  F0DE   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 16713  006778  0060  FB6C  F0DF   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 16714  00677E  ECB3  F030         	call	_nwkRxHandleIndication	;wreg free
 16715                           
 16716                           ;../nwk/nwk_src/nwkRx.c: 506:       } break;
 16717  006782  D02D               	goto	l16721
 16718  006784                     l16713:
 16719                           
 16720                           ; BSR set to: 1
 16721                           ;../nwk/nwk_src/nwkRx.c: 510:       {;../nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame
      +                          (frame);
 16722  006784  0060  FB68  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 16723  00678A  0060  FB6C  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 16724  006790  ECAD  F02E         	call	_nwkRouteFrame	;wreg free
 16725                           
 16726                           ;../nwk/nwk_src/nwkRx.c: 512:       } break;
 16727  006794  D024               	goto	l16721
 16728  006796                     l16715:
 16729                           
 16730                           ; BSR set to: 1
 16731                           ;../nwk/nwk_src/nwkRx.c: 516:       {;../nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(
      +                          frame);
 16732  006796  0060  FB68  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 16733  00679C  0060  FB6C  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 16734  0067A2  ECC5  F045         	call	_nwkFrameFree	;wreg free
 16735                           
 16736                           ;../nwk/nwk_src/nwkRx.c: 518:       } break;
 16737  0067A6  D01B               	goto	l16721
 16738  0067A8                     l16719:
 16739                           
 16740                           ; BSR set to: 2
 16741  0067A8  0060  FB6B  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 16742  0067AE  0060  FB6F  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 16743  0067B4  50DF               	movf	indf2,w,c
 16744  0067B6  0101               	movlb	1	; () banked
 16745  0067B8  6FFE               	movwf	??_nwkRxTaskHandler& (0+255),b
 16746  0067BA  6BFF               	clrf	(??_nwkRxTaskHandler+1)& (0+255),b
 16747                           
 16748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16749                           ; Switch size 1, requested type "simple"
 16750                           ; Number of cases is 1, Range of values is 0 to 0
 16751                           ; switch strategies available:
 16752                           ; Name         Instructions Cycles
 16753                           ; simple_byte            4     3 (average)
 16754                           ;	Chosen strategy is simple_byte
 16755  0067BC  51FF               	movf	(??_nwkRxTaskHandler+1)& (0+255),w,b
 16756  0067BE  0A00               	xorlw	0	; case 0
 16757  0067C0  A4D8               	btfss	status,2,c
 16758  0067C2  D00D               	goto	l16721
 16759                           
 16760                           ; BSR set to: 1
 16761                           ; Switch size 1, requested type "simple"
 16762                           ; Number of cases is 4, Range of values is 32 to 36
 16763                           ; switch strategies available:
 16764                           ; Name         Instructions Cycles
 16765                           ; simple_byte           13     7 (average)
 16766                           ;	Chosen strategy is simple_byte
 16767  0067C4  51FE               	movf	??_nwkRxTaskHandler& (0+255),w,b
 16768  0067C6  0A20               	xorlw	32	; case 32
 16769  0067C8  B4D8               	btfsc	status,2,c
 16770  0067CA  D7CA               	goto	l16709
 16771  0067CC  0A02               	xorlw	2	; case 34
 16772  0067CE  B4D8               	btfsc	status,2,c
 16773  0067D0  D7D0               	goto	l16711
 16774  0067D2  0A01               	xorlw	1	; case 35
 16775  0067D4  B4D8               	btfsc	status,2,c
 16776  0067D6  D7D6               	goto	l16713
 16777  0067D8  0A07               	xorlw	7	; case 36
 16778  0067DA  B4D8               	btfsc	status,2,c
 16779  0067DC  D7DC               	goto	l16715
 16780  0067DE                     l16721:
 16781                           
 16782                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 16783  0067DE  0060  FB68  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 16784  0067E4  0060  FB6C  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 16785  0067EA  ECFD  F037         	call	_nwkFrameNext	;wreg free
 16786  0067EE  0060  F008  F2DA   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 16787  0067F4  0060  F00C  F2DB   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 16788  0067FA  0102               	movlb	2	; () banked
 16789  0067FC  51DA               	movf	nwkRxTaskHandler@frame& (0+255),w,b
 16790  0067FE  11DB               	iorwf	(nwkRxTaskHandler@frame+1)& (0+255),w,b
 16791  006800  B4D8               	btfsc	status,2,c
 16792  006802  0012               	return	
 16793  006804  D7D1               	goto	l16719
 16794  006806                     __end_of_nwkRxTaskHandler:
 16795                           	opt callstack 0
 16796                           
 16797 ;; *************** function _nwkRxHandleReceivedFrame *****************
 16798 ;; Defined at:
 16799 ;;		line 292 in file "../nwk/nwk_src/nwkRx.c"
 16800 ;; Parameters:    Size  Location     Type
 16801 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
 16802 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16803 ;; Auto vars:     Size  Location     Type
 16804 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
 16805 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16806 ;;  member          1   45[COMRAM] _Bool 
 16807 ;;  broadcast       1   44[COMRAM] _Bool 
 16808 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
 16809 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  1    wreg      void 
 16812 ;; Registers used:
 16813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16814 ;; Tracked objects:
 16815 ;;		On entry : 3/1
 16816 ;;		On exit  : 0/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16820 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16822 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16823 ;;Total ram usage:       10 bytes
 16824 ;; Hardware stack levels used:    1
 16825 ;; Hardware stack levels required when called:   10
 16826 ;; This function calls:
 16827 ;;		_NWK_GroupIsMember
 16828 ;;		_nwkRouteFrameReceived
 16829 ;;		_nwkRxRejectDuplicate
 16830 ;;		_nwkTxBroadcastFrame
 16831 ;; This function is called by:
 16832 ;;		_nwkRxTaskHandler
 16833 ;; This function uses a non-reentrant model
 16834 ;;
 16835                           
 16836                           	psect	text105
 16837  001696                     __ptext105:
 16838                           	opt callstack 0
 16839  001696                     _nwkRxHandleReceivedFrame:
 16840                           	opt callstack 17
 16841                           
 16842                           ;../nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);..
      +                          /nwk/nwk_src/nwkRx.c: 293: {;../nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &
      +                          frame->header;
 16843                           
 16844                           ; BSR set to: 2
 16845                           ;incstack = 0
 16846  001696  0E02               	movlw	2
 16847  001698  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
 16848  00169A  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
 16849  00169C  0E00               	movlw	0
 16850  00169E  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 16851  0016A0  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
 16852                           
 16853                           ;../nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 16854  0016A2  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16855  0016A8  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16856  0016AE  0E24               	movlw	36
 16857  0016B0  6EDF               	movwf	indf2,c
 16858                           
 16859                           ;../nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
 16860  0016B2  EE20 F009          	lfsr	2,9
 16861  0016B6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16862  0016B8  26D9               	addwf	fsr2l,f,c
 16863  0016BA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16864  0016BC  22DA               	addwfc	fsr2h,f,c
 16865  0016BE  B2DF               	btfsc	indf2,1,c
 16866  0016C0  0012               	return	
 16867                           
 16868                           ;../nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackReques
      +                          t)
 16869  0016C2  EE20 F009          	lfsr	2,9
 16870  0016C6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16871  0016C8  26D9               	addwf	fsr2l,f,c
 16872  0016CA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16873  0016CC  22DA               	addwfc	fsr2h,f,c
 16874  0016CE  A6DF               	btfss	indf2,3,c
 16875  0016D0  D008               	goto	l16091
 16876  0016D2  EE20 F009          	lfsr	2,9
 16877  0016D6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16878  0016D8  26D9               	addwf	fsr2l,f,c
 16879  0016DA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16880  0016DC  22DA               	addwfc	fsr2h,f,c
 16881  0016DE  B0DF               	btfsc	indf2,0,c
 16882  0016E0  0012               	return	
 16883  0016E2                     l16091:
 16884                           
 16885                           ;../nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 16886  0016E2  EE20 F003          	lfsr	2,3
 16887  0016E6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16888  0016E8  26D9               	addwf	fsr2l,f,c
 16889  0016EA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16890  0016EC  22DA               	addwfc	fsr2h,f,c
 16891  0016EE  28DE               	incf	postinc2,w,c
 16892  0016F0  E125               	bnz	l16101
 16893  0016F2  28DE               	incf	postinc2,w,c
 16894  0016F4  A4D8               	btfss	status,2,c
 16895  0016F6  D022               	goto	l16101
 16896                           
 16897                           ;../nwk/nwk_src/nwkRx.c: 312:   {;../nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == hea
      +                          der->nwkDstAddr || 0xffff == header->nwkDstAddr)
 16898  0016F8  EE20 F00D          	lfsr	2,13
 16899  0016FC  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16900  0016FE  26D9               	addwf	fsr2l,f,c
 16901  001700  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16902  001702  22DA               	addwfc	fsr2h,f,c
 16903  001704  0101               	movlb	1	; () banked
 16904  001706  5100               	movf	_nwkIb& (0+255),w,b
 16905  001708  18DE               	xorwf	postinc2,w,c
 16906  00170A  E104               	bnz	u16300
 16907  00170C  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16908  00170E  18DE               	xorwf	postinc2,w,c
 16909  001710  B4D8               	btfsc	status,2,c
 16910  001712  D00B               	goto	u16310
 16911  001714                     u16300:
 16912                           
 16913                           ; BSR set to: 1
 16914  001714  EE20 F00D          	lfsr	2,13
 16915  001718  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16916  00171A  26D9               	addwf	fsr2l,f,c
 16917  00171C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16918  00171E  22DA               	addwfc	fsr2h,f,c
 16919  001720  28DE               	incf	postinc2,w,c
 16920  001722  E102               	bnz	u16311
 16921  001724  28DE               	incf	postinc2,w,c
 16922  001726  A4D8               	btfss	status,2,c
 16923  001728                     u16311:
 16924  001728  0012               	return	
 16925  00172A                     u16310:
 16926                           
 16927                           ; BSR set to: 1
 16928                           ;../nwk/nwk_src/nwkRx.c: 314:     {;../nwk/nwk_src/nwkRx.c: 320:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 16929  00172A  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16930  001730  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16931  001736  0E22               	movlw	34
 16932  001738  6EDF               	movwf	indf2,c
 16933  00173A  0012               	return	
 16934  00173C                     l16101:
 16935                           
 16936                           ;../nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackRe
      +                          quest)
 16937  00173C  EE20 F00D          	lfsr	2,13
 16938  001740  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16939  001742  26D9               	addwf	fsr2l,f,c
 16940  001744  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16941  001746  22DA               	addwfc	fsr2h,f,c
 16942  001748  28DE               	incf	postinc2,w,c
 16943  00174A  E10B               	bnz	l16107
 16944  00174C  28DE               	incf	postinc2,w,c
 16945  00174E  A4D8               	btfss	status,2,c
 16946  001750  D008               	goto	l16107
 16947  001752  EE20 F009          	lfsr	2,9
 16948  001756  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16949  001758  26D9               	addwf	fsr2l,f,c
 16950  00175A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16951  00175C  22DA               	addwfc	fsr2h,f,c
 16952  00175E  B0DF               	btfsc	indf2,0,c
 16953  001760  0012               	return	
 16954  001762                     l16107:
 16955                           
 16956                           ;../nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 16957  001762  EE20 F00B          	lfsr	2,11
 16958  001766  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16959  001768  26D9               	addwf	fsr2l,f,c
 16960  00176A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16961  00176C  22DA               	addwfc	fsr2h,f,c
 16962  00176E  0101               	movlb	1	; () banked
 16963  001770  5100               	movf	_nwkIb& (0+255),w,b
 16964  001772  18DE               	xorwf	postinc2,w,c
 16965  001774  E104               	bnz	l16111
 16966  001776  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16967  001778  18DE               	xorwf	postinc2,w,c
 16968  00177A  B4D8               	btfsc	status,2,c
 16969  00177C  0012               	return	
 16970  00177E                     l16111:
 16971                           
 16972                           ; BSR set to: 1
 16973                           ;../nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 16974  00177E  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 16975  001784  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 16976  00178A  EC6B  F01B         	call	_nwkRouteFrameReceived	;wreg free
 16977                           
 16978                           ;../nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 16979  00178E  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 16980  001794  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 16981  00179A  EC4C  F015         	call	_nwkRxRejectDuplicate	;wreg free
 16982  00179E  0900               	iorlw	0
 16983  0017A0  A4D8               	btfss	status,2,c
 16984  0017A2  0012               	return	
 16985                           
 16986                           ;../nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 16987  0017A4  EE20 F009          	lfsr	2,9
 16988  0017A8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16989  0017AA  26D9               	addwf	fsr2l,f,c
 16990  0017AC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16991  0017AE  22DA               	addwfc	fsr2h,f,c
 16992  0017B0  A6DF               	btfss	indf2,3,c
 16993  0017B2  D0C7               	goto	l16149
 16994                           
 16995                           ;../nwk/nwk_src/nwkRx.c: 345:   {;../nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHead
      +                          er_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 16996  0017B4  EE20 F081          	lfsr	2,129
 16997  0017B8  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 16998  0017BA  26D9               	addwf	fsr2l,f,c
 16999  0017BC  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 17000  0017BE  22DA               	addwfc	fsr2h,f,c
 17001  0017C0  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 17002  0017C6  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 17003                           
 17004                           ;../nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 17005  0017CC  EE20 F00D          	lfsr	2,13
 17006  0017D0  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17007  0017D2  26D9               	addwf	fsr2l,f,c
 17008  0017D4  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17009  0017D6  22DA               	addwfc	fsr2h,f,c
 17010  0017D8  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 17011  0017DE  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 17012  0017E4  EC8D  F043         	call	_NWK_GroupIsMember	;wreg free
 17013  0017E8  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
 17014                           
 17015                           ;../nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 17016  0017EA  0E00               	movlw	0
 17017  0017EC  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 17018                           
 17019                           ;../nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 17020  0017EE  EE20 F005          	lfsr	2,5
 17021  0017F2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17022  0017F4  26D9               	addwf	fsr2l,f,c
 17023  0017F6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17024  0017F8  22DA               	addwfc	fsr2h,f,c
 17025  0017FA  28DE               	incf	postinc2,w,c
 17026  0017FC  E16C               	bnz	l16131
 17027  0017FE  28DE               	incf	postinc2,w,c
 17028  001800  A4D8               	btfss	status,2,c
 17029  001802  D069               	goto	l16131
 17030                           
 17031                           ;../nwk/nwk_src/nwkRx.c: 351:     {;../nwk/nwk_src/nwkRx.c: 352:       if (member)
 17032  001804  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 17033  001806  B4D8               	btfsc	status,2,c
 17034  001808  D031               	goto	l16129
 17035                           
 17036                           ;../nwk/nwk_src/nwkRx.c: 353:       {;../nwk/nwk_src/nwkRx.c: 354:         broadcast = m
      +                          cHeader->memberRadius > 0;
 17037  00180A  EE20 F001          	lfsr	2,1
 17038  00180E  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 17039  001810  26D9               	addwf	fsr2l,f,c
 17040  001812  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 17041  001814  22DA               	addwfc	fsr2h,f,c
 17042  001816  50DF               	movf	indf2,w,c
 17043  001818  0B0F               	andlw	15
 17044  00181A  0900               	iorlw	0
 17045  00181C  B4D8               	btfsc	status,2,c
 17046  00181E  D002               	goto	u16390
 17047  001820  0E01               	movlw	1
 17048  001822  D001               	goto	u16400
 17049  001824                     u16390:
 17050  001824  0E00               	movlw	0
 17051  001826                     u16400:
 17052  001826  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 17053                           
 17054                           ;../nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 17055  001828  0E01               	movlw	1
 17056  00182A  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 17057  00182C  EE20 F001          	lfsr	2,1
 17058  001830  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 17059  001832  26D9               	addwf	fsr2l,f,c
 17060  001834  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 17061  001836  22DA               	addwfc	fsr2h,f,c
 17062  001838  50DF               	movf	indf2,w,c
 17063  00183A  0B0F               	andlw	15
 17064  00183C  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 17065  00183E  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 17066  001840  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 17067  001842  50DF               	movf	indf2,w,c
 17068  001844  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 17069  001846  0BF0               	andlw	-16
 17070  001848  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 17071  00184A  6EDF               	movwf	indf2,c
 17072                           
 17073                           ;../nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMember
      +                          Radius;
 17074  00184C  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 17075  001852  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 17076  001858  38DF               	swapf	indf2,w,c
 17077  00185A  0B0F               	andlw	15
 17078  00185C  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 17079  00185E  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 17080  001864  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 17081  00186A  D030               	goto	L15
 17082  00186C                     l16129:
 17083                           
 17084                           ;../nwk/nwk_src/nwkRx.c: 359:       {;../nwk/nwk_src/nwkRx.c: 360:         broadcast = m
      +                          cHeader->nonMemberRadius > 0;
 17085  00186C  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 17086  001872  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 17087  001878  50DF               	movf	indf2,w,c
 17088  00187A  0B0F               	andlw	15
 17089  00187C  0900               	iorlw	0
 17090  00187E  B4D8               	btfsc	status,2,c
 17091  001880  D002               	goto	u16410
 17092  001882  0E01               	movlw	1
 17093  001884  D001               	goto	u16420
 17094  001886                     u16410:
 17095  001886  0E00               	movlw	0
 17096  001888                     u16420:
 17097  001888  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 17098                           
 17099                           ;../nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 17100  00188A  0E01               	movlw	1
 17101  00188C  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 17102  00188E  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 17103  001894  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 17104  00189A  50DF               	movf	indf2,w,c
 17105  00189C  0B0F               	andlw	15
 17106  00189E  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 17107  0018A0  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 17108  0018A2  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 17109  0018A4  50DF               	movf	indf2,w,c
 17110  0018A6  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 17111  0018A8  0BF0               	andlw	-16
 17112  0018AA  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 17113  0018AC  6EDF               	movwf	indf2,c
 17114                           
 17115                           ;../nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius
      +                          ;
 17116  0018AE  EE20 F001          	lfsr	2,1
 17117  0018B2  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 17118  0018B4  26D9               	addwf	fsr2l,f,c
 17119  0018B6  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 17120  0018B8  22DA               	addwfc	fsr2h,f,c
 17121  0018BA  38DF               	swapf	indf2,w,c
 17122  0018BC  0B0F               	andlw	15
 17123  0018BE  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 17124  0018C0  EE20 F001          	lfsr	2,1
 17125  0018C4  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 17126  0018C6  26D9               	addwf	fsr2l,f,c
 17127  0018C8  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 17128  0018CA  22DA               	addwfc	fsr2h,f,c
 17129  0018CC                     L15:
 17130  0018CC  50DF               	movf	indf2,w,c
 17131  0018CE  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 17132  0018D0  0BF0               	andlw	-16
 17133  0018D2  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 17134  0018D4  D014               	goto	L14
 17135  0018D6                     l16131:
 17136                           
 17137                           ;../nwk/nwk_src/nwkRx.c: 366:     {;../nwk/nwk_src/nwkRx.c: 367:       if (member)
 17138  0018D6  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 17139  0018D8  B4D8               	btfsc	status,2,c
 17140  0018DA  D00A               	goto	l16137
 17141                           
 17142                           ;../nwk/nwk_src/nwkRx.c: 368:       {;../nwk/nwk_src/nwkRx.c: 369:         broadcast = 1
      +                          ;
 17143  0018DC  0E01               	movlw	1
 17144  0018DE  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 17145                           
 17146                           ;../nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 17147  0018E0  EE20 F009          	lfsr	2,9
 17148  0018E4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17149  0018E6  26D9               	addwf	fsr2l,f,c
 17150  0018E8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17151  0018EA  22DA               	addwfc	fsr2h,f,c
 17152  0018EC  84DF               	bsf	indf2,2,c
 17153                           
 17154                           ;../nwk/nwk_src/nwkRx.c: 371:       }
 17155  0018EE  D008               	goto	l16139
 17156  0018F0                     l16137:
 17157                           
 17158                           ;../nwk/nwk_src/nwkRx.c: 374:       {;../nwk/nwk_src/nwkRx.c: 375:         frame->state 
      +                          = NWK_RX_STATE_ROUTE;
 17159  0018F0  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17160  0018F6  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17161  0018FC  0E23               	movlw	35
 17162  0018FE                     L14:
 17163  0018FE  6EDF               	movwf	indf2,c
 17164  001900                     l16139:
 17165                           
 17166                           ;../nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 17167  001900  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
 17168  001902  B4D8               	btfsc	status,2,c
 17169  001904  D008               	goto	l16143
 17170                           
 17171                           ;../nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 17172  001906  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 17173  00190C  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 17174  001912  EC81  F023         	call	_nwkTxBroadcastFrame	;wreg free
 17175  001916                     l16143:
 17176                           
 17177                           ;../nwk/nwk_src/nwkRx.c: 383:     if (member)
 17178  001916  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 17179  001918  B4D8               	btfsc	status,2,c
 17180  00191A  0012               	return	
 17181                           
 17182                           ;../nwk/nwk_src/nwkRx.c: 384:     {;../nwk/nwk_src/nwkRx.c: 385:       frame->payload +=
      +                           sizeof(NwkFrameMulticastHeader_t);
 17183  00191C  EE20 F081          	lfsr	2,129
 17184  001920  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 17185  001922  26D9               	addwf	fsr2l,f,c
 17186  001924  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 17187  001926  22DA               	addwfc	fsr2h,f,c
 17188  001928  0E02               	movlw	2
 17189  00192A  26DE               	addwf	postinc2,f,c
 17190  00192C  0E00               	movlw	0
 17191  00192E  22DD               	addwfc	postdec2,f,c
 17192                           
 17193                           ;../nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 17194  001930  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17195  001936  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17196  00193C  0E22               	movlw	34
 17197  00193E  6EDF               	movwf	indf2,c
 17198  001940  0012               	return	
 17199  001942                     l16149:
 17200                           
 17201                           ;../nwk/nwk_src/nwkRx.c: 397:   {;../nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header-
      +                          >macDstAddr && nwkIb.addr != header->nwkDstAddr &&
 17202  001942  EE20 F005          	lfsr	2,5
 17203  001946  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17204  001948  26D9               	addwf	fsr2l,f,c
 17205  00194A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17206  00194C  22DA               	addwfc	fsr2h,f,c
 17207  00194E  28DE               	incf	postinc2,w,c
 17208  001950  E121               	bnz	l16157
 17209  001952  28DE               	incf	postinc2,w,c
 17210  001954  A4D8               	btfss	status,2,c
 17211  001956  D01E               	goto	l16157
 17212  001958  EE20 F00D          	lfsr	2,13
 17213  00195C  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17214  00195E  26D9               	addwf	fsr2l,f,c
 17215  001960  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17216  001962  22DA               	addwfc	fsr2h,f,c
 17217  001964  0101               	movlb	1	; () banked
 17218  001966  5100               	movf	_nwkIb& (0+255),w,b
 17219  001968  18DE               	xorwf	postinc2,w,c
 17220  00196A  E104               	bnz	u16470
 17221  00196C  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17222  00196E  18DE               	xorwf	postinc2,w,c
 17223  001970  B4D8               	btfsc	status,2,c
 17224  001972  D010               	goto	l16157
 17225  001974                     u16470:
 17226                           
 17227                           ; BSR set to: 1
 17228  001974  EE20 F009          	lfsr	2,9
 17229  001978  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17230  00197A  26D9               	addwf	fsr2l,f,c
 17231  00197C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17232  00197E  22DA               	addwfc	fsr2h,f,c
 17233  001980  B4DF               	btfsc	indf2,2,c
 17234  001982  D008               	goto	l16157
 17235                           
 17236                           ; BSR set to: 1
 17237                           ;../nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 17238  001984  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 17239  00198A  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 17240  001990  EC81  F023         	call	_nwkTxBroadcastFrame	;wreg free
 17241  001994                     l16157:
 17242                           
 17243                           ;../nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == head
      +                          er->nwkDstAddr)
 17244  001994  EE20 F00D          	lfsr	2,13
 17245  001998  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17246  00199A  26D9               	addwf	fsr2l,f,c
 17247  00199C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17248  00199E  22DA               	addwfc	fsr2h,f,c
 17249  0019A0  0101               	movlb	1	; () banked
 17250  0019A2  5100               	movf	_nwkIb& (0+255),w,b
 17251  0019A4  18DE               	xorwf	postinc2,w,c
 17252  0019A6  E104               	bnz	u16490
 17253  0019A8  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17254  0019AA  18DE               	xorwf	postinc2,w,c
 17255  0019AC  B4D8               	btfsc	status,2,c
 17256  0019AE  D00B               	goto	u16500
 17257  0019B0                     u16490:
 17258                           
 17259                           ; BSR set to: 1
 17260  0019B0  EE20 F00D          	lfsr	2,13
 17261  0019B4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17262  0019B6  26D9               	addwf	fsr2l,f,c
 17263  0019B8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17264  0019BA  22DA               	addwfc	fsr2h,f,c
 17265  0019BC  28DE               	incf	postinc2,w,c
 17266  0019BE  E10C               	bnz	l16163
 17267  0019C0  28DE               	incf	postinc2,w,c
 17268  0019C2  A4D8               	btfss	status,2,c
 17269  0019C4  D009               	goto	l16163
 17270  0019C6                     u16500:
 17271                           
 17272                           ; BSR set to: 1
 17273                           ;../nwk/nwk_src/nwkRx.c: 403:     {;../nwk/nwk_src/nwkRx.c: 409:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 17274  0019C6  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17275  0019CC  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17276  0019D2  0E22               	movlw	34
 17277  0019D4  6EDF               	movwf	indf2,c
 17278                           
 17279                           ;../nwk/nwk_src/nwkRx.c: 410:     }
 17280  0019D6  0012               	return	
 17281  0019D8                     l16163:
 17282                           
 17283                           ; BSR set to: 1
 17284  0019D8  EE20 F005          	lfsr	2,5
 17285  0019DC  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17286  0019DE  26D9               	addwf	fsr2l,f,c
 17287  0019E0  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17288  0019E2  22DA               	addwfc	fsr2h,f,c
 17289  0019E4  5100               	movf	_nwkIb& (0+255),w,b
 17290  0019E6  18DE               	xorwf	postinc2,w,c
 17291  0019E8  E10C               	bnz	l2130
 17292  0019EA  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17293  0019EC  18DE               	xorwf	postinc2,w,c
 17294  0019EE  A4D8               	btfss	status,2,c
 17295  0019F0  0012               	return	
 17296                           
 17297                           ; BSR set to: 1
 17298                           ;../nwk/nwk_src/nwkRx.c: 414:     {;../nwk/nwk_src/nwkRx.c: 415:       frame->state = NW
      +                          K_RX_STATE_ROUTE;
 17299  0019F2  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17300  0019F8  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17301  0019FE  0E23               	movlw	35
 17302  001A00  6EDF               	movwf	indf2,c
 17303  001A02                     l2130:
 17304  001A02  0012               	return		;funcret
 17305  001A04                     __end_of_nwkRxHandleReceivedFrame:
 17306                           	opt callstack 0
 17307                           
 17308 ;; *************** function _nwkTxBroadcastFrame *****************
 17309 ;; Defined at:
 17310 ;;		line 159 in file "../nwk/nwk_src/nwkTx.c"
 17311 ;; Parameters:    Size  Location     Type
 17312 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 17313 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17314 ;; Auto vars:     Size  Location     Type
 17315 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
 17316 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17317 ;; Return value:  Size  Location     Type
 17318 ;;                  1    wreg      void 
 17319 ;; Registers used:
 17320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17321 ;; Tracked objects:
 17322 ;;		On entry : 0/1
 17323 ;;		On exit  : 0/0
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17329 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17330 ;;Total ram usage:        5 bytes
 17331 ;; Hardware stack levels used:    1
 17332 ;; Hardware stack levels required when called:    9
 17333 ;; This function calls:
 17334 ;;		_memcpy
 17335 ;;		_nwkFrameAlloc
 17336 ;;		_rand
 17337 ;; This function is called by:
 17338 ;;		_nwkRxHandleReceivedFrame
 17339 ;; This function uses a non-reentrant model
 17340 ;;
 17341                           
 17342                           	psect	text106
 17343  004702                     __ptext106:
 17344                           	opt callstack 0
 17345  004702                     _nwkTxBroadcastFrame:
 17346                           	opt callstack 17
 17347                           
 17348                           ;../nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkTx.c: 160: {;../nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;../nwk/nwk_src/nwk
      +                          Tx.c: 163:   if (((void*)0) == (newFrame = nwkFrameAlloc()))
 17349                           
 17350                           ;incstack = 0
 17351  004702  EC50  F033         	call	_nwkFrameAlloc	;wreg free
 17352  004706  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 17353  00470C  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 17354  004712  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17355  004714  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17356  004716  B4D8               	btfsc	status,2,c
 17357  004718  0012               	return	
 17358                           
 17359                           ;../nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 17360  00471A  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 17361  004720  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 17362  004726  0E12               	movlw	18
 17363  004728  6EDF               	movwf	indf2,c
 17364                           
 17365                           ;../nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 17366  00472A  EE20 F001          	lfsr	2,1
 17367  00472E  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17368  004730  26D9               	addwf	fsr2l,f,c
 17369  004732  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17370  004734  22DA               	addwfc	fsr2h,f,c
 17371  004736  EE10 F001          	lfsr	1,1
 17372  00473A  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17373  00473C  26E1               	addwf	fsr1l,f,c
 17374  00473E  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17375  004740  22E2               	addwfc	fsr1h,f,c
 17376  004742  006F FF7F FFE7     	movff	indf2,indf1
 17377                           
 17378                           ;../nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 17379  004748  EE20 F083          	lfsr	2,131
 17380  00474C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17381  00474E  26D9               	addwf	fsr2l,f,c
 17382  004750  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17383  004752  22DA               	addwfc	fsr2h,f,c
 17384  004754  0E00               	movlw	0
 17385  004756  6EDF               	movwf	indf2,c
 17386                           
 17387                           ;../nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 17388  004758  EC28  F028         	call	_rand	;wreg free
 17389  00475C  0E07               	movlw	7
 17390  00475E  161A               	andwf	?_rand^0,f,c
 17391  004760  0E00               	movlw	0
 17392  004762  161B               	andwf	(?_rand+1)^0,f,c
 17393  004764  0E01               	movlw	1
 17394  004766  261A               	addwf	?_rand^0,f,c
 17395  004768  0E00               	movlw	0
 17396  00476A  221B               	addwfc	(?_rand+1)^0,f,c
 17397  00476C  EE20 F084          	lfsr	2,132
 17398  004770  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17399  004772  26D9               	addwf	fsr2l,f,c
 17400  004774  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17401  004776  22DA               	addwfc	fsr2h,f,c
 17402  004778  0060  F06B  FFDE   	movff	?_rand,postinc2
 17403  00477E  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 17404                           
 17405                           ; BSR set to: 1
 17406                           ;../nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
 17407  004784  EE20 F087          	lfsr	2,135
 17408  004788  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17409  00478A  26D9               	addwf	fsr2l,f,c
 17410  00478C  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17411  00478E  22DA               	addwfc	fsr2h,f,c
 17412  004790  0E00               	movlw	0
 17413  004792  6EDE               	movwf	postinc2,c
 17414  004794  0E00               	movlw	0
 17415  004796  6EDD               	movwf	postdec2,c
 17416                           
 17417                           ; BSR set to: 1
 17418                           ;../nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 17419  004798  0E02               	movlw	2
 17420  00479A  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
 17421  00479C  6E08               	movwf	memcpy@d1^0,c
 17422  00479E  0E00               	movlw	0
 17423  0047A0  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17424  0047A2  6E09               	movwf	(memcpy@d1+1)^0,c
 17425  0047A4  0E02               	movlw	2
 17426  0047A6  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
 17427  0047A8  6E0A               	movwf	memcpy@s1^0,c
 17428  0047AA  0E00               	movlw	0
 17429  0047AC  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17430  0047AE  6E0B               	movwf	(memcpy@s1+1)^0,c
 17431  0047B0  EE20 F001          	lfsr	2,1
 17432  0047B4  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17433  0047B6  26D9               	addwf	fsr2l,f,c
 17434  0047B8  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17435  0047BA  22DA               	addwfc	fsr2h,f,c
 17436  0047BC  50DF               	movf	indf2,w,c
 17437  0047BE  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
 17438  0047C0  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
 17439  0047C2  6E0C               	movwf	memcpy@n^0,c
 17440  0047C4  6A0D               	clrf	(memcpy@n+1)^0,c
 17441  0047C6  EC50  F03A         	call	_memcpy	;wreg free
 17442                           
 17443                           ;../nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 17444  0047CA  EE20 F002          	lfsr	2,2
 17445  0047CE  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17446  0047D0  26D9               	addwf	fsr2l,f,c
 17447  0047D2  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17448  0047D4  22DA               	addwfc	fsr2h,f,c
 17449  0047D6  0E41               	movlw	65
 17450  0047D8  6EDE               	movwf	postinc2,c
 17451  0047DA  0E88               	movlw	136
 17452  0047DC  6EDD               	movwf	postdec2,c
 17453                           
 17454                           ;../nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 17455  0047DE  EE20 F007          	lfsr	2,7
 17456  0047E2  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17457  0047E4  26D9               	addwf	fsr2l,f,c
 17458  0047E6  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17459  0047E8  22DA               	addwfc	fsr2h,f,c
 17460  0047EA  0EFF               	movlw	255
 17461  0047EC  6EDE               	movwf	postinc2,c
 17462  0047EE  0EFF               	movlw	255
 17463  0047F0  6EDD               	movwf	postdec2,c
 17464                           
 17465                           ;../nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId
      +                          ;
 17466  0047F2  EE20 F005          	lfsr	2,5
 17467  0047F6  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17468  0047F8  26D9               	addwf	fsr2l,f,c
 17469  0047FA  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17470  0047FC  22DA               	addwfc	fsr2h,f,c
 17471  0047FE  EE10 F005          	lfsr	1,5
 17472  004802  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17473  004804  26E1               	addwf	fsr1l,f,c
 17474  004806  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17475  004808  22E2               	addwfc	fsr1h,f,c
 17476  00480A  006F FF7B FFE6     	movff	postinc2,postinc1
 17477  004810  006F FF77 FFE5     	movff	postdec2,postdec1
 17478                           
 17479                           ;../nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 17480  004816  EE20 F009          	lfsr	2,9
 17481  00481A  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17482  00481C  26D9               	addwf	fsr2l,f,c
 17483  00481E  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17484  004820  22DA               	addwfc	fsr2h,f,c
 17485  004822  0060  F403  FFDE   	movff	_nwkIb,postinc2
 17486  004828  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 17487                           
 17488                           ;../nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 17489  00482E  0101               	movlb	1	; () banked
 17490  004830  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 17491  004832  EE20 F004          	lfsr	2,4
 17492  004836  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17493  004838  26D9               	addwf	fsr2l,f,c
 17494  00483A  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17495  00483C  22DA               	addwfc	fsr2h,f,c
 17496  00483E  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 17497  004844  0012               	return		;funcret
 17498  004846                     __end_of_nwkTxBroadcastFrame:
 17499                           	opt callstack 0
 17500                           
 17501 ;; *************** function _nwkRxRejectDuplicate *****************
 17502 ;; Defined at:
 17503 ;;		line 200 in file "../nwk/nwk_src/nwkRx.c"
 17504 ;; Parameters:    Size  Location     Type
 17505 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
 17506 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 17507 ;; Auto vars:     Size  Location     Type
 17508 ;;  shift           1   23[COMRAM] unsigned char 
 17509 ;;  diff            1   25[COMRAM] unsigned char 
 17510 ;;  i               1   24[COMRAM] unsigned char 
 17511 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
 17512 ;;		 -> nwkRxDuplicateRejectionTable(50), 
 17513 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
 17514 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
 17515 ;; Return value:  Size  Location     Type
 17516 ;;                  1    wreg      _Bool 
 17517 ;; Registers used:
 17518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17519 ;; Tracked objects:
 17520 ;;		On entry : 0/1
 17521 ;;		On exit  : 0/0
 17522 ;;		Unchanged: 0/0
 17523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17525 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17526 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17527 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17528 ;;Total ram usage:       13 bytes
 17529 ;; Hardware stack levels used:    1
 17530 ;; Hardware stack levels required when called:    9
 17531 ;; This function calls:
 17532 ;;		_SYS_TimerStart
 17533 ;;		_nwkRouteRemove
 17534 ;; This function is called by:
 17535 ;;		_nwkRxHandleReceivedFrame
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539                           	psect	text107
 17540  002A98                     __ptext107:
 17541                           	opt callstack 0
 17542  002A98                     _nwkRxRejectDuplicate:
 17543                           	opt callstack 17
 17544                           
 17545                           ;../nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header
      +                          );../nwk/nwk_src/nwkRx.c: 201: {;../nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEnt
      +                          ry_t *entry;;../nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((
      +                          void*)0);
 17546                           
 17547                           ;incstack = 0
 17548  002A98  0E00               	movlw	0
 17549  002A9A  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
 17550  002A9C  0E00               	movlw	0
 17551  002A9E  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
 17552                           
 17553                           ;../nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
 17554  002AA0  0E00               	movlw	0
 17555  002AA2  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
 17556  002AA4                     l15327:
 17557                           
 17558                           ;../nwk/nwk_src/nwkRx.c: 206:   {;../nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplica
      +                          teRejectionTable[i];
 17559  002AA4  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
 17560  002AA6  0D05               	mullw	5
 17561  002AA8  0EC0               	movlw	low _nwkRxDuplicateRejectionTable
 17562  002AAA  24F3               	addwf	243,w,c
 17563  002AAC  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
 17564  002AAE  0E03               	movlw	high _nwkRxDuplicateRejectionTable
 17565  002AB0  20F4               	addwfc	prodh,w,c
 17566  002AB2  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
 17567                           
 17568                           ;../nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 17569  002AB4  EE20 F004          	lfsr	2,4
 17570  002AB8  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17571  002ABA  26D9               	addwf	fsr2l,f,c
 17572  002ABC  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17573  002ABE  22DA               	addwfc	fsr2h,f,c
 17574  002AC0  50DF               	movf	indf2,w,c
 17575  002AC2  B4D8               	btfsc	status,2,c
 17576  002AC4  D0B3               	goto	l15367
 17577  002AC6  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 17578  002ACC  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 17579  002AD2  EE10 F00B          	lfsr	1,11
 17580  002AD6  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17581  002AD8  26E1               	addwf	fsr1l,f,c
 17582  002ADA  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17583  002ADC  22E2               	addwfc	fsr1h,f,c
 17584  002ADE  50DE               	movf	postinc2,w,c
 17585  002AE0  18E6               	xorwf	postinc1,w,c
 17586  002AE2  E103               	bnz	u15041
 17587  002AE4  50DE               	movf	postinc2,w,c
 17588  002AE6  18E6               	xorwf	postinc1,w,c
 17589  002AE8  A4D8               	btfss	status,2,c
 17590  002AEA                     u15041:
 17591  002AEA  D0A0               	goto	l15367
 17592                           
 17593                           ;../nwk/nwk_src/nwkRx.c: 210:     {;../nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (i
      +                          nt8_t)entry->seq - header->nwkSeq;
 17594  002AEC  EE20 F00A          	lfsr	2,10
 17595  002AF0  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17596  002AF2  26D9               	addwf	fsr2l,f,c
 17597  002AF4  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17598  002AF6  22DA               	addwfc	fsr2h,f,c
 17599  002AF8  50DF               	movf	indf2,w,c
 17600  002AFA  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 17601  002AFC  EE20 F002          	lfsr	2,2
 17602  002B00  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17603  002B02  26D9               	addwf	fsr2l,f,c
 17604  002B04  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17605  002B06  22DA               	addwfc	fsr2h,f,c
 17606  002B08  50DF               	movf	indf2,w,c
 17607  002B0A  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17608  002B0C  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
 17609  002B0E  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17610  002B10  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
 17611                           
 17612                           ;../nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 17613  002B12  0E08               	movlw	8
 17614  002B14  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
 17615  002B16  D055               	goto	l15355
 17616                           
 17617                           ;../nwk/nwk_src/nwkRx.c: 214:       {;../nwk/nwk_src/nwkRx.c: 215:         if (entry->ma
      +                          sk & (1 << diff))
 17618  002B18  EE20 F003          	lfsr	2,3
 17619  002B1C  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17620  002B1E  26D9               	addwf	fsr2l,f,c
 17621  002B20  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17622  002B22  22DA               	addwfc	fsr2h,f,c
 17623  002B24  50DF               	movf	indf2,w,c
 17624  002B26  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 17625  002B28  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 17626  002B2E  0E01               	movlw	1
 17627  002B30  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
 17628  002B32  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17629  002B34  D002               	goto	u15064
 17630  002B36                     u15065:
 17631  002B36  90D8               	bcf	status,0,c
 17632  002B38  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
 17633  002B3A                     u15064:
 17634  002B3A  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
 17635  002B3C  D7FC               	goto	u15065
 17636  002B3E  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
 17637  002B40  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
 17638  002B42  0900               	iorlw	0
 17639  002B44  B4D8               	btfsc	status,2,c
 17640  002B46  D028               	goto	l15347
 17641                           
 17642                           ;../nwk/nwk_src/nwkRx.c: 216:         {;../nwk/nwk_src/nwkRx.c: 218:           if (nwkIb
      +                          .addr == header->macDstAddr)
 17643  002B48  EE20 F005          	lfsr	2,5
 17644  002B4C  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17645  002B4E  26D9               	addwf	fsr2l,f,c
 17646  002B50  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17647  002B52  22DA               	addwfc	fsr2h,f,c
 17648  002B54  0101               	movlb	1	; () banked
 17649  002B56  5100               	movf	_nwkIb& (0+255),w,b
 17650  002B58  18DE               	xorwf	postinc2,w,c
 17651  002B5A  E11C               	bnz	l15343
 17652  002B5C  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17653  002B5E  18DE               	xorwf	postinc2,w,c
 17654  002B60  A4D8               	btfss	status,2,c
 17655  002B62  D018               	goto	l15343
 17656                           
 17657                           ; BSR set to: 1
 17658                           ;../nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwk
      +                          Fcf.multicast);
 17659  002B64  EE20 F00D          	lfsr	2,13
 17660  002B68  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17661  002B6A  26D9               	addwf	fsr2l,f,c
 17662  002B6C  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17663  002B6E  22DA               	addwfc	fsr2h,f,c
 17664  002B70  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 17665  002B76  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 17666  002B7C  EE20 F009          	lfsr	2,9
 17667  002B80  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17668  002B82  26D9               	addwf	fsr2l,f,c
 17669  002B84  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17670  002B86  22DA               	addwfc	fsr2h,f,c
 17671  002B88  0E00               	movlw	0
 17672  002B8A  B6DF               	btfsc	indf2,3,c
 17673  002B8C  0E01               	movlw	1
 17674  002B8E  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 17675  002B90  ECB7  F041         	call	_nwkRouteRemove	;wreg free
 17676  002B94                     l15343:
 17677                           
 17678                           ;../nwk/nwk_src/nwkRx.c: 221:           return 1;
 17679  002B94  0E01               	movlw	1
 17680  002B96  0012               	return	
 17681  002B98                     l15347:
 17682                           
 17683                           ;../nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 17684  002B98  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 17685  002B9E  0E01               	movlw	1
 17686  002BA0  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17687  002BA2  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 17688  002BA4  D002               	goto	u15094
 17689  002BA6                     u15095:
 17690  002BA6  90D8               	bcf	status,0,c
 17691  002BA8  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17692  002BAA                     u15094:
 17693  002BAA  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 17694  002BAC  D7FC               	goto	u15095
 17695  002BAE  EE20 F003          	lfsr	2,3
 17696  002BB2  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17697  002BB4  26D9               	addwf	fsr2l,f,c
 17698  002BB6  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17699  002BB8  22DA               	addwfc	fsr2h,f,c
 17700  002BBA  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17701  002BBC  12DF               	iorwf	indf2,f,c
 17702  002BBE                     l15349:
 17703                           
 17704                           ;../nwk/nwk_src/nwkRx.c: 225:         return 0;
 17705  002BBE  0E00               	movlw	0
 17706  002BC0  0012               	return	
 17707  002BC2                     l15355:
 17708                           
 17709                           ;../nwk/nwk_src/nwkRx.c: 228:       {;../nwk/nwk_src/nwkRx.c: 229:         uint8_t shift
      +                           = -(int8_t)diff;
 17710  002BC2  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
 17711  002BC4  0800               	sublw	0
 17712  002BC6  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
 17713                           
 17714                           ;../nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 17715  002BC8  EE20 F00A          	lfsr	2,10
 17716  002BCC  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17717  002BCE  26D9               	addwf	fsr2l,f,c
 17718  002BD0  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17719  002BD2  22DA               	addwfc	fsr2h,f,c
 17720  002BD4  EE10 F002          	lfsr	1,2
 17721  002BD8  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17722  002BDA  26E1               	addwf	fsr1l,f,c
 17723  002BDC  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17724  002BDE  22E2               	addwfc	fsr1h,f,c
 17725  002BE0  006F FF7F FFE7     	movff	indf2,indf1
 17726                           
 17727                           ;../nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 17728  002BE6  EE20 F003          	lfsr	2,3
 17729  002BEA  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17730  002BEC  26D9               	addwf	fsr2l,f,c
 17731  002BEE  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17732  002BF0  22DA               	addwfc	fsr2h,f,c
 17733  002BF2  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 17734  002BF8  EE10 F003          	lfsr	1,3
 17735  002BFC  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17736  002BFE  26E1               	addwf	fsr1l,f,c
 17737  002C00  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17738  002C02  22E2               	addwfc	fsr1h,f,c
 17739  002C04  50E7               	movf	indf1,w,c
 17740  002C06  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17741  002C08  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 17742  002C0A  D002               	goto	u15104
 17743  002C0C                     u15105:
 17744  002C0C  90D8               	bcf	status,0,c
 17745  002C0E  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17746  002C10                     u15104:
 17747  002C10  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 17748  002C12  D7FC               	goto	u15105
 17749  002C14  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17750  002C16  0901               	iorlw	1
 17751  002C18  6EDF               	movwf	indf2,c
 17752                           
 17753                           ;../nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
 17754  002C1A  EE20 F004          	lfsr	2,4
 17755  002C1E  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17756  002C20  26D9               	addwf	fsr2l,f,c
 17757  002C22  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17758  002C24  22DA               	addwfc	fsr2h,f,c
 17759  002C26  0E01               	movlw	1
 17760  002C28  6EDF               	movwf	indf2,c
 17761  002C2A  D7C9               	goto	l15349
 17762  002C2C                     l15367:
 17763                           
 17764                           ;../nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 17765  002C2C  EE20 F004          	lfsr	2,4
 17766  002C30  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17767  002C32  26D9               	addwf	fsr2l,f,c
 17768  002C34  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17769  002C36  22DA               	addwfc	fsr2h,f,c
 17770  002C38  50DF               	movf	indf2,w,c
 17771  002C3A  A4D8               	btfss	status,2,c
 17772  002C3C  D006               	goto	l15371
 17773                           
 17774                           ;../nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 17775  002C3E  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 17776  002C44  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 17777  002C4A                     l15371:
 17778                           
 17779                           ;../nwk/nwk_src/nwkRx.c: 240:   }
 17780  002C4A  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
 17781  002C4C  0E09               	movlw	9
 17782  002C4E  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
 17783  002C50  D729               	goto	l15327
 17784                           
 17785                           ;../nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
 17786  002C52  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17787  002C54  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17788  002C56  B4D8               	btfsc	status,2,c
 17789  002C58  D79D               	goto	l15343
 17790                           
 17791                           ;../nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 17792  002C5A  EE20 F00B          	lfsr	2,11
 17793  002C5E  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17794  002C60  26D9               	addwf	fsr2l,f,c
 17795  002C62  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17796  002C64  22DA               	addwfc	fsr2h,f,c
 17797  002C66  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
 17798  002C6C  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
 17799  002C72  006F FF7B FFE6     	movff	postinc2,postinc1
 17800  002C78  006F FF77 FFE5     	movff	postdec2,postdec1
 17801                           
 17802                           ;../nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 17803  002C7E  EE20 F00A          	lfsr	2,10
 17804  002C82  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17805  002C84  26D9               	addwf	fsr2l,f,c
 17806  002C86  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17807  002C88  22DA               	addwfc	fsr2h,f,c
 17808  002C8A  EE10 F002          	lfsr	1,2
 17809  002C8E  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17810  002C90  26E1               	addwf	fsr1l,f,c
 17811  002C92  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17812  002C94  22E2               	addwfc	fsr1h,f,c
 17813  002C96  006F FF7F FFE7     	movff	indf2,indf1
 17814                           
 17815                           ;../nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 17816  002C9C  EE20 F003          	lfsr	2,3
 17817  002CA0  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17818  002CA2  26D9               	addwf	fsr2l,f,c
 17819  002CA4  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17820  002CA6  22DA               	addwfc	fsr2h,f,c
 17821  002CA8  0E01               	movlw	1
 17822  002CAA  6EDF               	movwf	indf2,c
 17823                           
 17824                           ;../nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
 17825  002CAC  EE20 F004          	lfsr	2,4
 17826  002CB0  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17827  002CB2  26D9               	addwf	fsr2l,f,c
 17828  002CB4  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17829  002CB6  22DA               	addwfc	fsr2h,f,c
 17830  002CB8  0E01               	movlw	1
 17831  002CBA  6EDF               	movwf	indf2,c
 17832                           
 17833                           ;../nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 17834  002CBC  0EA5               	movlw	low _nwkRxDuplicateRejectionTimer
 17835  002CBE  6E10               	movwf	SYS_TimerStart@timer^0,c
 17836  002CC0  0E01               	movlw	high _nwkRxDuplicateRejectionTimer
 17837  002CC2  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 17838  002CC4  EC26  F044         	call	_SYS_TimerStart	;wreg free
 17839  002CC8  D77A               	goto	l15349
 17840  002CCA                     __end_of_nwkRxRejectDuplicate:
 17841                           	opt callstack 0
 17842                           
 17843 ;; *************** function _SYS_TimerStart *****************
 17844 ;; Defined at:
 17845 ;;		line 70 in file "../sys/sys_src/sysTimer.c"
 17846 ;; Parameters:    Size  Location     Type
 17847 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
 17848 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17849 ;; Auto vars:     Size  Location     Type
 17850 ;;		None
 17851 ;; Return value:  Size  Location     Type
 17852 ;;                  1    wreg      void 
 17853 ;; Registers used:
 17854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17855 ;; Tracked objects:
 17856 ;;		On entry : 0/0
 17857 ;;		On exit  : 0/0
 17858 ;;		Unchanged: 0/0
 17859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17864 ;;Total ram usage:        2 bytes
 17865 ;; Hardware stack levels used:    1
 17866 ;; Hardware stack levels required when called:    8
 17867 ;; This function calls:
 17868 ;;		_SYS_TimerStarted
 17869 ;;		_placeTimer
 17870 ;; This function is called by:
 17871 ;;		_nwkRxDuplicateRejectionTimerHandler
 17872 ;;		_nwkRxRejectDuplicate
 17873 ;;		_nwkTxAckWaitTimerHandler
 17874 ;;		_nwkTxDelayTimerHandler
 17875 ;;		_nwkTxTaskHandler
 17876 ;; This function uses a non-reentrant model
 17877 ;;
 17878                           
 17879                           	psect	text108
 17880  00884C                     __ptext108:
 17881                           	opt callstack 0
 17882  00884C                     _SYS_TimerStart:
 17883                           	opt callstack 19
 17884                           
 17885                           ;../sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);../sys/sys_src/s
      +                          ysTimer.c: 71: {;../sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 17886                           
 17887                           ;incstack = 0
 17888  00884C  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 17889  008852  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 17890  008858  ECF8  F03F         	call	_SYS_TimerStarted	;wreg free
 17891  00885C  0900               	iorlw	0
 17892  00885E  A4D8               	btfss	status,2,c
 17893  008860  0012               	return	
 17894                           
 17895                           ;../sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 17896  008862  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
 17897  008868  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 17898  00886E  EC5C  F01C         	call	_placeTimer	;wreg free
 17899  008872  0012               	return		;funcret
 17900  008874                     __end_of_SYS_TimerStart:
 17901                           	opt callstack 0
 17902                           
 17903 ;; *************** function _placeTimer *****************
 17904 ;; Defined at:
 17905 ;;		line 146 in file "../sys/sys_src/sysTimer.c"
 17906 ;; Parameters:    Size  Location     Type
 17907 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 17908 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17909 ;; Auto vars:     Size  Location     Type
 17910 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
 17911 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17912 ;;  timeout         4    7[COMRAM] unsigned long 
 17913 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
 17914 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17915 ;; Return value:  Size  Location     Type
 17916 ;;                  1    wreg      void 
 17917 ;; Registers used:
 17918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17919 ;; Tracked objects:
 17920 ;;		On entry : 0/0
 17921 ;;		On exit  : 0/0
 17922 ;;		Unchanged: 0/0
 17923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17925 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17927 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17928 ;;Total ram usage:       14 bytes
 17929 ;; Hardware stack levels used:    1
 17930 ;; Hardware stack levels required when called:    7
 17931 ;; This function calls:
 17932 ;;		Nothing
 17933 ;; This function is called by:
 17934 ;;		_SYS_TimerStart
 17935 ;;		_SYS_TimerTaskHandler
 17936 ;; This function uses a non-reentrant model
 17937 ;;
 17938                           
 17939                           	psect	text109
 17940  0038B8                     __ptext109:
 17941                           	opt callstack 0
 17942  0038B8                     _placeTimer:
 17943                           	opt callstack 21
 17944                           
 17945                           ;../sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 147: {;../sys/sys_src/sysTimer.c: 148:   if (timers)
 17946                           
 17947                           ;incstack = 0
 17948  0038B8  0100               	movlb	0	; () banked
 17949  0038BA  51E8               	movf	_timers& (0+255),w,b
 17950  0038BC  11E9               	iorwf	(_timers+1)& (0+255),w,b
 17951  0038BE  B4D8               	btfsc	status,2,c
 17952  0038C0  D0A8               	goto	l14787
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;../sys/sys_src/sysTimer.c: 149:   {;../sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *pr
      +                          ev = ((void*)0);
 17956  0038C2  0E00               	movlw	0
 17957  0038C4  6E0C               	movwf	placeTimer@prev^0,c
 17958  0038C6  0E00               	movlw	0
 17959  0038C8  6E0D               	movwf	(placeTimer@prev+1)^0,c
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;../sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 17963  0038CA  EE20 F006          	lfsr	2,6
 17964  0038CE  5002               	movf	placeTimer@timer^0,w,c
 17965  0038D0  26D9               	addwf	fsr2l,f,c
 17966  0038D2  5003               	movf	(placeTimer@timer+1)^0,w,c
 17967  0038D4  22DA               	addwfc	fsr2h,f,c
 17968  0038D6  006F FF78  F008    	movff	postinc2,placeTimer@timeout
 17969  0038DC  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
 17970  0038E2  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
 17971  0038E8  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;../sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 17975  0038EE  0060  F3A0  F00E   	movff	_timers,placeTimer@t
 17976  0038F4  0060  F3A4  F00F   	movff	_timers+1,placeTimer@t+1
 17977  0038FA  D03F               	goto	l14773
 17978  0038FC                     l14763:
 17979                           
 17980                           ;../sys/sys_src/sysTimer.c: 154:     {;../sys/sys_src/sysTimer.c: 155:       if (timeout
      +                           < t->timeout)
 17981  0038FC  EE20 F002          	lfsr	2,2
 17982  003900  500E               	movf	placeTimer@t^0,w,c
 17983  003902  26D9               	addwf	fsr2l,f,c
 17984  003904  500F               	movf	(placeTimer@t+1)^0,w,c
 17985  003906  22DA               	addwfc	fsr2h,f,c
 17986  003908  50DE               	movf	postinc2,w,c
 17987  00390A  5C08               	subwf	placeTimer@timeout^0,w,c
 17988  00390C  50DE               	movf	postinc2,w,c
 17989  00390E  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
 17990  003910  50DE               	movf	postinc2,w,c
 17991  003912  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
 17992  003914  50DE               	movf	postinc2,w,c
 17993  003916  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
 17994  003918  B0D8               	btfsc	status,0,c
 17995  00391A  D00F               	goto	l14769
 17996                           
 17997                           ;../sys/sys_src/sysTimer.c: 156:       {;../sys/sys_src/sysTimer.c: 157:          t->tim
      +                          eout -= timeout;
 17998  00391C  EE20 F002          	lfsr	2,2
 17999  003920  500E               	movf	placeTimer@t^0,w,c
 18000  003922  26D9               	addwf	fsr2l,f,c
 18001  003924  500F               	movf	(placeTimer@t+1)^0,w,c
 18002  003926  22DA               	addwfc	fsr2h,f,c
 18003  003928  5008               	movf	placeTimer@timeout^0,w,c
 18004  00392A  5EDE               	subwf	postinc2,f,c
 18005  00392C  5009               	movf	(placeTimer@timeout+1)^0,w,c
 18006  00392E  5ADE               	subwfb	postinc2,f,c
 18007  003930  500A               	movf	(placeTimer@timeout+2)^0,w,c
 18008  003932  5ADE               	subwfb	postinc2,f,c
 18009  003934  500B               	movf	(placeTimer@timeout+3)^0,w,c
 18010  003936  5ADE               	subwfb	postinc2,f,c
 18011                           
 18012                           ;../sys/sys_src/sysTimer.c: 158:          break;
 18013  003938  D024               	goto	u14360
 18014  00393A                     l14769:
 18015                           
 18016                           ;../sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 18017  00393A  EE20 F002          	lfsr	2,2
 18018  00393E  500E               	movf	placeTimer@t^0,w,c
 18019  003940  26D9               	addwf	fsr2l,f,c
 18020  003942  500F               	movf	(placeTimer@t+1)^0,w,c
 18021  003944  22DA               	addwfc	fsr2h,f,c
 18022  003946  50DE               	movf	postinc2,w,c
 18023  003948  5E08               	subwf	placeTimer@timeout^0,f,c
 18024  00394A  50DE               	movf	postinc2,w,c
 18025  00394C  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
 18026  00394E  50DE               	movf	postinc2,w,c
 18027  003950  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
 18028  003952  50DD               	movf	postdec2,w,c
 18029  003954  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
 18030                           
 18031                           ;../sys/sys_src/sysTimer.c: 163:       prev = t;
 18032  003956  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
 18033  00395C  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
 18034                           
 18035                           ;../sys/sys_src/sysTimer.c: 164:     }
 18036  003962  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
 18037  003968  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
 18038  00396E  006F FF78  F00E    	movff	postinc2,placeTimer@t
 18039  003974  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
 18040  00397A                     l14773:
 18041  00397A  500E               	movf	placeTimer@t^0,w,c
 18042  00397C  100F               	iorwf	(placeTimer@t+1)^0,w,c
 18043  00397E  A4D8               	btfss	status,2,c
 18044  003980  D7BD               	goto	l14763
 18045  003982                     u14360:
 18046                           
 18047                           ;../sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 18048  003982  EE20 F002          	lfsr	2,2
 18049  003986  5002               	movf	placeTimer@timer^0,w,c
 18050  003988  26D9               	addwf	fsr2l,f,c
 18051  00398A  5003               	movf	(placeTimer@timer+1)^0,w,c
 18052  00398C  22DA               	addwfc	fsr2h,f,c
 18053  00398E  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
 18054  003994  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
 18055  00399A  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
 18056  0039A0  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
 18057                           
 18058                           ;../sys/sys_src/sysTimer.c: 168:     if (prev)
 18059  0039A6  500C               	movf	placeTimer@prev^0,w,c
 18060  0039A8  100D               	iorwf	(placeTimer@prev+1)^0,w,c
 18061  0039AA  B4D8               	btfsc	status,2,c
 18062  0039AC  D01F               	goto	l14783
 18063                           
 18064                           ;../sys/sys_src/sysTimer.c: 169:     {;../sys/sys_src/sysTimer.c: 170:       timer->next
      +                           = prev->next;
 18065  0039AE  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 18066  0039B4  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 18067  0039BA  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
 18068  0039C0  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
 18069  0039C6  006F FF7B FFE6     	movff	postinc2,postinc1
 18070  0039CC  006F FF77 FFE5     	movff	postdec2,postdec1
 18071                           
 18072                           ;../sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 18073  0039D2  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 18074  0039D8  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 18075  0039DE  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
 18076  0039E4  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
 18077                           
 18078                           ;../sys/sys_src/sysTimer.c: 172:     }
 18079  0039EA  0012               	return	
 18080  0039EC                     l14783:
 18081                           
 18082                           ;../sys/sys_src/sysTimer.c: 174:     {;../sys/sys_src/sysTimer.c: 175:       timer->next
      +                           = timers;
 18083  0039EC  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 18084  0039F2  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 18085  0039F8  0060  F3A3  FFDE   	movff	_timers,postinc2
 18086  0039FE  0060  F3A7  FFDD   	movff	_timers+1,postdec2
 18087  003A04                     l14785:
 18088                           
 18089                           ;../sys/sys_src/sysTimer.c: 176:       timers = timer;
 18090  003A04  0060  F008  F0E8   	movff	placeTimer@timer,_timers
 18091  003A0A  0060  F00C  F0E9   	movff	placeTimer@timer+1,_timers+1
 18092  003A10  0012               	return	
 18093  003A12                     l14787:
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;../sys/sys_src/sysTimer.c: 180:   {;../sys/sys_src/sysTimer.c: 181:     timer->next = (
      +                          (void*)0);
 18097  003A12  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 18098  003A18  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 18099  003A1E  0E00               	movlw	0
 18100  003A20  6EDE               	movwf	postinc2,c
 18101  003A22  0E00               	movlw	0
 18102  003A24  6EDD               	movwf	postdec2,c
 18103                           
 18104                           ; BSR set to: 0
 18105                           ;../sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 18106  003A26  EE20 F006          	lfsr	2,6
 18107  003A2A  5002               	movf	placeTimer@timer^0,w,c
 18108  003A2C  26D9               	addwf	fsr2l,f,c
 18109  003A2E  5003               	movf	(placeTimer@timer+1)^0,w,c
 18110  003A30  22DA               	addwfc	fsr2h,f,c
 18111  003A32  EE10 F002          	lfsr	1,2
 18112  003A36  5002               	movf	placeTimer@timer^0,w,c
 18113  003A38  26E1               	addwf	fsr1l,f,c
 18114  003A3A  5003               	movf	(placeTimer@timer+1)^0,w,c
 18115  003A3C  22E2               	addwfc	fsr1h,f,c
 18116  003A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 18117  003A44  006F FF7B FFE6     	movff	postinc2,postinc1
 18118  003A4A  006F FF7B FFE6     	movff	postinc2,postinc1
 18119  003A50  006F FF7B FFE6     	movff	postinc2,postinc1
 18120  003A56  D7D6               	goto	l14785
 18121  003A58                     __end_of_placeTimer:
 18122                           	opt callstack 0
 18123                           
 18124 ;; *************** function _SYS_TimerStarted *****************
 18125 ;; Defined at:
 18126 ;;		line 102 in file "../sys/sys_src/sysTimer.c"
 18127 ;; Parameters:    Size  Location     Type
 18128 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 18129 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 18130 ;; Auto vars:     Size  Location     Type
 18131 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
 18132 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 18133 ;; Return value:  Size  Location     Type
 18134 ;;                  1    wreg      _Bool 
 18135 ;; Registers used:
 18136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18137 ;; Tracked objects:
 18138 ;;		On entry : 0/0
 18139 ;;		On exit  : 0/0
 18140 ;;		Unchanged: 0/0
 18141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18145 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18146 ;;Total ram usage:        4 bytes
 18147 ;; Hardware stack levels used:    1
 18148 ;; Hardware stack levels required when called:    7
 18149 ;; This function calls:
 18150 ;;		Nothing
 18151 ;; This function is called by:
 18152 ;;		_SYS_TimerStart
 18153 ;; This function uses a non-reentrant model
 18154 ;;
 18155                           
 18156                           	psect	text110
 18157  007FF0                     __ptext110:
 18158                           	opt callstack 0
 18159  007FF0                     _SYS_TimerStarted:
 18160                           	opt callstack 19
 18161                           
 18162                           ;../sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 103: {;../sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t;
      +                           t = t->next)
 18163                           
 18164                           ;incstack = 0
 18165  007FF0  0060  F3A0  F004   	movff	_timers,SYS_TimerStarted@t
 18166  007FF6  0060  F3A4  F005   	movff	_timers+1,SYS_TimerStarted@t+1
 18167  007FFC  D015               	goto	l14749
 18168  007FFE                     l14741:
 18169                           
 18170                           ;../sys/sys_src/sysTimer.c: 105:     if (t == timer)
 18171  007FFE  5002               	movf	SYS_TimerStarted@timer^0,w,c
 18172  008000  1804               	xorwf	SYS_TimerStarted@t^0,w,c
 18173  008002  E106               	bnz	l14747
 18174  008004  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
 18175  008006  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
 18176  008008  A4D8               	btfss	status,2,c
 18177  00800A  D002               	goto	l14747
 18178                           
 18179                           ;../sys/sys_src/sysTimer.c: 106:       return 1;
 18180  00800C  0E01               	movlw	1
 18181  00800E  0012               	return	
 18182  008010                     l14747:
 18183  008010  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 18184  008016  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 18185  00801C  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
 18186  008022  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
 18187  008028                     l14749:
 18188  008028  5004               	movf	SYS_TimerStarted@t^0,w,c
 18189  00802A  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
 18190  00802C  A4D8               	btfss	status,2,c
 18191  00802E  D7E7               	goto	l14741
 18192                           
 18193                           ;../sys/sys_src/sysTimer.c: 107:   return 0;
 18194  008030  0E00               	movlw	0
 18195  008032  0012               	return		;funcret
 18196  008034                     __end_of_SYS_TimerStarted:
 18197                           	opt callstack 0
 18198                           
 18199 ;; *************** function _nwkRouteFrameReceived *****************
 18200 ;; Defined at:
 18201 ;;		line 194 in file "../nwk/nwk_src/nwkRoute.c"
 18202 ;; Parameters:    Size  Location     Type
 18203 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
 18204 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18205 ;; Auto vars:     Size  Location     Type
 18206 ;;  discovery       1   16[COMRAM] _Bool 
 18207 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
 18208 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18209 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
 18210 ;;		 -> nwkRouteTable(70), NULL(0), 
 18211 ;; Return value:  Size  Location     Type
 18212 ;;                  1    wreg      void 
 18213 ;; Registers used:
 18214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18215 ;; Tracked objects:
 18216 ;;		On entry : 3F/1
 18217 ;;		On exit  : 0/0
 18218 ;;		Unchanged: 0/0
 18219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18221 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18223 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18224 ;;Total ram usage:       12 bytes
 18225 ;; Hardware stack levels used:    1
 18226 ;; Hardware stack levels required when called:    8
 18227 ;; This function calls:
 18228 ;;		_NWK_RouteFindEntry
 18229 ;;		_NWK_RouteNewEntry
 18230 ;; This function is called by:
 18231 ;;		_nwkRxHandleReceivedFrame
 18232 ;; This function uses a non-reentrant model
 18233 ;;
 18234                           
 18235                           	psect	text111
 18236  0036D6                     __ptext111:
 18237                           	opt callstack 0
 18238  0036D6                     _nwkRouteFrameReceived:
 18239                           	opt callstack 18
 18240                           
 18241                           ; BSR set to: 1
 18242                           ;../nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);../nwk/nw
      +                          k_src/nwkRoute.c: 195: {;../nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &f
      +                          rame->header;
 18243                           
 18244                           ;incstack = 0
 18245  0036D6  0E02               	movlw	2
 18246  0036D8  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
 18247  0036DA  6E15               	movwf	nwkRouteFrameReceived@header^0,c
 18248  0036DC  0E00               	movlw	0
 18249  0036DE  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
 18250  0036E0  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
 18251                           
 18252                           ; BSR set to: 1
 18253                           ;../nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;../nwk/nwk_src/nwkRoute
      +                          .c: 200:   if ((header->macSrcAddr & 0x8000) &&
 18254  0036E2  EE20 F007          	lfsr	2,7
 18255  0036E6  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18256  0036E8  26D9               	addwf	fsr2l,f,c
 18257  0036EA  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18258  0036EC  22DA               	addwfc	fsr2h,f,c
 18259  0036EE  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
 18260  0036F4  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
 18261  0036FA  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
 18262  0036FC  D015               	goto	l15215
 18263                           
 18264                           ; BSR set to: 1
 18265  0036FE  EE20 F00B          	lfsr	2,11
 18266  003702  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18267  003704  26D9               	addwf	fsr2l,f,c
 18268  003706  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18269  003708  22DA               	addwfc	fsr2h,f,c
 18270  00370A  EE10 F007          	lfsr	1,7
 18271  00370E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18272  003710  26E1               	addwf	fsr1l,f,c
 18273  003712  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18274  003714  22E2               	addwfc	fsr1h,f,c
 18275  003716  50DE               	movf	postinc2,w,c
 18276  003718  18E6               	xorwf	postinc1,w,c
 18277  00371A  E105               	bnz	u14850
 18278  00371C  50DE               	movf	postinc2,w,c
 18279  00371E  18E6               	xorwf	postinc1,w,c
 18280  003720  A4D8               	btfss	status,2,c
 18281  003722  0012               	return	
 18282  003724  D001               	goto	l15215
 18283  003726                     u14850:
 18284  003726  0012               	return	
 18285  003728                     l15215:
 18286                           
 18287                           ; BSR set to: 1
 18288                           ;../nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
 18289  003728  EE20 F003          	lfsr	2,3
 18290  00372C  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18291  00372E  26D9               	addwf	fsr2l,f,c
 18292  003730  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18293  003732  22DA               	addwfc	fsr2h,f,c
 18294  003734  28DE               	incf	postinc2,w,c
 18295  003736  E103               	bnz	l15219
 18296  003738  28DE               	incf	postinc2,w,c
 18297  00373A  B4D8               	btfsc	status,2,c
 18298  00373C  0012               	return	
 18299  00373E                     l15219:
 18300                           
 18301                           ; BSR set to: 1
 18302                           ;../nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 18303  00373E  EE20 F00B          	lfsr	2,11
 18304  003742  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18305  003744  26D9               	addwf	fsr2l,f,c
 18306  003746  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18307  003748  22DA               	addwfc	fsr2h,f,c
 18308  00374A  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 18309  003750  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 18310  003756  0E00               	movlw	0
 18311  003758  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 18312  00375A  ECCC  F03B         	call	_NWK_RouteFindEntry	;wreg free
 18313  00375E  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 18314  003764  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 18315                           
 18316                           ;../nwk/nwk_src/nwkRoute.c: 209:   if (entry)
 18317  00376A  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18318  00376C  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18319  00376E  B4D8               	btfsc	status,2,c
 18320  003770  D067               	goto	l15241
 18321                           
 18322                           ;../nwk/nwk_src/nwkRoute.c: 210:   {;../nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery
      +                           = (0xffff == header->macDstAddr &&
 18323  003772  0E00               	movlw	0
 18324  003774  6E12               	movwf	_nwkRouteFrameReceived$4139^0,c
 18325  003776  EE20 F005          	lfsr	2,5
 18326  00377A  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18327  00377C  26D9               	addwf	fsr2l,f,c
 18328  00377E  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18329  003780  22DA               	addwfc	fsr2h,f,c
 18330  003782  28DE               	incf	postinc2,w,c
 18331  003784  E113               	bnz	l1937
 18332  003786  28DE               	incf	postinc2,w,c
 18333  003788  A4D8               	btfss	status,2,c
 18334  00378A  D010               	goto	l1937
 18335  00378C  EE20 F00D          	lfsr	2,13
 18336  003790  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18337  003792  26D9               	addwf	fsr2l,f,c
 18338  003794  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18339  003796  22DA               	addwfc	fsr2h,f,c
 18340  003798  0101               	movlb	1	; () banked
 18341  00379A  5100               	movf	_nwkIb& (0+255),w,b
 18342  00379C  18DE               	xorwf	postinc2,w,c
 18343  00379E  E106               	bnz	l1937
 18344  0037A0  5101               	movf	(_nwkIb+1)& (0+255),w,b
 18345  0037A2  18DE               	xorwf	postinc2,w,c
 18346  0037A4  A4D8               	btfss	status,2,c
 18347  0037A6  D002               	goto	l1937
 18348                           
 18349                           ; BSR set to: 1
 18350  0037A8  0E01               	movlw	1
 18351  0037AA  6E12               	movwf	_nwkRouteFrameReceived$4139^0,c
 18352  0037AC                     l1937:
 18353  0037AC  5012               	movf	_nwkRouteFrameReceived$4139^0,w,c
 18354  0037AE  B4D8               	btfsc	status,2,c
 18355  0037B0  D002               	goto	u14900
 18356  0037B2  0E01               	movlw	1
 18357  0037B4  D001               	goto	u14910
 18358  0037B6                     u14900:
 18359  0037B6  0E00               	movlw	0
 18360  0037B8                     u14910:
 18361  0037B8  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
 18362                           
 18363                           ;../nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && fr
      +                          ame->rx.lqi > entry->lqi) || discovery)
 18364  0037BA  EE20 F007          	lfsr	2,7
 18365  0037BE  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18366  0037C0  26D9               	addwf	fsr2l,f,c
 18367  0037C2  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18368  0037C4  22DA               	addwfc	fsr2h,f,c
 18369  0037C6  EE10 F003          	lfsr	1,3
 18370  0037CA  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18371  0037CC  26E1               	addwf	fsr1l,f,c
 18372  0037CE  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18373  0037D0  22E2               	addwfc	fsr1h,f,c
 18374  0037D2  50DE               	movf	postinc2,w,c
 18375  0037D4  18E6               	xorwf	postinc1,w,c
 18376  0037D6  E104               	bnz	u14920
 18377  0037D8  50DE               	movf	postinc2,w,c
 18378  0037DA  18E6               	xorwf	postinc1,w,c
 18379  0037DC  B4D8               	btfsc	status,2,c
 18380  0037DE  D010               	goto	u14930
 18381  0037E0                     u14920:
 18382  0037E0  EE20 F083          	lfsr	2,131
 18383  0037E4  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 18384  0037E6  26D9               	addwf	fsr2l,f,c
 18385  0037E8  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 18386  0037EA  22DA               	addwfc	fsr2h,f,c
 18387  0037EC  EE10 F006          	lfsr	1,6
 18388  0037F0  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18389  0037F2  26E1               	addwf	fsr1l,f,c
 18390  0037F4  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18391  0037F6  22E2               	addwfc	fsr1h,f,c
 18392  0037F8  50DE               	movf	postinc2,w,c
 18393  0037FA  5CE6               	subwf	postinc1,w,c
 18394  0037FC  A0D8               	btfss	status,0,c
 18395  0037FE  D003               	goto	u14940
 18396  003800                     u14930:
 18397  003800  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
 18398  003802  B4D8               	btfsc	status,2,c
 18399  003804  D049               	goto	l15247
 18400  003806                     u14940:
 18401                           
 18402                           ;../nwk/nwk_src/nwkRoute.c: 215:     {;../nwk/nwk_src/nwkRoute.c: 216:       entry->next
      +                          HopAddr = header->macSrcAddr;
 18403  003806  EE20 F007          	lfsr	2,7
 18404  00380A  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18405  00380C  26D9               	addwf	fsr2l,f,c
 18406  00380E  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18407  003810  22DA               	addwfc	fsr2h,f,c
 18408  003812  EE10 F003          	lfsr	1,3
 18409  003816  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18410  003818  26E1               	addwf	fsr1l,f,c
 18411  00381A  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18412  00381C  22E2               	addwfc	fsr1h,f,c
 18413  00381E  006F FF7B FFE6     	movff	postinc2,postinc1
 18414  003824  006F FF77 FFE5     	movff	postdec2,postdec1
 18415                           
 18416                           ;../nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
 18417  00382A  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 18418  003830  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 18419  003836  50DF               	movf	indf2,w,c
 18420  003838  0B0F               	andlw	-241
 18421  00383A  0930               	iorlw	48
 18422  00383C  6EDF               	movwf	indf2,c
 18423  00383E  D02C               	goto	l15247
 18424  003840                     l15241:
 18425                           
 18426                           ;../nwk/nwk_src/nwkRoute.c: 221:   {;../nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_Rou
      +                          teNewEntry();
 18427  003840  EC18  F031         	call	_NWK_RouteNewEntry	;wreg free
 18428  003844  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 18429  00384A  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 18430                           
 18431                           ;../nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
 18432  003850  EE20 F00B          	lfsr	2,11
 18433  003854  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18434  003856  26D9               	addwf	fsr2l,f,c
 18435  003858  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18436  00385A  22DA               	addwfc	fsr2h,f,c
 18437  00385C  EE10 F001          	lfsr	1,1
 18438  003860  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18439  003862  26E1               	addwf	fsr1l,f,c
 18440  003864  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18441  003866  22E2               	addwfc	fsr1h,f,c
 18442  003868  006F FF7B FFE6     	movff	postinc2,postinc1
 18443  00386E  006F FF77 FFE5     	movff	postdec2,postdec1
 18444                           
 18445                           ;../nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
 18446  003874  EE20 F007          	lfsr	2,7
 18447  003878  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18448  00387A  26D9               	addwf	fsr2l,f,c
 18449  00387C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18450  00387E  22DA               	addwfc	fsr2h,f,c
 18451  003880  EE10 F003          	lfsr	1,3
 18452  003884  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18453  003886  26E1               	addwf	fsr1l,f,c
 18454  003888  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18455  00388A  22E2               	addwfc	fsr1h,f,c
 18456  00388C  006F FF7B FFE6     	movff	postinc2,postinc1
 18457  003892  006F FF77 FFE5     	movff	postdec2,postdec1
 18458  003898                     l15247:
 18459                           
 18460                           ;../nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
 18461  003898  EE20 F083          	lfsr	2,131
 18462  00389C  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 18463  00389E  26D9               	addwf	fsr2l,f,c
 18464  0038A0  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 18465  0038A2  22DA               	addwfc	fsr2h,f,c
 18466  0038A4  EE10 F006          	lfsr	1,6
 18467  0038A8  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18468  0038AA  26E1               	addwf	fsr1l,f,c
 18469  0038AC  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18470  0038AE  22E2               	addwfc	fsr1h,f,c
 18471  0038B0  006F FF7F FFE7     	movff	indf2,indf1
 18472  0038B6  0012               	return		;funcret
 18473  0038B8                     __end_of_nwkRouteFrameReceived:
 18474                           	opt callstack 0
 18475                           
 18476 ;; *************** function _NWK_RouteNewEntry *****************
 18477 ;; Defined at:
 18478 ;;		line 105 in file "../nwk/nwk_src/nwkRoute.c"
 18479 ;; Parameters:    Size  Location     Type
 18480 ;;		None
 18481 ;; Auto vars:     Size  Location     Type
 18482 ;;  i               1    5[COMRAM] unsigned char 
 18483 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
 18484 ;;		 -> nwkRouteTable(70), NULL(0), 
 18485 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
 18486 ;;		 -> nwkRouteTable(70), 
 18487 ;; Return value:  Size  Location     Type
 18488 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 18489 ;; Registers used:
 18490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18491 ;; Tracked objects:
 18492 ;;		On entry : 0/1
 18493 ;;		On exit  : 0/0
 18494 ;;		Unchanged: 0/0
 18495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18497 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18499 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18500 ;;Total ram usage:        9 bytes
 18501 ;; Hardware stack levels used:    1
 18502 ;; Hardware stack levels required when called:    7
 18503 ;; This function calls:
 18504 ;;		Nothing
 18505 ;; This function is called by:
 18506 ;;		_nwkRouteFrameReceived
 18507 ;; This function uses a non-reentrant model
 18508 ;;
 18509                           
 18510                           	psect	text112
 18511  006230                     __ptext112:
 18512                           	opt callstack 0
 18513  006230                     _NWK_RouteNewEntry:
 18514                           	opt callstack 18
 18515                           
 18516                           ;../nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 18517                           
 18518                           ;incstack = 0
 18519  006230  0E74               	movlw	low _nwkRouteTable
 18520  006232  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
 18521  006234  0E02               	movlw	high _nwkRouteTable
 18522  006236  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
 18523                           
 18524                           ;../nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
 18525  006238  0E00               	movlw	0
 18526  00623A  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
 18527  00623C  0E00               	movlw	0
 18528  00623E  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
 18529                           
 18530                           ;../nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
 18531  006240  0E00               	movlw	0
 18532  006242  6E06               	movwf	NWK_RouteNewEntry@i^0,c
 18533  006244                     l14903:
 18534                           
 18535                           ;../nwk/nwk_src/nwkRoute.c: 111:   {;../nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed
      +                          )
 18536  006244  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 18537  00624A  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 18538  006250  B0DF               	btfsc	indf2,0,c
 18539  006252  D02A               	goto	l14917
 18540                           
 18541                           ;../nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
 18542  006254  EE20 F005          	lfsr	2,5
 18543  006258  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 18544  00625A  26D9               	addwf	fsr2l,f,c
 18545  00625C  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 18546  00625E  22DA               	addwfc	fsr2h,f,c
 18547  006260  50DF               	movf	indf2,w,c
 18548  006262  A4D8               	btfss	status,2,c
 18549  006264  D007               	goto	l14911
 18550                           
 18551                           ;../nwk/nwk_src/nwkRoute.c: 116:     {;../nwk/nwk_src/nwkRoute.c: 117:       entry = ite
      +                          r;
 18552  006266  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 18553  00626C  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 18554                           
 18555                           ;../nwk/nwk_src/nwkRoute.c: 118:       break;
 18556  006272  D022               	goto	u14520
 18557  006274                     l14911:
 18558                           
 18559                           ;../nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank
      +                          )
 18560  006274  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18561  006276  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18562  006278  B4D8               	btfsc	status,2,c
 18563  00627A  D010               	goto	u14510
 18564  00627C  EE20 F005          	lfsr	2,5
 18565  006280  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18566  006282  26D9               	addwf	fsr2l,f,c
 18567  006284  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18568  006286  22DA               	addwfc	fsr2h,f,c
 18569  006288  EE10 F005          	lfsr	1,5
 18570  00628C  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 18571  00628E  26E1               	addwf	fsr1l,f,c
 18572  006290  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 18573  006292  22E2               	addwfc	fsr1h,f,c
 18574  006294  50DE               	movf	postinc2,w,c
 18575  006296  5CE6               	subwf	postinc1,w,c
 18576  006298  B0D8               	btfsc	status,0,c
 18577  00629A  D006               	goto	l14917
 18578  00629C                     u14510:
 18579                           
 18580                           ;../nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
 18581  00629C  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 18582  0062A2  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 18583  0062A8                     l14917:
 18584  0062A8  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
 18585  0062AA  0E07               	movlw	7
 18586  0062AC  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
 18587  0062AE  0E00               	movlw	0
 18588  0062B0  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
 18589  0062B2  0E09               	movlw	9
 18590  0062B4  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
 18591  0062B6  D7C6               	goto	l14903
 18592  0062B8                     u14520:
 18593                           
 18594                           ;../nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
 18595  0062B8  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 18596  0062BE  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 18597  0062C4  92DF               	bcf	indf2,1,c
 18598                           
 18599                           ;../nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
 18600  0062C6  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 18601  0062CC  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 18602  0062D2  50DF               	movf	indf2,w,c
 18603  0062D4  0B0F               	andlw	-241
 18604  0062D6  0930               	iorlw	48
 18605  0062D8  6EDF               	movwf	indf2,c
 18606                           
 18607                           ;../nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
 18608  0062DA  EE20 F005          	lfsr	2,5
 18609  0062DE  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18610  0062E0  26D9               	addwf	fsr2l,f,c
 18611  0062E2  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18612  0062E4  22DA               	addwfc	fsr2h,f,c
 18613  0062E6  0E80               	movlw	128
 18614  0062E8  6EDF               	movwf	indf2,c
 18615                           
 18616                           ;../nwk/nwk_src/nwkRoute.c: 129:   return entry;
 18617  0062EA  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 18618  0062F0  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 18619  0062F6  0012               	return		;funcret
 18620  0062F8                     __end_of_NWK_RouteNewEntry:
 18621                           	opt callstack 0
 18622                           
 18623 ;; *************** function _nwkRxHandleIndication *****************
 18624 ;; Defined at:
 18625 ;;		line 453 in file "../nwk/nwk_src/nwkRx.c"
 18626 ;; Parameters:    Size  Location     Type
 18627 ;;  frame           2  126[BANK0 ] PTR struct NwkFrame_t
 18628 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18629 ;; Auto vars:     Size  Location     Type
 18630 ;;  ack             1   92[COMRAM] _Bool 
 18631 ;; Return value:  Size  Location     Type
 18632 ;;                  1    wreg      void 
 18633 ;; Registers used:
 18634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18635 ;; Tracked objects:
 18636 ;;		On entry : 3/1
 18637 ;;		On exit  : 0/0
 18638 ;;		Unchanged: 0/0
 18639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18643 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18644 ;;Total ram usage:        5 bytes
 18645 ;; Hardware stack levels used:    1
 18646 ;; Hardware stack levels required when called:   18
 18647 ;; This function calls:
 18648 ;;		_nwkRxIndicateFrame
 18649 ;;		_nwkRxSendAck
 18650 ;; This function is called by:
 18651 ;;		_nwkRxTaskHandler
 18652 ;; This function uses a non-reentrant model
 18653 ;;
 18654                           
 18655                           	psect	text113
 18656  006166                     __ptext113:
 18657                           	opt callstack 0
 18658  006166                     _nwkRxHandleIndication:
 18659                           	opt callstack 9
 18660                           
 18661                           ;../nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkRx.c: 454: {;../nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;../nwk/nwk_src/nwkRx
      +                          .c: 457:   nwkRxAckControl = 0;
 18662                           
 18663                           ;incstack = 0
 18664  006166  0E00               	movlw	0
 18665  006168  0101               	movlb	1	; () banked
 18666  00616A  6F73               	movwf	_nwkRxAckControl& (0+255),b
 18667                           
 18668                           ; BSR set to: 1
 18669                           ;../nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 18670  00616C  0060  F378  F0C4   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 18671  006172  0060  F37C  F0C5   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 18672  006178  EC73  F019         	call	_nwkRxIndicateFrame	;wreg free
 18673  00617C  6E5D               	movwf	nwkRxHandleIndication@ack^0,c
 18674                           
 18675                           ;../nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 18676  00617E  0100               	movlb	0	; () banked
 18677  006180  EE20 F00B          	lfsr	2,11
 18678  006184  51DE               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18679  006186  26D9               	addwf	fsr2l,f,c
 18680  006188  51DF               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18681  00618A  22DA               	addwfc	fsr2h,f,c
 18682  00618C  B0DF               	btfsc	indf2,0,c
 18683  00618E  D002               	goto	l16175
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;../nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 18687  006190  0E00               	movlw	0
 18688  006192  6E5D               	movwf	nwkRxHandleIndication@ack^0,c
 18689  006194                     l16175:
 18690                           
 18691                           ; BSR set to: 0
 18692                           ;../nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 18693  006194  EE20 F007          	lfsr	2,7
 18694  006198  51DE               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18695  00619A  26D9               	addwf	fsr2l,f,c
 18696  00619C  51DF               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18697  00619E  22DA               	addwfc	fsr2h,f,c
 18698  0061A0  28DE               	incf	postinc2,w,c
 18699  0061A2  E11C               	bnz	l16183
 18700  0061A4  28DE               	incf	postinc2,w,c
 18701  0061A6  A4D8               	btfss	status,2,c
 18702  0061A8  D019               	goto	l16183
 18703                           
 18704                           ; BSR set to: 0
 18705  0061AA  EE20 F00F          	lfsr	2,15
 18706  0061AE  51DE               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18707  0061B0  26D9               	addwf	fsr2l,f,c
 18708  0061B2  51DF               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18709  0061B4  22DA               	addwfc	fsr2h,f,c
 18710  0061B6  0101               	movlb	1	; () banked
 18711  0061B8  5100               	movf	_nwkIb& (0+255),w,b
 18712  0061BA  18DE               	xorwf	postinc2,w,c
 18713  0061BC  E10F               	bnz	l16183
 18714  0061BE  5101               	movf	(_nwkIb+1)& (0+255),w,b
 18715  0061C0  18DE               	xorwf	postinc2,w,c
 18716  0061C2  A4D8               	btfss	status,2,c
 18717  0061C4  D00B               	goto	l16183
 18718                           
 18719                           ; BSR set to: 1
 18720  0061C6  0100               	movlb	0	; () banked
 18721  0061C8  EE20 F00B          	lfsr	2,11
 18722  0061CC  51DE               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18723  0061CE  26D9               	addwf	fsr2l,f,c
 18724  0061D0  51DF               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18725  0061D2  22DA               	addwfc	fsr2h,f,c
 18726  0061D4  B6DF               	btfsc	indf2,3,c
 18727  0061D6  D002               	goto	l16183
 18728                           
 18729                           ; BSR set to: 0
 18730                           ;../nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 18731  0061D8  0E01               	movlw	1
 18732  0061DA  6E5D               	movwf	nwkRxHandleIndication@ack^0,c
 18733  0061DC                     l16183:
 18734                           
 18735                           ;../nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 18736  0061DC  0100               	movlb	0	; () banked
 18737  0061DE  EE20 F005          	lfsr	2,5
 18738  0061E2  51DE               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18739  0061E4  26D9               	addwf	fsr2l,f,c
 18740  0061E6  51DF               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18741  0061E8  22DA               	addwfc	fsr2h,f,c
 18742  0061EA  28DE               	incf	postinc2,w,c
 18743  0061EC  E105               	bnz	l16187
 18744  0061EE  28DE               	incf	postinc2,w,c
 18745  0061F0  A4D8               	btfss	status,2,c
 18746  0061F2  D002               	goto	l16187
 18747                           
 18748                           ; BSR set to: 0
 18749                           ;../nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 18750  0061F4  0E00               	movlw	0
 18751  0061F6  6E5D               	movwf	nwkRxHandleIndication@ack^0,c
 18752  0061F8                     l16187:
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;../nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 18756  0061F8  0101               	movlb	1	; () banked
 18757  0061FA  2900               	incf	_nwkIb& (0+255),w,b
 18758  0061FC  E105               	bnz	l2188
 18759  0061FE  2901               	incf	(_nwkIb+1)& (0+255),w,b
 18760  006200  A4D8               	btfss	status,2,c
 18761  006202  D002               	goto	l2188
 18762                           
 18763                           ; BSR set to: 1
 18764                           ;../nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 18765  006204  0E00               	movlw	0
 18766  006206  6E5D               	movwf	nwkRxHandleIndication@ack^0,c
 18767  006208                     l2188:
 18768                           
 18769                           ; BSR set to: 1
 18770                           ;../nwk/nwk_src/nwkRx.c: 474:   if (ack)
 18771  006208  505D               	movf	nwkRxHandleIndication@ack^0,w,c
 18772  00620A  B4D8               	btfsc	status,2,c
 18773  00620C  D008               	goto	l16193
 18774                           
 18775                           ; BSR set to: 1
 18776                           ;../nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 18777  00620E  0060  F378  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 18778  006214  0060  F37C  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 18779  00621A  ECB7  F029         	call	_nwkRxSendAck	;wreg free
 18780  00621E                     l16193:
 18781                           
 18782                           ;../nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 18783  00621E  0060  F37B  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 18784  006224  0060  F37F  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 18785  00622A  0E24               	movlw	36
 18786  00622C  6EDF               	movwf	indf2,c
 18787  00622E  0012               	return		;funcret
 18788  006230                     __end_of_nwkRxHandleIndication:
 18789                           	opt callstack 0
 18790                           
 18791 ;; *************** function _nwkRxSendAck *****************
 18792 ;; Defined at:
 18793 ;;		line 136 in file "../nwk/nwk_src/nwkRx.c"
 18794 ;; Parameters:    Size  Location     Type
 18795 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
 18796 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18797 ;; Auto vars:     Size  Location     Type
 18798 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
 18799 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18800 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
 18801 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18802 ;; Return value:  Size  Location     Type
 18803 ;;                  1    wreg      void 
 18804 ;; Registers used:
 18805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18806 ;; Tracked objects:
 18807 ;;		On entry : 3F/1
 18808 ;;		On exit  : 0/0
 18809 ;;		Unchanged: 0/0
 18810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18812 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18815 ;;Total ram usage:        6 bytes
 18816 ;; Hardware stack levels used:    1
 18817 ;; Hardware stack levels required when called:   11
 18818 ;; This function calls:
 18819 ;;		_nwkFrameAlloc
 18820 ;;		_nwkFrameCommandInit
 18821 ;;		_nwkTxFrame
 18822 ;; This function is called by:
 18823 ;;		_nwkRxHandleIndication
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           	psect	text114
 18828  00536E                     __ptext114:
 18829                           	opt callstack 0
 18830  00536E                     _nwkRxSendAck:
 18831                           	opt callstack 15
 18832                           
 18833                           ; BSR set to: 1
 18834                           ;../nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkRx.c: 137: {;../nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;../nwk/nwk_src/nwkRx.c:
      +                           139:   NwkCommandAck_t *command;;../nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack 
      +                          = nwkFrameAlloc()))
 18835                           
 18836                           ;incstack = 0
 18837  00536E  EC50  F033         	call	_nwkFrameAlloc	;wreg free
 18838  005372  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 18839  005378  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 18840  00537E  502E               	movf	nwkRxSendAck@ack^0,w,c
 18841  005380  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
 18842  005382  B4D8               	btfsc	status,2,c
 18843  005384  0012               	return	
 18844                           
 18845                           ;../nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 18846  005386  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 18847  00538C  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 18848  005392  EC9F  F040         	call	_nwkFrameCommandInit	;wreg free
 18849                           
 18850                           ; BSR set to: 1
 18851                           ;../nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 18852  005396  EE20 F001          	lfsr	2,1
 18853  00539A  502E               	movf	nwkRxSendAck@ack^0,w,c
 18854  00539C  26D9               	addwf	fsr2l,f,c
 18855  00539E  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18856  0053A0  22DA               	addwfc	fsr2h,f,c
 18857  0053A2  0E03               	movlw	3
 18858  0053A4  26DF               	addwf	indf2,f,c
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;../nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
 18862  0053A6  EE20 F087          	lfsr	2,135
 18863  0053AA  502E               	movf	nwkRxSendAck@ack^0,w,c
 18864  0053AC  26D9               	addwf	fsr2l,f,c
 18865  0053AE  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18866  0053B0  22DA               	addwfc	fsr2h,f,c
 18867  0053B2  0E00               	movlw	0
 18868  0053B4  6EDE               	movwf	postinc2,c
 18869  0053B6  0E00               	movlw	0
 18870  0053B8  6EDD               	movwf	postdec2,c
 18871                           
 18872                           ; BSR set to: 1
 18873                           ;../nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.secur
      +                          ity;
 18874  0053BA  EE20 F00B          	lfsr	2,11
 18875  0053BE  502A               	movf	nwkRxSendAck@frame^0,w,c
 18876  0053C0  26D9               	addwf	fsr2l,f,c
 18877  0053C2  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18878  0053C4  22DA               	addwfc	fsr2h,f,c
 18879  0053C6  EE10 F00B          	lfsr	1,11
 18880  0053CA  502E               	movf	nwkRxSendAck@ack^0,w,c
 18881  0053CC  26E1               	addwf	fsr1l,f,c
 18882  0053CE  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18883  0053D0  22E2               	addwfc	fsr1h,f,c
 18884  0053D2  B2DF               	btfsc	indf2,1,c
 18885  0053D4  D002               	bra	u15025
 18886  0053D6  92E7               	bcf	indf1,1,c
 18887  0053D8  D001               	bra	u15026
 18888  0053DA                     u15025:
 18889  0053DA  82E7               	bsf	indf1,1,c
 18890  0053DC                     u15026:
 18891                           
 18892                           ;../nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 18893  0053DC  EE20 F00D          	lfsr	2,13
 18894  0053E0  502A               	movf	nwkRxSendAck@frame^0,w,c
 18895  0053E2  26D9               	addwf	fsr2l,f,c
 18896  0053E4  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18897  0053E6  22DA               	addwfc	fsr2h,f,c
 18898  0053E8  EE10 F00F          	lfsr	1,15
 18899  0053EC  502E               	movf	nwkRxSendAck@ack^0,w,c
 18900  0053EE  26E1               	addwf	fsr1l,f,c
 18901  0053F0  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18902  0053F2  22E2               	addwfc	fsr1h,f,c
 18903  0053F4  006F FF7B FFE6     	movff	postinc2,postinc1
 18904  0053FA  006F FF77 FFE5     	movff	postdec2,postdec1
 18905                           
 18906                           ;../nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 18907  005400  EE20 F081          	lfsr	2,129
 18908  005404  502E               	movf	nwkRxSendAck@ack^0,w,c
 18909  005406  26D9               	addwf	fsr2l,f,c
 18910  005408  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18911  00540A  22DA               	addwfc	fsr2h,f,c
 18912  00540C  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
 18913  005412  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
 18914                           
 18915                           ;../nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 18916  005418  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
 18917  00541E  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 18918  005424  0E00               	movlw	0
 18919  005426  6EDF               	movwf	indf2,c
 18920                           
 18921                           ;../nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 18922  005428  EE20 F002          	lfsr	2,2
 18923  00542C  502C               	movf	nwkRxSendAck@command^0,w,c
 18924  00542E  26D9               	addwf	fsr2l,f,c
 18925  005430  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 18926  005432  22DA               	addwfc	fsr2h,f,c
 18927  005434  0060  F5CF  FFDF   	movff	_nwkRxAckControl,indf2
 18928                           
 18929                           ;../nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 18930  00543A  EE20 F00C          	lfsr	2,12
 18931  00543E  502A               	movf	nwkRxSendAck@frame^0,w,c
 18932  005440  26D9               	addwf	fsr2l,f,c
 18933  005442  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18934  005444  22DA               	addwfc	fsr2h,f,c
 18935  005446  EE10 F001          	lfsr	1,1
 18936  00544A  502C               	movf	nwkRxSendAck@command^0,w,c
 18937  00544C  26E1               	addwf	fsr1l,f,c
 18938  00544E  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 18939  005450  22E2               	addwfc	fsr1h,f,c
 18940  005452  006F FF7F FFE7     	movff	indf2,indf1
 18941                           
 18942                           ;../nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 18943  005458  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 18944  00545E  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 18945  005464  ECF1  F01D         	call	_nwkTxFrame	;wreg free
 18946  005468  0012               	return		;funcret
 18947  00546A                     __end_of_nwkRxSendAck:
 18948                           	opt callstack 0
 18949                           
 18950 ;; *************** function _nwkRxIndicateFrame *****************
 18951 ;; Defined at:
 18952 ;;		line 423 in file "../nwk/nwk_src/nwkRx.c"
 18953 ;; Parameters:    Size  Location     Type
 18954 ;;  frame           2  100[BANK0 ] PTR struct NwkFrame_t
 18955 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18956 ;; Auto vars:     Size  Location     Type
 18957 ;;  ind            12  114[BANK0 ] struct NWK_DataInd_t
 18958 ;;  header          2  112[BANK0 ] PTR __pack struct NwkFra
 18959 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18960 ;; Return value:  Size  Location     Type
 18961 ;;                  1    wreg      _Bool 
 18962 ;; Registers used:
 18963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18964 ;; Tracked objects:
 18965 ;;		On entry : 3F/1
 18966 ;;		On exit  : 0/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18970 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18971 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18972 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18973 ;;Total ram usage:       26 bytes
 18974 ;; Hardware stack levels used:    1
 18975 ;; Hardware stack levels required when called:   17
 18976 ;; This function calls:
 18977 ;;		_appDataInd
 18978 ;;		_nwkRxServiceDataInd
 18979 ;;		nwkFrame@nwkFramePayloadSize
 18980 ;; This function is called by:
 18981 ;;		_nwkRxHandleIndication
 18982 ;; This function uses a non-reentrant model
 18983 ;;
 18984                           
 18985                           	psect	text115
 18986  0032E6                     __ptext115:
 18987                           	opt callstack 0
 18988  0032E6                     _nwkRxIndicateFrame:
 18989                           	opt callstack 9
 18990                           
 18991                           ; BSR set to: 1
 18992                           ;../nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);../nwk/
      +                          nwk_src/nwkRx.c: 424: {;../nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 18993                           
 18994                           ;incstack = 0
 18995  0032E6  0E02               	movlw	2
 18996  0032E8  0100               	movlb	0	; () banked
 18997  0032EA  25C4               	addwf	nwkRxIndicateFrame@frame& (0+255),w,b
 18998  0032EC  6FD0               	movwf	nwkRxIndicateFrame@header& (0+255),b
 18999  0032EE  0E00               	movlw	0
 19000  0032F0  21C5               	addwfc	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 19001  0032F2  6FD1               	movwf	(nwkRxIndicateFrame@header+1)& (0+255),b
 19002                           
 19003                           ; BSR set to: 0
 19004                           ;../nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;../nwk/nwk_src/nwkRx.c: 428:   if (((
      +                          void*)0) == nwkIb.endpoint[header->nwkDstEndpoint])
 19005  0032F4  EE20 F00F          	lfsr	2,15
 19006  0032F8  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19007  0032FA  26D9               	addwf	fsr2l,f,c
 19008  0032FC  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19009  0032FE  22DA               	addwfc	fsr2h,f,c
 19010  003300  38DF               	swapf	223,w,c
 19011  003302  0B0F               	andlw	15
 19012  003304  6FC6               	movwf	??_nwkRxIndicateFrame& (0+255),b
 19013  003306  51C6               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 19014  003308  0D02               	mullw	2
 19015  00330A  0E06               	movlw	low (_nwkIb+6)
 19016  00330C  24F3               	addwf	243,w,c
 19017  00330E  6ED9               	movwf	fsr2l,c
 19018  003310  0E01               	movlw	high (_nwkIb+6)
 19019  003312  20F4               	addwfc	prodh,w,c
 19020  003314  6EDA               	movwf	fsr2h,c
 19021  003316  50DE               	movf	postinc2,w,c
 19022  003318  10DE               	iorwf	postinc2,w,c
 19023  00331A  A4D8               	btfss	status,2,c
 19024  00331C  D002               	goto	l15427
 19025                           
 19026                           ; BSR set to: 0
 19027                           ;../nwk/nwk_src/nwkRx.c: 429:     return 0;
 19028  00331E  0E00               	movlw	0
 19029  003320  0012               	return	
 19030  003322                     l15427:
 19031                           
 19032                           ; BSR set to: 0
 19033                           ;../nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 19034  003322  EE20 F00B          	lfsr	2,11
 19035  003326  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19036  003328  26D9               	addwf	fsr2l,f,c
 19037  00332A  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19038  00332C  22DA               	addwfc	fsr2h,f,c
 19039  00332E  006F FF78  F0D2    	movff	postinc2,nwkRxIndicateFrame@ind
 19040  003334  006F FF74  F0D3    	movff	postdec2,nwkRxIndicateFrame@ind+1
 19041                           
 19042                           ;../nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 19043  00333A  EE20 F00D          	lfsr	2,13
 19044  00333E  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19045  003340  26D9               	addwf	fsr2l,f,c
 19046  003342  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19047  003344  22DA               	addwfc	fsr2h,f,c
 19048  003346  006F FF78  F0D4    	movff	postinc2,nwkRxIndicateFrame@ind+2
 19049  00334C  006F FF74  F0D5    	movff	postdec2,nwkRxIndicateFrame@ind+3
 19050                           
 19051                           ;../nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 19052  003352  EE20 F00F          	lfsr	2,15
 19053  003356  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19054  003358  26D9               	addwf	fsr2l,f,c
 19055  00335A  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19056  00335C  22DA               	addwfc	fsr2h,f,c
 19057  00335E  50DF               	movf	223,w,c
 19058  003360  0B0F               	andlw	15
 19059  003362  6FD6               	movwf	(nwkRxIndicateFrame@ind+4)& (0+255),b
 19060                           
 19061                           ;../nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 19062  003364  EE20 F00F          	lfsr	2,15
 19063  003368  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19064  00336A  26D9               	addwf	fsr2l,f,c
 19065  00336C  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19066  00336E  22DA               	addwfc	fsr2h,f,c
 19067  003370  38DF               	swapf	223,w,c
 19068  003372  0B0F               	andlw	15
 19069  003374  6FD7               	movwf	(nwkRxIndicateFrame@ind+5)& (0+255),b
 19070                           
 19071                           ;../nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 19072  003376  EE20 F081          	lfsr	2,129
 19073  00337A  51C4               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 19074  00337C  26D9               	addwf	fsr2l,f,c
 19075  00337E  51C5               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 19076  003380  22DA               	addwfc	fsr2h,f,c
 19077  003382  006F FF78  F0D9    	movff	postinc2,nwkRxIndicateFrame@ind+7
 19078  003388  006F FF74  F0DA    	movff	postdec2,nwkRxIndicateFrame@ind+8
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;../nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 19082  00338E  0060  F310  F002   	movff	nwkRxIndicateFrame@frame,nwkFrame@nwkFramePayloadSize@frame_4725
 19083  003394  0060  F314  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFrame@nwkFramePayloadSize@frame_4725+1
 19084  00339A  ECE8  F043         	call	nwkFrame@nwkFramePayloadSize	;wreg free
 19085  00339E  6FDB               	movwf	(nwkRxIndicateFrame@ind+9)& (0+255),b
 19086                           
 19087                           ; BSR set to: 0
 19088                           ;../nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 19089  0033A0  EE20 F083          	lfsr	2,131
 19090  0033A4  51C4               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 19091  0033A6  26D9               	addwf	fsr2l,f,c
 19092  0033A8  51C5               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 19093  0033AA  22DA               	addwfc	fsr2h,f,c
 19094  0033AC  50DF               	movf	indf2,w,c
 19095  0033AE  6FDC               	movwf	(nwkRxIndicateFrame@ind+10)& (0+255),b
 19096                           
 19097                           ; BSR set to: 0
 19098                           ;../nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 19099  0033B0  EE20 F084          	lfsr	2,132
 19100  0033B4  51C4               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 19101  0033B6  26D9               	addwf	fsr2l,f,c
 19102  0033B8  51C5               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 19103  0033BA  22DA               	addwfc	fsr2h,f,c
 19104  0033BC  50DF               	movf	indf2,w,c
 19105  0033BE  6FDD               	movwf	(nwkRxIndicateFrame@ind+11)& (0+255),b
 19106                           
 19107                           ; BSR set to: 0
 19108                           ;../nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_
      +                          ACK_REQUESTED : 0;
 19109  0033C0  EE20 F009          	lfsr	2,9
 19110  0033C4  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19111  0033C6  26D9               	addwf	fsr2l,f,c
 19112  0033C8  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19113  0033CA  22DA               	addwfc	fsr2h,f,c
 19114  0033CC  0E00               	movlw	0
 19115  0033CE  B0DF               	btfsc	indf2,0,c
 19116  0033D0  0E01               	movlw	1
 19117  0033D2  6FD8               	movwf	(nwkRxIndicateFrame@ind+6)& (0+255),b
 19118                           
 19119                           ; BSR set to: 0
 19120                           ;../nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_S
      +                          ECURED : 0;
 19121  0033D4  EE20 F009          	lfsr	2,9
 19122  0033D8  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19123  0033DA  26D9               	addwf	fsr2l,f,c
 19124  0033DC  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19125  0033DE  22DA               	addwfc	fsr2h,f,c
 19126  0033E0  B2DF               	btfsc	indf2,1,c
 19127  0033E2  D002               	goto	l15441
 19128                           
 19129                           ; BSR set to: 0
 19130  0033E4  0E00               	movlw	0
 19131  0033E6  D001               	goto	L16
 19132  0033E8                     l15441:
 19133                           
 19134                           ; BSR set to: 0
 19135  0033E8  0E02               	movlw	2
 19136  0033EA                     L16:
 19137  0033EA  6FCA               	movwf	_nwkRxIndicateFrame$5172& (0+255),b
 19138                           
 19139                           ; BSR set to: 0
 19140  0033EC  51CA               	movf	_nwkRxIndicateFrame$5172& (0+255),w,b
 19141  0033EE  13D8               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19142                           
 19143                           ; BSR set to: 0
 19144                           ;../nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_
      +                          LINK_LOCAL : 0;
 19145  0033F0  EE20 F009          	lfsr	2,9
 19146  0033F4  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19147  0033F6  26D9               	addwf	fsr2l,f,c
 19148  0033F8  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19149  0033FA  22DA               	addwfc	fsr2h,f,c
 19150  0033FC  B4DF               	btfsc	indf2,2,c
 19151  0033FE  D002               	goto	l15449
 19152                           
 19153                           ; BSR set to: 0
 19154  003400  0E00               	movlw	0
 19155  003402  D001               	goto	L17
 19156  003404                     l15449:
 19157                           
 19158                           ; BSR set to: 0
 19159  003404  0E20               	movlw	32
 19160  003406                     L17:
 19161  003406  6FCB               	movwf	_nwkRxIndicateFrame$5173& (0+255),b
 19162                           
 19163                           ; BSR set to: 0
 19164  003408  51CB               	movf	_nwkRxIndicateFrame$5173& (0+255),w,b
 19165  00340A  13D8               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19166                           
 19167                           ; BSR set to: 0
 19168                           ;../nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_
      +                          MULTICAST : 0;
 19169  00340C  EE20 F009          	lfsr	2,9
 19170  003410  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19171  003412  26D9               	addwf	fsr2l,f,c
 19172  003414  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19173  003416  22DA               	addwfc	fsr2h,f,c
 19174  003418  B6DF               	btfsc	indf2,3,c
 19175  00341A  D002               	goto	l15457
 19176                           
 19177                           ; BSR set to: 0
 19178  00341C  0E00               	movlw	0
 19179  00341E  D001               	goto	L18
 19180  003420                     l15457:
 19181                           
 19182                           ; BSR set to: 0
 19183  003420  0E40               	movlw	64
 19184  003422                     L18:
 19185  003422  6FCC               	movwf	_nwkRxIndicateFrame$5174& (0+255),b
 19186                           
 19187                           ; BSR set to: 0
 19188  003424  51CC               	movf	_nwkRxIndicateFrame$5174& (0+255),w,b
 19189  003426  13D8               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19190                           
 19191                           ; BSR set to: 0
 19192                           ;../nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_
      +                          OPT_BROADCAST : 0;
 19193  003428  EE20 F00D          	lfsr	2,13
 19194  00342C  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19195  00342E  26D9               	addwf	fsr2l,f,c
 19196  003430  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19197  003432  22DA               	addwfc	fsr2h,f,c
 19198  003434  28DE               	incf	postinc2,w,c
 19199  003436  E103               	bnz	u15190
 19200  003438  28DE               	incf	postinc2,w,c
 19201  00343A  B4D8               	btfsc	status,2,c
 19202  00343C  D002               	goto	l15465
 19203  00343E                     u15190:
 19204                           
 19205                           ; BSR set to: 0
 19206  00343E  0E00               	movlw	0
 19207  003440  D001               	goto	L19
 19208  003442                     l15465:
 19209                           
 19210                           ; BSR set to: 0
 19211  003442  0E04               	movlw	4
 19212  003444                     L19:
 19213  003444  6FCD               	movwf	_nwkRxIndicateFrame$5175& (0+255),b
 19214                           
 19215                           ; BSR set to: 0
 19216  003446  51CD               	movf	_nwkRxIndicateFrame$5175& (0+255),w,b
 19217  003448  13D8               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19218                           
 19219                           ; BSR set to: 0
 19220                           ;../nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr
      +                          ) ? NWK_IND_OPT_LOCAL : 0;
 19221  00344A  EE20 F007          	lfsr	2,7
 19222  00344E  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19223  003450  26D9               	addwf	fsr2l,f,c
 19224  003452  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19225  003454  22DA               	addwfc	fsr2h,f,c
 19226  003456  EE10 F00B          	lfsr	1,11
 19227  00345A  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19228  00345C  26E1               	addwf	fsr1l,f,c
 19229  00345E  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19230  003460  22E2               	addwfc	fsr1h,f,c
 19231  003462  50DE               	movf	postinc2,w,c
 19232  003464  18E6               	xorwf	postinc1,w,c
 19233  003466  E104               	bnz	u15200
 19234  003468  50DE               	movf	postinc2,w,c
 19235  00346A  18E6               	xorwf	postinc1,w,c
 19236  00346C  B4D8               	btfsc	status,2,c
 19237  00346E  D002               	goto	l15473
 19238  003470                     u15200:
 19239                           
 19240                           ; BSR set to: 0
 19241  003470  0E00               	movlw	0
 19242  003472  D001               	goto	L20
 19243  003474                     l15473:
 19244                           
 19245                           ; BSR set to: 0
 19246  003474  0E08               	movlw	8
 19247  003476                     L20:
 19248  003476  6FCE               	movwf	_nwkRxIndicateFrame$5176& (0+255),b
 19249                           
 19250                           ; BSR set to: 0
 19251  003478  51CE               	movf	_nwkRxIndicateFrame$5176& (0+255),w,b
 19252  00347A  13D8               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19253                           
 19254                           ; BSR set to: 0
 19255                           ;../nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND
      +                          _OPT_BROADCAST_PAN_ID : 0;
 19256  00347C  EE20 F003          	lfsr	2,3
 19257  003480  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19258  003482  26D9               	addwf	fsr2l,f,c
 19259  003484  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19260  003486  22DA               	addwfc	fsr2h,f,c
 19261  003488  28DE               	incf	postinc2,w,c
 19262  00348A  E103               	bnz	u15210
 19263  00348C  28DE               	incf	postinc2,w,c
 19264  00348E  B4D8               	btfsc	status,2,c
 19265  003490  D002               	goto	l15481
 19266  003492                     u15210:
 19267                           
 19268                           ; BSR set to: 0
 19269  003492  0E00               	movlw	0
 19270  003494  D001               	goto	L21
 19271  003496                     l15481:
 19272                           
 19273                           ; BSR set to: 0
 19274  003496  0E10               	movlw	16
 19275  003498                     L21:
 19276  003498  6FCF               	movwf	_nwkRxIndicateFrame$5177& (0+255),b
 19277                           
 19278                           ; BSR set to: 0
 19279  00349A  51CF               	movf	_nwkRxIndicateFrame$5177& (0+255),w,b
 19280  00349C  13D8               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19281                           
 19282                           ; BSR set to: 0
 19283                           ;../nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 19284  00349E  0ED2               	movlw	low nwkRxIndicateFrame@ind
 19285  0034A0  6E58               	movwf	nwkRxServiceDataInd@ind^0,c
 19286  0034A2  EE20 F00F          	lfsr	2,15
 19287  0034A6  51D0               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19288  0034A8  26D9               	addwf	fsr2l,f,c
 19289  0034AA  51D1               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19290  0034AC  22DA               	addwfc	fsr2h,f,c
 19291  0034AE  38DF               	swapf	223,w,c
 19292  0034B0  0B0F               	andlw	15
 19293  0034B2  6FC6               	movwf	??_nwkRxIndicateFrame& (0+255),b
 19294  0034B4  51C6               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 19295  0034B6  0D02               	mullw	2
 19296  0034B8  0E06               	movlw	low (_nwkIb+6)
 19297  0034BA  24F3               	addwf	243,w,c
 19298  0034BC  6ED9               	movwf	fsr2l,c
 19299  0034BE  0E01               	movlw	high (_nwkIb+6)
 19300  0034C0  20F4               	addwfc	prodh,w,c
 19301  0034C2  6EDA               	movwf	fsr2h,c
 19302  0034C4  006F FF78  F0C7    	movff	postinc2,??_nwkRxIndicateFrame+1
 19303  0034CA  006F FF74  F0C8    	movff	postdec2,??_nwkRxIndicateFrame+2
 19304  0034D0  D801               	call	u15228
 19305  0034D2  0012               	return	
 19306  0034D4                     u15228:
 19307  0034D4  0005               	push	
 19308  0034D6  6EFA               	movwf	pclath,c
 19309  0034D8  51C7               	movf	(??_nwkRxIndicateFrame+1)& (0+255),w,b
 19310  0034DA  6EFD               	movwf	tosl,c
 19311  0034DC  51C8               	movf	(??_nwkRxIndicateFrame+2)& (0+255),w,b
 19312  0034DE  6EFE               	movwf	tosh,c
 19313  0034E0  6AFF               	clrf	tosu,c
 19314  0034E2  50FA               	movf	pclath,w,c
 19315  0034E4  0012               	return		;indir
 19316  0034E6                     __end_of_nwkRxIndicateFrame:
 19317                           	opt callstack 0
 19318                           
 19319 ;; *************** function nwkFrame@nwkFramePayloadSize *****************
 19320 ;; Defined at:
 19321 ;;		line 134 in file "../nwk/nwk_inc\nwkFrame.h"
 19322 ;; Parameters:    Size  Location     Type
 19323 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 19324 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19325 ;; Auto vars:     Size  Location     Type
 19326 ;;		None
 19327 ;; Return value:  Size  Location     Type
 19328 ;;                  1    wreg      unsigned char 
 19329 ;; Registers used:
 19330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19331 ;; Tracked objects:
 19332 ;;		On entry : 3F/0
 19333 ;;		On exit  : 3F/0
 19334 ;;		Unchanged: 3F/0
 19335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19340 ;;Total ram usage:        4 bytes
 19341 ;; Hardware stack levels used:    1
 19342 ;; Hardware stack levels required when called:    7
 19343 ;; This function calls:
 19344 ;;		Nothing
 19345 ;; This function is called by:
 19346 ;;		_nwkRxIndicateFrame
 19347 ;; This function uses a non-reentrant model
 19348 ;;
 19349                           
 19350                           	psect	text116
 19351  0087D0                     __ptext116:
 19352                           	opt callstack 0
 19353  0087D0                     nwkFrame@nwkFramePayloadSize:
 19354                           	opt callstack 18
 19355                           
 19356                           ; BSR set to: 0
 19357                           
 19358                           ;incstack = 0
 19359  0087D0  EE20 F081          	lfsr	2,129
 19360  0087D4  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4725^0,w,c
 19361  0087D6  26D9               	addwf	fsr2l,f,c
 19362  0087D8  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4725+1)^0,w,c
 19363  0087DA  22DA               	addwfc	fsr2h,f,c
 19364  0087DC  50DF               	movf	indf2,w,c
 19365  0087DE  6E04               	movwf	??strspn@nwkFrame@nwkFramePayloadSize^0,c
 19366  0087E0  EE20 F001          	lfsr	2,1
 19367  0087E4  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4725^0,w,c
 19368  0087E6  26D9               	addwf	fsr2l,f,c
 19369  0087E8  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4725+1)^0,w,c
 19370  0087EA  22DA               	addwfc	fsr2h,f,c
 19371  0087EC  50DF               	movf	indf2,w,c
 19372  0087EE  6E05               	movwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,c
 19373  0087F0  5004               	movf	??strspn@nwkFrame@nwkFramePayloadSize^0,w,c
 19374  0087F2  5C05               	subwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,w,c
 19375  0087F4  2402               	addwf	nwkFrame@nwkFramePayloadSize@frame_4725^0,w,c
 19376  0087F6  0F02               	addlw	2
 19377                           
 19378                           ; BSR set to: 0
 19379  0087F8  0012               	return		;funcret
 19380  0087FA                     __end_ofnwkFrame@nwkFramePayloadSize:
 19381                           	opt callstack 0
 19382                           
 19383 ;; *************** function _appDataInd *****************
 19384 ;; Defined at:
 19385 ;;		line 45 in file "../app/app_src/application.c"
 19386 ;; Parameters:    Size  Location     Type
 19387 ;;  ind             1   87[COMRAM] PTR struct NWK_DataInd_t
 19388 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19389 ;; Auto vars:     Size  Location     Type
 19390 ;;  i               1   99[BANK0 ] unsigned char 
 19391 ;;  data           65   32[BANK0 ] unsigned char [65]
 19392 ;;  dataptr         2   97[BANK0 ] PTR unsigned char 
 19393 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19394 ;; Return value:  Size  Location     Type
 19395 ;;                  1    wreg      _Bool 
 19396 ;; Registers used:
 19397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19398 ;; Tracked objects:
 19399 ;;		On entry : 3F/0
 19400 ;;		On exit  : 3F/1
 19401 ;;		Unchanged: 0/0
 19402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19404 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19406 ;;      Totals:         1      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19407 ;;Total ram usage:       69 bytes
 19408 ;; Hardware stack levels used:    1
 19409 ;; Hardware stack levels required when called:   16
 19410 ;; This function calls:
 19411 ;;		_memset
 19412 ;;		_printf
 19413 ;; This function is called by:
 19414 ;;		_bootLoadApplication
 19415 ;;		_nwkRxIndicateFrame
 19416 ;; This function uses a non-reentrant model
 19417 ;;
 19418                           
 19419                           	psect	text117
 19420  00729E                     __ptext117:
 19421                           	opt callstack 0
 19422  00729E                     _appDataInd:
 19423                           	opt callstack 9
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;../app/app_src/application.c: 45: static _Bool appDataInd(NWK_DataInd_t *ind);../app/ap
      +                          p_src/application.c: 46: {;../app/app_src/application.c: 48:     uint8_t data[64 + 1];;.
      +                          ./app/app_src/application.c: 49:     uint8_t* dataptr = ind->data;
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;incstack = 0
 19430  00729E  5058               	movf	appDataInd@ind^0,w,c
 19431  0072A0  6ED9               	movwf	fsr2l,c
 19432  0072A2  6ADA               	clrf	fsr2h,c
 19433  0072A4  0E07               	movlw	7
 19434  0072A6  26D9               	addwf	fsr2l,f,c
 19435  0072A8  006F FF78  F0C1    	movff	postinc2,appDataInd@dataptr
 19436  0072AE  006F FF74  F0C2    	movff	postdec2,appDataInd@dataptr+1
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;../app/app_src/application.c: 50:     memset(data, 0 , sizeof(data));
 19440  0072B4  0E80               	movlw	low appDataInd@data
 19441  0072B6  6E02               	movwf	memset@dest^0,c
 19442  0072B8  6A03               	clrf	(memset@dest+1)^0,c
 19443  0072BA  0E00               	movlw	0
 19444  0072BC  6E05               	movwf	(memset@c+1)^0,c
 19445  0072BE  0E00               	movlw	0
 19446  0072C0  6E04               	movwf	memset@c^0,c
 19447  0072C2  0E00               	movlw	0
 19448  0072C4  6E07               	movwf	(memset@n+1)^0,c
 19449  0072C6  0E41               	movlw	65
 19450  0072C8  6E06               	movwf	memset@n^0,c
 19451  0072CA  EC34  F022         	call	_memset	;wreg free
 19452                           
 19453                           ;../app/app_src/application.c: 51:     for(uint8_t i = 0; i < 64; i++){
 19454  0072CE  0E00               	movlw	0
 19455  0072D0  0100               	movlb	0	; () banked
 19456  0072D2  6FC3               	movwf	appDataInd@i& (0+255),b
 19457  0072D4                     l14803:
 19458                           
 19459                           ; BSR set to: 0
 19460                           ;../app/app_src/application.c: 52:         data[i] = *dataptr++;
 19461  0072D4  0060  F307  FFD9   	movff	appDataInd@dataptr,fsr2l
 19462  0072DA  0060  F30B  FFDA   	movff	appDataInd@dataptr+1,fsr2h
 19463  0072E0  51C3               	movf	appDataInd@i& (0+255),w,b
 19464  0072E2  0F80               	addlw	low appDataInd@data
 19465  0072E4  6EE1               	movwf	fsr1l,c
 19466  0072E6  6AE2               	clrf	fsr1h,c
 19467  0072E8  006F FF7F FFE7     	movff	indf2,indf1
 19468                           
 19469                           ; BSR set to: 0
 19470  0072EE  4BC1               	infsnz	appDataInd@dataptr& (0+255),f,b
 19471  0072F0  2BC2               	incf	(appDataInd@dataptr+1)& (0+255),f,b
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;../app/app_src/application.c: 53:     }
 19475  0072F2  2BC3               	incf	appDataInd@i& (0+255),f,b
 19476                           
 19477                           ; BSR set to: 0
 19478  0072F4  0E3F               	movlw	63
 19479  0072F6  65C3               	cpfsgt	appDataInd@i& (0+255),b
 19480  0072F8  D7ED               	goto	l14803
 19481                           
 19482                           ; BSR set to: 0
 19483                           ;../app/app_src/application.c: 54:     printf("RX:%04X:%s\r\n", ind->srcAddr, data);
 19484  0072FA  0E99               	movlw	low STR_1
 19485  0072FC  6F76               	movwf	printf@fmt& (0+255),b
 19486  0072FE  0EFE               	movlw	high STR_1
 19487  007300  6F77               	movwf	(printf@fmt+1)& (0+255),b
 19488  007302  5058               	movf	appDataInd@ind^0,w,c
 19489  007304  6ED9               	movwf	fsr2l,c
 19490  007306  6ADA               	clrf	fsr2h,c
 19491  007308  006F FF78  F078    	movff	postinc2,?_printf+2
 19492  00730E  006F FF74  F079    	movff	postdec2,?_printf+3
 19493  007314  0E80               	movlw	low appDataInd@data
 19494  007316  6F7A               	movwf	(?_printf+4)& (0+255),b
 19495  007318  ECA8  F044         	call	_printf	;wreg free
 19496                           
 19497                           ; BSR set to: 1
 19498                           ;../app/app_src/application.c: 55:     return 1;
 19499  00731C  0E01               	movlw	1
 19500                           
 19501                           ; BSR set to: 1
 19502  00731E  0012               	return		;funcret
 19503  007320                     __end_of_appDataInd:
 19504                           	opt callstack 0
 19505                           
 19506 ;; *************** function _nwkRxServiceDataInd *****************
 19507 ;; Defined at:
 19508 ;;		line 257 in file "../nwk/nwk_src/nwkRx.c"
 19509 ;; Parameters:    Size  Location     Type
 19510 ;;  ind             1   87[COMRAM] PTR struct NWK_DataInd_t
 19511 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19512 ;; Auto vars:     Size  Location     Type
 19513 ;;		None
 19514 ;; Return value:  Size  Location     Type
 19515 ;;                  1    wreg      _Bool 
 19516 ;; Registers used:
 19517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19518 ;; Tracked objects:
 19519 ;;		On entry : 3F/0
 19520 ;;		On exit  : 0/0
 19521 ;;		Unchanged: 0/0
 19522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19523 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19526 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19527 ;;Total ram usage:        5 bytes
 19528 ;; Hardware stack levels used:    1
 19529 ;; Hardware stack levels required when called:   10
 19530 ;; This function calls:
 19531 ;;		_nwkRouteErrorReceived
 19532 ;;		_nwkTxAckReceived
 19533 ;; This function is called by:
 19534 ;;		_nwkRxInit
 19535 ;;		_nwkRxIndicateFrame
 19536 ;; This function uses a non-reentrant model
 19537 ;;
 19538                           
 19539                           	psect	text118
 19540  0075EC                     __ptext118:
 19541                           	opt callstack 0
 19542  0075EC                     _nwkRxServiceDataInd:
 19543                           	opt callstack 15
 19544                           
 19545                           ; BSR set to: 0
 19546                           ;../nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);../nw
      +                          k/nwk_src/nwkRx.c: 258: {;../nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 19547                           
 19548                           ; BSR set to: 1
 19549                           ;incstack = 0
 19550  0075EC  5058               	movf	nwkRxServiceDataInd@ind^0,w,c
 19551  0075EE  6ED9               	movwf	fsr2l,c
 19552  0075F0  6ADA               	clrf	fsr2h,c
 19553  0075F2  0E09               	movlw	9
 19554  0075F4  26D9               	addwf	fsr2l,f,c
 19555  0075F6  50DF               	movf	indf2,w,c
 19556  0075F8  A4D8               	btfss	status,2,c
 19557  0075FA  D00E               	goto	l14961
 19558  0075FC                     u14540:
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;../nwk/nwk_src/nwkRx.c: 265:     return 0;
 19562  0075FC  0E00               	movlw	0
 19563  0075FE  0012               	return	
 19564  007600                     l14947:
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;../nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 19568  007600  0060  F160  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 19569  007606  ECDC  F031         	call	_nwkTxAckReceived	;wreg free
 19570  00760A  0012               	return	
 19571  00760C                     l14951:
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;../nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 19575  00760C  0060  F160  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 19576  007612  EC7E  F03D         	call	_nwkRouteErrorReceived	;wreg free
 19577  007616  0012               	return	
 19578  007618                     l14961:
 19579                           
 19580                           ; BSR set to: 0
 19581  007618  5058               	movf	nwkRxServiceDataInd@ind^0,w,c
 19582  00761A  6ED9               	movwf	fsr2l,c
 19583  00761C  6ADA               	clrf	fsr2h,c
 19584  00761E  0E07               	movlw	7
 19585  007620  26D9               	addwf	fsr2l,f,c
 19586  007622  006F FF78  F059    	movff	postinc2,??_nwkRxServiceDataInd
 19587  007628  006F FF74  F05A    	movff	postdec2,??_nwkRxServiceDataInd+1
 19588  00762E  0060  F167  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 19589  007634  0060  F16B  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 19590  00763A  50DF               	movf	indf2,w,c
 19591  00763C  6E5B               	movwf	(??_nwkRxServiceDataInd+2)^0,c
 19592  00763E  6A5C               	clrf	(??_nwkRxServiceDataInd+3)^0,c
 19593                           
 19594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19595                           ; Switch size 1, requested type "simple"
 19596                           ; Number of cases is 1, Range of values is 0 to 0
 19597                           ; switch strategies available:
 19598                           ; Name         Instructions Cycles
 19599                           ; simple_byte            4     3 (average)
 19600                           ;	Chosen strategy is simple_byte
 19601  007640  505C               	movf	(??_nwkRxServiceDataInd+3)^0,w,c
 19602  007642  0A00               	xorlw	0	; case 0
 19603  007644  A4D8               	btfss	status,2,c
 19604  007646  D7DA               	goto	u14540
 19605                           
 19606                           ; BSR set to: 0
 19607                           ; Switch size 1, requested type "simple"
 19608                           ; Number of cases is 2, Range of values is 0 to 1
 19609                           ; switch strategies available:
 19610                           ; Name         Instructions Cycles
 19611                           ; simple_byte            7     4 (average)
 19612                           ;	Chosen strategy is simple_byte
 19613  007648  505B               	movf	(??_nwkRxServiceDataInd+2)^0,w,c
 19614  00764A  0A00               	xorlw	0	; case 0
 19615  00764C  B4D8               	btfsc	status,2,c
 19616  00764E  D7D8               	goto	l14947
 19617  007650  0A01               	xorlw	1	; case 1
 19618  007652  B4D8               	btfsc	status,2,c
 19619  007654  D7DB               	goto	l14951
 19620  007656  D7D2               	goto	u14540
 19621  007658                     __end_of_nwkRxServiceDataInd:
 19622                           	opt callstack 0
 19623                           
 19624 ;; *************** function _nwkTxAckReceived *****************
 19625 ;; Defined at:
 19626 ;;		line 182 in file "../nwk/nwk_src/nwkTx.c"
 19627 ;; Parameters:    Size  Location     Type
 19628 ;;  ind             1    7[COMRAM] PTR struct NWK_DataInd_t
 19629 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19630 ;; Auto vars:     Size  Location     Type
 19631 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 19632 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19633 ;;  command         2   10[COMRAM] PTR __pack struct NwkCom
 19634 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 19635 ;; Return value:  Size  Location     Type
 19636 ;;                  1    wreg      _Bool 
 19637 ;; Registers used:
 19638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19639 ;; Tracked objects:
 19640 ;;		On entry : 3F/0
 19641 ;;		On exit  : 0/0
 19642 ;;		Unchanged: 0/0
 19643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19644 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19645 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19647 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19648 ;;Total ram usage:        7 bytes
 19649 ;; Hardware stack levels used:    1
 19650 ;; Hardware stack levels required when called:    8
 19651 ;; This function calls:
 19652 ;;		_nwkFrameNext
 19653 ;; This function is called by:
 19654 ;;		_nwkRxServiceDataInd
 19655 ;; This function uses a non-reentrant model
 19656 ;;
 19657                           
 19658                           	psect	text119
 19659  0063B8                     __ptext119:
 19660                           	opt callstack 0
 19661  0063B8                     _nwkTxAckReceived:
 19662                           	opt callstack 16
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;../nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);../nwk/nwk_src/
      +                          nwkTx.c: 183: {;../nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck
      +                          _t *)ind->data;
 19666                           
 19667                           ;incstack = 0
 19668  0063B8  5008               	movf	nwkTxAckReceived@ind^0,w,c
 19669  0063BA  6ED9               	movwf	fsr2l,c
 19670  0063BC  6ADA               	clrf	fsr2h,c
 19671  0063BE  0E07               	movlw	7
 19672  0063C0  26D9               	addwf	fsr2l,f,c
 19673  0063C2  006F FF78  F00B    	movff	postinc2,nwkTxAckReceived@command
 19674  0063C8  006F FF74  F00C    	movff	postdec2,nwkTxAckReceived@command+1
 19675                           
 19676                           ; BSR set to: 0
 19677                           ;../nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
 19678  0063CE  0E00               	movlw	0
 19679  0063D0  6E0D               	movwf	nwkTxAckReceived@frame^0,c
 19680  0063D2  0E00               	movlw	0
 19681  0063D4  6E0E               	movwf	(nwkTxAckReceived@frame+1)^0,c
 19682                           
 19683                           ; BSR set to: 0
 19684                           ;../nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 19685  0063D6  5008               	movf	nwkTxAckReceived@ind^0,w,c
 19686  0063D8  6ED9               	movwf	fsr2l,c
 19687  0063DA  6ADA               	clrf	fsr2h,c
 19688  0063DC  0E09               	movlw	9
 19689  0063DE  26D9               	addwf	fsr2l,f,c
 19690  0063E0  0E03               	movlw	3
 19691  0063E2  18DE               	xorwf	postinc2,w,c
 19692  0063E4  B4D8               	btfsc	status,2,c
 19693  0063E6  D035               	goto	l14719
 19694  0063E8                     u14270:
 19695                           
 19696                           ;../nwk/nwk_src/nwkTx.c: 188:     return 0;
 19697  0063E8  0E00               	movlw	0
 19698  0063EA  0012               	return	
 19699  0063EC                     l14707:
 19700                           
 19701                           ;../nwk/nwk_src/nwkTx.c: 191:   {;../nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state && frame->header.nwkSeq == command->seq)
 19702  0063EC  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 19703  0063F2  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 19704  0063F8  0E16               	movlw	22
 19705  0063FA  18DE               	xorwf	postinc2,w,c
 19706  0063FC  A4D8               	btfss	status,2,c
 19707  0063FE  D029               	goto	l14719
 19708  006400  EE20 F001          	lfsr	2,1
 19709  006404  500B               	movf	nwkTxAckReceived@command^0,w,c
 19710  006406  26D9               	addwf	fsr2l,f,c
 19711  006408  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 19712  00640A  22DA               	addwfc	fsr2h,f,c
 19713  00640C  EE10 F00C          	lfsr	1,12
 19714  006410  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19715  006412  26E1               	addwf	fsr1l,f,c
 19716  006414  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 19717  006416  22E2               	addwfc	fsr1h,f,c
 19718  006418  50DE               	movf	postinc2,w,c
 19719  00641A  18E6               	xorwf	postinc1,w,c
 19720  00641C  A4D8               	btfss	status,2,c
 19721  00641E  D019               	goto	l14719
 19722                           
 19723                           ;../nwk/nwk_src/nwkTx.c: 193:     {;../nwk/nwk_src/nwkTx.c: 194:       frame->state = NW
      +                          K_TX_STATE_CONFIRM;
 19724  006420  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 19725  006426  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 19726  00642C  0E17               	movlw	23
 19727  00642E  6EDF               	movwf	indf2,c
 19728                           
 19729                           ;../nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 19730  006430  EE20 F002          	lfsr	2,2
 19731  006434  500B               	movf	nwkTxAckReceived@command^0,w,c
 19732  006436  26D9               	addwf	fsr2l,f,c
 19733  006438  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 19734  00643A  22DA               	addwfc	fsr2h,f,c
 19735  00643C  EE10 F086          	lfsr	1,134
 19736  006440  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19737  006442  26E1               	addwf	fsr1l,f,c
 19738  006444  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 19739  006446  22E2               	addwfc	fsr1h,f,c
 19740  006448  006F FF7F FFE7     	movff	indf2,indf1
 19741                           
 19742                           ;../nwk/nwk_src/nwkTx.c: 196:       return 1;
 19743  00644E  0E01               	movlw	1
 19744  006450  0012               	return	
 19745  006452                     l14719:
 19746                           
 19747                           ;../nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 19748  006452  0060  F034  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 19749  006458  0060  F038  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 19750  00645E  ECFD  F037         	call	_nwkFrameNext	;wreg free
 19751  006462  0060  F008  F00D   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 19752  006468  0060  F00C  F00E   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 19753  00646E  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19754  006470  100E               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
 19755  006472  B4D8               	btfsc	status,2,c
 19756  006474  D7B9               	goto	u14270
 19757  006476  D7BA               	goto	l14707
 19758  006478                     __end_of_nwkTxAckReceived:
 19759                           	opt callstack 0
 19760                           
 19761 ;; *************** function _nwkFrameNext *****************
 19762 ;; Defined at:
 19763 ;;		line 111 in file "../nwk/nwk_src/nwkFrame.c"
 19764 ;; Parameters:    Size  Location     Type
 19765 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 19766 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19767 ;; Auto vars:     Size  Location     Type
 19768 ;;		None
 19769 ;; Return value:  Size  Location     Type
 19770 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
 19771 ;; Registers used:
 19772 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19773 ;; Tracked objects:
 19774 ;;		On entry : 0/0
 19775 ;;		On exit  : 0/0
 19776 ;;		Unchanged: 0/0
 19777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19780 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19782 ;;Total ram usage:        6 bytes
 19783 ;; Hardware stack levels used:    1
 19784 ;; Hardware stack levels required when called:    7
 19785 ;; This function calls:
 19786 ;;		Nothing
 19787 ;; This function is called by:
 19788 ;;		_nwkRxTaskHandler
 19789 ;;		_nwkTxAckReceived
 19790 ;;		_nwkTxAckWaitTimerHandler
 19791 ;;		_nwkTxDelayTimerHandler
 19792 ;;		_nwkTxTaskHandler
 19793 ;; This function uses a non-reentrant model
 19794 ;;
 19795                           
 19796                           	psect	text120
 19797  006FFA                     __ptext120:
 19798                           	opt callstack 0
 19799  006FFA                     _nwkFrameNext:
 19800                           	opt callstack 20
 19801                           
 19802                           ;../nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 112: {;../nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
 19803                           
 19804                           ;incstack = 0
 19805  006FFA  5002               	movf	nwkFrameNext@frame^0,w,c
 19806  006FFC  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
 19807  006FFE  A4D8               	btfss	status,2,c
 19808  007000  D026               	goto	l14559
 19809                           
 19810                           ;../nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 19811  007002  0EBD               	movlw	low _nwkFrameFrames
 19812  007004  6E02               	movwf	nwkFrameNext@frame^0,c
 19813  007006  0E05               	movlw	high _nwkFrameFrames
 19814  007008  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
 19815                           
 19816                           ;../nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 19817                           
 19818                           ;../nwk/nwk_src/nwkFrame.c: 116:     frame++;
 19819  00700A  0EAD               	movlw	173
 19820  00700C  6E04               	movwf	??_nwkFrameNext^0,c
 19821  00700E  0E02               	movlw	2
 19822  007010  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 19823  007012  0EBD               	movlw	low _nwkFrameFrames
 19824  007014  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 19825  007016  0E05               	movlw	high _nwkFrameFrames
 19826  007018  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 19827  00701A  5004               	movf	??_nwkFrameNext^0,w,c
 19828  00701C  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 19829  00701E  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 19830  007020  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 19831  007022  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 19832  007024  5C02               	subwf	nwkFrameNext@frame^0,w,c
 19833  007026  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 19834  007028  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 19835  00702A  B0D8               	btfsc	status,0,c
 19836  00702C  D026               	goto	u14080
 19837  00702E                     l14553:
 19838                           
 19839                           ;../nwk/nwk_src/nwkFrame.c: 119:   {;../nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_S
      +                          TATE_FREE != frame->state)
 19840  00702E  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
 19841  007034  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 19842  00703A  50DF               	movf	indf2,w,c
 19843  00703C  B4D8               	btfsc	status,2,c
 19844  00703E  D007               	goto	l14559
 19845                           
 19846                           ;../nwk/nwk_src/nwkFrame.c: 121:       return frame;
 19847  007040  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
 19848  007046  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 19849  00704C  0012               	return	
 19850  00704E                     l14559:
 19851                           
 19852                           ;../nwk/nwk_src/nwkFrame.c: 122:   }
 19853  00704E  0E89               	movlw	137
 19854  007050  2602               	addwf	nwkFrameNext@frame^0,f,c
 19855  007052  0E00               	movlw	0
 19856  007054  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 19857  007056  0EAD               	movlw	173
 19858  007058  6E04               	movwf	??_nwkFrameNext^0,c
 19859  00705A  0E02               	movlw	2
 19860  00705C  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 19861  00705E  0EBD               	movlw	low _nwkFrameFrames
 19862  007060  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 19863  007062  0E05               	movlw	high _nwkFrameFrames
 19864  007064  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 19865  007066  5004               	movf	??_nwkFrameNext^0,w,c
 19866  007068  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 19867  00706A  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 19868  00706C  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 19869  00706E  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 19870  007070  5C02               	subwf	nwkFrameNext@frame^0,w,c
 19871  007072  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 19872  007074  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 19873  007076  A0D8               	btfss	status,0,c
 19874  007078  D7DA               	goto	l14553
 19875  00707A                     u14080:
 19876                           
 19877                           ;../nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
 19878  00707A  0E00               	movlw	0
 19879  00707C  6E02               	movwf	?_nwkFrameNext^0,c
 19880  00707E  0E00               	movlw	0
 19881  007080  6E03               	movwf	(?_nwkFrameNext+1)^0,c
 19882  007082  0012               	return		;funcret
 19883  007084                     __end_of_nwkFrameNext:
 19884                           	opt callstack 0
 19885                           
 19886 ;; *************** function _nwkRouteErrorReceived *****************
 19887 ;; Defined at:
 19888 ;;		line 344 in file "../nwk/nwk_src/nwkRoute.c"
 19889 ;; Parameters:    Size  Location     Type
 19890 ;;  ind             1   12[COMRAM] PTR struct NWK_DataInd_t
 19891 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19892 ;; Auto vars:     Size  Location     Type
 19893 ;;  command         2   14[COMRAM] PTR __pack struct NwkCom
 19894 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19895 ;; Return value:  Size  Location     Type
 19896 ;;                  1    wreg      _Bool 
 19897 ;; Registers used:
 19898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19899 ;; Tracked objects:
 19900 ;;		On entry : 3F/0
 19901 ;;		On exit  : 0/0
 19902 ;;		Unchanged: 0/0
 19903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19907 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19908 ;;Total ram usage:        4 bytes
 19909 ;; Hardware stack levels used:    1
 19910 ;; Hardware stack levels required when called:    9
 19911 ;; This function calls:
 19912 ;;		_nwkRouteRemove
 19913 ;; This function is called by:
 19914 ;;		_nwkRxServiceDataInd
 19915 ;; This function uses a non-reentrant model
 19916 ;;
 19917                           
 19918                           	psect	text121
 19919  007AFC                     __ptext121:
 19920                           	opt callstack 0
 19921  007AFC                     _nwkRouteErrorReceived:
 19922                           	opt callstack 15
 19923                           
 19924                           ; BSR set to: 0
 19925                           ;../nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);../nwk/
      +                          nwk_src/nwkRoute.c: 345: {;../nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *com
      +                          mand = (NwkCommandRouteError_t *)ind->data;
 19926                           
 19927                           ;incstack = 0
 19928  007AFC  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 19929  007AFE  6ED9               	movwf	fsr2l,c
 19930  007B00  6ADA               	clrf	fsr2h,c
 19931  007B02  0E07               	movlw	7
 19932  007B04  26D9               	addwf	fsr2l,f,c
 19933  007B06  006F FF78  F00F    	movff	postinc2,nwkRouteErrorReceived@command
 19934  007B0C  006F FF74  F010    	movff	postdec2,nwkRouteErrorReceived@command+1
 19935                           
 19936                           ;../nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 19937  007B12  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 19938  007B14  6ED9               	movwf	fsr2l,c
 19939  007B16  6ADA               	clrf	fsr2h,c
 19940  007B18  0E09               	movlw	9
 19941  007B1A  26D9               	addwf	fsr2l,f,c
 19942  007B1C  0E06               	movlw	6
 19943  007B1E  18DE               	xorwf	postinc2,w,c
 19944  007B20  B4D8               	btfsc	status,2,c
 19945  007B22  D002               	goto	l14691
 19946                           
 19947                           ; BSR set to: 0
 19948                           ;../nwk/nwk_src/nwkRoute.c: 349:     return 0;
 19949  007B24  0E00               	movlw	0
 19950  007B26  0012               	return	
 19951  007B28                     l14691:
 19952                           
 19953                           ; BSR set to: 0
 19954                           ;../nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
 19955  007B28  EE20 F003          	lfsr	2,3
 19956  007B2C  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 19957  007B2E  26D9               	addwf	fsr2l,f,c
 19958  007B30  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 19959  007B32  22DA               	addwfc	fsr2h,f,c
 19960  007B34  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 19961  007B3A  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 19962  007B40  EE20 F005          	lfsr	2,5
 19963  007B44  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 19964  007B46  26D9               	addwf	fsr2l,f,c
 19965  007B48  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 19966  007B4A  22DA               	addwfc	fsr2h,f,c
 19967  007B4C  50DF               	movf	indf2,w,c
 19968  007B4E  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 19969  007B50  ECB7  F041         	call	_nwkRouteRemove	;wreg free
 19970                           
 19971                           ;../nwk/nwk_src/nwkRoute.c: 353:   return 1;
 19972  007B54  0E01               	movlw	1
 19973  007B56  0012               	return		;funcret
 19974  007B58                     __end_of_nwkRouteErrorReceived:
 19975                           	opt callstack 0
 19976                           
 19977 ;; *************** function _nwkRouteRemove *****************
 19978 ;; Defined at:
 19979 ;;		line 183 in file "../nwk/nwk_src/nwkRoute.c"
 19980 ;; Parameters:    Size  Location     Type
 19981 ;;  dst             2    7[COMRAM] unsigned short 
 19982 ;;  multicast       1    9[COMRAM] unsigned char 
 19983 ;; Auto vars:     Size  Location     Type
 19984 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 19985 ;;		 -> nwkRouteTable(70), NULL(0), 
 19986 ;; Return value:  Size  Location     Type
 19987 ;;                  1    wreg      void 
 19988 ;; Registers used:
 19989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19990 ;; Tracked objects:
 19991 ;;		On entry : 3E/1
 19992 ;;		On exit  : 0/0
 19993 ;;		Unchanged: 0/0
 19994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19995 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19998 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19999 ;;Total ram usage:        5 bytes
 20000 ;; Hardware stack levels used:    1
 20001 ;; Hardware stack levels required when called:    8
 20002 ;; This function calls:
 20003 ;;		_NWK_RouteFindEntry
 20004 ;;		_NWK_RouteFreeEntry
 20005 ;; This function is called by:
 20006 ;;		_nwkRouteErrorReceived
 20007 ;;		_nwkRxRejectDuplicate
 20008 ;; This function uses a non-reentrant model
 20009 ;;
 20010                           
 20011                           	psect	text122
 20012  00836E                     __ptext122:
 20013                           	opt callstack 0
 20014  00836E                     _nwkRouteRemove:
 20015                           	opt callstack 17
 20016                           
 20017                           ;../nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);..
      +                          /nwk/nwk_src/nwkRoute.c: 184: {;../nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t 
      +                          *entry;;../nwk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
 20018                           
 20019                           ;incstack = 0
 20020  00836E  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 20021  008374  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 20022  00837A  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 20023  008380  ECCC  F03B         	call	_NWK_RouteFindEntry	;wreg free
 20024  008384  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 20025  00838A  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 20026                           
 20027                           ;../nwk/nwk_src/nwkRoute.c: 188:   if (entry)
 20028  008390  500B               	movf	nwkRouteRemove@entry^0,w,c
 20029  008392  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
 20030  008394  B4D8               	btfsc	status,2,c
 20031  008396  0012               	return	
 20032                           
 20033                           ;../nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
 20034  008398  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 20035  00839E  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 20036  0083A4  ECD4  F042         	call	_NWK_RouteFreeEntry	;wreg free
 20037  0083A8  0012               	return		;funcret
 20038  0083AA                     __end_of_nwkRouteRemove:
 20039                           	opt callstack 0
 20040                           
 20041 ;; *************** function _NWK_RouteFreeEntry *****************
 20042 ;; Defined at:
 20043 ;;		line 134 in file "../nwk/nwk_src/nwkRoute.c"
 20044 ;; Parameters:    Size  Location     Type
 20045 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
 20046 ;;		 -> nwkRouteTable(70), NULL(0), 
 20047 ;; Auto vars:     Size  Location     Type
 20048 ;;		None
 20049 ;; Return value:  Size  Location     Type
 20050 ;;                  1    wreg      void 
 20051 ;; Registers used:
 20052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20053 ;; Tracked objects:
 20054 ;;		On entry : 0/2
 20055 ;;		On exit  : 0/0
 20056 ;;		Unchanged: 0/0
 20057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20062 ;;Total ram usage:        2 bytes
 20063 ;; Hardware stack levels used:    1
 20064 ;; Hardware stack levels required when called:    7
 20065 ;; This function calls:
 20066 ;;		Nothing
 20067 ;; This function is called by:
 20068 ;;		_nwkRouteRemove
 20069 ;;		_nwkRouteFrameSent
 20070 ;; This function uses a non-reentrant model
 20071 ;;
 20072                           
 20073                           	psect	text123
 20074  0085A8                     __ptext123:
 20075                           	opt callstack 0
 20076  0085A8                     _NWK_RouteFreeEntry:
 20077                           	opt callstack 19
 20078                           
 20079                           ;../nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);.
      +                          ./nwk/nwk_src/nwkRoute.c: 135: {;../nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
 20080                           
 20081                           ;incstack = 0
 20082  0085A8  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 20083  0085AE  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 20084  0085B4  B0DF               	btfsc	indf2,0,c
 20085  0085B6  0012               	return	
 20086                           
 20087                           ;../nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
 20088  0085B8  EE20 F001          	lfsr	2,1
 20089  0085BC  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 20090  0085BE  26D9               	addwf	fsr2l,f,c
 20091  0085C0  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 20092  0085C2  22DA               	addwfc	fsr2h,f,c
 20093  0085C4  0EFF               	movlw	255
 20094  0085C6  6EDE               	movwf	postinc2,c
 20095  0085C8  0EFF               	movlw	255
 20096  0085CA  6EDD               	movwf	postdec2,c
 20097                           
 20098                           ;../nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
 20099  0085CC  EE20 F005          	lfsr	2,5
 20100  0085D0  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 20101  0085D2  26D9               	addwf	fsr2l,f,c
 20102  0085D4  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 20103  0085D6  22DA               	addwfc	fsr2h,f,c
 20104  0085D8  0E00               	movlw	0
 20105  0085DA  6EDF               	movwf	indf2,c
 20106  0085DC  0012               	return		;funcret
 20107  0085DE                     __end_of_NWK_RouteFreeEntry:
 20108                           	opt callstack 0
 20109                           
 20110 ;; *************** function _printf *****************
 20111 ;; Defined at:
 20112 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 20113 ;; Parameters:    Size  Location     Type
 20114 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
 20115 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 20116 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(34), 
 20117 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 20118 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 20119 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 20120 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 20121 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 20122 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 20123 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 20124 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 20125 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 20126 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 20127 ;; Auto vars:     Size  Location     Type
 20128 ;;  ret             2    0        int 
 20129 ;;  ap              1   86[COMRAM] PTR void [1]
 20130 ;;		 -> ?_printf(2), 
 20131 ;; Return value:  Size  Location     Type
 20132 ;;                  2   22[BANK0 ] int 
 20133 ;; Registers used:
 20134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20135 ;; Tracked objects:
 20136 ;;		On entry : 3F/0
 20137 ;;		On exit  : 3F/1
 20138 ;;		Unchanged: 0/0
 20139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20140 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20141 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20143 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20144 ;;Total ram usage:       13 bytes
 20145 ;; Hardware stack levels used:    1
 20146 ;; Hardware stack levels required when called:   15
 20147 ;; This function calls:
 20148 ;;		_vfprintf
 20149 ;; This function is called by:
 20150 ;;		_appDataInd
 20151 ;;		_cmdSend
 20152 ;;		_cmdBcast
 20153 ;;		_cmdAddr
 20154 ;;		_cmdSetAddr
 20155 ;;		_cmdNaddr
 20156 ;;		_cmdSetNaddr
 20157 ;;		_cmdMac
 20158 ;;		_cmdSetSink
 20159 ;;		_cmdSetAES
 20160 ;;		_cmdGetCAD
 20161 ;;		_cmdRstCAD
 20162 ;;		_cmdGetMode
 20163 ;;		_cmdGetRFCH
 20164 ;;		_cmdSetRFCH
 20165 ;;		_cmdGetTX
 20166 ;;		_cmdSetTX
 20167 ;;		_cmdGetCADRSSI
 20168 ;;		_cmdSetCADRSSI
 20169 ;;		_cmdSetParity
 20170 ;;		_cmdBootLoad
 20171 ;;		_cmdGetSF
 20172 ;;		_cmdSetSF
 20173 ;;		_print_hop_table
 20174 ;;		_set_hop_table_ttl
 20175 ;;		_executeATCommand
 20176 ;;		_sendInfo
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           	psect	text124
 20181  008950                     __ptext124:
 20182                           	opt callstack 0
 20183  008950                     _printf:
 20184                           	opt callstack 12
 20185                           
 20186                           ; BSR set to: 0
 20187                           
 20188                           ;incstack = 0
 20189  008950  0E78               	movlw	low (?_printf+2)
 20190  008952  6E57               	movwf	printf@ap^0,c
 20191                           
 20192                           ; BSR set to: 0
 20193  008954  0E00               	movlw	0
 20194  008956  6E4E               	movwf	vfprintf@fp^0,c
 20195  008958  0E00               	movlw	0
 20196  00895A  6E4F               	movwf	(vfprintf@fp+1)^0,c
 20197  00895C  0060  F1D8  F050   	movff	printf@fmt,vfprintf@fmt
 20198  008962  0060  F1DC  F051   	movff	printf@fmt+1,vfprintf@fmt+1
 20199  008968  0E57               	movlw	low printf@ap
 20200  00896A  6E52               	movwf	vfprintf@ap^0,c
 20201  00896C  EC31  F03C         	call	_vfprintf	;wreg free
 20202                           
 20203                           ; BSR set to: 1
 20204  008970  0012               	return		;funcret
 20205  008972                     __end_of_printf:
 20206                           	opt callstack 0
 20207                           
 20208 ;; *************** function _vfprintf *****************
 20209 ;; Defined at:
 20210 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20211 ;; Parameters:    Size  Location     Type
 20212 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
 20213 ;;		 -> NULL(0), 
 20214 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
 20215 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 20216 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(34), 
 20217 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 20218 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 20219 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 20220 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 20221 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 20222 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 20223 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 20224 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 20225 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 20226 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 20227 ;;  ap              1   81[COMRAM] PTR PTR void 
 20228 ;;		 -> printf@ap(1), 
 20229 ;; Auto vars:     Size  Location     Type
 20230 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 20231 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 20232 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(34), 
 20233 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 20234 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 20235 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 20236 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 20237 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 20238 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 20239 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 20240 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 20241 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 20242 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 20243 ;; Return value:  Size  Location     Type
 20244 ;;                  2   77[COMRAM] int 
 20245 ;; Registers used:
 20246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20247 ;; Tracked objects:
 20248 ;;		On entry : 3F/0
 20249 ;;		On exit  : 3F/1
 20250 ;;		Unchanged: 0/0
 20251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20252 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20255 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20256 ;;Total ram usage:        7 bytes
 20257 ;; Hardware stack levels used:    1
 20258 ;; Hardware stack levels required when called:   14
 20259 ;; This function calls:
 20260 ;;		_vfpfcnvrt
 20261 ;; This function is called by:
 20262 ;;		_printf
 20263 ;; This function uses a non-reentrant model
 20264 ;;
 20265                           
 20266                           	psect	text125
 20267  007862                     __ptext125:
 20268                           	opt callstack 0
 20269  007862                     _vfprintf:
 20270                           	opt callstack 12
 20271                           
 20272                           ; BSR set to: 0
 20273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 20274                           
 20275                           ; BSR set to: 1
 20276                           ;incstack = 0
 20277  007862  0060  F140  F053   	movff	vfprintf@fmt,vfprintf@cfmt
 20278  007868  0060  F144  F054   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 20279                           
 20280                           ; BSR set to: 0
 20281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 20282  00786E  0E00               	movlw	0
 20283  007870  0101               	movlb	1	; () banked
 20284  007872  6F6A               	movwf	(_nout+1)& (0+255),b
 20285  007874  0E00               	movlw	0
 20286  007876  6F69               	movwf	_nout& (0+255),b
 20287                           
 20288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 20289  007878  D012               	goto	l14617
 20290  00787A                     l14615:
 20291                           
 20292                           ; BSR set to: 1
 20293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 20294  00787A  0060  F138  F046   	movff	vfprintf@fp,vfpfcnvrt@fp
 20295  007880  0060  F13C  F047   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 20296  007886  0E53               	movlw	low vfprintf@cfmt
 20297  007888  6E48               	movwf	vfpfcnvrt@fmt^0,c
 20298  00788A  0060  F148  F049   	movff	vfprintf@ap,vfpfcnvrt@ap
 20299  007890  EC17  F003         	call	_vfpfcnvrt	;wreg free
 20300  007894  5046               	movf	?_vfpfcnvrt^0,w,c
 20301  007896  0101               	movlb	1	; () banked
 20302  007898  2769               	addwf	_nout& (0+255),f,b
 20303  00789A  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
 20304  00789C  236A               	addwfc	(_nout+1)& (0+255),f,b
 20305  00789E                     l14617:
 20306                           
 20307                           ; BSR set to: 1
 20308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 20309  00789E  0060  F14F  FFF6   	movff	vfprintf@cfmt,tblptrl
 20310  0078A4  0060  F153  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 20311  0078AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20312  0078AA  6AF8               	clrf	tblptru,c
 20313  0078AC                     	endif
 20314  0078AC                     	if	0	;tblptru may be non-zero
 20315  0078AC                     	endif
 20316  0078AC  0008               	tblrd		*
 20317  0078AE  50F5               	movf	tablat,w,c
 20318  0078B0  0900               	iorlw	0
 20319  0078B2  A4D8               	btfss	status,2,c
 20320  0078B4  D7E2               	goto	l14615
 20321                           
 20322                           ; BSR set to: 1
 20323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 20324  0078B6  0060  F5A4  F04E   	movff	_nout,?_vfprintf
 20325  0078BC  0060  F5A8  F04F   	movff	_nout+1,?_vfprintf+1
 20326                           
 20327                           ; BSR set to: 1
 20328  0078C2  0012               	return		;funcret
 20329  0078C4                     __end_of_vfprintf:
 20330                           	opt callstack 0
 20331                           
 20332 ;; *************** function _vfpfcnvrt *****************
 20333 ;; Defined at:
 20334 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20335 ;; Parameters:    Size  Location     Type
 20336 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
 20337 ;;		 -> NULL(0), 
 20338 ;;  fmt             1   71[COMRAM] PTR PTR unsigned char 
 20339 ;;		 -> vfprintf@cfmt(2), 
 20340 ;;  ap              1   72[COMRAM] PTR PTR void 
 20341 ;;		 -> printf@ap(1), 
 20342 ;; Auto vars:     Size  Location     Type
 20343 ;;  llu             8   14[BANK0 ] unsigned long long 
 20344 ;;  ll              8    0[BANK0 ] long long 
 20345 ;;  f               4    0        long long 
 20346 ;;  vp              3    0        PTR void 
 20347 ;;  ct              3    0        unsigned char [3]
 20348 ;;  done            2   10[BANK0 ] int 
 20349 ;;  i               2    0        int 
 20350 ;;  cp              1    9[BANK0 ] PTR unsigned char 
 20351 ;;		 -> ?_printf(2), appDataInd@data(65), 
 20352 ;;  c               1    8[BANK0 ] unsigned char 
 20353 ;; Return value:  Size  Location     Type
 20354 ;;                  2   69[COMRAM] int 
 20355 ;; Registers used:
 20356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20357 ;; Tracked objects:
 20358 ;;		On entry : 3E/1
 20359 ;;		On exit  : 0/0
 20360 ;;		Unchanged: 0/0
 20361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20363 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20365 ;;      Totals:         8      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20366 ;;Total ram usage:       30 bytes
 20367 ;; Hardware stack levels used:    1
 20368 ;; Hardware stack levels required when called:   13
 20369 ;; This function calls:
 20370 ;;		_atoi
 20371 ;;		_dtoa
 20372 ;;		_fputc
 20373 ;;		_isdigit
 20374 ;;		_stoa
 20375 ;;		_utoa
 20376 ;;		_xtoa
 20377 ;; This function is called by:
 20378 ;;		_vfprintf
 20379 ;; This function uses a non-reentrant model
 20380 ;;
 20381                           
 20382                           	psect	text126
 20383  00062E                     __ptext126:
 20384                           	opt callstack 0
 20385  00062E                     _vfpfcnvrt:
 20386                           	opt callstack 12
 20387                           
 20388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 20389                           
 20390                           ; BSR set to: 1
 20391                           ;incstack = 0
 20392  00062E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20393  000630  6ED9               	movwf	fsr2l,c
 20394  000632  6ADA               	clrf	fsr2h,c
 20395  000634  006F FF7B FFF6     	movff	postinc2,tblptrl
 20396  00063A  006F FF77 FFF7     	movff	postdec2,tblptrh
 20397  000640                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20398  000640  6AF8               	clrf	tblptru,c
 20399  000642                     	endif
 20400  000642                     	if	0	;tblptru may be non-zero
 20401  000642                     	endif
 20402  000642  0008               	tblrd		*
 20403  000644  50F5               	movf	tablat,w,c
 20404  000646  0A25               	xorlw	37
 20405  000648  A4D8               	btfss	status,2,c
 20406  00064A  D24C               	goto	l14531
 20407                           
 20408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 20409  00064C  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20410  00064E  6ED9               	movwf	fsr2l,c
 20411  000650  6ADA               	clrf	fsr2h,c
 20412  000652  2ADE               	incf	postinc2,f,c
 20413  000654  0E00               	movlw	0
 20414  000656  22DD               	addwfc	postdec2,f,c
 20415                           
 20416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 20417  000658  0E00               	movlw	0
 20418  00065A  0100               	movlb	0	; () banked
 20419  00065C  6FE3               	movwf	(_width+1)& (0+255),b
 20420  00065E  0E00               	movlw	0
 20421  000660  6FE2               	movwf	_width& (0+255),b
 20422  000662  C0E2  F0E6         	movff	_width,_flags
 20423  000666  C0E3  F0E7         	movff	_width+1,_flags+1
 20424                           
 20425                           ; BSR set to: 0
 20426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 20427  00066A  69E4               	setf	_prec& (0+255),b
 20428  00066C  69E5               	setf	(_prec+1)& (0+255),b
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 20432  00066E  0E00               	movlw	0
 20433  000670  6F6B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 20434  000672  0E00               	movlw	0
 20435  000674  D013               	goto	L22
 20436  000676                     l14419:
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 20440  000676  81E6               	bsf	_flags& (0+255),0,b
 20441  000678                     l14421:
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 20445  000678  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20446  00067A  6ED9               	movwf	fsr2l,c
 20447  00067C  6ADA               	clrf	fsr2h,c
 20448  00067E  2ADE               	incf	postinc2,f,c
 20449  000680  0E00               	movlw	0
 20450  000682  22DD               	addwfc	postdec2,f,c
 20451                           
 20452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 20453  000684  D030               	goto	l14445
 20454  000686                     l14423:
 20455                           
 20456                           ; BSR set to: 0
 20457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 20458  000686  83E6               	bsf	_flags& (0+255),1,b
 20459  000688  D7F7               	goto	l14421
 20460  00068A                     l14427:
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 20464  00068A  85E6               	bsf	_flags& (0+255),2,b
 20465  00068C  D7F5               	goto	l14421
 20466  00068E                     l14431:
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 20470  00068E  87E6               	bsf	_flags& (0+255),3,b
 20471  000690  D7F3               	goto	l14421
 20472  000692                     l14435:
 20473                           
 20474                           ; BSR set to: 0
 20475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 20476  000692  89E6               	bsf	_flags& (0+255),4,b
 20477  000694  D7F1               	goto	l14421
 20478  000696                     l14439:
 20479                           
 20480                           ; BSR set to: 0
 20481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 20482  000696  0E00               	movlw	0
 20483  000698  6F6B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 20484  00069A  0E01               	movlw	1
 20485  00069C                     L22:
 20486  00069C  6F6A               	movwf	vfpfcnvrt@done& (0+255),b
 20487                           
 20488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 20489  00069E  D023               	goto	l14445
 20490  0006A0                     l14443:
 20491                           
 20492                           ; BSR set to: 0
 20493  0006A0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20494  0006A2  6ED9               	movwf	fsr2l,c
 20495  0006A4  6ADA               	clrf	fsr2h,c
 20496  0006A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 20497  0006AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 20498  0006B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20499  0006B2  6AF8               	clrf	tblptru,c
 20500  0006B4                     	endif
 20501  0006B4                     	if	0	;tblptru may be non-zero
 20502  0006B4                     	endif
 20503  0006B4  0008               	tblrd		*
 20504  0006B6  50F5               	movf	tablat,w,c
 20505  0006B8  6E4A               	movwf	??_vfpfcnvrt^0,c
 20506  0006BA  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
 20507                           
 20508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20509                           ; Switch size 1, requested type "simple"
 20510                           ; Number of cases is 1, Range of values is 0 to 0
 20511                           ; switch strategies available:
 20512                           ; Name         Instructions Cycles
 20513                           ; simple_byte            4     3 (average)
 20514                           ;	Chosen strategy is simple_byte
 20515  0006BC  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 20516  0006BE  0A00               	xorlw	0	; case 0
 20517  0006C0  A4D8               	btfss	status,2,c
 20518  0006C2  D7E9               	goto	l14439
 20519                           
 20520                           ; BSR set to: 0
 20521                           ; Switch size 1, requested type "simple"
 20522                           ; Number of cases is 5, Range of values is 32 to 48
 20523                           ; switch strategies available:
 20524                           ; Name         Instructions Cycles
 20525                           ; simple_byte           16     9 (average)
 20526                           ;	Chosen strategy is simple_byte
 20527  0006C4  504A               	movf	??_vfpfcnvrt^0,w,c
 20528  0006C6  0A20               	xorlw	32	; case 32
 20529  0006C8  B4D8               	btfsc	status,2,c
 20530  0006CA  D7E1               	goto	l14431
 20531  0006CC  0A03               	xorlw	3	; case 35
 20532  0006CE  B4D8               	btfsc	status,2,c
 20533  0006D0  D7E0               	goto	l14435
 20534  0006D2  0A08               	xorlw	8	; case 43
 20535  0006D4  B4D8               	btfsc	status,2,c
 20536  0006D6  D7D9               	goto	l14427
 20537  0006D8  0A06               	xorlw	6	; case 45
 20538  0006DA  B4D8               	btfsc	status,2,c
 20539  0006DC  D7CC               	goto	l14419
 20540  0006DE  0A1D               	xorlw	29	; case 48
 20541  0006E0  B4D8               	btfsc	status,2,c
 20542  0006E2  D7D1               	goto	l14423
 20543  0006E4  D7D8               	goto	l14439
 20544  0006E6                     l14445:
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 20548  0006E6  516A               	movf	vfpfcnvrt@done& (0+255),w,b
 20549  0006E8  116B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 20550  0006EA  B4D8               	btfsc	status,2,c
 20551  0006EC  D7D9               	goto	l14443
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 20555  0006EE  B1E6               	btfsc	_flags& (0+255),0,b
 20556                           
 20557                           ; BSR set to: 0
 20558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 20559  0006F0  93E6               	bcf	_flags& (0+255),1,b
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 20563  0006F2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20564  0006F4  6ED9               	movwf	fsr2l,c
 20565  0006F6  6ADA               	clrf	fsr2h,c
 20566  0006F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20567  0006FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20568  000704                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20569  000704  6AF8               	clrf	tblptru,c
 20570  000706                     	endif
 20571  000706                     	if	0	;tblptru may be non-zero
 20572  000706                     	endif
 20573  000706  0008               	tblrd		*
 20574  000708  50F5               	movf	tablat,w,c
 20575  00070A  0A2A               	xorlw	42
 20576  00070C  A4D8               	btfss	status,2,c
 20577  00070E  D01C               	goto	l14459
 20578                           
 20579                           ; BSR set to: 0
 20580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 20581  000710  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20582  000712  6ED9               	movwf	fsr2l,c
 20583  000714  6ADA               	clrf	fsr2h,c
 20584  000716  2ADE               	incf	postinc2,f,c
 20585  000718  0E00               	movlw	0
 20586  00071A  22DD               	addwfc	postdec2,f,c
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 20590  00071C  5049               	movf	vfpfcnvrt@ap^0,w,c
 20591  00071E  6ED9               	movwf	fsr2l,c
 20592  000720  6ADA               	clrf	fsr2h,c
 20593  000722  0E02               	movlw	2
 20594  000724  26DF               	addwf	indf2,f,c
 20595  000726  5CDF               	subwf	indf2,w,c
 20596  000728  6ED9               	movwf	fsr2l,c
 20597  00072A  6ADA               	clrf	fsr2h,c
 20598  00072C  006F FF78  F0E2    	movff	postinc2,_width
 20599  000732  006F FF78  F0E3    	movff	postinc2,_width+1
 20600                           
 20601                           ; BSR set to: 0
 20602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 20603  000738  AFE3               	btfss	(_width+1)& (0+255),7,b
 20604  00073A  D044               	goto	u13970
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 20608  00073C  81E6               	bsf	_flags& (0+255),0,b
 20609                           
 20610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 20611  00073E  6DE2               	negf	_width& (0+255),b
 20612  000740  1FE3               	comf	(_width+1)& (0+255),f,b
 20613  000742  B0D8               	btfsc	status,0,c
 20614  000744  2BE3               	incf	(_width+1)& (0+255),f,b
 20615  000746  D03E               	goto	u13970
 20616  000748                     l14459:
 20617                           
 20618                           ; BSR set to: 0
 20619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 20620  000748  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20621  00074A  6ED9               	movwf	fsr2l,c
 20622  00074C  6ADA               	clrf	fsr2h,c
 20623  00074E  006F FF78  F009    	movff	postinc2,atoi@s
 20624  000754  006F FF74  F00A    	movff	postdec2,atoi@s+1
 20625  00075A  EC6F  F01F         	call	_atoi	;wreg free
 20626  00075E  0060  F024  F0E2   	movff	?_atoi,_width
 20627  000764  0060  F028  F0E3   	movff	?_atoi+1,_width+1
 20628                           
 20629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 20630  00076A  D006               	goto	l14463
 20631  00076C                     l14461:
 20632                           
 20633                           ; BSR set to: 0
 20634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 20635  00076C  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20636  00076E  6ED9               	movwf	fsr2l,c
 20637  000770  6ADA               	clrf	fsr2h,c
 20638  000772  2ADE               	incf	postinc2,f,c
 20639  000774  0E00               	movlw	0
 20640  000776  22DD               	addwfc	postdec2,f,c
 20641  000778                     l14463:
 20642  000778  0ED0               	movlw	208
 20643  00077A  6E4A               	movwf	??_vfpfcnvrt^0,c
 20644  00077C  0EFF               	movlw	255
 20645  00077E  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
 20646  000780  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20647  000782  6ED9               	movwf	fsr2l,c
 20648  000784  6ADA               	clrf	fsr2h,c
 20649  000786  006F FF7B FFF6     	movff	postinc2,tblptrl
 20650  00078C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20651  000792                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20652  000792  6AF8               	clrf	tblptru,c
 20653  000794                     	endif
 20654  000794                     	if	0	;tblptru may be non-zero
 20655  000794                     	endif
 20656  000794  0008               	tblrd		*
 20657  000796  50F5               	movf	tablat,w,c
 20658  000798  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
 20659  00079A  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
 20660  00079C  504A               	movf	??_vfpfcnvrt^0,w,c
 20661  00079E  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
 20662  0007A0  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 20663  0007A2  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 20664  0007A4  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
 20665  0007A6  E106               	bnz	u13950
 20666  0007A8  0E0A               	movlw	10
 20667  0007AA  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
 20668  0007AC  B0D8               	btfsc	status,0,c
 20669  0007AE  D002               	goto	u13950
 20670  0007B0  0E01               	movlw	1
 20671  0007B2  D001               	goto	u13960
 20672  0007B4                     u13950:
 20673  0007B4  0E00               	movlw	0
 20674  0007B6                     u13960:
 20675  0007B6  0100               	movlb	0	; () banked
 20676  0007B8  6F6C               	movwf	_vfpfcnvrt$7262& (0+255),b
 20677  0007BA  6B6D               	clrf	(_vfpfcnvrt$7262+1)& (0+255),b
 20678                           
 20679                           ; BSR set to: 0
 20680  0007BC  516C               	movf	_vfpfcnvrt$7262& (0+255),w,b
 20681  0007BE  116D               	iorwf	(_vfpfcnvrt$7262+1)& (0+255),w,b
 20682  0007C0  A4D8               	btfss	status,2,c
 20683  0007C2  D7D4               	goto	l14461
 20684  0007C4                     u13970:
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20688  0007C4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20689  0007C6  6ED9               	movwf	fsr2l,c
 20690  0007C8  6ADA               	clrf	fsr2h,c
 20691  0007CA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20692  0007D0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20693  0007D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20694  0007D6  6AF8               	clrf	tblptru,c
 20695  0007D8                     	endif
 20696  0007D8                     	if	0	;tblptru may be non-zero
 20697  0007D8                     	endif
 20698  0007D8  0008               	tblrd		*
 20699  0007DA  50F5               	movf	tablat,w,c
 20700  0007DC  0A64               	xorlw	100
 20701  0007DE  B4D8               	btfsc	status,2,c
 20702  0007E0  D00F               	goto	u13990
 20703                           
 20704                           ; BSR set to: 0
 20705  0007E2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20706  0007E4  6ED9               	movwf	fsr2l,c
 20707  0007E6  6ADA               	clrf	fsr2h,c
 20708  0007E8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20709  0007EE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20710  0007F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20711  0007F4  6AF8               	clrf	tblptru,c
 20712  0007F6                     	endif
 20713  0007F6                     	if	0	;tblptru may be non-zero
 20714  0007F6                     	endif
 20715  0007F6  0008               	tblrd		*
 20716  0007F8  50F5               	movf	tablat,w,c
 20717  0007FA  0A69               	xorlw	105
 20718  0007FC  A4D8               	btfss	status,2,c
 20719  0007FE  D044               	goto	l14481
 20720  000800                     u13990:
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20724  000800  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20725  000802  6ED9               	movwf	fsr2l,c
 20726  000804  6ADA               	clrf	fsr2h,c
 20727  000806  2ADE               	incf	postinc2,f,c
 20728  000808  0E00               	movlw	0
 20729  00080A  22DD               	addwfc	postdec2,f,c
 20730                           
 20731                           ; BSR set to: 0
 20732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20733  00080C  5049               	movf	vfpfcnvrt@ap^0,w,c
 20734  00080E  6ED9               	movwf	fsr2l,c
 20735  000810  6ADA               	clrf	fsr2h,c
 20736  000812  50DF               	movf	indf2,w,c
 20737  000814  2ADF               	incf	indf2,f,c
 20738  000816  2ADF               	incf	indf2,f,c
 20739  000818  6ED9               	movwf	fsr2l,c
 20740  00081A  6ADA               	clrf	fsr2h,c
 20741  00081C  006F FF78  F060    	movff	postinc2,vfpfcnvrt@ll
 20742  000822  006F FF74  F061    	movff	postdec2,vfpfcnvrt@ll+1
 20743  000828  0E00               	movlw	0
 20744  00082A  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 20745  00082C  0EFF               	movlw	-1
 20746  00082E  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 20747  000830  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 20748  000832  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 20749  000834  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 20750  000836  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 20751  000838  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 20752                           
 20753                           ; BSR set to: 0
 20754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20755  00083A  0060  F118  F01F   	movff	vfpfcnvrt@fp,dtoa@fp
 20756  000840  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 20757  000846  0060  F180  F021   	movff	vfpfcnvrt@ll,dtoa@d
 20758  00084C  0060  F184  F022   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 20759  000852  0060  F188  F023   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 20760  000858  0060  F18C  F024   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 20761  00085E  0060  F190  F025   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 20762  000864  0060  F194  F026   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 20763  00086A  0060  F198  F027   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 20764  000870  0060  F19C  F028   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 20765  000876  EC3F  F010         	call	_dtoa	;wreg free
 20766  00087A  0060  F07C  F046   	movff	?_dtoa,?_vfpfcnvrt
 20767  000880  0060  F080  F047   	movff	?_dtoa+1,?_vfpfcnvrt+1
 20768  000886  0012               	return	
 20769  000888                     l14481:
 20770                           
 20771                           ; BSR set to: 0
 20772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 20773  000888  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20774  00088A  6ED9               	movwf	fsr2l,c
 20775  00088C  6ADA               	clrf	fsr2h,c
 20776  00088E  006F FF7B FFF6     	movff	postinc2,tblptrl
 20777  000894  006F FF77 FFF7     	movff	postdec2,tblptrh
 20778  00089A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20779  00089A  6AF8               	clrf	tblptru,c
 20780  00089C                     	endif
 20781  00089C                     	if	0	;tblptru may be non-zero
 20782  00089C                     	endif
 20783  00089C  0008               	tblrd		*
 20784  00089E  50F5               	movf	tablat,w,c
 20785  0008A0  0A73               	xorlw	115
 20786  0008A2  A4D8               	btfss	status,2,c
 20787  0008A4  D022               	goto	l14491
 20788                           
 20789                           ; BSR set to: 0
 20790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 20791  0008A6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20792  0008A8  6ED9               	movwf	fsr2l,c
 20793  0008AA  6ADA               	clrf	fsr2h,c
 20794  0008AC  2ADE               	incf	postinc2,f,c
 20795  0008AE  0E00               	movlw	0
 20796  0008B0  22DD               	addwfc	postdec2,f,c
 20797                           
 20798                           ; BSR set to: 0
 20799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20800  0008B2  5049               	movf	vfpfcnvrt@ap^0,w,c
 20801  0008B4  6ED9               	movwf	fsr2l,c
 20802  0008B6  6ADA               	clrf	fsr2h,c
 20803  0008B8  2ADF               	incf	indf2,f,c
 20804  0008BA  04DF               	decf	indf2,w,c
 20805  0008BC  6ED9               	movwf	fsr2l,c
 20806  0008BE  6ADA               	clrf	fsr2h,c
 20807  0008C0  006F FF78  F069    	movff	postinc2,vfpfcnvrt@cp
 20808                           
 20809                           ; BSR set to: 0
 20810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 20811  0008C6  0060  F118  F00D   	movff	vfpfcnvrt@fp,stoa@fp
 20812  0008CC  0060  F11C  F00E   	movff	vfpfcnvrt@fp+1,stoa@fp+1
 20813  0008D2  0060  F1A4  F00F   	movff	vfpfcnvrt@cp,stoa@s
 20814  0008D8  ECDE  F022         	call	_stoa	;wreg free
 20815  0008DC  0060  F034  F046   	movff	?_stoa,?_vfpfcnvrt
 20816  0008E2  0060  F038  F047   	movff	?_stoa+1,?_vfpfcnvrt+1
 20817  0008E8  0012               	return	
 20818  0008EA                     l14491:
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 20822  0008EA  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20823  0008EC  6ED9               	movwf	fsr2l,c
 20824  0008EE  6ADA               	clrf	fsr2h,c
 20825  0008F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 20826  0008F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 20827  0008FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20828  0008FC  6AF8               	clrf	tblptru,c
 20829  0008FE                     	endif
 20830  0008FE                     	if	0	;tblptru may be non-zero
 20831  0008FE                     	endif
 20832  0008FE  0008               	tblrd		*
 20833  000900  50F5               	movf	tablat,w,c
 20834  000902  0A75               	xorlw	117
 20835  000904  A4D8               	btfss	status,2,c
 20836  000906  D047               	goto	l14501
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 20840  000908  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20841  00090A  6ED9               	movwf	fsr2l,c
 20842  00090C  6ADA               	clrf	fsr2h,c
 20843  00090E  2ADE               	incf	postinc2,f,c
 20844  000910  0E00               	movlw	0
 20845  000912  22DD               	addwfc	postdec2,f,c
 20846                           
 20847                           ; BSR set to: 0
 20848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20849  000914  5049               	movf	vfpfcnvrt@ap^0,w,c
 20850  000916  6ED9               	movwf	fsr2l,c
 20851  000918  6ADA               	clrf	fsr2h,c
 20852  00091A  50DF               	movf	indf2,w,c
 20853  00091C  2ADF               	incf	indf2,f,c
 20854  00091E  2ADF               	incf	indf2,f,c
 20855  000920  6ED9               	movwf	fsr2l,c
 20856  000922  6ADA               	clrf	fsr2h,c
 20857  000924  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 20858  00092A  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 20859  000930  0060  F128  F06E   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 20860  000936  0060  F12C  F06F   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 20861  00093C  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 20862  00093E  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 20863  000940  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 20864  000942  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 20865  000944  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 20866  000946  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 20867                           
 20868                           ; BSR set to: 0
 20869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 20870  000948  0060  F118  F01F   	movff	vfpfcnvrt@fp,utoa@fp
 20871  00094E  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,utoa@fp+1
 20872  000954  0060  F1B8  F021   	movff	vfpfcnvrt@llu,utoa@d
 20873  00095A  0060  F1BC  F022   	movff	vfpfcnvrt@llu+1,utoa@d+1
 20874  000960  0060  F1C0  F023   	movff	vfpfcnvrt@llu+2,utoa@d+2
 20875  000966  0060  F1C4  F024   	movff	vfpfcnvrt@llu+3,utoa@d+3
 20876  00096C  0060  F1C8  F025   	movff	vfpfcnvrt@llu+4,utoa@d+4
 20877  000972  0060  F1CC  F026   	movff	vfpfcnvrt@llu+5,utoa@d+5
 20878  000978  0060  F1D0  F027   	movff	vfpfcnvrt@llu+6,utoa@d+6
 20879  00097E  0060  F1D4  F028   	movff	vfpfcnvrt@llu+7,utoa@d+7
 20880  000984  EC65  F016         	call	_utoa	;wreg free
 20881  000988  0060  F07C  F046   	movff	?_utoa,?_vfpfcnvrt
 20882  00098E  0060  F080  F047   	movff	?_utoa+1,?_vfpfcnvrt+1
 20883  000994  0012               	return	
 20884  000996                     l14501:
 20885                           
 20886                           ; BSR set to: 0
 20887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 20888  000996  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20889  000998  6ED9               	movwf	fsr2l,c
 20890  00099A  6ADA               	clrf	fsr2h,c
 20891  00099C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20892  0009A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20893  0009A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20894  0009A8  6AF8               	clrf	tblptru,c
 20895  0009AA                     	endif
 20896  0009AA                     	if	0	;tblptru may be non-zero
 20897  0009AA                     	endif
 20898  0009AA  0008               	tblrd		*
 20899  0009AC  50F5               	movf	tablat,w,c
 20900  0009AE  0A78               	xorlw	120
 20901  0009B0  B4D8               	btfsc	status,2,c
 20902  0009B2  D00F               	goto	u14030
 20903                           
 20904                           ; BSR set to: 0
 20905  0009B4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20906  0009B6  6ED9               	movwf	fsr2l,c
 20907  0009B8  6ADA               	clrf	fsr2h,c
 20908  0009BA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20909  0009C0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20910  0009C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20911  0009C6  6AF8               	clrf	tblptru,c
 20912  0009C8                     	endif
 20913  0009C8                     	if	0	;tblptru may be non-zero
 20914  0009C8                     	endif
 20915  0009C8  0008               	tblrd		*
 20916  0009CA  50F5               	movf	tablat,w,c
 20917  0009CC  0A58               	xorlw	88
 20918  0009CE  A4D8               	btfss	status,2,c
 20919  0009D0  D058               	goto	l14515
 20920  0009D2                     u14030:
 20921                           
 20922                           ; BSR set to: 0
 20923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 20924  0009D2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20925  0009D4  6ED9               	movwf	fsr2l,c
 20926  0009D6  6ADA               	clrf	fsr2h,c
 20927  0009D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20928  0009DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20929  0009E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20930  0009E4  6AF8               	clrf	tblptru,c
 20931  0009E6                     	endif
 20932  0009E6                     	if	0	;tblptru may be non-zero
 20933  0009E6                     	endif
 20934  0009E6  0008               	tblrd		*
 20935  0009E8  006F FFD4  F068    	movff	tablat,vfpfcnvrt@c
 20936                           
 20937                           ; BSR set to: 0
 20938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 20939  0009EE  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20940  0009F0  6ED9               	movwf	fsr2l,c
 20941  0009F2  6ADA               	clrf	fsr2h,c
 20942  0009F4  2ADE               	incf	postinc2,f,c
 20943  0009F6  0E00               	movlw	0
 20944  0009F8  22DD               	addwfc	postdec2,f,c
 20945                           
 20946                           ; BSR set to: 0
 20947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20948  0009FA  5049               	movf	vfpfcnvrt@ap^0,w,c
 20949  0009FC  6ED9               	movwf	fsr2l,c
 20950  0009FE  6ADA               	clrf	fsr2h,c
 20951  000A00  50DF               	movf	indf2,w,c
 20952  000A02  2ADF               	incf	indf2,f,c
 20953  000A04  2ADF               	incf	indf2,f,c
 20954  000A06  6ED9               	movwf	fsr2l,c
 20955  000A08  6ADA               	clrf	fsr2h,c
 20956  000A0A  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 20957  000A10  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 20958  000A16  0060  F128  F06E   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 20959  000A1C  0060  F12C  F06F   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 20960  000A22  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 20961  000A24  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 20962  000A26  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 20963  000A28  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 20964  000A2A  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 20965  000A2C  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 20966                           
 20967                           ; BSR set to: 0
 20968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 20969  000A2E  0060  F118  F01F   	movff	vfpfcnvrt@fp,xtoa@fp
 20970  000A34  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 20971  000A3A  0060  F1B8  F021   	movff	vfpfcnvrt@llu,xtoa@d
 20972  000A40  0060  F1BC  F022   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 20973  000A46  0060  F1C0  F023   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 20974  000A4C  0060  F1C4  F024   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 20975  000A52  0060  F1C8  F025   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 20976  000A58  0060  F1CC  F026   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 20977  000A5E  0060  F1D0  F027   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 20978  000A64  0060  F1D4  F028   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 20979  000A6A  0060  F1A0  F029   	movff	vfpfcnvrt@c,xtoa@x
 20980  000A70  EC97  F011         	call	_xtoa	;wreg free
 20981  000A74  0060  F07C  F046   	movff	?_xtoa,?_vfpfcnvrt
 20982  000A7A  0060  F080  F047   	movff	?_xtoa+1,?_vfpfcnvrt+1
 20983  000A80  0012               	return	
 20984  000A82                     l14515:
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 20988  000A82  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20989  000A84  6ED9               	movwf	fsr2l,c
 20990  000A86  6ADA               	clrf	fsr2h,c
 20991  000A88  006F FF7B FFF6     	movff	postinc2,tblptrl
 20992  000A8E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20993  000A94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20994  000A94  6AF8               	clrf	tblptru,c
 20995  000A96                     	endif
 20996  000A96                     	if	0	;tblptru may be non-zero
 20997  000A96                     	endif
 20998  000A96  0008               	tblrd		*
 20999  000A98  50F5               	movf	tablat,w,c
 21000  000A9A  0A25               	xorlw	37
 21001  000A9C  A4D8               	btfss	status,2,c
 21002  000A9E  D017               	goto	l14525
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 21006  000AA0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 21007  000AA2  6ED9               	movwf	fsr2l,c
 21008  000AA4  6ADA               	clrf	fsr2h,c
 21009  000AA6  2ADE               	incf	postinc2,f,c
 21010  000AA8  0E00               	movlw	0
 21011  000AAA  22DD               	addwfc	postdec2,f,c
 21012                           
 21013                           ; BSR set to: 0
 21014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 21015  000AAC  0E00               	movlw	0
 21016  000AAE  6E05               	movwf	(fputc@c+1)^0,c
 21017  000AB0  0E25               	movlw	37
 21018  000AB2  6E04               	movwf	fputc@c^0,c
 21019  000AB4  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 21020  000ABA  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21021  000AC0  EC2C  F03B         	call	_fputc	;wreg free
 21022  000AC4                     l14521:
 21023                           
 21024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 21025  000AC4  0E00               	movlw	0
 21026  000AC6  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 21027  000AC8  0E01               	movlw	1
 21028  000ACA  6E46               	movwf	?_vfpfcnvrt^0,c
 21029  000ACC  0012               	return	
 21030  000ACE                     l14525:
 21031                           
 21032                           ; BSR set to: 0
 21033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 21034  000ACE  5048               	movf	vfpfcnvrt@fmt^0,w,c
 21035  000AD0  6ED9               	movwf	fsr2l,c
 21036  000AD2  6ADA               	clrf	fsr2h,c
 21037  000AD4  2ADE               	incf	postinc2,f,c
 21038  000AD6  0E00               	movlw	0
 21039  000AD8  22DD               	addwfc	postdec2,f,c
 21040                           
 21041                           ; BSR set to: 0
 21042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 21043  000ADA  0E00               	movlw	0
 21044  000ADC  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 21045  000ADE  0E00               	movlw	0
 21046  000AE0  6E46               	movwf	?_vfpfcnvrt^0,c
 21047  000AE2  0012               	return	
 21048  000AE4                     l14531:
 21049                           
 21050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 21051  000AE4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 21052  000AE6  6ED9               	movwf	fsr2l,c
 21053  000AE8  6ADA               	clrf	fsr2h,c
 21054  000AEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 21055  000AF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 21056  000AF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21057  000AF6  6AF8               	clrf	tblptru,c
 21058  000AF8                     	endif
 21059  000AF8                     	if	0	;tblptru may be non-zero
 21060  000AF8                     	endif
 21061  000AF8  0008               	tblrd		*
 21062  000AFA  50F5               	movf	tablat,w,c
 21063  000AFC  6E04               	movwf	fputc@c^0,c
 21064  000AFE  6A05               	clrf	(fputc@c+1)^0,c
 21065  000B00  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 21066  000B06  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 21067  000B0C  EC2C  F03B         	call	_fputc	;wreg free
 21068                           
 21069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 21070  000B10  5048               	movf	vfpfcnvrt@fmt^0,w,c
 21071  000B12  6ED9               	movwf	fsr2l,c
 21072  000B14  6ADA               	clrf	fsr2h,c
 21073  000B16  2ADE               	incf	postinc2,f,c
 21074  000B18  0E00               	movlw	0
 21075  000B1A  22DD               	addwfc	postdec2,f,c
 21076  000B1C  D7D3               	goto	l14521
 21077  000B1E                     __end_of_vfpfcnvrt:
 21078                           	opt callstack 0
 21079                           
 21080 ;; *************** function _xtoa *****************
 21081 ;; Defined at:
 21082 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 21083 ;; Parameters:    Size  Location     Type
 21084 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 21085 ;;		 -> NULL(0), 
 21086 ;;  d               8   32[COMRAM] unsigned long long 
 21087 ;;  x               1   40[COMRAM] unsigned char 
 21088 ;; Auto vars:     Size  Location     Type
 21089 ;;  n               8   57[COMRAM] unsigned long long 
 21090 ;;  c               2   67[COMRAM] int 
 21091 ;;  i               2   65[COMRAM] int 
 21092 ;;  w               2   55[COMRAM] int 
 21093 ;;  p               2   53[COMRAM] int 
 21094 ;; Return value:  Size  Location     Type
 21095 ;;                  2   30[COMRAM] int 
 21096 ;; Registers used:
 21097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21098 ;; Tracked objects:
 21099 ;;		On entry : 3F/0
 21100 ;;		On exit  : 0/0
 21101 ;;		Unchanged: 0/0
 21102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21103 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21104 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21105 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21106 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21107 ;;Total ram usage:       39 bytes
 21108 ;; Hardware stack levels used:    1
 21109 ;; Hardware stack levels required when called:   12
 21110 ;; This function calls:
 21111 ;;		_isalpha
 21112 ;;		_isupper
 21113 ;;		_pad
 21114 ;;		_toupper
 21115 ;; This function is called by:
 21116 ;;		_vfpfcnvrt
 21117 ;; This function uses a non-reentrant model
 21118 ;;
 21119                           
 21120                           	psect	text127
 21121  00232E                     __ptext127:
 21122                           	opt callstack 0
 21123  00232E                     _xtoa:
 21124                           	opt callstack 12
 21125                           
 21126                           ; BSR set to: 0
 21127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 21128                           
 21129                           ;incstack = 0
 21130  00232E  AFE5               	btfss	(_prec+1)& (0+255),7,b
 21131                           
 21132                           ; BSR set to: 0
 21133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 21134  002330  93E6               	bcf	_flags& (0+255),1,b
 21135                           
 21136                           ; BSR set to: 0
 21137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 21138  002332  BFE5               	btfsc	(_prec+1)& (0+255),7,b
 21139  002334  D005               	goto	u13600
 21140  002336  51E5               	movf	(_prec+1)& (0+255),w,b
 21141  002338  E108               	bnz	l3131
 21142  00233A  05E4               	decf	_prec& (0+255),w,b
 21143  00233C  B0D8               	btfsc	status,0,c
 21144  00233E  D005               	goto	l3131
 21145  002340                     u13600:
 21146                           
 21147                           ; BSR set to: 0
 21148  002340  0E00               	movlw	0
 21149  002342  6E37               	movwf	(xtoa@p+1)^0,c
 21150  002344  0E01               	movlw	1
 21151  002346  6E36               	movwf	xtoa@p^0,c
 21152  002348  D006               	goto	l3133
 21153  00234A                     l3131:
 21154                           
 21155                           ; BSR set to: 0
 21156  00234A  0060  F390  F036   	movff	_prec,xtoa@p
 21157  002350  0060  F394  F037   	movff	_prec+1,xtoa@p+1
 21158  002356                     l3133:
 21159                           
 21160                           ; BSR set to: 0
 21161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 21162  002356  0060  F388  F038   	movff	_width,xtoa@w
 21163  00235C  0060  F38C  F039   	movff	_width+1,xtoa@w+1
 21164                           
 21165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 21166  002362  A9E6               	btfss	_flags& (0+255),4,b
 21167  002364  D004               	goto	l14265
 21168                           
 21169                           ; BSR set to: 0
 21170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 21171  002366  0EFE               	movlw	254
 21172  002368  2638               	addwf	xtoa@w^0,f,c
 21173  00236A  0EFF               	movlw	255
 21174  00236C  2239               	addwfc	(xtoa@w+1)^0,f,c
 21175  00236E                     l14265:
 21176                           
 21177                           ; BSR set to: 0
 21178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 21179  00236E  0060  F084  F03A   	movff	xtoa@d,xtoa@n
 21180  002374  0060  F088  F03B   	movff	xtoa@d+1,xtoa@n+1
 21181  00237A  0060  F08C  F03C   	movff	xtoa@d+2,xtoa@n+2
 21182  002380  0060  F090  F03D   	movff	xtoa@d+3,xtoa@n+3
 21183  002386  0060  F094  F03E   	movff	xtoa@d+4,xtoa@n+4
 21184  00238C  0060  F098  F03F   	movff	xtoa@d+5,xtoa@n+5
 21185  002392  0060  F09C  F040   	movff	xtoa@d+6,xtoa@n+6
 21186  002398  0060  F0A0  F041   	movff	xtoa@d+7,xtoa@n+7
 21187                           
 21188                           ; BSR set to: 0
 21189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 21190  00239E  0E00               	movlw	0
 21191  0023A0  6E43               	movwf	(xtoa@i+1)^0,c
 21192  0023A2  0E1F               	movlw	31
 21193  0023A4  6E42               	movwf	xtoa@i^0,c
 21194                           
 21195                           ; BSR set to: 0
 21196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 21197  0023A6  0E00               	movlw	0
 21198  0023A8  0102               	movlb	2	; () banked
 21199  0023AA  6FD9               	movwf	(_dbuf+31)& (0+255),b
 21200                           
 21201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21202  0023AC  D0A8               	goto	l14301
 21203  0023AE                     l14271:
 21204                           
 21205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 21206  0023AE  0642               	decf	xtoa@i^0,f,c
 21207  0023B0  A0D8               	btfss	status,0,c
 21208  0023B2  0643               	decf	(xtoa@i+1)^0,f,c
 21209                           
 21210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 21211  0023B4  0E0F               	movlw	15
 21212  0023B6  143A               	andwf	xtoa@n^0,w,c
 21213  0023B8  6E44               	movwf	xtoa@c^0,c
 21214  0023BA  6A45               	clrf	(xtoa@c+1)^0,c
 21215                           
 21216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 21217  0023BC  BE45               	btfsc	(xtoa@c+1)^0,7,c
 21218  0023BE  D008               	goto	l14279
 21219  0023C0  5045               	movf	(xtoa@c+1)^0,w,c
 21220  0023C2  E104               	bnz	u13620
 21221  0023C4  0E0A               	movlw	10
 21222  0023C6  5C44               	subwf	xtoa@c^0,w,c
 21223  0023C8  A0D8               	btfss	status,0,c
 21224  0023CA  D002               	goto	l14279
 21225  0023CC                     u13620:
 21226  0023CC  0E57               	movlw	87
 21227  0023CE  D001               	goto	L23
 21228  0023D0                     l14279:
 21229  0023D0  0E30               	movlw	48
 21230  0023D2                     L23:
 21231  0023D2  2444               	addwf	xtoa@c^0,w,c
 21232  0023D4  6E44               	movwf	xtoa@c^0,c
 21233  0023D6  0E00               	movlw	0
 21234  0023D8  2045               	addwfc	(xtoa@c+1)^0,w,c
 21235  0023DA  6E45               	movwf	(xtoa@c+1)^0,c
 21236                           
 21237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 21238  0023DC  0EBF               	movlw	191
 21239  0023DE  6E2A               	movwf	??_xtoa^0,c
 21240  0023E0  0EFF               	movlw	255
 21241  0023E2  6E2B               	movwf	(??_xtoa+1)^0,c
 21242  0023E4  5029               	movf	xtoa@x^0,w,c
 21243  0023E6  6E2C               	movwf	(??_xtoa+2)^0,c
 21244  0023E8  6A2D               	clrf	(??_xtoa+3)^0,c
 21245  0023EA  502A               	movf	??_xtoa^0,w,c
 21246  0023EC  262C               	addwf	(??_xtoa+2)^0,f,c
 21247  0023EE  502B               	movf	(??_xtoa+1)^0,w,c
 21248  0023F0  222D               	addwfc	(??_xtoa+3)^0,f,c
 21249  0023F2  502D               	movf	(??_xtoa+3)^0,w,c
 21250  0023F4  E106               	bnz	u13630
 21251  0023F6  0E1A               	movlw	26
 21252  0023F8  5C2C               	subwf	(??_xtoa+2)^0,w,c
 21253  0023FA  B0D8               	btfsc	status,0,c
 21254  0023FC  D002               	goto	u13630
 21255  0023FE  0E01               	movlw	1
 21256  002400  D001               	goto	u13640
 21257  002402                     u13630:
 21258  002402  0E00               	movlw	0
 21259  002404                     u13640:
 21260  002404  6E32               	movwf	_xtoa$7247^0,c
 21261  002406  6A33               	clrf	(_xtoa$7247+1)^0,c
 21262  002408  5032               	movf	_xtoa$7247^0,w,c
 21263  00240A  1033               	iorwf	(_xtoa$7247+1)^0,w,c
 21264  00240C  B4D8               	btfsc	status,2,c
 21265  00240E  D02B               	goto	l14293
 21266  002410  0E9F               	movlw	159
 21267  002412  6E2A               	movwf	??_xtoa^0,c
 21268  002414  0EFF               	movlw	255
 21269  002416  6E2B               	movwf	(??_xtoa+1)^0,c
 21270  002418  0E20               	movlw	32
 21271  00241A  1044               	iorwf	xtoa@c^0,w,c
 21272  00241C  6E2C               	movwf	(??_xtoa+2)^0,c
 21273  00241E  0E00               	movlw	0
 21274  002420  1045               	iorwf	(xtoa@c+1)^0,w,c
 21275  002422  6E2D               	movwf	(??_xtoa+3)^0,c
 21276  002424  502A               	movf	??_xtoa^0,w,c
 21277  002426  262C               	addwf	(??_xtoa+2)^0,f,c
 21278  002428  502B               	movf	(??_xtoa+1)^0,w,c
 21279  00242A  222D               	addwfc	(??_xtoa+3)^0,f,c
 21280  00242C  502D               	movf	(??_xtoa+3)^0,w,c
 21281  00242E  E106               	bnz	u13660
 21282  002430  0E1A               	movlw	26
 21283  002432  5C2C               	subwf	(??_xtoa+2)^0,w,c
 21284  002434  B0D8               	btfsc	status,0,c
 21285  002436  D002               	goto	u13660
 21286  002438  0E01               	movlw	1
 21287  00243A  D001               	goto	u13670
 21288  00243C                     u13660:
 21289  00243C  0E00               	movlw	0
 21290  00243E                     u13670:
 21291  00243E  6E34               	movwf	_xtoa$7248^0,c
 21292  002440  6A35               	clrf	(_xtoa$7248+1)^0,c
 21293  002442  5034               	movf	_xtoa$7248^0,w,c
 21294  002444  1035               	iorwf	(_xtoa$7248+1)^0,w,c
 21295  002446  B4D8               	btfsc	status,2,c
 21296  002448  D00E               	goto	l14293
 21297                           
 21298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 21299  00244A  0060  F110  F008   	movff	xtoa@c,toupper@c
 21300  002450  0060  F114  F009   	movff	xtoa@c+1,toupper@c+1
 21301  002456  EC57  F03E         	call	_toupper	;wreg free
 21302  00245A  0060  F020  F044   	movff	?_toupper,xtoa@c
 21303  002460  0060  F024  F045   	movff	?_toupper+1,xtoa@c+1
 21304  002466                     l14293:
 21305                           
 21306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 21307  002466  0EBA               	movlw	low _dbuf
 21308  002468  2442               	addwf	xtoa@i^0,w,c
 21309  00246A  6ED9               	movwf	fsr2l,c
 21310  00246C  0E02               	movlw	high _dbuf
 21311  00246E  2043               	addwfc	(xtoa@i+1)^0,w,c
 21312  002470  6EDA               	movwf	fsr2h,c
 21313  002472  0060  F113  FFDF   	movff	xtoa@c,indf2
 21314                           
 21315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 21316  002478  0636               	decf	xtoa@p^0,f,c
 21317  00247A  A0D8               	btfss	status,0,c
 21318  00247C  0637               	decf	(xtoa@p+1)^0,f,c
 21319                           
 21320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 21321  00247E  0638               	decf	xtoa@w^0,f,c
 21322  002480  A0D8               	btfss	status,0,c
 21323  002482  0639               	decf	(xtoa@w+1)^0,f,c
 21324                           
 21325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 21326  002484  0060  F0E8  F02A   	movff	xtoa@n,??_xtoa
 21327  00248A  0060  F0EC  F02B   	movff	xtoa@n+1,??_xtoa+1
 21328  002490  0060  F0F0  F02C   	movff	xtoa@n+2,??_xtoa+2
 21329  002496  0060  F0F4  F02D   	movff	xtoa@n+3,??_xtoa+3
 21330  00249C  0060  F0F8  F02E   	movff	xtoa@n+4,??_xtoa+4
 21331  0024A2  0060  F0FC  F02F   	movff	xtoa@n+5,??_xtoa+5
 21332  0024A8  0060  F100  F030   	movff	xtoa@n+6,??_xtoa+6
 21333  0024AE  0060  F104  F031   	movff	xtoa@n+7,??_xtoa+7
 21334  0024B4  0E05               	movlw	5
 21335  0024B6  D009               	goto	u13690
 21336  0024B8                     u13695:
 21337  0024B8  90D8               	bcf	status,0,c
 21338  0024BA  3231               	rrcf	(??_xtoa+7)^0,f,c
 21339  0024BC  3230               	rrcf	(??_xtoa+6)^0,f,c
 21340  0024BE  322F               	rrcf	(??_xtoa+5)^0,f,c
 21341  0024C0  322E               	rrcf	(??_xtoa+4)^0,f,c
 21342  0024C2  322D               	rrcf	(??_xtoa+3)^0,f,c
 21343  0024C4  322C               	rrcf	(??_xtoa+2)^0,f,c
 21344  0024C6  322B               	rrcf	(??_xtoa+1)^0,f,c
 21345  0024C8  322A               	rrcf	??_xtoa^0,f,c
 21346  0024CA                     u13690:
 21347  0024CA  2EE8               	decfsz	wreg,f,c
 21348  0024CC  D7F5               	goto	u13695
 21349  0024CE  0060  F0A8  F03A   	movff	??_xtoa,xtoa@n
 21350  0024D4  0060  F0AC  F03B   	movff	??_xtoa+1,xtoa@n+1
 21351  0024DA  0060  F0B0  F03C   	movff	??_xtoa+2,xtoa@n+2
 21352  0024E0  0060  F0B4  F03D   	movff	??_xtoa+3,xtoa@n+3
 21353  0024E6  0060  F0B8  F03E   	movff	??_xtoa+4,xtoa@n+4
 21354  0024EC  0060  F0BC  F03F   	movff	??_xtoa+5,xtoa@n+5
 21355  0024F2  0060  F0C0  F040   	movff	??_xtoa+6,xtoa@n+6
 21356  0024F8  0060  F0C4  F041   	movff	??_xtoa+7,xtoa@n+7
 21357  0024FE                     l14301:
 21358                           
 21359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21360  0024FE  BE43               	btfsc	(xtoa@i+1)^0,7,c
 21361  002500  D021               	goto	u13740
 21362  002502  5043               	movf	(xtoa@i+1)^0,w,c
 21363  002504  E104               	bnz	u13700
 21364  002506  0E02               	movlw	2
 21365  002508  5C42               	subwf	xtoa@i^0,w,c
 21366  00250A  A0D8               	btfss	status,0,c
 21367  00250C  D01B               	goto	u13740
 21368  00250E                     u13700:
 21369  00250E  503A               	movf	xtoa@n^0,w,c
 21370  002510  103B               	iorwf	(xtoa@n+1)^0,w,c
 21371  002512  103C               	iorwf	(xtoa@n+2)^0,w,c
 21372  002514  103D               	iorwf	(xtoa@n+3)^0,w,c
 21373  002516  103E               	iorwf	(xtoa@n+4)^0,w,c
 21374  002518  103F               	iorwf	(xtoa@n+5)^0,w,c
 21375  00251A  1040               	iorwf	(xtoa@n+6)^0,w,c
 21376  00251C  1041               	iorwf	(xtoa@n+7)^0,w,c
 21377  00251E  A4D8               	btfss	status,2,c
 21378  002520  D746               	goto	l14271
 21379  002522  BE37               	btfsc	(xtoa@p+1)^0,7,c
 21380  002524  D005               	goto	u13720
 21381  002526  5037               	movf	(xtoa@p+1)^0,w,c
 21382  002528  E102               	bnz	u13721
 21383  00252A  0436               	decf	xtoa@p^0,w,c
 21384  00252C  B0D8               	btfsc	status,0,c
 21385  00252E                     u13721:
 21386  00252E  D73F               	goto	l14271
 21387  002530                     u13720:
 21388  002530  BE39               	btfsc	(xtoa@w+1)^0,7,c
 21389  002532  D008               	goto	u13740
 21390  002534  5039               	movf	(xtoa@w+1)^0,w,c
 21391  002536  E103               	bnz	u13730
 21392  002538  0438               	decf	xtoa@w^0,w,c
 21393  00253A  A0D8               	btfss	status,0,c
 21394  00253C  D003               	goto	u13740
 21395  00253E                     u13730:
 21396  00253E  0100               	movlb	0	; () banked
 21397  002540  B3E6               	btfsc	_flags& (0+255),1,b
 21398  002542  D735               	goto	l14271
 21399  002544                     u13740:
 21400                           
 21401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 21402  002544  0100               	movlb	0	; () banked
 21403  002546  A9E6               	btfss	_flags& (0+255),4,b
 21404  002548  D017               	goto	l14317
 21405                           
 21406                           ; BSR set to: 0
 21407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 21408  00254A  0642               	decf	xtoa@i^0,f,c
 21409  00254C  A0D8               	btfss	status,0,c
 21410  00254E  0643               	decf	(xtoa@i+1)^0,f,c
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 21414  002550  0EBA               	movlw	low _dbuf
 21415  002552  2442               	addwf	xtoa@i^0,w,c
 21416  002554  6ED9               	movwf	fsr2l,c
 21417  002556  0E02               	movlw	high _dbuf
 21418  002558  2043               	addwfc	(xtoa@i+1)^0,w,c
 21419  00255A  6EDA               	movwf	fsr2h,c
 21420  00255C  0060  F0A7  FFDF   	movff	xtoa@x,indf2
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 21424  002562  0642               	decf	xtoa@i^0,f,c
 21425  002564  A0D8               	btfss	status,0,c
 21426  002566  0643               	decf	(xtoa@i+1)^0,f,c
 21427                           
 21428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 21429  002568  0EBA               	movlw	low _dbuf
 21430  00256A  2442               	addwf	xtoa@i^0,w,c
 21431  00256C  6ED9               	movwf	fsr2l,c
 21432  00256E  0E02               	movlw	high _dbuf
 21433  002570  2043               	addwfc	(xtoa@i+1)^0,w,c
 21434  002572  6EDA               	movwf	fsr2h,c
 21435  002574  0E30               	movlw	48
 21436  002576  6EDF               	movwf	indf2,c
 21437  002578                     l14317:
 21438                           
 21439                           ; BSR set to: 0
 21440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 21441  002578  0060  F07C  F014   	movff	xtoa@fp,pad@fp
 21442  00257E  0060  F080  F015   	movff	xtoa@fp+1,pad@fp+1
 21443  002584  0EBA               	movlw	low _dbuf
 21444  002586  2442               	addwf	xtoa@i^0,w,c
 21445  002588  6E16               	movwf	pad@buf^0,c
 21446  00258A  0E02               	movlw	high _dbuf
 21447  00258C  2043               	addwfc	(xtoa@i+1)^0,w,c
 21448  00258E  6E17               	movwf	(pad@buf+1)^0,c
 21449  002590  0060  F0E0  F018   	movff	xtoa@w,pad@p
 21450  002596  0060  F0E4  F019   	movff	xtoa@w+1,pad@p+1
 21451  00259C  EC9B  F032         	call	_pad	;wreg free
 21452  0025A0  0060  F050  F01F   	movff	?_pad,?_xtoa
 21453  0025A6  0060  F054  F020   	movff	?_pad+1,?_xtoa+1
 21454  0025AC  0012               	return		;funcret
 21455  0025AE                     __end_of_xtoa:
 21456                           	opt callstack 0
 21457                           
 21458 ;; *************** function _toupper *****************
 21459 ;; Defined at:
 21460 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 21461 ;; Parameters:    Size  Location     Type
 21462 ;;  c               2    7[COMRAM] int 
 21463 ;; Auto vars:     Size  Location     Type
 21464 ;;		None
 21465 ;; Return value:  Size  Location     Type
 21466 ;;                  2    7[COMRAM] int 
 21467 ;; Registers used:
 21468 ;;		wreg, status,2, status,0
 21469 ;; Tracked objects:
 21470 ;;		On entry : 0/0
 21471 ;;		On exit  : 0/0
 21472 ;;		Unchanged: 0/0
 21473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21477 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21478 ;;Total ram usage:        8 bytes
 21479 ;; Hardware stack levels used:    1
 21480 ;; Hardware stack levels required when called:    8
 21481 ;; This function calls:
 21482 ;;		_islower
 21483 ;; This function is called by:
 21484 ;;		_xtoa
 21485 ;;		___strtoxl
 21486 ;; This function uses a non-reentrant model
 21487 ;;
 21488                           
 21489                           	psect	text128
 21490  007CAE                     __ptext128:
 21491                           	opt callstack 0
 21492  007CAE                     _toupper:
 21493                           	opt callstack 15
 21494                           
 21495                           ;incstack = 0
 21496  007CAE  0E9F               	movlw	159
 21497  007CB0  6E0A               	movwf	??_toupper^0,c
 21498  007CB2  0EFF               	movlw	255
 21499  007CB4  6E0B               	movwf	(??_toupper+1)^0,c
 21500  007CB6  0060  F020  F00C   	movff	toupper@c,??_toupper+2
 21501  007CBC  0060  F024  F00D   	movff	toupper@c+1,??_toupper+3
 21502  007CC2  500A               	movf	??_toupper^0,w,c
 21503  007CC4  260C               	addwf	(??_toupper+2)^0,f,c
 21504  007CC6  500B               	movf	(??_toupper+1)^0,w,c
 21505  007CC8  220D               	addwfc	(??_toupper+3)^0,f,c
 21506  007CCA  500D               	movf	(??_toupper+3)^0,w,c
 21507  007CCC  E106               	bnz	u13000
 21508  007CCE  0E1A               	movlw	26
 21509  007CD0  5C0C               	subwf	(??_toupper+2)^0,w,c
 21510  007CD2  B0D8               	btfsc	status,0,c
 21511  007CD4  D002               	goto	u13000
 21512  007CD6  0E01               	movlw	1
 21513  007CD8  D001               	goto	u13010
 21514  007CDA                     u13000:
 21515  007CDA  0E00               	movlw	0
 21516  007CDC                     u13010:
 21517  007CDC  6E0E               	movwf	_toupper$7888^0,c
 21518  007CDE  6A0F               	clrf	(_toupper$7888+1)^0,c
 21519  007CE0  500E               	movf	_toupper$7888^0,w,c
 21520  007CE2  100F               	iorwf	(_toupper$7888+1)^0,w,c
 21521  007CE4  B4D8               	btfsc	status,2,c
 21522  007CE6  D005               	goto	l4036
 21523  007CE8  0E5F               	movlw	95
 21524  007CEA  1408               	andwf	toupper@c^0,w,c
 21525  007CEC  6E08               	movwf	?_toupper^0,c
 21526  007CEE  6A09               	clrf	(?_toupper+1)^0,c
 21527  007CF0  0012               	return	
 21528  007CF2                     l4036:
 21529  007CF2  0060  F020  F008   	movff	toupper@c,?_toupper
 21530  007CF8  0060  F024  F009   	movff	toupper@c+1,?_toupper+1
 21531  007CFE  0012               	return		;funcret
 21532  007D00                     __end_of_toupper:
 21533                           	opt callstack 0
 21534                           
 21535 ;; *************** function _islower *****************
 21536 ;; Defined at:
 21537 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 21538 ;; Parameters:    Size  Location     Type
 21539 ;;  c               2    1[COMRAM] int 
 21540 ;; Auto vars:     Size  Location     Type
 21541 ;;		None
 21542 ;; Return value:  Size  Location     Type
 21543 ;;                  2    1[COMRAM] int 
 21544 ;; Registers used:
 21545 ;;		wreg, status,2, status,0
 21546 ;; Tracked objects:
 21547 ;;		On entry : 0/0
 21548 ;;		On exit  : 0/0
 21549 ;;		Unchanged: 0/0
 21550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21553 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21554 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21555 ;;Total ram usage:        6 bytes
 21556 ;; Hardware stack levels used:    1
 21557 ;; Hardware stack levels required when called:    7
 21558 ;; This function calls:
 21559 ;;		Nothing
 21560 ;; This function is called by:
 21561 ;;		_toupper
 21562 ;; This function uses a non-reentrant model
 21563 ;;
 21564                           
 21565                           	psect	text129
 21566  00864A                     __ptext129:
 21567                           	opt callstack 0
 21568  00864A                     _islower:
 21569                           	opt callstack 15
 21570                           
 21571                           ;incstack = 0
 21572  00864A  0E9F               	movlw	159
 21573  00864C  6E04               	movwf	??_islower^0,c
 21574  00864E  0EFF               	movlw	255
 21575  008650  6E05               	movwf	(??_islower+1)^0,c
 21576  008652  0060  F008  F006   	movff	islower@c,??_islower+2
 21577  008658  0060  F00C  F007   	movff	islower@c+1,??_islower+3
 21578  00865E  5004               	movf	??_islower^0,w,c
 21579  008660  2606               	addwf	(??_islower+2)^0,f,c
 21580  008662  5005               	movf	(??_islower+1)^0,w,c
 21581  008664  2207               	addwfc	(??_islower+3)^0,f,c
 21582  008666  5007               	movf	(??_islower+3)^0,w,c
 21583  008668  E106               	bnz	u12890
 21584  00866A  0E1A               	movlw	26
 21585  00866C  5C06               	subwf	(??_islower+2)^0,w,c
 21586  00866E  B0D8               	btfsc	status,0,c
 21587  008670  D002               	goto	u12890
 21588  008672  0E01               	movlw	1
 21589  008674  D001               	goto	u12900
 21590  008676                     u12890:
 21591  008676  0E00               	movlw	0
 21592  008678                     u12900:
 21593  008678  6E02               	movwf	?_islower^0,c
 21594  00867A  6A03               	clrf	(?_islower+1)^0,c
 21595  00867C  0012               	return		;funcret
 21596  00867E                     __end_of_islower:
 21597                           	opt callstack 0
 21598                           
 21599 ;; *************** function _isupper *****************
 21600 ;; Defined at:
 21601 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 21602 ;; Parameters:    Size  Location     Type
 21603 ;;  c               2    1[COMRAM] int 
 21604 ;; Auto vars:     Size  Location     Type
 21605 ;;		None
 21606 ;; Return value:  Size  Location     Type
 21607 ;;                  2    1[COMRAM] int 
 21608 ;; Registers used:
 21609 ;;		wreg, status,2, status,0
 21610 ;; Tracked objects:
 21611 ;;		On entry : 0/0
 21612 ;;		On exit  : 0/0
 21613 ;;		Unchanged: 0/0
 21614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21617 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21619 ;;Total ram usage:        6 bytes
 21620 ;; Hardware stack levels used:    1
 21621 ;; Hardware stack levels required when called:    7
 21622 ;; This function calls:
 21623 ;;		Nothing
 21624 ;; This function is called by:
 21625 ;;		_xtoa
 21626 ;; This function uses a non-reentrant model
 21627 ;;
 21628                           
 21629                           	psect	text130
 21630  00867E                     __ptext130:
 21631                           	opt callstack 0
 21632  00867E                     _isupper:
 21633                           	opt callstack 16
 21634                           
 21635                           ;incstack = 0
 21636  00867E  0EBF               	movlw	191
 21637  008680  6E04               	movwf	??_isupper^0,c
 21638  008682  0EFF               	movlw	255
 21639  008684  6E05               	movwf	(??_isupper+1)^0,c
 21640  008686  0060  F008  F006   	movff	isupper@c,??_isupper+2
 21641  00868C  0060  F00C  F007   	movff	isupper@c+1,??_isupper+3
 21642  008692  5004               	movf	??_isupper^0,w,c
 21643  008694  2606               	addwf	(??_isupper+2)^0,f,c
 21644  008696  5005               	movf	(??_isupper+1)^0,w,c
 21645  008698  2207               	addwfc	(??_isupper+3)^0,f,c
 21646  00869A  5007               	movf	(??_isupper+3)^0,w,c
 21647  00869C  E106               	bnz	u12960
 21648  00869E  0E1A               	movlw	26
 21649  0086A0  5C06               	subwf	(??_isupper+2)^0,w,c
 21650  0086A2  B0D8               	btfsc	status,0,c
 21651  0086A4  D002               	goto	u12960
 21652  0086A6  0E01               	movlw	1
 21653  0086A8  D001               	goto	u12970
 21654  0086AA                     u12960:
 21655  0086AA  0E00               	movlw	0
 21656  0086AC                     u12970:
 21657  0086AC  6E02               	movwf	?_isupper^0,c
 21658  0086AE  6A03               	clrf	(?_isupper+1)^0,c
 21659  0086B0  0012               	return		;funcret
 21660  0086B2                     __end_of_isupper:
 21661                           	opt callstack 0
 21662                           
 21663 ;; *************** function _isalpha *****************
 21664 ;; Defined at:
 21665 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 21666 ;; Parameters:    Size  Location     Type
 21667 ;;  c               2    1[COMRAM] int 
 21668 ;; Auto vars:     Size  Location     Type
 21669 ;;		None
 21670 ;; Return value:  Size  Location     Type
 21671 ;;                  2    1[COMRAM] int 
 21672 ;; Registers used:
 21673 ;;		wreg, status,2, status,0
 21674 ;; Tracked objects:
 21675 ;;		On entry : 0/0
 21676 ;;		On exit  : 0/0
 21677 ;;		Unchanged: 0/0
 21678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21681 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21682 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21683 ;;Total ram usage:        6 bytes
 21684 ;; Hardware stack levels used:    1
 21685 ;; Hardware stack levels required when called:    7
 21686 ;; This function calls:
 21687 ;;		Nothing
 21688 ;; This function is called by:
 21689 ;;		_xtoa
 21690 ;;		___strtoxl
 21691 ;; This function uses a non-reentrant model
 21692 ;;
 21693                           
 21694                           	psect	text131
 21695  0086B2                     __ptext131:
 21696                           	opt callstack 0
 21697  0086B2                     _isalpha:
 21698                           	opt callstack 16
 21699                           
 21700                           ;incstack = 0
 21701  0086B2  0E9F               	movlw	159
 21702  0086B4  6E04               	movwf	??_isalpha^0,c
 21703  0086B6  0EFF               	movlw	255
 21704  0086B8  6E05               	movwf	(??_isalpha+1)^0,c
 21705  0086BA  0E20               	movlw	32
 21706  0086BC  1002               	iorwf	isalpha@c^0,w,c
 21707  0086BE  6E06               	movwf	(??_isalpha+2)^0,c
 21708  0086C0  0E00               	movlw	0
 21709  0086C2  1003               	iorwf	(isalpha@c+1)^0,w,c
 21710  0086C4  6E07               	movwf	(??_isalpha+3)^0,c
 21711  0086C6  5004               	movf	??_isalpha^0,w,c
 21712  0086C8  2606               	addwf	(??_isalpha+2)^0,f,c
 21713  0086CA  5005               	movf	(??_isalpha+1)^0,w,c
 21714  0086CC  2207               	addwfc	(??_isalpha+3)^0,f,c
 21715  0086CE  5007               	movf	(??_isalpha+3)^0,w,c
 21716  0086D0  E106               	bnz	u12980
 21717  0086D2  0E1A               	movlw	26
 21718  0086D4  5C06               	subwf	(??_isalpha+2)^0,w,c
 21719  0086D6  B0D8               	btfsc	status,0,c
 21720  0086D8  D002               	goto	u12980
 21721  0086DA  0E01               	movlw	1
 21722  0086DC  D001               	goto	u12990
 21723  0086DE                     u12980:
 21724  0086DE  0E00               	movlw	0
 21725  0086E0                     u12990:
 21726  0086E0  6E02               	movwf	?_isalpha^0,c
 21727  0086E2  6A03               	clrf	(?_isalpha+1)^0,c
 21728  0086E4  0012               	return		;funcret
 21729  0086E6                     __end_of_isalpha:
 21730                           	opt callstack 0
 21731                           
 21732 ;; *************** function _utoa *****************
 21733 ;; Defined at:
 21734 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 21735 ;; Parameters:    Size  Location     Type
 21736 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 21737 ;;		 -> NULL(0), 
 21738 ;;  d               8   32[COMRAM] unsigned long long 
 21739 ;; Auto vars:     Size  Location     Type
 21740 ;;  n               8   52[COMRAM] unsigned long long 
 21741 ;;  i               2   60[COMRAM] int 
 21742 ;;  w               2   50[COMRAM] int 
 21743 ;;  p               2   48[COMRAM] int 
 21744 ;; Return value:  Size  Location     Type
 21745 ;;                  2   30[COMRAM] int 
 21746 ;; Registers used:
 21747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21748 ;; Tracked objects:
 21749 ;;		On entry : 3F/0
 21750 ;;		On exit  : 0/0
 21751 ;;		Unchanged: 0/0
 21752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21753 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21754 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21755 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21756 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21757 ;;Total ram usage:       32 bytes
 21758 ;; Hardware stack levels used:    1
 21759 ;; Hardware stack levels required when called:   12
 21760 ;; This function calls:
 21761 ;;		___lodiv
 21762 ;;		___lomod
 21763 ;;		_pad
 21764 ;; This function is called by:
 21765 ;;		_vfpfcnvrt
 21766 ;; This function uses a non-reentrant model
 21767 ;;
 21768                           
 21769                           	psect	text132
 21770  002CCA                     __ptext132:
 21771                           	opt callstack 0
 21772  002CCA                     _utoa:
 21773                           	opt callstack 12
 21774                           
 21775                           ; BSR set to: 0
 21776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 21777                           
 21778                           ;incstack = 0
 21779  002CCA  AFE5               	btfss	(_prec+1)& (0+255),7,b
 21780                           
 21781                           ; BSR set to: 0
 21782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 21783  002CCC  93E6               	bcf	_flags& (0+255),1,b
 21784                           
 21785                           ; BSR set to: 0
 21786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 21787  002CCE  BFE5               	btfsc	(_prec+1)& (0+255),7,b
 21788  002CD0  D005               	goto	u13530
 21789  002CD2  51E5               	movf	(_prec+1)& (0+255),w,b
 21790  002CD4  E108               	bnz	l3116
 21791  002CD6  05E4               	decf	_prec& (0+255),w,b
 21792  002CD8  B0D8               	btfsc	status,0,c
 21793  002CDA  D005               	goto	l3116
 21794  002CDC                     u13530:
 21795                           
 21796                           ; BSR set to: 0
 21797  002CDC  0E00               	movlw	0
 21798  002CDE  6E32               	movwf	(utoa@p+1)^0,c
 21799  002CE0  0E01               	movlw	1
 21800  002CE2  6E31               	movwf	utoa@p^0,c
 21801  002CE4  D006               	goto	l3118
 21802  002CE6                     l3116:
 21803                           
 21804                           ; BSR set to: 0
 21805  002CE6  0060  F390  F031   	movff	_prec,utoa@p
 21806  002CEC  0060  F394  F032   	movff	_prec+1,utoa@p+1
 21807  002CF2                     l3118:
 21808                           
 21809                           ; BSR set to: 0
 21810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 21811  002CF2  0060  F388  F033   	movff	_width,utoa@w
 21812  002CF8  0060  F38C  F034   	movff	_width+1,utoa@w+1
 21813                           
 21814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 21815  002CFE  0060  F084  F035   	movff	utoa@d,utoa@n
 21816  002D04  0060  F088  F036   	movff	utoa@d+1,utoa@n+1
 21817  002D0A  0060  F08C  F037   	movff	utoa@d+2,utoa@n+2
 21818  002D10  0060  F090  F038   	movff	utoa@d+3,utoa@n+3
 21819  002D16  0060  F094  F039   	movff	utoa@d+4,utoa@n+4
 21820  002D1C  0060  F098  F03A   	movff	utoa@d+5,utoa@n+5
 21821  002D22  0060  F09C  F03B   	movff	utoa@d+6,utoa@n+6
 21822  002D28  0060  F0A0  F03C   	movff	utoa@d+7,utoa@n+7
 21823                           
 21824                           ; BSR set to: 0
 21825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 21826  002D2E  0E00               	movlw	0
 21827  002D30  6E3E               	movwf	(utoa@i+1)^0,c
 21828  002D32  0E1F               	movlw	31
 21829  002D34  6E3D               	movwf	utoa@i^0,c
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 21833  002D36  0E00               	movlw	0
 21834  002D38  0102               	movlb	2	; () banked
 21835  002D3A  6FD9               	movwf	(_dbuf+31)& (0+255),b
 21836                           
 21837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21838  002D3C  D096               	goto	l14241
 21839  002D3E                     l14231:
 21840                           
 21841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 21842  002D3E  063D               	decf	utoa@i^0,f,c
 21843  002D40  A0D8               	btfss	status,0,c
 21844  002D42  063E               	decf	(utoa@i+1)^0,f,c
 21845                           
 21846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 21847  002D44  0EBA               	movlw	low _dbuf
 21848  002D46  243D               	addwf	utoa@i^0,w,c
 21849  002D48  6ED9               	movwf	fsr2l,c
 21850  002D4A  0E02               	movlw	high _dbuf
 21851  002D4C  203E               	addwfc	(utoa@i+1)^0,w,c
 21852  002D4E  6EDA               	movwf	fsr2h,c
 21853  002D50  0060  F0D4  F002   	movff	utoa@n,___lomod@dividend
 21854  002D56  0060  F0D8  F003   	movff	utoa@n+1,___lomod@dividend+1
 21855  002D5C  0060  F0DC  F004   	movff	utoa@n+2,___lomod@dividend+2
 21856  002D62  0060  F0E0  F005   	movff	utoa@n+3,___lomod@dividend+3
 21857  002D68  0060  F0E4  F006   	movff	utoa@n+4,___lomod@dividend+4
 21858  002D6E  0060  F0E8  F007   	movff	utoa@n+5,___lomod@dividend+5
 21859  002D74  0060  F0EC  F008   	movff	utoa@n+6,___lomod@dividend+6
 21860  002D7A  0060  F0F0  F009   	movff	utoa@n+7,___lomod@dividend+7
 21861  002D80  0E0A               	movlw	10
 21862  002D82  6E0A               	movwf	___lomod@divisor^0,c
 21863  002D84  0E00               	movlw	0
 21864  002D86  6E0B               	movwf	(___lomod@divisor+1)^0,c
 21865  002D88  0E00               	movlw	0
 21866  002D8A  6E0C               	movwf	(___lomod@divisor+2)^0,c
 21867  002D8C  0E00               	movlw	0
 21868  002D8E  6E0D               	movwf	(___lomod@divisor+3)^0,c
 21869  002D90  0E00               	movlw	0
 21870  002D92  6E0E               	movwf	(___lomod@divisor+4)^0,c
 21871  002D94  0E00               	movlw	0
 21872  002D96  6E0F               	movwf	(___lomod@divisor+5)^0,c
 21873  002D98  0E00               	movlw	0
 21874  002D9A  6E10               	movwf	(___lomod@divisor+6)^0,c
 21875  002D9C  0E00               	movlw	0
 21876  002D9E  6E11               	movwf	(___lomod@divisor+7)^0,c
 21877  002DA0  EC3C  F032         	call	___lomod	;wreg free
 21878  002DA4  0060  F008  F029   	movff	?___lomod,??_utoa
 21879  002DAA  0060  F00C  F02A   	movff	?___lomod+1,??_utoa+1
 21880  002DB0  0060  F010  F02B   	movff	?___lomod+2,??_utoa+2
 21881  002DB6  0060  F014  F02C   	movff	?___lomod+3,??_utoa+3
 21882  002DBC  0060  F018  F02D   	movff	?___lomod+4,??_utoa+4
 21883  002DC2  0060  F01C  F02E   	movff	?___lomod+5,??_utoa+5
 21884  002DC8  0060  F020  F02F   	movff	?___lomod+6,??_utoa+6
 21885  002DCE  0060  F024  F030   	movff	?___lomod+7,??_utoa+7
 21886  002DD4  5029               	movf	??_utoa^0,w,c
 21887  002DD6  0F30               	addlw	48
 21888  002DD8  6EDF               	movwf	indf2,c
 21889                           
 21890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 21891  002DDA  0631               	decf	utoa@p^0,f,c
 21892  002DDC  A0D8               	btfss	status,0,c
 21893  002DDE  0632               	decf	(utoa@p+1)^0,f,c
 21894                           
 21895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 21896  002DE0  0633               	decf	utoa@w^0,f,c
 21897  002DE2  A0D8               	btfss	status,0,c
 21898  002DE4  0634               	decf	(utoa@w+1)^0,f,c
 21899                           
 21900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 21901  002DE6  0060  F0D4  F002   	movff	utoa@n,___lodiv@dividend
 21902  002DEC  0060  F0D8  F003   	movff	utoa@n+1,___lodiv@dividend+1
 21903  002DF2  0060  F0DC  F004   	movff	utoa@n+2,___lodiv@dividend+2
 21904  002DF8  0060  F0E0  F005   	movff	utoa@n+3,___lodiv@dividend+3
 21905  002DFE  0060  F0E4  F006   	movff	utoa@n+4,___lodiv@dividend+4
 21906  002E04  0060  F0E8  F007   	movff	utoa@n+5,___lodiv@dividend+5
 21907  002E0A  0060  F0EC  F008   	movff	utoa@n+6,___lodiv@dividend+6
 21908  002E10  0060  F0F0  F009   	movff	utoa@n+7,___lodiv@dividend+7
 21909  002E16  0E0A               	movlw	10
 21910  002E18  6E0A               	movwf	___lodiv@divisor^0,c
 21911  002E1A  0E00               	movlw	0
 21912  002E1C  6E0B               	movwf	(___lodiv@divisor+1)^0,c
 21913  002E1E  0E00               	movlw	0
 21914  002E20  6E0C               	movwf	(___lodiv@divisor+2)^0,c
 21915  002E22  0E00               	movlw	0
 21916  002E24  6E0D               	movwf	(___lodiv@divisor+3)^0,c
 21917  002E26  0E00               	movlw	0
 21918  002E28  6E0E               	movwf	(___lodiv@divisor+4)^0,c
 21919  002E2A  0E00               	movlw	0
 21920  002E2C  6E0F               	movwf	(___lodiv@divisor+5)^0,c
 21921  002E2E  0E00               	movlw	0
 21922  002E30  6E10               	movwf	(___lodiv@divisor+6)^0,c
 21923  002E32  0E00               	movlw	0
 21924  002E34  6E11               	movwf	(___lodiv@divisor+7)^0,c
 21925  002E36  EC64  F02D         	call	___lodiv	;wreg free
 21926  002E3A  0060  F008  F035   	movff	?___lodiv,utoa@n
 21927  002E40  0060  F00C  F036   	movff	?___lodiv+1,utoa@n+1
 21928  002E46  0060  F010  F037   	movff	?___lodiv+2,utoa@n+2
 21929  002E4C  0060  F014  F038   	movff	?___lodiv+3,utoa@n+3
 21930  002E52  0060  F018  F039   	movff	?___lodiv+4,utoa@n+4
 21931  002E58  0060  F01C  F03A   	movff	?___lodiv+5,utoa@n+5
 21932  002E5E  0060  F020  F03B   	movff	?___lodiv+6,utoa@n+6
 21933  002E64  0060  F024  F03C   	movff	?___lodiv+7,utoa@n+7
 21934  002E6A                     l14241:
 21935                           
 21936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21937  002E6A  503D               	movf	utoa@i^0,w,c
 21938  002E6C  103E               	iorwf	(utoa@i+1)^0,w,c
 21939  002E6E  B4D8               	btfsc	status,2,c
 21940  002E70  D01B               	goto	u13580
 21941  002E72  5035               	movf	utoa@n^0,w,c
 21942  002E74  1036               	iorwf	(utoa@n+1)^0,w,c
 21943  002E76  1037               	iorwf	(utoa@n+2)^0,w,c
 21944  002E78  1038               	iorwf	(utoa@n+3)^0,w,c
 21945  002E7A  1039               	iorwf	(utoa@n+4)^0,w,c
 21946  002E7C  103A               	iorwf	(utoa@n+5)^0,w,c
 21947  002E7E  103B               	iorwf	(utoa@n+6)^0,w,c
 21948  002E80  103C               	iorwf	(utoa@n+7)^0,w,c
 21949  002E82  A4D8               	btfss	status,2,c
 21950  002E84  D75C               	goto	l14231
 21951  002E86  BE32               	btfsc	(utoa@p+1)^0,7,c
 21952  002E88  D005               	goto	u13560
 21953  002E8A  5032               	movf	(utoa@p+1)^0,w,c
 21954  002E8C  E102               	bnz	u13561
 21955  002E8E  0431               	decf	utoa@p^0,w,c
 21956  002E90  B0D8               	btfsc	status,0,c
 21957  002E92                     u13561:
 21958  002E92  D755               	goto	l14231
 21959  002E94                     u13560:
 21960  002E94  BE34               	btfsc	(utoa@w+1)^0,7,c
 21961  002E96  D008               	goto	u13580
 21962  002E98  5034               	movf	(utoa@w+1)^0,w,c
 21963  002E9A  E103               	bnz	u13570
 21964  002E9C  0433               	decf	utoa@w^0,w,c
 21965  002E9E  A0D8               	btfss	status,0,c
 21966  002EA0  D003               	goto	u13580
 21967  002EA2                     u13570:
 21968  002EA2  0100               	movlb	0	; () banked
 21969  002EA4  B3E6               	btfsc	_flags& (0+255),1,b
 21970  002EA6  D74B               	goto	l14231
 21971  002EA8                     u13580:
 21972                           
 21973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 21974  002EA8  0060  F07C  F014   	movff	utoa@fp,pad@fp
 21975  002EAE  0060  F080  F015   	movff	utoa@fp+1,pad@fp+1
 21976  002EB4  0EBA               	movlw	low _dbuf
 21977  002EB6  243D               	addwf	utoa@i^0,w,c
 21978  002EB8  6E16               	movwf	pad@buf^0,c
 21979  002EBA  0E02               	movlw	high _dbuf
 21980  002EBC  203E               	addwfc	(utoa@i+1)^0,w,c
 21981  002EBE  6E17               	movwf	(pad@buf+1)^0,c
 21982  002EC0  0060  F0CC  F018   	movff	utoa@w,pad@p
 21983  002EC6  0060  F0D0  F019   	movff	utoa@w+1,pad@p+1
 21984  002ECC  EC9B  F032         	call	_pad	;wreg free
 21985  002ED0  0060  F050  F01F   	movff	?_pad,?_utoa
 21986  002ED6  0060  F054  F020   	movff	?_pad+1,?_utoa+1
 21987  002EDC  0012               	return		;funcret
 21988  002EDE                     __end_of_utoa:
 21989                           	opt callstack 0
 21990                           
 21991 ;; *************** function ___lomod *****************
 21992 ;; Defined at:
 21993 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 21994 ;; Parameters:    Size  Location     Type
 21995 ;;  dividend        8    1[COMRAM] unsigned long long 
 21996 ;;  divisor         8    9[COMRAM] unsigned long long 
 21997 ;; Auto vars:     Size  Location     Type
 21998 ;;  counter         1   17[COMRAM] unsigned char 
 21999 ;; Return value:  Size  Location     Type
 22000 ;;                  8    1[COMRAM] unsigned long long 
 22001 ;; Registers used:
 22002 ;;		wreg, status,2, status,0
 22003 ;; Tracked objects:
 22004 ;;		On entry : 0/2
 22005 ;;		On exit  : 0/0
 22006 ;;		Unchanged: 0/0
 22007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22008 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22011 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22012 ;;Total ram usage:       17 bytes
 22013 ;; Hardware stack levels used:    1
 22014 ;; Hardware stack levels required when called:    7
 22015 ;; This function calls:
 22016 ;;		Nothing
 22017 ;; This function is called by:
 22018 ;;		_utoa
 22019 ;; This function uses a non-reentrant model
 22020 ;;
 22021                           
 22022                           	psect	text133
 22023  006478                     __ptext133:
 22024                           	opt callstack 0
 22025  006478                     ___lomod:
 22026                           	opt callstack 16
 22027                           
 22028                           ;incstack = 0
 22029  006478  500A               	movf	___lomod@divisor^0,w,c
 22030  00647A  100B               	iorwf	(___lomod@divisor+1)^0,w,c
 22031  00647C  100C               	iorwf	(___lomod@divisor+2)^0,w,c
 22032  00647E  100D               	iorwf	(___lomod@divisor+3)^0,w,c
 22033  006480  100E               	iorwf	(___lomod@divisor+4)^0,w,c
 22034  006482  100F               	iorwf	(___lomod@divisor+5)^0,w,c
 22035  006484  1010               	iorwf	(___lomod@divisor+6)^0,w,c
 22036  006486  1011               	iorwf	(___lomod@divisor+7)^0,w,c
 22037  006488  B4D8               	btfsc	status,2,c
 22038  00648A  D03C               	goto	l3648
 22039  00648C  0E01               	movlw	1
 22040  00648E  6E12               	movwf	___lomod@counter^0,c
 22041  006490  D00A               	goto	l14089
 22042  006492                     l14087:
 22043  006492  90D8               	bcf	status,0,c
 22044  006494  360A               	rlcf	___lomod@divisor^0,f,c
 22045  006496  360B               	rlcf	(___lomod@divisor+1)^0,f,c
 22046  006498  360C               	rlcf	(___lomod@divisor+2)^0,f,c
 22047  00649A  360D               	rlcf	(___lomod@divisor+3)^0,f,c
 22048  00649C  360E               	rlcf	(___lomod@divisor+4)^0,f,c
 22049  00649E  360F               	rlcf	(___lomod@divisor+5)^0,f,c
 22050  0064A0  3610               	rlcf	(___lomod@divisor+6)^0,f,c
 22051  0064A2  3611               	rlcf	(___lomod@divisor+7)^0,f,c
 22052  0064A4  2A12               	incf	___lomod@counter^0,f,c
 22053  0064A6                     l14089:
 22054  0064A6  AE11               	btfss	(___lomod@divisor+7)^0,7,c
 22055  0064A8  D7F4               	goto	l14087
 22056  0064AA                     u13230:
 22057  0064AA  500A               	movf	___lomod@divisor^0,w,c
 22058  0064AC  5C02               	subwf	___lomod@dividend^0,w,c
 22059  0064AE  500B               	movf	(___lomod@divisor+1)^0,w,c
 22060  0064B0  5803               	subwfb	(___lomod@dividend+1)^0,w,c
 22061  0064B2  500C               	movf	(___lomod@divisor+2)^0,w,c
 22062  0064B4  5804               	subwfb	(___lomod@dividend+2)^0,w,c
 22063  0064B6  500D               	movf	(___lomod@divisor+3)^0,w,c
 22064  0064B8  5805               	subwfb	(___lomod@dividend+3)^0,w,c
 22065  0064BA  500E               	movf	(___lomod@divisor+4)^0,w,c
 22066  0064BC  5806               	subwfb	(___lomod@dividend+4)^0,w,c
 22067  0064BE  500F               	movf	(___lomod@divisor+5)^0,w,c
 22068  0064C0  5807               	subwfb	(___lomod@dividend+5)^0,w,c
 22069  0064C2  5010               	movf	(___lomod@divisor+6)^0,w,c
 22070  0064C4  5808               	subwfb	(___lomod@dividend+6)^0,w,c
 22071  0064C6  5011               	movf	(___lomod@divisor+7)^0,w,c
 22072  0064C8  5809               	subwfb	(___lomod@dividend+7)^0,w,c
 22073  0064CA  A0D8               	btfss	status,0,c
 22074  0064CC  D010               	goto	l14095
 22075  0064CE  500A               	movf	___lomod@divisor^0,w,c
 22076  0064D0  5E02               	subwf	___lomod@dividend^0,f,c
 22077  0064D2  500B               	movf	(___lomod@divisor+1)^0,w,c
 22078  0064D4  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
 22079  0064D6  500C               	movf	(___lomod@divisor+2)^0,w,c
 22080  0064D8  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
 22081  0064DA  500D               	movf	(___lomod@divisor+3)^0,w,c
 22082  0064DC  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
 22083  0064DE  500E               	movf	(___lomod@divisor+4)^0,w,c
 22084  0064E0  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
 22085  0064E2  500F               	movf	(___lomod@divisor+5)^0,w,c
 22086  0064E4  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
 22087  0064E6  5010               	movf	(___lomod@divisor+6)^0,w,c
 22088  0064E8  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
 22089  0064EA  5011               	movf	(___lomod@divisor+7)^0,w,c
 22090  0064EC  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
 22091  0064EE                     l14095:
 22092  0064EE  90D8               	bcf	status,0,c
 22093  0064F0  3211               	rrcf	(___lomod@divisor+7)^0,f,c
 22094  0064F2  3210               	rrcf	(___lomod@divisor+6)^0,f,c
 22095  0064F4  320F               	rrcf	(___lomod@divisor+5)^0,f,c
 22096  0064F6  320E               	rrcf	(___lomod@divisor+4)^0,f,c
 22097  0064F8  320D               	rrcf	(___lomod@divisor+3)^0,f,c
 22098  0064FA  320C               	rrcf	(___lomod@divisor+2)^0,f,c
 22099  0064FC  320B               	rrcf	(___lomod@divisor+1)^0,f,c
 22100  0064FE  320A               	rrcf	___lomod@divisor^0,f,c
 22101  006500  2E12               	decfsz	___lomod@counter^0,f,c
 22102  006502  D7D3               	goto	u13230
 22103  006504                     l3648:
 22104  006504  0060  F008  F002   	movff	___lomod@dividend,?___lomod
 22105  00650A  0060  F00C  F003   	movff	___lomod@dividend+1,?___lomod+1
 22106  006510  0060  F010  F004   	movff	___lomod@dividend+2,?___lomod+2
 22107  006516  0060  F014  F005   	movff	___lomod@dividend+3,?___lomod+3
 22108  00651C  0060  F018  F006   	movff	___lomod@dividend+4,?___lomod+4
 22109  006522  0060  F01C  F007   	movff	___lomod@dividend+5,?___lomod+5
 22110  006528  0060  F020  F008   	movff	___lomod@dividend+6,?___lomod+6
 22111  00652E  0060  F024  F009   	movff	___lomod@dividend+7,?___lomod+7
 22112  006534  0012               	return		;funcret
 22113  006536                     __end_of___lomod:
 22114                           	opt callstack 0
 22115                           
 22116 ;; *************** function ___lodiv *****************
 22117 ;; Defined at:
 22118 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 22119 ;; Parameters:    Size  Location     Type
 22120 ;;  dividend        8    1[COMRAM] unsigned long long 
 22121 ;;  divisor         8    9[COMRAM] unsigned long long 
 22122 ;; Auto vars:     Size  Location     Type
 22123 ;;  quotient        8   17[COMRAM] unsigned long long 
 22124 ;;  counter         1   25[COMRAM] unsigned char 
 22125 ;; Return value:  Size  Location     Type
 22126 ;;                  8    1[COMRAM] unsigned long long 
 22127 ;; Registers used:
 22128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22129 ;; Tracked objects:
 22130 ;;		On entry : 0/2
 22131 ;;		On exit  : 0/0
 22132 ;;		Unchanged: 0/0
 22133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22134 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22135 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22137 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22138 ;;Total ram usage:       25 bytes
 22139 ;; Hardware stack levels used:    1
 22140 ;; Hardware stack levels required when called:    7
 22141 ;; This function calls:
 22142 ;;		Nothing
 22143 ;; This function is called by:
 22144 ;;		_utoa
 22145 ;; This function uses a non-reentrant model
 22146 ;;
 22147                           
 22148                           	psect	text134
 22149  005AC8                     __ptext134:
 22150                           	opt callstack 0
 22151  005AC8                     ___lodiv:
 22152                           	opt callstack 16
 22153                           
 22154                           ;incstack = 0
 22155  005AC8  EE20  F012         	lfsr	2,___lodiv@quotient
 22156  005ACC  0E07               	movlw	7
 22157  005ACE                     u13181:
 22158  005ACE  6ADE               	clrf	postinc2,c
 22159  005AD0  06E8               	decf	wreg,f,c
 22160  005AD2  E2FD               	bc	u13181
 22161  005AD4  500A               	movf	___lodiv@divisor^0,w,c
 22162  005AD6  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
 22163  005AD8  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
 22164  005ADA  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
 22165  005ADC  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
 22166  005ADE  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
 22167  005AE0  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
 22168  005AE2  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
 22169  005AE4  B4D8               	btfsc	status,2,c
 22170  005AE6  D046               	goto	l3638
 22171  005AE8  0E01               	movlw	1
 22172  005AEA  6E1A               	movwf	___lodiv@counter^0,c
 22173  005AEC  D00A               	goto	l14069
 22174  005AEE                     l14067:
 22175  005AEE  90D8               	bcf	status,0,c
 22176  005AF0  360A               	rlcf	___lodiv@divisor^0,f,c
 22177  005AF2  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
 22178  005AF4  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
 22179  005AF6  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
 22180  005AF8  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
 22181  005AFA  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
 22182  005AFC  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
 22183  005AFE  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
 22184  005B00  2A1A               	incf	___lodiv@counter^0,f,c
 22185  005B02                     l14069:
 22186  005B02  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
 22187  005B04  D7F4               	goto	l14067
 22188  005B06                     u13200:
 22189  005B06  90D8               	bcf	status,0,c
 22190  005B08  3612               	rlcf	___lodiv@quotient^0,f,c
 22191  005B0A  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
 22192  005B0C  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
 22193  005B0E  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
 22194  005B10  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
 22195  005B12  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
 22196  005B14  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
 22197  005B16  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
 22198  005B18  500A               	movf	___lodiv@divisor^0,w,c
 22199  005B1A  5C02               	subwf	___lodiv@dividend^0,w,c
 22200  005B1C  500B               	movf	(___lodiv@divisor+1)^0,w,c
 22201  005B1E  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
 22202  005B20  500C               	movf	(___lodiv@divisor+2)^0,w,c
 22203  005B22  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
 22204  005B24  500D               	movf	(___lodiv@divisor+3)^0,w,c
 22205  005B26  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
 22206  005B28  500E               	movf	(___lodiv@divisor+4)^0,w,c
 22207  005B2A  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
 22208  005B2C  500F               	movf	(___lodiv@divisor+5)^0,w,c
 22209  005B2E  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
 22210  005B30  5010               	movf	(___lodiv@divisor+6)^0,w,c
 22211  005B32  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
 22212  005B34  5011               	movf	(___lodiv@divisor+7)^0,w,c
 22213  005B36  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
 22214  005B38  A0D8               	btfss	status,0,c
 22215  005B3A  D011               	goto	l14079
 22216  005B3C  500A               	movf	___lodiv@divisor^0,w,c
 22217  005B3E  5E02               	subwf	___lodiv@dividend^0,f,c
 22218  005B40  500B               	movf	(___lodiv@divisor+1)^0,w,c
 22219  005B42  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
 22220  005B44  500C               	movf	(___lodiv@divisor+2)^0,w,c
 22221  005B46  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
 22222  005B48  500D               	movf	(___lodiv@divisor+3)^0,w,c
 22223  005B4A  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
 22224  005B4C  500E               	movf	(___lodiv@divisor+4)^0,w,c
 22225  005B4E  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
 22226  005B50  500F               	movf	(___lodiv@divisor+5)^0,w,c
 22227  005B52  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
 22228  005B54  5010               	movf	(___lodiv@divisor+6)^0,w,c
 22229  005B56  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
 22230  005B58  5011               	movf	(___lodiv@divisor+7)^0,w,c
 22231  005B5A  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
 22232  005B5C  8012               	bsf	___lodiv@quotient^0,0,c
 22233  005B5E                     l14079:
 22234  005B5E  90D8               	bcf	status,0,c
 22235  005B60  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
 22236  005B62  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
 22237  005B64  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
 22238  005B66  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
 22239  005B68  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
 22240  005B6A  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
 22241  005B6C  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
 22242  005B6E  320A               	rrcf	___lodiv@divisor^0,f,c
 22243  005B70  2E1A               	decfsz	___lodiv@counter^0,f,c
 22244  005B72  D7C9               	goto	u13200
 22245  005B74                     l3638:
 22246  005B74  0060  F048  F002   	movff	___lodiv@quotient,?___lodiv
 22247  005B7A  0060  F04C  F003   	movff	___lodiv@quotient+1,?___lodiv+1
 22248  005B80  0060  F050  F004   	movff	___lodiv@quotient+2,?___lodiv+2
 22249  005B86  0060  F054  F005   	movff	___lodiv@quotient+3,?___lodiv+3
 22250  005B8C  0060  F058  F006   	movff	___lodiv@quotient+4,?___lodiv+4
 22251  005B92  0060  F05C  F007   	movff	___lodiv@quotient+5,?___lodiv+5
 22252  005B98  0060  F060  F008   	movff	___lodiv@quotient+6,?___lodiv+6
 22253  005B9E  0060  F064  F009   	movff	___lodiv@quotient+7,?___lodiv+7
 22254  005BA4  0012               	return		;funcret
 22255  005BA6                     __end_of___lodiv:
 22256                           	opt callstack 0
 22257                           
 22258 ;; *************** function _stoa *****************
 22259 ;; Defined at:
 22260 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22261 ;; Parameters:    Size  Location     Type
 22262 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 22263 ;;		 -> NULL(0), 
 22264 ;;  s               1   14[COMRAM] PTR unsigned char 
 22265 ;;		 -> ?_printf(2), appDataInd@data(65), 
 22266 ;; Auto vars:     Size  Location     Type
 22267 ;;  nuls            7   16[COMRAM] unsigned char [7]
 22268 ;;  l               2   30[COMRAM] int 
 22269 ;;  p               2   28[COMRAM] int 
 22270 ;;  w               2   25[COMRAM] int 
 22271 ;;  i               2   23[COMRAM] int 
 22272 ;;  cp              1   27[COMRAM] PTR unsigned char 
 22273 ;;		 -> ?_printf(2), stoa@nuls(7), appDataInd@data(65), 
 22274 ;; Return value:  Size  Location     Type
 22275 ;;                  2   12[COMRAM] int 
 22276 ;; Registers used:
 22277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22278 ;; Tracked objects:
 22279 ;;		On entry : 3F/0
 22280 ;;		On exit  : 0/0
 22281 ;;		Unchanged: 0/0
 22282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22283 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22284 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22286 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22287 ;;Total ram usage:       20 bytes
 22288 ;; Hardware stack levels used:    1
 22289 ;; Hardware stack levels required when called:   10
 22290 ;; This function calls:
 22291 ;;		_fputc
 22292 ;;		_strlen
 22293 ;; This function is called by:
 22294 ;;		_vfpfcnvrt
 22295 ;; This function uses a non-reentrant model
 22296 ;;
 22297                           
 22298                           	psect	text135
 22299  0045BC                     __ptext135:
 22300                           	opt callstack 0
 22301  0045BC                     _stoa:
 22302                           	opt callstack 14
 22303                           
 22304                           ; BSR set to: 0
 22305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 22306                           
 22307                           ;incstack = 0
 22308  0045BC  EE20  F1DF         	lfsr	2,stoa@F1139
 22309  0045C0  EE10  F011         	lfsr	1,stoa@nuls
 22310  0045C4  0E06               	movlw	6
 22311  0045C6                     u13431:
 22312  0045C6  006F FF6F FFE3     	movff	plusw2,plusw1
 22313  0045CC  06E8               	decf	wreg,f,c
 22314  0045CE  E2FB               	bc	u13431
 22315                           
 22316                           ; BSR set to: 0
 22317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 22318  0045D0  0060  F03C  F01C   	movff	stoa@s,stoa@cp
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 22322  0045D6  501C               	movf	stoa@cp^0,w,c
 22323  0045D8  A4D8               	btfss	status,2,c
 22324  0045DA  D002               	goto	l14185
 22325                           
 22326                           ; BSR set to: 0
 22327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 22328  0045DC  0E11               	movlw	low stoa@nuls
 22329  0045DE  6E1C               	movwf	stoa@cp^0,c
 22330  0045E0                     l14185:
 22331                           
 22332                           ; BSR set to: 0
 22333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 22334  0045E0  0060  F070  F002   	movff	stoa@cp,strlen@s
 22335  0045E6  6A03               	clrf	(strlen@s+1)^0,c
 22336  0045E8  EC80  F03E         	call	_strlen	;wreg free
 22337  0045EC  0060  F008  F01F   	movff	?_strlen,stoa@l
 22338  0045F2  0060  F00C  F020   	movff	?_strlen+1,stoa@l+1
 22339                           
 22340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 22341  0045F8  0060  F390  F01D   	movff	_prec,stoa@p
 22342  0045FE  0060  F394  F01E   	movff	_prec+1,stoa@p+1
 22343                           
 22344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 22345  004604  BE1E               	btfsc	(stoa@p+1)^0,7,c
 22346  004606  D010               	goto	l3097
 22347  004608  501F               	movf	stoa@l^0,w,c
 22348  00460A  5C1D               	subwf	stoa@p^0,w,c
 22349  00460C  501E               	movf	(stoa@p+1)^0,w,c
 22350  00460E  0A80               	xorlw	128
 22351  004610  6E10               	movwf	??_stoa^0,c
 22352  004612  5020               	movf	(stoa@l+1)^0,w,c
 22353  004614  0A80               	xorlw	128
 22354  004616  5810               	subwfb	??_stoa^0,w,c
 22355  004618  B0D8               	btfsc	status,0,c
 22356  00461A  D006               	goto	l3097
 22357  00461C  0060  F074  F01F   	movff	stoa@p,stoa@l
 22358  004622  0060  F078  F020   	movff	stoa@p+1,stoa@l+1
 22359  004628                     l3097:
 22360                           
 22361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 22362  004628  0060  F07C  F01D   	movff	stoa@l,stoa@p
 22363  00462E  0060  F080  F01E   	movff	stoa@l+1,stoa@p+1
 22364                           
 22365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 22366  004634  0060  F388  F01A   	movff	_width,stoa@w
 22367  00463A  0060  F38C  F01B   	movff	_width+1,stoa@w+1
 22368                           
 22369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 22370  004640  0100               	movlb	0	; () banked
 22371  004642  A1E6               	btfss	_flags& (0+255),0,b
 22372  004644  D00F               	goto	l14199
 22373  004646  D018               	goto	u13480
 22374  004648                     l14195:
 22375                           
 22376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 22377  004648  0E00               	movlw	0
 22378  00464A  6E05               	movwf	(fputc@c+1)^0,c
 22379  00464C  0E20               	movlw	32
 22380  00464E  6E04               	movwf	fputc@c^0,c
 22381  004650  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22382  004656  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22383  00465C  EC2C  F03B         	call	_fputc	;wreg free
 22384                           
 22385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 22386  004660  4A1F               	infsnz	stoa@l^0,f,c
 22387  004662  2A20               	incf	(stoa@l+1)^0,f,c
 22388  004664                     l14199:
 22389                           
 22390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 22391  004664  501A               	movf	stoa@w^0,w,c
 22392  004666  5C1F               	subwf	stoa@l^0,w,c
 22393  004668  5020               	movf	(stoa@l+1)^0,w,c
 22394  00466A  0A80               	xorlw	128
 22395  00466C  6E10               	movwf	??_stoa^0,c
 22396  00466E  501B               	movf	(stoa@w+1)^0,w,c
 22397  004670  0A80               	xorlw	128
 22398  004672  5810               	subwfb	??_stoa^0,w,c
 22399  004674  A0D8               	btfss	status,0,c
 22400  004676  D7E8               	goto	l14195
 22401  004678                     u13480:
 22402                           
 22403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 22404  004678  0E00               	movlw	0
 22405  00467A  6E19               	movwf	(stoa@i+1)^0,c
 22406  00467C  0E00               	movlw	0
 22407  00467E  6E18               	movwf	stoa@i^0,c
 22408                           
 22409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 22410  004680  D013               	goto	l14209
 22411  004682                     l14203:
 22412                           
 22413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 22414  004682  501C               	movf	stoa@cp^0,w,c
 22415  004684  6ED9               	movwf	fsr2l,c
 22416  004686  6ADA               	clrf	fsr2h,c
 22417  004688  50DF               	movf	indf2,w,c
 22418  00468A  6E10               	movwf	??_stoa^0,c
 22419  00468C  5010               	movf	??_stoa^0,w,c
 22420  00468E  6E04               	movwf	fputc@c^0,c
 22421  004690  6A05               	clrf	(fputc@c+1)^0,c
 22422  004692  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22423  004698  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22424  00469E  EC2C  F03B         	call	_fputc	;wreg free
 22425                           
 22426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 22427  0046A2  2A1C               	incf	stoa@cp^0,f,c
 22428                           
 22429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 22430  0046A4  4A18               	infsnz	stoa@i^0,f,c
 22431  0046A6  2A19               	incf	(stoa@i+1)^0,f,c
 22432  0046A8                     l14209:
 22433                           
 22434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 22435  0046A8  501D               	movf	stoa@p^0,w,c
 22436  0046AA  5C18               	subwf	stoa@i^0,w,c
 22437  0046AC  5019               	movf	(stoa@i+1)^0,w,c
 22438  0046AE  0A80               	xorlw	128
 22439  0046B0  6E10               	movwf	??_stoa^0,c
 22440  0046B2  501E               	movf	(stoa@p+1)^0,w,c
 22441  0046B4  0A80               	xorlw	128
 22442  0046B6  5810               	subwfb	??_stoa^0,w,c
 22443  0046B8  A0D8               	btfss	status,0,c
 22444  0046BA  D7E3               	goto	l14203
 22445                           
 22446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 22447  0046BC  0100               	movlb	0	; () banked
 22448  0046BE  B1E6               	btfsc	_flags& (0+255),0,b
 22449  0046C0  D00F               	goto	l14217
 22450  0046C2  D018               	goto	u13510
 22451  0046C4                     l14213:
 22452                           
 22453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 22454  0046C4  0E00               	movlw	0
 22455  0046C6  6E05               	movwf	(fputc@c+1)^0,c
 22456  0046C8  0E20               	movlw	32
 22457  0046CA  6E04               	movwf	fputc@c^0,c
 22458  0046CC  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22459  0046D2  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22460  0046D8  EC2C  F03B         	call	_fputc	;wreg free
 22461                           
 22462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 22463  0046DC  4A1F               	infsnz	stoa@l^0,f,c
 22464  0046DE  2A20               	incf	(stoa@l+1)^0,f,c
 22465  0046E0                     l14217:
 22466                           
 22467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 22468  0046E0  501A               	movf	stoa@w^0,w,c
 22469  0046E2  5C1F               	subwf	stoa@l^0,w,c
 22470  0046E4  5020               	movf	(stoa@l+1)^0,w,c
 22471  0046E6  0A80               	xorlw	128
 22472  0046E8  6E10               	movwf	??_stoa^0,c
 22473  0046EA  501B               	movf	(stoa@w+1)^0,w,c
 22474  0046EC  0A80               	xorlw	128
 22475  0046EE  5810               	subwfb	??_stoa^0,w,c
 22476  0046F0  A0D8               	btfss	status,0,c
 22477  0046F2  D7E8               	goto	l14213
 22478  0046F4                     u13510:
 22479                           
 22480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 22481                           
 22482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 586:     }
 22483  0046F4  0060  F07C  F00D   	movff	stoa@l,?_stoa
 22484  0046FA  0060  F080  F00E   	movff	stoa@l+1,?_stoa+1
 22485  004700  0012               	return		;funcret
 22486  004702                     __end_of_stoa:
 22487                           	opt callstack 0
 22488                           
 22489 ;; *************** function _dtoa *****************
 22490 ;; Defined at:
 22491 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 22494 ;;		 -> NULL(0), 
 22495 ;;  d               8   32[COMRAM] long long 
 22496 ;; Auto vars:     Size  Location     Type
 22497 ;;  n               8   56[COMRAM] long long 
 22498 ;;  i               2   64[COMRAM] int 
 22499 ;;  s               2   54[COMRAM] int 
 22500 ;;  w               2   52[COMRAM] int 
 22501 ;;  p               2   50[COMRAM] int 
 22502 ;; Return value:  Size  Location     Type
 22503 ;;                  2   30[COMRAM] int 
 22504 ;; Registers used:
 22505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22506 ;; Tracked objects:
 22507 ;;		On entry : 3F/0
 22508 ;;		On exit  : 0/0
 22509 ;;		Unchanged: 0/0
 22510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22511 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22512 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22513 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22514 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22515 ;;Total ram usage:       36 bytes
 22516 ;; Hardware stack levels used:    1
 22517 ;; Hardware stack levels required when called:   12
 22518 ;; This function calls:
 22519 ;;		___aodiv
 22520 ;;		___aomod
 22521 ;;		_abs
 22522 ;;		_pad
 22523 ;; This function is called by:
 22524 ;;		_vfpfcnvrt
 22525 ;; This function uses a non-reentrant model
 22526 ;;
 22527                           
 22528                           	psect	text136
 22529  00207E                     __ptext136:
 22530                           	opt callstack 0
 22531  00207E                     _dtoa:
 22532                           	opt callstack 12
 22533                           
 22534                           ; BSR set to: 0
 22535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 22536                           
 22537                           ;incstack = 0
 22538  00207E  0060  F084  F039   	movff	dtoa@d,dtoa@n
 22539  002084  0060  F088  F03A   	movff	dtoa@d+1,dtoa@n+1
 22540  00208A  0060  F08C  F03B   	movff	dtoa@d+2,dtoa@n+2
 22541  002090  0060  F090  F03C   	movff	dtoa@d+3,dtoa@n+3
 22542  002096  0060  F094  F03D   	movff	dtoa@d+4,dtoa@n+4
 22543  00209C  0060  F098  F03E   	movff	dtoa@d+5,dtoa@n+5
 22544  0020A2  0060  F09C  F03F   	movff	dtoa@d+6,dtoa@n+6
 22545  0020A8  0060  F0A0  F040   	movff	dtoa@d+7,dtoa@n+7
 22546                           
 22547                           ; BSR set to: 0
 22548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 22549  0020AE  AE40               	btfss	(dtoa@n+7)^0,7,c
 22550  0020B0  D002               	goto	u13280
 22551  0020B2  0E01               	movlw	1
 22552  0020B4  D001               	goto	u13290
 22553  0020B6                     u13280:
 22554  0020B6  0E00               	movlw	0
 22555  0020B8                     u13290:
 22556  0020B8  6E37               	movwf	dtoa@s^0,c
 22557  0020BA  6A38               	clrf	(dtoa@s+1)^0,c
 22558                           
 22559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 22560  0020BC  5037               	movf	dtoa@s^0,w,c
 22561  0020BE  1038               	iorwf	(dtoa@s+1)^0,w,c
 22562  0020C0  B4D8               	btfsc	status,2,c
 22563  0020C2  D010               	goto	l14121
 22564                           
 22565                           ; BSR set to: 0
 22566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 22567  0020C4  1E40               	comf	(dtoa@n+7)^0,f,c
 22568  0020C6  1E3F               	comf	(dtoa@n+6)^0,f,c
 22569  0020C8  1E3E               	comf	(dtoa@n+5)^0,f,c
 22570  0020CA  1E3D               	comf	(dtoa@n+4)^0,f,c
 22571  0020CC  1E3C               	comf	(dtoa@n+3)^0,f,c
 22572  0020CE  1E3B               	comf	(dtoa@n+2)^0,f,c
 22573  0020D0  1E3A               	comf	(dtoa@n+1)^0,f,c
 22574  0020D2  6C39               	negf	dtoa@n^0,c
 22575  0020D4  0E00               	movlw	0
 22576  0020D6  223A               	addwfc	(dtoa@n+1)^0,f,c
 22577  0020D8  223B               	addwfc	(dtoa@n+2)^0,f,c
 22578  0020DA  223C               	addwfc	(dtoa@n+3)^0,f,c
 22579  0020DC  223D               	addwfc	(dtoa@n+4)^0,f,c
 22580  0020DE  223E               	addwfc	(dtoa@n+5)^0,f,c
 22581  0020E0  223F               	addwfc	(dtoa@n+6)^0,f,c
 22582  0020E2  2240               	addwfc	(dtoa@n+7)^0,f,c
 22583  0020E4                     l14121:
 22584                           
 22585                           ; BSR set to: 0
 22586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 22587  0020E4  AFE5               	btfss	(_prec+1)& (0+255),7,b
 22588                           
 22589                           ; BSR set to: 0
 22590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 22591  0020E6  93E6               	bcf	_flags& (0+255),1,b
 22592                           
 22593                           ; BSR set to: 0
 22594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 22595  0020E8  BFE5               	btfsc	(_prec+1)& (0+255),7,b
 22596  0020EA  D005               	goto	u13320
 22597  0020EC  51E5               	movf	(_prec+1)& (0+255),w,b
 22598  0020EE  E108               	bnz	l3068
 22599  0020F0  05E4               	decf	_prec& (0+255),w,b
 22600  0020F2  B0D8               	btfsc	status,0,c
 22601  0020F4  D005               	goto	l3068
 22602  0020F6                     u13320:
 22603                           
 22604                           ; BSR set to: 0
 22605  0020F6  0E00               	movlw	0
 22606  0020F8  6E34               	movwf	(dtoa@p+1)^0,c
 22607  0020FA  0E01               	movlw	1
 22608  0020FC  6E33               	movwf	dtoa@p^0,c
 22609  0020FE  D006               	goto	l3070
 22610  002100                     l3068:
 22611                           
 22612                           ; BSR set to: 0
 22613  002100  0060  F390  F033   	movff	_prec,dtoa@p
 22614  002106  0060  F394  F034   	movff	_prec+1,dtoa@p+1
 22615  00210C                     l3070:
 22616                           
 22617                           ; BSR set to: 0
 22618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 22619  00210C  0060  F388  F035   	movff	_width,dtoa@w
 22620  002112  0060  F38C  F036   	movff	_width+1,dtoa@w+1
 22621                           
 22622                           ; BSR set to: 0
 22623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 22624  002118  5037               	movf	dtoa@s^0,w,c
 22625  00211A  1038               	iorwf	(dtoa@s+1)^0,w,c
 22626  00211C  A4D8               	btfss	status,2,c
 22627  00211E  D002               	goto	u13340
 22628                           
 22629                           ; BSR set to: 0
 22630  002120  A5E6               	btfss	_flags& (0+255),2,b
 22631  002122  D003               	goto	l14135
 22632  002124                     u13340:
 22633                           
 22634                           ; BSR set to: 0
 22635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 22636  002124  0635               	decf	dtoa@w^0,f,c
 22637  002126  A0D8               	btfss	status,0,c
 22638  002128  0636               	decf	(dtoa@w+1)^0,f,c
 22639  00212A                     l14135:
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 22643  00212A  0E00               	movlw	0
 22644  00212C  6E42               	movwf	(dtoa@i+1)^0,c
 22645  00212E  0E1F               	movlw	31
 22646  002130  6E41               	movwf	dtoa@i^0,c
 22647                           
 22648                           ; BSR set to: 0
 22649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 22650  002132  0E00               	movlw	0
 22651  002134  0102               	movlb	2	; () banked
 22652  002136  6FD9               	movwf	(_dbuf+31)& (0+255),b
 22653                           
 22654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22655  002138  D09E               	goto	l14149
 22656  00213A                     l14139:
 22657                           
 22658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 22659  00213A  0641               	decf	dtoa@i^0,f,c
 22660  00213C  A0D8               	btfss	status,0,c
 22661  00213E  0642               	decf	(dtoa@i+1)^0,f,c
 22662                           
 22663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 22664  002140  0EBA               	movlw	low _dbuf
 22665  002142  2441               	addwf	dtoa@i^0,w,c
 22666  002144  6ED9               	movwf	fsr2l,c
 22667  002146  0E02               	movlw	high _dbuf
 22668  002148  2042               	addwfc	(dtoa@i+1)^0,w,c
 22669  00214A  6EDA               	movwf	fsr2h,c
 22670  00214C  0060  F0E4  F002   	movff	dtoa@n,___aomod@dividend
 22671  002152  0060  F0E8  F003   	movff	dtoa@n+1,___aomod@dividend+1
 22672  002158  0060  F0EC  F004   	movff	dtoa@n+2,___aomod@dividend+2
 22673  00215E  0060  F0F0  F005   	movff	dtoa@n+3,___aomod@dividend+3
 22674  002164  0060  F0F4  F006   	movff	dtoa@n+4,___aomod@dividend+4
 22675  00216A  0060  F0F8  F007   	movff	dtoa@n+5,___aomod@dividend+5
 22676  002170  0060  F0FC  F008   	movff	dtoa@n+6,___aomod@dividend+6
 22677  002176  0060  F100  F009   	movff	dtoa@n+7,___aomod@dividend+7
 22678  00217C  0E0A               	movlw	10
 22679  00217E  6E0A               	movwf	___aomod@divisor^0,c
 22680  002180  0E00               	movlw	0
 22681  002182  6E0B               	movwf	(___aomod@divisor+1)^0,c
 22682  002184  0E00               	movlw	0
 22683  002186  6E0C               	movwf	(___aomod@divisor+2)^0,c
 22684  002188  0E00               	movlw	0
 22685  00218A  6E0D               	movwf	(___aomod@divisor+3)^0,c
 22686  00218C  0E00               	movlw	0
 22687  00218E  6E0E               	movwf	(___aomod@divisor+4)^0,c
 22688  002190  0E00               	movlw	0
 22689  002192  6E0F               	movwf	(___aomod@divisor+5)^0,c
 22690  002194  0E00               	movlw	0
 22691  002196  6E10               	movwf	(___aomod@divisor+6)^0,c
 22692  002198  0E00               	movlw	0
 22693  00219A  6E11               	movwf	(___aomod@divisor+7)^0,c
 22694  00219C  EC23  F024         	call	___aomod	;wreg free
 22695  0021A0  0060  F008  F029   	movff	?___aomod,??_dtoa
 22696  0021A6  0060  F00C  F02A   	movff	?___aomod+1,??_dtoa+1
 22697  0021AC  0060  F010  F02B   	movff	?___aomod+2,??_dtoa+2
 22698  0021B2  0060  F014  F02C   	movff	?___aomod+3,??_dtoa+3
 22699  0021B8  0060  F018  F02D   	movff	?___aomod+4,??_dtoa+4
 22700  0021BE  0060  F01C  F02E   	movff	?___aomod+5,??_dtoa+5
 22701  0021C4  0060  F020  F02F   	movff	?___aomod+6,??_dtoa+6
 22702  0021CA  0060  F024  F030   	movff	?___aomod+7,??_dtoa+7
 22703  0021D0  0060  F0A4  F014   	movff	??_dtoa,abs@a
 22704  0021D6  0060  F0AC  F015   	movff	??_dtoa+2,abs@a+1
 22705  0021DC  EC3C  F041         	call	_abs	;wreg free
 22706  0021E0  5014               	movf	?_abs^0,w,c
 22707  0021E2  0F30               	addlw	48
 22708  0021E4  6EDF               	movwf	indf2,c
 22709                           
 22710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 22711  0021E6  0633               	decf	dtoa@p^0,f,c
 22712  0021E8  A0D8               	btfss	status,0,c
 22713  0021EA  0634               	decf	(dtoa@p+1)^0,f,c
 22714                           
 22715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 22716  0021EC  0635               	decf	dtoa@w^0,f,c
 22717  0021EE  A0D8               	btfss	status,0,c
 22718  0021F0  0636               	decf	(dtoa@w+1)^0,f,c
 22719                           
 22720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 22721  0021F2  0060  F0E4  F002   	movff	dtoa@n,___aodiv@dividend
 22722  0021F8  0060  F0E8  F003   	movff	dtoa@n+1,___aodiv@dividend+1
 22723  0021FE  0060  F0EC  F004   	movff	dtoa@n+2,___aodiv@dividend+2
 22724  002204  0060  F0F0  F005   	movff	dtoa@n+3,___aodiv@dividend+3
 22725  00220A  0060  F0F4  F006   	movff	dtoa@n+4,___aodiv@dividend+4
 22726  002210  0060  F0F8  F007   	movff	dtoa@n+5,___aodiv@dividend+5
 22727  002216  0060  F0FC  F008   	movff	dtoa@n+6,___aodiv@dividend+6
 22728  00221C  0060  F100  F009   	movff	dtoa@n+7,___aodiv@dividend+7
 22729  002222  0E0A               	movlw	10
 22730  002224  6E0A               	movwf	___aodiv@divisor^0,c
 22731  002226  0E00               	movlw	0
 22732  002228  6E0B               	movwf	(___aodiv@divisor+1)^0,c
 22733  00222A  0E00               	movlw	0
 22734  00222C  6E0C               	movwf	(___aodiv@divisor+2)^0,c
 22735  00222E  0E00               	movlw	0
 22736  002230  6E0D               	movwf	(___aodiv@divisor+3)^0,c
 22737  002232  0E00               	movlw	0
 22738  002234  6E0E               	movwf	(___aodiv@divisor+4)^0,c
 22739  002236  0E00               	movlw	0
 22740  002238  6E0F               	movwf	(___aodiv@divisor+5)^0,c
 22741  00223A  0E00               	movlw	0
 22742  00223C  6E10               	movwf	(___aodiv@divisor+6)^0,c
 22743  00223E  0E00               	movlw	0
 22744  002240  6E11               	movwf	(___aodiv@divisor+7)^0,c
 22745  002242  EC88  F021         	call	___aodiv	;wreg free
 22746  002246  0060  F008  F039   	movff	?___aodiv,dtoa@n
 22747  00224C  0060  F00C  F03A   	movff	?___aodiv+1,dtoa@n+1
 22748  002252  0060  F010  F03B   	movff	?___aodiv+2,dtoa@n+2
 22749  002258  0060  F014  F03C   	movff	?___aodiv+3,dtoa@n+3
 22750  00225E  0060  F018  F03D   	movff	?___aodiv+4,dtoa@n+4
 22751  002264  0060  F01C  F03E   	movff	?___aodiv+5,dtoa@n+5
 22752  00226A  0060  F020  F03F   	movff	?___aodiv+6,dtoa@n+6
 22753  002270  0060  F024  F040   	movff	?___aodiv+7,dtoa@n+7
 22754  002276                     l14149:
 22755                           
 22756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22757  002276  BE42               	btfsc	(dtoa@i+1)^0,7,c
 22758  002278  D020               	goto	u13390
 22759  00227A  5042               	movf	(dtoa@i+1)^0,w,c
 22760  00227C  E103               	bnz	u13350
 22761  00227E  0441               	decf	dtoa@i^0,w,c
 22762  002280  A0D8               	btfss	status,0,c
 22763  002282  D01B               	goto	u13390
 22764  002284                     u13350:
 22765  002284  5039               	movf	dtoa@n^0,w,c
 22766  002286  103A               	iorwf	(dtoa@n+1)^0,w,c
 22767  002288  103B               	iorwf	(dtoa@n+2)^0,w,c
 22768  00228A  103C               	iorwf	(dtoa@n+3)^0,w,c
 22769  00228C  103D               	iorwf	(dtoa@n+4)^0,w,c
 22770  00228E  103E               	iorwf	(dtoa@n+5)^0,w,c
 22771  002290  103F               	iorwf	(dtoa@n+6)^0,w,c
 22772  002292  1040               	iorwf	(dtoa@n+7)^0,w,c
 22773  002294  A4D8               	btfss	status,2,c
 22774  002296  D751               	goto	l14139
 22775  002298  BE34               	btfsc	(dtoa@p+1)^0,7,c
 22776  00229A  D005               	goto	u13370
 22777  00229C  5034               	movf	(dtoa@p+1)^0,w,c
 22778  00229E  E102               	bnz	u13371
 22779  0022A0  0433               	decf	dtoa@p^0,w,c
 22780  0022A2  B0D8               	btfsc	status,0,c
 22781  0022A4                     u13371:
 22782  0022A4  D74A               	goto	l14139
 22783  0022A6                     u13370:
 22784  0022A6  BE36               	btfsc	(dtoa@w+1)^0,7,c
 22785  0022A8  D008               	goto	u13390
 22786  0022AA  5036               	movf	(dtoa@w+1)^0,w,c
 22787  0022AC  E103               	bnz	u13380
 22788  0022AE  0435               	decf	dtoa@w^0,w,c
 22789  0022B0  A0D8               	btfss	status,0,c
 22790  0022B2  D003               	goto	u13390
 22791  0022B4                     u13380:
 22792  0022B4  0100               	movlb	0	; () banked
 22793  0022B6  B3E6               	btfsc	_flags& (0+255),1,b
 22794  0022B8  D740               	goto	l14139
 22795  0022BA                     u13390:
 22796                           
 22797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 22798  0022BA  5037               	movf	dtoa@s^0,w,c
 22799  0022BC  1038               	iorwf	(dtoa@s+1)^0,w,c
 22800  0022BE  A4D8               	btfss	status,2,c
 22801  0022C0  D003               	goto	u13410
 22802  0022C2  0100               	movlb	0	; () banked
 22803  0022C4  A5E6               	btfss	_flags& (0+255),2,b
 22804  0022C6  D018               	goto	l14173
 22805  0022C8                     u13410:
 22806                           
 22807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 22808  0022C8  0641               	decf	dtoa@i^0,f,c
 22809  0022CA  A0D8               	btfss	status,0,c
 22810  0022CC  0642               	decf	(dtoa@i+1)^0,f,c
 22811                           
 22812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 22813  0022CE  5037               	movf	dtoa@s^0,w,c
 22814  0022D0  1038               	iorwf	(dtoa@s+1)^0,w,c
 22815  0022D2  A4D8               	btfss	status,2,c
 22816  0022D4  D004               	goto	l14169
 22817  0022D6  0E00               	movlw	0
 22818  0022D8  6E32               	movwf	(_dtoa$7219+1)^0,c
 22819  0022DA  0E2B               	movlw	43
 22820  0022DC  D003               	goto	L24
 22821  0022DE                     l14169:
 22822  0022DE  0E00               	movlw	0
 22823  0022E0  6E32               	movwf	(_dtoa$7219+1)^0,c
 22824  0022E2  0E2D               	movlw	45
 22825  0022E4                     L24:
 22826  0022E4  6E31               	movwf	_dtoa$7219^0,c
 22827  0022E6  0EBA               	movlw	low _dbuf
 22828  0022E8  2441               	addwf	dtoa@i^0,w,c
 22829  0022EA  6ED9               	movwf	fsr2l,c
 22830  0022EC  0E02               	movlw	high _dbuf
 22831  0022EE  2042               	addwfc	(dtoa@i+1)^0,w,c
 22832  0022F0  6EDA               	movwf	fsr2h,c
 22833  0022F2  0060  F0C7  FFDF   	movff	_dtoa$7219,indf2
 22834  0022F8                     l14173:
 22835                           
 22836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 22837  0022F8  0060  F07C  F014   	movff	dtoa@fp,pad@fp
 22838  0022FE  0060  F080  F015   	movff	dtoa@fp+1,pad@fp+1
 22839  002304  0EBA               	movlw	low _dbuf
 22840  002306  2441               	addwf	dtoa@i^0,w,c
 22841  002308  6E16               	movwf	pad@buf^0,c
 22842  00230A  0E02               	movlw	high _dbuf
 22843  00230C  2042               	addwfc	(dtoa@i+1)^0,w,c
 22844  00230E  6E17               	movwf	(pad@buf+1)^0,c
 22845  002310  0060  F0D4  F018   	movff	dtoa@w,pad@p
 22846  002316  0060  F0D8  F019   	movff	dtoa@w+1,pad@p+1
 22847  00231C  EC9B  F032         	call	_pad	;wreg free
 22848  002320  0060  F050  F01F   	movff	?_pad,?_dtoa
 22849  002326  0060  F054  F020   	movff	?_pad+1,?_dtoa+1
 22850  00232C  0012               	return		;funcret
 22851  00232E                     __end_of_dtoa:
 22852                           	opt callstack 0
 22853                           
 22854 ;; *************** function _pad *****************
 22855 ;; Defined at:
 22856 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22857 ;; Parameters:    Size  Location     Type
 22858 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 22859 ;;		 -> NULL(0), 
 22860 ;;  buf             2   21[COMRAM] PTR unsigned char 
 22861 ;;		 -> dbuf(32), 
 22862 ;;  p               2   23[COMRAM] int 
 22863 ;; Auto vars:     Size  Location     Type
 22864 ;;  w               2   28[COMRAM] int 
 22865 ;;  i               2   26[COMRAM] int 
 22866 ;; Return value:  Size  Location     Type
 22867 ;;                  2   19[COMRAM] int 
 22868 ;; Registers used:
 22869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22870 ;; Tracked objects:
 22871 ;;		On entry : 0/0
 22872 ;;		On exit  : 0/0
 22873 ;;		Unchanged: 0/0
 22874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22875 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22876 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22878 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22879 ;;Total ram usage:       11 bytes
 22880 ;; Hardware stack levels used:    1
 22881 ;; Hardware stack levels required when called:   11
 22882 ;; This function calls:
 22883 ;;		_fputc
 22884 ;;		_fputs
 22885 ;;		_strlen
 22886 ;; This function is called by:
 22887 ;;		_dtoa
 22888 ;;		_utoa
 22889 ;;		_xtoa
 22890 ;; This function uses a non-reentrant model
 22891 ;;
 22892                           
 22893                           	psect	text137
 22894  006536                     __ptext137:
 22895                           	opt callstack 0
 22896  006536                     _pad:
 22897                           	opt callstack 12
 22898                           
 22899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 22900                           
 22901                           ;incstack = 0
 22902  006536  0100               	movlb	0	; () banked
 22903  006538  A1E6               	btfss	_flags& (0+255),0,b
 22904  00653A  D00E               	goto	l13931
 22905                           
 22906                           ; BSR set to: 0
 22907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 22908  00653C  0060  F058  F00D   	movff	pad@buf,fputs@s
 22909  006542  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 22910  006548  0060  F050  F00F   	movff	pad@fp,fputs@fp
 22911  00654E  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 22912  006554  EC1D  F041         	call	_fputs	;wreg free
 22913  006558                     l13931:
 22914                           
 22915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 22916  006558  BE19               	btfsc	(pad@p+1)^0,7,c
 22917  00655A  D007               	goto	l13935
 22918  00655C  0060  F060  F01D   	movff	pad@p,pad@w
 22919  006562  0060  F064  F01E   	movff	pad@p+1,pad@w+1
 22920  006568  D004               	goto	l3057
 22921  00656A                     l13935:
 22922  00656A  0E00               	movlw	0
 22923  00656C  6E1E               	movwf	(pad@w+1)^0,c
 22924  00656E  0E00               	movlw	0
 22925  006570  6E1D               	movwf	pad@w^0,c
 22926  006572                     l3057:
 22927                           
 22928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 22929  006572  0E00               	movlw	0
 22930  006574  6E1C               	movwf	(pad@i+1)^0,c
 22931  006576  0E00               	movlw	0
 22932  006578  6E1B               	movwf	pad@i^0,c
 22933                           
 22934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 22935  00657A  D00E               	goto	l13941
 22936  00657C                     l13937:
 22937                           
 22938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 22939  00657C  0E00               	movlw	0
 22940  00657E  6E05               	movwf	(fputc@c+1)^0,c
 22941  006580  0E20               	movlw	32
 22942  006582  6E04               	movwf	fputc@c^0,c
 22943  006584  0060  F050  F006   	movff	pad@fp,fputc@fp
 22944  00658A  0060  F054  F007   	movff	pad@fp+1,fputc@fp+1
 22945  006590  EC2C  F03B         	call	_fputc	;wreg free
 22946                           
 22947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 22948  006594  4A1B               	infsnz	pad@i^0,f,c
 22949  006596  2A1C               	incf	(pad@i+1)^0,f,c
 22950  006598                     l13941:
 22951                           
 22952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 22953  006598  501D               	movf	pad@w^0,w,c
 22954  00659A  5C1B               	subwf	pad@i^0,w,c
 22955  00659C  501C               	movf	(pad@i+1)^0,w,c
 22956  00659E  0A80               	xorlw	128
 22957  0065A0  6E1A               	movwf	??_pad^0,c
 22958  0065A2  501E               	movf	(pad@w+1)^0,w,c
 22959  0065A4  0A80               	xorlw	128
 22960  0065A6  581A               	subwfb	??_pad^0,w,c
 22961  0065A8  A0D8               	btfss	status,0,c
 22962  0065AA  D7E8               	goto	l13937
 22963                           
 22964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 22965  0065AC  0100               	movlb	0	; () banked
 22966  0065AE  B1E6               	btfsc	_flags& (0+255),0,b
 22967  0065B0  D00E               	goto	l13945
 22968                           
 22969                           ; BSR set to: 0
 22970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 22971  0065B2  0060  F058  F00D   	movff	pad@buf,fputs@s
 22972  0065B8  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 22973  0065BE  0060  F050  F00F   	movff	pad@fp,fputs@fp
 22974  0065C4  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 22975  0065CA  EC1D  F041         	call	_fputs	;wreg free
 22976  0065CE                     l13945:
 22977                           
 22978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 22979  0065CE  0060  F058  F002   	movff	pad@buf,strlen@s
 22980  0065D4  0060  F05C  F003   	movff	pad@buf+1,strlen@s+1
 22981  0065DA  EC80  F03E         	call	_strlen	;wreg free
 22982  0065DE  501D               	movf	pad@w^0,w,c
 22983  0065E0  2402               	addwf	?_strlen^0,w,c
 22984  0065E2  6E14               	movwf	?_pad^0,c
 22985  0065E4  501E               	movf	(pad@w+1)^0,w,c
 22986  0065E6  2003               	addwfc	(?_strlen+1)^0,w,c
 22987  0065E8  6E15               	movwf	(?_pad+1)^0,c
 22988  0065EA  0012               	return		;funcret
 22989  0065EC                     __end_of_pad:
 22990                           	opt callstack 0
 22991                           
 22992 ;; *************** function _strlen *****************
 22993 ;; Defined at:
 22994 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 22995 ;; Parameters:    Size  Location     Type
 22996 ;;  s               2    1[COMRAM] PTR const unsigned char 
 22997 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_129(10), 
 22998 ;;		 -> STR_127(10), STR_125(6), STR_123(6), STR_121(7), 
 22999 ;;		 -> STR_119(5), STR_117(7), STR_115(7), STR_113(6), 
 23000 ;;		 -> STR_111(9), STR_109(8), STR_107(8), STR_105(7), 
 23001 ;;		 -> STR_103(6), STR_101(3), STR_99(9), STR_97(7), 
 23002 ;;		 -> STR_95(7), STR_93(10), STR_91(10), STR_89(15), 
 23003 ;;		 -> STR_87(13), STR_85(9), STR_83(7), STR_81(7), 
 23004 ;;		 -> STR_79(10), STR_77(7), STR_75(8), STR_73(11), 
 23005 ;;		 -> STR_71(5), STR_69(5), STR_67(7), STR_65(9), 
 23006 ;;		 -> STR_63(7), STR_57(2), STR_55(2), STR_54(2), 
 23007 ;;		 -> STR_51(6), STR_49(6), STR_47(5), STR_43(2), 
 23008 ;;		 -> STR_38(2), STR_34(2), STR_25(2), STR_22(2), 
 23009 ;;		 -> STR_16(2), STR_12(2), atCommand(80), NULL(0), 
 23010 ;;		 -> STR_7(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 23011 ;; Auto vars:     Size  Location     Type
 23012 ;;  a               2    3[COMRAM] PTR const unsigned char 
 23013 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_129(10), 
 23014 ;;		 -> STR_127(10), STR_125(6), STR_123(6), STR_121(7), 
 23015 ;;		 -> STR_119(5), STR_117(7), STR_115(7), STR_113(6), 
 23016 ;;		 -> STR_111(9), STR_109(8), STR_107(8), STR_105(7), 
 23017 ;;		 -> STR_103(6), STR_101(3), STR_99(9), STR_97(7), 
 23018 ;;		 -> STR_95(7), STR_93(10), STR_91(10), STR_89(15), 
 23019 ;;		 -> STR_87(13), STR_85(9), STR_83(7), STR_81(7), 
 23020 ;;		 -> STR_79(10), STR_77(7), STR_75(8), STR_73(11), 
 23021 ;;		 -> STR_71(5), STR_69(5), STR_67(7), STR_65(9), 
 23022 ;;		 -> STR_63(7), STR_57(2), STR_55(2), STR_54(2), 
 23023 ;;		 -> STR_51(6), STR_49(6), STR_47(5), STR_43(2), 
 23024 ;;		 -> STR_38(2), STR_34(2), STR_25(2), STR_22(2), 
 23025 ;;		 -> STR_16(2), STR_12(2), atCommand(80), NULL(0), 
 23026 ;;		 -> STR_7(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 23027 ;; Return value:  Size  Location     Type
 23028 ;;                  2    1[COMRAM] unsigned int 
 23029 ;; Registers used:
 23030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 23031 ;; Tracked objects:
 23032 ;;		On entry : 0/0
 23033 ;;		On exit  : 0/0
 23034 ;;		Unchanged: 0/0
 23035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23039 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23040 ;;Total ram usage:        4 bytes
 23041 ;; Hardware stack levels used:    1
 23042 ;; Hardware stack levels required when called:    7
 23043 ;; This function calls:
 23044 ;;		Nothing
 23045 ;; This function is called by:
 23046 ;;		_cmdSend
 23047 ;;		_cmdBcast
 23048 ;;		_cmdSetAES
 23049 ;;		_pad
 23050 ;;		_stoa
 23051 ;;		_strstr
 23052 ;; This function uses a non-reentrant model
 23053 ;;
 23054                           
 23055                           	psect	text138
 23056  007D00                     __ptext138:
 23057                           	opt callstack 0
 23058  007D00                     _strlen:
 23059                           	opt callstack 20
 23060                           
 23061                           ;incstack = 0
 23062  007D00  0060  F008  F004   	movff	strlen@s,strlen@a
 23063  007D06  0060  F00C  F005   	movff	strlen@s+1,strlen@a+1
 23064  007D0C  D002               	goto	l13909
 23065  007D0E                     l13907:
 23066  007D0E  4A02               	infsnz	strlen@s^0,f,c
 23067  007D10  2A03               	incf	(strlen@s+1)^0,f,c
 23068  007D12                     l13909:
 23069  007D12  0060  F00B  FFF6   	movff	strlen@s,tblptrl
 23070  007D18  0060  F00F  FFF7   	movff	strlen@s+1,tblptrh
 23071  007D1E  0E00               	movlw	low (__mediumconst shr (0+16))
 23072  007D20  6EF8               	movwf	tblptru,c
 23073  007D22  0E0F               	movlw	(high __ramtop+-1)
 23074  007D24  64F7               	cpfsgt	tblptrh,c
 23075  007D26  D003               	bra	u12867
 23076  007D28  0008               	tblrd		*
 23077  007D2A  50F5               	movf	tablat,w,c
 23078  007D2C  D007               	bra	u12860
 23079  007D2E                     u12867:
 23080  007D2E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23081  007D34  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23082  007D3A  50EF               	movf	indf0,w,c
 23083  007D3C                     u12860:
 23084  007D3C  0900               	iorlw	0
 23085  007D3E  A4D8               	btfss	status,2,c
 23086  007D40  D7E6               	goto	l13907
 23087  007D42  5004               	movf	strlen@a^0,w,c
 23088  007D44  5C02               	subwf	strlen@s^0,w,c
 23089  007D46  6E02               	movwf	?_strlen^0,c
 23090  007D48  5005               	movf	(strlen@a+1)^0,w,c
 23091  007D4A  5803               	subwfb	(strlen@s+1)^0,w,c
 23092  007D4C  6E03               	movwf	(?_strlen+1)^0,c
 23093  007D4E  0012               	return		;funcret
 23094  007D50                     __end_of_strlen:
 23095                           	opt callstack 0
 23096                           
 23097 ;; *************** function _fputs *****************
 23098 ;; Defined at:
 23099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 23100 ;; Parameters:    Size  Location     Type
 23101 ;;  s               2   12[COMRAM] PTR const unsigned char 
 23102 ;;		 -> dbuf(32), 
 23103 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 23104 ;;		 -> NULL(0), 
 23105 ;; Auto vars:     Size  Location     Type
 23106 ;;  i               2   17[COMRAM] int 
 23107 ;;  c               1   16[COMRAM] unsigned char 
 23108 ;; Return value:  Size  Location     Type
 23109 ;;                  2   12[COMRAM] int 
 23110 ;; Registers used:
 23111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23112 ;; Tracked objects:
 23113 ;;		On entry : 3F/0
 23114 ;;		On exit  : 0/0
 23115 ;;		Unchanged: 0/0
 23116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23120 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23121 ;;Total ram usage:        7 bytes
 23122 ;; Hardware stack levels used:    1
 23123 ;; Hardware stack levels required when called:   10
 23124 ;; This function calls:
 23125 ;;		_fputc
 23126 ;; This function is called by:
 23127 ;;		_pad
 23128 ;; This function uses a non-reentrant model
 23129 ;;
 23130                           
 23131                           	psect	text139
 23132  00823A                     __ptext139:
 23133                           	opt callstack 0
 23134  00823A                     _fputs:
 23135                           	opt callstack 12
 23136                           
 23137                           ; BSR set to: 0
 23138                           
 23139                           ;incstack = 0
 23140  00823A  0E00               	movlw	0
 23141  00823C  6E13               	movwf	(fputs@i+1)^0,c
 23142  00823E  0E00               	movlw	0
 23143  008240  6E12               	movwf	fputs@i^0,c
 23144  008242  D00E               	goto	l13921
 23145  008244                     l13917:
 23146  008244  0060  F044  F004   	movff	fputs@c,fputc@c
 23147  00824A  6A05               	clrf	(fputc@c+1)^0,c
 23148  00824C  0060  F03C  F006   	movff	fputs@fp,fputc@fp
 23149  008252  0060  F040  F007   	movff	fputs@fp+1,fputc@fp+1
 23150  008258  EC2C  F03B         	call	_fputc	;wreg free
 23151  00825C  4A12               	infsnz	fputs@i^0,f,c
 23152  00825E  2A13               	incf	(fputs@i+1)^0,f,c
 23153  008260                     l13921:
 23154  008260  5012               	movf	fputs@i^0,w,c
 23155  008262  240D               	addwf	fputs@s^0,w,c
 23156  008264  6ED9               	movwf	fsr2l,c
 23157  008266  5013               	movf	(fputs@i+1)^0,w,c
 23158  008268  200E               	addwfc	(fputs@s+1)^0,w,c
 23159  00826A  6EDA               	movwf	fsr2h,c
 23160  00826C  50DF               	movf	indf2,w,c
 23161  00826E  6E11               	movwf	fputs@c^0,c
 23162  008270  5011               	movf	fputs@c^0,w,c
 23163  008272  B4D8               	btfsc	status,2,c
 23164  008274  0012               	return	
 23165  008276  D7E6               	goto	l13917
 23166  008278                     __end_of_fputs:
 23167                           	opt callstack 0
 23168                           
 23169 ;; *************** function _fputc *****************
 23170 ;; Defined at:
 23171 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 23172 ;; Parameters:    Size  Location     Type
 23173 ;;  c               2    3[COMRAM] int 
 23174 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 23175 ;;		 -> NULL(0), 
 23176 ;; Auto vars:     Size  Location     Type
 23177 ;;		None
 23178 ;; Return value:  Size  Location     Type
 23179 ;;                  2    3[COMRAM] int 
 23180 ;; Registers used:
 23181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23182 ;; Tracked objects:
 23183 ;;		On entry : 0/0
 23184 ;;		On exit  : 0/0
 23185 ;;		Unchanged: 0/0
 23186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23189 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23190 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23191 ;;Total ram usage:        9 bytes
 23192 ;; Hardware stack levels used:    1
 23193 ;; Hardware stack levels required when called:    9
 23194 ;; This function calls:
 23195 ;;		_putch
 23196 ;; This function is called by:
 23197 ;;		_pad
 23198 ;;		_stoa
 23199 ;;		_vfpfcnvrt
 23200 ;;		_fputs
 23201 ;; This function uses a non-reentrant model
 23202 ;;
 23203                           
 23204                           	psect	text140
 23205  007658                     __ptext140:
 23206                           	opt callstack 0
 23207  007658                     _fputc:
 23208                           	opt callstack 12
 23209                           
 23210                           ;incstack = 0
 23211  007658  5006               	movf	fputc@fp^0,w,c
 23212  00765A  1007               	iorwf	(fputc@fp+1)^0,w,c
 23213  00765C  B4D8               	btfsc	status,2,c
 23214  00765E  D004               	goto	u12830
 23215  007660  5006               	movf	fputc@fp^0,w,c
 23216  007662  1007               	iorwf	(fputc@fp+1)^0,w,c
 23217  007664  A4D8               	btfss	status,2,c
 23218  007666  D004               	goto	l13897
 23219  007668                     u12830:
 23220  007668  5004               	movf	fputc@c^0,w,c
 23221  00766A  EC10  F047         	call	_putch
 23222  00766E  0012               	return	
 23223  007670                     l13897:
 23224  007670  EE20 F004          	lfsr	2,4
 23225  007674  5006               	movf	fputc@fp^0,w,c
 23226  007676  26D9               	addwf	fsr2l,f,c
 23227  007678  5007               	movf	(fputc@fp+1)^0,w,c
 23228  00767A  22DA               	addwfc	fsr2h,f,c
 23229  00767C  50DE               	movf	postinc2,w,c
 23230  00767E  10DE               	iorwf	postinc2,w,c
 23231  007680  B4D8               	btfsc	status,2,c
 23232  007682  D016               	goto	u12850
 23233  007684  EE20 F004          	lfsr	2,4
 23234  007688  5006               	movf	fputc@fp^0,w,c
 23235  00768A  26D9               	addwf	fsr2l,f,c
 23236  00768C  5007               	movf	(fputc@fp+1)^0,w,c
 23237  00768E  22DA               	addwfc	fsr2h,f,c
 23238  007690  EE10 F002          	lfsr	1,2
 23239  007694  5006               	movf	fputc@fp^0,w,c
 23240  007696  26E1               	addwf	fsr1l,f,c
 23241  007698  5007               	movf	(fputc@fp+1)^0,w,c
 23242  00769A  22E2               	addwfc	fsr1h,f,c
 23243  00769C  50DE               	movf	postinc2,w,c
 23244  00769E  5CE6               	subwf	postinc1,w,c
 23245  0076A0  50E6               	movf	postinc1,w,c
 23246  0076A2  0A80               	xorlw	128
 23247  0076A4  6E0C               	movwf	(??_fputc+4)^0,c
 23248  0076A6  50DE               	movf	postinc2,w,c
 23249  0076A8  0A80               	xorlw	128
 23250  0076AA  580C               	subwfb	(??_fputc+4)^0,w,c
 23251  0076AC  B0D8               	btfsc	status,0,c
 23252  0076AE  0012               	return	
 23253  0076B0                     u12850:
 23254  0076B0  EE20 F002          	lfsr	2,2
 23255  0076B4  5006               	movf	fputc@fp^0,w,c
 23256  0076B6  26D9               	addwf	fsr2l,f,c
 23257  0076B8  5007               	movf	(fputc@fp+1)^0,w,c
 23258  0076BA  22DA               	addwfc	fsr2h,f,c
 23259  0076BC  2ADE               	incf	postinc2,f,c
 23260  0076BE  0E00               	movlw	0
 23261  0076C0  22DD               	addwfc	postdec2,f,c
 23262  0076C2  0012               	return		;funcret
 23263  0076C4                     __end_of_fputc:
 23264                           	opt callstack 0
 23265                           
 23266 ;; *************** function _putch *****************
 23267 ;; Defined at:
 23268 ;;		line 242 in file "mcc_generated_files/uart1.c"
 23269 ;; Parameters:    Size  Location     Type
 23270 ;;  txData          1    wreg     unsigned char 
 23271 ;; Auto vars:     Size  Location     Type
 23272 ;;  txData          1    2[COMRAM] unsigned char 
 23273 ;; Return value:  Size  Location     Type
 23274 ;;                  1    wreg      void 
 23275 ;; Registers used:
 23276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23277 ;; Tracked objects:
 23278 ;;		On entry : 0/0
 23279 ;;		On exit  : 3F/39
 23280 ;;		Unchanged: 0/0
 23281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23286 ;;Total ram usage:        1 bytes
 23287 ;; Hardware stack levels used:    1
 23288 ;; Hardware stack levels required when called:    8
 23289 ;; This function calls:
 23290 ;;		_UART1_Write
 23291 ;; This function is called by:
 23292 ;;		_fputc
 23293 ;; This function uses a non-reentrant model
 23294 ;;
 23295                           
 23296                           	psect	text141
 23297  008E20                     __ptext141:
 23298                           	opt callstack 0
 23299  008E20                     _putch:
 23300                           	opt callstack 12
 23301                           
 23302                           ;incstack = 0
 23303                           ;putch@txData stored from wreg
 23304  008E20  6E03               	movwf	putch@txData^0,c
 23305                           
 23306                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 23307  008E22  5003               	movf	putch@txData^0,w,c
 23308  008E24  EC1A  F040         	call	_UART1_Write
 23309                           
 23310                           ; BSR set to: 57
 23311  008E28  0012               	return		;funcret
 23312  008E2A                     __end_of_putch:
 23313                           	opt callstack 0
 23314                           
 23315 ;; *************** function _UART1_Write *****************
 23316 ;; Defined at:
 23317 ;;		line 210 in file "mcc_generated_files/uart1.c"
 23318 ;; Parameters:    Size  Location     Type
 23319 ;;  txData          1    wreg     unsigned char 
 23320 ;; Auto vars:     Size  Location     Type
 23321 ;;  txData          1    1[COMRAM] unsigned char 
 23322 ;; Return value:  Size  Location     Type
 23323 ;;                  1    wreg      void 
 23324 ;; Registers used:
 23325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23326 ;; Tracked objects:
 23327 ;;		On entry : 0/0
 23328 ;;		On exit  : 3F/39
 23329 ;;		Unchanged: 0/0
 23330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23334 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23335 ;;Total ram usage:        1 bytes
 23336 ;; Hardware stack levels used:    1
 23337 ;; Hardware stack levels required when called:    7
 23338 ;; This function calls:
 23339 ;;		Nothing
 23340 ;; This function is called by:
 23341 ;;		_putch
 23342 ;; This function uses a non-reentrant model
 23343 ;;
 23344                           
 23345                           	psect	text142
 23346  008034                     __ptext142:
 23347                           	opt callstack 0
 23348  008034                     _UART1_Write:
 23349                           	opt callstack 12
 23350                           
 23351                           ; BSR set to: 57
 23352                           ;incstack = 0
 23353                           ;UART1_Write@txData stored from wreg
 23354  008034  6E02               	movwf	UART1_Write@txData^0,c
 23355  008036                     
 23356                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 23357                           
 23358                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 23359  008036  0101               	movlb	1	; () banked
 23360  008038  51FD               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 23361  00803A  B4D8               	btfsc	status,2,c
 23362  00803C  D7FC               	goto	l13871
 23363                           
 23364                           ; BSR set to: 1
 23365                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 23366  00803E  0139               	movlb	57	; () banked
 23367  008040  B993               	btfsc	147,4,b	;volatile
 23368  008042  D004               	goto	l1399
 23369                           
 23370                           ; BSR set to: 57
 23371                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 23372  008044  0060  F00B  FDEA   	movff	UART1_Write@txData,15850	;volatile
 23373                           
 23374                           ;mcc_generated_files/uart1.c: 223:     }
 23375  00804A  D013               	goto	l13887
 23376  00804C                     l1399:
 23377                           
 23378                           ; BSR set to: 57
 23379                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 23380  00804C  9993               	bcf	147,4,b	;volatile
 23381                           
 23382                           ; BSR set to: 57
 23383                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 23384  00804E  0E00               	movlw	low _uart1TxBuffer
 23385  008050  0100               	movlb	0	; () banked
 23386  008052  25EF               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 23387  008054  6ED9               	movwf	fsr2l,c
 23388  008056  6ADA               	clrf	fsr2h,c
 23389  008058  0E03               	movlw	high _uart1TxBuffer
 23390  00805A  22DA               	addwfc	fsr2h,f,c
 23391  00805C  0060  F00B  FFDF   	movff	UART1_Write@txData,indf2
 23392                           
 23393                           ; BSR set to: 0
 23394  008062  2BEF               	incf	_uart1TxHead& (0+255),f,b	;volatile
 23395                           
 23396                           ; BSR set to: 0
 23397                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 23398  008064  0E3F               	movlw	63
 23399  008066  65EF               	cpfsgt	_uart1TxHead& (0+255),b
 23400  008068  D002               	goto	l13885
 23401                           
 23402                           ; BSR set to: 0
 23403                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 23404  00806A  0E00               	movlw	0
 23405  00806C  6FEF               	movwf	_uart1TxHead& (0+255),b	;volatile
 23406  00806E                     l13885:
 23407                           
 23408                           ; BSR set to: 0
 23409                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 23410  00806E  0101               	movlb	1	; () banked
 23411  008070  07FD               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 23412  008072                     l13887:
 23413                           
 23414                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 23415  008072  0139               	movlb	57	; () banked
 23416  008074  8993               	bsf	147,4,b	;volatile
 23417                           
 23418                           ; BSR set to: 57
 23419  008076  0012               	return		;funcret
 23420  008078                     __end_of_UART1_Write:
 23421                           	opt callstack 0
 23422                           
 23423 ;; *************** function _abs *****************
 23424 ;; Defined at:
 23425 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 23426 ;; Parameters:    Size  Location     Type
 23427 ;;  a               2   19[COMRAM] int 
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;		None
 23430 ;; Return value:  Size  Location     Type
 23431 ;;                  2   19[COMRAM] int 
 23432 ;; Registers used:
 23433 ;;		wreg, status,2, status,0
 23434 ;; Tracked objects:
 23435 ;;		On entry : 0/2
 23436 ;;		On exit  : 0/0
 23437 ;;		Unchanged: 0/0
 23438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23443 ;;Total ram usage:        4 bytes
 23444 ;; Hardware stack levels used:    1
 23445 ;; Hardware stack levels required when called:    7
 23446 ;; This function calls:
 23447 ;;		Nothing
 23448 ;; This function is called by:
 23449 ;;		_dtoa
 23450 ;; This function uses a non-reentrant model
 23451 ;;
 23452                           
 23453                           	psect	text143
 23454  008278                     __ptext143:
 23455                           	opt callstack 0
 23456  008278                     _abs:
 23457                           	opt callstack 16
 23458                           
 23459                           ; BSR set to: 57
 23460                           ;incstack = 0
 23461  008278  BE15               	btfsc	(abs@a+1)^0,7,c
 23462  00827A  D005               	goto	u12950
 23463  00827C  5015               	movf	(abs@a+1)^0,w,c
 23464  00827E  E114               	bnz	l3875
 23465  008280  0414               	decf	abs@a^0,w,c
 23466  008282  B0D8               	btfsc	status,0,c
 23467  008284  D011               	goto	l3875
 23468  008286                     u12950:
 23469  008286  0060  F050  F016   	movff	abs@a,??_abs
 23470  00828C  0060  F054  F017   	movff	abs@a+1,??_abs+1
 23471  008292  1E16               	comf	??_abs^0,f,c
 23472  008294  1E17               	comf	(??_abs+1)^0,f,c
 23473  008296  4A16               	infsnz	??_abs^0,f,c
 23474  008298  2A17               	incf	(??_abs+1)^0,f,c
 23475  00829A  0060  F058  F014   	movff	??_abs,?_abs
 23476  0082A0  0060  F05C  F015   	movff	??_abs+1,?_abs+1
 23477  0082A6  0012               	return	
 23478  0082A8                     l3875:
 23479  0082A8  0060  F050  F014   	movff	abs@a,?_abs
 23480  0082AE  0060  F054  F015   	movff	abs@a+1,?_abs+1
 23481  0082B4  0012               	return		;funcret
 23482  0082B6                     __end_of_abs:
 23483                           	opt callstack 0
 23484                           
 23485 ;; *************** function ___aomod *****************
 23486 ;; Defined at:
 23487 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 23488 ;; Parameters:    Size  Location     Type
 23489 ;;  dividend        8    1[COMRAM] long long 
 23490 ;;  divisor         8    9[COMRAM] long long 
 23491 ;; Auto vars:     Size  Location     Type
 23492 ;;  sign            1   18[COMRAM] unsigned char 
 23493 ;;  counter         1   17[COMRAM] unsigned char 
 23494 ;; Return value:  Size  Location     Type
 23495 ;;                  8    1[COMRAM] long long 
 23496 ;; Registers used:
 23497 ;;		wreg, status,2, status,0
 23498 ;; Tracked objects:
 23499 ;;		On entry : 0/2
 23500 ;;		On exit  : 0/0
 23501 ;;		Unchanged: 0/0
 23502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23503 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23506 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23507 ;;Total ram usage:       18 bytes
 23508 ;; Hardware stack levels used:    1
 23509 ;; Hardware stack levels required when called:    7
 23510 ;; This function calls:
 23511 ;;		Nothing
 23512 ;; This function is called by:
 23513 ;;		_dtoa
 23514 ;; This function uses a non-reentrant model
 23515 ;;
 23516                           
 23517                           	psect	text144
 23518  004846                     __ptext144:
 23519                           	opt callstack 0
 23520  004846                     ___aomod:
 23521                           	opt callstack 16
 23522                           
 23523                           ;incstack = 0
 23524  004846  0E00               	movlw	0
 23525  004848  6E13               	movwf	___aomod@sign^0,c
 23526  00484A  AE09               	btfss	(___aomod@dividend+7)^0,7,c
 23527  00484C  D012               	goto	l14033
 23528  00484E  1E09               	comf	(___aomod@dividend+7)^0,f,c
 23529  004850  1E08               	comf	(___aomod@dividend+6)^0,f,c
 23530  004852  1E07               	comf	(___aomod@dividend+5)^0,f,c
 23531  004854  1E06               	comf	(___aomod@dividend+4)^0,f,c
 23532  004856  1E05               	comf	(___aomod@dividend+3)^0,f,c
 23533  004858  1E04               	comf	(___aomod@dividend+2)^0,f,c
 23534  00485A  1E03               	comf	(___aomod@dividend+1)^0,f,c
 23535  00485C  6C02               	negf	___aomod@dividend^0,c
 23536  00485E  0E00               	movlw	0
 23537  004860  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 23538  004862  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 23539  004864  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 23540  004866  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 23541  004868  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 23542  00486A  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 23543  00486C  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 23544  00486E  0E01               	movlw	1
 23545  004870  6E13               	movwf	___aomod@sign^0,c
 23546  004872                     l14033:
 23547  004872  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 23548  004874  D010               	goto	l14037
 23549  004876  1E11               	comf	(___aomod@divisor+7)^0,f,c
 23550  004878  1E10               	comf	(___aomod@divisor+6)^0,f,c
 23551  00487A  1E0F               	comf	(___aomod@divisor+5)^0,f,c
 23552  00487C  1E0E               	comf	(___aomod@divisor+4)^0,f,c
 23553  00487E  1E0D               	comf	(___aomod@divisor+3)^0,f,c
 23554  004880  1E0C               	comf	(___aomod@divisor+2)^0,f,c
 23555  004882  1E0B               	comf	(___aomod@divisor+1)^0,f,c
 23556  004884  6C0A               	negf	___aomod@divisor^0,c
 23557  004886  0E00               	movlw	0
 23558  004888  220B               	addwfc	(___aomod@divisor+1)^0,f,c
 23559  00488A  220C               	addwfc	(___aomod@divisor+2)^0,f,c
 23560  00488C  220D               	addwfc	(___aomod@divisor+3)^0,f,c
 23561  00488E  220E               	addwfc	(___aomod@divisor+4)^0,f,c
 23562  004890  220F               	addwfc	(___aomod@divisor+5)^0,f,c
 23563  004892  2210               	addwfc	(___aomod@divisor+6)^0,f,c
 23564  004894  2211               	addwfc	(___aomod@divisor+7)^0,f,c
 23565  004896                     l14037:
 23566  004896  500A               	movf	___aomod@divisor^0,w,c
 23567  004898  100B               	iorwf	(___aomod@divisor+1)^0,w,c
 23568  00489A  100C               	iorwf	(___aomod@divisor+2)^0,w,c
 23569  00489C  100D               	iorwf	(___aomod@divisor+3)^0,w,c
 23570  00489E  100E               	iorwf	(___aomod@divisor+4)^0,w,c
 23571  0048A0  100F               	iorwf	(___aomod@divisor+5)^0,w,c
 23572  0048A2  1010               	iorwf	(___aomod@divisor+6)^0,w,c
 23573  0048A4  1011               	iorwf	(___aomod@divisor+7)^0,w,c
 23574  0048A6  B4D8               	btfsc	status,2,c
 23575  0048A8  D03C               	goto	l14053
 23576  0048AA  0E01               	movlw	1
 23577  0048AC  6E12               	movwf	___aomod@counter^0,c
 23578  0048AE  D00A               	goto	l14043
 23579  0048B0                     l14041:
 23580  0048B0  90D8               	bcf	status,0,c
 23581  0048B2  360A               	rlcf	___aomod@divisor^0,f,c
 23582  0048B4  360B               	rlcf	(___aomod@divisor+1)^0,f,c
 23583  0048B6  360C               	rlcf	(___aomod@divisor+2)^0,f,c
 23584  0048B8  360D               	rlcf	(___aomod@divisor+3)^0,f,c
 23585  0048BA  360E               	rlcf	(___aomod@divisor+4)^0,f,c
 23586  0048BC  360F               	rlcf	(___aomod@divisor+5)^0,f,c
 23587  0048BE  3610               	rlcf	(___aomod@divisor+6)^0,f,c
 23588  0048C0  3611               	rlcf	(___aomod@divisor+7)^0,f,c
 23589  0048C2  2A12               	incf	___aomod@counter^0,f,c
 23590  0048C4                     l14043:
 23591  0048C4  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 23592  0048C6  D7F4               	goto	l14041
 23593  0048C8                     u13150:
 23594  0048C8  500A               	movf	___aomod@divisor^0,w,c
 23595  0048CA  5C02               	subwf	___aomod@dividend^0,w,c
 23596  0048CC  500B               	movf	(___aomod@divisor+1)^0,w,c
 23597  0048CE  5803               	subwfb	(___aomod@dividend+1)^0,w,c
 23598  0048D0  500C               	movf	(___aomod@divisor+2)^0,w,c
 23599  0048D2  5804               	subwfb	(___aomod@dividend+2)^0,w,c
 23600  0048D4  500D               	movf	(___aomod@divisor+3)^0,w,c
 23601  0048D6  5805               	subwfb	(___aomod@dividend+3)^0,w,c
 23602  0048D8  500E               	movf	(___aomod@divisor+4)^0,w,c
 23603  0048DA  5806               	subwfb	(___aomod@dividend+4)^0,w,c
 23604  0048DC  500F               	movf	(___aomod@divisor+5)^0,w,c
 23605  0048DE  5807               	subwfb	(___aomod@dividend+5)^0,w,c
 23606  0048E0  5010               	movf	(___aomod@divisor+6)^0,w,c
 23607  0048E2  5808               	subwfb	(___aomod@dividend+6)^0,w,c
 23608  0048E4  5011               	movf	(___aomod@divisor+7)^0,w,c
 23609  0048E6  5809               	subwfb	(___aomod@dividend+7)^0,w,c
 23610  0048E8  A0D8               	btfss	status,0,c
 23611  0048EA  D010               	goto	l14049
 23612  0048EC  500A               	movf	___aomod@divisor^0,w,c
 23613  0048EE  5E02               	subwf	___aomod@dividend^0,f,c
 23614  0048F0  500B               	movf	(___aomod@divisor+1)^0,w,c
 23615  0048F2  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
 23616  0048F4  500C               	movf	(___aomod@divisor+2)^0,w,c
 23617  0048F6  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
 23618  0048F8  500D               	movf	(___aomod@divisor+3)^0,w,c
 23619  0048FA  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
 23620  0048FC  500E               	movf	(___aomod@divisor+4)^0,w,c
 23621  0048FE  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
 23622  004900  500F               	movf	(___aomod@divisor+5)^0,w,c
 23623  004902  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
 23624  004904  5010               	movf	(___aomod@divisor+6)^0,w,c
 23625  004906  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
 23626  004908  5011               	movf	(___aomod@divisor+7)^0,w,c
 23627  00490A  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
 23628  00490C                     l14049:
 23629  00490C  90D8               	bcf	status,0,c
 23630  00490E  3211               	rrcf	(___aomod@divisor+7)^0,f,c
 23631  004910  3210               	rrcf	(___aomod@divisor+6)^0,f,c
 23632  004912  320F               	rrcf	(___aomod@divisor+5)^0,f,c
 23633  004914  320E               	rrcf	(___aomod@divisor+4)^0,f,c
 23634  004916  320D               	rrcf	(___aomod@divisor+3)^0,f,c
 23635  004918  320C               	rrcf	(___aomod@divisor+2)^0,f,c
 23636  00491A  320B               	rrcf	(___aomod@divisor+1)^0,f,c
 23637  00491C  320A               	rrcf	___aomod@divisor^0,f,c
 23638  00491E  2E12               	decfsz	___aomod@counter^0,f,c
 23639  004920  D7D3               	goto	u13150
 23640  004922                     l14053:
 23641  004922  5013               	movf	___aomod@sign^0,w,c
 23642  004924  B4D8               	btfsc	status,2,c
 23643  004926  D010               	goto	l14057
 23644  004928  1E09               	comf	(___aomod@dividend+7)^0,f,c
 23645  00492A  1E08               	comf	(___aomod@dividend+6)^0,f,c
 23646  00492C  1E07               	comf	(___aomod@dividend+5)^0,f,c
 23647  00492E  1E06               	comf	(___aomod@dividend+4)^0,f,c
 23648  004930  1E05               	comf	(___aomod@dividend+3)^0,f,c
 23649  004932  1E04               	comf	(___aomod@dividend+2)^0,f,c
 23650  004934  1E03               	comf	(___aomod@dividend+1)^0,f,c
 23651  004936  6C02               	negf	___aomod@dividend^0,c
 23652  004938  0E00               	movlw	0
 23653  00493A  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 23654  00493C  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 23655  00493E  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 23656  004940  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 23657  004942  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 23658  004944  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 23659  004946  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 23660  004948                     l14057:
 23661  004948  0060  F008  F002   	movff	___aomod@dividend,?___aomod
 23662  00494E  0060  F00C  F003   	movff	___aomod@dividend+1,?___aomod+1
 23663  004954  0060  F010  F004   	movff	___aomod@dividend+2,?___aomod+2
 23664  00495A  0060  F014  F005   	movff	___aomod@dividend+3,?___aomod+3
 23665  004960  0060  F018  F006   	movff	___aomod@dividend+4,?___aomod+4
 23666  004966  0060  F01C  F007   	movff	___aomod@dividend+5,?___aomod+5
 23667  00496C  0060  F020  F008   	movff	___aomod@dividend+6,?___aomod+6
 23668  004972  0060  F024  F009   	movff	___aomod@dividend+7,?___aomod+7
 23669  004978  0012               	return		;funcret
 23670  00497A                     __end_of___aomod:
 23671                           	opt callstack 0
 23672                           
 23673 ;; *************** function ___aodiv *****************
 23674 ;; Defined at:
 23675 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 23676 ;; Parameters:    Size  Location     Type
 23677 ;;  dividend        8    1[COMRAM] long long 
 23678 ;;  divisor         8    9[COMRAM] long long 
 23679 ;; Auto vars:     Size  Location     Type
 23680 ;;  quotient        8   19[COMRAM] long long 
 23681 ;;  sign            1   18[COMRAM] unsigned char 
 23682 ;;  counter         1   17[COMRAM] unsigned char 
 23683 ;; Return value:  Size  Location     Type
 23684 ;;                  8    1[COMRAM] long long 
 23685 ;; Registers used:
 23686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23687 ;; Tracked objects:
 23688 ;;		On entry : 0/2
 23689 ;;		On exit  : 0/0
 23690 ;;		Unchanged: 0/0
 23691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23692 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23693 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23695 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23696 ;;Total ram usage:       26 bytes
 23697 ;; Hardware stack levels used:    1
 23698 ;; Hardware stack levels required when called:    7
 23699 ;; This function calls:
 23700 ;;		Nothing
 23701 ;; This function is called by:
 23702 ;;		_dtoa
 23703 ;; This function uses a non-reentrant model
 23704 ;;
 23705                           
 23706                           	psect	text145
 23707  004310                     __ptext145:
 23708                           	opt callstack 0
 23709  004310                     ___aodiv:
 23710                           	opt callstack 16
 23711                           
 23712                           ;incstack = 0
 23713  004310  0E00               	movlw	0
 23714  004312  6E13               	movwf	___aodiv@sign^0,c
 23715  004314  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 23716  004316  D012               	goto	l13989
 23717  004318  1E11               	comf	(___aodiv@divisor+7)^0,f,c
 23718  00431A  1E10               	comf	(___aodiv@divisor+6)^0,f,c
 23719  00431C  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
 23720  00431E  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
 23721  004320  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
 23722  004322  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
 23723  004324  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
 23724  004326  6C0A               	negf	___aodiv@divisor^0,c
 23725  004328  0E00               	movlw	0
 23726  00432A  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
 23727  00432C  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
 23728  00432E  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
 23729  004330  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
 23730  004332  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
 23731  004334  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
 23732  004336  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
 23733  004338  0E01               	movlw	1
 23734  00433A  6E13               	movwf	___aodiv@sign^0,c
 23735  00433C                     l13989:
 23736  00433C  AE09               	btfss	(___aodiv@dividend+7)^0,7,c
 23737  00433E  D012               	goto	l13995
 23738  004340  1E09               	comf	(___aodiv@dividend+7)^0,f,c
 23739  004342  1E08               	comf	(___aodiv@dividend+6)^0,f,c
 23740  004344  1E07               	comf	(___aodiv@dividend+5)^0,f,c
 23741  004346  1E06               	comf	(___aodiv@dividend+4)^0,f,c
 23742  004348  1E05               	comf	(___aodiv@dividend+3)^0,f,c
 23743  00434A  1E04               	comf	(___aodiv@dividend+2)^0,f,c
 23744  00434C  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 23745  00434E  6C02               	negf	___aodiv@dividend^0,c
 23746  004350  0E00               	movlw	0
 23747  004352  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 23748  004354  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 23749  004356  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 23750  004358  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 23751  00435A  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 23752  00435C  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 23753  00435E  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 23754  004360  0E01               	movlw	1
 23755  004362  1A13               	xorwf	___aodiv@sign^0,f,c
 23756  004364                     l13995:
 23757  004364  EE20  F014         	lfsr	2,___aodiv@quotient
 23758  004368  0E07               	movlw	7
 23759  00436A                     u13071:
 23760  00436A  6ADE               	clrf	postinc2,c
 23761  00436C  06E8               	decf	wreg,f,c
 23762  00436E  E2FD               	bc	u13071
 23763  004370  500A               	movf	___aodiv@divisor^0,w,c
 23764  004372  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 23765  004374  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 23766  004376  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 23767  004378  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 23768  00437A  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 23769  00437C  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 23770  00437E  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 23771  004380  B4D8               	btfsc	status,2,c
 23772  004382  D046               	goto	l14017
 23773  004384  0E01               	movlw	1
 23774  004386  6E12               	movwf	___aodiv@counter^0,c
 23775  004388  D00A               	goto	l14003
 23776  00438A                     l14001:
 23777  00438A  90D8               	bcf	status,0,c
 23778  00438C  360A               	rlcf	___aodiv@divisor^0,f,c
 23779  00438E  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 23780  004390  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 23781  004392  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 23782  004394  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 23783  004396  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 23784  004398  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 23785  00439A  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 23786  00439C  2A12               	incf	___aodiv@counter^0,f,c
 23787  00439E                     l14003:
 23788  00439E  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 23789  0043A0  D7F4               	goto	l14001
 23790  0043A2                     u13090:
 23791  0043A2  90D8               	bcf	status,0,c
 23792  0043A4  3614               	rlcf	___aodiv@quotient^0,f,c
 23793  0043A6  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 23794  0043A8  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 23795  0043AA  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 23796  0043AC  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 23797  0043AE  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 23798  0043B0  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 23799  0043B2  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 23800  0043B4  500A               	movf	___aodiv@divisor^0,w,c
 23801  0043B6  5C02               	subwf	___aodiv@dividend^0,w,c
 23802  0043B8  500B               	movf	(___aodiv@divisor+1)^0,w,c
 23803  0043BA  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 23804  0043BC  500C               	movf	(___aodiv@divisor+2)^0,w,c
 23805  0043BE  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 23806  0043C0  500D               	movf	(___aodiv@divisor+3)^0,w,c
 23807  0043C2  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 23808  0043C4  500E               	movf	(___aodiv@divisor+4)^0,w,c
 23809  0043C6  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 23810  0043C8  500F               	movf	(___aodiv@divisor+5)^0,w,c
 23811  0043CA  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 23812  0043CC  5010               	movf	(___aodiv@divisor+6)^0,w,c
 23813  0043CE  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 23814  0043D0  5011               	movf	(___aodiv@divisor+7)^0,w,c
 23815  0043D2  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 23816  0043D4  A0D8               	btfss	status,0,c
 23817  0043D6  D011               	goto	l14013
 23818  0043D8  500A               	movf	___aodiv@divisor^0,w,c
 23819  0043DA  5E02               	subwf	___aodiv@dividend^0,f,c
 23820  0043DC  500B               	movf	(___aodiv@divisor+1)^0,w,c
 23821  0043DE  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 23822  0043E0  500C               	movf	(___aodiv@divisor+2)^0,w,c
 23823  0043E2  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 23824  0043E4  500D               	movf	(___aodiv@divisor+3)^0,w,c
 23825  0043E6  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 23826  0043E8  500E               	movf	(___aodiv@divisor+4)^0,w,c
 23827  0043EA  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 23828  0043EC  500F               	movf	(___aodiv@divisor+5)^0,w,c
 23829  0043EE  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 23830  0043F0  5010               	movf	(___aodiv@divisor+6)^0,w,c
 23831  0043F2  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 23832  0043F4  5011               	movf	(___aodiv@divisor+7)^0,w,c
 23833  0043F6  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 23834  0043F8  8014               	bsf	___aodiv@quotient^0,0,c
 23835  0043FA                     l14013:
 23836  0043FA  90D8               	bcf	status,0,c
 23837  0043FC  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 23838  0043FE  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 23839  004400  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 23840  004402  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 23841  004404  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 23842  004406  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 23843  004408  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 23844  00440A  320A               	rrcf	___aodiv@divisor^0,f,c
 23845  00440C  2E12               	decfsz	___aodiv@counter^0,f,c
 23846  00440E  D7C9               	goto	u13090
 23847  004410                     l14017:
 23848  004410  5013               	movf	___aodiv@sign^0,w,c
 23849  004412  B4D8               	btfsc	status,2,c
 23850  004414  D010               	goto	l14021
 23851  004416  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 23852  004418  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 23853  00441A  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 23854  00441C  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 23855  00441E  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 23856  004420  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 23857  004422  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 23858  004424  6C14               	negf	___aodiv@quotient^0,c
 23859  004426  0E00               	movlw	0
 23860  004428  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 23861  00442A  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 23862  00442C  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 23863  00442E  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 23864  004430  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 23865  004432  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 23866  004434  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 23867  004436                     l14021:
 23868  004436  0060  F050  F002   	movff	___aodiv@quotient,?___aodiv
 23869  00443C  0060  F054  F003   	movff	___aodiv@quotient+1,?___aodiv+1
 23870  004442  0060  F058  F004   	movff	___aodiv@quotient+2,?___aodiv+2
 23871  004448  0060  F05C  F005   	movff	___aodiv@quotient+3,?___aodiv+3
 23872  00444E  0060  F060  F006   	movff	___aodiv@quotient+4,?___aodiv+4
 23873  004454  0060  F064  F007   	movff	___aodiv@quotient+5,?___aodiv+5
 23874  00445A  0060  F068  F008   	movff	___aodiv@quotient+6,?___aodiv+6
 23875  004460  0060  F06C  F009   	movff	___aodiv@quotient+7,?___aodiv+7
 23876  004466  0012               	return		;funcret
 23877  004468                     __end_of___aodiv:
 23878                           	opt callstack 0
 23879                           
 23880 ;; *************** function _atoi *****************
 23881 ;; Defined at:
 23882 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 23883 ;; Parameters:    Size  Location     Type
 23884 ;;  s               2    8[COMRAM] PTR const unsigned char 
 23885 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 23886 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(34), 
 23887 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 23888 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 23889 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 23890 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 23891 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 23892 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 23893 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 23894 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 23895 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 23896 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 23897 ;; Auto vars:     Size  Location     Type
 23898 ;;  n               2   21[COMRAM] int 
 23899 ;;  neg             2   14[COMRAM] int 
 23900 ;; Return value:  Size  Location     Type
 23901 ;;                  2    8[COMRAM] int 
 23902 ;; Registers used:
 23903 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23904 ;; Tracked objects:
 23905 ;;		On entry : 3F/0
 23906 ;;		On exit  : 0/0
 23907 ;;		Unchanged: 0/0
 23908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23910 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23912 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23913 ;;Total ram usage:       15 bytes
 23914 ;; Hardware stack levels used:    1
 23915 ;; Hardware stack levels required when called:    8
 23916 ;; This function calls:
 23917 ;;		___wmul
 23918 ;;		_isdigit
 23919 ;;		_isspace
 23920 ;; This function is called by:
 23921 ;;		_vfpfcnvrt
 23922 ;; This function uses a non-reentrant model
 23923 ;;
 23924                           
 23925                           	psect	text146
 23926  003EDE                     __ptext146:
 23927                           	opt callstack 0
 23928  003EDE                     _atoi:
 23929                           	opt callstack 16
 23930                           
 23931                           ; BSR set to: 0
 23932                           
 23933                           ;incstack = 0
 23934  003EDE  0E00               	movlw	0
 23935  003EE0  6E17               	movwf	(atoi@n+1)^0,c
 23936  003EE2  0E00               	movlw	0
 23937  003EE4  6E16               	movwf	atoi@n^0,c
 23938  003EE6  0E00               	movlw	0
 23939  003EE8  6E10               	movwf	(atoi@neg+1)^0,c
 23940  003EEA  0E00               	movlw	0
 23941  003EEC  6E0F               	movwf	atoi@neg^0,c
 23942  003EEE  D002               	goto	l14325
 23943  003EF0                     l14323:
 23944                           
 23945                           ; BSR set to: 0
 23946  003EF0  4A09               	infsnz	atoi@s^0,f,c
 23947  003EF2  2A0A               	incf	(atoi@s+1)^0,f,c
 23948  003EF4                     l14325:
 23949                           
 23950                           ; BSR set to: 0
 23951  003EF4  0E01               	movlw	1
 23952  003EF6  6E15               	movwf	_atoi$7723^0,c
 23953                           
 23954                           ; BSR set to: 0
 23955  003EF8  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23956  003EFE  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23957  003F04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23958  003F04  6AF8               	clrf	tblptru,c
 23959  003F06                     	endif
 23960  003F06                     	if	0	;tblptru may be non-zero
 23961  003F06                     	endif
 23962  003F06  0008               	tblrd		*
 23963  003F08  50F5               	movf	tablat,w,c
 23964  003F0A  0A20               	xorlw	32
 23965  003F0C  B4D8               	btfsc	status,2,c
 23966  003F0E  D01B               	goto	l14333
 23967                           
 23968                           ; BSR set to: 0
 23969  003F10  0EF7               	movlw	247
 23970  003F12  6E0B               	movwf	??_atoi^0,c
 23971  003F14  0EFF               	movlw	255
 23972  003F16  6E0C               	movwf	(??_atoi+1)^0,c
 23973  003F18  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23974  003F1E  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23975  003F24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23976  003F24  6AF8               	clrf	tblptru,c
 23977  003F26                     	endif
 23978  003F26                     	if	0	;tblptru may be non-zero
 23979  003F26                     	endif
 23980  003F26  0008               	tblrd		*
 23981  003F28  50F5               	movf	tablat,w,c
 23982  003F2A  6E0D               	movwf	(??_atoi+2)^0,c
 23983  003F2C  6A0E               	clrf	(??_atoi+3)^0,c
 23984  003F2E  500B               	movf	??_atoi^0,w,c
 23985  003F30  260D               	addwf	(??_atoi+2)^0,f,c
 23986  003F32  500C               	movf	(??_atoi+1)^0,w,c
 23987  003F34  220E               	addwfc	(??_atoi+3)^0,f,c
 23988  003F36  500E               	movf	(??_atoi+3)^0,w,c
 23989  003F38  E104               	bnz	u13770
 23990  003F3A  0E05               	movlw	5
 23991  003F3C  5C0D               	subwf	(??_atoi+2)^0,w,c
 23992  003F3E  A0D8               	btfss	status,0,c
 23993  003F40  D002               	goto	l14333
 23994  003F42                     u13770:
 23995                           
 23996                           ; BSR set to: 0
 23997  003F42  0E00               	movlw	0
 23998  003F44  6E15               	movwf	_atoi$7723^0,c
 23999  003F46                     l14333:
 24000                           
 24001                           ; BSR set to: 0
 24002  003F46  0060  F054  F011   	movff	_atoi$7723,_atoi$7722
 24003  003F4C  6A12               	clrf	(_atoi$7722+1)^0,c
 24004                           
 24005                           ; BSR set to: 0
 24006  003F4E  5011               	movf	_atoi$7722^0,w,c
 24007  003F50  1012               	iorwf	(_atoi$7722+1)^0,w,c
 24008  003F52  B4D8               	btfsc	status,2,c
 24009  003F54  D008               	goto	l14343
 24010  003F56  D7CC               	goto	l14323
 24011  003F58                     l14339:
 24012                           
 24013                           ; BSR set to: 0
 24014  003F58  0E00               	movlw	0
 24015  003F5A  6E10               	movwf	(atoi@neg+1)^0,c
 24016  003F5C  0E01               	movlw	1
 24017  003F5E  6E0F               	movwf	atoi@neg^0,c
 24018  003F60                     l14341:
 24019  003F60  4A09               	infsnz	atoi@s^0,f,c
 24020  003F62  2A0A               	incf	(atoi@s+1)^0,f,c
 24021  003F64  D036               	goto	l14349
 24022  003F66                     l14343:
 24023                           
 24024                           ; BSR set to: 0
 24025  003F66  0060  F027  FFF6   	movff	atoi@s,tblptrl
 24026  003F6C  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 24027  003F72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24028  003F72  6AF8               	clrf	tblptru,c
 24029  003F74                     	endif
 24030  003F74                     	if	0	;tblptru may be non-zero
 24031  003F74                     	endif
 24032  003F74  0008               	tblrd		*
 24033  003F76  50F5               	movf	tablat,w,c
 24034  003F78  6E0B               	movwf	??_atoi^0,c
 24035  003F7A  6A0C               	clrf	(??_atoi+1)^0,c
 24036                           
 24037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24038                           ; Switch size 1, requested type "simple"
 24039                           ; Number of cases is 1, Range of values is 0 to 0
 24040                           ; switch strategies available:
 24041                           ; Name         Instructions Cycles
 24042                           ; simple_byte            4     3 (average)
 24043                           ;	Chosen strategy is simple_byte
 24044  003F7C  500C               	movf	(??_atoi+1)^0,w,c
 24045  003F7E  0A00               	xorlw	0	; case 0
 24046  003F80  A4D8               	btfss	status,2,c
 24047  003F82  D027               	goto	l14349
 24048                           
 24049                           ; BSR set to: 0
 24050                           ; Switch size 1, requested type "simple"
 24051                           ; Number of cases is 2, Range of values is 43 to 45
 24052                           ; switch strategies available:
 24053                           ; Name         Instructions Cycles
 24054                           ; simple_byte            7     4 (average)
 24055                           ;	Chosen strategy is simple_byte
 24056  003F84  500B               	movf	??_atoi^0,w,c
 24057  003F86  0A2B               	xorlw	43	; case 43
 24058  003F88  B4D8               	btfsc	status,2,c
 24059  003F8A  D7EA               	goto	l14341
 24060  003F8C  0A06               	xorlw	6	; case 45
 24061  003F8E  B4D8               	btfsc	status,2,c
 24062  003F90  D7E3               	goto	l14339
 24063  003F92  D01F               	goto	l14349
 24064  003F94                     l14345:
 24065  003F94  0060  F058  F002   	movff	atoi@n,___wmul@multiplier
 24066  003F9A  0060  F05C  F003   	movff	atoi@n+1,___wmul@multiplier+1
 24067  003FA0  0E00               	movlw	0
 24068  003FA2  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 24069  003FA4  0E0A               	movlw	10
 24070  003FA6  6E04               	movwf	___wmul@multiplicand^0,c
 24071  003FA8  ECA6  F043         	call	___wmul	;wreg free
 24072  003FAC  0060  F027  FFF6   	movff	atoi@s,tblptrl
 24073  003FB2  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 24074  003FB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24075  003FB8  6AF8               	clrf	tblptru,c
 24076  003FBA                     	endif
 24077  003FBA                     	if	0	;tblptru may be non-zero
 24078  003FBA                     	endif
 24079  003FBA  0008               	tblrd		*
 24080  003FBC  50F5               	movf	tablat,w,c
 24081  003FBE  5E02               	subwf	?___wmul^0,f,c
 24082  003FC0  0E00               	movlw	0
 24083  003FC2  5A03               	subwfb	(?___wmul+1)^0,f,c
 24084  003FC4  0E30               	movlw	48
 24085  003FC6  2402               	addwf	?___wmul^0,w,c
 24086  003FC8  6E16               	movwf	atoi@n^0,c
 24087  003FCA  0E00               	movlw	0
 24088  003FCC  2003               	addwfc	(?___wmul+1)^0,w,c
 24089  003FCE  6E17               	movwf	(atoi@n+1)^0,c
 24090  003FD0  D7C7               	goto	l14341
 24091  003FD2                     l14349:
 24092  003FD2  0ED0               	movlw	208
 24093  003FD4  6E0B               	movwf	??_atoi^0,c
 24094  003FD6  0EFF               	movlw	255
 24095  003FD8  6E0C               	movwf	(??_atoi+1)^0,c
 24096  003FDA  0060  F027  FFF6   	movff	atoi@s,tblptrl
 24097  003FE0  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 24098  003FE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24099  003FE6  6AF8               	clrf	tblptru,c
 24100  003FE8                     	endif
 24101  003FE8                     	if	0	;tblptru may be non-zero
 24102  003FE8                     	endif
 24103  003FE8  0008               	tblrd		*
 24104  003FEA  50F5               	movf	tablat,w,c
 24105  003FEC  6E0D               	movwf	(??_atoi+2)^0,c
 24106  003FEE  6A0E               	clrf	(??_atoi+3)^0,c
 24107  003FF0  500B               	movf	??_atoi^0,w,c
 24108  003FF2  260D               	addwf	(??_atoi+2)^0,f,c
 24109  003FF4  500C               	movf	(??_atoi+1)^0,w,c
 24110  003FF6  220E               	addwfc	(??_atoi+3)^0,f,c
 24111  003FF8  500E               	movf	(??_atoi+3)^0,w,c
 24112  003FFA  E106               	bnz	u13790
 24113  003FFC  0E0A               	movlw	10
 24114  003FFE  5C0D               	subwf	(??_atoi+2)^0,w,c
 24115  004000  B0D8               	btfsc	status,0,c
 24116  004002  D002               	goto	u13790
 24117  004004  0E01               	movlw	1
 24118  004006  D001               	goto	u13800
 24119  004008                     u13790:
 24120  004008  0E00               	movlw	0
 24121  00400A                     u13800:
 24122  00400A  6E13               	movwf	_atoi$7724^0,c
 24123  00400C  6A14               	clrf	(_atoi$7724+1)^0,c
 24124  00400E  5013               	movf	_atoi$7724^0,w,c
 24125  004010  1014               	iorwf	(_atoi$7724+1)^0,w,c
 24126  004012  A4D8               	btfss	status,2,c
 24127  004014  D7BF               	goto	l14345
 24128  004016  500F               	movf	atoi@neg^0,w,c
 24129  004018  1010               	iorwf	(atoi@neg+1)^0,w,c
 24130  00401A  A4D8               	btfss	status,2,c
 24131  00401C  D011               	goto	l3906
 24132  00401E  0060  F058  F00B   	movff	atoi@n,??_atoi
 24133  004024  0060  F05C  F00C   	movff	atoi@n+1,??_atoi+1
 24134  00402A  1E0B               	comf	??_atoi^0,f,c
 24135  00402C  1E0C               	comf	(??_atoi+1)^0,f,c
 24136  00402E  4A0B               	infsnz	??_atoi^0,f,c
 24137  004030  2A0C               	incf	(??_atoi+1)^0,f,c
 24138  004032  0060  F02C  F009   	movff	??_atoi,?_atoi
 24139  004038  0060  F030  F00A   	movff	??_atoi+1,?_atoi+1
 24140  00403E  0012               	return	
 24141  004040                     l3906:
 24142  004040  0060  F058  F009   	movff	atoi@n,?_atoi
 24143  004046  0060  F05C  F00A   	movff	atoi@n+1,?_atoi+1
 24144  00404C  0012               	return		;funcret
 24145  00404E                     __end_of_atoi:
 24146                           	opt callstack 0
 24147                           
 24148 ;; *************** function _isspace *****************
 24149 ;; Defined at:
 24150 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 24151 ;; Parameters:    Size  Location     Type
 24152 ;;  c               2    1[COMRAM] int 
 24153 ;; Auto vars:     Size  Location     Type
 24154 ;;		None
 24155 ;; Return value:  Size  Location     Type
 24156 ;;                  2    1[COMRAM] int 
 24157 ;; Registers used:
 24158 ;;		wreg, status,2, status,0
 24159 ;; Tracked objects:
 24160 ;;		On entry : 0/0
 24161 ;;		On exit  : 0/0
 24162 ;;		Unchanged: 0/0
 24163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24167 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24168 ;;Total ram usage:        7 bytes
 24169 ;; Hardware stack levels used:    1
 24170 ;; Hardware stack levels required when called:    7
 24171 ;; This function calls:
 24172 ;;		Nothing
 24173 ;; This function is called by:
 24174 ;;		_atoi
 24175 ;;		___strtoxl
 24176 ;; This function uses a non-reentrant model
 24177 ;;
 24178                           
 24179                           	psect	text147
 24180  008078                     __ptext147:
 24181                           	opt callstack 0
 24182  008078                     _isspace:
 24183                           	opt callstack 16
 24184                           
 24185                           ;incstack = 0
 24186  008078  0E01               	movlw	1
 24187  00807A  6E08               	movwf	_isspace$7749^0,c
 24188  00807C  0E20               	movlw	32
 24189  00807E  1802               	xorwf	isspace@c^0,w,c
 24190  008080  1003               	iorwf	(isspace@c+1)^0,w,c
 24191  008082  B4D8               	btfsc	status,2,c
 24192  008084  D016               	goto	l14107
 24193  008086  0EF7               	movlw	247
 24194  008088  6E04               	movwf	??_isspace^0,c
 24195  00808A  0EFF               	movlw	255
 24196  00808C  6E05               	movwf	(??_isspace+1)^0,c
 24197  00808E  0060  F008  F006   	movff	isspace@c,??_isspace+2
 24198  008094  0060  F00C  F007   	movff	isspace@c+1,??_isspace+3
 24199  00809A  5004               	movf	??_isspace^0,w,c
 24200  00809C  2606               	addwf	(??_isspace+2)^0,f,c
 24201  00809E  5005               	movf	(??_isspace+1)^0,w,c
 24202  0080A0  2207               	addwfc	(??_isspace+3)^0,f,c
 24203  0080A2  5007               	movf	(??_isspace+3)^0,w,c
 24204  0080A4  E104               	bnz	u13260
 24205  0080A6  0E05               	movlw	5
 24206  0080A8  5C06               	subwf	(??_isspace+2)^0,w,c
 24207  0080AA  A0D8               	btfss	status,0,c
 24208  0080AC  D002               	goto	l14107
 24209  0080AE                     u13260:
 24210  0080AE  0E00               	movlw	0
 24211  0080B0  6E08               	movwf	_isspace$7749^0,c
 24212  0080B2                     l14107:
 24213  0080B2  0060  F020  F002   	movff	_isspace$7749,?_isspace
 24214  0080B8  6A03               	clrf	(?_isspace+1)^0,c
 24215  0080BA  0012               	return		;funcret
 24216  0080BC                     __end_of_isspace:
 24217                           	opt callstack 0
 24218                           
 24219 ;; *************** function _isdigit *****************
 24220 ;; Defined at:
 24221 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 24222 ;; Parameters:    Size  Location     Type
 24223 ;;  c               2    1[COMRAM] int 
 24224 ;; Auto vars:     Size  Location     Type
 24225 ;;		None
 24226 ;; Return value:  Size  Location     Type
 24227 ;;                  2    1[COMRAM] int 
 24228 ;; Registers used:
 24229 ;;		wreg, status,2, status,0
 24230 ;; Tracked objects:
 24231 ;;		On entry : 0/0
 24232 ;;		On exit  : 0/0
 24233 ;;		Unchanged: 0/0
 24234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24238 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24239 ;;Total ram usage:        6 bytes
 24240 ;; Hardware stack levels used:    1
 24241 ;; Hardware stack levels required when called:    7
 24242 ;; This function calls:
 24243 ;;		Nothing
 24244 ;; This function is called by:
 24245 ;;		_vfpfcnvrt
 24246 ;;		_atoi
 24247 ;;		___strtoxl
 24248 ;; This function uses a non-reentrant model
 24249 ;;
 24250                           
 24251                           	psect	text148
 24252  0086E6                     __ptext148:
 24253                           	opt callstack 0
 24254  0086E6                     _isdigit:
 24255                           	opt callstack 17
 24256                           
 24257                           ;incstack = 0
 24258  0086E6  0ED0               	movlw	208
 24259  0086E8  6E04               	movwf	??_isdigit^0,c
 24260  0086EA  0EFF               	movlw	255
 24261  0086EC  6E05               	movwf	(??_isdigit+1)^0,c
 24262  0086EE  0060  F008  F006   	movff	isdigit@c,??_isdigit+2
 24263  0086F4  0060  F00C  F007   	movff	isdigit@c+1,??_isdigit+3
 24264  0086FA  5004               	movf	??_isdigit^0,w,c
 24265  0086FC  2606               	addwf	(??_isdigit+2)^0,f,c
 24266  0086FE  5005               	movf	(??_isdigit+1)^0,w,c
 24267  008700  2207               	addwfc	(??_isdigit+3)^0,f,c
 24268  008702  5007               	movf	(??_isdigit+3)^0,w,c
 24269  008704  E106               	bnz	u13030
 24270  008706  0E0A               	movlw	10
 24271  008708  5C06               	subwf	(??_isdigit+2)^0,w,c
 24272  00870A  B0D8               	btfsc	status,0,c
 24273  00870C  D002               	goto	u13030
 24274  00870E  0E01               	movlw	1
 24275  008710  D001               	goto	u13040
 24276  008712                     u13030:
 24277  008712  0E00               	movlw	0
 24278  008714                     u13040:
 24279  008714  6E02               	movwf	?_isdigit^0,c
 24280  008716  6A03               	clrf	(?_isdigit+1)^0,c
 24281  008718  0012               	return		;funcret
 24282  00871A                     __end_of_isdigit:
 24283                           	opt callstack 0
 24284                           
 24285 ;; *************** function ___wmul *****************
 24286 ;; Defined at:
 24287 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 24288 ;; Parameters:    Size  Location     Type
 24289 ;;  multiplier      2    1[COMRAM] unsigned int 
 24290 ;;  multiplicand    2    3[COMRAM] unsigned int 
 24291 ;; Auto vars:     Size  Location     Type
 24292 ;;  product         2    5[COMRAM] unsigned int 
 24293 ;; Return value:  Size  Location     Type
 24294 ;;                  2    1[COMRAM] unsigned int 
 24295 ;; Registers used:
 24296 ;;		wreg, status,2, status,0, prodl, prodh
 24297 ;; Tracked objects:
 24298 ;;		On entry : 0/0
 24299 ;;		On exit  : 0/0
 24300 ;;		Unchanged: 0/0
 24301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24306 ;;Total ram usage:        6 bytes
 24307 ;; Hardware stack levels used:    1
 24308 ;; Hardware stack levels required when called:    7
 24309 ;; This function calls:
 24310 ;;		Nothing
 24311 ;; This function is called by:
 24312 ;;		_atoi
 24313 ;;		_CircularBufferPushBack
 24314 ;;		_CircularBufferPopFront
 24315 ;; This function uses a non-reentrant model
 24316 ;;
 24317                           
 24318                           	psect	text149
 24319  00874C                     __ptext149:
 24320                           	opt callstack 0
 24321  00874C                     ___wmul:
 24322                           	opt callstack 19
 24323                           
 24324                           ;incstack = 0
 24325  00874C  5002               	movf	___wmul@multiplier^0,w,c
 24326  00874E  0204               	mulwf	___wmul@multiplicand^0,c
 24327  008750  006F FFCC  F006    	movff	prodl,___wmul@product
 24328  008756  006F FFD0  F007    	movff	prodh,___wmul@product+1
 24329  00875C  5002               	movf	___wmul@multiplier^0,w,c
 24330  00875E  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 24331  008760  50F3               	movf	243,w,c
 24332  008762  2607               	addwf	(___wmul@product+1)^0,f,c
 24333  008764  5003               	movf	(___wmul@multiplier+1)^0,w,c
 24334  008766  0204               	mulwf	___wmul@multiplicand^0,c
 24335  008768  50F3               	movf	243,w,c
 24336  00876A  2607               	addwf	(___wmul@product+1)^0,f,c
 24337  00876C  0060  F018  F002   	movff	___wmul@product,?___wmul
 24338  008772  0060  F01C  F003   	movff	___wmul@product+1,?___wmul+1
 24339  008778  0012               	return		;funcret
 24340  00877A                     __end_of___wmul:
 24341                           	opt callstack 0
 24342                           
 24343 ;; *************** function _nwkRouteFrame *****************
 24344 ;; Defined at:
 24345 ;;		line 299 in file "../nwk/nwk_src/nwkRoute.c"
 24346 ;; Parameters:    Size  Location     Type
 24347 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
 24348 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24349 ;; Auto vars:     Size  Location     Type
 24350 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
 24351 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24352 ;; Return value:  Size  Location     Type
 24353 ;;                  1    wreg      void 
 24354 ;; Registers used:
 24355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24356 ;; Tracked objects:
 24357 ;;		On entry : 3/1
 24358 ;;		On exit  : 3F/1
 24359 ;;		Unchanged: 0/0
 24360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24364 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24365 ;;Total ram usage:        4 bytes
 24366 ;; Hardware stack levels used:    1
 24367 ;; Hardware stack levels required when called:   12
 24368 ;; This function calls:
 24369 ;;		_NWK_RouteNextHop
 24370 ;;		_nwkFrameFree
 24371 ;;		_nwkRouteSendRouteError
 24372 ;;		_nwkTxFrame
 24373 ;; This function is called by:
 24374 ;;		_nwkRxTaskHandler
 24375 ;; This function uses a non-reentrant model
 24376 ;;
 24377                           
 24378                           	psect	text150
 24379  005D5A                     __ptext150:
 24380                           	opt callstack 0
 24381  005D5A                     _nwkRouteFrame:
 24382                           	opt callstack 15
 24383                           
 24384                           ;../nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kRoute.c: 300: {;../nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 24385                           
 24386                           ;incstack = 0
 24387  005D5A  0E02               	movlw	2
 24388  005D5C  2433               	addwf	nwkRouteFrame@frame^0,w,c
 24389  005D5E  6E35               	movwf	nwkRouteFrame@header^0,c
 24390  005D60  0E00               	movlw	0
 24391  005D62  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
 24392  005D64  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
 24393                           
 24394                           ;../nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, he
      +                          ader->nwkFcf.multicast))
 24395  005D66  EE20 F00D          	lfsr	2,13
 24396  005D6A  5035               	movf	nwkRouteFrame@header^0,w,c
 24397  005D6C  26D9               	addwf	fsr2l,f,c
 24398  005D6E  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24399  005D70  22DA               	addwfc	fsr2h,f,c
 24400  005D72  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 24401  005D78  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 24402  005D7E  EE20 F009          	lfsr	2,9
 24403  005D82  5035               	movf	nwkRouteFrame@header^0,w,c
 24404  005D84  26D9               	addwf	fsr2l,f,c
 24405  005D86  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24406  005D88  22DA               	addwfc	fsr2h,f,c
 24407  005D8A  0E00               	movlw	0
 24408  005D8C  B6DF               	btfsc	indf2,3,c
 24409  005D8E  0E01               	movlw	1
 24410  005D90  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 24411  005D92  EC6B  F03F         	call	_NWK_RouteNextHop	;wreg free
 24412  005D96  2808               	incf	?_NWK_RouteNextHop^0,w,c
 24413  005D98  E103               	bnz	u16250
 24414  005D9A  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
 24415  005D9C  B4D8               	btfsc	status,2,c
 24416  005D9E  D01B               	goto	l16073
 24417  005DA0                     u16250:
 24418                           
 24419                           ;../nwk/nwk_src/nwkRoute.c: 304:   {;../nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confi
      +                          rm = ((void*)0);
 24420  005DA0  EE20 F087          	lfsr	2,135
 24421  005DA4  5033               	movf	nwkRouteFrame@frame^0,w,c
 24422  005DA6  26D9               	addwf	fsr2l,f,c
 24423  005DA8  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24424  005DAA  22DA               	addwfc	fsr2h,f,c
 24425  005DAC  0E00               	movlw	0
 24426  005DAE  6EDE               	movwf	postinc2,c
 24427  005DB0  0E00               	movlw	0
 24428  005DB2  6EDD               	movwf	postdec2,c
 24429                           
 24430                           ;../nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 24431  005DB4  EE20 F086          	lfsr	2,134
 24432  005DB8  5033               	movf	nwkRouteFrame@frame^0,w,c
 24433  005DBA  26D9               	addwf	fsr2l,f,c
 24434  005DBC  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24435  005DBE  22DA               	addwfc	fsr2h,f,c
 24436  005DC0  0E02               	movlw	2
 24437  005DC2  6EDF               	movwf	indf2,c
 24438                           
 24439                           ;../nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
 24440  005DC4  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 24441  005DCA  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 24442  005DD0  ECF1  F01D         	call	_nwkTxFrame	;wreg free
 24443                           
 24444                           ;../nwk/nwk_src/nwkRoute.c: 308:   }
 24445  005DD4  0012               	return	
 24446  005DD6                     l16073:
 24447                           
 24448                           ;../nwk/nwk_src/nwkRoute.c: 310:   {;../nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRou
      +                          teError(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 24449  005DD6  EE20 F00B          	lfsr	2,11
 24450  005DDA  5035               	movf	nwkRouteFrame@header^0,w,c
 24451  005DDC  26D9               	addwf	fsr2l,f,c
 24452  005DDE  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24453  005DE0  22DA               	addwfc	fsr2h,f,c
 24454  005DE2  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
 24455  005DE8  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
 24456  005DEE  EE20 F00D          	lfsr	2,13
 24457  005DF2  5035               	movf	nwkRouteFrame@header^0,w,c
 24458  005DF4  26D9               	addwf	fsr2l,f,c
 24459  005DF6  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24460  005DF8  22DA               	addwfc	fsr2h,f,c
 24461  005DFA  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
 24462  005E00  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
 24463  005E06  EE20 F009          	lfsr	2,9
 24464  005E0A  5035               	movf	nwkRouteFrame@header^0,w,c
 24465  005E0C  26D9               	addwf	fsr2l,f,c
 24466  005E0E  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24467  005E10  22DA               	addwfc	fsr2h,f,c
 24468  005E12  0E00               	movlw	0
 24469  005E14  B6DF               	btfsc	indf2,3,c
 24470  005E16  0E01               	movlw	1
 24471  005E18  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
 24472  005E1A  ECF4  F02C         	call	_nwkRouteSendRouteError	;wreg free
 24473                           
 24474                           ;../nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
 24475  005E1E  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 24476  005E24  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 24477  005E2A  ECC5  F045         	call	_nwkFrameFree	;wreg free
 24478                           
 24479                           ; BSR set to: 1
 24480  005E2E  0012               	return		;funcret
 24481  005E30                     __end_of_nwkRouteFrame:
 24482                           	opt callstack 0
 24483                           
 24484 ;; *************** function _nwkRouteSendRouteError *****************
 24485 ;; Defined at:
 24486 ;;		line 318 in file "../nwk/nwk_src/nwkRoute.c"
 24487 ;; Parameters:    Size  Location     Type
 24488 ;;  src             2   41[COMRAM] unsigned short 
 24489 ;;  dst             2   43[COMRAM] unsigned short 
 24490 ;;  multicast       1   45[COMRAM] unsigned char 
 24491 ;; Auto vars:     Size  Location     Type
 24492 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
 24493 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24494 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
 24495 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24496 ;; Return value:  Size  Location     Type
 24497 ;;                  1    wreg      void 
 24498 ;; Registers used:
 24499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24500 ;; Tracked objects:
 24501 ;;		On entry : 0/1
 24502 ;;		On exit  : 0/0
 24503 ;;		Unchanged: 0/0
 24504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24505 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24506 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24508 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24509 ;;Total ram usage:        9 bytes
 24510 ;; Hardware stack levels used:    1
 24511 ;; Hardware stack levels required when called:   11
 24512 ;; This function calls:
 24513 ;;		_nwkFrameAlloc
 24514 ;;		_nwkFrameCommandInit
 24515 ;;		_nwkTxFrame
 24516 ;; This function is called by:
 24517 ;;		_nwkRouteFrame
 24518 ;; This function uses a non-reentrant model
 24519 ;;
 24520                           
 24521                           	psect	text151
 24522  0059E8                     __ptext151:
 24523                           	opt callstack 0
 24524  0059E8                     _nwkRouteSendRouteError:
 24525                           	opt callstack 15
 24526                           
 24527                           ;../nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16
      +                          _t dst, uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 319: {;../nwk/nwk_src/nwkRoute.c: 
      +                          320:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *comm
      +                          and;;../nwk/nwk_src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24528                           
 24529                           ; BSR set to: 1
 24530                           ;incstack = 0
 24531  0059E8  EC50  F033         	call	_nwkFrameAlloc	;wreg free
 24532  0059EC  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 24533  0059F2  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 24534  0059F8  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24535  0059FA  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24536  0059FC  B4D8               	btfsc	status,2,c
 24537  0059FE  0012               	return	
 24538                           
 24539                           ;../nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
 24540  005A00  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 24541  005A06  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 24542  005A0C  EC9F  F040         	call	_nwkFrameCommandInit	;wreg free
 24543                           
 24544                           ; BSR set to: 1
 24545                           ;../nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
 24546  005A10  EE20 F001          	lfsr	2,1
 24547  005A14  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24548  005A16  26D9               	addwf	fsr2l,f,c
 24549  005A18  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24550  005A1A  22DA               	addwfc	fsr2h,f,c
 24551  005A1C  0E06               	movlw	6
 24552  005A1E  26DF               	addwf	indf2,f,c
 24553                           
 24554                           ; BSR set to: 1
 24555                           ;../nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
 24556  005A20  EE20 F087          	lfsr	2,135
 24557  005A24  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24558  005A26  26D9               	addwf	fsr2l,f,c
 24559  005A28  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24560  005A2A  22DA               	addwfc	fsr2h,f,c
 24561  005A2C  0E00               	movlw	0
 24562  005A2E  6EDE               	movwf	postinc2,c
 24563  005A30  0E00               	movlw	0
 24564  005A32  6EDD               	movwf	postdec2,c
 24565                           
 24566                           ; BSR set to: 1
 24567                           ;../nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
 24568  005A34  EE20 F00F          	lfsr	2,15
 24569  005A38  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24570  005A3A  26D9               	addwf	fsr2l,f,c
 24571  005A3C  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24572  005A3E  22DA               	addwfc	fsr2h,f,c
 24573  005A40  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24574  005A46  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24575                           
 24576                           ; BSR set to: 1
 24577                           ;../nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
 24578  005A4C  EE20 F081          	lfsr	2,129
 24579  005A50  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24580  005A52  26D9               	addwf	fsr2l,f,c
 24581  005A54  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24582  005A56  22DA               	addwfc	fsr2h,f,c
 24583  005A58  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
 24584  005A5E  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
 24585                           
 24586                           ; BSR set to: 1
 24587                           ;../nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
 24588  005A64  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 24589  005A6A  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 24590  005A70  0E01               	movlw	1
 24591  005A72  6EDF               	movwf	indf2,c
 24592                           
 24593                           ; BSR set to: 1
 24594                           ;../nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
 24595  005A74  EE20 F001          	lfsr	2,1
 24596  005A78  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24597  005A7A  26D9               	addwf	fsr2l,f,c
 24598  005A7C  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24599  005A7E  22DA               	addwfc	fsr2h,f,c
 24600  005A80  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24601  005A86  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24602                           
 24603                           ; BSR set to: 1
 24604                           ;../nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
 24605  005A8C  EE20 F003          	lfsr	2,3
 24606  005A90  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24607  005A92  26D9               	addwf	fsr2l,f,c
 24608  005A94  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24609  005A96  22DA               	addwfc	fsr2h,f,c
 24610  005A98  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 24611  005A9E  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 24612                           
 24613                           ; BSR set to: 1
 24614                           ;../nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
 24615  005AA4  EE20 F005          	lfsr	2,5
 24616  005AA8  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24617  005AAA  26D9               	addwf	fsr2l,f,c
 24618  005AAC  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24619  005AAE  22DA               	addwfc	fsr2h,f,c
 24620  005AB0  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 24621                           
 24622                           ; BSR set to: 1
 24623                           ;../nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
 24624  005AB6  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 24625  005ABC  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 24626  005AC2  ECF1  F01D         	call	_nwkTxFrame	;wreg free
 24627  005AC6  0012               	return		;funcret
 24628  005AC8                     __end_of_nwkRouteSendRouteError:
 24629                           	opt callstack 0
 24630                           
 24631 ;; *************** function _nwkFrameCommandInit *****************
 24632 ;; Defined at:
 24633 ;;		line 131 in file "../nwk/nwk_src/nwkFrame.c"
 24634 ;; Parameters:    Size  Location     Type
 24635 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24636 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;		None
 24639 ;; Return value:  Size  Location     Type
 24640 ;;                  1    wreg      void 
 24641 ;; Registers used:
 24642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24643 ;; Tracked objects:
 24644 ;;		On entry : 0/1
 24645 ;;		On exit  : 3F/1
 24646 ;;		Unchanged: 0/0
 24647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24652 ;;Total ram usage:        2 bytes
 24653 ;; Hardware stack levels used:    1
 24654 ;; Hardware stack levels required when called:    7
 24655 ;; This function calls:
 24656 ;;		Nothing
 24657 ;; This function is called by:
 24658 ;;		_nwkRouteSendRouteError
 24659 ;;		_nwkRxSendAck
 24660 ;; This function uses a non-reentrant model
 24661 ;;
 24662                           
 24663                           	psect	text152
 24664  00813E                     __ptext152:
 24665                           	opt callstack 0
 24666  00813E                     _nwkFrameCommandInit:
 24667                           	opt callstack 18
 24668                           
 24669                           ;../nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 132: {;../nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_
      +                          STATUS;
 24670                           
 24671                           ;incstack = 0
 24672  00813E  EE20 F083          	lfsr	2,131
 24673  008142  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24674  008144  26D9               	addwf	fsr2l,f,c
 24675  008146  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24676  008148  22DA               	addwfc	fsr2h,f,c
 24677  00814A  0E00               	movlw	0
 24678  00814C  6EDF               	movwf	indf2,c
 24679                           
 24680                           ;../nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 24681  00814E  0101               	movlb	1	; () banked
 24682  008150  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 24683  008152  EE20 F00C          	lfsr	2,12
 24684  008156  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24685  008158  26D9               	addwf	fsr2l,f,c
 24686  00815A  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24687  00815C  22DA               	addwfc	fsr2h,f,c
 24688  00815E  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 24689                           
 24690                           ;../nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 24691  008164  EE20 F00D          	lfsr	2,13
 24692  008168  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24693  00816A  26D9               	addwf	fsr2l,f,c
 24694  00816C  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24695  00816E  22DA               	addwfc	fsr2h,f,c
 24696  008170  0060  F403  FFDE   	movff	_nwkIb,postinc2
 24697  008176  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 24698                           
 24699                           ; BSR set to: 1
 24700  00817C  0012               	return		;funcret
 24701  00817E                     __end_of_nwkFrameCommandInit:
 24702                           	opt callstack 0
 24703                           
 24704 ;; *************** function _nwkFrameFree *****************
 24705 ;; Defined at:
 24706 ;;		line 100 in file "../nwk/nwk_src/nwkFrame.c"
 24707 ;; Parameters:    Size  Location     Type
 24708 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24709 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24710 ;; Auto vars:     Size  Location     Type
 24711 ;;		None
 24712 ;; Return value:  Size  Location     Type
 24713 ;;                  1    wreg      void 
 24714 ;; Registers used:
 24715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24716 ;; Tracked objects:
 24717 ;;		On entry : 0/2
 24718 ;;		On exit  : 3F/1
 24719 ;;		Unchanged: 0/0
 24720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24725 ;;Total ram usage:        2 bytes
 24726 ;; Hardware stack levels used:    1
 24727 ;; Hardware stack levels required when called:    7
 24728 ;; This function calls:
 24729 ;;		Nothing
 24730 ;; This function is called by:
 24731 ;;		_nwkDataReqTxConf
 24732 ;;		_nwkRouteFrame
 24733 ;;		_nwkRxTaskHandler
 24734 ;;		_nwkTxTaskHandler
 24735 ;; This function uses a non-reentrant model
 24736 ;;
 24737                           
 24738                           	psect	text153
 24739  008B8A                     __ptext153:
 24740                           	opt callstack 0
 24741  008B8A                     _nwkFrameFree:
 24742                           	opt callstack 20
 24743                           
 24744                           ;../nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);../nwk/nwk_src/nwk
      +                          Frame.c: 101: {;../nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 24745                           
 24746                           ; BSR set to: 1
 24747                           ;incstack = 0
 24748  008B8A  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
 24749  008B90  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 24750  008B96  0E00               	movlw	0
 24751  008B98  6EDF               	movwf	indf2,c
 24752                           
 24753                           ;../nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 24754  008B9A  0101               	movlb	1	; () banked
 24755  008B9C  0726               	decf	(_nwkIb+38)& (0+255),f,b
 24756  008B9E  A0D8               	btfss	status,0,c
 24757  008BA0  0727               	decf	(_nwkIb+39)& (0+255),f,b
 24758                           
 24759                           ; BSR set to: 1
 24760  008BA2  0012               	return		;funcret
 24761  008BA4                     __end_of_nwkFrameFree:
 24762                           	opt callstack 0
 24763                           
 24764 ;; *************** function _nwkDataReqTaskHandler *****************
 24765 ;; Defined at:
 24766 ;;		line 209 in file "../nwk/nwk_src/nwkDataReq.c"
 24767 ;; Parameters:    Size  Location     Type
 24768 ;;		None
 24769 ;; Auto vars:     Size  Location     Type
 24770 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
 24771 ;;		 -> NULL(0), tx_buffer(524), 
 24772 ;; Return value:  Size  Location     Type
 24773 ;;                  1    wreg      void 
 24774 ;; Registers used:
 24775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24776 ;; Tracked objects:
 24777 ;;		On entry : 0/2
 24778 ;;		On exit  : 0/0
 24779 ;;		Unchanged: 0/0
 24780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24783 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24785 ;;Total ram usage:        4 bytes
 24786 ;; Hardware stack levels used:    1
 24787 ;; Hardware stack levels required when called:   12
 24788 ;; This function calls:
 24789 ;;		_nwkDataReqConfirm
 24790 ;;		_nwkDataReqSendFrame
 24791 ;; This function is called by:
 24792 ;;		_NWK_TaskHandler
 24793 ;; This function uses a non-reentrant model
 24794 ;;
 24795                           
 24796                           	psect	text154
 24797  007320                     __ptext154:
 24798                           	opt callstack 0
 24799  007320                     _nwkDataReqTaskHandler:
 24800                           	opt callstack 16
 24801                           
 24802                           ;../nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req
      +                           = req->next)
 24803                           
 24804                           ; BSR set to: 1
 24805                           ;incstack = 0
 24806  007320  0060  F3A8  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 24807  007326  0060  F3AC  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 24808  00732C  D035               	goto	l16807
 24809  00732E                     l16789:
 24810                           
 24811                           ;../nwk/nwk_src/nwkDataReq.c: 216:       {;../nwk/nwk_src/nwkDataReq.c: 217:         nwk
      +                          DataReqSendFrame(req);
 24812  00732E  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 24813  007334  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 24814  00733A  ECA6  F00E         	call	_nwkDataReqSendFrame	;wreg free
 24815  00733E  0012               	return	
 24816  007340                     l16795:
 24817                           
 24818                           ;../nwk/nwk_src/nwkDataReq.c: 225:       {;../nwk/nwk_src/nwkDataReq.c: 226:         nwk
      +                          DataReqConfirm(req);
 24819  007340  0060  F0CC  F009   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 24820  007346  0060  F0D0  F00A   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 24821  00734C  EC9E  F02B         	call	_nwkDataReqConfirm	;wreg free
 24822  007350  0012               	return	
 24823  007352                     l16803:
 24824  007352  EE20 F004          	lfsr	2,4
 24825  007356  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24826  007358  26D9               	addwf	fsr2l,f,c
 24827  00735A  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24828  00735C  22DA               	addwfc	fsr2h,f,c
 24829  00735E  50DF               	movf	indf2,w,c
 24830  007360  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
 24831  007362  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
 24832                           
 24833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24834                           ; Switch size 1, requested type "simple"
 24835                           ; Number of cases is 1, Range of values is 0 to 0
 24836                           ; switch strategies available:
 24837                           ; Name         Instructions Cycles
 24838                           ; simple_byte            4     3 (average)
 24839                           ;	Chosen strategy is simple_byte
 24840  007364  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
 24841  007366  0A00               	xorlw	0	; case 0
 24842  007368  A4D8               	btfss	status,2,c
 24843  00736A  D00A               	goto	l16805
 24844                           
 24845                           ; Switch size 1, requested type "simple"
 24846                           ; Number of cases is 3, Range of values is 0 to 2
 24847                           ; switch strategies available:
 24848                           ; Name         Instructions Cycles
 24849                           ; simple_byte           10     6 (average)
 24850                           ;	Chosen strategy is simple_byte
 24851  00736C  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
 24852  00736E  0A00               	xorlw	0	; case 0
 24853  007370  B4D8               	btfsc	status,2,c
 24854  007372  D7DD               	goto	l16789
 24855  007374  0A01               	xorlw	1	; case 1
 24856  007376  B4D8               	btfsc	status,2,c
 24857  007378  D003               	goto	l16805
 24858  00737A  0A03               	xorlw	3	; case 2
 24859  00737C  B4D8               	btfsc	status,2,c
 24860  00737E  D7E0               	goto	l16795
 24861  007380                     l16805:
 24862                           
 24863                           ;../nwk/nwk_src/nwkDataReq.c: 233:   }
 24864  007380  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 24865  007386  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 24866  00738C  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
 24867  007392  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
 24868  007398                     l16807:
 24869  007398  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24870  00739A  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24871  00739C  B4D8               	btfsc	status,2,c
 24872  00739E  0012               	return	
 24873  0073A0  D7D8               	goto	l16803
 24874  0073A2                     __end_of_nwkDataReqTaskHandler:
 24875                           	opt callstack 0
 24876                           
 24877 ;; *************** function _nwkDataReqSendFrame *****************
 24878 ;; Defined at:
 24879 ;;		line 111 in file "../nwk/nwk_src/nwkDataReq.c"
 24880 ;; Parameters:    Size  Location     Type
 24881 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
 24882 ;;		 -> NULL(0), tx_buffer(524), 
 24883 ;; Auto vars:     Size  Location     Type
 24884 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
 24885 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24886 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
 24887 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24888 ;; Return value:  Size  Location     Type
 24889 ;;                  1    wreg      void 
 24890 ;; Registers used:
 24891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24892 ;; Tracked objects:
 24893 ;;		On entry : 0/2
 24894 ;;		On exit  : 0/0
 24895 ;;		Unchanged: 0/0
 24896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24900 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24901 ;;Total ram usage:        7 bytes
 24902 ;; Hardware stack levels used:    1
 24903 ;; Hardware stack levels required when called:   11
 24904 ;; This function calls:
 24905 ;;		_memcpy
 24906 ;;		_nwkFrameAlloc
 24907 ;;		_nwkTxFrame
 24908 ;; This function is called by:
 24909 ;;		_nwkDataReqTaskHandler
 24910 ;; This function uses a non-reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text155
 24914  001D4C                     __ptext155:
 24915                           	opt callstack 0
 24916  001D4C                     _nwkDataReqSendFrame:
 24917                           	opt callstack 16
 24918                           
 24919                           ;../nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);.
      +                          ./nwk/nwk_src/nwkDataReq.c: 112: {;../nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame
      +                          ;;../nwk/nwk_src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24920                           
 24921                           ;incstack = 0
 24922  001D4C  EC50  F033         	call	_nwkFrameAlloc	;wreg free
 24923  001D50  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 24924  001D56  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 24925  001D5C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24926  001D5E  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24927  001D60  A4D8               	btfss	status,2,c
 24928  001D62  D011               	goto	l16003
 24929                           
 24930                           ;../nwk/nwk_src/nwkDataReq.c: 116:   {;../nwk/nwk_src/nwkDataReq.c: 117:     req->state 
      +                          = NWK_DATA_REQ_STATE_CONFIRM;
 24931  001D64  EE20 F004          	lfsr	2,4
 24932  001D68  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24933  001D6A  26D9               	addwf	fsr2l,f,c
 24934  001D6C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24935  001D6E  22DA               	addwfc	fsr2h,f,c
 24936  001D70  0E02               	movlw	2
 24937  001D72  6EDF               	movwf	indf2,c
 24938                           
 24939                           ;../nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 24940  001D74  EE20 F011          	lfsr	2,17
 24941  001D78  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24942  001D7A  26D9               	addwf	fsr2l,f,c
 24943  001D7C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24944  001D7E  22DA               	addwfc	fsr2h,f,c
 24945  001D80  0E02               	movlw	2
 24946  001D82  6EDF               	movwf	indf2,c
 24947  001D84  0012               	return	
 24948  001D86                     l16003:
 24949                           
 24950                           ;../nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 24951  001D86  EE20 F002          	lfsr	2,2
 24952  001D8A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24953  001D8C  26D9               	addwf	fsr2l,f,c
 24954  001D8E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24955  001D90  22DA               	addwfc	fsr2h,f,c
 24956  001D92  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 24957  001D98  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 24958                           
 24959                           ;../nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 24960  001D9E  EE20 F004          	lfsr	2,4
 24961  001DA2  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24962  001DA4  26D9               	addwf	fsr2l,f,c
 24963  001DA6  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24964  001DA8  22DA               	addwfc	fsr2h,f,c
 24965  001DAA  0E01               	movlw	1
 24966  001DAC  6EDF               	movwf	indf2,c
 24967                           
 24968                           ;../nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 24969  001DAE  EE20 F087          	lfsr	2,135
 24970  001DB2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24971  001DB4  26D9               	addwf	fsr2l,f,c
 24972  001DB6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24973  001DB8  22DA               	addwfc	fsr2h,f,c
 24974  001DBA  0E10               	movlw	low _nwkDataReqTxConf
 24975  001DBC  6EDE               	movwf	postinc2,c
 24976  001DBE  0E6A               	movlw	high _nwkDataReqTxConf
 24977  001DC0  6EDD               	movwf	postdec2,c
 24978                           
 24979                           ;../nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAS
      +                          T_PAN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 24980  001DC2  EE20 F086          	lfsr	2,134
 24981  001DC6  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24982  001DC8  26D9               	addwf	fsr2l,f,c
 24983  001DCA  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24984  001DCC  22DA               	addwfc	fsr2h,f,c
 24985  001DCE  EE10 F009          	lfsr	1,9
 24986  001DD2  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24987  001DD4  26E1               	addwf	fsr1l,f,c
 24988  001DD6  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24989  001DD8  22E2               	addwfc	fsr1h,f,c
 24990  001DDA  A4E7               	btfss	indf1,2,c
 24991  001DDC  D002               	goto	u16080
 24992  001DDE  0E01               	movlw	1
 24993  001DE0  D001               	goto	u16090
 24994  001DE2                     u16080:
 24995  001DE2  0E00               	movlw	0
 24996  001DE4                     u16090:
 24997  001DE4  6EDF               	movwf	indf2,c
 24998                           
 24999                           ;../nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NW
      +                          K_OPT_ACK_REQUEST ? 1 : 0;
 25000  001DE6  EE20 F009          	lfsr	2,9
 25001  001DEA  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25002  001DEC  26D9               	addwf	fsr2l,f,c
 25003  001DEE  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25004  001DF0  22DA               	addwfc	fsr2h,f,c
 25005  001DF2  A0DF               	btfss	indf2,0,c
 25006  001DF4  D003               	goto	u16100
 25007  001DF6  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25008  001DF8  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 25009  001DFA  D001               	goto	u16118
 25010  001DFC                     u16100:
 25011  001DFC  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25012  001DFE                     u16118:
 25013  001DFE  EE20 F00B          	lfsr	2,11
 25014  001E02  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25015  001E04  26D9               	addwf	fsr2l,f,c
 25016  001E06  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25017  001E08  22DA               	addwfc	fsr2h,f,c
 25018  001E0A  50DF               	movf	indf2,w,c
 25019  001E0C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25020  001E0E  0BFE               	andlw	-2
 25021  001E10  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25022  001E12  6EDF               	movwf	indf2,c
 25023                           
 25024                           ;../nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK
      +                          _OPT_LINK_LOCAL ? 1 : 0;
 25025  001E14  EE20 F009          	lfsr	2,9
 25026  001E18  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25027  001E1A  26D9               	addwf	fsr2l,f,c
 25028  001E1C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25029  001E1E  22DA               	addwfc	fsr2h,f,c
 25030  001E20  A6DF               	btfss	indf2,3,c
 25031  001E22  D003               	goto	u16120
 25032  001E24  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25033  001E26  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 25034  001E28  D001               	goto	u16138
 25035  001E2A                     u16120:
 25036  001E2A  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25037  001E2C                     u16138:
 25038  001E2C  EE20 F00B          	lfsr	2,11
 25039  001E30  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25040  001E32  26D9               	addwf	fsr2l,f,c
 25041  001E34  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25042  001E36  22DA               	addwfc	fsr2h,f,c
 25043  001E38  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25044  001E3A  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25045  001E3C  50DF               	movf	indf2,w,c
 25046  001E3E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25047  001E40  0BFB               	andlw	-5
 25048  001E42  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25049  001E44  6EDF               	movwf	indf2,c
 25050                           
 25051                           ;../nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK
      +                          _OPT_MULTICAST ? 1 : 0;
 25052  001E46  EE20 F009          	lfsr	2,9
 25053  001E4A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25054  001E4C  26D9               	addwf	fsr2l,f,c
 25055  001E4E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25056  001E50  22DA               	addwfc	fsr2h,f,c
 25057  001E52  A8DF               	btfss	indf2,4,c
 25058  001E54  D003               	goto	u16140
 25059  001E56  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25060  001E58  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 25061  001E5A  D001               	goto	u16158
 25062  001E5C                     u16140:
 25063  001E5C  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25064  001E5E                     u16158:
 25065  001E5E  EE20 F00B          	lfsr	2,11
 25066  001E62  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25067  001E64  26D9               	addwf	fsr2l,f,c
 25068  001E66  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25069  001E68  22DA               	addwfc	fsr2h,f,c
 25070  001E6A  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25071  001E6C  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25072  001E6E  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25073  001E70  50DF               	movf	indf2,w,c
 25074  001E72  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25075  001E74  0BF7               	andlw	-9
 25076  001E76  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25077  001E78  6EDF               	movwf	indf2,c
 25078                           
 25079                           ;../nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 25080  001E7A  EE20 F00B          	lfsr	2,11
 25081  001E7E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25082  001E80  26D9               	addwf	fsr2l,f,c
 25083  001E82  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25084  001E84  22DA               	addwfc	fsr2h,f,c
 25085  001E86  A6DF               	btfss	indf2,3,c
 25086  001E88  D06C               	goto	l1779
 25087                           
 25088                           ;../nwk/nwk_src/nwkDataReq.c: 139:   {;../nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMul
      +                          ticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 25089  001E8A  EE20 F081          	lfsr	2,129
 25090  001E8E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25091  001E90  26D9               	addwf	fsr2l,f,c
 25092  001E92  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25093  001E94  22DA               	addwfc	fsr2h,f,c
 25094  001E96  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 25095  001E9C  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 25096                           
 25097                           ;../nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 25098  001EA2  EE20 F00A          	lfsr	2,10
 25099  001EA6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25100  001EA8  26D9               	addwf	fsr2l,f,c
 25101  001EAA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25102  001EAC  22DA               	addwfc	fsr2h,f,c
 25103  001EAE  50DF               	movf	indf2,w,c
 25104  001EB0  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25105  001EB2  EE20 F001          	lfsr	2,1
 25106  001EB6  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 25107  001EB8  26D9               	addwf	fsr2l,f,c
 25108  001EBA  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 25109  001EBC  22DA               	addwfc	fsr2h,f,c
 25110  001EBE  50DF               	movf	indf2,w,c
 25111  001EC0  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25112  001EC2  0BF0               	andlw	-16
 25113  001EC4  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25114  001EC6  6EDF               	movwf	indf2,c
 25115                           
 25116                           ;../nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 25117  001EC8  EE20 F00A          	lfsr	2,10
 25118  001ECC  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25119  001ECE  26D9               	addwf	fsr2l,f,c
 25120  001ED0  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25121  001ED2  22DA               	addwfc	fsr2h,f,c
 25122  001ED4  50DF               	movf	indf2,w,c
 25123  001ED6  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25124  001ED8  EE20 F001          	lfsr	2,1
 25125  001EDC  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 25126  001EDE  26D9               	addwf	fsr2l,f,c
 25127  001EE0  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 25128  001EE2  22DA               	addwfc	fsr2h,f,c
 25129  001EE4  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25130  001EE6  50DF               	movf	indf2,w,c
 25131  001EE8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25132  001EEA  0B0F               	andlw	-241
 25133  001EEC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25134  001EEE  6EDF               	movwf	indf2,c
 25135                           
 25136                           ;../nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 25137  001EF0  EE20 F00B          	lfsr	2,11
 25138  001EF4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25139  001EF6  26D9               	addwf	fsr2l,f,c
 25140  001EF8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25141  001EFA  22DA               	addwfc	fsr2h,f,c
 25142  001EFC  50DF               	movf	indf2,w,c
 25143  001EFE  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25144  001F00  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 25145  001F06  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 25146  001F0C  50DF               	movf	indf2,w,c
 25147  001F0E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25148  001F10  0BF0               	andlw	-16
 25149  001F12  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25150  001F14  6EDF               	movwf	indf2,c
 25151                           
 25152                           ;../nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadi
      +                          us;
 25153  001F16  EE20 F00B          	lfsr	2,11
 25154  001F1A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25155  001F1C  26D9               	addwf	fsr2l,f,c
 25156  001F1E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25157  001F20  22DA               	addwfc	fsr2h,f,c
 25158  001F22  50DF               	movf	indf2,w,c
 25159  001F24  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25160  001F26  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 25161  001F2C  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 25162  001F32  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25163  001F34  50DF               	movf	indf2,w,c
 25164  001F36  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25165  001F38  0B0F               	andlw	-241
 25166  001F3A  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25167  001F3C  6EDF               	movwf	indf2,c
 25168                           
 25169                           ;../nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_
      +                          t);
 25170  001F3E  EE20 F081          	lfsr	2,129
 25171  001F42  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25172  001F44  26D9               	addwf	fsr2l,f,c
 25173  001F46  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25174  001F48  22DA               	addwfc	fsr2h,f,c
 25175  001F4A  0E02               	movlw	2
 25176  001F4C  26DE               	addwf	postinc2,f,c
 25177  001F4E  0E00               	movlw	0
 25178  001F50  22DD               	addwfc	postdec2,f,c
 25179                           
 25180                           ;../nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 25181  001F52  EE20 F001          	lfsr	2,1
 25182  001F56  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25183  001F58  26D9               	addwf	fsr2l,f,c
 25184  001F5A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25185  001F5C  22DA               	addwfc	fsr2h,f,c
 25186  001F5E  0E02               	movlw	2
 25187  001F60  26DF               	addwf	indf2,f,c
 25188  001F62                     l1779:
 25189                           
 25190                           ;../nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 25191  001F62  0101               	movlb	1	; () banked
 25192  001F64  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 25193  001F66  EE20 F00C          	lfsr	2,12
 25194  001F6A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25195  001F6C  26D9               	addwf	fsr2l,f,c
 25196  001F6E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25197  001F70  22DA               	addwfc	fsr2h,f,c
 25198  001F72  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 25199                           
 25200                           ;../nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
 25201  001F78  EE20 F00D          	lfsr	2,13
 25202  001F7C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25203  001F7E  26D9               	addwf	fsr2l,f,c
 25204  001F80  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25205  001F82  22DA               	addwfc	fsr2h,f,c
 25206  001F84  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25207  001F8A  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25208                           
 25209                           ; BSR set to: 1
 25210                           ;../nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
 25211  001F90  EE20 F005          	lfsr	2,5
 25212  001F94  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25213  001F96  26D9               	addwf	fsr2l,f,c
 25214  001F98  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25215  001F9A  22DA               	addwfc	fsr2h,f,c
 25216  001F9C  EE10 F00F          	lfsr	1,15
 25217  001FA0  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25218  001FA2  26E1               	addwf	fsr1l,f,c
 25219  001FA4  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25220  001FA6  22E2               	addwfc	fsr1h,f,c
 25221  001FA8  006F FF7B FFE6     	movff	postinc2,postinc1
 25222  001FAE  006F FF77 FFE5     	movff	postdec2,postdec1
 25223                           
 25224                           ; BSR set to: 1
 25225                           ;../nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 25226  001FB4  EE20 F008          	lfsr	2,8
 25227  001FB8  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25228  001FBA  26D9               	addwf	fsr2l,f,c
 25229  001FBC  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25230  001FBE  22DA               	addwfc	fsr2h,f,c
 25231  001FC0  50DF               	movf	indf2,w,c
 25232  001FC2  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25233  001FC4  EE20 F011          	lfsr	2,17
 25234  001FC8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25235  001FCA  26D9               	addwf	fsr2l,f,c
 25236  001FCC  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25237  001FCE  22DA               	addwfc	fsr2h,f,c
 25238  001FD0  50DF               	movf	indf2,w,c
 25239  001FD2  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25240  001FD4  0BF0               	andlw	-16
 25241  001FD6  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25242  001FD8  6EDF               	movwf	indf2,c
 25243                           
 25244                           ; BSR set to: 1
 25245                           ;../nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 25246  001FDA  EE20 F007          	lfsr	2,7
 25247  001FDE  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25248  001FE0  26D9               	addwf	fsr2l,f,c
 25249  001FE2  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25250  001FE4  22DA               	addwfc	fsr2h,f,c
 25251  001FE6  50DF               	movf	indf2,w,c
 25252  001FE8  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25253  001FEA  EE20 F011          	lfsr	2,17
 25254  001FEE  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25255  001FF0  26D9               	addwf	fsr2l,f,c
 25256  001FF2  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25257  001FF4  22DA               	addwfc	fsr2h,f,c
 25258  001FF6  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25259  001FF8  50DF               	movf	indf2,w,c
 25260  001FFA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25261  001FFC  0B0F               	andlw	-241
 25262  001FFE  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25263  002000  6EDF               	movwf	indf2,c
 25264                           
 25265                           ; BSR set to: 1
 25266                           ;../nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
 25267  002002  EE20 F081          	lfsr	2,129
 25268  002006  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25269  002008  26D9               	addwf	fsr2l,f,c
 25270  00200A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25271  00200C  22DA               	addwfc	fsr2h,f,c
 25272  00200E  006F FF78  F008    	movff	postinc2,memcpy@d1
 25273  002014  006F FF74  F009    	movff	postdec2,memcpy@d1+1
 25274  00201A  EE20 F00C          	lfsr	2,12
 25275  00201E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25276  002020  26D9               	addwf	fsr2l,f,c
 25277  002022  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25278  002024  22DA               	addwfc	fsr2h,f,c
 25279  002026  006F FF78  F00A    	movff	postinc2,memcpy@s1
 25280  00202C  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 25281  002032  EE20 F00E          	lfsr	2,14
 25282  002036  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25283  002038  26D9               	addwf	fsr2l,f,c
 25284  00203A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25285  00203C  22DA               	addwfc	fsr2h,f,c
 25286  00203E  50DF               	movf	indf2,w,c
 25287  002040  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25288  002042  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25289  002044  6E0C               	movwf	memcpy@n^0,c
 25290  002046  6A0D               	clrf	(memcpy@n+1)^0,c
 25291  002048  EC50  F03A         	call	_memcpy	;wreg free
 25292                           
 25293                           ;../nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
 25294  00204C  EE20 F00E          	lfsr	2,14
 25295  002050  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25296  002052  26D9               	addwf	fsr2l,f,c
 25297  002054  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25298  002056  22DA               	addwfc	fsr2h,f,c
 25299  002058  50DF               	movf	indf2,w,c
 25300  00205A  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25301  00205C  EE20 F001          	lfsr	2,1
 25302  002060  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25303  002062  26D9               	addwf	fsr2l,f,c
 25304  002064  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25305  002066  22DA               	addwfc	fsr2h,f,c
 25306  002068  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25307  00206A  26DF               	addwf	indf2,f,c
 25308                           
 25309                           ;../nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
 25310  00206C  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 25311  002072  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 25312  002078  ECF1  F01D         	call	_nwkTxFrame	;wreg free
 25313  00207C  0012               	return		;funcret
 25314  00207E                     __end_of_nwkDataReqSendFrame:
 25315                           	opt callstack 0
 25316                           
 25317 ;; *************** function _nwkTxFrame *****************
 25318 ;; Defined at:
 25319 ;;		line 109 in file "../nwk/nwk_src/nwkTx.c"
 25320 ;; Parameters:    Size  Location     Type
 25321 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 25322 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25323 ;; Auto vars:     Size  Location     Type
 25324 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
 25325 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25326 ;; Return value:  Size  Location     Type
 25327 ;;                  1    wreg      void 
 25328 ;; Registers used:
 25329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25330 ;; Tracked objects:
 25331 ;;		On entry : 0/1
 25332 ;;		On exit  : 3F/1
 25333 ;;		Unchanged: 0/0
 25334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25338 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25339 ;;Total ram usage:        6 bytes
 25340 ;; Hardware stack levels used:    1
 25341 ;; Hardware stack levels required when called:   10
 25342 ;; This function calls:
 25343 ;;		_nwkRoutePrepareTx
 25344 ;;		_rand
 25345 ;; This function is called by:
 25346 ;;		_nwkDataReqSendFrame
 25347 ;;		_nwkRouteFrame
 25348 ;;		_nwkRouteSendRouteError
 25349 ;;		_nwkRxSendAck
 25350 ;; This function uses a non-reentrant model
 25351 ;;
 25352                           
 25353                           	psect	text156
 25354  003BE2                     __ptext156:
 25355                           	opt callstack 0
 25356  003BE2                     _nwkTxFrame:
 25357                           	opt callstack 15
 25358                           
 25359                           ;../nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);../nwk/nwk_src/nwkTx.c:
      +                           110: {;../nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 25360                           
 25361                           ;incstack = 0
 25362  003BE2  0E02               	movlw	2
 25363  003BE4  2424               	addwf	nwkTxFrame@frame^0,w,c
 25364  003BE6  6E28               	movwf	nwkTxFrame@header^0,c
 25365  003BE8  0E00               	movlw	0
 25366  003BEA  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
 25367  003BEC  6E29               	movwf	(nwkTxFrame@header+1)^0,c
 25368                           
 25369                           ;../nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 25370  003BEE  EE20 F086          	lfsr	2,134
 25371  003BF2  5024               	movf	nwkTxFrame@frame^0,w,c
 25372  003BF4  26D9               	addwf	fsr2l,f,c
 25373  003BF6  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25374  003BF8  22DA               	addwfc	fsr2h,f,c
 25375  003BFA  A2DF               	btfss	indf2,1,c
 25376  003BFC  D000               	goto	u14430
 25377  003BFE                     u14430:
 25378                           
 25379                           ;../nwk/nwk_src/nwkTx.c: 118:   {;../nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_
      +                          TX_STATE_DELAY;
 25380                           
 25381                           ;../nwk/nwk_src/nwkTx.c: 116:   }
 25382                           
 25383                           ;../nwk/nwk_src/nwkTx.c: 114:   {;../nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX
      +                          _STATE_DELAY;
 25384  003BFE  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 25385  003C04  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 25386  003C0A  0E12               	movlw	18
 25387  003C0C  6EDF               	movwf	indf2,c
 25388                           
 25389                           ;../nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 25390  003C0E  EE20 F083          	lfsr	2,131
 25391  003C12  5024               	movf	nwkTxFrame@frame^0,w,c
 25392  003C14  26D9               	addwf	fsr2l,f,c
 25393  003C16  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25394  003C18  22DA               	addwfc	fsr2h,f,c
 25395  003C1A  0E00               	movlw	0
 25396  003C1C  6EDF               	movwf	indf2,c
 25397                           
 25398                           ;../nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 25399  003C1E  EE20 F086          	lfsr	2,134
 25400  003C22  5024               	movf	nwkTxFrame@frame^0,w,c
 25401  003C24  26D9               	addwf	fsr2l,f,c
 25402  003C26  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25403  003C28  22DA               	addwfc	fsr2h,f,c
 25404  003C2A  A0DF               	btfss	indf2,0,c
 25405  003C2C  D00B               	goto	l14871
 25406                           
 25407                           ;../nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 25408  003C2E  EE20 F003          	lfsr	2,3
 25409  003C32  5028               	movf	nwkTxFrame@header^0,w,c
 25410  003C34  26D9               	addwf	fsr2l,f,c
 25411  003C36  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25412  003C38  22DA               	addwfc	fsr2h,f,c
 25413  003C3A  0EFF               	movlw	255
 25414  003C3C  6EDE               	movwf	postinc2,c
 25415  003C3E  0EFF               	movlw	255
 25416  003C40  6EDD               	movwf	postdec2,c
 25417  003C42  D00C               	goto	l2297
 25418  003C44                     l14871:
 25419                           
 25420                           ;../nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 25421  003C44  EE20 F003          	lfsr	2,3
 25422  003C48  5028               	movf	nwkTxFrame@header^0,w,c
 25423  003C4A  26D9               	addwf	fsr2l,f,c
 25424  003C4C  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25425  003C4E  22DA               	addwfc	fsr2h,f,c
 25426  003C50  0060  F40B  FFDE   	movff	_nwkIb+2,postinc2
 25427  003C56  0060  F40F  FFDD   	movff	_nwkIb+3,postdec2
 25428  003C5C                     l2297:
 25429                           
 25430                           ;../nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK
      +                          ) &&
 25431  003C5C  EE20 F086          	lfsr	2,134
 25432  003C60  5024               	movf	nwkTxFrame@frame^0,w,c
 25433  003C62  26D9               	addwf	fsr2l,f,c
 25434  003C64  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25435  003C66  22DA               	addwfc	fsr2h,f,c
 25436  003C68  B4DF               	btfsc	indf2,2,c
 25437  003C6A  D011               	goto	l14877
 25438  003C6C  EE20 F086          	lfsr	2,134
 25439  003C70  5024               	movf	nwkTxFrame@frame^0,w,c
 25440  003C72  26D9               	addwf	fsr2l,f,c
 25441  003C74  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25442  003C76  22DA               	addwfc	fsr2h,f,c
 25443  003C78  B0DF               	btfsc	indf2,0,c
 25444  003C7A  D009               	goto	l14877
 25445                           
 25446                           ;../nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 25447  003C7C  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 25448  003C82  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 25449  003C88  ECAF  F028         	call	_nwkRoutePrepareTx	;wreg free
 25450  003C8C  D012               	goto	l14879
 25451  003C8E                     l14877:
 25452                           
 25453                           ;../nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 25454  003C8E  EE20 F00D          	lfsr	2,13
 25455  003C92  5028               	movf	nwkTxFrame@header^0,w,c
 25456  003C94  26D9               	addwf	fsr2l,f,c
 25457  003C96  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25458  003C98  22DA               	addwfc	fsr2h,f,c
 25459  003C9A  EE10 F005          	lfsr	1,5
 25460  003C9E  5028               	movf	nwkTxFrame@header^0,w,c
 25461  003CA0  26E1               	addwf	fsr1l,f,c
 25462  003CA2  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25463  003CA4  22E2               	addwfc	fsr1h,f,c
 25464  003CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 25465  003CAC  006F FF77 FFE5     	movff	postdec2,postdec1
 25466  003CB2                     l14879:
 25467                           
 25468                           ;../nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 25469  003CB2  EE20 F007          	lfsr	2,7
 25470  003CB6  5028               	movf	nwkTxFrame@header^0,w,c
 25471  003CB8  26D9               	addwf	fsr2l,f,c
 25472  003CBA  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25473  003CBC  22DA               	addwfc	fsr2h,f,c
 25474  003CBE  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25475  003CC4  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25476                           
 25477                           ;../nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 25478  003CCA  0101               	movlb	1	; () banked
 25479  003CCC  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 25480  003CCE  EE20 F002          	lfsr	2,2
 25481  003CD2  5028               	movf	nwkTxFrame@header^0,w,c
 25482  003CD4  26D9               	addwf	fsr2l,f,c
 25483  003CD6  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25484  003CD8  22DA               	addwfc	fsr2h,f,c
 25485  003CDA  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 25486                           
 25487                           ; BSR set to: 1
 25488                           ;../nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 25489  003CE0  EE20 F005          	lfsr	2,5
 25490  003CE4  5028               	movf	nwkTxFrame@header^0,w,c
 25491  003CE6  26D9               	addwf	fsr2l,f,c
 25492  003CE8  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25493  003CEA  22DA               	addwfc	fsr2h,f,c
 25494  003CEC  28DE               	incf	postinc2,w,c
 25495  003CEE  E124               	bnz	l14889
 25496  003CF0  28DE               	incf	postinc2,w,c
 25497  003CF2  A4D8               	btfss	status,2,c
 25498  003CF4  D021               	goto	l14889
 25499                           
 25500                           ; BSR set to: 1
 25501                           ;../nwk/nwk_src/nwkTx.c: 146:   {;../nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x88
      +                          41;
 25502  003CF6  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25503  003CFC  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25504  003D02  0E41               	movlw	65
 25505  003D04  6EDE               	movwf	postinc2,c
 25506  003D06  0E88               	movlw	136
 25507  003D08  6EDD               	movwf	postdec2,c
 25508                           
 25509                           ; BSR set to: 1
 25510                           ;../nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 25511  003D0A  EC28  F028         	call	_rand	;wreg free
 25512  003D0E  0E07               	movlw	7
 25513  003D10  161A               	andwf	?_rand^0,f,c
 25514  003D12  0E00               	movlw	0
 25515  003D14  161B               	andwf	(?_rand+1)^0,f,c
 25516  003D16  0E01               	movlw	1
 25517  003D18  261A               	addwf	?_rand^0,f,c
 25518  003D1A  0E00               	movlw	0
 25519  003D1C  221B               	addwfc	(?_rand+1)^0,f,c
 25520  003D1E  EE20 F084          	lfsr	2,132
 25521  003D22  5024               	movf	nwkTxFrame@frame^0,w,c
 25522  003D24  26D9               	addwf	fsr2l,f,c
 25523  003D26  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25524  003D28  22DA               	addwfc	fsr2h,f,c
 25525  003D2A  0060  F06B  FFDE   	movff	?_rand,postinc2
 25526  003D30  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 25527                           
 25528                           ;../nwk/nwk_src/nwkTx.c: 149:   }
 25529  003D36  0012               	return	
 25530  003D38                     l14889:
 25531                           
 25532                           ; BSR set to: 1
 25533                           ;../nwk/nwk_src/nwkTx.c: 151:   {;../nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x88
      +                          61;
 25534  003D38  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25535  003D3E  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25536  003D44  0E61               	movlw	97
 25537  003D46  6EDE               	movwf	postinc2,c
 25538  003D48  0E88               	movlw	136
 25539  003D4A  6EDD               	movwf	postdec2,c
 25540                           
 25541                           ; BSR set to: 1
 25542                           ;../nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 25543  003D4C  EE20 F084          	lfsr	2,132
 25544  003D50  5024               	movf	nwkTxFrame@frame^0,w,c
 25545  003D52  26D9               	addwf	fsr2l,f,c
 25546  003D54  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25547  003D56  22DA               	addwfc	fsr2h,f,c
 25548  003D58  0E00               	movlw	0
 25549  003D5A  6EDE               	movwf	postinc2,c
 25550  003D5C  0E00               	movlw	0
 25551  003D5E  6EDD               	movwf	postdec2,c
 25552                           
 25553                           ; BSR set to: 1
 25554  003D60  0012               	return		;funcret
 25555  003D62                     __end_of_nwkTxFrame:
 25556                           	opt callstack 0
 25557                           
 25558 ;; *************** function _rand *****************
 25559 ;; Defined at:
 25560 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 25561 ;; Parameters:    Size  Location     Type
 25562 ;;		None
 25563 ;; Auto vars:     Size  Location     Type
 25564 ;;		None
 25565 ;; Return value:  Size  Location     Type
 25566 ;;                  2   25[COMRAM] int 
 25567 ;; Registers used:
 25568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25569 ;; Tracked objects:
 25570 ;;		On entry : 0/1
 25571 ;;		On exit  : 3F/1
 25572 ;;		Unchanged: 0/0
 25573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25576 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25577 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25578 ;;Total ram usage:       10 bytes
 25579 ;; Hardware stack levels used:    1
 25580 ;; Hardware stack levels required when called:    8
 25581 ;; This function calls:
 25582 ;;		___omul
 25583 ;; This function is called by:
 25584 ;;		_nwkTxFrame
 25585 ;;		_nwkTxBroadcastFrame
 25586 ;; This function uses a non-reentrant model
 25587 ;;
 25588                           
 25589                           	psect	text157
 25590  005050                     __ptext157:
 25591                           	opt callstack 0
 25592  005050                     _rand:
 25593                           	opt callstack 17
 25594                           
 25595                           ; BSR set to: 1
 25596                           ;incstack = 0
 25597  005050  0060  F720  F002   	movff	_seed,___omul@multiplier
 25598  005056  0060  F724  F003   	movff	_seed+1,___omul@multiplier+1
 25599  00505C  0060  F728  F004   	movff	_seed+2,___omul@multiplier+2
 25600  005062  0060  F72C  F005   	movff	_seed+3,___omul@multiplier+3
 25601  005068  0060  F730  F006   	movff	_seed+4,___omul@multiplier+4
 25602  00506E  0060  F734  F007   	movff	_seed+5,___omul@multiplier+5
 25603  005074  0060  F738  F008   	movff	_seed+6,___omul@multiplier+6
 25604  00507A  0060  F73C  F009   	movff	_seed+7,___omul@multiplier+7
 25605  005080  0E2D               	movlw	45
 25606  005082  6E0A               	movwf	___omul@multiplicand^0,c
 25607  005084  0E7F               	movlw	127
 25608  005086  6E0B               	movwf	(___omul@multiplicand+1)^0,c
 25609  005088  0E95               	movlw	149
 25610  00508A  6E0C               	movwf	(___omul@multiplicand+2)^0,c
 25611  00508C  0E4C               	movlw	76
 25612  00508E  6E0D               	movwf	(___omul@multiplicand+3)^0,c
 25613  005090  0E2D               	movlw	45
 25614  005092  6E0E               	movwf	(___omul@multiplicand+4)^0,c
 25615  005094  0EF4               	movlw	244
 25616  005096  6E0F               	movwf	(___omul@multiplicand+5)^0,c
 25617  005098  0E51               	movlw	81
 25618  00509A  6E10               	movwf	(___omul@multiplicand+6)^0,c
 25619  00509C  0E58               	movlw	88
 25620  00509E  6E11               	movwf	(___omul@multiplicand+7)^0,c
 25621  0050A0  ECFC  F035         	call	___omul	;wreg free
 25622  0050A4  0060  F008  F01C   	movff	?___omul,??_rand
 25623  0050AA  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
 25624  0050B0  0060  F010  F01E   	movff	?___omul+2,??_rand+2
 25625  0050B6  0060  F014  F01F   	movff	?___omul+3,??_rand+3
 25626  0050BC  0060  F018  F020   	movff	?___omul+4,??_rand+4
 25627  0050C2  0060  F01C  F021   	movff	?___omul+5,??_rand+5
 25628  0050C8  0060  F020  F022   	movff	?___omul+6,??_rand+6
 25629  0050CE  0060  F024  F023   	movff	?___omul+7,??_rand+7
 25630  0050D4  0E01               	movlw	1
 25631  0050D6  241C               	addwf	??_rand^0,w,c
 25632  0050D8  0101               	movlb	1	; () banked
 25633  0050DA  6FC8               	movwf	_seed& (0+255),b
 25634  0050DC  0E00               	movlw	0
 25635  0050DE  201D               	addwfc	(??_rand+1)^0,w,c
 25636  0050E0  6FC9               	movwf	(_seed+1)& (0+255),b
 25637  0050E2  0E00               	movlw	0
 25638  0050E4  201E               	addwfc	(??_rand+2)^0,w,c
 25639  0050E6  6FCA               	movwf	(_seed+2)& (0+255),b
 25640  0050E8  0E00               	movlw	0
 25641  0050EA  201F               	addwfc	(??_rand+3)^0,w,c
 25642  0050EC  6FCB               	movwf	(_seed+3)& (0+255),b
 25643  0050EE  0E00               	movlw	0
 25644  0050F0  2020               	addwfc	(??_rand+4)^0,w,c
 25645  0050F2  6FCC               	movwf	(_seed+4)& (0+255),b
 25646  0050F4  0E00               	movlw	0
 25647  0050F6  2021               	addwfc	(??_rand+5)^0,w,c
 25648  0050F8  6FCD               	movwf	(_seed+5)& (0+255),b
 25649  0050FA  0E00               	movlw	0
 25650  0050FC  2022               	addwfc	(??_rand+6)^0,w,c
 25651  0050FE  6FCE               	movwf	(_seed+6)& (0+255),b
 25652  005100  0E00               	movlw	0
 25653  005102  2023               	addwfc	(??_rand+7)^0,w,c
 25654  005104  6FCF               	movwf	(_seed+7)& (0+255),b
 25655                           
 25656                           ; BSR set to: 1
 25657  005106  0060  F720  F01C   	movff	_seed,??_rand
 25658  00510C  0060  F724  F01D   	movff	_seed+1,??_rand+1
 25659  005112  0060  F728  F01E   	movff	_seed+2,??_rand+2
 25660  005118  0060  F72C  F01F   	movff	_seed+3,??_rand+3
 25661  00511E  0060  F730  F020   	movff	_seed+4,??_rand+4
 25662  005124  0060  F734  F021   	movff	_seed+5,??_rand+5
 25663  00512A  0060  F738  F022   	movff	_seed+6,??_rand+6
 25664  005130  0060  F73C  F023   	movff	_seed+7,??_rand+7
 25665  005136  0E32               	movlw	50
 25666  005138  D009               	goto	u14310
 25667  00513A                     u14315:
 25668  00513A  90D8               	bcf	status,0,c
 25669  00513C  3223               	rrcf	(??_rand+7)^0,f,c
 25670  00513E  3222               	rrcf	(??_rand+6)^0,f,c
 25671  005140  3221               	rrcf	(??_rand+5)^0,f,c
 25672  005142  3220               	rrcf	(??_rand+4)^0,f,c
 25673  005144  321F               	rrcf	(??_rand+3)^0,f,c
 25674  005146  321E               	rrcf	(??_rand+2)^0,f,c
 25675  005148  321D               	rrcf	(??_rand+1)^0,f,c
 25676  00514A  321C               	rrcf	??_rand^0,f,c
 25677  00514C                     u14310:
 25678  00514C  2EE8               	decfsz	wreg,f,c
 25679  00514E  D7F5               	goto	u14315
 25680  005150  0060  F070  F01A   	movff	??_rand,?_rand
 25681  005156  0060  F078  F01B   	movff	??_rand+2,?_rand+1
 25682                           
 25683                           ; BSR set to: 1
 25684  00515C  0012               	return		;funcret
 25685  00515E                     __end_of_rand:
 25686                           	opt callstack 0
 25687                           
 25688 ;; *************** function ___omul *****************
 25689 ;; Defined at:
 25690 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 25691 ;; Parameters:    Size  Location     Type
 25692 ;;  multiplier      8    1[COMRAM] unsigned long long 
 25693 ;;  multiplicand    8    9[COMRAM] unsigned long long 
 25694 ;; Auto vars:     Size  Location     Type
 25695 ;;  product         8   17[COMRAM] unsigned long long 
 25696 ;; Return value:  Size  Location     Type
 25697 ;;                  8    1[COMRAM] unsigned long long 
 25698 ;; Registers used:
 25699 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25700 ;; Tracked objects:
 25701 ;;		On entry : 0/1
 25702 ;;		On exit  : 0/0
 25703 ;;		Unchanged: 0/0
 25704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25705 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25706 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25708 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25709 ;;Total ram usage:       24 bytes
 25710 ;; Hardware stack levels used:    1
 25711 ;; Hardware stack levels required when called:    7
 25712 ;; This function calls:
 25713 ;;		Nothing
 25714 ;; This function is called by:
 25715 ;;		_rand
 25716 ;; This function uses a non-reentrant model
 25717 ;;
 25718                           
 25719                           	psect	text158
 25720  006BF8                     __ptext158:
 25721                           	opt callstack 0
 25722  006BF8                     ___omul:
 25723                           	opt callstack 17
 25724                           
 25725                           ; BSR set to: 1
 25726                           ;incstack = 0
 25727  006BF8  EE20  F012         	lfsr	2,___omul@product
 25728  006BFC  0E07               	movlw	7
 25729  006BFE                     u14141:
 25730  006BFE  6ADE               	clrf	postinc2,c
 25731  006C00  06E8               	decf	wreg,f,c
 25732  006C02  E2FD               	bc	u14141
 25733  006C04                     l14621:
 25734  006C04  A002               	btfss	___omul@multiplier^0,0,c
 25735  006C06  D010               	goto	l14625
 25736  006C08  500A               	movf	___omul@multiplicand^0,w,c
 25737  006C0A  2612               	addwf	___omul@product^0,f,c
 25738  006C0C  500B               	movf	(___omul@multiplicand+1)^0,w,c
 25739  006C0E  2213               	addwfc	(___omul@product+1)^0,f,c
 25740  006C10  500C               	movf	(___omul@multiplicand+2)^0,w,c
 25741  006C12  2214               	addwfc	(___omul@product+2)^0,f,c
 25742  006C14  500D               	movf	(___omul@multiplicand+3)^0,w,c
 25743  006C16  2215               	addwfc	(___omul@product+3)^0,f,c
 25744  006C18  500E               	movf	(___omul@multiplicand+4)^0,w,c
 25745  006C1A  2216               	addwfc	(___omul@product+4)^0,f,c
 25746  006C1C  500F               	movf	(___omul@multiplicand+5)^0,w,c
 25747  006C1E  2217               	addwfc	(___omul@product+5)^0,f,c
 25748  006C20  5010               	movf	(___omul@multiplicand+6)^0,w,c
 25749  006C22  2218               	addwfc	(___omul@product+6)^0,f,c
 25750  006C24  5011               	movf	(___omul@multiplicand+7)^0,w,c
 25751  006C26  2219               	addwfc	(___omul@product+7)^0,f,c
 25752  006C28                     l14625:
 25753  006C28  90D8               	bcf	status,0,c
 25754  006C2A  360A               	rlcf	___omul@multiplicand^0,f,c
 25755  006C2C  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 25756  006C2E  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 25757  006C30  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 25758  006C32  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 25759  006C34  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 25760  006C36  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 25761  006C38  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 25762  006C3A  90D8               	bcf	status,0,c
 25763  006C3C  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 25764  006C3E  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 25765  006C40  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 25766  006C42  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 25767  006C44  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 25768  006C46  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 25769  006C48  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 25770  006C4A  3202               	rrcf	___omul@multiplier^0,f,c
 25771  006C4C  5002               	movf	___omul@multiplier^0,w,c
 25772  006C4E  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 25773  006C50  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 25774  006C52  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 25775  006C54  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 25776  006C56  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 25777  006C58  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 25778  006C5A  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 25779  006C5C  A4D8               	btfss	status,2,c
 25780  006C5E  D7D2               	goto	l14621
 25781  006C60  0060  F048  F002   	movff	___omul@product,?___omul
 25782  006C66  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 25783  006C6C  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 25784  006C72  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 25785  006C78  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 25786  006C7E  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 25787  006C84  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 25788  006C8A  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 25789  006C90  0012               	return		;funcret
 25790  006C92                     __end_of___omul:
 25791                           	opt callstack 0
 25792                           
 25793 ;; *************** function _nwkRoutePrepareTx *****************
 25794 ;; Defined at:
 25795 ;;		line 264 in file "../nwk/nwk_src/nwkRoute.c"
 25796 ;; Parameters:    Size  Location     Type
 25797 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 25798 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25799 ;; Auto vars:     Size  Location     Type
 25800 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 25801 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25802 ;; Return value:  Size  Location     Type
 25803 ;;                  1    wreg      void 
 25804 ;; Registers used:
 25805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25806 ;; Tracked objects:
 25807 ;;		On entry : 0/1
 25808 ;;		On exit  : 0/0
 25809 ;;		Unchanged: 0/0
 25810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25815 ;;Total ram usage:        6 bytes
 25816 ;; Hardware stack levels used:    1
 25817 ;; Hardware stack levels required when called:    9
 25818 ;; This function calls:
 25819 ;;		_NWK_GroupIsMember
 25820 ;;		_NWK_RouteNextHop
 25821 ;; This function is called by:
 25822 ;;		_nwkTxFrame
 25823 ;; This function uses a non-reentrant model
 25824 ;;
 25825                           
 25826                           	psect	text159
 25827  00515E                     __ptext159:
 25828                           	opt callstack 0
 25829  00515E                     _nwkRoutePrepareTx:
 25830                           	opt callstack 15
 25831                           
 25832                           ;../nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 265: {;../nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 25833                           
 25834                           ;incstack = 0
 25835  00515E  0E02               	movlw	2
 25836  005160  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 25837  005162  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 25838  005164  0E00               	movlw	0
 25839  005166  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 25840  005168  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 25841                           
 25842                           ;../nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 25843  00516A  EE20 F00D          	lfsr	2,13
 25844  00516E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25845  005170  26D9               	addwf	fsr2l,f,c
 25846  005172  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25847  005174  22DA               	addwfc	fsr2h,f,c
 25848  005176  28DE               	incf	postinc2,w,c
 25849  005178  E10E               	bnz	l14673
 25850  00517A  28DE               	incf	postinc2,w,c
 25851  00517C  A4D8               	btfss	status,2,c
 25852  00517E  D00B               	goto	l14673
 25853                           
 25854                           ;../nwk/nwk_src/nwkRoute.c: 269:   {;../nwk/nwk_src/nwkRoute.c: 270:     header->macDstA
      +                          ddr = 0xffff;
 25855  005180  EE20 F005          	lfsr	2,5
 25856  005184  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25857  005186  26D9               	addwf	fsr2l,f,c
 25858  005188  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25859  00518A  22DA               	addwfc	fsr2h,f,c
 25860  00518C  0EFF               	movlw	255
 25861  00518E  6EDE               	movwf	postinc2,c
 25862  005190  0EFF               	movlw	255
 25863  005192  6EDD               	movwf	postdec2,c
 25864                           
 25865                           ;../nwk/nwk_src/nwkRoute.c: 271:   }
 25866  005194  0012               	return	
 25867  005196                     l14673:
 25868  005196  EE20 F009          	lfsr	2,9
 25869  00519A  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25870  00519C  26D9               	addwf	fsr2l,f,c
 25871  00519E  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25872  0051A0  22DA               	addwfc	fsr2h,f,c
 25873  0051A2  A4DF               	btfss	indf2,2,c
 25874  0051A4  D013               	goto	l14677
 25875                           
 25876                           ;../nwk/nwk_src/nwkRoute.c: 274:   {;../nwk/nwk_src/nwkRoute.c: 275:     header->macDstA
      +                          ddr = header->nwkDstAddr;
 25877  0051A6  EE20 F00D          	lfsr	2,13
 25878  0051AA  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25879  0051AC  26D9               	addwf	fsr2l,f,c
 25880  0051AE  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25881  0051B0  22DA               	addwfc	fsr2h,f,c
 25882  0051B2  EE10 F005          	lfsr	1,5
 25883  0051B6  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25884  0051B8  26E1               	addwf	fsr1l,f,c
 25885  0051BA  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25886  0051BC  22E2               	addwfc	fsr1h,f,c
 25887  0051BE  006F FF7B FFE6     	movff	postinc2,postinc1
 25888  0051C4  006F FF77 FFE5     	movff	postdec2,postdec1
 25889                           
 25890                           ;../nwk/nwk_src/nwkRoute.c: 276:   }
 25891  0051CA  0012               	return	
 25892  0051CC                     l14677:
 25893  0051CC  EE20 F009          	lfsr	2,9
 25894  0051D0  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25895  0051D2  26D9               	addwf	fsr2l,f,c
 25896  0051D4  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25897  0051D6  22DA               	addwfc	fsr2h,f,c
 25898  0051D8  A6DF               	btfss	indf2,3,c
 25899  0051DA  D023               	goto	l14683
 25900  0051DC  EE20 F00D          	lfsr	2,13
 25901  0051E0  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25902  0051E2  26D9               	addwf	fsr2l,f,c
 25903  0051E4  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25904  0051E6  22DA               	addwfc	fsr2h,f,c
 25905  0051E8  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 25906  0051EE  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 25907  0051F4  EC8D  F043         	call	_NWK_GroupIsMember	;wreg free
 25908  0051F8  0900               	iorlw	0
 25909  0051FA  B4D8               	btfsc	status,2,c
 25910  0051FC  D012               	goto	l14683
 25911                           
 25912                           ;../nwk/nwk_src/nwkRoute.c: 280:   {;../nwk/nwk_src/nwkRoute.c: 281:     header->macDstA
      +                          ddr = 0xffff;
 25913  0051FE  EE20 F005          	lfsr	2,5
 25914  005202  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25915  005204  26D9               	addwf	fsr2l,f,c
 25916  005206  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25917  005208  22DA               	addwfc	fsr2h,f,c
 25918  00520A  0EFF               	movlw	255
 25919  00520C  6EDE               	movwf	postinc2,c
 25920  00520E  0EFF               	movlw	255
 25921  005210  6EDD               	movwf	postdec2,c
 25922                           
 25923                           ;../nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 25924  005212  EE20 F009          	lfsr	2,9
 25925  005216  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25926  005218  26D9               	addwf	fsr2l,f,c
 25927  00521A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25928  00521C  22DA               	addwfc	fsr2h,f,c
 25929  00521E  84DF               	bsf	indf2,2,c
 25930                           
 25931                           ;../nwk/nwk_src/nwkRoute.c: 283:   }
 25932  005220  0012               	return	
 25933  005222                     l14683:
 25934                           
 25935                           ;../nwk/nwk_src/nwkRoute.c: 287:   {;../nwk/nwk_src/nwkRoute.c: 288:     header->macDstA
      +                          ddr = NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 25936  005222  EE20 F00D          	lfsr	2,13
 25937  005226  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25938  005228  26D9               	addwf	fsr2l,f,c
 25939  00522A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25940  00522C  22DA               	addwfc	fsr2h,f,c
 25941  00522E  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 25942  005234  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 25943  00523A  EE20 F009          	lfsr	2,9
 25944  00523E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25945  005240  26D9               	addwf	fsr2l,f,c
 25946  005242  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25947  005244  22DA               	addwfc	fsr2h,f,c
 25948  005246  0E00               	movlw	0
 25949  005248  B6DF               	btfsc	indf2,3,c
 25950  00524A  0E01               	movlw	1
 25951  00524C  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 25952  00524E  EC6B  F03F         	call	_NWK_RouteNextHop	;wreg free
 25953  005252  EE20 F005          	lfsr	2,5
 25954  005256  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25955  005258  26D9               	addwf	fsr2l,f,c
 25956  00525A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25957  00525C  22DA               	addwfc	fsr2h,f,c
 25958  00525E  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 25959  005264  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 25960  00526A  0012               	return		;funcret
 25961  00526C                     __end_of_nwkRoutePrepareTx:
 25962                           	opt callstack 0
 25963                           
 25964 ;; *************** function _NWK_RouteNextHop *****************
 25965 ;; Defined at:
 25966 ;;		line 144 in file "../nwk/nwk_src/nwkRoute.c"
 25967 ;; Parameters:    Size  Location     Type
 25968 ;;  dst             2    7[COMRAM] unsigned short 
 25969 ;;  multicast       1    9[COMRAM] unsigned char 
 25970 ;; Auto vars:     Size  Location     Type
 25971 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 25972 ;;		 -> nwkRouteTable(70), NULL(0), 
 25973 ;; Return value:  Size  Location     Type
 25974 ;;                  2    7[COMRAM] unsigned short 
 25975 ;; Registers used:
 25976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25977 ;; Tracked objects:
 25978 ;;		On entry : 0/1
 25979 ;;		On exit  : 0/0
 25980 ;;		Unchanged: 0/0
 25981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25982 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25986 ;;Total ram usage:        5 bytes
 25987 ;; Hardware stack levels used:    1
 25988 ;; Hardware stack levels required when called:    8
 25989 ;; This function calls:
 25990 ;;		_NWK_RouteFindEntry
 25991 ;; This function is called by:
 25992 ;;		_nwkRoutePrepareTx
 25993 ;;		_nwkRouteFrame
 25994 ;; This function uses a non-reentrant model
 25995 ;;
 25996                           
 25997                           	psect	text160
 25998  007ED6                     __ptext160:
 25999                           	opt callstack 0
 26000  007ED6                     _NWK_RouteNextHop:
 26001                           	opt callstack 15
 26002                           
 26003                           ;../nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multica
      +                          st);../nwk/nwk_src/nwkRoute.c: 145: {;../nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEn
      +                          try_t *entry;;../nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicas
      +                          t);
 26004                           
 26005                           ;incstack = 0
 26006  007ED6  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 26007  007EDC  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 26008  007EE2  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 26009  007EE8  ECCC  F03B         	call	_NWK_RouteFindEntry	;wreg free
 26010  007EEC  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 26011  007EF2  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 26012                           
 26013                           ;../nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 26014  007EF8  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 26015  007EFA  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 26016  007EFC  B4D8               	btfsc	status,2,c
 26017  007EFE  D00D               	goto	l1917
 26018                           
 26019                           ;../nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 26020  007F00  EE20 F003          	lfsr	2,3
 26021  007F04  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 26022  007F06  26D9               	addwf	fsr2l,f,c
 26023  007F08  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 26024  007F0A  22DA               	addwfc	fsr2h,f,c
 26025  007F0C  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 26026  007F12  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 26027  007F18  0012               	return	
 26028  007F1A                     l1917:
 26029                           
 26030                           ;../nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 26031  007F1A  6808               	setf	?_NWK_RouteNextHop^0,c
 26032  007F1C  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 26033  007F1E  0012               	return		;funcret
 26034  007F20                     __end_of_NWK_RouteNextHop:
 26035                           	opt callstack 0
 26036                           
 26037 ;; *************** function _NWK_RouteFindEntry *****************
 26038 ;; Defined at:
 26039 ;;		line 91 in file "../nwk/nwk_src/nwkRoute.c"
 26040 ;; Parameters:    Size  Location     Type
 26041 ;;  dst             2    1[COMRAM] unsigned short 
 26042 ;;  multicast       1    3[COMRAM] unsigned char 
 26043 ;; Auto vars:     Size  Location     Type
 26044 ;;  i               1    6[COMRAM] unsigned char 
 26045 ;; Return value:  Size  Location     Type
 26046 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 26047 ;; Registers used:
 26048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26049 ;; Tracked objects:
 26050 ;;		On entry : 0/2
 26051 ;;		On exit  : 0/0
 26052 ;;		Unchanged: 0/0
 26053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26054 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26058 ;;Total ram usage:        6 bytes
 26059 ;; Hardware stack levels used:    1
 26060 ;; Hardware stack levels required when called:    7
 26061 ;; This function calls:
 26062 ;;		Nothing
 26063 ;; This function is called by:
 26064 ;;		_NWK_RouteNextHop
 26065 ;;		_nwkRouteRemove
 26066 ;;		_nwkRouteFrameReceived
 26067 ;;		_nwkRouteFrameSent
 26068 ;; This function uses a non-reentrant model
 26069 ;;
 26070                           
 26071                           	psect	text161
 26072  007798                     __ptext161:
 26073                           	opt callstack 0
 26074  007798                     _NWK_RouteFindEntry:
 26075                           	opt callstack 19
 26076                           
 26077                           ;../nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, 
      +                          uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 92: {;../nwk/nwk_src/nwkRoute.c: 93:   for
      +                           (uint8_t i = 0; i < 10; i++)
 26078                           
 26079                           ;incstack = 0
 26080  007798  0E00               	movlw	0
 26081  00779A  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 26082  00779C                     l14387:
 26083                           
 26084                           ;../nwk/nwk_src/nwkRoute.c: 94:   {;../nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable
      +                          [i].dstAddr == dst &&
 26085  00779C  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26086  00779E  0D07               	mullw	7
 26087  0077A0  0E75               	movlw	low (_nwkRouteTable+1)
 26088  0077A2  24F3               	addwf	243,w,c
 26089  0077A4  6ED9               	movwf	fsr2l,c
 26090  0077A6  0E02               	movlw	high (_nwkRouteTable+1)
 26091  0077A8  20F4               	addwfc	prodh,w,c
 26092  0077AA  6EDA               	movwf	fsr2h,c
 26093  0077AC  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 26094  0077AE  18DE               	xorwf	postinc2,w,c
 26095  0077B0  E11E               	bnz	l14395
 26096  0077B2  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 26097  0077B4  18DE               	xorwf	postinc2,w,c
 26098  0077B6  A4D8               	btfss	status,2,c
 26099  0077B8  D01A               	goto	l14395
 26100  0077BA  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26101  0077BC  0D07               	mullw	7
 26102  0077BE  0E74               	movlw	low _nwkRouteTable
 26103  0077C0  24F3               	addwf	243,w,c
 26104  0077C2  6ED9               	movwf	fsr2l,c
 26105  0077C4  0E02               	movlw	high _nwkRouteTable
 26106  0077C6  20F4               	addwfc	prodh,w,c
 26107  0077C8  6EDA               	movwf	fsr2h,c
 26108  0077CA  0102               	movlb	2	; () banked
 26109  0077CC  A2DF               	btfss	indf2,1,c
 26110  0077CE  D002               	goto	u13860
 26111  0077D0  0E01               	movlw	1
 26112  0077D2  D001               	goto	u13866
 26113  0077D4                     u13860:
 26114  0077D4  0E00               	movlw	0
 26115  0077D6                     u13866:
 26116  0077D6  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 26117  0077D8  A4D8               	btfss	status,2,c
 26118  0077DA  D009               	goto	l14395
 26119                           
 26120                           ; BSR set to: 2
 26121                           ;../nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 26122  0077DC  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26123  0077DE  0D07               	mullw	7
 26124  0077E0  0E74               	movlw	low _nwkRouteTable
 26125  0077E2  24F3               	addwf	243,w,c
 26126  0077E4  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 26127  0077E6  0E02               	movlw	high _nwkRouteTable
 26128  0077E8  20F4               	addwfc	prodh,w,c
 26129  0077EA  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 26130  0077EC  0012               	return	
 26131  0077EE                     l14395:
 26132                           
 26133                           ;../nwk/nwk_src/nwkRoute.c: 98:   }
 26134  0077EE  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 26135  0077F0  0E09               	movlw	9
 26136  0077F2  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 26137  0077F4  D7D3               	goto	l14387
 26138                           
 26139                           ;../nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 26140  0077F6  0E00               	movlw	0
 26141  0077F8  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 26142  0077FA  0E00               	movlw	0
 26143  0077FC  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 26144  0077FE  0012               	return		;funcret
 26145  007800                     __end_of_NWK_RouteFindEntry:
 26146                           	opt callstack 0
 26147                           
 26148 ;; *************** function _NWK_GroupIsMember *****************
 26149 ;; Defined at:
 26150 ;;		line 101 in file "../nwk/nwk_src/nwkGroup.c"
 26151 ;; Parameters:    Size  Location     Type
 26152 ;;  group           2    1[COMRAM] unsigned short 
 26153 ;; Auto vars:     Size  Location     Type
 26154 ;;  i               1    5[COMRAM] unsigned char 
 26155 ;; Return value:  Size  Location     Type
 26156 ;;                  1    wreg      _Bool 
 26157 ;; Registers used:
 26158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26159 ;; Tracked objects:
 26160 ;;		On entry : 0/1
 26161 ;;		On exit  : 0/0
 26162 ;;		Unchanged: 0/0
 26163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26166 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26167 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26168 ;;Total ram usage:        5 bytes
 26169 ;; Hardware stack levels used:    1
 26170 ;; Hardware stack levels required when called:    7
 26171 ;; This function calls:
 26172 ;;		Nothing
 26173 ;; This function is called by:
 26174 ;;		_nwkRoutePrepareTx
 26175 ;;		_nwkRxHandleReceivedFrame
 26176 ;; This function uses a non-reentrant model
 26177 ;;
 26178                           
 26179                           	psect	text162
 26180  00871A                     __ptext162:
 26181                           	opt callstack 0
 26182  00871A                     _NWK_GroupIsMember:
 26183                           	opt callstack 19
 26184                           
 26185                           ;../nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);../nwk/nwk_src/
      +                          nwkGroup.c: 102: {;../nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 26186                           
 26187                           ;incstack = 0
 26188  00871A  0E00               	movlw	0
 26189  00871C  6E06               	movwf	NWK_GroupIsMember@i^0,c
 26190  00871E                     l14571:
 26191                           
 26192                           ;../nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 26193  00871E  5006               	movf	NWK_GroupIsMember@i^0,w,c
 26194  008720  0D02               	mullw	2
 26195  008722  0E00               	movlw	low _nwkGroups
 26196  008724  24F3               	addwf	243,w,c
 26197  008726  6ED9               	movwf	fsr2l,c
 26198  008728  0E02               	movlw	high _nwkGroups
 26199  00872A  20F4               	addwfc	prodh,w,c
 26200  00872C  6EDA               	movwf	fsr2h,c
 26201  00872E  5002               	movf	NWK_GroupIsMember@group^0,w,c
 26202  008730  18DE               	xorwf	postinc2,w,c
 26203  008732  E106               	bnz	l14577
 26204  008734  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 26205  008736  18DE               	xorwf	postinc2,w,c
 26206  008738  A4D8               	btfss	status,2,c
 26207  00873A  D002               	goto	l14577
 26208                           
 26209                           ;../nwk/nwk_src/nwkGroup.c: 105:       return 1;
 26210  00873C  0E01               	movlw	1
 26211  00873E  0012               	return	
 26212  008740                     l14577:
 26213  008740  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 26214  008742  0E09               	movlw	9
 26215  008744  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 26216  008746  D7EB               	goto	l14571
 26217                           
 26218                           ;../nwk/nwk_src/nwkGroup.c: 106:   return 0;
 26219  008748  0E00               	movlw	0
 26220  00874A  0012               	return		;funcret
 26221  00874C                     __end_of_NWK_GroupIsMember:
 26222                           	opt callstack 0
 26223                           
 26224 ;; *************** function _nwkFrameAlloc *****************
 26225 ;; Defined at:
 26226 ;;		line 80 in file "../nwk/nwk_src/nwkFrame.c"
 26227 ;; Parameters:    Size  Location     Type
 26228 ;;		None
 26229 ;; Auto vars:     Size  Location     Type
 26230 ;;  i               1   17[COMRAM] unsigned char 
 26231 ;; Return value:  Size  Location     Type
 26232 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 26233 ;; Registers used:
 26234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26235 ;; Tracked objects:
 26236 ;;		On entry : 0/1
 26237 ;;		On exit  : 0/0
 26238 ;;		Unchanged: 0/0
 26239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26243 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26244 ;;Total ram usage:        5 bytes
 26245 ;; Hardware stack levels used:    1
 26246 ;; Hardware stack levels required when called:    8
 26247 ;; This function calls:
 26248 ;;		_memset
 26249 ;; This function is called by:
 26250 ;;		_nwkDataReqSendFrame
 26251 ;;		_nwkRouteSendRouteError
 26252 ;;		_PHY_DataInd
 26253 ;;		_nwkRxSendAck
 26254 ;;		_nwkTxBroadcastFrame
 26255 ;; This function uses a non-reentrant model
 26256 ;;
 26257                           
 26258                           	psect	text163
 26259  0066A0                     __ptext163:
 26260                           	opt callstack 0
 26261  0066A0                     _nwkFrameAlloc:
 26262                           	opt callstack 17
 26263                           
 26264                           ;../nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 26265                           
 26266                           ;incstack = 0
 26267  0066A0  0E00               	movlw	0
 26268  0066A2  6E12               	movwf	nwkFrameAlloc@i^0,c
 26269  0066A4                     l14835:
 26270                           
 26271                           ;../nwk/nwk_src/nwkFrame.c: 83:   {;../nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STA
      +                          TE_FREE == nwkFrameFrames[i].state)
 26272  0066A4  5012               	movf	nwkFrameAlloc@i^0,w,c
 26273  0066A6  0D89               	mullw	137
 26274  0066A8  0EBD               	movlw	low _nwkFrameFrames
 26275  0066AA  24F3               	addwf	243,w,c
 26276  0066AC  6ED9               	movwf	fsr2l,c
 26277  0066AE  0E05               	movlw	high _nwkFrameFrames
 26278  0066B0  20F4               	addwfc	prodh,w,c
 26279  0066B2  6EDA               	movwf	fsr2h,c
 26280  0066B4  50DF               	movf	indf2,w,c
 26281  0066B6  A4D8               	btfss	status,2,c
 26282  0066B8  D044               	goto	l14849
 26283                           
 26284                           ;../nwk/nwk_src/nwkFrame.c: 85:     {;../nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFr
      +                          ameFrames[i], 0, sizeof(NwkFrame_t));
 26285  0066BA  5012               	movf	nwkFrameAlloc@i^0,w,c
 26286  0066BC  0D89               	mullw	137
 26287  0066BE  0EBD               	movlw	low _nwkFrameFrames
 26288  0066C0  24F3               	addwf	243,w,c
 26289  0066C2  6E02               	movwf	memset@dest^0,c
 26290  0066C4  0E05               	movlw	high _nwkFrameFrames
 26291  0066C6  20F4               	addwfc	prodh,w,c
 26292  0066C8  6E03               	movwf	(memset@dest+1)^0,c
 26293  0066CA  0E00               	movlw	0
 26294  0066CC  6E05               	movwf	(memset@c+1)^0,c
 26295  0066CE  0E00               	movlw	0
 26296  0066D0  6E04               	movwf	memset@c^0,c
 26297  0066D2  0E00               	movlw	0
 26298  0066D4  6E07               	movwf	(memset@n+1)^0,c
 26299  0066D6  0E89               	movlw	137
 26300  0066D8  6E06               	movwf	memset@n^0,c
 26301  0066DA  EC34  F022         	call	_memset	;wreg free
 26302                           
 26303                           ;../nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 26304  0066DE  5012               	movf	nwkFrameAlloc@i^0,w,c
 26305  0066E0  0D89               	mullw	137
 26306  0066E2  0EBE               	movlw	low (_nwkFrameFrames+1)
 26307  0066E4  24F3               	addwf	243,w,c
 26308  0066E6  6ED9               	movwf	fsr2l,c
 26309  0066E8  0E05               	movlw	high (_nwkFrameFrames+1)
 26310  0066EA  20F4               	addwfc	prodh,w,c
 26311  0066EC  6EDA               	movwf	fsr2h,c
 26312  0066EE  0E10               	movlw	16
 26313  0066F0  6EDF               	movwf	indf2,c
 26314                           
 26315                           ;../nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data
      +                           + sizeof(NwkFrameHeader_t);
 26316  0066F2  5012               	movf	nwkFrameAlloc@i^0,w,c
 26317  0066F4  0D89               	mullw	137
 26318  0066F6  0EBD               	movlw	low _nwkFrameFrames
 26319  0066F8  6E10               	movwf	??_nwkFrameAlloc^0,c
 26320  0066FA  0E05               	movlw	high _nwkFrameFrames
 26321  0066FC  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 26322  0066FE  0E12               	movlw	18
 26323  006700  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26324  006702  0E00               	movlw	0
 26325  006704  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26326  006706  50F3               	movf	243,w,c
 26327  006708  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26328  00670A  50F4               	movf	244,w,c
 26329  00670C  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26330  00670E  5012               	movf	nwkFrameAlloc@i^0,w,c
 26331  006710  0D89               	mullw	137
 26332  006712  0E3E               	movlw	low (_nwkFrameFrames+129)
 26333  006714  24F3               	addwf	243,w,c
 26334  006716  6ED9               	movwf	fsr2l,c
 26335  006718  0E06               	movlw	high (_nwkFrameFrames+129)
 26336  00671A  20F4               	addwfc	prodh,w,c
 26337  00671C  6EDA               	movwf	fsr2h,c
 26338  00671E  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 26339  006724  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 26340                           
 26341                           ;../nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 26342  00672A  0101               	movlb	1	; () banked
 26343  00672C  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 26344  00672E  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 26345                           
 26346                           ; BSR set to: 1
 26347                           ;../nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 26348  006730  5012               	movf	nwkFrameAlloc@i^0,w,c
 26349  006732  0D89               	mullw	137
 26350  006734  0EBD               	movlw	low _nwkFrameFrames
 26351  006736  24F3               	addwf	243,w,c
 26352  006738  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26353  00673A  0E05               	movlw	high _nwkFrameFrames
 26354  00673C  20F4               	addwfc	prodh,w,c
 26355  00673E  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26356  006740  0012               	return	
 26357  006742                     l14849:
 26358                           
 26359                           ;../nwk/nwk_src/nwkFrame.c: 92:   }
 26360  006742  2A12               	incf	nwkFrameAlloc@i^0,f,c
 26361  006744  0E04               	movlw	4
 26362  006746  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 26363  006748  D7AD               	goto	l14835
 26364                           
 26365                           ;../nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 26366  00674A  0E00               	movlw	0
 26367  00674C  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26368  00674E  0E00               	movlw	0
 26369  006750  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26370  006752  0012               	return		;funcret
 26371  006754                     __end_of_nwkFrameAlloc:
 26372                           	opt callstack 0
 26373                           
 26374 ;; *************** function _memset *****************
 26375 ;; Defined at:
 26376 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 26377 ;; Parameters:    Size  Location     Type
 26378 ;;  dest            2    1[COMRAM] PTR void 
 26379 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 26380 ;;		 -> appDataInd@data(65), 
 26381 ;;  c               2    3[COMRAM] int 
 26382 ;;  n               2    5[COMRAM] unsigned int 
 26383 ;; Auto vars:     Size  Location     Type
 26384 ;;  s               2   11[COMRAM] PTR unsigned char 
 26385 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 26386 ;;		 -> appDataInd@data(65), 
 26387 ;;  k               2    9[COMRAM] unsigned int 
 26388 ;; Return value:  Size  Location     Type
 26389 ;;                  2    1[COMRAM] PTR void 
 26390 ;; Registers used:
 26391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26392 ;; Tracked objects:
 26393 ;;		On entry : 0/0
 26394 ;;		On exit  : 0/0
 26395 ;;		Unchanged: 0/0
 26396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26397 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26400 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26401 ;;Total ram usage:       12 bytes
 26402 ;; Hardware stack levels used:    1
 26403 ;; Hardware stack levels required when called:    7
 26404 ;; This function calls:
 26405 ;;		Nothing
 26406 ;; This function is called by:
 26407 ;;		_appDataInd
 26408 ;;		_cmdSend
 26409 ;;		_cmdBcast
 26410 ;;		_cmdSetTX
 26411 ;;		_processATCommand
 26412 ;;		_nwkFrameAlloc
 26413 ;; This function uses a non-reentrant model
 26414 ;;
 26415                           
 26416                           	psect	text164
 26417  004468                     __ptext164:
 26418                           	opt callstack 0
 26419  004468                     _memset:
 26420                           	opt callstack 22
 26421                           
 26422                           ;incstack = 0
 26423  004468  0060  F008  F00C   	movff	memset@dest,memset@s
 26424  00446E  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 26425  004474  5006               	movf	memset@n^0,w,c
 26426  004476  1007               	iorwf	(memset@n+1)^0,w,c
 26427  004478  B4D8               	btfsc	status,2,c
 26428  00447A  0012               	return	
 26429  00447C  0060  F033  FFD9   	movff	memset@s,fsr2l
 26430  004482  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26431  004488  0060  F013  FFDF   	movff	memset@c,indf2
 26432  00448E  5006               	movf	memset@n^0,w,c
 26433  004490  240C               	addwf	memset@s^0,w,c
 26434  004492  6E08               	movwf	??_memset^0,c
 26435  004494  5007               	movf	(memset@n+1)^0,w,c
 26436  004496  200D               	addwfc	(memset@s+1)^0,w,c
 26437  004498  6E09               	movwf	(??_memset+1)^0,c
 26438  00449A  0EFF               	movlw	255
 26439  00449C  2408               	addwf	??_memset^0,w,c
 26440  00449E  6ED9               	movwf	fsr2l,c
 26441  0044A0  0EFF               	movlw	255
 26442  0044A2  2009               	addwfc	(??_memset+1)^0,w,c
 26443  0044A4  6EDA               	movwf	fsr2h,c
 26444  0044A6  0060  F013  FFDF   	movff	memset@c,indf2
 26445  0044AC  5007               	movf	(memset@n+1)^0,w,c
 26446  0044AE  E104               	bnz	l14639
 26447  0044B0  0E03               	movlw	3
 26448  0044B2  5C06               	subwf	memset@n^0,w,c
 26449  0044B4  A0D8               	btfss	status,0,c
 26450  0044B6  0012               	return	
 26451  0044B8                     l14639:
 26452  0044B8  EE20 F001          	lfsr	2,1
 26453  0044BC  500C               	movf	memset@s^0,w,c
 26454  0044BE  26D9               	addwf	fsr2l,f,c
 26455  0044C0  500D               	movf	(memset@s+1)^0,w,c
 26456  0044C2  22DA               	addwfc	fsr2h,f,c
 26457  0044C4  0060  F013  FFDF   	movff	memset@c,indf2
 26458  0044CA  EE20 F002          	lfsr	2,2
 26459  0044CE  500C               	movf	memset@s^0,w,c
 26460  0044D0  26D9               	addwf	fsr2l,f,c
 26461  0044D2  500D               	movf	(memset@s+1)^0,w,c
 26462  0044D4  22DA               	addwfc	fsr2h,f,c
 26463  0044D6  0060  F013  FFDF   	movff	memset@c,indf2
 26464  0044DC  5006               	movf	memset@n^0,w,c
 26465  0044DE  240C               	addwf	memset@s^0,w,c
 26466  0044E0  6E08               	movwf	??_memset^0,c
 26467  0044E2  5007               	movf	(memset@n+1)^0,w,c
 26468  0044E4  200D               	addwfc	(memset@s+1)^0,w,c
 26469  0044E6  6E09               	movwf	(??_memset+1)^0,c
 26470  0044E8  0EFE               	movlw	254
 26471  0044EA  2408               	addwf	??_memset^0,w,c
 26472  0044EC  6ED9               	movwf	fsr2l,c
 26473  0044EE  0EFF               	movlw	255
 26474  0044F0  2009               	addwfc	(??_memset+1)^0,w,c
 26475  0044F2  6EDA               	movwf	fsr2h,c
 26476  0044F4  0060  F013  FFDF   	movff	memset@c,indf2
 26477  0044FA  5006               	movf	memset@n^0,w,c
 26478  0044FC  240C               	addwf	memset@s^0,w,c
 26479  0044FE  6E08               	movwf	??_memset^0,c
 26480  004500  5007               	movf	(memset@n+1)^0,w,c
 26481  004502  200D               	addwfc	(memset@s+1)^0,w,c
 26482  004504  6E09               	movwf	(??_memset+1)^0,c
 26483  004506  0EFD               	movlw	253
 26484  004508  2408               	addwf	??_memset^0,w,c
 26485  00450A  6ED9               	movwf	fsr2l,c
 26486  00450C  0EFF               	movlw	255
 26487  00450E  2009               	addwfc	(??_memset+1)^0,w,c
 26488  004510  6EDA               	movwf	fsr2h,c
 26489  004512  0060  F013  FFDF   	movff	memset@c,indf2
 26490  004518  5007               	movf	(memset@n+1)^0,w,c
 26491  00451A  E104               	bnz	l14645
 26492  00451C  0E07               	movlw	7
 26493  00451E  5C06               	subwf	memset@n^0,w,c
 26494  004520  A0D8               	btfss	status,0,c
 26495  004522  0012               	return	
 26496  004524                     l14645:
 26497  004524  EE20 F003          	lfsr	2,3
 26498  004528  500C               	movf	memset@s^0,w,c
 26499  00452A  26D9               	addwf	fsr2l,f,c
 26500  00452C  500D               	movf	(memset@s+1)^0,w,c
 26501  00452E  22DA               	addwfc	fsr2h,f,c
 26502  004530  0060  F013  FFDF   	movff	memset@c,indf2
 26503  004536  5006               	movf	memset@n^0,w,c
 26504  004538  240C               	addwf	memset@s^0,w,c
 26505  00453A  6E08               	movwf	??_memset^0,c
 26506  00453C  5007               	movf	(memset@n+1)^0,w,c
 26507  00453E  200D               	addwfc	(memset@s+1)^0,w,c
 26508  004540  6E09               	movwf	(??_memset+1)^0,c
 26509  004542  0EFC               	movlw	252
 26510  004544  2408               	addwf	??_memset^0,w,c
 26511  004546  6ED9               	movwf	fsr2l,c
 26512  004548  0EFF               	movlw	255
 26513  00454A  2009               	addwfc	(??_memset+1)^0,w,c
 26514  00454C  6EDA               	movwf	fsr2h,c
 26515  00454E  0060  F013  FFDF   	movff	memset@c,indf2
 26516  004554  5007               	movf	(memset@n+1)^0,w,c
 26517  004556  E104               	bnz	l14651
 26518  004558  0E09               	movlw	9
 26519  00455A  5C06               	subwf	memset@n^0,w,c
 26520  00455C  A0D8               	btfss	status,0,c
 26521  00455E  0012               	return	
 26522  004560                     l14651:
 26523  004560  0060  F030  F008   	movff	memset@s,??_memset
 26524  004566  0060  F034  F009   	movff	memset@s+1,??_memset+1
 26525  00456C  1E08               	comf	??_memset^0,f,c
 26526  00456E  1E09               	comf	(??_memset+1)^0,f,c
 26527  004570  4A08               	infsnz	??_memset^0,f,c
 26528  004572  2A09               	incf	(??_memset+1)^0,f,c
 26529  004574  0E03               	movlw	3
 26530  004576  1408               	andwf	??_memset^0,w,c
 26531  004578  6E0A               	movwf	memset@k^0,c
 26532  00457A  6A0B               	clrf	(memset@k+1)^0,c
 26533  00457C  500A               	movf	memset@k^0,w,c
 26534  00457E  260C               	addwf	memset@s^0,f,c
 26535  004580  500B               	movf	(memset@k+1)^0,w,c
 26536  004582  220D               	addwfc	(memset@s+1)^0,f,c
 26537  004584  500A               	movf	memset@k^0,w,c
 26538  004586  5E06               	subwf	memset@n^0,f,c
 26539  004588  500B               	movf	(memset@k+1)^0,w,c
 26540  00458A  5A07               	subwfb	(memset@n+1)^0,f,c
 26541  00458C  0EFC               	movlw	252
 26542  00458E  1606               	andwf	memset@n^0,f,c
 26543  004590  0EFF               	movlw	255
 26544  004592  1607               	andwf	(memset@n+1)^0,f,c
 26545  004594  D00E               	goto	l14659
 26546  004596                     l14653:
 26547  004596  0060  F033  FFD9   	movff	memset@s,fsr2l
 26548  00459C  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26549  0045A2  0060  F013  FFDF   	movff	memset@c,indf2
 26550  0045A8  0606               	decf	memset@n^0,f,c
 26551  0045AA  A0D8               	btfss	status,0,c
 26552  0045AC  0607               	decf	(memset@n+1)^0,f,c
 26553  0045AE  4A0C               	infsnz	memset@s^0,f,c
 26554  0045B0  2A0D               	incf	(memset@s+1)^0,f,c
 26555  0045B2                     l14659:
 26556  0045B2  5006               	movf	memset@n^0,w,c
 26557  0045B4  1007               	iorwf	(memset@n+1)^0,w,c
 26558  0045B6  B4D8               	btfsc	status,2,c
 26559  0045B8  0012               	return	
 26560  0045BA  D7ED               	goto	l14653
 26561  0045BC                     __end_of_memset:
 26562                           	opt callstack 0
 26563                           
 26564 ;; *************** function _memcpy *****************
 26565 ;; Defined at:
 26566 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 26567 ;; Parameters:    Size  Location     Type
 26568 ;;  d1              2    7[COMRAM] PTR void 
 26569 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26570 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26571 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 26572 ;;		 -> tx_buffer(524), 
 26573 ;;  s1              2    9[COMRAM] PTR const void 
 26574 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26575 ;;		 -> ledqueue(96), STR_55(2), STR_54(2), cmdSetAES@AESstr(32), 
 26576 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 26577 ;;  n               2   11[COMRAM] unsigned int 
 26578 ;; Auto vars:     Size  Location     Type
 26579 ;;  s               2   16[COMRAM] PTR const unsigned char 
 26580 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26581 ;;		 -> ledqueue(96), STR_55(2), STR_54(2), cmdSetAES@AESstr(32), 
 26582 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 26583 ;;  d               2   14[COMRAM] PTR unsigned char 
 26584 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26585 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26586 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 26587 ;;		 -> tx_buffer(524), 
 26588 ;;  tmp             1   13[COMRAM] unsigned char 
 26589 ;; Return value:  Size  Location     Type
 26590 ;;                  2    7[COMRAM] PTR void 
 26591 ;; Registers used:
 26592 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26593 ;; Tracked objects:
 26594 ;;		On entry : 0/0
 26595 ;;		On exit  : 0/0
 26596 ;;		Unchanged: 0/0
 26597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26599 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26601 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26602 ;;Total ram usage:       11 bytes
 26603 ;; Hardware stack levels used:    1
 26604 ;; Hardware stack levels required when called:    7
 26605 ;; This function calls:
 26606 ;;		Nothing
 26607 ;; This function is called by:
 26608 ;;		_cmdSend
 26609 ;;		_cmdBcast
 26610 ;;		_cmdSetAES
 26611 ;;		_cmdSetRFCH
 26612 ;;		_cmdSetTX
 26613 ;;		_cmdSetCADRSSI
 26614 ;;		_cmdSetSF
 26615 ;;		_CircularBufferPushBack
 26616 ;;		_nwkDataReqSendFrame
 26617 ;;		_PHY_DataInd
 26618 ;;		_nwkTxBroadcastFrame
 26619 ;;		_CircularBufferPopFront
 26620 ;; This function uses a non-reentrant model
 26621 ;;
 26622                           
 26623                           	psect	text165
 26624  0074A0                     __ptext165:
 26625                           	opt callstack 0
 26626  0074A0                     _memcpy:
 26627                           	opt callstack 19
 26628                           
 26629                           ;incstack = 0
 26630  0074A0  0060  F028  F011   	movff	memcpy@s1,memcpy@s
 26631  0074A6  0060  F02C  F012   	movff	memcpy@s1+1,memcpy@s+1
 26632  0074AC  0060  F020  F00F   	movff	memcpy@d1,memcpy@d
 26633  0074B2  0060  F024  F010   	movff	memcpy@d1+1,memcpy@d+1
 26634  0074B8  D023               	goto	l14827
 26635  0074BA                     l14819:
 26636  0074BA  0060  F047  FFF6   	movff	memcpy@s,tblptrl
 26637  0074C0  0060  F04B  FFF7   	movff	memcpy@s+1,tblptrh
 26638  0074C6  0E00               	movlw	low (__mediumconst shr (0+16))
 26639  0074C8  6EF8               	movwf	tblptru,c
 26640  0074CA  0E0F               	movlw	(high __ramtop+-1)
 26641  0074CC  64F7               	cpfsgt	tblptrh,c
 26642  0074CE  D003               	bra	u14397
 26643  0074D0  0008               	tblrd		*
 26644  0074D2  50F5               	movf	tablat,w,c
 26645  0074D4  D007               	bra	u14390
 26646  0074D6                     u14397:
 26647  0074D6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26648  0074DC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26649  0074E2  50EF               	movf	indf0,w,c
 26650  0074E4                     u14390:
 26651  0074E4  6E0E               	movwf	memcpy@tmp^0,c
 26652  0074E6  4A11               	infsnz	memcpy@s^0,f,c
 26653  0074E8  2A12               	incf	(memcpy@s+1)^0,f,c
 26654  0074EA  0060  F03F  FFD9   	movff	memcpy@d,fsr2l
 26655  0074F0  0060  F043  FFDA   	movff	memcpy@d+1,fsr2h
 26656  0074F6  0060  F03B  FFDF   	movff	memcpy@tmp,indf2
 26657  0074FC  4A0F               	infsnz	memcpy@d^0,f,c
 26658  0074FE  2A10               	incf	(memcpy@d+1)^0,f,c
 26659  007500                     l14827:
 26660  007500  060C               	decf	memcpy@n^0,f,c
 26661  007502  A0D8               	btfss	status,0,c
 26662  007504  060D               	decf	(memcpy@n+1)^0,f,c
 26663  007506  280C               	incf	memcpy@n^0,w,c
 26664  007508  E1D8               	bnz	l14819
 26665  00750A  280D               	incf	(memcpy@n+1)^0,w,c
 26666  00750C  B4D8               	btfsc	status,2,c
 26667  00750E  0012               	return	
 26668  007510  D7D4               	goto	l14819
 26669  007512                     __end_of_memcpy:
 26670                           	opt callstack 0
 26671                           
 26672 ;; *************** function _nwkDataReqConfirm *****************
 26673 ;; Defined at:
 26674 ;;		line 188 in file "../nwk/nwk_src/nwkDataReq.c"
 26675 ;; Parameters:    Size  Location     Type
 26676 ;;  req             2    8[COMRAM] PTR struct NWK_DataReq_t
 26677 ;;		 -> NULL(0), tx_buffer(524), 
 26678 ;; Auto vars:     Size  Location     Type
 26679 ;;  prev            2   12[COMRAM] PTR struct NWK_DataReq_t
 26680 ;;		 -> NULL(0), tx_buffer(524), 
 26681 ;; Return value:  Size  Location     Type
 26682 ;;                  1    wreg      void 
 26683 ;; Registers used:
 26684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26685 ;; Tracked objects:
 26686 ;;		On entry : 0/2
 26687 ;;		On exit  : 0/0
 26688 ;;		Unchanged: 0/0
 26689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26693 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26694 ;;Total ram usage:        6 bytes
 26695 ;; Hardware stack levels used:    1
 26696 ;; Hardware stack levels required when called:    9
 26697 ;; This function calls:
 26698 ;;		_appDataConf
 26699 ;; This function is called by:
 26700 ;;		_nwkDataReqTaskHandler
 26701 ;; This function uses a non-reentrant model
 26702 ;;
 26703                           
 26704                           	psect	text166
 26705  00573C                     __ptext166:
 26706                           	opt callstack 0
 26707  00573C                     _nwkDataReqConfirm:
 26708                           	opt callstack 18
 26709                           
 26710                           ;../nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);../
      +                          nwk/nwk_src/nwkDataReq.c: 189: {;../nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue
      +                           == req)
 26711                           
 26712                           ;incstack = 0
 26713  00573C  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26714  00573E  0100               	movlb	0	; () banked
 26715  005740  19EA               	xorwf	_nwkDataReqQueue& (0+255),w,b
 26716  005742  E111               	bnz	l11629
 26717  005744  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26718  005746  19EB               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 26719  005748  A4D8               	btfss	status,2,c
 26720  00574A  D00D               	goto	l11629
 26721                           
 26722                           ; BSR set to: 0
 26723                           ;../nwk/nwk_src/nwkDataReq.c: 191:   {;../nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQ
      +                          ueue = nwkDataReqQueue->next;
 26724  00574C  0060  F3AB  FFD9   	movff	_nwkDataReqQueue,fsr2l
 26725  005752  0060  F3AF  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 26726  005758  006F FF78  F0EA    	movff	postinc2,_nwkDataReqQueue
 26727  00575E  006F FF74  F0EB    	movff	postdec2,_nwkDataReqQueue+1
 26728                           
 26729                           ;../nwk/nwk_src/nwkDataReq.c: 193:   }
 26730  005764  D03E               	goto	l11637
 26731  005766                     l11629:
 26732                           
 26733                           ; BSR set to: 0
 26734                           ;../nwk/nwk_src/nwkDataReq.c: 195:   {;../nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq
      +                          _t *prev = nwkDataReqQueue;
 26735  005766  0060  F3A8  F00D   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 26736  00576C  0060  F3AC  F00E   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 26737                           
 26738                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26739  005772  D00C               	goto	l11633
 26740  005774                     l11631:
 26741                           
 26742                           ;../nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 26743  005774  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26744  00577A  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26745  005780  006F FF78  F00D    	movff	postinc2,nwkDataReqConfirm@prev
 26746  005786  006F FF74  F00E    	movff	postdec2,nwkDataReqConfirm@prev+1
 26747  00578C                     l11633:
 26748                           
 26749                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26750  00578C  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26751  005792  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26752  005798  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26753  00579A  18DE               	xorwf	postinc2,w,c
 26754  00579C  E1EB               	bnz	l11631
 26755  00579E  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26756  0057A0  18DE               	xorwf	postinc2,w,c
 26757  0057A2  A4D8               	btfss	status,2,c
 26758  0057A4  D7E7               	goto	l11631
 26759                           
 26760                           ;../nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 26761  0057A6  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26762  0057AC  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26763  0057B2  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 26764  0057B8  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 26765  0057BE  0060  F02F  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 26766  0057C4  0060  F033  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 26767  0057CA  0060  F037  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 26768  0057D0  0060  F03B  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 26769  0057D6  006F FF7B FFE6     	movff	postinc2,postinc1
 26770  0057DC  006F FF77 FFE5     	movff	postdec2,postdec1
 26771  0057E2                     l11637:
 26772                           
 26773                           ;../nwk/nwk_src/nwkDataReq.c: 202:   nwkIb.lock--;
 26774  0057E2  0101               	movlb	1	; () banked
 26775  0057E4  0726               	decf	(_nwkIb+38)& (0+255),f,b
 26776  0057E6  A0D8               	btfss	status,0,c
 26777  0057E8  0727               	decf	(_nwkIb+39)& (0+255),f,b
 26778                           
 26779                           ; BSR set to: 1
 26780                           ;../nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 26781  0057EA  0060  F024  F007   	movff	nwkDataReqConfirm@req,appDataConf@req
 26782  0057F0  0060  F028  F008   	movff	nwkDataReqConfirm@req+1,appDataConf@req+1
 26783  0057F6  EE20 F00F          	lfsr	2,15
 26784  0057FA  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26785  0057FC  26D9               	addwf	fsr2l,f,c
 26786  0057FE  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26787  005800  22DA               	addwfc	fsr2h,f,c
 26788  005802  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 26789  005808  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 26790  00580E  D801               	call	u10538
 26791  005810  0012               	return	
 26792  005812                     u10538:
 26793  005812  0005               	push	
 26794  005814  6EFA               	movwf	pclath,c
 26795  005816  500B               	movf	??_nwkDataReqConfirm^0,w,c
 26796  005818  6EFD               	movwf	tosl,c
 26797  00581A  500C               	movf	(??_nwkDataReqConfirm+1)^0,w,c
 26798  00581C  6EFE               	movwf	tosh,c
 26799  00581E  6AFF               	clrf	tosu,c
 26800  005820  50FA               	movf	pclath,w,c
 26801  005822  0012               	return		;indir
 26802  005824                     __end_of_nwkDataReqConfirm:
 26803                           	opt callstack 0
 26804                           
 26805 ;; *************** function _appDataConf *****************
 26806 ;; Defined at:
 26807 ;;		line 33 in file "../app/app_src/application.c"
 26808 ;; Parameters:    Size  Location     Type
 26809 ;;  req             2    6[COMRAM] PTR struct NWK_DataReq_t
 26810 ;;		 -> NULL(0), tx_buffer(524), 
 26811 ;; Auto vars:     Size  Location     Type
 26812 ;;		None
 26813 ;; Return value:  Size  Location     Type
 26814 ;;                  1    wreg      void 
 26815 ;; Registers used:
 26816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26817 ;; Tracked objects:
 26818 ;;		On entry : 3F/1
 26819 ;;		On exit  : 0/0
 26820 ;;		Unchanged: 0/0
 26821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26826 ;;Total ram usage:        2 bytes
 26827 ;; Hardware stack levels used:    1
 26828 ;; Hardware stack levels required when called:    8
 26829 ;; This function calls:
 26830 ;;		_free_tx_buffer
 26831 ;; This function is called by:
 26832 ;;		_cmdSend
 26833 ;;		_cmdBcast
 26834 ;;		_nwkDataReqConfirm
 26835 ;; This function uses a non-reentrant model
 26836 ;;
 26837                           
 26838                           	psect	text167
 26839  008972                     __ptext167:
 26840                           	opt callstack 0
 26841  008972                     _appDataConf:
 26842                           	opt callstack 18
 26843                           
 26844                           ; BSR set to: 1
 26845                           ;../app/app_src/application.c: 33: void appDataConf(NWK_DataReq_t *req);../app/app_src/a
      +                          pplication.c: 34: {;../app/app_src/application.c: 35:  if (NWK_SUCCESS_STATUS == req->st
      +                          atus){
 26846                           
 26847                           ;incstack = 0
 26848  008972  EE20 F011          	lfsr	2,17
 26849  008976  5007               	movf	appDataConf@req^0,w,c
 26850  008978  26D9               	addwf	fsr2l,f,c
 26851  00897A  5008               	movf	(appDataConf@req+1)^0,w,c
 26852  00897C  22DA               	addwfc	fsr2h,f,c
 26853  00897E  50DF               	movf	indf2,w,c
 26854                           
 26855                           ; BSR set to: 1
 26856                           
 26857                           ;../app/app_src/application.c: 38:  else{
 26858                           
 26859                           ;../app/app_src/application.c: 37:  }
 26860                           
 26861                           ; BSR set to: 1
 26862  008980  F000               	nop		;# 
 26863                           
 26864                           ;../app/app_src/application.c: 42:  free_tx_buffer(req);
 26865  008982  0060  F01C  F002   	movff	appDataConf@req,free_tx_buffer@req
 26866  008988  0060  F020  F003   	movff	appDataConf@req+1,free_tx_buffer@req+1
 26867  00898E  ECF7  F03E         	call	_free_tx_buffer	;wreg free
 26868  008992  0012               	return		;funcret
 26869  008994                     __end_of_appDataConf:
 26870                           	opt callstack 0
 26871                           
 26872 ;; *************** function _free_tx_buffer *****************
 26873 ;; Defined at:
 26874 ;;		line 70 in file "../app/app_src/application.c"
 26875 ;; Parameters:    Size  Location     Type
 26876 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 26877 ;;		 -> NULL(0), tx_buffer(524), 
 26878 ;; Auto vars:     Size  Location     Type
 26879 ;;  buf_id          1    5[COMRAM] unsigned char 
 26880 ;; Return value:  Size  Location     Type
 26881 ;;                  1    wreg      void 
 26882 ;; Registers used:
 26883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26884 ;; Tracked objects:
 26885 ;;		On entry : 0/1
 26886 ;;		On exit  : 0/0
 26887 ;;		Unchanged: 0/0
 26888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26892 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26893 ;;Total ram usage:        5 bytes
 26894 ;; Hardware stack levels used:    1
 26895 ;; Hardware stack levels required when called:    7
 26896 ;; This function calls:
 26897 ;;		Nothing
 26898 ;; This function is called by:
 26899 ;;		_appDataConf
 26900 ;; This function uses a non-reentrant model
 26901 ;;
 26902                           
 26903                           	psect	text168
 26904  007DEE                     __ptext168:
 26905                           	opt callstack 0
 26906  007DEE                     _free_tx_buffer:
 26907                           	opt callstack 18
 26908                           
 26909                           ;../app/app_src/application.c: 71:     uint8_t buf_id = 0;
 26910                           
 26911                           ;incstack = 0
 26912  007DEE  0E00               	movlw	0
 26913  007DF0  6E06               	movwf	free_tx_buffer@buf_id^0,c
 26914                           
 26915                           ;../app/app_src/application.c: 73:     while(buf_id < 4){
 26916  007DF2  D020               	goto	l9933
 26917  007DF4                     l9925:
 26918                           
 26919                           ;../app/app_src/application.c: 74:         if(req == &tx_buffer[buf_id].nwkDataReq){
 26920  007DF4  5006               	movf	free_tx_buffer@buf_id^0,w,c
 26921  007DF6  0D83               	mullw	131
 26922  007DF8  0E6A               	movlw	low _tx_buffer
 26923  007DFA  6E04               	movwf	??_free_tx_buffer^0,c
 26924  007DFC  0E08               	movlw	high _tx_buffer
 26925  007DFE  6E05               	movwf	(??_free_tx_buffer+1)^0,c
 26926  007E00  0E03               	movlw	3
 26927  007E02  2604               	addwf	??_free_tx_buffer^0,f,c
 26928  007E04  0E00               	movlw	0
 26929  007E06  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 26930  007E08  50F3               	movf	243,w,c
 26931  007E0A  2604               	addwf	??_free_tx_buffer^0,f,c
 26932  007E0C  50F4               	movf	244,w,c
 26933  007E0E  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 26934  007E10  5004               	movf	??_free_tx_buffer^0,w,c
 26935  007E12  1802               	xorwf	free_tx_buffer@req^0,w,c
 26936  007E14  E10E               	bnz	l9931
 26937  007E16  5005               	movf	(??_free_tx_buffer+1)^0,w,c
 26938  007E18  1803               	xorwf	(free_tx_buffer@req+1)^0,w,c
 26939  007E1A  A4D8               	btfss	status,2,c
 26940  007E1C  D00A               	goto	l9931
 26941                           
 26942                           ;../app/app_src/application.c: 76:             tx_buffer[buf_id].free = 1;
 26943  007E1E  5006               	movf	free_tx_buffer@buf_id^0,w,c
 26944  007E20  0D83               	mullw	131
 26945  007E22  0E6A               	movlw	low _tx_buffer
 26946  007E24  24F3               	addwf	243,w,c
 26947  007E26  6ED9               	movwf	fsr2l,c
 26948  007E28  0E08               	movlw	high _tx_buffer
 26949  007E2A  20F4               	addwfc	prodh,w,c
 26950  007E2C  6EDA               	movwf	fsr2h,c
 26951  007E2E  84DF               	bsf	indf2,2,c
 26952  007E30  0012               	return	
 26953  007E32                     l9931:
 26954                           
 26955                           ;../app/app_src/application.c: 79:         buf_id++;
 26956  007E32  2A06               	incf	free_tx_buffer@buf_id^0,f,c
 26957  007E34                     l9933:
 26958                           
 26959                           ;../app/app_src/application.c: 73:     while(buf_id < 4){
 26960  007E34  0E03               	movlw	3
 26961  007E36  6406               	cpfsgt	free_tx_buffer@buf_id^0,c
 26962  007E38  D7DD               	goto	l9925
 26963  007E3A  0012               	return	
 26964  007E3C                     __end_of_free_tx_buffer:
 26965                           	opt callstack 0
 26966                           
 26967 ;; *************** function _SYS_Init *****************
 26968 ;; Defined at:
 26969 ;;		line 58 in file "../sys/sys_src/sys.c"
 26970 ;; Parameters:    Size  Location     Type
 26971 ;;		None
 26972 ;; Auto vars:     Size  Location     Type
 26973 ;;		None
 26974 ;; Return value:  Size  Location     Type
 26975 ;;                  1    wreg      void 
 26976 ;; Registers used:
 26977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26978 ;; Tracked objects:
 26979 ;;		On entry : 3B/3D
 26980 ;;		On exit  : 3F/2
 26981 ;;		Unchanged: 0/0
 26982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26987 ;;Total ram usage:        0 bytes
 26988 ;; Hardware stack levels used:    1
 26989 ;; Hardware stack levels required when called:   15
 26990 ;; This function calls:
 26991 ;;		_NWK_Init
 26992 ;;		_PHY_Init
 26993 ;;		_SYS_TimerInit
 26994 ;; This function is called by:
 26995 ;;		_main
 26996 ;; This function uses a non-reentrant model
 26997 ;;
 26998                           
 26999                           	psect	text169
 27000  008D90                     __ptext169:
 27001                           	opt callstack 0
 27002  008D90                     _SYS_Init:
 27003                           	opt callstack 15
 27004                           
 27005                           ;../sys/sys_src/sys.c: 60:   SYS_TimerInit();
 27006                           
 27007                           ;incstack = 0
 27008  008D90  ECFF  F046         	call	_SYS_TimerInit	;wreg free
 27009                           
 27010                           ; BSR set to: 0
 27011                           ;../sys/sys_src/sys.c: 61:   PHY_Init();
 27012  008D94  EC1F  F047         	call	_PHY_Init	;wreg free
 27013                           
 27014                           ; BSR set to: 1
 27015                           ;../sys/sys_src/sys.c: 62:   NWK_Init();
 27016  008D98  ECD8  F03D         	call	_NWK_Init	;wreg free
 27017                           
 27018                           ; BSR set to: 2
 27019  008D9C  0012               	return		;funcret
 27020  008D9E                     __end_of_SYS_Init:
 27021                           	opt callstack 0
 27022                           
 27023 ;; *************** function _SYS_TimerInit *****************
 27024 ;; Defined at:
 27025 ;;		line 63 in file "../sys/sys_src/sysTimer.c"
 27026 ;; Parameters:    Size  Location     Type
 27027 ;;		None
 27028 ;; Auto vars:     Size  Location     Type
 27029 ;;		None
 27030 ;; Return value:  Size  Location     Type
 27031 ;;                  1    wreg      void 
 27032 ;; Registers used:
 27033 ;;		wreg, status,2, status,0
 27034 ;; Tracked objects:
 27035 ;;		On entry : 3B/3D
 27036 ;;		On exit  : 3F/0
 27037 ;;		Unchanged: 0/0
 27038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27043 ;;Total ram usage:        0 bytes
 27044 ;; Hardware stack levels used:    1
 27045 ;; Hardware stack levels required when called:    7
 27046 ;; This function calls:
 27047 ;;		Nothing
 27048 ;; This function is called by:
 27049 ;;		_SYS_Init
 27050 ;; This function uses a non-reentrant model
 27051 ;;
 27052                           
 27053                           	psect	text170
 27054  008DFE                     __ptext170:
 27055                           	opt callstack 0
 27056  008DFE                     _SYS_TimerInit:
 27057                           	opt callstack 22
 27058                           
 27059                           ;../sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 27060                           
 27061                           ; BSR set to: 2
 27062                           ;incstack = 0
 27063  008DFE  0E00               	movlw	0
 27064  008E00  0100               	movlb	0	; () banked
 27065  008E02  6FE8               	movwf	_timers& (0+255),b
 27066  008E04  0E00               	movlw	0
 27067  008E06  6FE9               	movwf	(_timers+1)& (0+255),b
 27068                           
 27069                           ; BSR set to: 0
 27070  008E08  0012               	return		;funcret
 27071  008E0A                     __end_of_SYS_TimerInit:
 27072                           	opt callstack 0
 27073                           
 27074 ;; *************** function _PHY_Init *****************
 27075 ;; Defined at:
 27076 ;;		line 810 in file "../phy/sx1216/phy_src/phy.c"
 27077 ;; Parameters:    Size  Location     Type
 27078 ;;		None
 27079 ;; Auto vars:     Size  Location     Type
 27080 ;;		None
 27081 ;; Return value:  Size  Location     Type
 27082 ;;                  1    wreg      void 
 27083 ;; Registers used:
 27084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27085 ;; Tracked objects:
 27086 ;;		On entry : 3F/0
 27087 ;;		On exit  : 3F/1
 27088 ;;		Unchanged: 0/0
 27089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27094 ;;Total ram usage:        0 bytes
 27095 ;; Hardware stack levels used:    1
 27096 ;; Hardware stack levels required when called:   14
 27097 ;; This function calls:
 27098 ;;		_initRadio
 27099 ;; This function is called by:
 27100 ;;		_SYS_Init
 27101 ;; This function uses a non-reentrant model
 27102 ;;
 27103                           
 27104                           	psect	text171
 27105  008E3E                     __ptext171:
 27106                           	opt callstack 0
 27107  008E3E                     _PHY_Init:
 27108                           	opt callstack 15
 27109                           
 27110                           ; BSR set to: 0
 27111                           ;../phy/sx1216/phy_src/phy.c: 811:     initRadio();
 27112                           
 27113                           ; BSR set to: 0
 27114                           ;incstack = 0
 27115  008E3E  ECD9  F020         	call	_initRadio	;wreg free
 27116                           
 27117                           ; BSR set to: 1
 27118  008E42  0012               	return		;funcret
 27119  008E44                     __end_of_PHY_Init:
 27120                           	opt callstack 0
 27121                           
 27122 ;; *************** function _initRadio *****************
 27123 ;; Defined at:
 27124 ;;		line 444 in file "../phy/sx1216/phy_src/phy.c"
 27125 ;; Parameters:    Size  Location     Type
 27126 ;;		None
 27127 ;; Auto vars:     Size  Location     Type
 27128 ;;  BWset           4    0        unsigned long 
 27129 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 27130 ;;  version         1   54[COMRAM] unsigned char 
 27131 ;; Return value:  Size  Location     Type
 27132 ;;                  1    wreg      void 
 27133 ;; Registers used:
 27134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27135 ;; Tracked objects:
 27136 ;;		On entry : 0/0
 27137 ;;		On exit  : 3F/1
 27138 ;;		Unchanged: 0/0
 27139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27141 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27143 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27144 ;;Total ram usage:        7 bytes
 27145 ;; Hardware stack levels used:    1
 27146 ;; Hardware stack levels required when called:   13
 27147 ;; This function calls:
 27148 ;;		_SX1276Read
 27149 ;;		_SX1276Write
 27150 ;;		_computeFRF
 27151 ;;		_enableCrc
 27152 ;;		_explicitHeaderMode
 27153 ;;		_receive
 27154 ;;		_setCodingRate4
 27155 ;;		_setFrequency
 27156 ;;		_setPreambleLength
 27157 ;;		_setSignalBandwidth
 27158 ;;		_setSpreadingFactor
 27159 ;;		_setTxPower
 27160 ;;		_srand
 27161 ;; This function is called by:
 27162 ;;		_cmdSetNaddr
 27163 ;;		_cmdSetRFCH
 27164 ;;		_cmdSetTX
 27165 ;;		_cmdSetCADRSSI
 27166 ;;		_cmdSetSF
 27167 ;;		_radio_engine
 27168 ;;		_PHY_Init
 27169 ;; This function uses a non-reentrant model
 27170 ;;
 27171                           
 27172                           	psect	text172
 27173  0041B2                     __ptext172:
 27174                           	opt callstack 0
 27175  0041B2                     _initRadio:
 27176                           	opt callstack 14
 27177                           
 27178                           ; BSR set to: 1
 27179                           ;incstack = 0
 27180                           ;../phy/sx1216/phy_src/phy.c: 446:     uint8_t version;;../phy/sx1216/phy_src/phy.c: 447
      +                          :     uint32_t BWset;;../phy/sx1216/phy_src/phy.c: 448:     uint16_t wideRSSI;;../phy/sx
      +                          1216/phy_src/phy.c: 450:     do { LATCbits.LATC5 = 0; } while(0);
 27181  0041B2  9ABC               	bcf	188,5,c	;volatile
 27182                           
 27183                           ;../phy/sx1216/phy_src/phy.c: 451:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27184  0041B4  0E09               	movlw	9
 27185  0041B6  6E34               	movwf	(??_initRadio+1)^0,c
 27186  0041B8  0E1E               	movlw	30
 27187  0041BA  6E33               	movwf	??_initRadio^0,c
 27188  0041BC  0EE4               	movlw	228
 27189  0041BE                     u18067:
 27190  0041BE  2EE8               	decfsz	wreg,f,c
 27191  0041C0  D7FE               	bra	u18067
 27192  0041C2  2E33               	decfsz	??_initRadio^0,f,c
 27193  0041C4  D7FC               	bra	u18067
 27194  0041C6  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27195  0041C8  D7FA               	bra	u18067
 27196  0041CA  D000               	nop2	
 27197  0041CC  8ABC               	bsf	188,5,c	;volatile
 27198                           
 27199                           ;../phy/sx1216/phy_src/phy.c: 453:     computeFRF();
 27200  0041CE  EC2C  F01D         	call	_computeFRF	;wreg free
 27201                           
 27202                           ;../phy/sx1216/phy_src/phy.c: 454:     _delay((unsigned long)((500)*(64000000/4000.0)));
 27203  0041D2  0E29               	movlw	41
 27204  0041D4  6E34               	movwf	(??_initRadio+1)^0,c
 27205  0041D6  0E96               	movlw	150
 27206  0041D8  6E33               	movwf	??_initRadio^0,c
 27207  0041DA  0E7F               	movlw	127
 27208  0041DC                     u18077:
 27209  0041DC  2EE8               	decfsz	wreg,f,c
 27210  0041DE  D7FE               	bra	u18077
 27211  0041E0  2E33               	decfsz	??_initRadio^0,f,c
 27212  0041E2  D7FC               	bra	u18077
 27213  0041E4  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27214  0041E6  D7FA               	bra	u18077
 27215  0041E8  F000               	nop	
 27216                           
 27217                           ;../phy/sx1216/phy_src/phy.c: 456:     version = SX1276Read(0x42);
 27218  0041EA  0E42               	movlw	66
 27219  0041EC  EC65  F046         	call	_SX1276Read
 27220  0041F0  6E37               	movwf	initRadio@version^0,c
 27221                           
 27222                           ; BSR set to: 61
 27223                           ;../phy/sx1216/phy_src/phy.c: 457:     version++;
 27224  0041F2  2A37               	incf	initRadio@version^0,f,c
 27225                           
 27226                           ; BSR set to: 61
 27227                           ;../phy/sx1216/phy_src/phy.c: 458:     SX1276Write(0x01,0x00);
 27228  0041F4  0E00               	movlw	0
 27229  0041F6  6E0F               	movwf	SX1276Write@data^0,c
 27230  0041F8  0E01               	movlw	1
 27231  0041FA  EC79  F046         	call	_SX1276Write
 27232                           
 27233                           ; BSR set to: 61
 27234                           ;../phy/sx1216/phy_src/phy.c: 459:     SX1276Write(0x01,0x80);
 27235  0041FE  0E80               	movlw	128
 27236  004200  6E0F               	movwf	SX1276Write@data^0,c
 27237  004202  0E01               	movlw	1
 27238  004204  EC79  F046         	call	_SX1276Write
 27239                           
 27240                           ; BSR set to: 61
 27241                           ;../phy/sx1216/phy_src/phy.c: 461:     setFrequency(fhssList[0]);
 27242  004208  0EB3               	movlw	low _fhssList
 27243  00420A  6EF6               	movwf	tblptrl,c
 27244  00420C                     	if	1	;There is more than 1 active tblptr byte
 27245  00420C  0EFC               	movlw	high _fhssList
 27246  00420E  6EF7               	movwf	tblptrh,c
 27247  004210                     	endif
 27248  004210                     	if	1	;There are 3 active tblptr bytes
 27249  004210  0E00               	movlw	low (_fhssList shr (0+16))
 27250  004212  6EF8               	movwf	tblptru,c
 27251  004214                     	endif
 27252  004214  0009               	tblrd		*+
 27253  004216  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 27254  00421C  0009               	tblrd		*+
 27255  00421E  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 27256  004224  0009               	tblrd		*+
 27257  004226  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 27258  00422C  000A               	tblrd		*-
 27259  00422E  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 27260  004234  EC53  F025         	call	_setFrequency	;wreg free
 27261                           
 27262                           ; BSR set to: 61
 27263                           ;../phy/sx1216/phy_src/phy.c: 462:     setSpreadingFactor(7);
 27264  004238  0E07               	movlw	7
 27265  00423A  EC36  F029         	call	_setSpreadingFactor
 27266                           
 27267                           ;../phy/sx1216/phy_src/phy.c: 463:     setTxPower(2);
 27268  00423E  0E02               	movlw	2
 27269  004240  ECFD  F043         	call	_setTxPower
 27270                           
 27271                           ; BSR set to: 61
 27272                           ;../phy/sx1216/phy_src/phy.c: 464:     setSignalBandwidth(500E3);
 27273  004244  0E20               	movlw	32
 27274  004246  6E23               	movwf	setSignalBandwidth@sbw^0,c
 27275  004248  0EA1               	movlw	161
 27276  00424A  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 27277  00424C  0E07               	movlw	7
 27278  00424E  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 27279  004250  0E00               	movlw	0
 27280  004252  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 27281  004254  ECA6  F007         	call	_setSignalBandwidth	;wreg free
 27282                           
 27283                           ;../phy/sx1216/phy_src/phy.c: 465:     explicitHeaderMode();
 27284  004258  EC42  F046         	call	_explicitHeaderMode	;wreg free
 27285                           
 27286                           ; BSR set to: 61
 27287                           ;../phy/sx1216/phy_src/phy.c: 466:     setCodingRate4(4);
 27288  00425C  0E04               	movlw	4
 27289  00425E  ECEF  F042         	call	_setCodingRate4
 27290                           
 27291                           ; BSR set to: 61
 27292                           ;../phy/sx1216/phy_src/phy.c: 467:     setPreambleLength(12);
 27293  004262  0E00               	movlw	0
 27294  004264  6E12               	movwf	(setPreambleLength@length+1)^0,c
 27295  004266  0E0C               	movlw	12
 27296  004268  6E11               	movwf	setPreambleLength@length^0,c
 27297  00426A  ECDF  F045         	call	_setPreambleLength	;wreg free
 27298                           
 27299                           ; BSR set to: 61
 27300                           ;../phy/sx1216/phy_src/phy.c: 468:     enableCrc();
 27301  00426E  EC70  F046         	call	_enableCrc	;wreg free
 27302                           
 27303                           ; BSR set to: 61
 27304                           ;../phy/sx1216/phy_src/phy.c: 469:     SX1276Write(0x0E, 0x0);
 27305  004272  0E00               	movlw	0
 27306  004274  6E0F               	movwf	SX1276Write@data^0,c
 27307  004276  0E0E               	movlw	14
 27308  004278  EC79  F046         	call	_SX1276Write
 27309                           
 27310                           ; BSR set to: 61
 27311                           ;../phy/sx1216/phy_src/phy.c: 470:     SX1276Write(0x0F, 0);
 27312  00427C  0E00               	movlw	0
 27313  00427E  6E0F               	movwf	SX1276Write@data^0,c
 27314  004280  0E0F               	movlw	15
 27315  004282  EC79  F046         	call	_SX1276Write
 27316                           
 27317                           ; BSR set to: 61
 27318                           ;../phy/sx1216/phy_src/phy.c: 473:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 27319  004286  0E0C               	movlw	12
 27320  004288  EC65  F046         	call	_SX1276Read
 27321  00428C  0903               	iorlw	3
 27322  00428E  6E0F               	movwf	SX1276Write@data^0,c
 27323  004290  0E0C               	movlw	12
 27324  004292  EC79  F046         	call	_SX1276Write
 27325                           
 27326                           ; BSR set to: 61
 27327                           ;../phy/sx1216/phy_src/phy.c: 476:     SX1276Write(0x26, 0x04);
 27328  004296  0E04               	movlw	4
 27329  004298  6E0F               	movwf	SX1276Write@data^0,c
 27330  00429A  0E26               	movlw	38
 27331  00429C  EC79  F046         	call	_SX1276Write
 27332                           
 27333                           ; BSR set to: 61
 27334                           ;../phy/sx1216/phy_src/phy.c: 479:     SX1276Write(0x36,0x02);
 27335  0042A0  0E02               	movlw	2
 27336  0042A2  6E0F               	movwf	SX1276Write@data^0,c
 27337  0042A4  0E36               	movlw	54
 27338  0042A6  EC79  F046         	call	_SX1276Write
 27339                           
 27340                           ; BSR set to: 61
 27341                           ;../phy/sx1216/phy_src/phy.c: 480:     SX1276Write(0x3A,0x64);
 27342  0042AA  0E64               	movlw	100
 27343  0042AC  6E0F               	movwf	SX1276Write@data^0,c
 27344  0042AE  0E3A               	movlw	58
 27345  0042B0  EC79  F046         	call	_SX1276Write
 27346                           
 27347                           ; BSR set to: 61
 27348                           ;../phy/sx1216/phy_src/phy.c: 492:     SX1276Write(0x1F,255);
 27349  0042B4  0EFF               	movlw	255
 27350  0042B6  6E0F               	movwf	SX1276Write@data^0,c
 27351  0042B8  0E1F               	movlw	31
 27352  0042BA  EC79  F046         	call	_SX1276Write
 27353                           
 27354                           ; BSR set to: 61
 27355                           ;../phy/sx1216/phy_src/phy.c: 494:     receive(0);
 27356  0042BE  0E00               	movlw	0
 27357  0042C0  EC5B  F041         	call	_receive
 27358                           
 27359                           ; BSR set to: 61
 27360                           ;../phy/sx1216/phy_src/phy.c: 496:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27361  0042C4  0E09               	movlw	9
 27362  0042C6  6E34               	movwf	(??_initRadio+1)^0,c
 27363  0042C8  0E1E               	movlw	30
 27364  0042CA  6E33               	movwf	??_initRadio^0,c
 27365  0042CC  0EE4               	movlw	228
 27366  0042CE                     u18087:
 27367  0042CE  2EE8               	decfsz	wreg,f,c
 27368  0042D0  D7FE               	bra	u18087
 27369  0042D2  2E33               	decfsz	??_initRadio^0,f,c
 27370  0042D4  D7FC               	bra	u18087
 27371  0042D6  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27372  0042D8  D7FA               	bra	u18087
 27373  0042DA  D000               	nop2	
 27374                           
 27375                           ;../phy/sx1216/phy_src/phy.c: 498:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2
      +                          C);
 27376  0042DC  0E2C               	movlw	44
 27377  0042DE  EC65  F046         	call	_SX1276Read
 27378  0042E2  6E33               	movwf	??_initRadio^0,c
 27379  0042E4  0E2C               	movlw	44
 27380  0042E6  EC65  F046         	call	_SX1276Read
 27381  0042EA  6E34               	movwf	(??_initRadio+1)^0,c
 27382  0042EC  5034               	movf	(??_initRadio+1)^0,w,c
 27383  0042EE  6E36               	movwf	(??_initRadio+3)^0,c
 27384  0042F0  6A35               	clrf	(??_initRadio+2)^0,c
 27385  0042F2  5033               	movf	??_initRadio^0,w,c
 27386  0042F4  2435               	addwf	(??_initRadio+2)^0,w,c
 27387  0042F6  6E38               	movwf	initRadio@wideRSSI^0,c
 27388  0042F8  0E00               	movlw	0
 27389  0042FA  2036               	addwfc	(??_initRadio+3)^0,w,c
 27390  0042FC  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 27391                           
 27392                           ; BSR set to: 61
 27393                           ;../phy/sx1216/phy_src/phy.c: 500:     srand(wideRSSI);
 27394  0042FE  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 27395  004304  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 27396  00430A  EC65  F042         	call	_srand	;wreg free
 27397                           
 27398                           ; BSR set to: 1
 27399  00430E  0012               	return		;funcret
 27400  004310                     __end_of_initRadio:
 27401                           	opt callstack 0
 27402                           
 27403 ;; *************** function _srand *****************
 27404 ;; Defined at:
 27405 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 27406 ;; Parameters:    Size  Location     Type
 27407 ;;  s               2    1[COMRAM] unsigned int 
 27408 ;; Auto vars:     Size  Location     Type
 27409 ;;		None
 27410 ;; Return value:  Size  Location     Type
 27411 ;;                  1    wreg      void 
 27412 ;; Registers used:
 27413 ;;		wreg, status,2, status,0
 27414 ;; Tracked objects:
 27415 ;;		On entry : 3F/3D
 27416 ;;		On exit  : 3F/1
 27417 ;;		Unchanged: 0/0
 27418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27421 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27422 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27423 ;;Total ram usage:        6 bytes
 27424 ;; Hardware stack levels used:    1
 27425 ;; Hardware stack levels required when called:    7
 27426 ;; This function calls:
 27427 ;;		Nothing
 27428 ;; This function is called by:
 27429 ;;		_initRadio
 27430 ;; This function uses a non-reentrant model
 27431 ;;
 27432                           
 27433                           	psect	text173
 27434  0084CA                     __ptext173:
 27435                           	opt callstack 0
 27436  0084CA                     _srand:
 27437                           	opt callstack 19
 27438                           
 27439                           ; BSR set to: 61
 27440                           
 27441                           ; BSR set to: 1
 27442                           ;incstack = 0
 27443  0084CA  0EFF               	movlw	255
 27444  0084CC  6E04               	movwf	??_srand^0,c
 27445  0084CE  0EFF               	movlw	255
 27446  0084D0  6E05               	movwf	(??_srand+1)^0,c
 27447  0084D2  0060  F008  F006   	movff	srand@s,??_srand+2
 27448  0084D8  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 27449  0084DE  5004               	movf	??_srand^0,w,c
 27450  0084E0  2606               	addwf	(??_srand+2)^0,f,c
 27451  0084E2  5005               	movf	(??_srand+1)^0,w,c
 27452  0084E4  2207               	addwfc	(??_srand+3)^0,f,c
 27453  0084E6  0060  F018  F1C8   	movff	??_srand+2,_seed
 27454  0084EC  0060  F01C  F1C9   	movff	??_srand+3,_seed+1
 27455  0084F2  0101               	movlb	1	; () banked
 27456  0084F4  6BCA               	clrf	(_seed+2)& (0+255),b
 27457  0084F6  6BCB               	clrf	(_seed+3)& (0+255),b
 27458  0084F8  6BCC               	clrf	(_seed+4)& (0+255),b
 27459  0084FA  6BCD               	clrf	(_seed+5)& (0+255),b
 27460  0084FC  6BCE               	clrf	(_seed+6)& (0+255),b
 27461  0084FE  6BCF               	clrf	(_seed+7)& (0+255),b
 27462                           
 27463                           ; BSR set to: 1
 27464  008500  0012               	return		;funcret
 27465  008502                     __end_of_srand:
 27466                           	opt callstack 0
 27467                           
 27468 ;; *************** function _setTxPower *****************
 27469 ;; Defined at:
 27470 ;;		line 139 in file "../phy/sx1216/phy_src/phy.c"
 27471 ;; Parameters:    Size  Location     Type
 27472 ;;  power           1    wreg     unsigned char 
 27473 ;; Auto vars:     Size  Location     Type
 27474 ;;  power           1   16[COMRAM] unsigned char 
 27475 ;; Return value:  Size  Location     Type
 27476 ;;                  1    wreg      void 
 27477 ;; Registers used:
 27478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27479 ;; Tracked objects:
 27480 ;;		On entry : 0/3D
 27481 ;;		On exit  : 3F/3D
 27482 ;;		Unchanged: 0/0
 27483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27488 ;;Total ram usage:        1 bytes
 27489 ;; Hardware stack levels used:    1
 27490 ;; Hardware stack levels required when called:   11
 27491 ;; This function calls:
 27492 ;;		_SX1276Write
 27493 ;; This function is called by:
 27494 ;;		_initRadio
 27495 ;; This function uses a non-reentrant model
 27496 ;;
 27497                           
 27498                           	psect	text174
 27499  0087FA                     __ptext174:
 27500                           	opt callstack 0
 27501  0087FA                     _setTxPower:
 27502                           	opt callstack 15
 27503                           
 27504                           ; BSR set to: 1
 27505                           ;incstack = 0
 27506                           ;setTxPower@power stored from wreg
 27507  0087FA  6E11               	movwf	setTxPower@power^0,c
 27508                           
 27509                           ;../phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);../phy/sx1216/phy_src/
      +                          phy.c: 140: {;../phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 27510  0087FC  0E02               	movlw	2
 27511  0087FE  6011               	cpfslt	setTxPower@power^0,c
 27512  008800  D002               	goto	l15493
 27513                           
 27514                           ;../phy/sx1216/phy_src/phy.c: 142:     {;../phy/sx1216/phy_src/phy.c: 143:         power
      +                           = 2;
 27515  008802  0E02               	movlw	2
 27516  008804  6E11               	movwf	setTxPower@power^0,c
 27517  008806                     l15493:
 27518                           
 27519                           ;../phy/sx1216/phy_src/phy.c: 145:     if(power > 13)
 27520  008806  0E0D               	movlw	13
 27521  008808  6411               	cpfsgt	setTxPower@power^0,c
 27522  00880A  D002               	goto	l15497
 27523                           
 27524                           ;../phy/sx1216/phy_src/phy.c: 146:     {;../phy/sx1216/phy_src/phy.c: 147:         power
      +                           = 13;
 27525  00880C  0E0D               	movlw	13
 27526  00880E  6E11               	movwf	setTxPower@power^0,c
 27527  008810                     l15497:
 27528                           
 27529                           ;../phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 27530  008810  5011               	movf	setTxPower@power^0,w,c
 27531  008812  0FFE               	addlw	254
 27532  008814  6E11               	movwf	setTxPower@power^0,c
 27533                           
 27534                           ;../phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 27535  008816  5011               	movf	setTxPower@power^0,w,c
 27536  008818  09F0               	iorlw	240
 27537  00881A  6E0F               	movwf	SX1276Write@data^0,c
 27538  00881C  0E09               	movlw	9
 27539  00881E  EC79  F046         	call	_SX1276Write
 27540                           
 27541                           ; BSR set to: 61
 27542  008822  0012               	return		;funcret
 27543  008824                     __end_of_setTxPower:
 27544                           	opt callstack 0
 27545                           
 27546 ;; *************** function _setSpreadingFactor *****************
 27547 ;; Defined at:
 27548 ;;		line 198 in file "../phy/sx1216/phy_src/phy.c"
 27549 ;; Parameters:    Size  Location     Type
 27550 ;;  sf              1    wreg     unsigned char 
 27551 ;; Auto vars:     Size  Location     Type
 27552 ;;  sf              1   42[COMRAM] unsigned char 
 27553 ;; Return value:  Size  Location     Type
 27554 ;;                  1    wreg      void 
 27555 ;; Registers used:
 27556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27557 ;; Tracked objects:
 27558 ;;		On entry : 3F/3D
 27559 ;;		On exit  : 0/0
 27560 ;;		Unchanged: 0/0
 27561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27563 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27564 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27565 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27566 ;;Total ram usage:        9 bytes
 27567 ;; Hardware stack levels used:    1
 27568 ;; Hardware stack levels required when called:   12
 27569 ;; This function calls:
 27570 ;;		_SX1276Read
 27571 ;;		_SX1276Write
 27572 ;;		___lldiv
 27573 ;;		_getSignalBandwidth
 27574 ;;		_getSpreadingFactor
 27575 ;; This function is called by:
 27576 ;;		_initRadio
 27577 ;; This function uses a non-reentrant model
 27578 ;;
 27579                           
 27580                           	psect	text175
 27581  00526C                     __ptext175:
 27582                           	opt callstack 0
 27583  00526C                     _setSpreadingFactor:
 27584                           	opt callstack 14
 27585                           
 27586                           ; BSR set to: 61
 27587                           ;incstack = 0
 27588                           ;setSpreadingFactor@sf stored from wreg
 27589  00526C  6E2B               	movwf	setSpreadingFactor@sf^0,c
 27590                           
 27591                           ;../phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);../phy/sx1216/phy
      +                          _src/phy.c: 199: {;../phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 27592  00526E  0E07               	movlw	7
 27593  005270  602B               	cpfslt	setSpreadingFactor@sf^0,c
 27594  005272  D002               	goto	l15521
 27595                           
 27596                           ;../phy/sx1216/phy_src/phy.c: 201:     {;../phy/sx1216/phy_src/phy.c: 202:         sf = 
      +                          7;
 27597  005274  0E07               	movlw	7
 27598  005276  D004               	goto	L25
 27599  005278                     l15521:
 27600  005278  0E0C               	movlw	12
 27601  00527A  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 27602  00527C  D002               	goto	l15525
 27603                           
 27604                           ;../phy/sx1216/phy_src/phy.c: 205:     {;../phy/sx1216/phy_src/phy.c: 206:         sf = 
      +                          12;
 27605  00527E  0E0C               	movlw	12
 27606  005280                     L25:
 27607  005280  6E2B               	movwf	setSpreadingFactor@sf^0,c
 27608  005282                     l15525:
 27609                           
 27610                           ;../phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 27611  005282  0EC3               	movlw	195
 27612  005284  6E0F               	movwf	SX1276Write@data^0,c
 27613  005286  0E31               	movlw	49
 27614  005288  EC79  F046         	call	_SX1276Write
 27615                           
 27616                           ; BSR set to: 61
 27617                           ;../phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 27618  00528C  0E0A               	movlw	10
 27619  00528E  6E0F               	movwf	SX1276Write@data^0,c
 27620  005290  0E37               	movlw	55
 27621  005292  EC79  F046         	call	_SX1276Write
 27622                           
 27623                           ; BSR set to: 61
 27624                           ;../phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((s
      +                          f << 4) & 0xf0));
 27625  005296  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 27626  00529C  3A23               	swapf	??_setSpreadingFactor^0,f,c
 27627  00529E  0EF0               	movlw	240
 27628  0052A0  1623               	andwf	??_setSpreadingFactor^0,f,c
 27629  0052A2  0EF0               	movlw	240
 27630  0052A4  1623               	andwf	??_setSpreadingFactor^0,f,c
 27631  0052A6  0E1E               	movlw	30
 27632  0052A8  EC65  F046         	call	_SX1276Read
 27633  0052AC  0B0F               	andlw	15
 27634  0052AE  1023               	iorwf	??_setSpreadingFactor^0,w,c
 27635  0052B0  6E0F               	movwf	SX1276Write@data^0,c
 27636  0052B2  0E1E               	movlw	30
 27637  0052B4  EC79  F046         	call	_SX1276Write
 27638                           
 27639                           ; BSR set to: 61
 27640                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 27641  0052B8  ECD2  F045         	call	_getSpreadingFactor	;wreg free
 27642  0052BC  0E01               	movlw	1
 27643  0052BE  6E23               	movwf	??_setSpreadingFactor^0,c
 27644  0052C0  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 27645  0052C2  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 27646  0052C4  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 27647  0052C6  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27648  0052C8  D005               	goto	u15270
 27649  0052CA                     u15275:
 27650  0052CA  90D8               	bcf	status,0,c
 27651  0052CC  3623               	rlcf	??_setSpreadingFactor^0,f,c
 27652  0052CE  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 27653  0052D0  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 27654  0052D2  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 27655  0052D4                     u15270:
 27656  0052D4  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27657  0052D6  D7F9               	goto	u15275
 27658  0052D8  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 27659  0052DE  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 27660  0052E4  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 27661  0052EA  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 27662  0052F0  EC7A  F026         	call	_getSignalBandwidth	;wreg free
 27663  0052F4  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27664  0052FA  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27665  005300  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27666  005306  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27667  00530C  EC42  F038         	call	___lldiv	;wreg free
 27668  005310  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$8654
 27669  005316  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$8654+1
 27670  00531C  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$8654+2
 27671  005322  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$8654+3
 27672                           
 27673                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 27674  005328  0EE8               	movlw	232
 27675  00532A  6E16               	movwf	___lldiv@dividend^0,c
 27676  00532C  0E03               	movlw	3
 27677  00532E  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27678  005330  0E00               	movlw	0
 27679  005332  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27680  005334  0E00               	movlw	0
 27681  005336  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27682  005338  0060  F09C  F01A   	movff	_setSpreadingFactor$8654,___lldiv@divisor
 27683  00533E  0060  F0A0  F01B   	movff	_setSpreadingFactor$8654+1,___lldiv@divisor+1
 27684  005344  0060  F0A4  F01C   	movff	_setSpreadingFactor$8654+2,___lldiv@divisor+2
 27685  00534A  0060  F0A8  F01D   	movff	_setSpreadingFactor$8654+3,___lldiv@divisor+3
 27686  005350  EC42  F038         	call	___lldiv	;wreg free
 27687  005354  0060  F058  F15E   	movff	?___lldiv,_symbolDuration
 27688  00535A  0060  F05C  F15F   	movff	?___lldiv+1,_symbolDuration+1
 27689  005360  0060  F060  F160   	movff	?___lldiv+2,_symbolDuration+2
 27690  005366  0060  F064  F161   	movff	?___lldiv+3,_symbolDuration+3
 27691  00536C  0012               	return		;funcret
 27692  00536E                     __end_of_setSpreadingFactor:
 27693                           	opt callstack 0
 27694                           
 27695 ;; *************** function _setSignalBandwidth *****************
 27696 ;; Defined at:
 27697 ;;		line 223 in file "../phy/sx1216/phy_src/phy.c"
 27698 ;; Parameters:    Size  Location     Type
 27699 ;;  sbw             4   34[COMRAM] unsigned long 
 27700 ;; Auto vars:     Size  Location     Type
 27701 ;;  bw              4   46[COMRAM] unsigned long 
 27702 ;; Return value:  Size  Location     Type
 27703 ;;                  1    wreg      void 
 27704 ;; Registers used:
 27705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27706 ;; Tracked objects:
 27707 ;;		On entry : 3F/3D
 27708 ;;		On exit  : 0/0
 27709 ;;		Unchanged: 0/0
 27710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27712 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27714 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27715 ;;Total ram usage:       16 bytes
 27716 ;; Hardware stack levels used:    1
 27717 ;; Hardware stack levels required when called:   12
 27718 ;; This function calls:
 27719 ;;		_SX1276Read
 27720 ;;		_SX1276Write
 27721 ;;		___flge
 27722 ;;		___lldiv
 27723 ;;		___xxtofl
 27724 ;;		_getSignalBandwidth
 27725 ;;		_getSpreadingFactor
 27726 ;; This function is called by:
 27727 ;;		_initRadio
 27728 ;; This function uses a non-reentrant model
 27729 ;;
 27730                           
 27731                           	psect	text176
 27732  000F4C                     __ptext176:
 27733                           	opt callstack 0
 27734  000F4C                     _setSignalBandwidth:
 27735                           	opt callstack 14
 27736                           
 27737                           ; BSR set to: 61
 27738                           ;../phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);../phy/sx1216/p
      +                          hy_src/phy.c: 224: {;../phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;../phy/sx1216/phy_
      +                          src/phy.c: 227:   if (sbw <= 7.8E3) {
 27739                           
 27740                           ;incstack = 0
 27741  000F4C  0E00               	movlw	0
 27742  000F4E  6E10               	movwf	___flge@ff1^0,c
 27743  000F50  0EC0               	movlw	192
 27744  000F52  6E11               	movwf	(___flge@ff1+1)^0,c
 27745  000F54  0EF3               	movlw	243
 27746  000F56  6E12               	movwf	(___flge@ff1+2)^0,c
 27747  000F58  0E45               	movlw	69
 27748  000F5A  6E13               	movwf	(___flge@ff1+3)^0,c
 27749  000F5C  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27750  000F62  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27751  000F68  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27752  000F6E  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27753  000F74  0E00               	movlw	0
 27754  000F76  EC27  F020         	call	___xxtofl
 27755  000F7A  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27756  000F80  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27757  000F86  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27758  000F8C  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27759  000F92  EC80  F02F         	call	___flge	;wreg free
 27760  000F96  A0D8               	btfss	status,0,c
 27761  000F98  D002               	goto	l15539
 27762                           
 27763                           ;../phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 27764  000F9A  0E00               	movlw	0
 27765  000F9C  D149               	goto	L26
 27766  000F9E                     l15539:
 27767  000F9E  0E00               	movlw	0
 27768  000FA0  6E10               	movwf	___flge@ff1^0,c
 27769  000FA2  0E80               	movlw	128
 27770  000FA4  6E11               	movwf	(___flge@ff1+1)^0,c
 27771  000FA6  0E22               	movlw	34
 27772  000FA8  6E12               	movwf	(___flge@ff1+2)^0,c
 27773  000FAA  0E46               	movlw	70
 27774  000FAC  6E13               	movwf	(___flge@ff1+3)^0,c
 27775  000FAE  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27776  000FB4  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27777  000FBA  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27778  000FC0  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27779  000FC6  0E00               	movlw	0
 27780  000FC8  EC27  F020         	call	___xxtofl
 27781  000FCC  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27782  000FD2  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27783  000FD8  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27784  000FDE  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27785  000FE4  EC80  F02F         	call	___flge	;wreg free
 27786  000FE8  A0D8               	btfss	status,0,c
 27787  000FEA  D002               	goto	l15543
 27788                           
 27789                           ;../phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 27790  000FEC  0E01               	movlw	1
 27791  000FEE  D120               	goto	L26
 27792  000FF0                     l15543:
 27793  000FF0  0E00               	movlw	0
 27794  000FF2  6E10               	movwf	___flge@ff1^0,c
 27795  000FF4  0EC0               	movlw	192
 27796  000FF6  6E11               	movwf	(___flge@ff1+1)^0,c
 27797  000FF8  0E73               	movlw	115
 27798  000FFA  6E12               	movwf	(___flge@ff1+2)^0,c
 27799  000FFC  0E46               	movlw	70
 27800  000FFE  6E13               	movwf	(___flge@ff1+3)^0,c
 27801  001000  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27802  001006  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27803  00100C  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27804  001012  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27805  001018  0E00               	movlw	0
 27806  00101A  EC27  F020         	call	___xxtofl
 27807  00101E  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27808  001024  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27809  00102A  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27810  001030  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27811  001036  EC80  F02F         	call	___flge	;wreg free
 27812  00103A  A0D8               	btfss	status,0,c
 27813  00103C  D002               	goto	l15547
 27814                           
 27815                           ;../phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 27816  00103E  0E02               	movlw	2
 27817  001040  D0F7               	goto	L26
 27818  001042                     l15547:
 27819  001042  0E00               	movlw	0
 27820  001044  6E10               	movwf	___flge@ff1^0,c
 27821  001046  0E80               	movlw	128
 27822  001048  6E11               	movwf	(___flge@ff1+1)^0,c
 27823  00104A  0EA2               	movlw	162
 27824  00104C  6E12               	movwf	(___flge@ff1+2)^0,c
 27825  00104E  0E46               	movlw	70
 27826  001050  6E13               	movwf	(___flge@ff1+3)^0,c
 27827  001052  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27828  001058  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27829  00105E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27830  001064  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27831  00106A  0E00               	movlw	0
 27832  00106C  EC27  F020         	call	___xxtofl
 27833  001070  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27834  001076  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27835  00107C  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27836  001082  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27837  001088  EC80  F02F         	call	___flge	;wreg free
 27838  00108C  A0D8               	btfss	status,0,c
 27839  00108E  D002               	goto	l15551
 27840                           
 27841                           ;../phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 27842  001090  0E03               	movlw	3
 27843  001092  D0CE               	goto	L26
 27844  001094                     l15551:
 27845  001094  0E00               	movlw	0
 27846  001096  6E10               	movwf	___flge@ff1^0,c
 27847  001098  0E24               	movlw	36
 27848  00109A  6E11               	movwf	(___flge@ff1+1)^0,c
 27849  00109C  0EF4               	movlw	244
 27850  00109E  6E12               	movwf	(___flge@ff1+2)^0,c
 27851  0010A0  0E46               	movlw	70
 27852  0010A2  6E13               	movwf	(___flge@ff1+3)^0,c
 27853  0010A4  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27854  0010AA  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27855  0010B0  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27856  0010B6  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27857  0010BC  0E00               	movlw	0
 27858  0010BE  EC27  F020         	call	___xxtofl
 27859  0010C2  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27860  0010C8  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27861  0010CE  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27862  0010D4  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27863  0010DA  EC80  F02F         	call	___flge	;wreg free
 27864  0010DE  A0D8               	btfss	status,0,c
 27865  0010E0  D002               	goto	l15555
 27866                           
 27867                           ;../phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 27868  0010E2  0E04               	movlw	4
 27869  0010E4  D0A5               	goto	L26
 27870  0010E6                     l15555:
 27871  0010E6  0E00               	movlw	0
 27872  0010E8  6E10               	movwf	___flge@ff1^0,c
 27873  0010EA  0EE4               	movlw	228
 27874  0010EC  6E11               	movwf	(___flge@ff1+1)^0,c
 27875  0010EE  0E22               	movlw	34
 27876  0010F0  6E12               	movwf	(___flge@ff1+2)^0,c
 27877  0010F2  0E47               	movlw	71
 27878  0010F4  6E13               	movwf	(___flge@ff1+3)^0,c
 27879  0010F6  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27880  0010FC  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27881  001102  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27882  001108  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27883  00110E  0E00               	movlw	0
 27884  001110  EC27  F020         	call	___xxtofl
 27885  001114  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27886  00111A  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27887  001120  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27888  001126  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27889  00112C  EC80  F02F         	call	___flge	;wreg free
 27890  001130  A0D8               	btfss	status,0,c
 27891  001132  D002               	goto	l15559
 27892                           
 27893                           ;../phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 27894  001134  0E05               	movlw	5
 27895  001136  D07C               	goto	L26
 27896  001138                     l15559:
 27897  001138  0E00               	movlw	0
 27898  00113A  6E10               	movwf	___flge@ff1^0,c
 27899  00113C  0E24               	movlw	36
 27900  00113E  6E11               	movwf	(___flge@ff1+1)^0,c
 27901  001140  0E74               	movlw	116
 27902  001142  6E12               	movwf	(___flge@ff1+2)^0,c
 27903  001144  0E47               	movlw	71
 27904  001146  6E13               	movwf	(___flge@ff1+3)^0,c
 27905  001148  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27906  00114E  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27907  001154  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27908  00115A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27909  001160  0E00               	movlw	0
 27910  001162  EC27  F020         	call	___xxtofl
 27911  001166  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27912  00116C  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27913  001172  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27914  001178  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27915  00117E  EC80  F02F         	call	___flge	;wreg free
 27916  001182  A0D8               	btfss	status,0,c
 27917  001184  D002               	goto	l15563
 27918                           
 27919                           ;../phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 27920  001186  0E06               	movlw	6
 27921  001188  D053               	goto	L26
 27922  00118A                     l15563:
 27923  00118A  0E00               	movlw	0
 27924  00118C  6E10               	movwf	___flge@ff1^0,c
 27925  00118E  0E24               	movlw	36
 27926  001190  6E11               	movwf	(___flge@ff1+1)^0,c
 27927  001192  0EF4               	movlw	244
 27928  001194  6E12               	movwf	(___flge@ff1+2)^0,c
 27929  001196  0E47               	movlw	71
 27930  001198  6E13               	movwf	(___flge@ff1+3)^0,c
 27931  00119A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27932  0011A0  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27933  0011A6  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27934  0011AC  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27935  0011B2  0E00               	movlw	0
 27936  0011B4  EC27  F020         	call	___xxtofl
 27937  0011B8  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27938  0011BE  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27939  0011C4  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27940  0011CA  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27941  0011D0  EC80  F02F         	call	___flge	;wreg free
 27942  0011D4  A0D8               	btfss	status,0,c
 27943  0011D6  D002               	goto	l15567
 27944                           
 27945                           ;../phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 27946  0011D8  0E07               	movlw	7
 27947  0011DA  D02A               	goto	L26
 27948  0011DC                     l15567:
 27949  0011DC  0E00               	movlw	0
 27950  0011DE  6E10               	movwf	___flge@ff1^0,c
 27951  0011E0  0E24               	movlw	36
 27952  0011E2  6E11               	movwf	(___flge@ff1+1)^0,c
 27953  0011E4  0E74               	movlw	116
 27954  0011E6  6E12               	movwf	(___flge@ff1+2)^0,c
 27955  0011E8  0E48               	movlw	72
 27956  0011EA  6E13               	movwf	(___flge@ff1+3)^0,c
 27957  0011EC  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27958  0011F2  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27959  0011F8  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27960  0011FE  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27961  001204  0E00               	movlw	0
 27962  001206  EC27  F020         	call	___xxtofl
 27963  00120A  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27964  001210  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27965  001216  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27966  00121C  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27967  001222  EC80  F02F         	call	___flge	;wreg free
 27968  001226  A0D8               	btfss	status,0,c
 27969  001228  D002               	goto	l15571
 27970                           
 27971                           ;../phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 27972  00122A  0E08               	movlw	8
 27973  00122C  D001               	goto	L26
 27974  00122E                     l15571:
 27975                           
 27976                           ;../phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 27977  00122E  0E09               	movlw	9
 27978  001230                     L26:
 27979  001230  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27980  001232  0E00               	movlw	0
 27981  001234  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27982  001236  0E00               	movlw	0
 27983  001238  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27984  00123A  0E00               	movlw	0
 27985  00123C  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27986                           
 27987                           ;../phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw <
      +                          < 4));
 27988  00123E  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 27989  001244  3A27               	swapf	??_setSignalBandwidth^0,f,c
 27990  001246  0EF0               	movlw	240
 27991  001248  1627               	andwf	??_setSignalBandwidth^0,f,c
 27992  00124A  0E1D               	movlw	29
 27993  00124C  EC65  F046         	call	_SX1276Read
 27994  001250  0B0F               	andlw	15
 27995  001252  1027               	iorwf	??_setSignalBandwidth^0,w,c
 27996  001254  6E0F               	movwf	SX1276Write@data^0,c
 27997  001256  0E1D               	movlw	29
 27998  001258  EC79  F046         	call	_SX1276Write
 27999                           
 28000                           ; BSR set to: 61
 28001                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 28002  00125C  ECD2  F045         	call	_getSpreadingFactor	;wreg free
 28003  001260  0E01               	movlw	1
 28004  001262  6E27               	movwf	??_setSignalBandwidth^0,c
 28005  001264  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 28006  001266  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 28007  001268  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 28008  00126A  2A0F               	incf	?_getSpreadingFactor^0,f,c
 28009  00126C  D005               	goto	u15370
 28010  00126E                     u15375:
 28011  00126E  90D8               	bcf	status,0,c
 28012  001270  3627               	rlcf	??_setSignalBandwidth^0,f,c
 28013  001272  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 28014  001274  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 28015  001276  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 28016  001278                     u15370:
 28017  001278  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 28018  00127A  D7F9               	goto	u15375
 28019  00127C  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 28020  001282  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 28021  001288  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 28022  00128E  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 28023  001294  EC7A  F026         	call	_getSignalBandwidth	;wreg free
 28024  001298  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 28025  00129E  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 28026  0012A4  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 28027  0012AA  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 28028  0012B0  EC42  F038         	call	___lldiv	;wreg free
 28029  0012B4  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$8655
 28030  0012BA  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$8655+1
 28031  0012C0  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$8655+2
 28032  0012C6  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$8655+3
 28033                           
 28034                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 28035  0012CC  0EE8               	movlw	232
 28036  0012CE  6E16               	movwf	___lldiv@dividend^0,c
 28037  0012D0  0E03               	movlw	3
 28038  0012D2  6E17               	movwf	(___lldiv@dividend+1)^0,c
 28039  0012D4  0E00               	movlw	0
 28040  0012D6  6E18               	movwf	(___lldiv@dividend+2)^0,c
 28041  0012D8  0E00               	movlw	0
 28042  0012DA  6E19               	movwf	(___lldiv@dividend+3)^0,c
 28043  0012DC  0060  F0AC  F01A   	movff	_setSignalBandwidth$8655,___lldiv@divisor
 28044  0012E2  0060  F0B0  F01B   	movff	_setSignalBandwidth$8655+1,___lldiv@divisor+1
 28045  0012E8  0060  F0B4  F01C   	movff	_setSignalBandwidth$8655+2,___lldiv@divisor+2
 28046  0012EE  0060  F0B8  F01D   	movff	_setSignalBandwidth$8655+3,___lldiv@divisor+3
 28047  0012F4  EC42  F038         	call	___lldiv	;wreg free
 28048  0012F8  0060  F058  F15E   	movff	?___lldiv,_symbolDuration
 28049  0012FE  0060  F05C  F15F   	movff	?___lldiv+1,_symbolDuration+1
 28050  001304  0060  F060  F160   	movff	?___lldiv+2,_symbolDuration+2
 28051  00130A  0060  F064  F161   	movff	?___lldiv+3,_symbolDuration+3
 28052  001310  0012               	return		;funcret
 28053  001312                     __end_of_setSignalBandwidth:
 28054                           	opt callstack 0
 28055                           
 28056 ;; *************** function _getSpreadingFactor *****************
 28057 ;; Defined at:
 28058 ;;		line 261 in file "../phy/sx1216/phy_src/phy.c"
 28059 ;; Parameters:    Size  Location     Type
 28060 ;;		None
 28061 ;; Auto vars:     Size  Location     Type
 28062 ;;		None
 28063 ;; Return value:  Size  Location     Type
 28064 ;;                  4   14[COMRAM] unsigned long 
 28065 ;; Registers used:
 28066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28067 ;; Tracked objects:
 28068 ;;		On entry : 3F/3D
 28069 ;;		On exit  : 3F/3D
 28070 ;;		Unchanged: 0/0
 28071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28075 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28076 ;;Total ram usage:        5 bytes
 28077 ;; Hardware stack levels used:    1
 28078 ;; Hardware stack levels required when called:   11
 28079 ;; This function calls:
 28080 ;;		_SX1276Read
 28081 ;; This function is called by:
 28082 ;;		_setSpreadingFactor
 28083 ;;		_setSignalBandwidth
 28084 ;; This function uses a non-reentrant model
 28085 ;;
 28086                           
 28087                           	psect	text177
 28088  008BA4                     __ptext177:
 28089                           	opt callstack 0
 28090  008BA4                     _getSpreadingFactor:
 28091                           	opt callstack 14
 28092                           
 28093                           ; BSR set to: 61
 28094                           ;../phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 28095                           
 28096                           ;incstack = 0
 28097  008BA4  0E1E               	movlw	30
 28098  008BA6  EC65  F046         	call	_SX1276Read
 28099  008BAA  6E13               	movwf	??_getSpreadingFactor^0,c
 28100  008BAC  3A13               	swapf	??_getSpreadingFactor^0,f,c
 28101  008BAE  0E0F               	movlw	15
 28102  008BB0  1613               	andwf	??_getSpreadingFactor^0,f,c
 28103  008BB2  5013               	movf	??_getSpreadingFactor^0,w,c
 28104  008BB4  6E0F               	movwf	?_getSpreadingFactor^0,c
 28105  008BB6  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 28106  008BB8  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 28107  008BBA  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 28108                           
 28109                           ; BSR set to: 61
 28110  008BBC  0012               	return		;funcret
 28111  008BBE                     __end_of_getSpreadingFactor:
 28112                           	opt callstack 0
 28113                           
 28114 ;; *************** function _getSignalBandwidth *****************
 28115 ;; Defined at:
 28116 ;;		line 272 in file "../phy/sx1216/phy_src/phy.c"
 28117 ;; Parameters:    Size  Location     Type
 28118 ;;		None
 28119 ;; Auto vars:     Size  Location     Type
 28120 ;;  bw              1   20[COMRAM] unsigned char 
 28121 ;; Return value:  Size  Location     Type
 28122 ;;                  4   14[COMRAM] unsigned long 
 28123 ;; Registers used:
 28124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28125 ;; Tracked objects:
 28126 ;;		On entry : 3F/3D
 28127 ;;		On exit  : 3F/3D
 28128 ;;		Unchanged: 0/0
 28129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28133 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28134 ;;Total ram usage:        7 bytes
 28135 ;; Hardware stack levels used:    1
 28136 ;; Hardware stack levels required when called:   11
 28137 ;; This function calls:
 28138 ;;		_SX1276Read
 28139 ;; This function is called by:
 28140 ;;		_setSpreadingFactor
 28141 ;;		_setSignalBandwidth
 28142 ;; This function uses a non-reentrant model
 28143 ;;
 28144                           
 28145                           	psect	text178
 28146  004CF4                     __ptext178:
 28147                           	opt callstack 0
 28148  004CF4                     _getSignalBandwidth:
 28149                           	opt callstack 14
 28150                           
 28151                           ; BSR set to: 61
 28152                           ;../phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 28153                           
 28154                           ; BSR set to: 61
 28155                           ;incstack = 0
 28156  004CF4  0E1D               	movlw	29
 28157  004CF6  EC65  F046         	call	_SX1276Read
 28158  004CFA  6E13               	movwf	??_getSignalBandwidth^0,c
 28159  004CFC  3813               	swapf	??_getSignalBandwidth^0,w,c
 28160  004CFE  0B0F               	andlw	15
 28161  004D00  6E15               	movwf	getSignalBandwidth@bw^0,c
 28162                           
 28163                           ;../phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 28164  004D02  D05A               	goto	l15013
 28165  004D04                     l14971:
 28166                           
 28167                           ; BSR set to: 61
 28168  004D04  0E78               	movlw	120
 28169  004D06  6E0F               	movwf	?_getSignalBandwidth^0,c
 28170  004D08  0E1E               	movlw	30
 28171  004D0A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28172  004D0C  0E00               	movlw	0
 28173  004D0E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28174  004D10  0E00               	movlw	0
 28175  004D12  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28176  004D14  0012               	return	
 28177  004D16                     l14975:
 28178                           
 28179                           ; BSR set to: 61
 28180  004D16  0EA0               	movlw	160
 28181  004D18  6E0F               	movwf	?_getSignalBandwidth^0,c
 28182  004D1A  0E28               	movlw	40
 28183  004D1C  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28184  004D1E  0E00               	movlw	0
 28185  004D20  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28186  004D22  0E00               	movlw	0
 28187  004D24  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28188  004D26  0012               	return	
 28189  004D28                     l14979:
 28190                           
 28191                           ; BSR set to: 61
 28192  004D28  0EF0               	movlw	240
 28193  004D2A  6E0F               	movwf	?_getSignalBandwidth^0,c
 28194  004D2C  0E3C               	movlw	60
 28195  004D2E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28196  004D30  0E00               	movlw	0
 28197  004D32  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28198  004D34  0E00               	movlw	0
 28199  004D36  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28200  004D38  0012               	return	
 28201  004D3A                     l14983:
 28202                           
 28203                           ; BSR set to: 61
 28204  004D3A  0E40               	movlw	64
 28205  004D3C  6E0F               	movwf	?_getSignalBandwidth^0,c
 28206  004D3E  0E51               	movlw	81
 28207  004D40  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28208  004D42  0E00               	movlw	0
 28209  004D44  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28210  004D46  0E00               	movlw	0
 28211  004D48  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28212  004D4A  0012               	return	
 28213  004D4C                     l14987:
 28214                           
 28215                           ; BSR set to: 61
 28216  004D4C  0E12               	movlw	18
 28217  004D4E  6E0F               	movwf	?_getSignalBandwidth^0,c
 28218  004D50  0E7A               	movlw	122
 28219  004D52  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28220  004D54  0E00               	movlw	0
 28221  004D56  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28222  004D58  0E00               	movlw	0
 28223  004D5A  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28224  004D5C  0012               	return	
 28225  004D5E                     l14991:
 28226                           
 28227                           ; BSR set to: 61
 28228  004D5E  0EE4               	movlw	228
 28229  004D60  6E0F               	movwf	?_getSignalBandwidth^0,c
 28230  004D62  0EA2               	movlw	162
 28231  004D64  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28232  004D66  0E00               	movlw	0
 28233  004D68  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28234  004D6A  0E00               	movlw	0
 28235  004D6C  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28236  004D6E  0012               	return	
 28237  004D70                     l14995:
 28238                           
 28239                           ; BSR set to: 61
 28240  004D70  0E24               	movlw	36
 28241  004D72  6E0F               	movwf	?_getSignalBandwidth^0,c
 28242  004D74  0EF4               	movlw	244
 28243  004D76  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28244  004D78  0E00               	movlw	0
 28245  004D7A  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28246  004D7C  0E00               	movlw	0
 28247  004D7E  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28248  004D80  0012               	return	
 28249  004D82                     l14999:
 28250                           
 28251                           ; BSR set to: 61
 28252  004D82  0E48               	movlw	72
 28253  004D84  6E0F               	movwf	?_getSignalBandwidth^0,c
 28254  004D86  0EE8               	movlw	232
 28255  004D88  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28256  004D8A  0E01               	movlw	1
 28257  004D8C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28258  004D8E  0E00               	movlw	0
 28259  004D90  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28260  004D92  0012               	return	
 28261  004D94                     l15003:
 28262                           
 28263                           ; BSR set to: 61
 28264  004D94  0E90               	movlw	144
 28265  004D96  6E0F               	movwf	?_getSignalBandwidth^0,c
 28266  004D98  0ED0               	movlw	208
 28267  004D9A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28268  004D9C  0E03               	movlw	3
 28269  004D9E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28270  004DA0  0E00               	movlw	0
 28271  004DA2  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28272  004DA4  0012               	return	
 28273  004DA6                     l15007:
 28274                           
 28275                           ; BSR set to: 61
 28276  004DA6  0E20               	movlw	32
 28277  004DA8  6E0F               	movwf	?_getSignalBandwidth^0,c
 28278  004DAA  0EA1               	movlw	161
 28279  004DAC  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28280  004DAE  0E07               	movlw	7
 28281  004DB0  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28282  004DB2  0E00               	movlw	0
 28283  004DB4  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28284  004DB6  0012               	return	
 28285  004DB8                     l15013:
 28286                           
 28287                           ; BSR set to: 61
 28288  004DB8  5015               	movf	getSignalBandwidth@bw^0,w,c
 28289  004DBA  6E13               	movwf	??_getSignalBandwidth^0,c
 28290  004DBC  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 28291                           
 28292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28293                           ; Switch size 1, requested type "simple"
 28294                           ; Number of cases is 1, Range of values is 0 to 0
 28295                           ; switch strategies available:
 28296                           ; Name         Instructions Cycles
 28297                           ; simple_byte            4     3 (average)
 28298                           ;	Chosen strategy is simple_byte
 28299  004DBE  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 28300  004DC0  0A00               	xorlw	0	; case 0
 28301  004DC2  A4D8               	btfss	status,2,c
 28302  004DC4  D01F               	goto	l15015
 28303                           
 28304                           ; BSR set to: 61
 28305                           ; Switch size 1, requested type "simple"
 28306                           ; Number of cases is 10, Range of values is 0 to 9
 28307                           ; switch strategies available:
 28308                           ; Name         Instructions Cycles
 28309                           ; simple_byte           31    16 (average)
 28310                           ;	Chosen strategy is simple_byte
 28311  004DC6  5013               	movf	??_getSignalBandwidth^0,w,c
 28312  004DC8  0A00               	xorlw	0	; case 0
 28313  004DCA  B4D8               	btfsc	status,2,c
 28314  004DCC  D79B               	goto	l14971
 28315  004DCE  0A01               	xorlw	1	; case 1
 28316  004DD0  B4D8               	btfsc	status,2,c
 28317  004DD2  D7A1               	goto	l14975
 28318  004DD4  0A03               	xorlw	3	; case 2
 28319  004DD6  B4D8               	btfsc	status,2,c
 28320  004DD8  D7A7               	goto	l14979
 28321  004DDA  0A01               	xorlw	1	; case 3
 28322  004DDC  B4D8               	btfsc	status,2,c
 28323  004DDE  D7AD               	goto	l14983
 28324  004DE0  0A07               	xorlw	7	; case 4
 28325  004DE2  B4D8               	btfsc	status,2,c
 28326  004DE4  D7B3               	goto	l14987
 28327  004DE6  0A01               	xorlw	1	; case 5
 28328  004DE8  B4D8               	btfsc	status,2,c
 28329  004DEA  D7B9               	goto	l14991
 28330  004DEC  0A03               	xorlw	3	; case 6
 28331  004DEE  B4D8               	btfsc	status,2,c
 28332  004DF0  D7BF               	goto	l14995
 28333  004DF2  0A01               	xorlw	1	; case 7
 28334  004DF4  B4D8               	btfsc	status,2,c
 28335  004DF6  D7C5               	goto	l14999
 28336  004DF8  0A0F               	xorlw	15	; case 8
 28337  004DFA  B4D8               	btfsc	status,2,c
 28338  004DFC  D7CB               	goto	l15003
 28339  004DFE  0A01               	xorlw	1	; case 9
 28340  004E00  B4D8               	btfsc	status,2,c
 28341  004E02  D7D1               	goto	l15007
 28342  004E04                     l15015:
 28343                           
 28344                           ; BSR set to: 61
 28345                           ;../phy/sx1216/phy_src/phy.c: 287:   return 0;
 28346  004E04  0E00               	movlw	0
 28347  004E06  6E0F               	movwf	?_getSignalBandwidth^0,c
 28348  004E08  0E00               	movlw	0
 28349  004E0A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28350  004E0C  0E00               	movlw	0
 28351  004E0E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28352  004E10  0E00               	movlw	0
 28353  004E12  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28354                           
 28355                           ; BSR set to: 61
 28356  004E14  0012               	return		;funcret
 28357  004E16                     __end_of_getSignalBandwidth:
 28358                           	opt callstack 0
 28359                           
 28360 ;; *************** function ___xxtofl *****************
 28361 ;; Defined at:
 28362 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 28363 ;; Parameters:    Size  Location     Type
 28364 ;;  sign            1    wreg     unsigned char 
 28365 ;;  val             4    1[COMRAM] long 
 28366 ;; Auto vars:     Size  Location     Type
 28367 ;;  sign            1    9[COMRAM] unsigned char 
 28368 ;;  arg             4   11[COMRAM] unsigned long 
 28369 ;;  exp             1   10[COMRAM] unsigned char 
 28370 ;; Return value:  Size  Location     Type
 28371 ;;                  4    1[COMRAM] unsigned char 
 28372 ;; Registers used:
 28373 ;;		wreg, status,2, status,0
 28374 ;; Tracked objects:
 28375 ;;		On entry : 0/1
 28376 ;;		On exit  : 0/0
 28377 ;;		Unchanged: 0/0
 28378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28380 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28381 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28382 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28383 ;;Total ram usage:       14 bytes
 28384 ;; Hardware stack levels used:    1
 28385 ;; Hardware stack levels required when called:    7
 28386 ;; This function calls:
 28387 ;;		Nothing
 28388 ;; This function is called by:
 28389 ;;		_setSignalBandwidth
 28390 ;;		_get_lqi
 28391 ;; This function uses a non-reentrant model
 28392 ;;
 28393                           
 28394                           	psect	text179
 28395  00404E                     __ptext179:
 28396                           	opt callstack 0
 28397  00404E                     ___xxtofl:
 28398                           	opt callstack 18
 28399                           
 28400                           ; BSR set to: 61
 28401                           ;incstack = 0
 28402                           ;___xxtofl@sign stored from wreg
 28403  00404E  6E0A               	movwf	___xxtofl@sign^0,c
 28404  004050  500A               	movf	___xxtofl@sign^0,w,c
 28405  004052  A4D8               	btfss	status,2,c
 28406  004054  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28407  004056  D022               	goto	l3855
 28408  004058  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 28409  00405E  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 28410  004064  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 28411  00406A  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 28412  004070  1E06               	comf	??___xxtofl^0,f,c
 28413  004072  1E07               	comf	(??___xxtofl+1)^0,f,c
 28414  004074  1E08               	comf	(??___xxtofl+2)^0,f,c
 28415  004076  1E09               	comf	(??___xxtofl+3)^0,f,c
 28416  004078  2A06               	incf	??___xxtofl^0,f,c
 28417  00407A  0E00               	movlw	0
 28418  00407C  2207               	addwfc	(??___xxtofl+1)^0,f,c
 28419  00407E  2208               	addwfc	(??___xxtofl+2)^0,f,c
 28420  004080  2209               	addwfc	(??___xxtofl+3)^0,f,c
 28421  004082  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 28422  004088  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 28423  00408E  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 28424  004094  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 28425  00409A  D00C               	goto	l15111
 28426  00409C                     l3855:
 28427  00409C  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 28428  0040A2  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 28429  0040A8  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 28430  0040AE  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 28431  0040B4                     l15111:
 28432  0040B4  5002               	movf	___xxtofl@val^0,w,c
 28433  0040B6  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 28434  0040B8  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 28435  0040BA  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 28436  0040BC  A4D8               	btfss	status,2,c
 28437  0040BE  D009               	goto	l15117
 28438  0040C0  0E00               	movlw	0
 28439  0040C2  6E02               	movwf	?___xxtofl^0,c
 28440  0040C4  0E00               	movlw	0
 28441  0040C6  6E03               	movwf	(?___xxtofl+1)^0,c
 28442  0040C8  0E00               	movlw	0
 28443  0040CA  6E04               	movwf	(?___xxtofl+2)^0,c
 28444  0040CC  0E00               	movlw	0
 28445  0040CE  6E05               	movwf	(?___xxtofl+3)^0,c
 28446  0040D0  0012               	return	
 28447  0040D2                     l15117:
 28448  0040D2  0E96               	movlw	150
 28449  0040D4  6E0B               	movwf	___xxtofl@exp^0,c
 28450  0040D6  D006               	goto	l15121
 28451  0040D8                     l15119:
 28452  0040D8  2A0B               	incf	___xxtofl@exp^0,f,c
 28453  0040DA  90D8               	bcf	status,0,c
 28454  0040DC  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28455  0040DE  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28456  0040E0  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28457  0040E2  320C               	rrcf	___xxtofl@arg^0,f,c
 28458  0040E4                     l15121:
 28459  0040E4  0E00               	movlw	0
 28460  0040E6  140C               	andwf	___xxtofl@arg^0,w,c
 28461  0040E8  6E06               	movwf	??___xxtofl^0,c
 28462  0040EA  0E00               	movlw	0
 28463  0040EC  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28464  0040EE  6E07               	movwf	(??___xxtofl+1)^0,c
 28465  0040F0  0E00               	movlw	0
 28466  0040F2  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28467  0040F4  6E08               	movwf	(??___xxtofl+2)^0,c
 28468  0040F6  0EFE               	movlw	254
 28469  0040F8  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28470  0040FA  6E09               	movwf	(??___xxtofl+3)^0,c
 28471  0040FC  5006               	movf	??___xxtofl^0,w,c
 28472  0040FE  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28473  004100  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28474  004102  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28475  004104  B4D8               	btfsc	status,2,c
 28476  004106  D00D               	goto	l3862
 28477  004108  D7E7               	goto	l15119
 28478  00410A                     l15123:
 28479  00410A  2A0B               	incf	___xxtofl@exp^0,f,c
 28480  00410C  0E01               	movlw	1
 28481  00410E  260C               	addwf	___xxtofl@arg^0,f,c
 28482  004110  0E00               	movlw	0
 28483  004112  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 28484  004114  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 28485  004116  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 28486  004118  90D8               	bcf	status,0,c
 28487  00411A  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28488  00411C  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28489  00411E  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28490  004120  320C               	rrcf	___xxtofl@arg^0,f,c
 28491  004122                     l3862:
 28492  004122  0E00               	movlw	0
 28493  004124  140C               	andwf	___xxtofl@arg^0,w,c
 28494  004126  6E06               	movwf	??___xxtofl^0,c
 28495  004128  0E00               	movlw	0
 28496  00412A  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28497  00412C  6E07               	movwf	(??___xxtofl+1)^0,c
 28498  00412E  0E00               	movlw	0
 28499  004130  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28500  004132  6E08               	movwf	(??___xxtofl+2)^0,c
 28501  004134  0EFF               	movlw	255
 28502  004136  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28503  004138  6E09               	movwf	(??___xxtofl+3)^0,c
 28504  00413A  5006               	movf	??___xxtofl^0,w,c
 28505  00413C  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28506  00413E  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28507  004140  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28508  004142  B4D8               	btfsc	status,2,c
 28509  004144  D007               	goto	l15131
 28510  004146  D7E1               	goto	l15123
 28511  004148                     l15129:
 28512  004148  060B               	decf	___xxtofl@exp^0,f,c
 28513  00414A  90D8               	bcf	status,0,c
 28514  00414C  360C               	rlcf	___xxtofl@arg^0,f,c
 28515  00414E  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 28516  004150  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 28517  004152  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 28518  004154                     l15131:
 28519  004154  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 28520  004156  D003               	goto	u14740
 28521  004158  0E02               	movlw	2
 28522  00415A  600B               	cpfslt	___xxtofl@exp^0,c
 28523  00415C  D7F5               	goto	l15129
 28524  00415E                     u14740:
 28525  00415E  A00B               	btfss	___xxtofl@exp^0,0,c
 28526  004160  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 28527  004162  90D8               	bcf	status,0,c
 28528  004164  320B               	rrcf	___xxtofl@exp^0,f,c
 28529  004166  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 28530  00416C  6A07               	clrf	(??___xxtofl+1)^0,c
 28531  00416E  6A08               	clrf	(??___xxtofl+2)^0,c
 28532  004170  6A09               	clrf	(??___xxtofl+3)^0,c
 28533  004172  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 28534  004178  6A08               	clrf	(??___xxtofl+2)^0,c
 28535  00417A  6A07               	clrf	(??___xxtofl+1)^0,c
 28536  00417C  6A06               	clrf	??___xxtofl^0,c
 28537  00417E  5006               	movf	??___xxtofl^0,w,c
 28538  004180  120C               	iorwf	___xxtofl@arg^0,f,c
 28539  004182  5007               	movf	(??___xxtofl+1)^0,w,c
 28540  004184  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 28541  004186  5008               	movf	(??___xxtofl+2)^0,w,c
 28542  004188  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 28543  00418A  5009               	movf	(??___xxtofl+3)^0,w,c
 28544  00418C  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 28545  00418E  500A               	movf	___xxtofl@sign^0,w,c
 28546  004190  A4D8               	btfss	status,2,c
 28547  004192  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28548  004194  D001               	goto	l15147
 28549  004196  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 28550  004198                     l15147:
 28551  004198  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 28552  00419E  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 28553  0041A4  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 28554  0041AA  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 28555  0041B0  0012               	return		;funcret
 28556  0041B2                     __end_of___xxtofl:
 28557                           	opt callstack 0
 28558                           
 28559 ;; *************** function ___flge *****************
 28560 ;; Defined at:
 28561 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 28562 ;; Parameters:    Size  Location     Type
 28563 ;;  ff1             4   15[COMRAM] unsigned char 
 28564 ;;  ff2             4   19[COMRAM] unsigned char 
 28565 ;; Auto vars:     Size  Location     Type
 28566 ;;		None
 28567 ;; Return value:  Size  Location     Type
 28568 ;;		None               void
 28569 ;; Registers used:
 28570 ;;		wreg, status,2, status,0
 28571 ;; Tracked objects:
 28572 ;;		On entry : 0/3D
 28573 ;;		On exit  : 0/0
 28574 ;;		Unchanged: 0/0
 28575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28576 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28579 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28580 ;;Total ram usage:       12 bytes
 28581 ;; Hardware stack levels used:    1
 28582 ;; Hardware stack levels required when called:    7
 28583 ;; This function calls:
 28584 ;;		Nothing
 28585 ;; This function is called by:
 28586 ;;		_setSignalBandwidth
 28587 ;; This function uses a non-reentrant model
 28588 ;;
 28589                           
 28590                           	psect	text180
 28591  005F00                     __ptext180:
 28592                           	opt callstack 0
 28593  005F00                     ___flge:
 28594                           	opt callstack 18
 28595                           
 28596                           ;incstack = 0
 28597  005F00  0E00               	movlw	0
 28598  005F02  1410               	andwf	___flge@ff1^0,w,c
 28599  005F04  6E18               	movwf	??___flge^0,c
 28600  005F06  0E00               	movlw	0
 28601  005F08  1411               	andwf	(___flge@ff1+1)^0,w,c
 28602  005F0A  6E19               	movwf	(??___flge+1)^0,c
 28603  005F0C  0E80               	movlw	128
 28604  005F0E  1412               	andwf	(___flge@ff1+2)^0,w,c
 28605  005F10  6E1A               	movwf	(??___flge+2)^0,c
 28606  005F12  0E7F               	movlw	127
 28607  005F14  1413               	andwf	(___flge@ff1+3)^0,w,c
 28608  005F16  6E1B               	movwf	(??___flge+3)^0,c
 28609  005F18  5018               	movf	??___flge^0,w,c
 28610  005F1A  1019               	iorwf	(??___flge+1)^0,w,c
 28611  005F1C  101A               	iorwf	(??___flge+2)^0,w,c
 28612  005F1E  101B               	iorwf	(??___flge+3)^0,w,c
 28613  005F20  A4D8               	btfss	status,2,c
 28614  005F22  D008               	goto	l15071
 28615  005F24  0E00               	movlw	0
 28616  005F26  6E10               	movwf	___flge@ff1^0,c
 28617  005F28  0E00               	movlw	0
 28618  005F2A  6E11               	movwf	(___flge@ff1+1)^0,c
 28619  005F2C  0E00               	movlw	0
 28620  005F2E  6E12               	movwf	(___flge@ff1+2)^0,c
 28621  005F30  0E00               	movlw	0
 28622  005F32  6E13               	movwf	(___flge@ff1+3)^0,c
 28623  005F34                     l15071:
 28624  005F34  0E00               	movlw	0
 28625  005F36  1414               	andwf	___flge@ff2^0,w,c
 28626  005F38  6E18               	movwf	??___flge^0,c
 28627  005F3A  0E00               	movlw	0
 28628  005F3C  1415               	andwf	(___flge@ff2+1)^0,w,c
 28629  005F3E  6E19               	movwf	(??___flge+1)^0,c
 28630  005F40  0E80               	movlw	128
 28631  005F42  1416               	andwf	(___flge@ff2+2)^0,w,c
 28632  005F44  6E1A               	movwf	(??___flge+2)^0,c
 28633  005F46  0E7F               	movlw	127
 28634  005F48  1417               	andwf	(___flge@ff2+3)^0,w,c
 28635  005F4A  6E1B               	movwf	(??___flge+3)^0,c
 28636  005F4C  5018               	movf	??___flge^0,w,c
 28637  005F4E  1019               	iorwf	(??___flge+1)^0,w,c
 28638  005F50  101A               	iorwf	(??___flge+2)^0,w,c
 28639  005F52  101B               	iorwf	(??___flge+3)^0,w,c
 28640  005F54  A4D8               	btfss	status,2,c
 28641  005F56  D008               	goto	l15075
 28642  005F58  0E00               	movlw	0
 28643  005F5A  6E14               	movwf	___flge@ff2^0,c
 28644  005F5C  0E00               	movlw	0
 28645  005F5E  6E15               	movwf	(___flge@ff2+1)^0,c
 28646  005F60  0E00               	movlw	0
 28647  005F62  6E16               	movwf	(___flge@ff2+2)^0,c
 28648  005F64  0E00               	movlw	0
 28649  005F66  6E17               	movwf	(___flge@ff2+3)^0,c
 28650  005F68                     l15075:
 28651  005F68  AE13               	btfss	(___flge@ff1+3)^0,7,c
 28652  005F6A  D009               	goto	l15079
 28653  005F6C  6C10               	negf	___flge@ff1^0,c
 28654  005F6E  1E11               	comf	(___flge@ff1+1)^0,f,c
 28655  005F70  B0D8               	btfsc	status,0,c
 28656  005F72  2A11               	incf	(___flge@ff1+1)^0,f,c
 28657  005F74  1E12               	comf	(___flge@ff1+2)^0,f,c
 28658  005F76  B0D8               	btfsc	status,0,c
 28659  005F78  2A12               	incf	(___flge@ff1+2)^0,f,c
 28660  005F7A  0E80               	movlw	128
 28661  005F7C  5613               	subfwb	(___flge@ff1+3)^0,f,c
 28662  005F7E                     l15079:
 28663  005F7E  AE17               	btfss	(___flge@ff2+3)^0,7,c
 28664  005F80  D009               	goto	l3465
 28665  005F82  6C14               	negf	___flge@ff2^0,c
 28666  005F84  1E15               	comf	(___flge@ff2+1)^0,f,c
 28667  005F86  B0D8               	btfsc	status,0,c
 28668  005F88  2A15               	incf	(___flge@ff2+1)^0,f,c
 28669  005F8A  1E16               	comf	(___flge@ff2+2)^0,f,c
 28670  005F8C  B0D8               	btfsc	status,0,c
 28671  005F8E  2A16               	incf	(___flge@ff2+2)^0,f,c
 28672  005F90  0E80               	movlw	128
 28673  005F92  5617               	subfwb	(___flge@ff2+3)^0,f,c
 28674  005F94                     l3465:
 28675  005F94  0E00               	movlw	0
 28676  005F96  1A10               	xorwf	___flge@ff1^0,f,c
 28677  005F98  0E00               	movlw	0
 28678  005F9A  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 28679  005F9C  0E00               	movlw	0
 28680  005F9E  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 28681  005FA0  0E80               	movlw	128
 28682  005FA2  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 28683  005FA4  0E00               	movlw	0
 28684  005FA6  1A14               	xorwf	___flge@ff2^0,f,c
 28685  005FA8  0E00               	movlw	0
 28686  005FAA  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 28687  005FAC  0E00               	movlw	0
 28688  005FAE  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 28689  005FB0  0E80               	movlw	128
 28690  005FB2  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 28691  005FB4  5014               	movf	___flge@ff2^0,w,c
 28692  005FB6  5C10               	subwf	___flge@ff1^0,w,c
 28693  005FB8  5015               	movf	(___flge@ff2+1)^0,w,c
 28694  005FBA  5811               	subwfb	(___flge@ff1+1)^0,w,c
 28695  005FBC  5016               	movf	(___flge@ff2+2)^0,w,c
 28696  005FBE  5812               	subwfb	(___flge@ff1+2)^0,w,c
 28697  005FC0  5017               	movf	(___flge@ff2+3)^0,w,c
 28698  005FC2  5813               	subwfb	(___flge@ff1+3)^0,w,c
 28699  005FC4  B0D8               	btfsc	status,0,c
 28700  005FC6  D002               	goto	l15085
 28701  005FC8  90D8               	bcf	status,0,c
 28702  005FCA  0012               	return	
 28703  005FCC                     l15085:
 28704  005FCC  80D8               	bsf	status,0,c
 28705  005FCE  0012               	return		;funcret
 28706  005FD0                     __end_of___flge:
 28707                           	opt callstack 0
 28708                           
 28709 ;; *************** function _setPreambleLength *****************
 28710 ;; Defined at:
 28711 ;;		line 316 in file "../phy/sx1216/phy_src/phy.c"
 28712 ;; Parameters:    Size  Location     Type
 28713 ;;  length          2   16[COMRAM] unsigned short 
 28714 ;; Auto vars:     Size  Location     Type
 28715 ;;		None
 28716 ;; Return value:  Size  Location     Type
 28717 ;;                  1    wreg      void 
 28718 ;; Registers used:
 28719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28720 ;; Tracked objects:
 28721 ;;		On entry : 3F/3D
 28722 ;;		On exit  : 3F/3D
 28723 ;;		Unchanged: 0/0
 28724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28729 ;;Total ram usage:        2 bytes
 28730 ;; Hardware stack levels used:    1
 28731 ;; Hardware stack levels required when called:   11
 28732 ;; This function calls:
 28733 ;;		_SX1276Write
 28734 ;; This function is called by:
 28735 ;;		_initRadio
 28736 ;; This function uses a non-reentrant model
 28737 ;;
 28738                           
 28739                           	psect	text181
 28740  008BBE                     __ptext181:
 28741                           	opt callstack 0
 28742  008BBE                     _setPreambleLength:
 28743                           	opt callstack 15
 28744                           
 28745                           ; BSR set to: 61
 28746                           ;../phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);../phy/sx1216
      +                          /phy_src/phy.c: 317: {;../phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(l
      +                          ength >> 8));
 28747                           
 28748                           ;incstack = 0
 28749  008BBE  0060  F048  F00F   	movff	setPreambleLength@length+1,SX1276Write@data
 28750  008BC4  0E20               	movlw	32
 28751  008BC6  EC79  F046         	call	_SX1276Write
 28752                           
 28753                           ;../phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 28754  008BCA  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 28755  008BD0  0E21               	movlw	33
 28756  008BD2  EC79  F046         	call	_SX1276Write
 28757                           
 28758                           ; BSR set to: 61
 28759  008BD6  0012               	return		;funcret
 28760  008BD8                     __end_of_setPreambleLength:
 28761                           	opt callstack 0
 28762                           
 28763 ;; *************** function _setFrequency *****************
 28764 ;; Defined at:
 28765 ;;		line 160 in file "../phy/sx1216/phy_src/phy.c"
 28766 ;; Parameters:    Size  Location     Type
 28767 ;;  frequency       4   34[COMRAM] unsigned long 
 28768 ;; Auto vars:     Size  Location     Type
 28769 ;;  num             4   42[COMRAM] unsigned long 
 28770 ;;  num_mod         4   38[COMRAM] unsigned long 
 28771 ;; Return value:  Size  Location     Type
 28772 ;;                  4   34[COMRAM] unsigned long 
 28773 ;; Registers used:
 28774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28775 ;; Tracked objects:
 28776 ;;		On entry : 0/1
 28777 ;;		On exit  : 3F/3D
 28778 ;;		Unchanged: 0/0
 28779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28781 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28783 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28784 ;;Total ram usage:       12 bytes
 28785 ;; Hardware stack levels used:    1
 28786 ;; Hardware stack levels required when called:   11
 28787 ;; This function calls:
 28788 ;;		_SX1276Write
 28789 ;;		___lldiv
 28790 ;;		___llmod
 28791 ;; This function is called by:
 28792 ;;		_initRadio
 28793 ;;		_PHY_SetChannel
 28794 ;; This function uses a non-reentrant model
 28795 ;;
 28796                           
 28797                           	psect	text182
 28798  004AA6                     __ptext182:
 28799                           	opt callstack 0
 28800  004AA6                     _setFrequency:
 28801                           	opt callstack 15
 28802                           
 28803                           ;../phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);../phy/sx12
      +                          16/phy_src/phy.c: 161: {;../phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;..
      +                          /phy/sx1216/phy_src/phy.c: 170:     num = frequency / 15625;
 28804                           
 28805                           ; BSR set to: 61
 28806                           ;incstack = 0
 28807  004AA6  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 28808  004AAC  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 28809  004AB2  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 28810  004AB8  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 28811  004ABE  0E09               	movlw	9
 28812  004AC0  6E1A               	movwf	___lldiv@divisor^0,c
 28813  004AC2  0E3D               	movlw	61
 28814  004AC4  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28815  004AC6  0E00               	movlw	0
 28816  004AC8  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28817  004ACA  0E00               	movlw	0
 28818  004ACC  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28819  004ACE  EC42  F038         	call	___lldiv	;wreg free
 28820  004AD2  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 28821  004AD8  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 28822  004ADE  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 28823  004AE4  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 28824                           
 28825                           ;../phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 28826  004AEA  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 28827  004AF0  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 28828  004AF6  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 28829  004AFC  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 28830  004B02  0E09               	movlw	9
 28831  004B04  6E06               	movwf	___llmod@divisor^0,c
 28832  004B06  0E3D               	movlw	61
 28833  004B08  6E07               	movwf	(___llmod@divisor+1)^0,c
 28834  004B0A  0E00               	movlw	0
 28835  004B0C  6E08               	movwf	(___llmod@divisor+2)^0,c
 28836  004B0E  0E00               	movlw	0
 28837  004B10  6E09               	movwf	(___llmod@divisor+3)^0,c
 28838  004B12  EC89  F03A         	call	___llmod	;wreg free
 28839  004B16  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 28840  004B1C  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 28841  004B22  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 28842  004B28  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 28843                           
 28844                           ;../phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 28845  004B2E  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 28846  004B34  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 28847  004B3A  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 28848  004B40  6A2B               	clrf	setFrequency@num^0,c
 28849                           
 28850                           ;../phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 28851  004B42  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 28852  004B48  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 28853  004B4E  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 28854  004B54  6A27               	clrf	setFrequency@num_mod^0,c
 28855                           
 28856                           ;../phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 28857  004B56  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 28858  004B5C  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 28859  004B62  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 28860  004B68  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 28861  004B6E  0E09               	movlw	9
 28862  004B70  6E1A               	movwf	___lldiv@divisor^0,c
 28863  004B72  0E3D               	movlw	61
 28864  004B74  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28865  004B76  0E00               	movlw	0
 28866  004B78  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28867  004B7A  0E00               	movlw	0
 28868  004B7C  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28869  004B7E  EC42  F038         	call	___lldiv	;wreg free
 28870  004B82  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 28871  004B88  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 28872  004B8E  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 28873  004B94  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 28874                           
 28875                           ;../phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 28876  004B9A  5027               	movf	setFrequency@num_mod^0,w,c
 28877  004B9C  262B               	addwf	setFrequency@num^0,f,c
 28878  004B9E  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 28879  004BA0  222C               	addwfc	(setFrequency@num+1)^0,f,c
 28880  004BA2  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 28881  004BA4  222D               	addwfc	(setFrequency@num+2)^0,f,c
 28882  004BA6  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 28883  004BA8  222E               	addwfc	(setFrequency@num+3)^0,f,c
 28884                           
 28885                           ;../phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 28886  004BAA  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 28887  004BB0  0E06               	movlw	6
 28888  004BB2  EC79  F046         	call	_SX1276Write
 28889                           
 28890                           ; BSR set to: 61
 28891                           ;../phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 28892  004BB6  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 28893  004BBC  0E07               	movlw	7
 28894  004BBE  EC79  F046         	call	_SX1276Write
 28895                           
 28896                           ; BSR set to: 61
 28897                           ;../phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 28898  004BC2  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 28899  004BC8  0E08               	movlw	8
 28900  004BCA  EC79  F046         	call	_SX1276Write
 28901                           
 28902                           ; BSR set to: 61
 28903  004BCE  0012               	return		;funcret
 28904  004BD0                     __end_of_setFrequency:
 28905                           	opt callstack 0
 28906                           
 28907 ;; *************** function _setCodingRate4 *****************
 28908 ;; Defined at:
 28909 ;;		line 297 in file "../phy/sx1216/phy_src/phy.c"
 28910 ;; Parameters:    Size  Location     Type
 28911 ;;  denominator     1    wreg     unsigned char 
 28912 ;; Auto vars:     Size  Location     Type
 28913 ;;  denominator     1   18[COMRAM] unsigned char 
 28914 ;;  cr              1   17[COMRAM] unsigned char 
 28915 ;; Return value:  Size  Location     Type
 28916 ;;                  1    wreg      void 
 28917 ;; Registers used:
 28918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28919 ;; Tracked objects:
 28920 ;;		On entry : 3F/3D
 28921 ;;		On exit  : 3F/3D
 28922 ;;		Unchanged: 0/0
 28923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28927 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28928 ;;Total ram usage:        3 bytes
 28929 ;; Hardware stack levels used:    1
 28930 ;; Hardware stack levels required when called:   11
 28931 ;; This function calls:
 28932 ;;		_SX1276Read
 28933 ;;		_SX1276Write
 28934 ;; This function is called by:
 28935 ;;		_initRadio
 28936 ;; This function uses a non-reentrant model
 28937 ;;
 28938                           
 28939                           	psect	text183
 28940  0085DE                     __ptext183:
 28941                           	opt callstack 0
 28942  0085DE                     _setCodingRate4:
 28943                           	opt callstack 15
 28944                           
 28945                           ; BSR set to: 61
 28946                           ;incstack = 0
 28947                           ;setCodingRate4@denominator stored from wreg
 28948  0085DE  6E13               	movwf	setCodingRate4@denominator^0,c
 28949                           
 28950                           ;../phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);../phy/sx121
      +                          6/phy_src/phy.c: 298: {;../phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 28951  0085E0  0E05               	movlw	5
 28952  0085E2  6013               	cpfslt	setCodingRate4@denominator^0,c
 28953  0085E4  D002               	goto	l15583
 28954                           
 28955                           ;../phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 28956  0085E6  0E05               	movlw	5
 28957  0085E8  D004               	goto	L27
 28958  0085EA                     l15583:
 28959  0085EA  0E08               	movlw	8
 28960  0085EC  6413               	cpfsgt	setCodingRate4@denominator^0,c
 28961  0085EE  D002               	goto	l15587
 28962                           
 28963                           ;../phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 28964  0085F0  0E08               	movlw	8
 28965  0085F2                     L27:
 28966  0085F2  6E13               	movwf	setCodingRate4@denominator^0,c
 28967  0085F4                     l15587:
 28968                           
 28969                           ;../phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 28970  0085F4  5013               	movf	setCodingRate4@denominator^0,w,c
 28971  0085F6  0FFC               	addlw	252
 28972  0085F8  6E12               	movwf	setCodingRate4@cr^0,c
 28973                           
 28974                           ;../phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr <
      +                          < 1));
 28975  0085FA  90D8               	bcf	status,0,c
 28976  0085FC  3412               	rlcf	setCodingRate4@cr^0,w,c
 28977  0085FE  6E11               	movwf	??_setCodingRate4^0,c
 28978  008600  0E1D               	movlw	29
 28979  008602  EC65  F046         	call	_SX1276Read
 28980  008606  0BF1               	andlw	241
 28981  008608  1011               	iorwf	??_setCodingRate4^0,w,c
 28982  00860A  6E0F               	movwf	SX1276Write@data^0,c
 28983  00860C  0E1D               	movlw	29
 28984  00860E  EC79  F046         	call	_SX1276Write
 28985                           
 28986                           ; BSR set to: 61
 28987  008612  0012               	return		;funcret
 28988  008614                     __end_of_setCodingRate4:
 28989                           	opt callstack 0
 28990                           
 28991 ;; *************** function _receive *****************
 28992 ;; Defined at:
 28993 ;;		line 402 in file "../phy/sx1216/phy_src/phy.c"
 28994 ;; Parameters:    Size  Location     Type
 28995 ;;  size            1    wreg     unsigned char 
 28996 ;; Auto vars:     Size  Location     Type
 28997 ;;  size            1   16[COMRAM] unsigned char 
 28998 ;; Return value:  Size  Location     Type
 28999 ;;                  1    wreg      void 
 29000 ;; Registers used:
 29001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29002 ;; Tracked objects:
 29003 ;;		On entry : 0/3D
 29004 ;;		On exit  : 3F/3D
 29005 ;;		Unchanged: 0/0
 29006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29011 ;;Total ram usage:        1 bytes
 29012 ;; Hardware stack levels used:    1
 29013 ;; Hardware stack levels required when called:   12
 29014 ;; This function calls:
 29015 ;;		_SX1276Write
 29016 ;;		_explicitHeaderMode
 29017 ;;		_implicitHeaderMode
 29018 ;; This function is called by:
 29019 ;;		_initRadio
 29020 ;;		_DIO0_Receive_ISR
 29021 ;;		_radio_engine
 29022 ;;		_PHY_SetRxState
 29023 ;; This function uses a non-reentrant model
 29024 ;;
 29025                           
 29026                           	psect	text184
 29027  0082B6                     __ptext184:
 29028                           	opt callstack 0
 29029  0082B6                     _receive:
 29030                           	opt callstack 14
 29031                           
 29032                           ; BSR set to: 61
 29033                           ;incstack = 0
 29034                           ;receive@size stored from wreg
 29035  0082B6  6E11               	movwf	receive@size^0,c
 29036                           
 29037                           ;../phy/sx1216/phy_src/phy.c: 402: void receive(uint8_t size);../phy/sx1216/phy_src/phy.
      +                          c: 403: {;../phy/sx1216/phy_src/phy.c: 404:   if (size > 0) {
 29038  0082B8  5011               	movf	receive@size^0,w,c
 29039  0082BA  B4D8               	btfsc	status,2,c
 29040  0082BC  D009               	goto	l15599
 29041                           
 29042                           ;../phy/sx1216/phy_src/phy.c: 405:     implicitHeaderMode();
 29043  0082BE  EC36  F046         	call	_implicitHeaderMode	;wreg free
 29044                           
 29045                           ;../phy/sx1216/phy_src/phy.c: 407:     SX1276Write(0x22, size & 0xff);
 29046  0082C2  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 29047  0082C8  0E22               	movlw	34
 29048  0082CA  EC79  F046         	call	_SX1276Write
 29049                           
 29050                           ;../phy/sx1216/phy_src/phy.c: 408:   } else {
 29051  0082CE  D002               	goto	l2575
 29052  0082D0                     l15599:
 29053                           
 29054                           ;../phy/sx1216/phy_src/phy.c: 409:     explicitHeaderMode();
 29055  0082D0  EC42  F046         	call	_explicitHeaderMode	;wreg free
 29056  0082D4                     l2575:
 29057                           
 29058                           ; BSR set to: 61
 29059                           ;../phy/sx1216/phy_src/phy.c: 412:   SX1276Write(0x0D, 0);
 29060  0082D4  0E00               	movlw	0
 29061  0082D6  6E0F               	movwf	SX1276Write@data^0,c
 29062  0082D8  0E0D               	movlw	13
 29063  0082DA  EC79  F046         	call	_SX1276Write
 29064                           
 29065                           ;../phy/sx1216/phy_src/phy.c: 413:   SX1276Write(0x12, 0xFF);
 29066  0082DE  0EFF               	movlw	255
 29067  0082E0  6E0F               	movwf	SX1276Write@data^0,c
 29068  0082E2  0E12               	movlw	18
 29069  0082E4  EC79  F046         	call	_SX1276Write
 29070                           
 29071                           ;../phy/sx1216/phy_src/phy.c: 414:   SX1276Write(0x01,0x80 | 0x05);
 29072  0082E8  0E85               	movlw	133
 29073  0082EA  6E0F               	movwf	SX1276Write@data^0,c
 29074  0082EC  0E01               	movlw	1
 29075  0082EE  EC79  F046         	call	_SX1276Write
 29076                           
 29077                           ; BSR set to: 61
 29078  0082F2  0012               	return		;funcret
 29079  0082F4                     __end_of_receive:
 29080                           	opt callstack 0
 29081                           
 29082 ;; *************** function _implicitHeaderMode *****************
 29083 ;; Defined at:
 29084 ;;		line 388 in file "../phy/sx1216/phy_src/phy.c"
 29085 ;; Parameters:    Size  Location     Type
 29086 ;;		None
 29087 ;; Auto vars:     Size  Location     Type
 29088 ;;		None
 29089 ;; Return value:  Size  Location     Type
 29090 ;;                  1    wreg      void 
 29091 ;; Registers used:
 29092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29093 ;; Tracked objects:
 29094 ;;		On entry : 0/3D
 29095 ;;		On exit  : 3F/3D
 29096 ;;		Unchanged: 0/0
 29097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29102 ;;Total ram usage:        0 bytes
 29103 ;; Hardware stack levels used:    1
 29104 ;; Hardware stack levels required when called:   11
 29105 ;; This function calls:
 29106 ;;		_SX1276Read
 29107 ;;		_SX1276Write
 29108 ;; This function is called by:
 29109 ;;		_receive
 29110 ;; This function uses a non-reentrant model
 29111 ;;
 29112                           
 29113                           	psect	text185
 29114  008C6C                     __ptext185:
 29115                           	opt callstack 0
 29116  008C6C                     _implicitHeaderMode:
 29117                           	opt callstack 14
 29118                           
 29119                           ;../phy/sx1216/phy_src/phy.c: 390:   _implicitHeaderMode = 1;
 29120                           
 29121                           ; BSR set to: 61
 29122                           ;incstack = 0
 29123  008C6C  0E01               	movlw	1
 29124  008C6E  0101               	movlb	1	; () banked
 29125  008C70  6F80               	movwf	__implicitHeaderMode& (0+255),b
 29126                           
 29127                           ; BSR set to: 1
 29128                           ;../phy/sx1216/phy_src/phy.c: 392:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 29129  008C72  0E1D               	movlw	29
 29130  008C74  EC65  F046         	call	_SX1276Read
 29131  008C78  0901               	iorlw	1
 29132  008C7A  6E0F               	movwf	SX1276Write@data^0,c
 29133  008C7C  0E1D               	movlw	29
 29134  008C7E  EC79  F046         	call	_SX1276Write
 29135                           
 29136                           ; BSR set to: 61
 29137  008C82  0012               	return		;funcret
 29138  008C84                     __end_of_implicitHeaderMode:
 29139                           	opt callstack 0
 29140                           
 29141 ;; *************** function _explicitHeaderMode *****************
 29142 ;; Defined at:
 29143 ;;		line 374 in file "../phy/sx1216/phy_src/phy.c"
 29144 ;; Parameters:    Size  Location     Type
 29145 ;;		None
 29146 ;; Auto vars:     Size  Location     Type
 29147 ;;		None
 29148 ;; Return value:  Size  Location     Type
 29149 ;;                  1    wreg      void 
 29150 ;; Registers used:
 29151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29152 ;; Tracked objects:
 29153 ;;		On entry : 0/3D
 29154 ;;		On exit  : 3F/3D
 29155 ;;		Unchanged: 0/0
 29156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29161 ;;Total ram usage:        0 bytes
 29162 ;; Hardware stack levels used:    1
 29163 ;; Hardware stack levels required when called:   11
 29164 ;; This function calls:
 29165 ;;		_SX1276Read
 29166 ;;		_SX1276Write
 29167 ;; This function is called by:
 29168 ;;		_receive
 29169 ;;		_initRadio
 29170 ;;		_PHY_DataReq
 29171 ;; This function uses a non-reentrant model
 29172 ;;
 29173                           
 29174                           	psect	text186
 29175  008C84                     __ptext186:
 29176                           	opt callstack 0
 29177  008C84                     _explicitHeaderMode:
 29178                           	opt callstack 14
 29179                           
 29180                           ;../phy/sx1216/phy_src/phy.c: 376:   _implicitHeaderMode = 0;
 29181                           
 29182                           ; BSR set to: 61
 29183                           ;incstack = 0
 29184  008C84  0E00               	movlw	0
 29185  008C86  0101               	movlb	1	; () banked
 29186  008C88  6F80               	movwf	__implicitHeaderMode& (0+255),b
 29187                           
 29188                           ; BSR set to: 1
 29189                           ;../phy/sx1216/phy_src/phy.c: 378:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 29190  008C8A  0E1D               	movlw	29
 29191  008C8C  EC65  F046         	call	_SX1276Read
 29192  008C90  0BFE               	andlw	254
 29193  008C92  6E0F               	movwf	SX1276Write@data^0,c
 29194  008C94  0E1D               	movlw	29
 29195  008C96  EC79  F046         	call	_SX1276Write
 29196                           
 29197                           ; BSR set to: 61
 29198  008C9A  0012               	return		;funcret
 29199  008C9C                     __end_of_explicitHeaderMode:
 29200                           	opt callstack 0
 29201                           
 29202 ;; *************** function _enableCrc *****************
 29203 ;; Defined at:
 29204 ;;		line 351 in file "../phy/sx1216/phy_src/phy.c"
 29205 ;; Parameters:    Size  Location     Type
 29206 ;;		None
 29207 ;; Auto vars:     Size  Location     Type
 29208 ;;		None
 29209 ;; Return value:  Size  Location     Type
 29210 ;;                  1    wreg      void 
 29211 ;; Registers used:
 29212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29213 ;; Tracked objects:
 29214 ;;		On entry : 3F/3D
 29215 ;;		On exit  : 3F/3D
 29216 ;;		Unchanged: 0/0
 29217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29222 ;;Total ram usage:        0 bytes
 29223 ;; Hardware stack levels used:    1
 29224 ;; Hardware stack levels required when called:   11
 29225 ;; This function calls:
 29226 ;;		_SX1276Read
 29227 ;;		_SX1276Write
 29228 ;; This function is called by:
 29229 ;;		_initRadio
 29230 ;; This function uses a non-reentrant model
 29231 ;;
 29232                           
 29233                           	psect	text187
 29234  008CE0                     __ptext187:
 29235                           	opt callstack 0
 29236  008CE0                     _enableCrc:
 29237                           	opt callstack 15
 29238                           
 29239                           ; BSR set to: 61
 29240                           ;../phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 29241                           
 29242                           ; BSR set to: 61
 29243                           ;incstack = 0
 29244  008CE0  0E1E               	movlw	30
 29245  008CE2  EC65  F046         	call	_SX1276Read
 29246  008CE6  0904               	iorlw	4
 29247  008CE8  6E0F               	movwf	SX1276Write@data^0,c
 29248  008CEA  0E1E               	movlw	30
 29249  008CEC  EC79  F046         	call	_SX1276Write
 29250                           
 29251                           ; BSR set to: 61
 29252  008CF0  0012               	return		;funcret
 29253  008CF2                     __end_of_enableCrc:
 29254                           	opt callstack 0
 29255                           
 29256 ;; *************** function _SX1276Write *****************
 29257 ;; Defined at:
 29258 ;;		line 45 in file "../phy/sx1216/phy_src/phy.c"
 29259 ;; Parameters:    Size  Location     Type
 29260 ;;  addr            1    wreg     unsigned char 
 29261 ;;  data            1   14[COMRAM] unsigned char 
 29262 ;; Auto vars:     Size  Location     Type
 29263 ;;  addr            1   15[COMRAM] unsigned char 
 29264 ;; Return value:  Size  Location     Type
 29265 ;;                  1    wreg      void 
 29266 ;; Registers used:
 29267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29268 ;; Tracked objects:
 29269 ;;		On entry : 0/0
 29270 ;;		On exit  : 3F/3D
 29271 ;;		Unchanged: 0/0
 29272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29273 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29277 ;;Total ram usage:        2 bytes
 29278 ;; Hardware stack levels used:    1
 29279 ;; Hardware stack levels required when called:   10
 29280 ;; This function calls:
 29281 ;;		_SX1276WriteBuffer
 29282 ;; This function is called by:
 29283 ;;		_idle
 29284 ;;		_setTxPower
 29285 ;;		_setFrequency
 29286 ;;		_setSpreadingFactor
 29287 ;;		_setSignalBandwidth
 29288 ;;		_setCodingRate4
 29289 ;;		_setPreambleLength
 29290 ;;		_setSyncWord
 29291 ;;		_enableCrc
 29292 ;;		_explicitHeaderMode
 29293 ;;		_implicitHeaderMode
 29294 ;;		_receive
 29295 ;;		_initRadio
 29296 ;;		_cad
 29297 ;;		_start_radio_cad
 29298 ;;		_DIO0_Receive_ISR
 29299 ;;		_PHY_DataReq
 29300 ;; This function uses a non-reentrant model
 29301 ;;
 29302                           
 29303                           	psect	text188
 29304  008CF2                     __ptext188:
 29305                           	opt callstack 0
 29306  008CF2                     _SX1276Write:
 29307                           	opt callstack 15
 29308                           
 29309                           ; BSR set to: 61
 29310                           ;incstack = 0
 29311                           ;SX1276Write@addr stored from wreg
 29312  008CF2  6E10               	movwf	SX1276Write@addr^0,c
 29313                           
 29314                           ;../phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );
      +                          ../phy/sx1216/phy_src/phy.c: 46: {;../phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffe
      +                          r( addr, &data, 1 );
 29315  008CF4  0E0F               	movlw	low SX1276Write@data
 29316  008CF6  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 29317  008CF8  0E01               	movlw	1
 29318  008CFA  6E0A               	movwf	SX1276WriteBuffer@size^0,c
 29319  008CFC  5010               	movf	SX1276Write@addr^0,w,c
 29320  008CFE  EC73  F044         	call	_SX1276WriteBuffer
 29321                           
 29322                           ; BSR set to: 61
 29323  008D02  0012               	return		;funcret
 29324  008D04                     __end_of_SX1276Write:
 29325                           	opt callstack 0
 29326                           
 29327 ;; *************** function _SX1276WriteBuffer *****************
 29328 ;; Defined at:
 29329 ;;		line 75 in file "../phy/sx1216/phy_src/phy.c"
 29330 ;; Parameters:    Size  Location     Type
 29331 ;;  addr            1    wreg     unsigned char 
 29332 ;;  buffer          1    8[COMRAM] PTR unsigned char 
 29333 ;;		 -> SX1276Write@data(1), 
 29334 ;;  size            1    9[COMRAM] unsigned char 
 29335 ;; Auto vars:     Size  Location     Type
 29336 ;;  addr            1   10[COMRAM] unsigned char 
 29337 ;;  i               1    0        unsigned char 
 29338 ;; Return value:  Size  Location     Type
 29339 ;;                  1    wreg      void 
 29340 ;; Registers used:
 29341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29342 ;; Tracked objects:
 29343 ;;		On entry : 0/0
 29344 ;;		On exit  : 3F/3D
 29345 ;;		Unchanged: 0/0
 29346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29351 ;;Total ram usage:        3 bytes
 29352 ;; Hardware stack levels used:    1
 29353 ;; Hardware stack levels required when called:    9
 29354 ;; This function calls:
 29355 ;;		_SPI1_ExchangeByte
 29356 ;;		_SPI1_WriteBlock
 29357 ;; This function is called by:
 29358 ;;		_SX1276Write
 29359 ;; This function uses a non-reentrant model
 29360 ;;
 29361                           
 29362                           	psect	text189
 29363  0088E6                     __ptext189:
 29364                           	opt callstack 0
 29365  0088E6                     _SX1276WriteBuffer:
 29366                           	opt callstack 15
 29367                           
 29368                           ; BSR set to: 61
 29369                           ;incstack = 0
 29370                           ;SX1276WriteBuffer@addr stored from wreg
 29371  0088E6  6E0B               	movwf	SX1276WriteBuffer@addr^0,c
 29372                           
 29373                           ;../phy/sx1216/phy_src/phy.c: 75: static void SX1276WriteBuffer( uint8_t addr, uint8_t *
      +                          buffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 76: {;../phy/sx1216/phy_src/phy.c: 7
      +                          7:     uint8_t i;;../phy/sx1216/phy_src/phy.c: 79:     do { LATCbits.LATC6 = 0; } while(
      +                          0);
 29374  0088E8  9CBC               	bcf	188,6,c	;volatile
 29375                           
 29376                           ;../phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 29377  0088EA  500B               	movf	SX1276WriteBuffer@addr^0,w,c
 29378  0088EC  0980               	iorlw	128
 29379  0088EE  ECEC  F045         	call	_SPI1_ExchangeByte
 29380                           
 29381                           ; BSR set to: 61
 29382                           ;../phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 29383  0088F2  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 29384  0088F8  6A04               	clrf	(SPI1_WriteBlock@block+1)^0,c
 29385  0088FA  0060  F028  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 29386  008900  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 29387  008902  EC0A  F043         	call	_SPI1_WriteBlock	;wreg free
 29388                           
 29389                           ; BSR set to: 61
 29390  008906  8CBC               	bsf	188,6,c	;volatile
 29391                           
 29392                           ; BSR set to: 61
 29393  008908  0012               	return		;funcret
 29394  00890A                     __end_of_SX1276WriteBuffer:
 29395                           	opt callstack 0
 29396                           
 29397 ;; *************** function _SPI1_WriteBlock *****************
 29398 ;; Defined at:
 29399 ;;		line 121 in file "mcc_generated_files/spi1.c"
 29400 ;; Parameters:    Size  Location     Type
 29401 ;;  block           2    2[COMRAM] PTR void 
 29402 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29403 ;;  blockSize       2    4[COMRAM] unsigned int 
 29404 ;; Auto vars:     Size  Location     Type
 29405 ;;  data            2    6[COMRAM] PTR unsigned char 
 29406 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29407 ;; Return value:  Size  Location     Type
 29408 ;;                  1    wreg      void 
 29409 ;; Registers used:
 29410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29411 ;; Tracked objects:
 29412 ;;		On entry : 3F/3D
 29413 ;;		On exit  : 3F/3D
 29414 ;;		Unchanged: 0/0
 29415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29419 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29420 ;;Total ram usage:        6 bytes
 29421 ;; Hardware stack levels used:    1
 29422 ;; Hardware stack levels required when called:    8
 29423 ;; This function calls:
 29424 ;;		_SPI1_ExchangeByte
 29425 ;; This function is called by:
 29426 ;;		_SX1276WriteBuffer
 29427 ;;		_PHY_DataReq
 29428 ;; This function uses a non-reentrant model
 29429 ;;
 29430                           
 29431                           	psect	text190
 29432  008614                     __ptext190:
 29433                           	opt callstack 0
 29434  008614                     _SPI1_WriteBlock:
 29435                           	opt callstack 15
 29436                           
 29437                           ; BSR set to: 61
 29438                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 29439                           
 29440                           ; BSR set to: 61
 29441                           ;incstack = 0
 29442  008614  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 29443  00861A  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 29444                           
 29445                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29446  008620  D00B               	goto	l14371
 29447  008622                     l14367:
 29448                           
 29449                           ; BSR set to: 61
 29450                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 29451  008622  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 29452  008628  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 29453  00862E  50DF               	movf	indf2,w,c
 29454  008630  ECEC  F045         	call	_SPI1_ExchangeByte
 29455                           
 29456                           ; BSR set to: 61
 29457  008634  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 29458  008636  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 29459  008638                     l14371:
 29460                           
 29461                           ; BSR set to: 61
 29462                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29463  008638  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 29464  00863A  A0D8               	btfss	status,0,c
 29465  00863C  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 29466  00863E  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 29467  008640  E1F0               	bnz	l14367
 29468  008642  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 29469  008644  B4D8               	btfsc	status,2,c
 29470  008646  0012               	return	
 29471  008648  D7EC               	goto	l14367
 29472  00864A                     __end_of_SPI1_WriteBlock:
 29473                           	opt callstack 0
 29474                           
 29475 ;; *************** function _SX1276Read *****************
 29476 ;; Defined at:
 29477 ;;		line 32 in file "../phy/sx1216/phy_src/phy.c"
 29478 ;; Parameters:    Size  Location     Type
 29479 ;;  addr            1    wreg     unsigned char 
 29480 ;; Auto vars:     Size  Location     Type
 29481 ;;  addr            1   12[COMRAM] unsigned char 
 29482 ;;  data            1   13[COMRAM] unsigned char 
 29483 ;; Return value:  Size  Location     Type
 29484 ;;                  1    wreg      unsigned char 
 29485 ;; Registers used:
 29486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29487 ;; Tracked objects:
 29488 ;;		On entry : 0/39
 29489 ;;		On exit  : 3F/3D
 29490 ;;		Unchanged: 0/0
 29491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29496 ;;Total ram usage:        2 bytes
 29497 ;; Hardware stack levels used:    1
 29498 ;; Hardware stack levels required when called:   10
 29499 ;; This function calls:
 29500 ;;		_SX1276ReadBuffer
 29501 ;; This function is called by:
 29502 ;;		_setSpreadingFactor
 29503 ;;		_setSignalBandwidth
 29504 ;;		_getSpreadingFactor
 29505 ;;		_getSignalBandwidth
 29506 ;;		_setCodingRate4
 29507 ;;		_enableCrc
 29508 ;;		_explicitHeaderMode
 29509 ;;		_implicitHeaderMode
 29510 ;;		_initRadio
 29511 ;;		_cad
 29512 ;;		_DIO0_Receive_ISR
 29513 ;;		_radio_engine
 29514 ;; This function uses a non-reentrant model
 29515 ;;
 29516                           
 29517                           	psect	text191
 29518  008CCA                     __ptext191:
 29519                           	opt callstack 0
 29520  008CCA                     _SX1276Read:
 29521                           	opt callstack 14
 29522                           
 29523                           ; BSR set to: 61
 29524                           ;incstack = 0
 29525                           ;SX1276Read@addr stored from wreg
 29526  008CCA  6E0D               	movwf	SX1276Read@addr^0,c
 29527                           
 29528                           ;../phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );../phy/sx121
      +                          6/phy_src/phy.c: 33: {;../phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;../phy/sx1216/
      +                          phy_src/phy.c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 29529  008CCC  0E0E               	movlw	low SX1276Read@data
 29530  008CCE  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 29531  008CD0  6A0A               	clrf	(SX1276ReadBuffer@buffer+1)^0,c
 29532  008CD2  0E01               	movlw	1
 29533  008CD4  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 29534  008CD6  500D               	movf	SX1276Read@addr^0,w,c
 29535  008CD8  EC3A  F044         	call	_SX1276ReadBuffer
 29536                           
 29537                           ; BSR set to: 61
 29538                           ;../phy/sx1216/phy_src/phy.c: 36:     return data;
 29539  008CDC  500E               	movf	SX1276Read@data^0,w,c
 29540                           
 29541                           ; BSR set to: 61
 29542  008CDE  0012               	return		;funcret
 29543  008CE0                     __end_of_SX1276Read:
 29544                           	opt callstack 0
 29545                           
 29546 ;; *************** function _SX1276ReadBuffer *****************
 29547 ;; Defined at:
 29548 ;;		line 57 in file "../phy/sx1216/phy_src/phy.c"
 29549 ;; Parameters:    Size  Location     Type
 29550 ;;  addr            1    wreg     unsigned char 
 29551 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 29552 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29553 ;;  size            1   10[COMRAM] unsigned char 
 29554 ;; Auto vars:     Size  Location     Type
 29555 ;;  addr            1   11[COMRAM] unsigned char 
 29556 ;;  i               1    0        unsigned char 
 29557 ;; Return value:  Size  Location     Type
 29558 ;;                  1    wreg      void 
 29559 ;; Registers used:
 29560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29561 ;; Tracked objects:
 29562 ;;		On entry : 0/3D
 29563 ;;		On exit  : 3F/3D
 29564 ;;		Unchanged: 0/0
 29565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29566 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29569 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29570 ;;Total ram usage:        4 bytes
 29571 ;; Hardware stack levels used:    1
 29572 ;; Hardware stack levels required when called:    9
 29573 ;; This function calls:
 29574 ;;		_SPI1_ExchangeByte
 29575 ;;		_SPI1_ReadBlock
 29576 ;; This function is called by:
 29577 ;;		_SX1276Read
 29578 ;;		_DIO0_Receive_ISR
 29579 ;; This function uses a non-reentrant model
 29580 ;;
 29581                           
 29582                           	psect	text192
 29583  008874                     __ptext192:
 29584                           	opt callstack 0
 29585  008874                     _SX1276ReadBuffer:
 29586                           	opt callstack 14
 29587                           
 29588                           ; BSR set to: 61
 29589                           ;incstack = 0
 29590                           ;SX1276ReadBuffer@addr stored from wreg
 29591  008874  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 29592                           
 29593                           ;../phy/sx1216/phy_src/phy.c: 57: static void SX1276ReadBuffer( uint8_t addr, uint8_t *b
      +                          uffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 58: {;../phy/sx1216/phy_src/phy.c: 59
      +                          :     uint8_t i;;../phy/sx1216/phy_src/phy.c: 61:     do { LATCbits.LATC6 = 0; } while(0
      +                          );
 29594  008876  9CBC               	bcf	188,6,c	;volatile
 29595                           
 29596                           ;../phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 29597  008878  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 29598  00887A  0B7F               	andlw	127
 29599  00887C  ECEC  F045         	call	_SPI1_ExchangeByte
 29600                           
 29601                           ; BSR set to: 61
 29602                           ;../phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 29603  008880  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 29604  008886  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 29605  00888C  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 29606  008892  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 29607  008894  EC81  F042         	call	_SPI1_ReadBlock	;wreg free
 29608                           
 29609                           ; BSR set to: 61
 29610  008898  8CBC               	bsf	188,6,c	;volatile
 29611                           
 29612                           ; BSR set to: 61
 29613  00889A  0012               	return		;funcret
 29614  00889C                     __end_of_SX1276ReadBuffer:
 29615                           	opt callstack 0
 29616                           
 29617 ;; *************** function _SPI1_ReadBlock *****************
 29618 ;; Defined at:
 29619 ;;		line 130 in file "mcc_generated_files/spi1.c"
 29620 ;; Parameters:    Size  Location     Type
 29621 ;;  block           2    2[COMRAM] PTR void 
 29622 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29623 ;;  blockSize       2    4[COMRAM] unsigned int 
 29624 ;; Auto vars:     Size  Location     Type
 29625 ;;  data            2    6[COMRAM] PTR unsigned char 
 29626 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29627 ;; Return value:  Size  Location     Type
 29628 ;;                  1    wreg      void 
 29629 ;; Registers used:
 29630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29631 ;; Tracked objects:
 29632 ;;		On entry : 3F/3D
 29633 ;;		On exit  : 3F/3D
 29634 ;;		Unchanged: 0/0
 29635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29640 ;;Total ram usage:        6 bytes
 29641 ;; Hardware stack levels used:    1
 29642 ;; Hardware stack levels required when called:    8
 29643 ;; This function calls:
 29644 ;;		_SPI1_ExchangeByte
 29645 ;; This function is called by:
 29646 ;;		_SX1276ReadBuffer
 29647 ;; This function uses a non-reentrant model
 29648 ;;
 29649                           
 29650                           	psect	text193
 29651  008502                     __ptext193:
 29652                           	opt callstack 0
 29653  008502                     _SPI1_ReadBlock:
 29654                           	opt callstack 14
 29655                           
 29656                           ; BSR set to: 61
 29657                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 29658                           
 29659                           ; BSR set to: 61
 29660                           ;incstack = 0
 29661  008502  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 29662  008508  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 29663                           
 29664                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29665  00850E  D00C               	goto	l14379
 29666  008510                     l14375:
 29667                           
 29668                           ; BSR set to: 61
 29669                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 29670  008510  0E00               	movlw	0
 29671  008512  ECEC  F045         	call	_SPI1_ExchangeByte
 29672  008516  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 29673  00851C  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 29674  008522  6EDF               	movwf	indf2,c
 29675                           
 29676                           ; BSR set to: 61
 29677  008524  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 29678  008526  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 29679  008528                     l14379:
 29680                           
 29681                           ; BSR set to: 61
 29682                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29683  008528  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 29684  00852A  A0D8               	btfss	status,0,c
 29685  00852C  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 29686  00852E  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 29687  008530  E1EF               	bnz	l14375
 29688  008532  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 29689  008534  B4D8               	btfsc	status,2,c
 29690  008536  0012               	return	
 29691  008538  D7EB               	goto	l14375
 29692  00853A                     __end_of_SPI1_ReadBlock:
 29693                           	opt callstack 0
 29694                           
 29695 ;; *************** function _SPI1_ExchangeByte *****************
 29696 ;; Defined at:
 29697 ;;		line 100 in file "mcc_generated_files/spi1.c"
 29698 ;; Parameters:    Size  Location     Type
 29699 ;;  data            1    wreg     unsigned char 
 29700 ;; Auto vars:     Size  Location     Type
 29701 ;;  data            1    1[COMRAM] unsigned char 
 29702 ;; Return value:  Size  Location     Type
 29703 ;;                  1    wreg      unsigned char 
 29704 ;; Registers used:
 29705 ;;		wreg, status,2
 29706 ;; Tracked objects:
 29707 ;;		On entry : 0/3D
 29708 ;;		On exit  : 3F/3D
 29709 ;;		Unchanged: 0/0
 29710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29715 ;;Total ram usage:        1 bytes
 29716 ;; Hardware stack levels used:    1
 29717 ;; Hardware stack levels required when called:    7
 29718 ;; This function calls:
 29719 ;;		Nothing
 29720 ;; This function is called by:
 29721 ;;		_SPI1_WriteBlock
 29722 ;;		_SPI1_ReadBlock
 29723 ;;		_SX1276ReadBuffer
 29724 ;;		_SX1276WriteBuffer
 29725 ;;		_PHY_DataReq
 29726 ;; This function uses a non-reentrant model
 29727 ;;
 29728                           
 29729                           	psect	text194
 29730  008BD8                     __ptext194:
 29731                           	opt callstack 0
 29732  008BD8                     _SPI1_ExchangeByte:
 29733                           	opt callstack 15
 29734                           
 29735                           ; BSR set to: 61
 29736                           ;incstack = 0
 29737                           ;SPI1_ExchangeByte@data stored from wreg
 29738  008BD8  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 29739                           
 29740                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 29741  008BDA  0E01               	movlw	1
 29742  008BDC  013D               	movlb	61	; () banked
 29743  008BDE  6F12               	movwf	18,b	;volatile
 29744                           
 29745                           ; BSR set to: 61
 29746                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 29747  008BE0  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 29748  008BE6                     l1044:
 29749  008BE6  0139               	movlb	57	; () banked
 29750  008BE8  A9A2               	btfss	162,4,b	;volatile
 29751  008BEA  D7FD               	goto	l1044
 29752                           
 29753                           ; BSR set to: 57
 29754                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 29755  008BEC  013D               	movlb	61	; () banked
 29756  008BEE  5110               	movf	16,w,b	;volatile
 29757                           
 29758                           ; BSR set to: 61
 29759  008BF0  0012               	return		;funcret
 29760  008BF2                     __end_of_SPI1_ExchangeByte:
 29761                           	opt callstack 0
 29762                           
 29763 ;; *************** function _computeFRF *****************
 29764 ;; Defined at:
 29765 ;;		line 705 in file "../phy/sx1216/phy_src/phy.c"
 29766 ;; Parameters:    Size  Location     Type
 29767 ;;		None
 29768 ;; Auto vars:     Size  Location     Type
 29769 ;;  num             4   42[COMRAM] unsigned long 
 29770 ;;  num_mod         4   38[COMRAM] unsigned long 
 29771 ;;  frequency       4   34[COMRAM] unsigned long 
 29772 ;;  i               1   46[COMRAM] unsigned char 
 29773 ;; Return value:  Size  Location     Type
 29774 ;;                  1    wreg      void 
 29775 ;; Registers used:
 29776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29777 ;; Tracked objects:
 29778 ;;		On entry : 0/0
 29779 ;;		On exit  : 0/0
 29780 ;;		Unchanged: 0/0
 29781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29783 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29785 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29786 ;;Total ram usage:       13 bytes
 29787 ;; Hardware stack levels used:    1
 29788 ;; Hardware stack levels required when called:    8
 29789 ;; This function calls:
 29790 ;;		___lldiv
 29791 ;;		___llmod
 29792 ;; This function is called by:
 29793 ;;		_initRadio
 29794 ;; This function uses a non-reentrant model
 29795 ;;
 29796                           
 29797                           	psect	text195
 29798  003A58                     __ptext195:
 29799                           	opt callstack 0
 29800  003A58                     _computeFRF:
 29801                           	opt callstack 18
 29802                           
 29803                           ;../phy/sx1216/phy_src/phy.c: 707:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 29804                           
 29805                           ; BSR set to: 61
 29806                           ;incstack = 0
 29807  003A58  0E00               	movlw	0
 29808  003A5A  6E2F               	movwf	computeFRF@i^0,c
 29809  003A5C                     l15607:
 29810                           
 29811                           ;../phy/sx1216/phy_src/phy.c: 708:     {;../phy/sx1216/phy_src/phy.c: 709:         uint3
      +                          2_t num, num_mod, frequency;;../phy/sx1216/phy_src/phy.c: 710:         frequency = fhssL
      +                          ist[i];
 29812  003A5C  502F               	movf	computeFRF@i^0,w,c
 29813  003A5E  0D04               	mullw	4
 29814  003A60  0EB3               	movlw	low _fhssList
 29815  003A62  24F3               	addwf	243,w,c
 29816  003A64  6EF6               	movwf	tblptrl,c
 29817  003A66  0EFC               	movlw	high _fhssList
 29818  003A68  20F4               	addwfc	244,w,c
 29819  003A6A  6EF7               	movwf	tblptrh,c
 29820  003A6C                     	if	1	;There are 3 active tblptr bytes
 29821  003A6C  6AF8               	clrf	tblptru,c
 29822  003A6E  0E00               	movlw	low (__mediumconst shr (0+16))
 29823  003A70  22F8               	addwfc	tblptru,f,c
 29824  003A72                     	endif
 29825  003A72  0009               	tblrd		*+
 29826  003A74  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 29827  003A7A  0009               	tblrd		*+
 29828  003A7C  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 29829  003A82  0009               	tblrd		*+
 29830  003A84  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 29831  003A8A  000A               	tblrd		*-
 29832  003A8C  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 29833                           
 29834                           ;../phy/sx1216/phy_src/phy.c: 717:         num = frequency / 15625;
 29835  003A92  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 29836  003A98  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 29837  003A9E  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 29838  003AA4  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 29839  003AAA  0E09               	movlw	9
 29840  003AAC  6E1A               	movwf	___lldiv@divisor^0,c
 29841  003AAE  0E3D               	movlw	61
 29842  003AB0  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29843  003AB2  0E00               	movlw	0
 29844  003AB4  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29845  003AB6  0E00               	movlw	0
 29846  003AB8  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29847  003ABA  EC42  F038         	call	___lldiv	;wreg free
 29848  003ABE  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 29849  003AC4  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 29850  003ACA  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 29851  003AD0  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 29852                           
 29853                           ;../phy/sx1216/phy_src/phy.c: 718:         num_mod = frequency % 15625;
 29854  003AD6  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 29855  003ADC  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 29856  003AE2  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 29857  003AE8  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 29858  003AEE  0E09               	movlw	9
 29859  003AF0  6E06               	movwf	___llmod@divisor^0,c
 29860  003AF2  0E3D               	movlw	61
 29861  003AF4  6E07               	movwf	(___llmod@divisor+1)^0,c
 29862  003AF6  0E00               	movlw	0
 29863  003AF8  6E08               	movwf	(___llmod@divisor+2)^0,c
 29864  003AFA  0E00               	movlw	0
 29865  003AFC  6E09               	movwf	(___llmod@divisor+3)^0,c
 29866  003AFE  EC89  F03A         	call	___llmod	;wreg free
 29867  003B02  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 29868  003B08  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 29869  003B0E  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 29870  003B14  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 29871                           
 29872                           ;../phy/sx1216/phy_src/phy.c: 722:         num <<= 8;
 29873  003B1A  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 29874  003B20  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 29875  003B26  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 29876  003B2C  6A2B               	clrf	computeFRF@num^0,c
 29877                           
 29878                           ;../phy/sx1216/phy_src/phy.c: 723:         num_mod <<= 8;
 29879  003B2E  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 29880  003B34  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 29881  003B3A  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 29882  003B40  6A27               	clrf	computeFRF@num_mod^0,c
 29883                           
 29884                           ;../phy/sx1216/phy_src/phy.c: 727:         num_mod = num_mod / 15625;
 29885  003B42  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 29886  003B48  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 29887  003B4E  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 29888  003B54  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 29889  003B5A  0E09               	movlw	9
 29890  003B5C  6E1A               	movwf	___lldiv@divisor^0,c
 29891  003B5E  0E3D               	movlw	61
 29892  003B60  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29893  003B62  0E00               	movlw	0
 29894  003B64  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29895  003B66  0E00               	movlw	0
 29896  003B68  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29897  003B6A  EC42  F038         	call	___lldiv	;wreg free
 29898  003B6E  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 29899  003B74  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 29900  003B7A  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 29901  003B80  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 29902                           
 29903                           ;../phy/sx1216/phy_src/phy.c: 728:         num += num_mod;
 29904  003B86  5027               	movf	computeFRF@num_mod^0,w,c
 29905  003B88  262B               	addwf	computeFRF@num^0,f,c
 29906  003B8A  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 29907  003B8C  222C               	addwfc	(computeFRF@num+1)^0,f,c
 29908  003B8E  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 29909  003B90  222D               	addwfc	(computeFRF@num+2)^0,f,c
 29910  003B92  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 29911  003B94  222E               	addwfc	(computeFRF@num+3)^0,f,c
 29912                           
 29913                           ;../phy/sx1216/phy_src/phy.c: 730:         fhssReg[i][0] = (num >> 16);
 29914  003B96  502F               	movf	computeFRF@i^0,w,c
 29915  003B98  0D03               	mullw	3
 29916  003B9A  0E00               	movlw	low _fhssReg
 29917  003B9C  24F3               	addwf	243,w,c
 29918  003B9E  6ED9               	movwf	fsr2l,c
 29919  003BA0  0E05               	movlw	high _fhssReg
 29920  003BA2  20F4               	addwfc	prodh,w,c
 29921  003BA4  6EDA               	movwf	fsr2h,c
 29922  003BA6  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 29923                           
 29924                           ;../phy/sx1216/phy_src/phy.c: 731:         fhssReg[i][1] = (num >> 8);
 29925  003BAC  502F               	movf	computeFRF@i^0,w,c
 29926  003BAE  0D03               	mullw	3
 29927  003BB0  0E01               	movlw	low (_fhssReg+1)
 29928  003BB2  24F3               	addwf	243,w,c
 29929  003BB4  6ED9               	movwf	fsr2l,c
 29930  003BB6  0E05               	movlw	high (_fhssReg+1)
 29931  003BB8  20F4               	addwfc	prodh,w,c
 29932  003BBA  6EDA               	movwf	fsr2h,c
 29933  003BBC  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 29934                           
 29935                           ;../phy/sx1216/phy_src/phy.c: 732:         fhssReg[i][2] = (num);
 29936  003BC2  502F               	movf	computeFRF@i^0,w,c
 29937  003BC4  0D03               	mullw	3
 29938  003BC6  0E02               	movlw	low (_fhssReg+2)
 29939  003BC8  24F3               	addwf	243,w,c
 29940  003BCA  6ED9               	movwf	fsr2l,c
 29941  003BCC  0E05               	movlw	high (_fhssReg+2)
 29942  003BCE  20F4               	addwfc	prodh,w,c
 29943  003BD0  6EDA               	movwf	fsr2h,c
 29944  003BD2  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 29945                           
 29946                           ;../phy/sx1216/phy_src/phy.c: 733:     }
 29947  003BD8  2A2F               	incf	computeFRF@i^0,f,c
 29948  003BDA  0E3E               	movlw	62
 29949  003BDC  642F               	cpfsgt	computeFRF@i^0,c
 29950  003BDE  D73E               	goto	l15607
 29951  003BE0  0012               	return	
 29952  003BE2                     __end_of_computeFRF:
 29953                           	opt callstack 0
 29954                           
 29955 ;; *************** function ___llmod *****************
 29956 ;; Defined at:
 29957 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 29958 ;; Parameters:    Size  Location     Type
 29959 ;;  dividend        4    1[COMRAM] unsigned long 
 29960 ;;  divisor         4    5[COMRAM] unsigned long 
 29961 ;; Auto vars:     Size  Location     Type
 29962 ;;  counter         1    9[COMRAM] unsigned char 
 29963 ;; Return value:  Size  Location     Type
 29964 ;;                  4    1[COMRAM] unsigned long 
 29965 ;; Registers used:
 29966 ;;		wreg, status,2, status,0
 29967 ;; Tracked objects:
 29968 ;;		On entry : 0/1
 29969 ;;		On exit  : 0/0
 29970 ;;		Unchanged: 0/0
 29971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29972 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29975 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29976 ;;Total ram usage:        9 bytes
 29977 ;; Hardware stack levels used:    1
 29978 ;; Hardware stack levels required when called:    7
 29979 ;; This function calls:
 29980 ;;		Nothing
 29981 ;; This function is called by:
 29982 ;;		_setFrequency
 29983 ;;		_computeFRF
 29984 ;; This function uses a non-reentrant model
 29985 ;;
 29986                           
 29987                           	psect	text196
 29988  007512                     __ptext196:
 29989                           	opt callstack 0
 29990  007512                     ___llmod:
 29991                           	opt callstack 18
 29992                           
 29993                           ;incstack = 0
 29994  007512  5006               	movf	___llmod@divisor^0,w,c
 29995  007514  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 29996  007516  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 29997  007518  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 29998  00751A  B4D8               	btfsc	status,2,c
 29999  00751C  D024               	goto	l3620
 30000  00751E  0E01               	movlw	1
 30001  007520  6E0A               	movwf	___llmod@counter^0,c
 30002  007522  D006               	goto	l15095
 30003  007524                     l15093:
 30004  007524  90D8               	bcf	status,0,c
 30005  007526  3606               	rlcf	___llmod@divisor^0,f,c
 30006  007528  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 30007  00752A  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 30008  00752C  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 30009  00752E  2A0A               	incf	___llmod@counter^0,f,c
 30010  007530                     l15095:
 30011  007530  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 30012  007532  D7F8               	goto	l15093
 30013  007534                     u14660:
 30014  007534  5006               	movf	___llmod@divisor^0,w,c
 30015  007536  5C02               	subwf	___llmod@dividend^0,w,c
 30016  007538  5007               	movf	(___llmod@divisor+1)^0,w,c
 30017  00753A  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 30018  00753C  5008               	movf	(___llmod@divisor+2)^0,w,c
 30019  00753E  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 30020  007540  5009               	movf	(___llmod@divisor+3)^0,w,c
 30021  007542  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 30022  007544  A0D8               	btfss	status,0,c
 30023  007546  D008               	goto	l15101
 30024  007548  5006               	movf	___llmod@divisor^0,w,c
 30025  00754A  5E02               	subwf	___llmod@dividend^0,f,c
 30026  00754C  5007               	movf	(___llmod@divisor+1)^0,w,c
 30027  00754E  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 30028  007550  5008               	movf	(___llmod@divisor+2)^0,w,c
 30029  007552  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 30030  007554  5009               	movf	(___llmod@divisor+3)^0,w,c
 30031  007556  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 30032  007558                     l15101:
 30033  007558  90D8               	bcf	status,0,c
 30034  00755A  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 30035  00755C  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 30036  00755E  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 30037  007560  3206               	rrcf	___llmod@divisor^0,f,c
 30038  007562  2E0A               	decfsz	___llmod@counter^0,f,c
 30039  007564  D7E7               	goto	u14660
 30040  007566                     l3620:
 30041  007566  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 30042  00756C  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 30043  007572  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 30044  007578  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 30045  00757E  0012               	return		;funcret
 30046  007580                     __end_of___llmod:
 30047                           	opt callstack 0
 30048                           
 30049 ;; *************** function ___lldiv *****************
 30050 ;; Defined at:
 30051 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 30052 ;; Parameters:    Size  Location     Type
 30053 ;;  dividend        4   21[COMRAM] unsigned long 
 30054 ;;  divisor         4   25[COMRAM] unsigned long 
 30055 ;; Auto vars:     Size  Location     Type
 30056 ;;  quotient        4   29[COMRAM] unsigned long 
 30057 ;;  counter         1   33[COMRAM] unsigned char 
 30058 ;; Return value:  Size  Location     Type
 30059 ;;                  4   21[COMRAM] unsigned long 
 30060 ;; Registers used:
 30061 ;;		wreg, status,2, status,0
 30062 ;; Tracked objects:
 30063 ;;		On entry : 0/3D
 30064 ;;		On exit  : 0/0
 30065 ;;		Unchanged: 0/0
 30066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30067 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30068 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30070 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30071 ;;Total ram usage:       13 bytes
 30072 ;; Hardware stack levels used:    1
 30073 ;; Hardware stack levels required when called:    7
 30074 ;; This function calls:
 30075 ;;		Nothing
 30076 ;; This function is called by:
 30077 ;;		_setFrequency
 30078 ;;		_setSpreadingFactor
 30079 ;;		_setSignalBandwidth
 30080 ;;		_computeFRF
 30081 ;; This function uses a non-reentrant model
 30082 ;;
 30083                           
 30084                           	psect	text197
 30085  007084                     __ptext197:
 30086                           	opt callstack 0
 30087  007084                     ___lldiv:
 30088                           	opt callstack 18
 30089                           
 30090                           ;incstack = 0
 30091  007084  0E00               	movlw	0
 30092  007086  6E1E               	movwf	___lldiv@quotient^0,c
 30093  007088  0E00               	movlw	0
 30094  00708A  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 30095  00708C  0E00               	movlw	0
 30096  00708E  6E20               	movwf	(___lldiv@quotient+2)^0,c
 30097  007090  0E00               	movlw	0
 30098  007092  6E21               	movwf	(___lldiv@quotient+3)^0,c
 30099  007094  501A               	movf	___lldiv@divisor^0,w,c
 30100  007096  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 30101  007098  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 30102  00709A  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 30103  00709C  B4D8               	btfsc	status,2,c
 30104  00709E  D02A               	goto	l3227
 30105  0070A0  0E01               	movlw	1
 30106  0070A2  6E22               	movwf	___lldiv@counter^0,c
 30107  0070A4  D006               	goto	l15053
 30108  0070A6                     l15051:
 30109  0070A6  90D8               	bcf	status,0,c
 30110  0070A8  361A               	rlcf	___lldiv@divisor^0,f,c
 30111  0070AA  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 30112  0070AC  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 30113  0070AE  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 30114  0070B0  2A22               	incf	___lldiv@counter^0,f,c
 30115  0070B2                     l15053:
 30116  0070B2  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 30117  0070B4  D7F8               	goto	l15051
 30118  0070B6                     u14580:
 30119  0070B6  90D8               	bcf	status,0,c
 30120  0070B8  361E               	rlcf	___lldiv@quotient^0,f,c
 30121  0070BA  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 30122  0070BC  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 30123  0070BE  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 30124  0070C0  501A               	movf	___lldiv@divisor^0,w,c
 30125  0070C2  5C16               	subwf	___lldiv@dividend^0,w,c
 30126  0070C4  501B               	movf	(___lldiv@divisor+1)^0,w,c
 30127  0070C6  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 30128  0070C8  501C               	movf	(___lldiv@divisor+2)^0,w,c
 30129  0070CA  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 30130  0070CC  501D               	movf	(___lldiv@divisor+3)^0,w,c
 30131  0070CE  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 30132  0070D0  A0D8               	btfss	status,0,c
 30133  0070D2  D009               	goto	l15063
 30134  0070D4  501A               	movf	___lldiv@divisor^0,w,c
 30135  0070D6  5E16               	subwf	___lldiv@dividend^0,f,c
 30136  0070D8  501B               	movf	(___lldiv@divisor+1)^0,w,c
 30137  0070DA  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 30138  0070DC  501C               	movf	(___lldiv@divisor+2)^0,w,c
 30139  0070DE  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 30140  0070E0  501D               	movf	(___lldiv@divisor+3)^0,w,c
 30141  0070E2  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 30142  0070E4  801E               	bsf	___lldiv@quotient^0,0,c
 30143  0070E6                     l15063:
 30144  0070E6  90D8               	bcf	status,0,c
 30145  0070E8  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 30146  0070EA  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 30147  0070EC  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 30148  0070EE  321A               	rrcf	___lldiv@divisor^0,f,c
 30149  0070F0  2E22               	decfsz	___lldiv@counter^0,f,c
 30150  0070F2  D7E1               	goto	u14580
 30151  0070F4                     l3227:
 30152  0070F4  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 30153  0070FA  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 30154  007100  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 30155  007106  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 30156  00710C  0012               	return		;funcret
 30157  00710E                     __end_of___lldiv:
 30158                           	opt callstack 0
 30159                           
 30160 ;; *************** function _NWK_Init *****************
 30161 ;; Defined at:
 30162 ;;		line 70 in file "../nwk/nwk_src/nwk.c"
 30163 ;; Parameters:    Size  Location     Type
 30164 ;;		None
 30165 ;; Auto vars:     Size  Location     Type
 30166 ;;  i               1    5[COMRAM] unsigned char 
 30167 ;; Return value:  Size  Location     Type
 30168 ;;                  1    wreg      void 
 30169 ;; Registers used:
 30170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30171 ;; Tracked objects:
 30172 ;;		On entry : 3F/1
 30173 ;;		On exit  : 3F/2
 30174 ;;		Unchanged: 0/0
 30175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30180 ;;Total ram usage:        1 bytes
 30181 ;; Hardware stack levels used:    1
 30182 ;; Hardware stack levels required when called:    9
 30183 ;; This function calls:
 30184 ;;		_nwkDataReqInit
 30185 ;;		_nwkFrameInit
 30186 ;;		_nwkGroupInit
 30187 ;;		_nwkRouteInit
 30188 ;;		_nwkRxInit
 30189 ;;		_nwkTxInit
 30190 ;; This function is called by:
 30191 ;;		_SYS_Init
 30192 ;; This function uses a non-reentrant model
 30193 ;;
 30194                           
 30195                           	psect	text198
 30196  007BB0                     __ptext198:
 30197                           	opt callstack 0
 30198  007BB0                     _NWK_Init:
 30199                           	opt callstack 20
 30200                           
 30201                           ; BSR set to: 1
 30202                           ;../nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 30203                           
 30204                           ;incstack = 0
 30205  007BB0  0E00               	movlw	0
 30206  007BB2  6F04               	movwf	(_nwkIb+4)& (0+255),b
 30207                           
 30208                           ;../nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 30209  007BB4  0E00               	movlw	0
 30210  007BB6  6F05               	movwf	(_nwkIb+5)& (0+255),b
 30211                           
 30212                           ;../nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 30213  007BB8  0E00               	movlw	0
 30214  007BBA  6F01               	movwf	(_nwkIb+1)& (0+255),b
 30215  007BBC  0E00               	movlw	0
 30216  007BBE  6F00               	movwf	_nwkIb& (0+255),b
 30217                           
 30218                           ;../nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 30219  007BC0  0E00               	movlw	0
 30220  007BC2  6F27               	movwf	(_nwkIb+39)& (0+255),b
 30221  007BC4  0E00               	movlw	0
 30222  007BC6  6F26               	movwf	(_nwkIb+38)& (0+255),b
 30223                           
 30224                           ;../nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 30225  007BC8  0E00               	movlw	0
 30226  007BCA  6E06               	movwf	NWK_Init@i^0,c
 30227  007BCC                     l17159:
 30228                           
 30229                           ; BSR set to: 1
 30230                           ;../nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 30231  007BCC  5006               	movf	NWK_Init@i^0,w,c
 30232  007BCE  0D02               	mullw	2
 30233  007BD0  0E06               	movlw	low (_nwkIb+6)
 30234  007BD2  24F3               	addwf	243,w,c
 30235  007BD4  6ED9               	movwf	fsr2l,c
 30236  007BD6  0E01               	movlw	high (_nwkIb+6)
 30237  007BD8  20F4               	addwfc	prodh,w,c
 30238  007BDA  6EDA               	movwf	fsr2h,c
 30239  007BDC  0E00               	movlw	0
 30240  007BDE  6EDE               	movwf	postinc2,c
 30241  007BE0  0E00               	movlw	0
 30242  007BE2  6EDD               	movwf	postdec2,c
 30243                           
 30244                           ; BSR set to: 1
 30245  007BE4  2A06               	incf	NWK_Init@i^0,f,c
 30246                           
 30247                           ; BSR set to: 1
 30248  007BE6  0E0F               	movlw	15
 30249  007BE8  6406               	cpfsgt	NWK_Init@i^0,c
 30250  007BEA  D7F0               	goto	l17159
 30251                           
 30252                           ; BSR set to: 1
 30253                           ;../nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 30254  007BEC  EC5E  F040         	call	_nwkTxInit	;wreg free
 30255                           
 30256                           ; BSR set to: 1
 30257                           ;../nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 30258  007BF0  EC45  F03F         	call	_nwkRxInit	;wreg free
 30259                           
 30260                           ;../nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 30261  007BF4  ECCA  F044         	call	_nwkFrameInit	;wreg free
 30262                           
 30263                           ;../nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 30264  007BF8  EC05  F047         	call	_nwkDataReqInit	;wreg free
 30265                           
 30266                           ; BSR set to: 0
 30267                           ;../nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 30268  007BFC  EC1E  F03F         	call	_nwkRouteInit	;wreg free
 30269                           
 30270                           ; BSR set to: 2
 30271                           ;../nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 30272  007C00  EC4E  F044         	call	_nwkGroupInit	;wreg free
 30273                           
 30274                           ; BSR set to: 2
 30275  007C04  0012               	return		;funcret
 30276  007C06                     __end_of_NWK_Init:
 30277                           	opt callstack 0
 30278                           
 30279 ;; *************** function _nwkTxInit *****************
 30280 ;; Defined at:
 30281 ;;		line 94 in file "../nwk/nwk_src/nwkTx.c"
 30282 ;; Parameters:    Size  Location     Type
 30283 ;;		None
 30284 ;; Auto vars:     Size  Location     Type
 30285 ;;		None
 30286 ;; Return value:  Size  Location     Type
 30287 ;;                  1    wreg      void 
 30288 ;; Registers used:
 30289 ;;		wreg, status,2, status,0
 30290 ;; Tracked objects:
 30291 ;;		On entry : 3F/1
 30292 ;;		On exit  : 3F/1
 30293 ;;		Unchanged: 0/0
 30294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30299 ;;Total ram usage:        0 bytes
 30300 ;; Hardware stack levels used:    1
 30301 ;; Hardware stack levels required when called:    7
 30302 ;; This function calls:
 30303 ;;		Nothing
 30304 ;; This function is called by:
 30305 ;;		_NWK_Init
 30306 ;; This function uses a non-reentrant model
 30307 ;;
 30308                           
 30309                           	psect	text199
 30310  0080BC                     __ptext199:
 30311                           	opt callstack 0
 30312  0080BC                     _nwkTxInit:
 30313                           	opt callstack 21
 30314                           
 30315                           ; BSR set to: 1
 30316                           ;../nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 30317                           
 30318                           ; BSR set to: 2
 30319                           ;incstack = 0
 30320  0080BC  0E00               	movlw	0
 30321  0080BE  6F6B               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 30322  0080C0  0E00               	movlw	0
 30323  0080C2  6F6C               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 30324                           
 30325                           ; BSR set to: 1
 30326                           ;../nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 30327  0080C4  0EC8               	movlw	200
 30328  0080C6  6F9E               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 30329  0080C8  0E00               	movlw	0
 30330  0080CA  6F9F               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 30331  0080CC  0E00               	movlw	0
 30332  0080CE  6FA0               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 30333  0080D0  0E00               	movlw	0
 30334  0080D2  6FA1               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 30335                           
 30336                           ; BSR set to: 1
 30337                           ;../nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30338  0080D4  0E00               	movlw	0
 30339  0080D6  6FA2               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 30340                           
 30341                           ;../nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 30342  0080D8  0E52               	movlw	low _nwkTxAckWaitTimerHandler
 30343  0080DA  6FA3               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 30344  0080DC  0E6E               	movlw	high _nwkTxAckWaitTimerHandler
 30345  0080DE  6FA4               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 30346                           
 30347                           ; BSR set to: 1
 30348                           ;../nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 30349  0080E0  0E14               	movlw	20
 30350  0080E2  6F91               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 30351  0080E4  0E00               	movlw	0
 30352  0080E6  6F92               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 30353  0080E8  0E00               	movlw	0
 30354  0080EA  6F93               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 30355  0080EC  0E00               	movlw	0
 30356  0080EE  6F94               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 30357                           
 30358                           ; BSR set to: 1
 30359                           ;../nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30360  0080F0  0E00               	movlw	0
 30361  0080F2  6F95               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 30362                           
 30363                           ;../nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 30364  0080F4  0E6E               	movlw	low _nwkTxDelayTimerHandler
 30365  0080F6  6F96               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 30366  0080F8  0E6F               	movlw	high _nwkTxDelayTimerHandler
 30367  0080FA  6F97               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 30368                           
 30369                           ; BSR set to: 1
 30370  0080FC  0012               	return		;funcret
 30371  0080FE                     __end_of_nwkTxInit:
 30372                           	opt callstack 0
 30373                           
 30374 ;; *************** function _nwkRxInit *****************
 30375 ;; Defined at:
 30376 ;;		line 102 in file "../nwk/nwk_src/nwkRx.c"
 30377 ;; Parameters:    Size  Location     Type
 30378 ;;		None
 30379 ;; Auto vars:     Size  Location     Type
 30380 ;;  i               1    4[COMRAM] unsigned char 
 30381 ;; Return value:  Size  Location     Type
 30382 ;;                  1    wreg      void 
 30383 ;; Registers used:
 30384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30385 ;; Tracked objects:
 30386 ;;		On entry : 3F/1
 30387 ;;		On exit  : 0/0
 30388 ;;		Unchanged: 0/0
 30389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30394 ;;Total ram usage:        1 bytes
 30395 ;; Hardware stack levels used:    1
 30396 ;; Hardware stack levels required when called:    8
 30397 ;; This function calls:
 30398 ;;		_NWK_OpenEndpoint
 30399 ;; This function is called by:
 30400 ;;		_NWK_Init
 30401 ;; This function uses a non-reentrant model
 30402 ;;
 30403                           
 30404                           	psect	text200
 30405  007E8A                     __ptext200:
 30406                           	opt callstack 0
 30407  007E8A                     _nwkRxInit:
 30408                           	opt callstack 20
 30409                           
 30410                           ; BSR set to: 1
 30411                           ;../nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 30412                           
 30413                           ; BSR set to: 1
 30414                           ;incstack = 0
 30415  007E8A  0E00               	movlw	0
 30416  007E8C  6E05               	movwf	nwkRxInit@i^0,c
 30417  007E8E                     l16695:
 30418                           
 30419                           ; BSR set to: 1
 30420                           ;../nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 30421  007E8E  5005               	movf	nwkRxInit@i^0,w,c
 30422  007E90  0D05               	mullw	5
 30423  007E92  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 30424  007E94  24F3               	addwf	243,w,c
 30425  007E96  6ED9               	movwf	fsr2l,c
 30426  007E98  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 30427  007E9A  20F4               	addwfc	prodh,w,c
 30428  007E9C  6EDA               	movwf	fsr2h,c
 30429  007E9E  0E00               	movlw	0
 30430  007EA0  6EDF               	movwf	indf2,c
 30431                           
 30432                           ; BSR set to: 1
 30433  007EA2  2A05               	incf	nwkRxInit@i^0,f,c
 30434                           
 30435                           ; BSR set to: 1
 30436  007EA4  0E09               	movlw	9
 30437  007EA6  6405               	cpfsgt	nwkRxInit@i^0,c
 30438  007EA8  D7F2               	goto	l16695
 30439                           
 30440                           ; BSR set to: 1
 30441                           ;../nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 30442  007EAA  0E88               	movlw	136
 30443  007EAC  6FAB               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 30444  007EAE  0E13               	movlw	19
 30445  007EB0  6FAC               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 30446  007EB2  0E00               	movlw	0
 30447  007EB4  6FAD               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 30448  007EB6  0E00               	movlw	0
 30449  007EB8  6FAE               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 30450                           
 30451                           ;../nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_M
      +                          ODE;
 30452  007EBA  0E00               	movlw	0
 30453  007EBC  6FAF               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 30454                           
 30455                           ; BSR set to: 1
 30456                           ;../nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateRej
      +                          ectionTimerHandler;
 30457  007EBE  0E5A               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 30458  007EC0  6FB0               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 30459  007EC2  0E7C               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 30460  007EC4  6FB1               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 30461                           
 30462                           ; BSR set to: 1
 30463                           ;../nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 30464  007EC6  0EEC               	movlw	low _nwkRxServiceDataInd
 30465  007EC8  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 30466  007ECA  0E75               	movlw	high _nwkRxServiceDataInd
 30467  007ECC  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 30468  007ECE  0E00               	movlw	0
 30469  007ED0  EC2F  F045         	call	_NWK_OpenEndpoint
 30470  007ED4  0012               	return		;funcret
 30471  007ED6                     __end_of_nwkRxInit:
 30472                           	opt callstack 0
 30473                           
 30474 ;; *************** function _NWK_OpenEndpoint *****************
 30475 ;; Defined at:
 30476 ;;		line 127 in file "../nwk/nwk_src/nwk.c"
 30477 ;; Parameters:    Size  Location     Type
 30478 ;;  id              1    wreg     unsigned char 
 30479 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 30480 ;;		 -> nwkRxServiceDataInd(1), appDataInd(1), 
 30481 ;; Auto vars:     Size  Location     Type
 30482 ;;  id              1    3[COMRAM] unsigned char 
 30483 ;; Return value:  Size  Location     Type
 30484 ;;                  1    wreg      void 
 30485 ;; Registers used:
 30486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30487 ;; Tracked objects:
 30488 ;;		On entry : 3/3D
 30489 ;;		On exit  : 0/0
 30490 ;;		Unchanged: 0/0
 30491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30495 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30496 ;;Total ram usage:        3 bytes
 30497 ;; Hardware stack levels used:    1
 30498 ;; Hardware stack levels required when called:    7
 30499 ;; This function calls:
 30500 ;;		Nothing
 30501 ;; This function is called by:
 30502 ;;		_bootLoadApplication
 30503 ;;		_nwkRxInit
 30504 ;; This function uses a non-reentrant model
 30505 ;;
 30506                           
 30507                           	psect	text201
 30508  008A5E                     __ptext201:
 30509                           	opt callstack 0
 30510  008A5E                     _NWK_OpenEndpoint:
 30511                           	opt callstack 22
 30512                           
 30513                           ;incstack = 0
 30514                           ;NWK_OpenEndpoint@id stored from wreg
 30515  008A5E  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 30516                           
 30517                           ;../nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataI
      +                          nd_t *ind));../nwk/nwk_src/nwk.c: 128: {;../nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id]
      +                           = handler;
 30518  008A60  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 30519  008A62  0D02               	mullw	2
 30520  008A64  0E06               	movlw	low (_nwkIb+6)
 30521  008A66  24F3               	addwf	243,w,c
 30522  008A68  6ED9               	movwf	fsr2l,c
 30523  008A6A  0E01               	movlw	high (_nwkIb+6)
 30524  008A6C  20F4               	addwfc	prodh,w,c
 30525  008A6E  6EDA               	movwf	fsr2h,c
 30526  008A70  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 30527  008A76  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 30528  008A7C  0012               	return		;funcret
 30529  008A7E                     __end_of_NWK_OpenEndpoint:
 30530                           	opt callstack 0
 30531                           
 30532 ;; *************** function _nwkRouteInit *****************
 30533 ;; Defined at:
 30534 ;;		line 79 in file "../nwk/nwk_src/nwkRoute.c"
 30535 ;; Parameters:    Size  Location     Type
 30536 ;;		None
 30537 ;; Auto vars:     Size  Location     Type
 30538 ;;  i               1    1[COMRAM] unsigned char 
 30539 ;; Return value:  Size  Location     Type
 30540 ;;                  1    wreg      void 
 30541 ;; Registers used:
 30542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30543 ;; Tracked objects:
 30544 ;;		On entry : 3F/0
 30545 ;;		On exit  : 3F/2
 30546 ;;		Unchanged: 0/0
 30547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30552 ;;Total ram usage:        1 bytes
 30553 ;; Hardware stack levels used:    1
 30554 ;; Hardware stack levels required when called:    7
 30555 ;; This function calls:
 30556 ;;		Nothing
 30557 ;; This function is called by:
 30558 ;;		_NWK_Init
 30559 ;; This function uses a non-reentrant model
 30560 ;;
 30561                           
 30562                           	psect	text202
 30563  007E3C                     __ptext202:
 30564                           	opt callstack 0
 30565  007E3C                     _nwkRouteInit:
 30566                           	opt callstack 21
 30567                           
 30568                           ; BSR set to: 0
 30569                           ;../nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 30570                           
 30571                           ;incstack = 0
 30572  007E3C  0E00               	movlw	0
 30573  007E3E  6E02               	movwf	nwkRouteInit@i^0,c
 30574  007E40                     l12421:
 30575                           
 30576                           ;../nwk/nwk_src/nwkRoute.c: 82:   {;../nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].
      +                          dstAddr = 0xffff;
 30577  007E40  5002               	movf	nwkRouteInit@i^0,w,c
 30578  007E42  0D07               	mullw	7
 30579  007E44  0E75               	movlw	low (_nwkRouteTable+1)
 30580  007E46  24F3               	addwf	243,w,c
 30581  007E48  6ED9               	movwf	fsr2l,c
 30582  007E4A  0E02               	movlw	high (_nwkRouteTable+1)
 30583  007E4C  20F4               	addwfc	prodh,w,c
 30584  007E4E  6EDA               	movwf	fsr2h,c
 30585  007E50  0EFF               	movlw	255
 30586  007E52  6EDE               	movwf	postinc2,c
 30587  007E54  0EFF               	movlw	255
 30588  007E56  6EDD               	movwf	postdec2,c
 30589                           
 30590                           ;../nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 30591  007E58  5002               	movf	nwkRouteInit@i^0,w,c
 30592  007E5A  0D07               	mullw	7
 30593  007E5C  0E74               	movlw	low _nwkRouteTable
 30594  007E5E  24F3               	addwf	243,w,c
 30595  007E60  6ED9               	movwf	fsr2l,c
 30596  007E62  0E02               	movlw	high _nwkRouteTable
 30597  007E64  20F4               	addwfc	prodh,w,c
 30598  007E66  6EDA               	movwf	fsr2h,c
 30599  007E68  0102               	movlb	2	; () banked
 30600  007E6A  90DF               	bcf	indf2,0,c
 30601                           
 30602                           ;../nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 30603  007E6C  5002               	movf	nwkRouteInit@i^0,w,c
 30604  007E6E  0D07               	mullw	7
 30605  007E70  0E79               	movlw	low (_nwkRouteTable+5)
 30606  007E72  24F3               	addwf	243,w,c
 30607  007E74  6ED9               	movwf	fsr2l,c
 30608  007E76  0E02               	movlw	high (_nwkRouteTable+5)
 30609  007E78  20F4               	addwfc	prodh,w,c
 30610  007E7A  6EDA               	movwf	fsr2h,c
 30611  007E7C  0E00               	movlw	0
 30612  007E7E  6EDF               	movwf	indf2,c
 30613                           
 30614                           ; BSR set to: 2
 30615                           ;../nwk/nwk_src/nwkRoute.c: 86:   }
 30616  007E80  2A02               	incf	nwkRouteInit@i^0,f,c
 30617                           
 30618                           ; BSR set to: 2
 30619  007E82  0E09               	movlw	9
 30620  007E84  6402               	cpfsgt	nwkRouteInit@i^0,c
 30621  007E86  D7DC               	goto	l12421
 30622  007E88  0012               	return	
 30623  007E8A                     __end_of_nwkRouteInit:
 30624                           	opt callstack 0
 30625                           
 30626 ;; *************** function _nwkGroupInit *****************
 30627 ;; Defined at:
 30628 ;;		line 70 in file "../nwk/nwk_src/nwkGroup.c"
 30629 ;; Parameters:    Size  Location     Type
 30630 ;;		None
 30631 ;; Auto vars:     Size  Location     Type
 30632 ;;  i               1    1[COMRAM] unsigned char 
 30633 ;; Return value:  Size  Location     Type
 30634 ;;                  1    wreg      void 
 30635 ;; Registers used:
 30636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30637 ;; Tracked objects:
 30638 ;;		On entry : 3F/2
 30639 ;;		On exit  : 3F/2
 30640 ;;		Unchanged: 3F/0
 30641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30646 ;;Total ram usage:        1 bytes
 30647 ;; Hardware stack levels used:    1
 30648 ;; Hardware stack levels required when called:    7
 30649 ;; This function calls:
 30650 ;;		Nothing
 30651 ;; This function is called by:
 30652 ;;		_NWK_Init
 30653 ;; This function uses a non-reentrant model
 30654 ;;
 30655                           
 30656                           	psect	text203
 30657  00889C                     __ptext203:
 30658                           	opt callstack 0
 30659  00889C                     _nwkGroupInit:
 30660                           	opt callstack 21
 30661                           
 30662                           ; BSR set to: 2
 30663                           ;../nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 30664                           
 30665                           ; BSR set to: 2
 30666                           ;incstack = 0
 30667  00889C  0E00               	movlw	0
 30668  00889E  6E02               	movwf	nwkGroupInit@i^0,c
 30669  0088A0                     l12433:
 30670                           
 30671                           ; BSR set to: 2
 30672                           ;../nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 30673  0088A0  5002               	movf	nwkGroupInit@i^0,w,c
 30674  0088A2  0D02               	mullw	2
 30675  0088A4  0E00               	movlw	low _nwkGroups
 30676  0088A6  24F3               	addwf	243,w,c
 30677  0088A8  6ED9               	movwf	fsr2l,c
 30678  0088AA  0E02               	movlw	high _nwkGroups
 30679  0088AC  20F4               	addwfc	prodh,w,c
 30680  0088AE  6EDA               	movwf	fsr2h,c
 30681  0088B0  0EFF               	movlw	255
 30682  0088B2  6EDE               	movwf	postinc2,c
 30683  0088B4  0EFF               	movlw	255
 30684  0088B6  6EDD               	movwf	postdec2,c
 30685                           
 30686                           ; BSR set to: 2
 30687  0088B8  2A02               	incf	nwkGroupInit@i^0,f,c
 30688                           
 30689                           ; BSR set to: 2
 30690  0088BA  0E09               	movlw	9
 30691  0088BC  6402               	cpfsgt	nwkGroupInit@i^0,c
 30692  0088BE  D7F0               	goto	l12433
 30693  0088C0  0012               	return	
 30694  0088C2                     __end_of_nwkGroupInit:
 30695                           	opt callstack 0
 30696                           
 30697 ;; *************** function _nwkFrameInit *****************
 30698 ;; Defined at:
 30699 ;;		line 70 in file "../nwk/nwk_src/nwkFrame.c"
 30700 ;; Parameters:    Size  Location     Type
 30701 ;;		None
 30702 ;; Auto vars:     Size  Location     Type
 30703 ;;  i               1    1[COMRAM] unsigned char 
 30704 ;; Return value:  Size  Location     Type
 30705 ;;                  1    wreg      void 
 30706 ;; Registers used:
 30707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30708 ;; Tracked objects:
 30709 ;;		On entry : 0/1
 30710 ;;		On exit  : 0/0
 30711 ;;		Unchanged: 0/0
 30712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30717 ;;Total ram usage:        1 bytes
 30718 ;; Hardware stack levels used:    1
 30719 ;; Hardware stack levels required when called:    7
 30720 ;; This function calls:
 30721 ;;		Nothing
 30722 ;; This function is called by:
 30723 ;;		_NWK_Init
 30724 ;; This function uses a non-reentrant model
 30725 ;;
 30726                           
 30727                           	psect	text204
 30728  008994                     __ptext204:
 30729                           	opt callstack 0
 30730  008994                     _nwkFrameInit:
 30731                           	opt callstack 21
 30732                           
 30733                           ;../nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 30734                           
 30735                           ; BSR set to: 2
 30736                           ;incstack = 0
 30737  008994  0E00               	movlw	0
 30738  008996  6E02               	movwf	nwkFrameInit@i^0,c
 30739  008998                     l12407:
 30740                           
 30741                           ;../nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 30742  008998  5002               	movf	nwkFrameInit@i^0,w,c
 30743  00899A  0D89               	mullw	137
 30744  00899C  0EBD               	movlw	low _nwkFrameFrames
 30745  00899E  24F3               	addwf	243,w,c
 30746  0089A0  6ED9               	movwf	fsr2l,c
 30747  0089A2  0E05               	movlw	high _nwkFrameFrames
 30748  0089A4  20F4               	addwfc	prodh,w,c
 30749  0089A6  6EDA               	movwf	fsr2h,c
 30750  0089A8  0E00               	movlw	0
 30751  0089AA  6EDF               	movwf	indf2,c
 30752  0089AC  2A02               	incf	nwkFrameInit@i^0,f,c
 30753  0089AE  0E04               	movlw	4
 30754  0089B0  6402               	cpfsgt	nwkFrameInit@i^0,c
 30755  0089B2  D7F2               	goto	l12407
 30756  0089B4  0012               	return	
 30757  0089B6                     __end_of_nwkFrameInit:
 30758                           	opt callstack 0
 30759                           
 30760 ;; *************** function _nwkDataReqInit *****************
 30761 ;; Defined at:
 30762 ;;		line 78 in file "../nwk/nwk_src/nwkDataReq.c"
 30763 ;; Parameters:    Size  Location     Type
 30764 ;;		None
 30765 ;; Auto vars:     Size  Location     Type
 30766 ;;		None
 30767 ;; Return value:  Size  Location     Type
 30768 ;;                  1    wreg      void 
 30769 ;; Registers used:
 30770 ;;		wreg, status,2, status,0
 30771 ;; Tracked objects:
 30772 ;;		On entry : 0/1
 30773 ;;		On exit  : 3F/0
 30774 ;;		Unchanged: 0/0
 30775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30780 ;;Total ram usage:        0 bytes
 30781 ;; Hardware stack levels used:    1
 30782 ;; Hardware stack levels required when called:    7
 30783 ;; This function calls:
 30784 ;;		Nothing
 30785 ;; This function is called by:
 30786 ;;		_NWK_Init
 30787 ;; This function uses a non-reentrant model
 30788 ;;
 30789                           
 30790                           	psect	text205
 30791  008E0A                     __ptext205:
 30792                           	opt callstack 0
 30793  008E0A                     _nwkDataReqInit:
 30794                           	opt callstack 21
 30795                           
 30796                           ;../nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 30797                           
 30798                           ;incstack = 0
 30799  008E0A  0E00               	movlw	0
 30800  008E0C  0100               	movlb	0	; () banked
 30801  008E0E  6FEA               	movwf	_nwkDataReqQueue& (0+255),b
 30802  008E10  0E00               	movlw	0
 30803  008E12  6FEB               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 30804                           
 30805                           ; BSR set to: 0
 30806  008E14  0012               	return		;funcret
 30807  008E16                     __end_of_nwkDataReqInit:
 30808                           	opt callstack 0
 30809                           
 30810 ;; *************** function _SYSTEM_Initialize *****************
 30811 ;; Defined at:
 30812 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30813 ;; Parameters:    Size  Location     Type
 30814 ;;		None
 30815 ;; Auto vars:     Size  Location     Type
 30816 ;;		None
 30817 ;; Return value:  Size  Location     Type
 30818 ;;                  1    wreg      void 
 30819 ;; Registers used:
 30820 ;;		wreg, status,2, status,0, cstack
 30821 ;; Tracked objects:
 30822 ;;		On entry : 0/0
 30823 ;;		On exit  : 3F/3D
 30824 ;;		Unchanged: 0/0
 30825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30830 ;;Total ram usage:        0 bytes
 30831 ;; Hardware stack levels used:    1
 30832 ;; Hardware stack levels required when called:    9
 30833 ;; This function calls:
 30834 ;;		_CRC_Initialize
 30835 ;;		_INTERRUPT_Initialize
 30836 ;;		_OSCILLATOR_Initialize
 30837 ;;		_PIN_MANAGER_Initialize
 30838 ;;		_PMD_Initialize
 30839 ;;		_SPI1_Initialize
 30840 ;;		_TMR0_Initialize
 30841 ;;		_UART1_Initialize
 30842 ;; This function is called by:
 30843 ;;		_main
 30844 ;; This function uses a non-reentrant model
 30845 ;;
 30846                           
 30847                           	psect	text206
 30848  0089B6                     __ptext206:
 30849                           	opt callstack 0
 30850  0089B6                     _SYSTEM_Initialize:
 30851                           	opt callstack 21
 30852                           
 30853                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30854                           
 30855                           ; BSR set to: 0
 30856                           ;incstack = 0
 30857  0089B6  ECBF  F040         	call	_INTERRUPT_Initialize	;wreg free
 30858                           
 30859                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30860  0089BA  ECEC  F044         	call	_PMD_Initialize	;wreg free
 30861                           
 30862                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30863  0089BE  EC87  F038         	call	_PIN_MANAGER_Initialize	;wreg free
 30864                           
 30865                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30866  0089C2  EC4E  F046         	call	_OSCILLATOR_Initialize	;wreg free
 30867                           
 30868                           ; BSR set to: 57
 30869                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 30870  0089C6  EC62  F03B         	call	_CRC_Initialize	;wreg free
 30871                           
 30872                           ; BSR set to: 1
 30873                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 30874  0089CA  EC7A  F041         	call	_TMR0_Initialize	;wreg free
 30875                           
 30876                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 30877  0089CE  ECB3  F034         	call	_UART1_Initialize	;wreg free
 30878                           
 30879                           ; BSR set to: 57
 30880                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 30881  0089D2  ECF9  F045         	call	_SPI1_Initialize	;wreg free
 30882                           
 30883                           ; BSR set to: 61
 30884  0089D6  0012               	return		;funcret
 30885  0089D8                     __end_of_SYSTEM_Initialize:
 30886                           	opt callstack 0
 30887                           
 30888 ;; *************** function _UART1_Initialize *****************
 30889 ;; Defined at:
 30890 ;;		line 95 in file "mcc_generated_files/uart1.c"
 30891 ;; Parameters:    Size  Location     Type
 30892 ;;		None
 30893 ;; Auto vars:     Size  Location     Type
 30894 ;;		None
 30895 ;; Return value:  Size  Location     Type
 30896 ;;                  1    wreg      void 
 30897 ;; Registers used:
 30898 ;;		wreg, status,2, status,0, cstack
 30899 ;; Tracked objects:
 30900 ;;		On entry : 3B/39
 30901 ;;		On exit  : 3F/39
 30902 ;;		Unchanged: 0/0
 30903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30908 ;;Total ram usage:        0 bytes
 30909 ;; Hardware stack levels used:    1
 30910 ;; Hardware stack levels required when called:    8
 30911 ;; This function calls:
 30912 ;;		_UART1_SetErrorHandler
 30913 ;;		_UART1_SetFramingErrorHandler
 30914 ;;		_UART1_SetOverrunErrorHandler
 30915 ;;		_UART1_SetRxInterruptHandler
 30916 ;;		_UART1_SetTxInterruptHandler
 30917 ;; This function is called by:
 30918 ;;		_SYSTEM_Initialize
 30919 ;; This function uses a non-reentrant model
 30920 ;;
 30921                           
 30922                           	psect	text207
 30923  006966                     __ptext207:
 30924                           	opt callstack 0
 30925  006966                     _UART1_Initialize:
 30926                           	opt callstack 21
 30927                           
 30928                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 30929                           
 30930                           ; BSR set to: 61
 30931                           ;incstack = 0
 30932  006966  0139               	movlb	57	; () banked
 30933  006968  9793               	bcf	147,3,b	;volatile
 30934                           
 30935                           ; BSR set to: 57
 30936                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30937  00696A  0E92               	movlw	low _UART1_Receive_ISR
 30938  00696C  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 30939  00696E  0E6C               	movlw	high _UART1_Receive_ISR
 30940  006970  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 30941  006972  ECD6  F046         	call	_UART1_SetRxInterruptHandler	;wreg free
 30942                           
 30943                           ; BSR set to: 57
 30944                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 30945  006976  9993               	bcf	147,4,b	;volatile
 30946                           
 30947                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 30948  006978  0E3A               	movlw	low _UART1_Transmit_ISR
 30949  00697A  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 30950  00697C  0E85               	movlw	high _UART1_Transmit_ISR
 30951  00697E  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 30952  006980  ECCF  F046         	call	_UART1_SetTxInterruptHandler	;wreg free
 30953                           
 30954                           ; BSR set to: 57
 30955                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 30956  006984  0E00               	movlw	0
 30957  006986  013D               	movlb	61	; () banked
 30958  006988  6FEC               	movwf	236,b	;volatile
 30959                           
 30960                           ; BSR set to: 61
 30961                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 30962  00698A  0E00               	movlw	0
 30963  00698C  6FED               	movwf	237,b	;volatile
 30964                           
 30965                           ; BSR set to: 61
 30966                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 30967  00698E  0E00               	movlw	0
 30968  006990  6FEE               	movwf	238,b	;volatile
 30969                           
 30970                           ; BSR set to: 61
 30971                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 30972  006992  0E00               	movlw	0
 30973  006994  6FEF               	movwf	239,b	;volatile
 30974                           
 30975                           ; BSR set to: 61
 30976                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 30977  006996  0E00               	movlw	0
 30978  006998  6FF0               	movwf	240,b	;volatile
 30979                           
 30980                           ; BSR set to: 61
 30981                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 30982  00699A  0E00               	movlw	0
 30983  00699C  6FF1               	movwf	241,b	;volatile
 30984                           
 30985                           ; BSR set to: 61
 30986                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 30987  00699E  0EB3               	movlw	179
 30988  0069A0  6FF2               	movwf	242,b	;volatile
 30989                           
 30990                           ; BSR set to: 61
 30991                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 30992  0069A2  0E00               	movlw	0
 30993  0069A4  6FF3               	movwf	243,b	;volatile
 30994                           
 30995                           ; BSR set to: 61
 30996                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 30997  0069A6  0E82               	movlw	130
 30998  0069A8  6FF4               	movwf	244,b	;volatile
 30999                           
 31000                           ; BSR set to: 61
 31001                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 31002  0069AA  0E40               	movlw	64
 31003  0069AC  6FF5               	movwf	245,b	;volatile
 31004                           
 31005                           ; BSR set to: 61
 31006                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 31007  0069AE  0E03               	movlw	3
 31008  0069B0  6FF6               	movwf	246,b	;volatile
 31009                           
 31010                           ; BSR set to: 61
 31011                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 31012  0069B2  0E00               	movlw	0
 31013  0069B4  6FF7               	movwf	247,b	;volatile
 31014                           
 31015                           ; BSR set to: 61
 31016                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 31017  0069B6  0E00               	movlw	0
 31018  0069B8  6FF8               	movwf	248,b	;volatile
 31019                           
 31020                           ; BSR set to: 61
 31021                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 31022  0069BA  0E00               	movlw	0
 31023  0069BC  6FF9               	movwf	249,b	;volatile
 31024                           
 31025                           ; BSR set to: 61
 31026                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 31027  0069BE  0E00               	movlw	0
 31028  0069C0  6FFA               	movwf	250,b	;volatile
 31029                           
 31030                           ; BSR set to: 61
 31031                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 31032  0069C2  0E68               	movlw	low _UART1_DefaultFramingErrorHandler
 31033  0069C4  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 31034  0069C6  0E8E               	movlw	high _UART1_DefaultFramingErrorHandler
 31035  0069C8  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 31036  0069CA  ECE4  F046         	call	_UART1_SetFramingErrorHandler	;wreg free
 31037                           
 31038                           ; BSR set to: 61
 31039                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 31040  0069CE  0E66               	movlw	low _UART1_DefaultOverrunErrorHandler
 31041  0069D0  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 31042  0069D2  0E8E               	movlw	high _UART1_DefaultOverrunErrorHandler
 31043  0069D4  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 31044  0069D6  ECDD  F046         	call	_UART1_SetOverrunErrorHandler	;wreg free
 31045                           
 31046                           ; BSR set to: 61
 31047                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 31048  0069DA  0E44               	movlw	low _UART1_DefaultErrorHandler
 31049  0069DC  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 31050  0069DE  0E8E               	movlw	high _UART1_DefaultErrorHandler
 31051  0069E0  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 31052  0069E2  ECEB  F046         	call	_UART1_SetErrorHandler	;wreg free
 31053                           
 31054                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 31055  0069E6  0E00               	movlw	0
 31056  0069E8  0101               	movlb	1	; () banked
 31057  0069EA  6F74               	movwf	_uart1RxLastError& (0+255),b	;volatile
 31058                           
 31059                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 31060  0069EC  0E00               	movlw	0
 31061  0069EE  0100               	movlb	0	; () banked
 31062  0069F0  6FEF               	movwf	_uart1TxHead& (0+255),b	;volatile
 31063                           
 31064                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 31065  0069F2  0E00               	movlw	0
 31066  0069F4  6FEE               	movwf	_uart1TxTail& (0+255),b	;volatile
 31067                           
 31068                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 31069  0069F6  0E40               	movlw	64
 31070  0069F8  0101               	movlb	1	; () banked
 31071  0069FA  6FFD               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 31072                           
 31073                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 31074  0069FC  0E00               	movlw	0
 31075  0069FE  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 31076                           
 31077                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 31078  006A00  0E00               	movlw	0
 31079  006A02  0100               	movlb	0	; () banked
 31080  006A04  6FED               	movwf	_uart1RxTail& (0+255),b	;volatile
 31081                           
 31082                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 31083  006A06  0E00               	movlw	0
 31084  006A08  6FEC               	movwf	_uart1RxCount& (0+255),b	;volatile
 31085                           
 31086                           ; BSR set to: 0
 31087                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 31088  006A0A  0139               	movlb	57	; () banked
 31089  006A0C  8793               	bsf	147,3,b	;volatile
 31090                           
 31091                           ; BSR set to: 57
 31092  006A0E  0012               	return		;funcret
 31093  006A10                     __end_of_UART1_Initialize:
 31094                           	opt callstack 0
 31095                           
 31096 ;; *************** function _UART1_SetTxInterruptHandler *****************
 31097 ;; Defined at:
 31098 ;;		line 352 in file "mcc_generated_files/uart1.c"
 31099 ;; Parameters:    Size  Location     Type
 31100 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31101 ;;		 -> UART1_Transmit_ISR(1), 
 31102 ;; Auto vars:     Size  Location     Type
 31103 ;;		None
 31104 ;; Return value:  Size  Location     Type
 31105 ;;                  1    wreg      void 
 31106 ;; Registers used:
 31107 ;;		wreg, status,2, status,0
 31108 ;; Tracked objects:
 31109 ;;		On entry : 3F/39
 31110 ;;		On exit  : 3F/39
 31111 ;;		Unchanged: 3E/0
 31112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31117 ;;Total ram usage:        2 bytes
 31118 ;; Hardware stack levels used:    1
 31119 ;; Hardware stack levels required when called:    7
 31120 ;; This function calls:
 31121 ;;		Nothing
 31122 ;; This function is called by:
 31123 ;;		_UART1_Initialize
 31124 ;; This function uses a non-reentrant model
 31125 ;;
 31126                           
 31127                           	psect	text208
 31128  008D9E                     __ptext208:
 31129                           	opt callstack 0
 31130  008D9E                     _UART1_SetTxInterruptHandler:
 31131                           	opt callstack 21
 31132                           
 31133                           ; BSR set to: 57
 31134                           ;mcc_generated_files/uart1.c: 353:     UART1_TxInterruptHandler = InterruptHandler;
 31135                           
 31136                           ; BSR set to: 57
 31137                           ;incstack = 0
 31138  008D9E  0060  F008  F1F9   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 31139  008DA4  0060  F00C  F1FA   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 31140                           
 31141                           ; BSR set to: 57
 31142  008DAA  0012               	return		;funcret
 31143  008DAC                     __end_of_UART1_SetTxInterruptHandler:
 31144                           	opt callstack 0
 31145                           
 31146 ;; *************** function _UART1_SetRxInterruptHandler *****************
 31147 ;; Defined at:
 31148 ;;		line 348 in file "mcc_generated_files/uart1.c"
 31149 ;; Parameters:    Size  Location     Type
 31150 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31151 ;;		 -> UART1_Receive_ISR(1), 
 31152 ;; Auto vars:     Size  Location     Type
 31153 ;;		None
 31154 ;; Return value:  Size  Location     Type
 31155 ;;                  1    wreg      void 
 31156 ;; Registers used:
 31157 ;;		wreg, status,2, status,0
 31158 ;; Tracked objects:
 31159 ;;		On entry : 3F/39
 31160 ;;		On exit  : 3F/39
 31161 ;;		Unchanged: 3E/0
 31162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31167 ;;Total ram usage:        2 bytes
 31168 ;; Hardware stack levels used:    1
 31169 ;; Hardware stack levels required when called:    7
 31170 ;; This function calls:
 31171 ;;		Nothing
 31172 ;; This function is called by:
 31173 ;;		_UART1_Initialize
 31174 ;; This function uses a non-reentrant model
 31175 ;;
 31176                           
 31177                           	psect	text209
 31178  008DAC                     __ptext209:
 31179                           	opt callstack 0
 31180  008DAC                     _UART1_SetRxInterruptHandler:
 31181                           	opt callstack 21
 31182                           
 31183                           ; BSR set to: 57
 31184                           ;mcc_generated_files/uart1.c: 349:     UART1_RxInterruptHandler = InterruptHandler;
 31185                           
 31186                           ; BSR set to: 57
 31187                           ;incstack = 0
 31188  008DAC  0060  F008  F1FB   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 31189  008DB2  0060  F00C  F1FC   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 31190                           
 31191                           ; BSR set to: 57
 31192  008DB8  0012               	return		;funcret
 31193  008DBA                     __end_of_UART1_SetRxInterruptHandler:
 31194                           	opt callstack 0
 31195                           
 31196 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 31197 ;; Defined at:
 31198 ;;		line 338 in file "mcc_generated_files/uart1.c"
 31199 ;; Parameters:    Size  Location     Type
 31200 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31201 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 31202 ;; Auto vars:     Size  Location     Type
 31203 ;;		None
 31204 ;; Return value:  Size  Location     Type
 31205 ;;                  1    wreg      void 
 31206 ;; Registers used:
 31207 ;;		wreg, status,2, status,0
 31208 ;; Tracked objects:
 31209 ;;		On entry : 3F/3D
 31210 ;;		On exit  : 3F/3D
 31211 ;;		Unchanged: 3E/0
 31212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31217 ;;Total ram usage:        2 bytes
 31218 ;; Hardware stack levels used:    1
 31219 ;; Hardware stack levels required when called:    7
 31220 ;; This function calls:
 31221 ;;		Nothing
 31222 ;; This function is called by:
 31223 ;;		_UART1_Initialize
 31224 ;; This function uses a non-reentrant model
 31225 ;;
 31226                           
 31227                           	psect	text210
 31228  008DBA                     __ptext210:
 31229                           	opt callstack 0
 31230  008DBA                     _UART1_SetOverrunErrorHandler:
 31231                           	opt callstack 21
 31232                           
 31233                           ; BSR set to: 61
 31234                           ;mcc_generated_files/uart1.c: 339:     UART1_OverrunErrorHandler = interruptHandler;
 31235                           
 31236                           ; BSR set to: 57
 31237                           ;incstack = 0
 31238  008DBA  0060  F008  F1F1   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 31239  008DC0  0060  F00C  F1F2   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 31240                           
 31241                           ; BSR set to: 61
 31242  008DC6  0012               	return		;funcret
 31243  008DC8                     __end_of_UART1_SetOverrunErrorHandler:
 31244                           	opt callstack 0
 31245                           
 31246 ;; *************** function _UART1_SetFramingErrorHandler *****************
 31247 ;; Defined at:
 31248 ;;		line 334 in file "mcc_generated_files/uart1.c"
 31249 ;; Parameters:    Size  Location     Type
 31250 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31251 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 31252 ;; Auto vars:     Size  Location     Type
 31253 ;;		None
 31254 ;; Return value:  Size  Location     Type
 31255 ;;                  1    wreg      void 
 31256 ;; Registers used:
 31257 ;;		wreg, status,2, status,0
 31258 ;; Tracked objects:
 31259 ;;		On entry : 3F/3D
 31260 ;;		On exit  : 3F/3D
 31261 ;;		Unchanged: 3E/0
 31262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31267 ;;Total ram usage:        2 bytes
 31268 ;; Hardware stack levels used:    1
 31269 ;; Hardware stack levels required when called:    7
 31270 ;; This function calls:
 31271 ;;		Nothing
 31272 ;; This function is called by:
 31273 ;;		_UART1_Initialize
 31274 ;; This function uses a non-reentrant model
 31275 ;;
 31276                           
 31277                           	psect	text211
 31278  008DC8                     __ptext211:
 31279                           	opt callstack 0
 31280  008DC8                     _UART1_SetFramingErrorHandler:
 31281                           	opt callstack 21
 31282                           
 31283                           ; BSR set to: 61
 31284                           ;mcc_generated_files/uart1.c: 335:     UART1_FramingErrorHandler = interruptHandler;
 31285                           
 31286                           ; BSR set to: 61
 31287                           ;incstack = 0
 31288  008DC8  0060  F008  F1F3   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 31289  008DCE  0060  F00C  F1F4   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 31290                           
 31291                           ; BSR set to: 61
 31292  008DD4  0012               	return		;funcret
 31293  008DD6                     __end_of_UART1_SetFramingErrorHandler:
 31294                           	opt callstack 0
 31295                           
 31296 ;; *************** function _UART1_SetErrorHandler *****************
 31297 ;; Defined at:
 31298 ;;		line 342 in file "mcc_generated_files/uart1.c"
 31299 ;; Parameters:    Size  Location     Type
 31300 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31301 ;;		 -> UART1_DefaultErrorHandler(1), 
 31302 ;; Auto vars:     Size  Location     Type
 31303 ;;		None
 31304 ;; Return value:  Size  Location     Type
 31305 ;;                  1    wreg      void 
 31306 ;; Registers used:
 31307 ;;		wreg, status,2, status,0
 31308 ;; Tracked objects:
 31309 ;;		On entry : 3F/3D
 31310 ;;		On exit  : 3F/3D
 31311 ;;		Unchanged: 3E/0
 31312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31317 ;;Total ram usage:        2 bytes
 31318 ;; Hardware stack levels used:    1
 31319 ;; Hardware stack levels required when called:    7
 31320 ;; This function calls:
 31321 ;;		Nothing
 31322 ;; This function is called by:
 31323 ;;		_UART1_Initialize
 31324 ;; This function uses a non-reentrant model
 31325 ;;
 31326                           
 31327                           	psect	text212
 31328  008DD6                     __ptext212:
 31329                           	opt callstack 0
 31330  008DD6                     _UART1_SetErrorHandler:
 31331                           	opt callstack 21
 31332                           
 31333                           ; BSR set to: 61
 31334                           ;mcc_generated_files/uart1.c: 343:     UART1_ErrorHandler = interruptHandler;
 31335                           
 31336                           ; BSR set to: 61
 31337                           ;incstack = 0
 31338  008DD6  0060  F008  F1EF   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 31339  008DDC  0060  F00C  F1F0   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 31340                           
 31341                           ; BSR set to: 61
 31342  008DE2  0012               	return		;funcret
 31343  008DE4                     __end_of_UART1_SetErrorHandler:
 31344                           	opt callstack 0
 31345                           
 31346 ;; *************** function _TMR0_Initialize *****************
 31347 ;; Defined at:
 31348 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 31349 ;; Parameters:    Size  Location     Type
 31350 ;;		None
 31351 ;; Auto vars:     Size  Location     Type
 31352 ;;		None
 31353 ;; Return value:  Size  Location     Type
 31354 ;;                  1    wreg      void 
 31355 ;; Registers used:
 31356 ;;		wreg, status,2, status,0, cstack
 31357 ;; Tracked objects:
 31358 ;;		On entry : 3F/1
 31359 ;;		On exit  : 3B/39
 31360 ;;		Unchanged: 0/0
 31361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31366 ;;Total ram usage:        2 bytes
 31367 ;; Hardware stack levels used:    1
 31368 ;; Hardware stack levels required when called:    8
 31369 ;; This function calls:
 31370 ;;		_TMR0_SetInterruptHandler
 31371 ;; This function is called by:
 31372 ;;		_SYSTEM_Initialize
 31373 ;; This function uses a non-reentrant model
 31374 ;;
 31375                           
 31376                           	psect	text213
 31377  0082F4                     __ptext213:
 31378                           	opt callstack 0
 31379  0082F4                     _TMR0_Initialize:
 31380                           	opt callstack 21
 31381                           
 31382                           ; BSR set to: 1
 31383                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 31384                           
 31385                           ; BSR set to: 61
 31386                           ;incstack = 0
 31387  0082F4  0E40               	movlw	64
 31388  0082F6  6EB9               	movwf	185,c	;volatile
 31389                           
 31390                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 31391  0082F8  0EC1               	movlw	193
 31392  0082FA  6EB7               	movwf	183,c	;volatile
 31393                           
 31394                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 31395  0082FC  0E80               	movlw	128
 31396  0082FE  6EB6               	movwf	182,c	;volatile
 31397                           
 31398                           ; BSR set to: 1
 31399                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 31400  008300  50B6               	movf	182,w,c	;volatile
 31401  008302  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 31402  008308  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 31403  00830A  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 31404  008310  6A04               	clrf	??_TMR0_Initialize^0,c
 31405  008312  1004               	iorwf	??_TMR0_Initialize^0,w,c
 31406  008314  6FF7               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 31407  008316  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 31408  008318  6FF8               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 31409                           
 31410                           ; BSR set to: 1
 31411                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 31412  00831A  0139               	movlb	57	; () banked
 31413  00831C  9FA3               	bcf	163,7,b	;volatile
 31414                           
 31415                           ; BSR set to: 57
 31416                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 31417  00831E  8F93               	bsf	147,7,b	;volatile
 31418                           
 31419                           ; BSR set to: 57
 31420                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 31421  008320  0E60               	movlw	low _TMR0_DefaultInterruptHandler
 31422  008322  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 31423  008324  0E8E               	movlw	high _TMR0_DefaultInterruptHandler
 31424  008326  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 31425  008328  ECF2  F046         	call	_TMR0_SetInterruptHandler	;wreg free
 31426                           
 31427                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 31428  00832C  0E90               	movlw	144
 31429  00832E  6EB8               	movwf	184,c	;volatile
 31430  008330  0012               	return		;funcret
 31431  008332                     __end_of_TMR0_Initialize:
 31432                           	opt callstack 0
 31433                           
 31434 ;; *************** function _TMR0_SetInterruptHandler *****************
 31435 ;; Defined at:
 31436 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 31437 ;; Parameters:    Size  Location     Type
 31438 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31439 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 31440 ;; Auto vars:     Size  Location     Type
 31441 ;;		None
 31442 ;; Return value:  Size  Location     Type
 31443 ;;                  1    wreg      void 
 31444 ;; Registers used:
 31445 ;;		wreg, status,2, status,0
 31446 ;; Tracked objects:
 31447 ;;		On entry : 3B/3D
 31448 ;;		On exit  : 3B/39
 31449 ;;		Unchanged: 3A/0
 31450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31455 ;;Total ram usage:        2 bytes
 31456 ;; Hardware stack levels used:    1
 31457 ;; Hardware stack levels required when called:    7
 31458 ;; This function calls:
 31459 ;;		Nothing
 31460 ;; This function is called by:
 31461 ;;		_TMR0_Initialize
 31462 ;;		_main
 31463 ;; This function uses a non-reentrant model
 31464 ;;
 31465                           
 31466                           	psect	text214
 31467  008DE4                     __ptext214:
 31468                           	opt callstack 0
 31469  008DE4                     _TMR0_SetInterruptHandler:
 31470                           	opt callstack 23
 31471                           
 31472                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 31473                           
 31474                           ;incstack = 0
 31475  008DE4  0060  F008  F1F5   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 31476  008DEA  0060  F00C  F1F6   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 31477  008DF0  0012               	return		;funcret
 31478  008DF2                     __end_of_TMR0_SetInterruptHandler:
 31479                           	opt callstack 0
 31480                           
 31481 ;; *************** function _SPI1_Initialize *****************
 31482 ;; Defined at:
 31483 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31484 ;; Parameters:    Size  Location     Type
 31485 ;;		None
 31486 ;; Auto vars:     Size  Location     Type
 31487 ;;		None
 31488 ;; Return value:  Size  Location     Type
 31489 ;;                  1    wreg      void 
 31490 ;; Registers used:
 31491 ;;		wreg, status,2
 31492 ;; Tracked objects:
 31493 ;;		On entry : 3F/39
 31494 ;;		On exit  : 3F/3D
 31495 ;;		Unchanged: 0/0
 31496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31501 ;;Total ram usage:        0 bytes
 31502 ;; Hardware stack levels used:    1
 31503 ;; Hardware stack levels required when called:    7
 31504 ;; This function calls:
 31505 ;;		Nothing
 31506 ;; This function is called by:
 31507 ;;		_SYSTEM_Initialize
 31508 ;; This function uses a non-reentrant model
 31509 ;;
 31510                           
 31511                           	psect	text215
 31512  008BF2                     __ptext215:
 31513                           	opt callstack 0
 31514  008BF2                     _SPI1_Initialize:
 31515                           	opt callstack 22
 31516                           
 31517                           ; BSR set to: 57
 31518                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 31519                           
 31520                           ;incstack = 0
 31521  008BF2  0E82               	movlw	130
 31522  008BF4  013D               	movlb	61	; () banked
 31523  008BF6  6F14               	movwf	20,b	;volatile
 31524                           
 31525                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 31526  008BF8  0EC0               	movlw	192
 31527  008BFA  6F15               	movwf	21,b	;volatile
 31528                           
 31529                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 31530  008BFC  0E03               	movlw	3
 31531  008BFE  6F16               	movwf	22,b	;volatile
 31532                           
 31533                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 31534  008C00  0E01               	movlw	1
 31535  008C02  6F1C               	movwf	28,b	;volatile
 31536                           
 31537                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 31538  008C04  0E03               	movlw	3
 31539  008C06  6F19               	movwf	25,b	;volatile
 31540                           
 31541                           ; BSR set to: 61
 31542                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB2 = 0;
 31543  008C08  94C3               	bcf	195,2,c	;volatile
 31544                           
 31545                           ; BSR set to: 61
 31546  008C0A  0012               	return		;funcret
 31547  008C0C                     __end_of_SPI1_Initialize:
 31548                           	opt callstack 0
 31549                           
 31550 ;; *************** function _PMD_Initialize *****************
 31551 ;; Defined at:
 31552 ;;		line 76 in file "mcc_generated_files/mcc.c"
 31553 ;; Parameters:    Size  Location     Type
 31554 ;;		None
 31555 ;; Auto vars:     Size  Location     Type
 31556 ;;		None
 31557 ;; Return value:  Size  Location     Type
 31558 ;;                  1    wreg      void 
 31559 ;; Registers used:
 31560 ;;		wreg, status,2
 31561 ;; Tracked objects:
 31562 ;;		On entry : 3F/39
 31563 ;;		On exit  : 3F/39
 31564 ;;		Unchanged: 0/0
 31565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31570 ;;Total ram usage:        0 bytes
 31571 ;; Hardware stack levels used:    1
 31572 ;; Hardware stack levels required when called:    7
 31573 ;; This function calls:
 31574 ;;		Nothing
 31575 ;; This function is called by:
 31576 ;;		_SYSTEM_Initialize
 31577 ;; This function uses a non-reentrant model
 31578 ;;
 31579                           
 31580                           	psect	text216
 31581  0089D8                     __ptext216:
 31582                           	opt callstack 0
 31583  0089D8                     _PMD_Initialize:
 31584                           	opt callstack 22
 31585                           
 31586                           ; BSR set to: 57
 31587                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 31588                           
 31589                           ; BSR set to: 61
 31590                           ;incstack = 0
 31591  0089D8  0E00               	movlw	0
 31592  0089DA  6FC0               	movwf	192,b	;volatile
 31593                           
 31594                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 31595  0089DC  0E00               	movlw	0
 31596  0089DE  6FC1               	movwf	193,b	;volatile
 31597                           
 31598                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 31599  0089E0  0E00               	movlw	0
 31600  0089E2  6FC2               	movwf	194,b	;volatile
 31601                           
 31602                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 31603  0089E4  0E00               	movlw	0
 31604  0089E6  6FC3               	movwf	195,b	;volatile
 31605                           
 31606                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 31607  0089E8  0E00               	movlw	0
 31608  0089EA  6FC4               	movwf	196,b	;volatile
 31609                           
 31610                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 31611  0089EC  0E00               	movlw	0
 31612  0089EE  6FC5               	movwf	197,b	;volatile
 31613                           
 31614                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 31615  0089F0  0E00               	movlw	0
 31616  0089F2  6FC6               	movwf	198,b	;volatile
 31617                           
 31618                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 31619  0089F4  0E00               	movlw	0
 31620  0089F6  6FC7               	movwf	199,b	;volatile
 31621                           
 31622                           ; BSR set to: 57
 31623  0089F8  0012               	return		;funcret
 31624  0089FA                     __end_of_PMD_Initialize:
 31625                           	opt callstack 0
 31626                           
 31627 ;; *************** function _PIN_MANAGER_Initialize *****************
 31628 ;; Defined at:
 31629 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 31630 ;; Parameters:    Size  Location     Type
 31631 ;;		None
 31632 ;; Auto vars:     Size  Location     Type
 31633 ;;		None
 31634 ;; Return value:  Size  Location     Type
 31635 ;;                  1    wreg      void 
 31636 ;; Registers used:
 31637 ;;		wreg, status,2
 31638 ;; Tracked objects:
 31639 ;;		On entry : 3F/39
 31640 ;;		On exit  : 3F/3A
 31641 ;;		Unchanged: 0/0
 31642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31647 ;;Total ram usage:        0 bytes
 31648 ;; Hardware stack levels used:    1
 31649 ;; Hardware stack levels required when called:    7
 31650 ;; This function calls:
 31651 ;;		Nothing
 31652 ;; This function is called by:
 31653 ;;		_SYSTEM_Initialize
 31654 ;; This function uses a non-reentrant model
 31655 ;;
 31656                           
 31657                           	psect	text217
 31658  00710E                     __ptext217:
 31659                           	opt callstack 0
 31660  00710E                     _PIN_MANAGER_Initialize:
 31661                           	opt callstack 22
 31662                           
 31663                           ; BSR set to: 57
 31664                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 31665                           
 31666                           ; BSR set to: 57
 31667                           ;incstack = 0
 31668  00710E  0E08               	movlw	8
 31669  007110  6EBA               	movwf	186,c	;volatile
 31670                           
 31671                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 31672  007112  0E00               	movlw	0
 31673  007114  6EBB               	movwf	187,c	;volatile
 31674                           
 31675                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 31676  007116  0E40               	movlw	64
 31677  007118  6EBC               	movwf	188,c	;volatile
 31678                           
 31679                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 31680  00711A  0EF7               	movlw	247
 31681  00711C  6EC2               	movwf	194,c	;volatile
 31682                           
 31683                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 31684  00711E  0EFE               	movlw	254
 31685  007120  6EC3               	movwf	195,c	;volatile
 31686                           
 31687                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 31688  007122  0E1C               	movlw	28
 31689  007124  6EC4               	movwf	196,c	;volatile
 31690                           
 31691                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 31692  007126  0E29               	movlw	41
 31693  007128  013A               	movlb	58	; () banked
 31694  00712A  6F60               	movwf	96,b	;volatile
 31695                           
 31696                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 31697  00712C  0ECD               	movlw	205
 31698  00712E  6F50               	movwf	80,b	;volatile
 31699                           
 31700                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF2;
 31701  007130  0EF2               	movlw	242
 31702  007132  6F40               	movwf	64,b	;volatile
 31703                           
 31704                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 31705  007134  0E00               	movlw	0
 31706  007136  6F81               	movwf	129,b	;volatile
 31707                           
 31708                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 31709  007138  0E00               	movlw	0
 31710  00713A  6F51               	movwf	81,b	;volatile
 31711                           
 31712                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 31713  00713C  0E00               	movlw	0
 31714  00713E  6F41               	movwf	65,b	;volatile
 31715                           
 31716                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 31717  007140  0E08               	movlw	8
 31718  007142  6F61               	movwf	97,b	;volatile
 31719                           
 31720                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 31721  007144  0E00               	movlw	0
 31722  007146  6F5A               	movwf	90,b	;volatile
 31723                           
 31724                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 31725  007148  0E00               	movlw	0
 31726  00714A  6F5B               	movwf	91,b	;volatile
 31727                           
 31728                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 31729  00714C  0E00               	movlw	0
 31730  00714E  6F6A               	movwf	106,b	;volatile
 31731                           
 31732                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 31733  007150  0E00               	movlw	0
 31734  007152  6F6B               	movwf	107,b	;volatile
 31735                           
 31736                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 31737  007154  0E00               	movlw	0
 31738  007156  6F42               	movwf	66,b	;volatile
 31739                           
 31740                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x06;
 31741  007158  0E06               	movlw	6
 31742  00715A  6F52               	movwf	82,b	;volatile
 31743                           
 31744                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x18;
 31745  00715C  0E18               	movlw	24
 31746  00715E  6F62               	movwf	98,b	;volatile
 31747                           
 31748                           ; BSR set to: 58
 31749                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 31750  007160  6943               	setf	67,b	;volatile
 31751                           
 31752                           ; BSR set to: 58
 31753                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 31754  007162  6953               	setf	83,b	;volatile
 31755                           
 31756                           ; BSR set to: 58
 31757                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 31758  007164  6963               	setf	99,b	;volatile
 31759                           
 31760                           ; BSR set to: 58
 31761                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 31762  007166  6944               	setf	68,b	;volatile
 31763                           
 31764                           ; BSR set to: 58
 31765                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 31766  007168  6954               	setf	84,b	;volatile
 31767                           
 31768                           ; BSR set to: 58
 31769                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 31770  00716A  6964               	setf	100,b	;volatile
 31771                           
 31772                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 31773  00716C  0E08               	movlw	8
 31774  00716E  6F84               	movwf	132,b	;volatile
 31775                           
 31776                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 31777  007170  0E13               	movlw	19
 31778  007172  6F10               	movwf	16,b	;volatile
 31779                           
 31780                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 31781  007174  0E17               	movlw	23
 31782  007176  6FDE               	movwf	222,b	;volatile
 31783                           
 31784                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 31785  007178  0E05               	movlw	5
 31786  00717A  6FE0               	movwf	224,b	;volatile
 31787                           
 31788                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 31789  00717C  0E1F               	movlw	31
 31790  00717E  6F08               	movwf	8,b	;volatile
 31791                           
 31792                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 31793  007180  0E14               	movlw	20
 31794  007182  6F11               	movwf	17,b	;volatile
 31795                           
 31796                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 31797  007184  0E12               	movlw	18
 31798  007186  6FE5               	movwf	229,b	;volatile
 31799                           
 31800                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 31801  007188  0E1F               	movlw	31
 31802  00718A  6FE6               	movwf	230,b	;volatile
 31803                           
 31804                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 31805  00718C  0E1E               	movlw	30
 31806  00718E  6F17               	movwf	23,b	;volatile
 31807                           
 31808                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 31809  007190  0E09               	movlw	9
 31810  007192  6FDF               	movwf	223,b	;volatile
 31811                           
 31812                           ; BSR set to: 58
 31813  007194  0012               	return		;funcret
 31814  007196                     __end_of_PIN_MANAGER_Initialize:
 31815                           	opt callstack 0
 31816                           
 31817 ;; *************** function _OSCILLATOR_Initialize *****************
 31818 ;; Defined at:
 31819 ;;		line 62 in file "mcc_generated_files/mcc.c"
 31820 ;; Parameters:    Size  Location     Type
 31821 ;;		None
 31822 ;; Auto vars:     Size  Location     Type
 31823 ;;		None
 31824 ;; Return value:  Size  Location     Type
 31825 ;;                  1    wreg      void 
 31826 ;; Registers used:
 31827 ;;		wreg, status,2
 31828 ;; Tracked objects:
 31829 ;;		On entry : 3F/3A
 31830 ;;		On exit  : 3F/39
 31831 ;;		Unchanged: 0/0
 31832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31837 ;;Total ram usage:        0 bytes
 31838 ;; Hardware stack levels used:    1
 31839 ;; Hardware stack levels required when called:    7
 31840 ;; This function calls:
 31841 ;;		Nothing
 31842 ;; This function is called by:
 31843 ;;		_SYSTEM_Initialize
 31844 ;; This function uses a non-reentrant model
 31845 ;;
 31846                           
 31847                           	psect	text218
 31848  008C9C                     __ptext218:
 31849                           	opt callstack 0
 31850  008C9C                     _OSCILLATOR_Initialize:
 31851                           	opt callstack 22
 31852                           
 31853                           ; BSR set to: 58
 31854                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 31855                           
 31856                           ; BSR set to: 58
 31857                           ;incstack = 0
 31858  008C9C  0E60               	movlw	96
 31859  008C9E  0139               	movlb	57	; () banked
 31860  008CA0  6FD9               	movwf	217,b	;volatile
 31861                           
 31862                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 31863  008CA2  0E00               	movlw	0
 31864  008CA4  6FDB               	movwf	219,b	;volatile
 31865                           
 31866                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 31867  008CA6  0E00               	movlw	0
 31868  008CA8  6FDD               	movwf	221,b	;volatile
 31869                           
 31870                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 31871  008CAA  0E08               	movlw	8
 31872  008CAC  6FDF               	movwf	223,b	;volatile
 31873                           
 31874                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 31875  008CAE  0E00               	movlw	0
 31876  008CB0  6FDE               	movwf	222,b	;volatile
 31877                           
 31878                           ; BSR set to: 57
 31879  008CB2  0012               	return		;funcret
 31880  008CB4                     __end_of_OSCILLATOR_Initialize:
 31881                           	opt callstack 0
 31882                           
 31883 ;; *************** function _INTERRUPT_Initialize *****************
 31884 ;; Defined at:
 31885 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31886 ;; Parameters:    Size  Location     Type
 31887 ;;		None
 31888 ;; Auto vars:     Size  Location     Type
 31889 ;;  state           1    1[COMRAM] _Bool 
 31890 ;; Return value:  Size  Location     Type
 31891 ;;                  1    wreg      void 
 31892 ;; Registers used:
 31893 ;;		wreg, status,2
 31894 ;; Tracked objects:
 31895 ;;		On entry : 0/0
 31896 ;;		On exit  : 3F/39
 31897 ;;		Unchanged: 0/0
 31898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31903 ;;Total ram usage:        1 bytes
 31904 ;; Hardware stack levels used:    1
 31905 ;; Hardware stack levels required when called:    7
 31906 ;; This function calls:
 31907 ;;		Nothing
 31908 ;; This function is called by:
 31909 ;;		_SYSTEM_Initialize
 31910 ;; This function uses a non-reentrant model
 31911 ;;
 31912                           
 31913                           	psect	text219
 31914  00817E                     __ptext219:
 31915                           	opt callstack 0
 31916  00817E                     _INTERRUPT_Initialize:
 31917                           	opt callstack 22
 31918                           
 31919                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31920                           
 31921                           ; BSR set to: 57
 31922                           ;incstack = 0
 31923  00817E  8AD2               	bsf	210,5,c	;volatile
 31924                           
 31925                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31926  008180  0E00               	movlw	0
 31927  008182  BED2               	btfsc	16338,7,c	;volatile
 31928  008184  0E01               	movlw	1
 31929  008186  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 31930                           
 31931                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31932  008188  9ED2               	bcf	16338,7,c	;volatile
 31933                           
 31934                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31935  00818A  0E55               	movlw	85
 31936  00818C  6ED4               	movwf	212,c	;volatile
 31937                           
 31938                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31939  00818E  0EAA               	movlw	170
 31940  008190  6ED4               	movwf	212,c	;volatile
 31941                           
 31942                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31943  008192  90D4               	bcf	212,0,c	;volatile
 31944                           
 31945                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 31946  008194  0E00               	movlw	0
 31947  008196  6ED7               	movwf	215,c	;volatile
 31948                           
 31949                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 31950  008198  0E00               	movlw	0
 31951  00819A  6ED6               	movwf	214,c	;volatile
 31952                           
 31953                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 31954  00819C  0E08               	movlw	8
 31955  00819E  6ED5               	movwf	213,c	;volatile
 31956                           
 31957                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31958  0081A0  0E55               	movlw	85
 31959  0081A2  6ED4               	movwf	212,c	;volatile
 31960                           
 31961                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31962  0081A4  0EAA               	movlw	170
 31963  0081A6  6ED4               	movwf	212,c	;volatile
 31964                           
 31965                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31966  0081A8  80D4               	bsf	212,0,c	;volatile
 31967                           
 31968                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31969  0081AA  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 31970  0081AC  D002               	bra	u5895
 31971  0081AE  9ED2               	bcf	16338,7,c	;volatile
 31972  0081B0  D001               	bra	u5896
 31973  0081B2                     u5895:
 31974  0081B2  8ED2               	bsf	16338,7,c	;volatile
 31975  0081B4                     u5896:
 31976                           
 31977                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 31978  0081B4  0139               	movlb	57	; () banked
 31979  0081B6  8983               	bsf	131,4,b	;volatile
 31980                           
 31981                           ; BSR set to: 57
 31982                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 31983  0081B8  8783               	bsf	131,3,b	;volatile
 31984                           
 31985                           ; BSR set to: 57
 31986                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 31987  0081BA  9F83               	bcf	131,7,b	;volatile
 31988                           
 31989                           ; BSR set to: 57
 31990  0081BC  0012               	return		;funcret
 31991  0081BE                     __end_of_INTERRUPT_Initialize:
 31992                           	opt callstack 0
 31993                           
 31994 ;; *************** function _CRC_Initialize *****************
 31995 ;; Defined at:
 31996 ;;		line 76 in file "mcc_generated_files/crc.c"
 31997 ;; Parameters:    Size  Location     Type
 31998 ;;		None
 31999 ;; Auto vars:     Size  Location     Type
 32000 ;;  seed            2    4[COMRAM] unsigned short 
 32001 ;;  poly            2    2[COMRAM] unsigned short 
 32002 ;; Return value:  Size  Location     Type
 32003 ;;                  1    wreg      void 
 32004 ;; Registers used:
 32005 ;;		wreg, status,2, status,0
 32006 ;; Tracked objects:
 32007 ;;		On entry : 3F/39
 32008 ;;		On exit  : 3F/1
 32009 ;;		Unchanged: 0/0
 32010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32012 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32014 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32015 ;;Total ram usage:        5 bytes
 32016 ;; Hardware stack levels used:    1
 32017 ;; Hardware stack levels required when called:    7
 32018 ;; This function calls:
 32019 ;;		Nothing
 32020 ;; This function is called by:
 32021 ;;		_SYSTEM_Initialize
 32022 ;; This function uses a non-reentrant model
 32023 ;;
 32024                           
 32025                           	psect	text220
 32026  0076C4                     __ptext220:
 32027                           	opt callstack 0
 32028  0076C4                     _CRC_Initialize:
 32029                           	opt callstack 22
 32030                           
 32031                           ; BSR set to: 57
 32032                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 32033                           
 32034                           ; BSR set to: 57
 32035                           ;incstack = 0
 32036  0076C4  0E80               	movlw	128
 32037  0076C6  6F68               	movwf	104,b	;volatile
 32038                           
 32039                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 32040  0076C8  0E7F               	movlw	127
 32041  0076CA  6F69               	movwf	105,b	;volatile
 32042                           
 32043                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 32044  0076CC  0E00               	movlw	0
 32045  0076CE  6F62               	movwf	98,b	;volatile
 32046                           
 32047                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 32048  0076D0  0E00               	movlw	0
 32049  0076D2  6F63               	movwf	99,b	;volatile
 32050                           
 32051                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 32052  0076D4  0E00               	movlw	0
 32053  0076D6  6F7C               	movwf	124,b	;volatile
 32054                           
 32055                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 32056  0076D8  0E00               	movlw	0
 32057  0076DA  6F78               	movwf	120,b	;volatile
 32058                           
 32059                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 32060  0076DC  0E00               	movlw	0
 32061  0076DE  6F77               	movwf	119,b	;volatile
 32062                           
 32063                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 32064  0076E0  0E00               	movlw	0
 32065  0076E2  6F76               	movwf	118,b	;volatile
 32066                           
 32067                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 32068  0076E4  0E3F               	movlw	63
 32069  0076E6  6F7B               	movwf	123,b	;volatile
 32070                           
 32071                           ; BSR set to: 57
 32072                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 32073  0076E8  697A               	setf	122,b	;volatile
 32074                           
 32075                           ; BSR set to: 57
 32076                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 32077  0076EA  6979               	setf	121,b	;volatile
 32078                           
 32079                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 32080  0076EC  0E00               	movlw	0
 32081  0076EE  6F7D               	movwf	125,b	;volatile
 32082                           
 32083                           ;mcc_generated_files/crc.c: 106:     poly = 32773;
 32084  0076F0  0E80               	movlw	128
 32085  0076F2  6E04               	movwf	(CRC_Initialize@poly+1)^0,c
 32086  0076F4  0E05               	movlw	5
 32087  0076F6  6E03               	movwf	CRC_Initialize@poly^0,c
 32088                           
 32089                           ; BSR set to: 57
 32090                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 32091  0076F8  0060  F013  F967   	movff	CRC_Initialize@poly+1,14695	;volatile
 32092                           
 32093                           ; BSR set to: 57
 32094                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 32095  0076FE  0E05               	movlw	5
 32096  007700  6F66               	movwf	102,b	;volatile
 32097                           
 32098                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 32099  007702  0E00               	movlw	0
 32100  007704  6E06               	movwf	(CRC_Initialize@seed+1)^0,c
 32101  007706  0E00               	movlw	0
 32102  007708  6E05               	movwf	CRC_Initialize@seed^0,c
 32103                           
 32104                           ; BSR set to: 57
 32105                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 32106  00770A  0060  F01B  F963   	movff	CRC_Initialize@seed+1,14691	;volatile
 32107                           
 32108                           ; BSR set to: 57
 32109                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 32110  007710  0E00               	movlw	0
 32111  007712  6F62               	movwf	98,b	;volatile
 32112                           
 32113                           ; BSR set to: 57
 32114                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 32115  007714  3969               	swapf	105,w,b	;volatile
 32116  007716  0B0F               	andlw	15
 32117  007718  6E02               	movwf	??_CRC_Initialize^0,c
 32118  00771A  2802               	incf	??_CRC_Initialize^0,w,c
 32119  00771C  0101               	movlb	1	; () banked
 32120  00771E  6FD0               	movwf	_crcObj& (0+255),b
 32121                           
 32122                           ; BSR set to: 1
 32123                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 32124  007720  0139               	movlb	57	; () banked
 32125  007722  5169               	movf	105,w,b	;volatile
 32126  007724  0B0F               	andlw	15
 32127  007726  6E02               	movwf	??_CRC_Initialize^0,c
 32128  007728  2802               	incf	??_CRC_Initialize^0,w,c
 32129  00772A  0101               	movlb	1	; () banked
 32130  00772C  6FD1               	movwf	(_crcObj+1)& (0+255),b
 32131                           
 32132                           ; BSR set to: 1
 32133  00772E  0012               	return		;funcret
 32134  007730                     __end_of_CRC_Initialize:
 32135                           	opt callstack 0
 32136                           
 32137 ;; *************** function _TMR0_ISR *****************
 32138 ;; Defined at:
 32139 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 32140 ;; Parameters:    Size  Location     Type
 32141 ;;		None
 32142 ;; Auto vars:     Size  Location     Type
 32143 ;;		None
 32144 ;; Return value:  Size  Location     Type
 32145 ;;                  1    wreg      void 
 32146 ;; Registers used:
 32147 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32148 ;; Tracked objects:
 32149 ;;		On entry : 0/0
 32150 ;;		On exit  : 0/0
 32151 ;;		Unchanged: 0/0
 32152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32157 ;;Total ram usage:        1 bytes
 32158 ;; Hardware stack levels used:    1
 32159 ;; Hardware stack levels required when called:    6
 32160 ;; This function calls:
 32161 ;;		_TMR0_CallBack
 32162 ;; This function is called by:
 32163 ;;		Interrupt level 1
 32164 ;; This function uses a non-reentrant model
 32165 ;;
 32166                           
 32167                           	psect	text221
 32168  0089FC                     __ptext221:
 32169                           	opt callstack 0
 32170  0089FC                     _TMR0_ISR:
 32171                           	opt callstack 9
 32172                           
 32173                           ; BSR set to: 1
 32174                           ;incstack = 0
 32175  0089FC  006F FF60  F001    	movff	status,??_TMR0_ISR
 32176                           
 32177                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 32178  008A02  0139               	movlb	57	; () banked
 32179  008A04  9FA3               	bcf	163,7,b	;volatile
 32180                           
 32181                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 32182  008A06  0060  F7E3  FFB7   	movff	_timer0ReloadVal16bit+1,16311	;volatile
 32183                           
 32184                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 32185  008A0C  0060  F7DF  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 32186                           
 32187                           ; BSR set to: 57
 32188                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 32189  008A12  EC3F  F045         	call	_TMR0_CallBack	;wreg free
 32190  008A16  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 32191  008A1C  0011               	retfie		f
 32192  008A1E                     __end_of_TMR0_ISR:
 32193                           	opt callstack 0
 32194                           
 32195 ;; *************** function _TMR0_CallBack *****************
 32196 ;; Defined at:
 32197 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 32198 ;; Parameters:    Size  Location     Type
 32199 ;;		None
 32200 ;; Auto vars:     Size  Location     Type
 32201 ;;		None
 32202 ;; Return value:  Size  Location     Type
 32203 ;;                  1    wreg      void 
 32204 ;; Registers used:
 32205 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32206 ;; Tracked objects:
 32207 ;;		On entry : 3F/39
 32208 ;;		On exit  : 0/0
 32209 ;;		Unchanged: 0/0
 32210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32215 ;;Total ram usage:        0 bytes
 32216 ;; Hardware stack levels used:    1
 32217 ;; Hardware stack levels required when called:    5
 32218 ;; This function calls:
 32219 ;;		Absolute function
 32220 ;;		_TMR0_DefaultInterruptHandler
 32221 ;;		_Timer0Handler
 32222 ;; This function is called by:
 32223 ;;		_TMR0_ISR
 32224 ;; This function uses a non-reentrant model
 32225 ;;
 32226                           
 32227                           	psect	text222
 32228  008A7E                     __ptext222:
 32229                           	opt callstack 0
 32230  008A7E                     _TMR0_CallBack:
 32231                           	opt callstack 9
 32232                           
 32233                           ; BSR set to: 57
 32234                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 32235                           
 32236                           ;incstack = 0
 32237  008A7E  0101               	movlb	1	; () banked
 32238  008A80  51F5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32239  008A82  11F6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32240  008A84  B4D8               	btfsc	status,2,c
 32241  008A86  0012               	return	
 32242                           
 32243                           ; BSR set to: 1
 32244                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 32245  008A88  D801               	call	i1u1266_28
 32246  008A8A  0012               	return	
 32247  008A8C                     i1u1266_28:
 32248  008A8C  0005               	push	
 32249  008A8E  6EFA               	movwf	pclath,c
 32250  008A90  51F5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32251  008A92  6EFD               	movwf	tosl,c
 32252  008A94  51F6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32253  008A96  6EFE               	movwf	tosh,c
 32254  008A98  6AFF               	clrf	tosu,c
 32255  008A9A  50FA               	movf	pclath,w,c
 32256  008A9C  0012               	return		;indir
 32257  008A9E                     __end_of_TMR0_CallBack:
 32258                           	opt callstack 0
 32259                           
 32260 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 32261 ;; Defined at:
 32262 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 32263 ;; Parameters:    Size  Location     Type
 32264 ;;		None
 32265 ;; Auto vars:     Size  Location     Type
 32266 ;;		None
 32267 ;; Return value:  Size  Location     Type
 32268 ;;                  1    wreg      void 
 32269 ;; Registers used:
 32270 ;;		None
 32271 ;; Tracked objects:
 32272 ;;		On entry : 3F/1
 32273 ;;		On exit  : 3F/1
 32274 ;;		Unchanged: 3F/0
 32275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32280 ;;Total ram usage:        0 bytes
 32281 ;; Hardware stack levels used:    1
 32282 ;; Hardware stack levels required when called:    4
 32283 ;; This function calls:
 32284 ;;		Nothing
 32285 ;; This function is called by:
 32286 ;;		_TMR0_Initialize
 32287 ;;		_TMR0_CallBack
 32288 ;; This function uses a non-reentrant model
 32289 ;;
 32290                           
 32291                           	psect	text223
 32292  008E60                     __ptext223:
 32293                           	opt callstack 0
 32294  008E60                     _TMR0_DefaultInterruptHandler:
 32295                           	opt callstack 9
 32296                           
 32297                           ; BSR set to: 1
 32298                           
 32299                           ;incstack = 0
 32300  008E60  0012               	return		;funcret
 32301  008E62                     __end_of_TMR0_DefaultInterruptHandler:
 32302                           	opt callstack 0
 32303                           
 32304 ;; *************** function _Timer0Handler *****************
 32305 ;; Defined at:
 32306 ;;		line 7 in file "../hal/hal_src/Timers.c"
 32307 ;; Parameters:    Size  Location     Type
 32308 ;;		None
 32309 ;; Auto vars:     Size  Location     Type
 32310 ;;		None
 32311 ;; Return value:  Size  Location     Type
 32312 ;;                  1    wreg      void 
 32313 ;; Registers used:
 32314 ;;		wreg, status,2, status,0
 32315 ;; Tracked objects:
 32316 ;;		On entry : 3F/1
 32317 ;;		On exit  : 3F/1
 32318 ;;		Unchanged: 0/0
 32319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32324 ;;Total ram usage:        0 bytes
 32325 ;; Hardware stack levels used:    1
 32326 ;; Hardware stack levels required when called:    4
 32327 ;; This function calls:
 32328 ;;		Nothing
 32329 ;; This function is called by:
 32330 ;;		_main
 32331 ;;		_TMR0_CallBack
 32332 ;; This function uses a non-reentrant model
 32333 ;;
 32334                           
 32335                           	psect	text224
 32336  007D50                     __ptext224:
 32337                           	opt callstack 0
 32338  007D50                     _Timer0Handler:
 32339                           	opt callstack 9
 32340                           
 32341                           ; BSR set to: 1
 32342                           ;../hal/hal_src/Timers.c: 9:     if(txTimeOut){
 32343                           
 32344                           ; BSR set to: 1
 32345                           ;incstack = 0
 32346  007D50  0100               	movlb	0	; () banked
 32347  007D52  51F5               	movf	_txTimeOut& (0+255),w,b	;volatile
 32348  007D54  11F6               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 32349  007D56  B4D8               	btfsc	status,2,c
 32350  007D58  D003               	goto	i1l13031
 32351                           
 32352                           ; BSR set to: 0
 32353                           ;../hal/hal_src/Timers.c: 10:         txTimeOut--;
 32354  007D5A  07F5               	decf	_txTimeOut& (0+255),f,b	;volatile
 32355  007D5C  A0D8               	btfss	status,0,c
 32356  007D5E  07F6               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 32357  007D60                     i1l13031:
 32358                           
 32359                           ; BSR set to: 0
 32360                           ;../hal/hal_src/Timers.c: 12:     if(ATTimeoutTimer){
 32361  007D60  51FD               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 32362  007D62  11FE               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 32363  007D64  B4D8               	btfsc	status,2,c
 32364  007D66  D003               	goto	i1l13035
 32365                           
 32366                           ; BSR set to: 0
 32367                           ;../hal/hal_src/Timers.c: 13:         ATTimeoutTimer--;
 32368  007D68  07FD               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 32369  007D6A  A0D8               	btfss	status,0,c
 32370  007D6C  07FE               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 32371  007D6E                     i1l13035:
 32372                           
 32373                           ; BSR set to: 0
 32374                           ;../hal/hal_src/Timers.c: 15:     if(cadTimeOut){
 32375  007D6E  51F7               	movf	_cadTimeOut& (0+255),w,b	;volatile
 32376  007D70  11F8               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 32377  007D72  B4D8               	btfsc	status,2,c
 32378  007D74  D003               	goto	i1l13039
 32379                           
 32380                           ; BSR set to: 0
 32381                           ;../hal/hal_src/Timers.c: 16:         cadTimeOut--;
 32382  007D76  07F7               	decf	_cadTimeOut& (0+255),f,b	;volatile
 32383  007D78  A0D8               	btfss	status,0,c
 32384  007D7A  07F8               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 32385  007D7C                     i1l13039:
 32386                           
 32387                           ; BSR set to: 0
 32388                           ;../hal/hal_src/Timers.c: 18:     if(_cadBackoffTimer){
 32389  007D7C  51F9               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 32390  007D7E  11FA               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 32391  007D80  B4D8               	btfsc	status,2,c
 32392  007D82  D003               	goto	i1l13043
 32393                           
 32394                           ; BSR set to: 0
 32395                           ;../hal/hal_src/Timers.c: 19:         _cadBackoffTimer--;
 32396  007D84  07F9               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 32397  007D86  A0D8               	btfss	status,0,c
 32398  007D88  07FA               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 32399  007D8A                     i1l13043:
 32400                           
 32401                           ; BSR set to: 0
 32402                           ;../hal/hal_src/Timers.c: 21:     if(ledtimer){
 32403  007D8A  0101               	movlb	1	; () banked
 32404  007D8C  51D3               	movf	_ledtimer& (0+255),w,b	;volatile
 32405  007D8E  11D4               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 32406  007D90  B4D8               	btfsc	status,2,c
 32407  007D92  D003               	goto	i1l1000
 32408                           
 32409                           ; BSR set to: 1
 32410                           ;../hal/hal_src/Timers.c: 22:         ledtimer--;
 32411  007D94  07D3               	decf	_ledtimer& (0+255),f,b	;volatile
 32412  007D96  A0D8               	btfss	status,0,c
 32413  007D98  07D4               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 32414  007D9A                     i1l1000:
 32415                           
 32416                           ; BSR set to: 1
 32417                           ;../hal/hal_src/Timers.c: 24:     halTimerIrqCount++;
 32418  007D9A  4B6F               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 32419  007D9C  2B70               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 32420                           
 32421                           ; BSR set to: 1
 32422  007D9E  0012               	return		;funcret
 32423  007DA0                     __end_of_Timer0Handler:
 32424                           	opt callstack 0
 32425                           
 32426 ;; *************** function _Default_ISR *****************
 32427 ;; Defined at:
 32428 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 32429 ;; Parameters:    Size  Location     Type
 32430 ;;		None
 32431 ;; Auto vars:     Size  Location     Type
 32432 ;;		None
 32433 ;; Return value:  Size  Location     Type
 32434 ;;                  1    wreg      void 
 32435 ;; Registers used:
 32436 ;;		None
 32437 ;; Tracked objects:
 32438 ;;		On entry : 0/0
 32439 ;;		On exit  : 0/0
 32440 ;;		Unchanged: 0/0
 32441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32446 ;;Total ram usage:        0 bytes
 32447 ;; Hardware stack levels used:    1
 32448 ;; This function calls:
 32449 ;;		Nothing
 32450 ;; This function is called by:
 32451 ;;		Interrupt level 2
 32452 ;; This function uses a non-reentrant model
 32453 ;;
 32454                           
 32455                           	psect	text225
 32456  008E64                     __ptext225:
 32457                           	opt callstack 0
 32458  008E64                     _Default_ISR:
 32459                           	opt callstack 12
 32460                           
 32461                           ; BSR set to: 1
 32462                           ;incstack = 0
 32463  008E64  0011               	retfie		f
 32464  008E66                     __end_of_Default_ISR:
 32465                           	opt callstack 0
 32466                           
 32467 ;; *************** function _UART1_tx_vect_isr *****************
 32468 ;; Defined at:
 32469 ;;		line 247 in file "mcc_generated_files/uart1.c"
 32470 ;; Parameters:    Size  Location     Type
 32471 ;;		None
 32472 ;; Auto vars:     Size  Location     Type
 32473 ;;		None
 32474 ;; Return value:  Size  Location     Type
 32475 ;;                  1    wreg      void 
 32476 ;; Registers used:
 32477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32478 ;; Tracked objects:
 32479 ;;		On entry : 0/0
 32480 ;;		On exit  : 0/0
 32481 ;;		Unchanged: 0/0
 32482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32487 ;;Total ram usage:        0 bytes
 32488 ;; Hardware stack levels used:    1
 32489 ;; Hardware stack levels required when called:    1
 32490 ;; This function calls:
 32491 ;;		Absolute function
 32492 ;;		_UART1_Transmit_ISR
 32493 ;; This function is called by:
 32494 ;;		Interrupt level 2
 32495 ;; This function uses a non-reentrant model
 32496 ;;
 32497                           
 32498                           	psect	text226
 32499  008AA0                     __ptext226:
 32500                           	opt callstack 0
 32501  008AA0                     _UART1_tx_vect_isr:
 32502                           	opt callstack 11
 32503                           
 32504                           ;mcc_generated_files/uart1.c: 249:     if(UART1_TxInterruptHandler)
 32505                           
 32506                           ;incstack = 0
 32507  008AA0  0101               	movlb	1	; () banked
 32508  008AA2  51F9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32509  008AA4  11FA               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32510  008AA6  B4D8               	btfsc	status,2,c
 32511  008AA8  0011               	retfie		f
 32512                           
 32513                           ; BSR set to: 1
 32514                           ;mcc_generated_files/uart1.c: 250:     {;mcc_generated_files/uart1.c: 251:         UART1
      +                          _TxInterruptHandler();
 32515  008AAA  D801               	call	i2u1276_48
 32516  008AAC  0011               	retfie		f
 32517  008AAE                     i2u1276_48:
 32518  008AAE  0005               	push	
 32519  008AB0  6EFA               	movwf	pclath,c
 32520  008AB2  51F9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32521  008AB4  6EFD               	movwf	tosl,c
 32522  008AB6  51FA               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32523  008AB8  6EFE               	movwf	tosh,c
 32524  008ABA  6AFF               	clrf	tosu,c
 32525  008ABC  50FA               	movf	pclath,w,c
 32526  008ABE  0012               	return		;indir
 32527  008AC0                     __end_of_UART1_tx_vect_isr:
 32528                           	opt callstack 0
 32529                           
 32530 ;; *************** function _UART1_Transmit_ISR *****************
 32531 ;; Defined at:
 32532 ;;		line 265 in file "mcc_generated_files/uart1.c"
 32533 ;; Parameters:    Size  Location     Type
 32534 ;;		None
 32535 ;; Auto vars:     Size  Location     Type
 32536 ;;		None
 32537 ;; Return value:  Size  Location     Type
 32538 ;;                  1    wreg      void 
 32539 ;; Registers used:
 32540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32541 ;; Tracked objects:
 32542 ;;		On entry : 3F/1
 32543 ;;		On exit  : 7/1
 32544 ;;		Unchanged: 0/0
 32545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32550 ;;Total ram usage:        0 bytes
 32551 ;; Hardware stack levels used:    1
 32552 ;; This function calls:
 32553 ;;		Nothing
 32554 ;; This function is called by:
 32555 ;;		_UART1_Initialize
 32556 ;;		_UART1_tx_vect_isr
 32557 ;; This function uses a non-reentrant model
 32558 ;;
 32559                           
 32560                           	psect	text227
 32561  00853A                     __ptext227:
 32562                           	opt callstack 0
 32563  00853A                     _UART1_Transmit_ISR:
 32564                           	opt callstack 11
 32565                           
 32566                           ; BSR set to: 1
 32567                           ;mcc_generated_files/uart1.c: 268:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 32568                           
 32569                           ;incstack = 0
 32570  00853A  0E40               	movlw	64
 32571  00853C  61FD               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 32572  00853E  D014               	goto	i2l13439
 32573                           
 32574                           ; BSR set to: 1
 32575                           ;mcc_generated_files/uart1.c: 269:     {;mcc_generated_files/uart1.c: 273:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 32576  008540  0E00               	movlw	low _uart1TxBuffer
 32577  008542  0100               	movlb	0	; () banked
 32578  008544  25EE               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 32579  008546  6ED9               	movwf	fsr2l,c
 32580  008548  6ADA               	clrf	fsr2h,c
 32581  00854A  0E03               	movlw	high _uart1TxBuffer
 32582  00854C  22DA               	addwfc	fsr2h,f,c
 32583  00854E  50DF               	movf	indf2,w,c
 32584  008550  013D               	movlb	61	; () banked
 32585  008552  6FEA               	movwf	234,b	;volatile
 32586                           
 32587                           ; BSR set to: 61
 32588  008554  0100               	movlb	0	; () banked
 32589  008556  2BEE               	incf	_uart1TxTail& (0+255),f,b	;volatile
 32590                           
 32591                           ; BSR set to: 0
 32592                           ;mcc_generated_files/uart1.c: 274:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 32593  008558  0E3F               	movlw	63
 32594  00855A  65EE               	cpfsgt	_uart1TxTail& (0+255),b
 32595  00855C  D002               	goto	i2l13437
 32596                           
 32597                           ; BSR set to: 0
 32598                           ;mcc_generated_files/uart1.c: 275:         {;mcc_generated_files/uart1.c: 276:          
      +                             uart1TxTail = 0;
 32599  00855E  0E00               	movlw	0
 32600  008560  6FEE               	movwf	_uart1TxTail& (0+255),b	;volatile
 32601  008562                     i2l13437:
 32602                           
 32603                           ; BSR set to: 0
 32604                           ;mcc_generated_files/uart1.c: 278:         uart1TxBufferRemaining++;
 32605  008562  0101               	movlb	1	; () banked
 32606  008564  2BFD               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 32607                           
 32608                           ;mcc_generated_files/uart1.c: 279:     }
 32609  008566  0012               	return	
 32610  008568                     i2l13439:
 32611                           
 32612                           ; BSR set to: 1
 32613                           ;mcc_generated_files/uart1.c: 281:     {;mcc_generated_files/uart1.c: 284:         tx_do
      +                          ne = 1;
 32614  008568  0E01               	movlw	1
 32615  00856A  6F81               	movwf	_tx_done& (0+255),b	;volatile
 32616                           
 32617                           ; BSR set to: 1
 32618                           ;mcc_generated_files/uart1.c: 286:         PIE3bits.U1TXIE = 0;
 32619  00856C  0139               	movlb	57	; () banked
 32620  00856E  9993               	bcf	147,4,b	;volatile
 32621  008570  0012               	return		;funcret
 32622  008572                     __end_of_UART1_Transmit_ISR:
 32623                           	opt callstack 0
 32624                           
 32625 ;; *************** function _UART1_rx_vect_isr *****************
 32626 ;; Defined at:
 32627 ;;		line 255 in file "mcc_generated_files/uart1.c"
 32628 ;; Parameters:    Size  Location     Type
 32629 ;;		None
 32630 ;; Auto vars:     Size  Location     Type
 32631 ;;		None
 32632 ;; Return value:  Size  Location     Type
 32633 ;;                  1    wreg      void 
 32634 ;; Registers used:
 32635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32636 ;; Tracked objects:
 32637 ;;		On entry : 0/0
 32638 ;;		On exit  : 0/0
 32639 ;;		Unchanged: 0/0
 32640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32645 ;;Total ram usage:        0 bytes
 32646 ;; Hardware stack levels used:    1
 32647 ;; Hardware stack levels required when called:    3
 32648 ;; This function calls:
 32649 ;;		Absolute function
 32650 ;;		_UART1_Receive_ISR
 32651 ;; This function is called by:
 32652 ;;		Interrupt level 2
 32653 ;; This function uses a non-reentrant model
 32654 ;;
 32655                           
 32656                           	psect	text228
 32657  008AC0                     __ptext228:
 32658                           	opt callstack 0
 32659  008AC0                     _UART1_rx_vect_isr:
 32660                           	opt callstack 9
 32661                           
 32662                           ;mcc_generated_files/uart1.c: 257:     if(UART1_RxInterruptHandler)
 32663                           
 32664                           ;incstack = 0
 32665  008AC0  0101               	movlb	1	; () banked
 32666  008AC2  51FB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32667  008AC4  11FC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32668  008AC6  B4D8               	btfsc	status,2,c
 32669  008AC8  0011               	retfie		f
 32670                           
 32671                           ; BSR set to: 1
 32672                           ;mcc_generated_files/uart1.c: 258:     {;mcc_generated_files/uart1.c: 259:         UART1
      +                          _RxInterruptHandler();
 32673  008ACA  D801               	call	i2u1278_48
 32674  008ACC  0011               	retfie		f
 32675  008ACE                     i2u1278_48:
 32676  008ACE  0005               	push	
 32677  008AD0  6EFA               	movwf	pclath,c
 32678  008AD2  51FB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32679  008AD4  6EFD               	movwf	tosl,c
 32680  008AD6  51FC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32681  008AD8  6EFE               	movwf	tosh,c
 32682  008ADA  6AFF               	clrf	tosu,c
 32683  008ADC  50FA               	movf	pclath,w,c
 32684  008ADE  0012               	return		;indir
 32685  008AE0                     __end_of_UART1_rx_vect_isr:
 32686                           	opt callstack 0
 32687                           
 32688 ;; *************** function _UART1_Receive_ISR *****************
 32689 ;; Defined at:
 32690 ;;		line 292 in file "mcc_generated_files/uart1.c"
 32691 ;; Parameters:    Size  Location     Type
 32692 ;;		None
 32693 ;; Auto vars:     Size  Location     Type
 32694 ;;		None
 32695 ;; Return value:  Size  Location     Type
 32696 ;;                  1    wreg      void 
 32697 ;; Registers used:
 32698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32699 ;; Tracked objects:
 32700 ;;		On entry : 3F/1
 32701 ;;		On exit  : 0/0
 32702 ;;		Unchanged: 0/0
 32703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32708 ;;Total ram usage:        0 bytes
 32709 ;; Hardware stack levels used:    1
 32710 ;; Hardware stack levels required when called:    2
 32711 ;; This function calls:
 32712 ;;		Absolute function
 32713 ;;		_UART1_DefaultErrorHandler
 32714 ;;		_UART1_DefaultFramingErrorHandler
 32715 ;;		_UART1_DefaultOverrunErrorHandler
 32716 ;;		_UART1_RxDataHandler
 32717 ;; This function is called by:
 32718 ;;		_UART1_Initialize
 32719 ;;		_UART1_rx_vect_isr
 32720 ;; This function uses a non-reentrant model
 32721 ;;
 32722                           
 32723                           	psect	text229
 32724  006C92                     __ptext229:
 32725                           	opt callstack 0
 32726  006C92                     _UART1_Receive_ISR:
 32727                           	opt callstack 9
 32728                           
 32729                           ; BSR set to: 1
 32730                           ;mcc_generated_files/uart1.c: 295:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 32731                           
 32732                           ;incstack = 0
 32733  006C92  0E28               	movlw	low _uart1RxStatusBuffer
 32734  006C94  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32735  006C96  6ED9               	movwf	fsr2l,c
 32736  006C98  6ADA               	clrf	fsr2h,c
 32737  006C9A  0E01               	movlw	high _uart1RxStatusBuffer
 32738  006C9C  22DA               	addwfc	fsr2h,f,c
 32739  006C9E  0E00               	movlw	0
 32740  006CA0  6EDF               	movwf	indf2,c
 32741                           
 32742                           ; BSR set to: 1
 32743                           ;mcc_generated_files/uart1.c: 297:     if(U1ERRIRbits.FERIF){
 32744  006CA2  013D               	movlb	61	; () banked
 32745  006CA4  A7F9               	btfss	249,3,b	;volatile
 32746  006CA6  D013               	goto	i2u1270_49
 32747                           
 32748                           ; BSR set to: 61
 32749                           ;mcc_generated_files/uart1.c: 298:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 32750  006CA8  0E28               	movlw	low _uart1RxStatusBuffer
 32751  006CAA  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32752  006CAC  6ED9               	movwf	fsr2l,c
 32753  006CAE  6ADA               	clrf	fsr2h,c
 32754  006CB0  0E01               	movlw	high _uart1RxStatusBuffer
 32755  006CB2  22DA               	addwfc	fsr2h,f,c
 32756  006CB4  0101               	movlb	1	; () banked
 32757  006CB6  82DF               	bsf	indf2,1,c
 32758                           
 32759                           ; BSR set to: 1
 32760                           ;mcc_generated_files/uart1.c: 299:         UART1_FramingErrorHandler();
 32761  006CB8  D801               	call	i2u1270_48
 32762  006CBA  D009               	goto	i2u1270_49
 32763  006CBC                     i2u1270_48:
 32764  006CBC  0005               	push	
 32765  006CBE  6EFA               	movwf	pclath,c
 32766  006CC0  51F3               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 32767  006CC2  6EFD               	movwf	tosl,c
 32768  006CC4  51F4               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 32769  006CC6  6EFE               	movwf	tosh,c
 32770  006CC8  6AFF               	clrf	tosu,c
 32771  006CCA  50FA               	movf	pclath,w,c
 32772  006CCC  0012               	return		;indir
 32773  006CCE                     i2u1270_49:
 32774                           
 32775                           ;mcc_generated_files/uart1.c: 302:     if(U1ERRIRbits.RXFOIF){
 32776  006CCE  013D               	movlb	61	; () banked
 32777  006CD0  A3F9               	btfss	249,1,b	;volatile
 32778  006CD2  D013               	goto	i2u1272_49
 32779                           
 32780                           ; BSR set to: 61
 32781                           ;mcc_generated_files/uart1.c: 303:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 32782  006CD4  0E28               	movlw	low _uart1RxStatusBuffer
 32783  006CD6  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32784  006CD8  6ED9               	movwf	fsr2l,c
 32785  006CDA  6ADA               	clrf	fsr2h,c
 32786  006CDC  0E01               	movlw	high _uart1RxStatusBuffer
 32787  006CDE  22DA               	addwfc	fsr2h,f,c
 32788  006CE0  0101               	movlb	1	; () banked
 32789  006CE2  84DF               	bsf	indf2,2,c
 32790                           
 32791                           ; BSR set to: 1
 32792                           ;mcc_generated_files/uart1.c: 304:         UART1_OverrunErrorHandler();
 32793  006CE4  D801               	call	i2u1272_48
 32794  006CE6  D009               	goto	i2u1272_49
 32795  006CE8                     i2u1272_48:
 32796  006CE8  0005               	push	
 32797  006CEA  6EFA               	movwf	pclath,c
 32798  006CEC  51F1               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 32799  006CEE  6EFD               	movwf	tosl,c
 32800  006CF0  51F2               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 32801  006CF2  6EFE               	movwf	tosh,c
 32802  006CF4  6AFF               	clrf	tosu,c
 32803  006CF6  50FA               	movf	pclath,w,c
 32804  006CF8  0012               	return		;indir
 32805  006CFA                     i2u1272_49:
 32806                           
 32807                           ;mcc_generated_files/uart1.c: 307:     if(uart1RxStatusBuffer[uart1RxHead].status){
 32808  006CFA  0E28               	movlw	low _uart1RxStatusBuffer
 32809  006CFC  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32810  006CFE  6ED9               	movwf	fsr2l,c
 32811  006D00  6ADA               	clrf	fsr2h,c
 32812  006D02  0E01               	movlw	high _uart1RxStatusBuffer
 32813  006D04  22DA               	addwfc	fsr2h,f,c
 32814  006D06  50DF               	movf	indf2,w,c
 32815  006D08  B4D8               	btfsc	status,2,c
 32816  006D0A  D00C               	goto	i2l13461
 32817                           
 32818                           ;mcc_generated_files/uart1.c: 308:         UART1_ErrorHandler();
 32819  006D0C  D801               	call	i2u1274_48
 32820  006D0E  0012               	return	
 32821  006D10                     i2u1274_48:
 32822  006D10  0005               	push	
 32823  006D12  6EFA               	movwf	pclath,c
 32824  006D14  0101               	movlb	1	; () banked
 32825  006D16  51EF               	movf	_UART1_ErrorHandler& (0+255),w,b
 32826  006D18  6EFD               	movwf	tosl,c
 32827  006D1A  51F0               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 32828  006D1C  6EFE               	movwf	tosh,c
 32829  006D1E  6AFF               	clrf	tosu,c
 32830  006D20  50FA               	movf	pclath,w,c
 32831  006D22  0012               	return		;indir
 32832  006D24                     i2l13461:
 32833                           
 32834                           ;mcc_generated_files/uart1.c: 310:         UART1_RxDataHandler();
 32835  006D24  EC85  F044         	call	_UART1_RxDataHandler	;wreg free
 32836  006D28  0012               	return		;funcret
 32837  006D2A                     __end_of_UART1_Receive_ISR:
 32838                           	opt callstack 0
 32839                           
 32840 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 32841 ;; Defined at:
 32842 ;;		line 328 in file "mcc_generated_files/uart1.c"
 32843 ;; Parameters:    Size  Location     Type
 32844 ;;		None
 32845 ;; Auto vars:     Size  Location     Type
 32846 ;;		None
 32847 ;; Return value:  Size  Location     Type
 32848 ;;                  1    wreg      void 
 32849 ;; Registers used:
 32850 ;;		None
 32851 ;; Tracked objects:
 32852 ;;		On entry : 3F/1
 32853 ;;		On exit  : 3F/1
 32854 ;;		Unchanged: 3F/0
 32855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32860 ;;Total ram usage:        0 bytes
 32861 ;; Hardware stack levels used:    1
 32862 ;; This function calls:
 32863 ;;		Nothing
 32864 ;; This function is called by:
 32865 ;;		_UART1_Initialize
 32866 ;;		_UART1_Receive_ISR
 32867 ;; This function uses a non-reentrant model
 32868 ;;
 32869                           
 32870                           	psect	text230
 32871  008E66                     __ptext230:
 32872                           	opt callstack 0
 32873  008E66                     _UART1_DefaultOverrunErrorHandler:
 32874                           	opt callstack 10
 32875                           
 32876                           ; BSR set to: 1
 32877                           
 32878                           ;incstack = 0
 32879  008E66  0012               	return		;funcret
 32880  008E68                     __end_of_UART1_DefaultOverrunErrorHandler:
 32881                           	opt callstack 0
 32882                           
 32883 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 32884 ;; Defined at:
 32885 ;;		line 326 in file "mcc_generated_files/uart1.c"
 32886 ;; Parameters:    Size  Location     Type
 32887 ;;		None
 32888 ;; Auto vars:     Size  Location     Type
 32889 ;;		None
 32890 ;; Return value:  Size  Location     Type
 32891 ;;                  1    wreg      void 
 32892 ;; Registers used:
 32893 ;;		None
 32894 ;; Tracked objects:
 32895 ;;		On entry : 3F/1
 32896 ;;		On exit  : 3F/1
 32897 ;;		Unchanged: 3F/0
 32898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32903 ;;Total ram usage:        0 bytes
 32904 ;; Hardware stack levels used:    1
 32905 ;; This function calls:
 32906 ;;		Nothing
 32907 ;; This function is called by:
 32908 ;;		_UART1_Initialize
 32909 ;;		_UART1_Receive_ISR
 32910 ;; This function uses a non-reentrant model
 32911 ;;
 32912                           
 32913                           	psect	text231
 32914  008E68                     __ptext231:
 32915                           	opt callstack 0
 32916  008E68                     _UART1_DefaultFramingErrorHandler:
 32917                           	opt callstack 10
 32918                           
 32919                           ; BSR set to: 1
 32920                           
 32921                           ; BSR set to: 1
 32922                           ;incstack = 0
 32923  008E68  0012               	return		;funcret
 32924  008E6A                     __end_of_UART1_DefaultFramingErrorHandler:
 32925                           	opt callstack 0
 32926                           
 32927 ;; *************** function _UART1_DefaultErrorHandler *****************
 32928 ;; Defined at:
 32929 ;;		line 330 in file "mcc_generated_files/uart1.c"
 32930 ;; Parameters:    Size  Location     Type
 32931 ;;		None
 32932 ;; Auto vars:     Size  Location     Type
 32933 ;;		None
 32934 ;; Return value:  Size  Location     Type
 32935 ;;                  1    wreg      void 
 32936 ;; Registers used:
 32937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32938 ;; Tracked objects:
 32939 ;;		On entry : 3F/1
 32940 ;;		On exit  : 3F/0
 32941 ;;		Unchanged: 0/0
 32942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32947 ;;Total ram usage:        0 bytes
 32948 ;; Hardware stack levels used:    1
 32949 ;; Hardware stack levels required when called:    1
 32950 ;; This function calls:
 32951 ;;		_UART1_RxDataHandler
 32952 ;; This function is called by:
 32953 ;;		_UART1_Initialize
 32954 ;;		_UART1_Receive_ISR
 32955 ;; This function uses a non-reentrant model
 32956 ;;
 32957                           
 32958                           	psect	text232
 32959  008E44                     __ptext232:
 32960                           	opt callstack 0
 32961  008E44                     _UART1_DefaultErrorHandler:
 32962                           	opt callstack 9
 32963                           
 32964                           ; BSR set to: 1
 32965                           ;mcc_generated_files/uart1.c: 331:     UART1_RxDataHandler();
 32966                           
 32967                           ; BSR set to: 1
 32968                           ;incstack = 0
 32969  008E44  EC85  F044         	call	_UART1_RxDataHandler	;wreg free
 32970                           
 32971                           ; BSR set to: 0
 32972  008E48  0012               	return		;funcret
 32973  008E4A                     __end_of_UART1_DefaultErrorHandler:
 32974                           	opt callstack 0
 32975                           
 32976 ;; *************** function _UART1_RxDataHandler *****************
 32977 ;; Defined at:
 32978 ;;		line 316 in file "mcc_generated_files/uart1.c"
 32979 ;; Parameters:    Size  Location     Type
 32980 ;;		None
 32981 ;; Auto vars:     Size  Location     Type
 32982 ;;		None
 32983 ;; Return value:  Size  Location     Type
 32984 ;;                  1    wreg      void 
 32985 ;; Registers used:
 32986 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32987 ;; Tracked objects:
 32988 ;;		On entry : 0/3D
 32989 ;;		On exit  : 3F/0
 32990 ;;		Unchanged: 0/0
 32991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32996 ;;Total ram usage:        0 bytes
 32997 ;; Hardware stack levels used:    1
 32998 ;; This function calls:
 32999 ;;		Nothing
 33000 ;; This function is called by:
 33001 ;;		_UART1_Receive_ISR
 33002 ;;		_UART1_DefaultErrorHandler
 33003 ;; This function uses a non-reentrant model
 33004 ;;
 33005                           
 33006                           	psect	text233
 33007  00890A                     __ptext233:
 33008                           	opt callstack 0
 33009  00890A                     _UART1_RxDataHandler:
 33010                           	opt callstack 10
 33011                           
 33012                           ;mcc_generated_files/uart1.c: 318:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 33013                           
 33014                           ; BSR set to: 0
 33015                           ;incstack = 0
 33016  00890A  0E38               	movlw	low _uart1RxBuffer
 33017  00890C  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 33018  00890E  6ED9               	movwf	fsr2l,c
 33019  008910  6ADA               	clrf	fsr2h,c
 33020  008912  0E01               	movlw	high _uart1RxBuffer
 33021  008914  22DA               	addwfc	fsr2h,f,c
 33022  008916  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33023  00891C  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 33024                           
 33025                           ;mcc_generated_files/uart1.c: 319:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33026  00891E  0E0F               	movlw	15
 33027  008920  645E               	cpfsgt	_uart1RxHead^0,c
 33028  008922  D002               	goto	i2l12371
 33029                           
 33030                           ;mcc_generated_files/uart1.c: 320:     {;mcc_generated_files/uart1.c: 321:         uart1
      +                          RxHead = 0;
 33031  008924  0E00               	movlw	0
 33032  008926  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 33033  008928                     i2l12371:
 33034                           
 33035                           ;mcc_generated_files/uart1.c: 323:     uart1RxCount++;
 33036  008928  0100               	movlb	0	; () banked
 33037  00892A  2BEC               	incf	_uart1RxCount& (0+255),f,b	;volatile
 33038                           
 33039                           ; BSR set to: 0
 33040  00892C  0012               	return		;funcret
 33041  00892E                     __end_of_UART1_RxDataHandler:
 33042                           	opt callstack 0
 33043                           
 33044                           ;
 33045                           ; Interrupt Vector Table @ 0x8
 33046                           ;
 33047                           
 33048                           	psect	ivt0x8
 33049  000008                     __pivt0x8:
 33050                           	opt callstack 0
 33051  000008                     ivt0x8_base:
 33052                           	opt callstack 0
 33053                           
 33054                           ; Vector 0 : SWINT
 33055  000008  2399               	dw	_Default_ISR shr (0+2)
 33056                           
 33057                           ; Vector 1 : HLVD
 33058  00000A  2399               	dw	_Default_ISR shr (0+2)
 33059                           
 33060                           ; Vector 2 : OSF
 33061  00000C  2399               	dw	_Default_ISR shr (0+2)
 33062                           
 33063                           ; Vector 3 : CSW
 33064  00000E  2399               	dw	_Default_ISR shr (0+2)
 33065                           
 33066                           ; Vector 4 : NVM
 33067  000010  2399               	dw	_Default_ISR shr (0+2)
 33068                           
 33069                           ; Vector 5 : SCAN
 33070  000012  2399               	dw	_Default_ISR shr (0+2)
 33071                           
 33072                           ; Vector 6 : CRC
 33073  000014  2399               	dw	_Default_ISR shr (0+2)
 33074                           
 33075                           ; Vector 7 : IOC
 33076  000016  2399               	dw	_Default_ISR shr (0+2)
 33077                           
 33078                           ; Vector 8 : INT0
 33079  000018  2399               	dw	_Default_ISR shr (0+2)
 33080                           
 33081                           ; Vector 9 : ZCD
 33082  00001A  2399               	dw	_Default_ISR shr (0+2)
 33083                           
 33084                           ; Vector 10 : AD
 33085  00001C  2399               	dw	_Default_ISR shr (0+2)
 33086                           
 33087                           ; Vector 11 : ADT
 33088  00001E  2399               	dw	_Default_ISR shr (0+2)
 33089                           
 33090                           ; Vector 12 : CMP1
 33091  000020  2399               	dw	_Default_ISR shr (0+2)
 33092                           
 33093                           ; Vector 13 : SMT1
 33094  000022  2399               	dw	_Default_ISR shr (0+2)
 33095                           
 33096                           ; Vector 14 : SMT1PRA
 33097  000024  2399               	dw	_Default_ISR shr (0+2)
 33098                           
 33099                           ; Vector 15 : SMT1PRW
 33100  000026  2399               	dw	_Default_ISR shr (0+2)
 33101                           
 33102                           ; Vector 16 : DMA1SCNT
 33103  000028  2399               	dw	_Default_ISR shr (0+2)
 33104                           
 33105                           ; Vector 17 : DMA1DCNT
 33106  00002A  2399               	dw	_Default_ISR shr (0+2)
 33107                           
 33108                           ; Vector 18 : DMA1OR
 33109  00002C  2399               	dw	_Default_ISR shr (0+2)
 33110                           
 33111                           ; Vector 19 : DMA1A
 33112  00002E  2399               	dw	_Default_ISR shr (0+2)
 33113                           
 33114                           ; Vector 20 : SPI1RX
 33115  000030  2399               	dw	_Default_ISR shr (0+2)
 33116                           
 33117                           ; Vector 21 : SPI1TX
 33118  000032  2399               	dw	_Default_ISR shr (0+2)
 33119                           
 33120                           ; Vector 22 : SPI1
 33121  000034  2399               	dw	_Default_ISR shr (0+2)
 33122                           
 33123                           ; Vector 23 : I2C1RX
 33124  000036  2399               	dw	_Default_ISR shr (0+2)
 33125                           
 33126                           ; Vector 24 : I2C1TX
 33127  000038  2399               	dw	_Default_ISR shr (0+2)
 33128                           
 33129                           ; Vector 25 : I2C1
 33130  00003A  2399               	dw	_Default_ISR shr (0+2)
 33131                           
 33132                           ; Vector 26 : I2C1E
 33133  00003C  2399               	dw	_Default_ISR shr (0+2)
 33134                           
 33135                           ; Vector 27 : U1RX
 33136  00003E  22B0               	dw	_UART1_rx_vect_isr shr (0+2)
 33137                           
 33138                           ; Vector 28 : U1TX
 33139  000040  22A8               	dw	_UART1_tx_vect_isr shr (0+2)
 33140                           
 33141                           ; Vector 29 : U1E
 33142  000042  2399               	dw	_Default_ISR shr (0+2)
 33143                           
 33144                           ; Vector 30 : U1
 33145  000044  2399               	dw	_Default_ISR shr (0+2)
 33146                           
 33147                           ; Vector 31 : TMR0
 33148  000046  227F               	dw	_TMR0_ISR shr (0+2)
 33149                           
 33150                           ; Vector 32 : TMR1
 33151  000048  2399               	dw	_Default_ISR shr (0+2)
 33152                           
 33153                           ; Vector 33 : TMR1G
 33154  00004A  2399               	dw	_Default_ISR shr (0+2)
 33155                           
 33156                           ; Vector 34 : TMR2
 33157  00004C  2399               	dw	_Default_ISR shr (0+2)
 33158                           
 33159                           ; Vector 35 : CCP1
 33160  00004E  2399               	dw	_Default_ISR shr (0+2)
 33161                           
 33162                           ; Vector 36 : Undefined
 33163  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33164                           
 33165                           ; Vector 37 : NCO1
 33166  000052  2399               	dw	_Default_ISR shr (0+2)
 33167                           
 33168                           ; Vector 38 : CWG1
 33169  000054  2399               	dw	_Default_ISR shr (0+2)
 33170                           
 33171                           ; Vector 39 : CLC1
 33172  000056  2399               	dw	_Default_ISR shr (0+2)
 33173                           
 33174                           ; Vector 40 : INT1
 33175  000058  2399               	dw	_Default_ISR shr (0+2)
 33176                           
 33177                           ; Vector 41 : CMP2
 33178  00005A  2399               	dw	_Default_ISR shr (0+2)
 33179                           
 33180                           ; Vector 42 : DMA2SCNT
 33181  00005C  2399               	dw	_Default_ISR shr (0+2)
 33182                           
 33183                           ; Vector 43 : DMA2DCNT
 33184  00005E  2399               	dw	_Default_ISR shr (0+2)
 33185                           
 33186                           ; Vector 44 : DMA2OR
 33187  000060  2399               	dw	_Default_ISR shr (0+2)
 33188                           
 33189                           ; Vector 45 : DMA2A
 33190  000062  2399               	dw	_Default_ISR shr (0+2)
 33191                           
 33192                           ; Vector 46 : I2C2RX
 33193  000064  2399               	dw	_Default_ISR shr (0+2)
 33194                           
 33195                           ; Vector 47 : I2C2TX
 33196  000066  2399               	dw	_Default_ISR shr (0+2)
 33197                           
 33198                           ; Vector 48 : I2C2
 33199  000068  2399               	dw	_Default_ISR shr (0+2)
 33200                           
 33201                           ; Vector 49 : I2C2E
 33202  00006A  2399               	dw	_Default_ISR shr (0+2)
 33203                           
 33204                           ; Vector 50 : U2RX
 33205  00006C  2399               	dw	_Default_ISR shr (0+2)
 33206                           
 33207                           ; Vector 51 : U2TX
 33208  00006E  2399               	dw	_Default_ISR shr (0+2)
 33209                           
 33210                           ; Vector 52 : U2E
 33211  000070  2399               	dw	_Default_ISR shr (0+2)
 33212                           
 33213                           ; Vector 53 : U2
 33214  000072  2399               	dw	_Default_ISR shr (0+2)
 33215                           
 33216                           ; Vector 54 : TMR3
 33217  000074  2399               	dw	_Default_ISR shr (0+2)
 33218                           
 33219                           ; Vector 55 : TMR3G
 33220  000076  2399               	dw	_Default_ISR shr (0+2)
 33221                           
 33222                           ; Vector 56 : TMR4
 33223  000078  2399               	dw	_Default_ISR shr (0+2)
 33224                           
 33225                           ; Vector 57 : CCP2
 33226  00007A  2399               	dw	_Default_ISR shr (0+2)
 33227                           
 33228                           ; Vector 58 : Undefined
 33229  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 33230                           
 33231                           ; Vector 59 : CWG2
 33232  00007E  2399               	dw	_Default_ISR shr (0+2)
 33233                           
 33234                           ; Vector 60 : CLC2
 33235  000080  2399               	dw	_Default_ISR shr (0+2)
 33236                           
 33237                           ; Vector 61 : INT2
 33238  000082  2399               	dw	_Default_ISR shr (0+2)
 33239                           
 33240                           ; Vector 62 : Undefined
 33241  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 33242                           
 33243                           ; Vector 63 : Undefined
 33244  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 33245                           
 33246                           ; Vector 64 : Undefined
 33247  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 33248                           
 33249                           ; Vector 65 : Undefined
 33250  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 33251                           
 33252                           ; Vector 66 : Undefined
 33253  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 33254                           
 33255                           ; Vector 67 : Undefined
 33256  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 33257                           
 33258                           ; Vector 68 : Undefined
 33259  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 33260                           
 33261                           ; Vector 69 : Undefined
 33262  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 33263                           
 33264                           ; Vector 70 : TMR5
 33265  000094  2399               	dw	_Default_ISR shr (0+2)
 33266                           
 33267                           ; Vector 71 : TMR5G
 33268  000096  2399               	dw	_Default_ISR shr (0+2)
 33269                           
 33270                           ; Vector 72 : TMR6
 33271  000098  2399               	dw	_Default_ISR shr (0+2)
 33272                           
 33273                           ; Vector 73 : CCP3
 33274  00009A  2399               	dw	_Default_ISR shr (0+2)
 33275                           
 33276                           ; Vector 74 : CWG3
 33277  00009C  2399               	dw	_Default_ISR shr (0+2)
 33278                           
 33279                           ; Vector 75 : CLC3
 33280  00009E  2399               	dw	_Default_ISR shr (0+2)
 33281                           
 33282                           ; Vector 76 : Undefined
 33283  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 33284                           
 33285                           ; Vector 77 : Undefined
 33286  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 33287                           
 33288                           ; Vector 78 : Undefined
 33289  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 33290                           
 33291                           ; Vector 79 : Undefined
 33292  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 33293                           
 33294                           ; Vector 80 : CCP4
 33295  0000A8  2399               	dw	_Default_ISR shr (0+2)
 33296                           
 33297                           ; Vector 81 : CLC4
 33298  0000AA  2399               	dw	_Default_ISR shr (0+2)
 33299  0000AC                     ivt0x8_undefint:
 33300                           	opt callstack 0
 33301  0000AC  00FF               	reset	
 33302                           
 33303                           	psect	text234
 33304  000000                     __ptext234:
 33305                           	opt callstack 0
 33306                           
 33307                           	psect	rparam
 33308  0000                     tosu	equ	0x3FFF
 33309                           tosh	equ	0x3FFE
 33310                           tosl	equ	0x3FFD
 33311                           stkptr	equ	0x3FFC
 33312                           pclatu	equ	0x3FFB
 33313                           pclath	equ	0x3FFA
 33314                           pcl	equ	0x3FF9
 33315                           tblptru	equ	0x3FF8
 33316                           tblptrh	equ	0x3FF7
 33317                           tblptrl	equ	0x3FF6
 33318                           tablat	equ	0x3FF5
 33319                           prodh	equ	0x3FF4
 33320                           prodl	equ	0x3FF3
 33321                           indf0	equ	0x3FEF
 33322                           postinc0	equ	0x3FEE
 33323                           postdec0	equ	0x3FED
 33324                           preinc0	equ	0x3FEC
 33325                           plusw0	equ	0x3FEB
 33326                           fsr0h	equ	0x3FEA
 33327                           fsr0l	equ	0x3FE9
 33328                           wreg	equ	0x3FE8
 33329                           indf1	equ	0x3FE7
 33330                           postinc1	equ	0x3FE6
 33331                           postdec1	equ	0x3FE5
 33332                           preinc1	equ	0x3FE4
 33333                           plusw1	equ	0x3FE3
 33334                           fsr1h	equ	0x3FE2
 33335                           fsr1l	equ	0x3FE1
 33336                           bsr	equ	0x3FE0
 33337                           indf2	equ	0x3FDF
 33338                           postinc2	equ	0x3FDE
 33339                           postdec2	equ	0x3FDD
 33340                           preinc2	equ	0x3FDC
 33341                           plusw2	equ	0x3FDB
 33342                           fsr2h	equ	0x3FDA
 33343                           fsr2l	equ	0x3FD9
 33344                           status	equ	0x3FD8


Data Sizes:
    Strings     574
    Constant    270
    Data        30
    BSS         2193
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    130     159
    BANK1           256      2     256
    BANK2           256      2     220
    BANK3           256      0     242
    BANK4           256      0      96
    BANK5           256      0     189
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    handler$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    S4589$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    S84$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S2766$4$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    cmdSetTX@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdGetRxCnt@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetRFCH@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetNaddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    set_hop_table_ttl@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetTTL@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAES@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    print_hop_table@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSendSink@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), 
		 -> cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), cmdSend@p2(BANK0[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtoul@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), 
		 -> cmdSend@p2(BANK0[2]), 

    strtoul@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), STR_129(CODE[10]), 
		 -> STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), STR_121(CODE[7]), 
		 -> STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), STR_113(CODE[6]), 
		 -> STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), STR_105(CODE[7]), 
		 -> STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), STR_89(CODE[15]), 
		 -> STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), STR_81(CODE[7]), 
		 -> STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), STR_73(CODE[11]), 
		 -> STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), STR_65(CODE[9]), 
		 -> STR_63(CODE[7]), STR_57(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_51(CODE[6]), STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), 
		 -> STR_38(CODE[2]), STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), 
		 -> STR_16(CODE[2]), STR_12(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), STR_129(CODE[10]), 
		 -> STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), STR_121(CODE[7]), 
		 -> STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), STR_113(CODE[6]), 
		 -> STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), STR_105(CODE[7]), 
		 -> STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), STR_89(CODE[15]), 
		 -> STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), STR_81(CODE[7]), 
		 -> STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), STR_73(CODE[11]), 
		 -> STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), STR_65(CODE[9]), 
		 -> STR_63(CODE[7]), STR_57(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_51(CODE[6]), STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), 
		 -> STR_38(CODE[2]), STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), 
		 -> STR_16(CODE[2]), STR_12(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[34]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S7776_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[34]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[34]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[34]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), appDataInd@data(BANK0[65]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), appDataInd@data(BANK0[65]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), appDataInd@data(BANK0[65]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    nwkFrame@nwkFramePayloadSize@frame_7076...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_7076.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6652...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6652.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5568...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5568.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5346...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5346.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S4621PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(1) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S4589SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S4589SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4725...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4725.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4725	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4490...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4490.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3938...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3938.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3514...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3514.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkFrame@nwkFramePayloadSize@frame_3068...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3068.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appDataInd(), 

    S2766NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkFrame@nwkFramePayloadSize@frame_2864...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2864.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK1[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    get_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK1[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    nwkFrame@nwkFramePayloadSize@frame_1644...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_1644.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    nwkFrame@nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    crc16_app@dptr	PTR void  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@val	PTR void  size(1) Largest target is 3
		 -> queueLedEvent@temp(COMRAM[3]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    S914$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    executeATCommand@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    print_hop_table@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    cmdSetSF@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetSF@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetBaud@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetBaud@ptr	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetParity@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetCADRSSI@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetTX@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetTX@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetRFCH@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetRFCH@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAES@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetAES@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetNaddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdBcast@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdBcast@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSend@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    free_tx_buffer@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer.payload(BIGRAM[109]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    get_free_tx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> cmdBcast@buf_id(BANK0[1]), cmdSend@buf_id(BANK0[1]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    S173NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S115NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    S115NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    S84$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S83NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _processATCommand->_executeATCommand
    _queue_serial_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _CircularBufferPushBack->_memcpy
    _executeATCommand->_print_hop_table
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _setSyncWord->_SX1276Write
    _cmdSetCADRSSI->_printf
    _strtol->___strtoxl
    _cmdSetBaud->_strtoul
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _strtoul->___strtoxl
    ___strtoxl->_toupper
    _cmdRstCAD->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _strstr->_strncmp
    _cmdAddr->_printf
    _bootLoadApplication->_PHY_SetChannel
    _loadMACAddr->_DIA_ReadByte
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_DIO0_Receive_ISR
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_get_lqi
    _get_lqi->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _PHY_DataInd->_memcpy
    _PHY_DataInd->_nwkFrameAlloc
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxSendAck->_nwkTxFrame
    _nwkRxIndicateFrame->_nwkRxServiceDataInd
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appDataInd->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _memcpy->___wmul
    _nwkDataReqConfirm->_appDataConf
    _appDataConf->_free_tx_buffer
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _processATCommand->_executeATCommand
    _executeATCommand->_cmdSetAES
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _cmdSetCADRSSI->_printf
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _cmdRstCAD->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _cmdAddr->_printf
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxIndicateFrame->_appDataInd
    _appDataInd->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _NWK_TaskHandler->_nwkRxTaskHandler

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _NWK_TaskHandler->_nwkRxTaskHandler

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 2391470
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                _bootLoadApplication
                   _processATCommand
 ---------------------------------------------------------------------------------
 (1) _processATCommand                                     4     4      0 1923370
                                             78 BANK0      4     4      0
                         _UART1_Read
                  _UART1_is_rx_ready
                   _executeATCommand
                     _get_timer0base
                             _memset
             _queue_serial_led_event
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _queue_serial_led_event                               1     1      0    9491
                                             33 COMRAM     1     1      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        6     4      2    9423
                                             27 COMRAM     6     4      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     363
                                              9 COMRAM     4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     197
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                               9     6      3    6724
                                             18 COMRAM     9     6      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _executeATCommand                                     5     3      2 1908824
                                             92 COMRAM     1     1      0
                                             74 BANK0      4     2      2
                            _cmdAddr
                           _cmdBcast
                        _cmdBootLoad
                          _cmdGetCAD
                      _cmdGetCADRSSI
                         _cmdGetMode
                         _cmdGetRFCH
                        _cmdGetRxCnt
                           _cmdGetSF
                          _cmdGetTTL
                           _cmdGetTX
                               _cmdI
                             _cmdMac
                           _cmdNaddr
                            _cmdRecv
                           _cmdReset
                          _cmdRstCAD
                            _cmdSend
                        _cmdSendSink
                          _cmdSetAES
                         _cmdSetAddr
                         _cmdSetBaud
                      _cmdSetCADRSSI
                        _cmdSetNaddr
                       _cmdSetParity
                         _cmdSetRFCH
                           _cmdSetSF
                         _cmdSetSink
                          _cmdSetTTL
                           _cmdSetTX
                    _print_hop_table
                             _printf
                  _set_hop_table_ttl
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _set_hop_table_ttl                                    2     0      2   42647
                                             87 COMRAM     2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _print_hop_table                                     15    13      2   42966
                                             87 COMRAM     5     3      2
                                             32 BANK0     10    10      0
                     _NWK_RouteTable
                             _printf
 ---------------------------------------------------------------------------------
 (4) _NWK_RouteTable                                       2     0      2       0
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetTX                                            10     8      2  175221
                                             87 COMRAM     2     0      2
                                             32 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _memset
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetTTL                                            2     0      2     208
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetSink                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetSF                                            10     8      2  170718
                                             87 COMRAM     2     0      2
                                             32 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _cmdSetRFCH                                          10     8      2  172185
                                             87 COMRAM     2     0      2
                                             32 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetParity                                         2     0      2   55803
                                             87 COMRAM     2     0      2
                             _printf
                         _set_parity
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _cmdSetNaddr                                          7     5      2  172982
                                             87 COMRAM     2     0      2
                                             32 BANK0      5     5      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _printf
                        _setSyncWord
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _setSyncWord                                          1     1      0    5766
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _cmdSetCADRSSI                                       10     8      2  170687
                                             87 COMRAM     2     0      2
                                             32 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               4     0      4    5690
                                             51 COMRAM     4     0      4
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) _cmdSetBaud                                           5     3      2   10276
                                             57 COMRAM     5     3      2
                             _strtok
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2848
                                             14 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _cmdSetAddr                                           8     6      2   63031
                                             87 COMRAM     2     0      2
                                             32 BANK0      6     6      0
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetAES                                           46    44      2   76620
                                             87 COMRAM     4     2      2
                                             32 BANK0     42    42      0
          _DATAEE_WriteByte_Platform
                             _memcpy
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSendSink                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSend                                             16    14      2   73485
                                             87 COMRAM     4     2      2
                                             32 BANK0     12    12      0
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtoul                                              6     0      6    7250
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    4973
                                             15 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     512
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _cmdRstCAD                                            0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdReset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdRecv                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdNaddr                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdMac                                               2     2      0   42642
                                             87 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdI                                                 0     0      0   42543
                           _sendInfo
 ---------------------------------------------------------------------------------
 (4) _sendInfo                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTX                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTTL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdGetSF                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRxCnt                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdGetRFCH                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetMode                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCADRSSI                                        0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCAD                                            0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBootLoad                                          2     2      0   49451
                                             87 COMRAM     2     2      0
          _DATAEE_WriteByte_Platform
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBcast                                            10     8      2   66001
                                             87 COMRAM     4     2      2
                                             32 BANK0      3     3      0
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4   12939
                                             12 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     637
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     748
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _get_free_tx_buffer                                   2     1      1     363
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _NWK_DataReq                                          2     0      2     425
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdAddr                                              0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                  6     6      0   42175
                                             47 COMRAM     6     6      0
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                     _PHY_SetChannel
                     _PHY_SetRxState
                          _crc16_app
                        _loadMACAddr
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_parity                                           3     3      0     124
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                          1     1      0     247
                                              5 COMRAM     1     1      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     157
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6     836
                                             18 COMRAM    12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     387
                                              8 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     183
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   19557
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    8775
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte_Platform                            3     0      3    6908
                                              5 COMRAM     3     0      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             5     3      2    4313
                                              5 COMRAM     5     3      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1794
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     312
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  326822
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    8904
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2787
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2954
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    2026
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  183413
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  183413
                                             74 COMRAM     2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   20588
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0   11470
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (2) _set_timer0base                                       4     0      4    1270
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _get_timer0base                                       4     2      2     773
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   42663
                                             67 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _get_lqi
                           _get_rssi
                            _receive
 ---------------------------------------------------------------------------------
 (5) _get_rssi                                             3     3      0      68
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _get_lqi                                              1     1      0    6159
                                             66 COMRAM     1     1      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     318
                                             56 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1797
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2466
                                             40 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          6     5      1    8524
                                             18 COMRAM     6     5      1
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0  134505
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   25715
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    2031
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     840
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   19228
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    5735
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   94577
                                              0 BANK1      2     2      0
                                              0 BANK2      2     2      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   18523
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2    9171
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    5012
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1828
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     908
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     234
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    2513
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     424
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2   59575
                                             92 COMRAM     1     1      0
                                            126 BANK0      4     2      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    8122
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2   51055
                                            100 BANK0     26    24      2
                         _appDataInd *
                _nwkRxServiceDataInd *
        nwkFrame@nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (6) nwkFrame@nwkFramePayloadSize                          4     2      2     197
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  5     4      1    3575
                                             87 COMRAM     5     4      1
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     7     6      1    1076
                                              7 COMRAM     7     6      1
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     684
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                4     3      1    2298
                                             12 COMRAM     4     3      1
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    2067
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                          69    68      1   45789
                                             87 COMRAM     1     0      1
                                             32 BANK0     68    68      0
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              13     3     10   42543
                                             84 COMRAM     3     3      0
                                             22 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5   37446
                                             77 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    38      4   36841
                                             69 COMRAM     8     4      4
                                              0 BANK0     22    22      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    9037
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     672
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     323
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    8141
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     440
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     449
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _stoa                                                20    17      3    3900
                                             12 COMRAM    20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    9009
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    6645
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2    1254
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    2329
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1773
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      93
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (12) _UART1_Write                                         1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     197
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     641
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     653
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2727
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     391
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     427
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1332
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   15156
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    8361
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     447
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   14213
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2   13498
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    4165
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     512
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     512
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2614
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1766
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1223
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     338
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    3143
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2889
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    4840
                                              7 COMRAM    11     5      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     554
                                              8 COMRAM     6     4      2
                        _appDataConf *
 ---------------------------------------------------------------------------------
 (5) _appDataConf                                          2     0      2     287
                                              6 COMRAM     2     0      2
                     _free_tx_buffer
 ---------------------------------------------------------------------------------
 (6) _free_tx_buffer                                       5     3      2     179
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0   98041
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0   97373
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0   97373
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     135
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    5868
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0   11242
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   15241
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4    1145
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4    1179
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1516
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2138
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5904
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setFrequency                                        12     8      4    8744
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    7013
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0   19557
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (6) _implicitHeaderMode                                   0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _explicitHeaderMode                                   0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    5735
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    4     2      2    1046
                                              8 COMRAM     3     1      2
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     546
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SX1276Read                                           2     2      0    1145
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (8) _SX1276ReadBuffer                                     5     2      3    1046
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (9) _SPI1_ReadBlock                                       6     2      4     338
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2989
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     648
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1905
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     668
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     321
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     862
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      92
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (17) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (18) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
           _appDataConf *
             _free_tx_buffer
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
               _memset
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                     _isdigit
                     _stoa
                       _fputc
                         _putch
                           _UART1_Write
                       _strlen
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                       _toupper
                         _islower
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
             nwkFrame@nwkFramePayloadSize *
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_lqi
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
           _get_rssi
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _bootLoadApplication
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _loadMACAddr
       _DIA_ReadByte
     _set_parity
     _set_uart_baud
   _processATCommand
     _UART1_Read
     _UART1_is_rx_ready
     _executeATCommand
       _cmdAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdBcast
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdBootLoad
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCADRSSI
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetMode
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRFCH
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRxCnt
       _cmdGetSF
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetTTL
       _cmdGetTX
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdI
         _sendInfo
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
       _cmdMac
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdNaddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdRecv
       _cmdReset
       _cmdRstCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSend
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSendSink
       _cmdSetAES
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetBaud
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetCADRSSI
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetNaddr
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _setSyncWord
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetParity
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _set_parity
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdSetRFCH
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSF
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSink
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSetTTL
       _cmdSetTX
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _print_hop_table
         _NWK_RouteTable
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
       _set_hop_table_ttl
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _strstr
         _strchr
         _strlen
         _strncmp
     _get_timer0base
     _memset
     _queue_serial_led_event
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _set_timer0base

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     4B9      37       29.5%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      BD      15       73.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      60      13       37.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F2      11       94.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      2      DC       9       85.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4E8      32        0.0%
DATA                 0      0     9A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 09 23:18:22 2020

                         cmdSetNaddr@tempaddr 0084                nwkRouteFrameReceived@discovery 0011  
                           _SPI1_ExchangeByte 8BD8                                    _RSSITarget 00FB  
                              _setCodingRate4 85DE                            _commandByteCounter 00F4  
                                 __CFG_CP$OFF 000000                            ?_SPI1_ExchangeByte 0001  
                     bootLoadApplication@temp 0033                           ___wmul@multiplicand 0004  
                            ??_PHY_SetRxState 0012                             ??_PHY_TaskHandler 004D  
              __end_of_nwkRouteNormalizeRanks 8492                                _SYS_TimerStart 884C  
                     ??_nwkDataReqTaskHandler 0031                      __size_of_start_radio_cad 0010  
                                 __CFG_LVP$ON 000000                       ?_nwkTxDelayTimerHandler 0012  
                  __size_of_set_hop_table_ttl 0010                                           l208 7852  
                                         l331 6B2E                                           l340 59BC  
                                         l350 693A                                           l610 7242  
                                         l357 8E50                                           l381 688A  
                                         _GIE 01FE97                      __end_of_DIO0_Receive_ISR 6DC0  
                                         _SNR 0179                            _CircularBufferSize 79E4  
                      __end_of_NWK_RouteTable 8E20                          __end_of_cmdSetParity 6F6E  
                                         _cad 62F8                                           _abs 8278  
                                         _pad 6536                                  ?_loadMACAddr 0001  
                           _NWK_GroupIsMember 871A                            nwkRouteFrame@frame 0033  
                             nwkRxSendAck@ack 002E                       __size_of_PMD_Initialize 0022  
                         ??_SPI1_ExchangeByte 0002                                           prod 003FF3  
                                         tosl 003FFD                                           wreg 003FE8  
                                 get_lqi@rssi 0043                      nwkDataReqSendFrame@frame 002F  
                                ___flmul@aexp 001D                                  ___flmul@bexp 0022  
                        _FirmwareVersionMajor FDBE                      _DATAEE_ReadByte_Platform 555E  
                          _UART1_Transmit_ISR 853A                          _FirmwareVersionMinor FDBD  
                                ___flmul@sign 001C                                  ___flmul@temp 0027  
                                ___flmul@prod 0023                                 __CFG_BBEN$OFF 000000  
                          ?_NWK_GroupIsMember 0002                                ?_queueLedEvent 001C  
                            _SX1276ReadBuffer 8874                         __end_of_SYS_TimerInit 8E0A  
                       queueLedEvent@LEDState 001E                                   ?_SX1276Read 0001  
                             PHY_DataReq@data 0011                                  __CFG_ZCD$OFF 000000  
                      NWK_GroupIsMember@group 0002                           ?_CircularBufferSize 0002  
                             ?_get_timer0base 0002                                  ___fltol@exp1 0042  
                                        ?_cad 0001                                          ?_abs 0014  
                                        l1044 8BE6                               nwkTxFrame@frame 0024  
                                        l2130 1A02                                          l1184 812C  
                                        l3131 234A                                          l3116 2CE6  
                                        l1604 5E64                                          l3133 2356  
                                        l2317 6EA6                                          l4021 5C74  
                                        l3070 210C                                          l3118 2CF2  
                                        l3057 6572                                          l3227 70F4  
                                        l3068 2100                                          l4036 7CF2  
                                        l2188 6208                                          l1399 804C  
                                        l2297 3C5C                                          l3097 4628  
                                        l4081 0D1A                                          l4082 0D48  
                                        l2619 87CC                                          l1595 7B9A  
                                        l3620 7566                                          l1596 7B82  
                                        l1917 7F1A                                          l2645 4BFA  
                                        l2575 82D4                                          l4088 0D50  
                                        l3465 5F94                                          l1937 37AC  
                                        l3730 1B46                               PHY_DataReq@size 0013  
                                        l1779 1F62                                          l3638 5B74  
                                        l3814 1392                                          ?_pad 0014  
                                        l3831 1658                                          l3823 15C2  
                                        l3648 6504                                          l3824 15BE  
                                        l3745 1C3A                                          l3729 1B68  
                                        l3906 4040                                          l3754 1CA2  
                                        l3755 1C9E                                          l3862 4122  
                                        l3855 409C                                          l3875 82A8  
                        nwkDataReqConfirm@req 0009                          _SYS_TimerTaskHandler 4F36  
                                        l9931 7E32                                          l9925 7DF4  
                                        l9933 7E34                                          STR_1 FE99  
                                        STR_2 FF66                                          STR_3 FFDF  
                                        STR_4 FECC                                          STR_5 FECC  
                                        STR_6 FED0                                          STR_7 FFDF  
                                        STR_8 FECC                                          STR_9 FECC  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                    __end_of_explicitHeaderMode 8C9C  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        u8310 1B1A                                          u8320 1B2A  
                                        u8330 1B2C                                          u8510 1C98  
                                        u8360 1B70                                          u5895 81B2  
                                        u5896 81B4                                          u8720 15B8  
                                        u8570 1D04                                          u8490 1C82  
                                        u8760 1624                                          u8680 139E  
                                        u8840 60A8                                          u8770 1642  
                                        u8850 60E0                                          u8855 60D6  
                                        u8890 6136                             ?_PHY_SetShortAddr 0002  
                                        _RSSI 017B                    _nwkRouteFrameReceived$4139 0012  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUE 003A81  
                         _CircularBufferSpace 8572                              PHY_DataInd@frame 0017  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
            __end_of_nwkTxAckWaitTimerHandler 6EE2                                          abs@a 0014  
                                        _cmdI 8E32                           ??_NWK_GroupIsMember 0004  
                                        _dbuf 02BA                                          _idle 8DF2  
                                        _atoi 3EDE                                          _main 8824  
                                        _dtoa 207E                           nwkRouteFrame@header 0035  
                            ?_NWK_TaskHandler 0001                                          _rand 5050  
                                        _seed 01C8                                          _prec 00E4  
                                        _nout 0169                                          pad@i 001B  
                                        pad@p 0018                                          fsr0h 003FEA  
                                        fsr1h 003FE2                                          indf0 003FEF  
                                        fsr2h 003FDA                                          fsr0l 003FE9  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 001D  
                                        fsr2l 003FD9                                          _stoa 45BC  
                          ??_PHY_SetShortAddr 0004                                          _utoa 2CCA  
                                        _xtoa 232E                       __size_of_SPI1_ReadBlock 0038  
                    nwkRxRejectDuplicate@diff 001A                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                              NWK_DataReq@req 0002                     __end_of_SPI1_ExchangeByte 8BF2  
               ??_UART1_SetTxInterruptHandler 0004    nwkRxDuplicateRejectionTimerHandler@restart 0014  
                      CircularBufferSpace@ctx 000A                        __end_of_setCodingRate4 8614  
                               __CFG_CSWEN$ON 000000                             _UART1_rx_vect_isr 8AC0  
                                ___param_bank 000000                          __end_of_DIA_ReadByte 8950  
                  ??_nwkRxHandleReceivedFrame 002B                             nwkFrameFree@frame 0002  
                  __size_of_UART1_is_rx_ready 0010                          ??_CircularBufferSize 0004  
                                 ?_UART1_Read 0001                              _SYS_TimerStarted 7FF0  
                     ??_nwkRxHandleIndication 00E0                            ?_UART1_rx_vect_isr 0001  
                                       ??_cad 0011                                         ??_abs 0016  
                                       ??_pad 001A                     __size_of_DATAEE_WriteByte 0040  
                      __end_of_SYS_TimerStart 8874                       __end_of_TMR0_Initialize 8332  
              __end_of_nwkTxDelayTimerHandler 6FFA                ??_TMR0_DefaultInterruptHandler 0001  
                        __size_of_cmdGetRxCnt 0002                          ?_CircularBufferSpace 000A  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0001  
                            nwkTxFrame@header 0028                 __end_of_OSCILLATOR_Initialize 8CB4  
                        __size_of_cmdBootLoad 003A                      ??_nwkRouteSendRouteError 002F  
                                       l10301 1B58                                         l10221 1A30  
                                       l11031 849A                                  ?_SX1276Write 000F  
                                       l10401 1D28                                         l10225 1A34  
                                       l10323 1BAE                                         l10315 1B8C  
                                       l11035 849E                                         l11027 8496  
                                       l10325 1BB2                                         l10333 1BC4  
                                       l10245 1A78                                         l11045 84A6  
                                       l10351 1C5E                                         l10343 1C2A  
                                       l10423 133E                                         l11039 84A2  
                                       l10361 1C74                                         l10257 1A9C  
                                       l10249 1A7C                                         l10441 137E  
                                       l10425 1342                                         l10523 1634  
                                       l10451 13B0                                         l10443 1382  
                                       l10427 1352                                         l10603 614C  
                                       l10367 1C7E                                         l10287 1AF6  
                                       l10535 1678                                         l10519 1616  
                                       l12303 5E5C                                         l14001 438A  
                                       l14003 439E                                         l10395 1D1E  
                                       l10387 1CF8                                         l10299 1B54  
                                       l12315 5EC8                                         l12421 7E40  
                                       l14021 4436                                         l14013 43FA  
                                       l10493 156A                                         l12407 8998  
                                       l11631 5774                                         l10399 1D26  
                                       l12319 5EEA                                         l12433 88A0  
                                       l11633 578C                                         l14017 4410  
                                       l14041 48B0                                         l14033 4872  
                                       l14121 20E4                                         l10585 610C  
                                       l10569 60BA                                         l15003 4D94  
                                       l14107 80B2                                         l14043 48C4  
                                       l14203 4682                                         l10499 1588  
                                       l10595 6124                                         l15101 7558  
                                       l15013 4DB8                                         l11637 57E2  
                                       l11629 5766                                         l14053 4922  
                                       l14037 4896                                         l14213 46C4  
                                       l14301 24FE                                         l10597 6130  
                                       l10589 611C                                         l12701 5FF4  
                                       l15111 40B4                                         l15015 4E04  
                                       l15007 4DA6                                         l14135 212A  
                                       l14231 2D3E                                         l11575 7B8E  
                                       l12711 6010                                         l15121 40E4  
                                       l14057 4948                                         l14049 490C  
                                       l14217 46E0                                         l14209 46A8  
                                       l14241 2E6A                                         l12721 602C  
                                       l15041 7A66                                         l15051 70A6  
                                       l15131 4154                                         l15123 410A  
                                       l16003 1D86                                         l14323 3EF0  
                                       l14139 213A                                         l14067 5AEE  
                                       l10779 845C                                         l12731 6048  
                                       l15053 70B2                                         l15117 40D2  
                                       l14341 3F60                                         l14333 3F46  
                                       l14325 3EF4                                         l14173 22F8  
                                       l14149 2276                                         l14069 5B02  
                                       l14317 2578                                         l14501 0996  
                                       l14421 0678                                         l16101 173C  
                                       l15037 7A52                                         l15063 70E6  
                                       l15071 5F34                                         l15119 40D8  
                                       l14343 3F66                                         l14079 5B5E  
                                       l14095 64EE                                         l14087 6492  
                                       l14271 23AE                                         l14431 068E  
                                       l14423 0686                                         l15215 3728  
                                       l16111 177E                                         l16031 6A1E  
                                       l12743 6066                                         l15129 4148  
                                       l14345 3F94                                         l14169 22DE  
                                       l14185 45E0                                         l14089 64A6  
                                       l14265 236E                                         l14521 0AC4  
                                       l15241 3840                                         l12745 6096  
                                       l17001 0346                                         l14371 8638  
                                       l15075 5F68                                         l15147 4198  
                                       l14339 3F58                                         l14195 4648  
                                       l14515 0A82                                         l14443 06A0  
                                       l14435 0692                                         l14427 068A  
                                       l14419 0676                                         l14531 0AE4  
                                       l15219 373E                                         l16131 18D6  
                                       l16107 1762                                         l12691 5FD8  
                                       l12675 7F9C                                         l15093 7524  
                                       l15085 5FCC                                         l14621 6C04  
                                       l14349 3FD2                                         l14293 2466  
                                       l14525 0ACE                                         l14461 076C  
                                       l14445 06E6                                         l16037 6A86  
                                       l16061 56FA                                         l12925 8336  
                                       l15157 71D4                                         l17021 0404  
                                       l17013 03C0                                         l17005 0370  
                                       l15095 7530                                         l14375 8510  
                                       l14367 8622                                         l15079 5F7E  
                                       l14199 4664                                         l14279 23D0  
                                       l14463 0778                                         l14439 0696  
                                       l14615 787A                                         l15247 3898  
                                       l15343 2B94                                         l15327 2AA4  
                                       l16143 1916                                         l16039 6A9E  
                                       l16047 5666                                         l16223 6338  
                                       l15521 5278                                         l14625 6C28  
                                       l16073 5DD6                                         l13921 8260  
                                       l14481 0888                                         l14617 789E  
                                       l14553 702E                                         l15441 33E8  
                                       l16137 18F0                                         l16129 186C  
                                       l15281 49F2                                         l16217 631A  
                                       l17201 4FC6                                         l16305 290C  
                                       l17041 04BC                                         l17033 0478  
                                       l17025 0426                                         l17017 03E2  
                                       l17009 039A                                         l14379 8528  
                                       l14651 4560                                         l14571 871E  
                                       l14395 77EE                                         l14387 779C  
                                       l13907 7D0E                                         l13931 6558  
                                       l14491 08EA                                         l14459 0748  
                                       l14707 63EC                                         l14803 72D4  
                                       l15427 3322                                         l15371 2C4A  
                                       l15347 2B98                                         l15355 2BC2  
                                       l16163 19D8                                         l16139 1900  
                                       l16091 16E2                                         l16251 638A  
                                       l17131 55FA                                         l17107 55A8  
                                       l15525 5282                                         l14653 4596  
                                       l14645 4524                                         l13917 8244  
                                       l13909 7D12                                         l13941 6598  
                                       l14741 7FFE                                         l15349 2BBE  
                                       l16157 1994                                         l16149 1942  
                                       l12949 7260                                         l16341 2F3C  
                                       l15701 0C00                                         l17053 0532  
                                       l17045 04E6                                         l17037 049A  
                                       l17029 0450                                         l15607 3A5C  
                                       l15551 1094                                         l15543 0FF0  
                                       l14639 44B8                                         l13871 8036  
                                       l13935 656A                                         l14559 704E  
                                       l14719 6452                                         l16183 61DC  
                                       l16175 6194                                         l14911 6274  
                                       l14903 6244                                         l15367 2C2C  
                                       l17143 5622                                         l17119 55D0  
                                       l16423 7DB2                                         l14577 8740  
                                       l14673 5196                                         l13945 65CE  
                                       l13937 657C                                         l15481 3496  
                                       l15473 3474                                         l15465 3442  
                                       l15457 3420                                         l15449 3404  
                                       l16193 621E                                         l15641 6B6A  
                                       l16281 6DB8                                         l15801 0F32  
                                       l15713 0C28                                         l17065 058C  
                                       l17049 0508                                         l17073 05CE  
                                       l17241 3DF2                                         l17233 3DC2  
                                       l17225 3DA0                                         l17217 3D76  
                                       l15571 122E                                         l15563 118A  
                                       l15555 10E6                                         l15547 1042  
                                       l15539 0F9E                                         l14819 74BA  
                                       l14827 7500                                         l14659 45B2  
                                       l14835 66A4                                         l14683 5222  
                                       l14691 7B28                                         l16187 61F8  
                                       l14747 8010                                         l14763 38FC  
                                       l17403 27EE                                         l17307 25FA  
                                       l15651 4E48                                         l16347 2F5E  
                                       l15715 0C5A                                         l17243 3DFA  
                                       l17235 3DD6                                         l17227 3DA8  
                                       l15493 8806                                         l14677 51CC  
                                       l13885 806E                                         l14917 62A8  
                                       l14749 8028                                         l14773 397A  
                                       l17333 2696                                         l15653 4E56  
                                       l15741 0D0A                                         l16445 3122  
                                       l16613 6F32                                         l17069 05B6  
                                       ?_cmdI 0001                                         l17159 7BCC  
                                       l15583 85EA                                         l15567 11DC  
                                       l15559 1138                                         l14871 3C44  
                                       l13887 8072                                         l14951 760C  
                                       l14783 39EC                                         l16711 6772  
                                       l17343 26C8                                         l17319 2624  
                                       l15815 784A                                         l15807 780C  
                                       l15735 0CF6                                         l15719 0C62  
                                       l16471 31F2                                         l16447 3126  
                                       l16455 3142                                         l16391 6E40  
                                       l17087 7C18                                         l17263 3E48  
                                       l17255 3E2C                                         l15497 8810  
                                       l14849 6742                                         l13897 7670  
                                       l14961 7618                                         l14785 3A04  
                                       l14769 393A                                         l16713 6784  
                                       l16721 67DE                                         l17193 4F64  
                                       l17353 26FA                                         l16465 31C4  
                                       l16449 312E                                         l16457 3188  
                                       l16617 6F5A                                         l16609 6F0A  
                                       l17273 3E68                                         l15587 85F4  
                                       l14971 4D04                                         l16803 7352  
                                       l13995 4364                                         l14947 7600  
                                       l14787 3A12                                         l16715 6796  
                                       l16731 34F0                                         l15835 79A8  
                                       l15843 79C0                                         l17363 2734  
                                       l15691 0B9E                                         l16299 28EA  
                                       l16491 32A6                                         l15675 792E  
                                       l15667 78CE                                         l14877 3C8E  
                                       l16805 7380                                         l13989 433C  
                                       l16709 6760                                         l16901 4C4E  
                                       l15837 79B0                                         l17373 2762  
                                       l15861 5CE6                                         l15749 0D36  
                                       l15677 7936                                         l15669 78D6  
                                       l16661 5838                                         l15599 82D0  
                                       l14991 4D5E                                         l14983 4D3A  
                                       l14975 4D16                                         l14879 3CB2  
                                       l16807 7398                                         l16719 67A8  
                                       l15839 79B8                                         l17383 2790  
                                       l15855 5CA8                                         l15863 5D18  
                                       l15783 0EAE                                         l15767 0DF0  
                                       l15759 0DB8                                         l16495 32CE  
                                       l16479 3216                                         l16559 5944  
                                       l17279 3E7A                                         l17287 3EA0  
                                       l17447 8842                                         l14889 3D38  
                                       l16761 35EE                                         l16737 3522  
                                       l16905 4C56                                         l16825 7C8E  
                                       l15793 0F00                                         l14995 4D70  
                                       l14987 4D4C                                         l14979 4D28  
                                       l16771 3636                                         l16763 35EE  
                                       l16739 3532                                         l16923 4CB6  
                                       l16819 7C62                                         l15883 73FA  
                                       l15787 0EE4                       __end_of_SYS_TaskHandler 8D82  
                                       l16765 3600                                         l16749 357E  
                                       l16909 4C70                                         l16853 6F7C  
                                       l16861 6FBE                                         l16837 6E60  
                                       l17389 279A                                         l15885 7408  
                                       l16941 0104                                         l16933 00B4  
                                       l16695 7E8E                                         l14999 4D82  
                                       l16775 3670                                         l16919 4CAE  
                                       l15799 0F1A                                         l15975 5C6C  
                                       l15967 5C1A                                         l15959 5BCC  
                                       l16777 36B0                                         l16961 01D2  
                                       l16953 017A                                         l16945 012E  
                                       l16937 00E2                                         l16795 7340  
                                       l16875 4BE0                                         l15987 54C8  
                                       l16789 732E                                         l16885 4C04  
                                       l16869 4BD2                                         l16981 0294  
                                       l16973 0240                                         l16965 01FC  
                                       l16957 01A4                                         l16949 0150  
                                       l16887 4C08                                         l16879 4BEC  
                                       l16889 4C10                                         l16993 02FA  
                                       l16985 02B6                                         l16977 026A  
                                       l16969 021E                                         l16997 0324  
                                       l16989 02D8                                 ___fltol@sign1 0041  
                                       ?_idle 0001                               __end_of___aodiv 4468  
                                       ?_atoi 0009                               __end_of___fladd 1D4C  
                   __end_of_NWK_GroupIsMember 874C                                         ?_main 0001  
                                       ?_dtoa 001F                               __end_of___aomod 497A  
                                       ?_rand 001A                                         STR_10 FED0  
                                       STR_11 FE52                                         STR_20 FFD4  
                                       STR_12 FFDF                                         STR_21 FFD7  
                                       STR_13 FFD7                                         STR_30 FFD7  
                                       STR_14 FECC                                         STR_22 FF66  
                                       STR_23 FECC                                         STR_15 FE7F  
                                       STR_31 FE40                                         STR_40 FECC  
                                       STR_24 FECC                                         STR_16 FFDF  
                                       STR_32 FE2E                                         STR_41 FFD7  
                                       STR_17 FFD7                                         STR_25 FFDF  
                                       STR_33 FEA6                                 __CFG_WDTE$OFF 000000  
                                       STR_26 FECC                                         STR_34 FFDF  
                                       STR_18 FFDC                                         STR_50 FFC6  
                                       STR_42 FE8C                                         STR_35 FECC  
                                       STR_27 FECC                                         STR_43 FFDF  
                                       STR_51 FFC6                                         STR_19 FFF5  
                                       STR_36 FFD7                                         STR_28 FFD7  
                                       STR_52 FECC                                         STR_44 FECC  
                                       STR_60 FDC1                                         STR_61 FFD7  
                                       STR_53 FFD7                                         STR_45 FFD7  
                                       STR_37 FE71                                         STR_29 FE19  
                                       STR_54 FFDF                                         STR_38 FFDF  
                                       STR_46 FFEB                                         STR_70 FFE1  
                                       STR_62 FF61                                         STR_39 FECC  
                                       STR_63 FF61                                         STR_71 FFE1  
                                       STR_47 FFEB                                         STR_55 FFFD  
                                       STR_48 FFC0                                         STR_80 FF92  
                                       STR_56 FF39                                         STR_64 FF30  
                                       STR_72 FED8                                         STR_57 FFDF  
                                       STR_81 FF92                                         STR_73 FED8  
                                       STR_49 FFC0                                         STR_65 FF30  
                                       STR_58 FECC                                         STR_66 FFA7  
                                       STR_82 FF76                                         STR_74 FF51  
                                       STR_90 FEF7                                         STR_59 FFD7  
                                       STR_83 FF76                                         STR_75 FF51  
                                       STR_91 FEF7                                         STR_67 FFA7  
                                       STR_68 FFE6                                         STR_76 FF68  
                                       STR_84 FF15                                         STR_92 FEE3  
                                       STR_85 FF15                                         STR_77 FF68  
                                       STR_93 FEE3                                         STR_69 FFE6  
                                       STR_94 FF99                                         STR_78 FF0B  
                                       STR_86 FEB3                                         STR_87 FEB3  
                                       STR_95 FF99                                         STR_79 FF0B  
                                       STR_96 FF7D                                         STR_88 FE62  
                             __end_of___flmul 1696                                         STR_97 FF7D  
                                       STR_89 FE62                                         STR_98 FF1E  
                                       STR_99 FF1E                            _implicitHeaderMode 8C6C  
                             __end_of___fltol 6166                                         ?_stoa 000D  
                       nwkDataReqConfirm@prev 000D                               __end_of___lldiv 710E  
                                       ?_utoa 001F                                         u13000 7CDA  
                                       u10360 7B74                                         u12120 726C  
                                       u13010 7CDC                               __end_of___lodiv 5BA6  
                                       u10365 7B6E                                         u13030 8712  
                                       ?_xtoa 001F                                         u13040 8714  
                                       u13200 5B06                                         u11344 5EB0  
                             __end_of___llmod 7580                                         u11345 5EAA  
                                       u10538 5812                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         u13150 48C8  
                                       u13230 64AA                                         u14030 09D2  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u13071 436A                                         u13320 20F6  
                                       _U1P2L 003DEE                                         u13090 43A2  
                                       u13410 22C8                                         u11730 8D50  
                                       _U1P3L 003DF0                                         u13260 80AE  
                                       u13340 2124                                         u14141 6BFE  
                                       u13181 5ACE                                         u14310 514C  
                                       u13350 2284                                         u13510 46F4  
                                       u13431 45C6                                         u13280 20B6  
                                       u13600 2340                                         u14080 707A  
                                       u15200 3470                                         u15104 2C10  
                                       u16000 5D50                                         u15025 53DA  
                                       u15105 2C0C                                         u15041 2AEA  
                                       u13370 22A6                                         u13290 20B8  
                                       u13530 2CDC                                         u15210 3492  
                                       u15026 53DC                                         u14315 513A  
                                       u13371 22A4                                         u16100 1DFC  
                                       u13380 22B4                                         u12900 8678  
                                       u13700 250E                                         u13620 23CC  
                                       u14430 3BFE                                         u12830 7668  
                                       u13390 22BA                                         u13630 2402  
                                       u14270 63E8                                         u14510 629C  
                                       u16120 1E2A                                         u13800 400A  
                                       u13480 4678                                         u13560 2E94  
                                       u13720 2530                                         u13640 2404  
                                       u14520 62B8                                         u14360 3982  
                                       u15064 2B3A                               __end_of___lomod 6536  
                                       u13561 2E92                                         u13721 252E  
                                       u15065 2B36                                         u12850 76B0  
                                       u13570 2EA2                                         u13730 253E  
                                       u16140 1E5C                                         u12860 7D3C  
                                       u13580 2EA8                                         u13740 2544  
                                       u13660 243C                                         u14540 75FC  
                                       u15228 34D4                                         u16300 1714  
                                       u15270 52D4                                         u14390 74E4  
                                       u16118 1DFE                                         u12950 8286  
                                       u13670 243E                                         u15190 343E  
                                       u15094 2BAA                                         u16310 172A  
                                       u15510 7916                                         u15095 2BA6  
                                       u16311 1728                                         u16080 1DE2  
                                       u12960 86AA                                         u16400 1826  
                                       u18000 274E                                         u14800 720A  
                                       u15440 4E80                                         u15600 0BFC  
                                       u15370 1278                                         u16138 1E2C  
                                       u16090 1DE4                                         u16250 5DA0  
                                       u13770 3F42                                         u12970 86AC  
                                       u12890 8676                                         u13690 24CA  
                                       u16410 1886                                         u15530 7976  
                                       u15275 52CA                                         u12867 7D2E  
                                       u14580 70B6                                         u14660 7534  
                                       u14740 415E                                         u13860 77D4  
                                       u12980 86DE                                         u14900 37B6  
                                       u16500 19C6                                         u16420 1888  
                                       u16180 6AA6                                         u15700 0CBC  
                                       u14397 74D6                                         u16158 1E5E  
                                       u13790 4008                                         u12990 86E0  
                                       u13950 07B4                                         u14910 37B8  
                                       u15710 0CF2                                         u15630 0C56  
                                       u15550 0B6C                                         u15375 126E  
                                       u13695 24B8                                         u14807 71FC  
                                       u15447 4E72                                         u13960 07B6  
                                       u14920 37E0                                         u17048 365E  
                                       u17240 4C8E                                         u15480 4EEC  
                                       u15800 0DE0                                         u13866 77D6  
                                       u13970 07C4                                         u14930 3800  
                                       u14850 3726                                         u15490 4F16  
                                       u15570 0B9C                                         u14835 813A  
                                       u14940 3806                                         u17180 4BE6  
                                       u14836 813C                                         u14780 71C0  
                                       u15660 0C98                                         u15580 0BCC  
                                       u17420 0340                                         u15485 4EE6  
                                       u15717 0CE4                                         u15637 0C48  
                                       u15557 0B5E                                         u13990 0800  
                                       u16470 1974                                         u16390 1824  
                                       u17430 0362                                __CFG_DEBUG$OFF 000000  
                                       u15487 4ED8                                         u16640 63A4  
                                       u16720 2F28                                         u15760 0D96  
                                       u15680 0CAC                                         u15497 4F08  
                                       u18057 840C                                         u15577 0B8E  
                                       u16490 19B0                                         u15770 0D98  
                                       u18067 41BE                                         u14787 71B2  
                                       u15667 0C8A                                         u15587 0BBE  
                                       u14980 49E0                                         u17620 55A4  
                                       u15860 0E88                                         u18077 41DC  
                                       u16590 6316                                         u15870 0EDC  
                                       u15790 0DDE                                         u16750 6E26  
                                       u18087 42CE                                         u16690 28D6  
                                       u16930 6878                                         u17740 502A  
                                       u16780 316C                                         u16860 59A6  
                                       u15877 0ECE                                         u15990 5D4A  
                                       u17728 4FEE                                         u16880 6928  
                                       u17729 5000                                         u16787 315E  
                                       u17940 26B2                                         u15997 5D3C  
                                       u17790 3D86                                         u17960 26E4  
                                       u17980 271E                                         _U1UIR 003DF8  
                                       _U1RXB 003DE8                                   computeFRF@i 002F  
                                       _U1TXB 003DEA                           ??_UART1_rx_vect_isr 0001  
                           ?_NWK_OpenEndpoint 0002                                         _OSCEN 0039DD  
                             __end_of_cmdAddr 8A3E                                  vfpfcnvrt@fmt 0048  
                               strtoul@endptr 0036                                         _TMR0H 003FB7  
                                vfpfcnvrt@llu 006E                                         _TMR0L 003FB6  
                             ?_NWK_RouteTable 0002                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                 _Default_ISR 8E64                               __end_of_cmdRecv 8E58  
                             __end_of_cmdSend 2A98                     ??_CRC_CalculatedResultGet 000B  
                            print_hop_table@i 005C             __size_of_TMR0_SetInterruptHandler 000E  
                         ___lmul@multiplicand 0006                     ?_TMR0_SetInterruptHandler 0002  
                          ??_NWK_OpenEndpoint 0004                              __end_of_TMR0_ISR 8A1E  
                           _UART1_tx_vect_isr 8AA0                               __end_of_get_lqi 6BF8  
                               __CFG_WRTB$OFF 000000                                 __CFG_WRTC$OFF 000000  
                               __CFG_WRTD$OFF 000000                      __end_of_NWK_RouteNextHop 7F20  
                      cmdSetCADRSSI@atCommand 0058                               _DATAEE_ReadByte 8B1C  
                         ?_implicitHeaderMode 0001                          __size_of_cmdSetNaddr 007E  
                            __end_of_PHY_Init 8E44                 nwkRouteSendRouteError@command 002F  
                       __end_of_Timer0Handler 7DA0                                         _flags 00E6  
                        __size_of_cmdSendSink 0002                     __size_of_CRC_ReverseValue 0058  
                                       _errno 0165                                         _fputc 7658  
                             __end_of_isalpha 86E6                                         _fputs 823A  
                             __end_of_isdigit 871A                         ?_SYS_TimerTaskHandler 0001  
                                       _nwkIb 0100                              __end_of_NWK_Init 7C06  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                             __end_of_receive 82F4                                         _srand 84CA  
                                       atoi@n 0016                                         pad@fp 0014  
                                       atoi@s 0009                                         _width 00E2  
                                       _putch 8E20                                         dtoa@d 0021  
                                       dtoa@i 0041                                         dtoa@n 0039  
                                       dtoa@p 0033                                         dtoa@s 0037  
                                       dtoa@w 0035                               __end_of_islower 867E  
                             __end_of_isspace 80BC                          __size_of_appDataConf 0022  
                             __end_of_isupper 86B2                                         pclath 003FFA  
                                       tablat 003FF5                              _nwkTxTaskHandler 34E6  
                           nwkRxSendAck@frame 002A                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 0018  
                                       stoa@l 001F                                         stoa@p 001D  
                                       stoa@s 000F                                         stoa@w 001A  
                         nwkDataReqTxConf@req 0008                                         utoa@d 0021  
                                       utoa@i 003D                                         utoa@n 0035  
                                       utoa@p 0031                                         utoa@w 0033  
                 nwkTxConvertPhyStatus@status 0004                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 8DBA                   _UART1_SetRxInterruptHandler 8DAC  
                __size_of_nwkRxServiceDataInd 006C                                         xtoa@c 0044  
                                       xtoa@d 0021                                         xtoa@i 0042  
                                       xtoa@n 003A                                         xtoa@p 0036  
                                       xtoa@w 0038                                         xtoa@x 0029  
             nwkTxAckWaitTimerHandler@restart 0016                               __end_of_strcspn 7984  
                             __end_of_strncmp 4F36                               __end_of_toupper 7D00  
                            ___lodiv@dividend 0002      __end_of_UART1_DefaultFramingErrorHandler 8E6A  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 8E68  
                             __end_of_strtoul 7F66                       SX1276WriteBuffer@buffer 0009  
                         ??_UART1_tx_vect_isr 0001                              __end_of_SYS_Init 8D9E  
                   __end_of_UART1_rx_vect_isr 8AE0                      __size_of_SPI1_Initialize 001A  
                  __size_of_setPreambleLength 001A                                nwkFrameAlloc@i 0012  
                           nwkTxConfirm@frame 0002                                  _toupper$7888 000E  
                             ?_setCodingRate4 0001                               __initialization 65EC  
                  __end_of_NWK_RouteFindEntry 7800                          ??_implicitHeaderMode 0011  
                                __end_of_cmdI 8E38                                  __end_of_idle 8DFE  
                                __end_of_atoi 404E                                  __end_of_main 884C  
                                __end_of_dtoa 232E                                  __end_of_rand 515E  
                           nwkFrameNext@frame 0002                   SYS_TimerTaskHandler@elapsed 001E  
                                __end_of_stoa 4702                                  __end_of_utoa 2EDE  
                                __end_of_xtoa 25AE                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                               ?_SYS_TimerStart 0010  
                         __size_of_SX1276Read 0016                         ??_CircularBufferSpace 000C  
                             cmdSend@destaddr 0080                    __end_of_NWK_RouteFreeEntry 85DE  
                            _need_radio_reset 017C                              ??_CRC_Initialize 0002  
                                ?_UART1_Write 0001                                _free_tx_buffer 7DEE  
                                      ??_cmdI 0058                             cmdSetSF@atCommand 0058  
                                      ??_idle 0011                                        ??_atoi 000B  
                                      ??_main 005E                                        ??_dtoa 0029  
                                      ??_rand 001C                                __CFG_PR1WAY$ON 000000  
                                      ??_stoa 0010                                        ??_utoa 0029  
                                      ??_xtoa 002A                                 __activetblptr 000003  
                 __size_of_getSignalBandwidth 0122                   __size_of_setSignalBandwidth 03C6  
        __size_of_UART1_SetTxInterruptHandler 000E                           executeATCommand@cmd 00AA  
                   __end_of_UART1_tx_vect_isr 8AC0                                __CFG_MVECEN$ON 000000  
                  __end_of_nwkRxIndicateFrame 34E6                               ??_queueLedEvent 001E  
                         computeFRF@frequency 0023                              ___lodiv@quotient 0012  
                    __end_of_executeATCommand 062E                           CRC_ReverseValue@crc 0002  
                            _UART1_Initialize 6966                      ??_CircularBufferPushBack 0016  
                              _nwkDataReqInit 8E0A                         queueLedEvent@duration 001C  
                DIO0_Receive_ISR@packetLength 0044                           NWK_RouteNextHop@dst 0008  
                           ??_start_radio_cad 0011                           _bootLoadApplication 25AE  
                __end_of_nwkRxRejectDuplicate 2CCA                  __size_of_nwkDataReqSendFrame 0332  
                                      ?_fputc 0004                              ___llmod@dividend 0002  
                                      STR_100 FFFA                                        STR_101 FFFA  
                                      STR_102 FFB4                                        STR_110 FF27  
                                      ?_fputs 000D                                        STR_111 FF27  
                                      STR_103 FFB4                                        STR_112 FFCC  
                                      STR_120 FFA0                                        STR_104 FF84  
                                      STR_105 FF84                                        STR_121 FFA0  
                                      STR_113 FFCC                                        STR_130 FECC  
                                      STR_122 FFBA                                        STR_114 FF8B  
                                      STR_106 FF59                                        STR_115 FF8B  
                                      STR_123 FFBA                                        STR_107 FF59  
                                      STR_131 FEC0                                        STR_124 FFAE  
                                      STR_116 FF6F                                        STR_108 FF49  
                                      STR_132 FDFF                                        STR_117 FF6F  
                                      STR_125 FFAE                                        STR_109 FF49  
                                      STR_133 FDE3                                        STR_118 FFF0  
                                      STR_134 FF41                                        STR_126 FF01  
                                      STR_127 FF01                                        STR_119 FFF0  
                                      STR_135 FFD2                                        STR_128 FEED  
                                      STR_129 FEED                               cmdSend@tempaddr 0085  
                                      ?_srand 0002                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                         __end_of_nwkFrameAlloc 6754  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                            _processATCommand 3D62                                        _U1CON0 003DF2  
                    nwkRxHandleIndication@ack 005D                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                           __size_of_UART1_Read 0046  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _RB0PPS 003A08  
                          __CFG_PWRTS$PWRT_64 000000                                        _RC0PPS 003A10  
                                      _RC1PPS 003A11                                        i1l1000 7D9A  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC7PPS 003A17  
                              __CFG_WDTCCS$SC 000000                                  loadMACAddr@i 0006  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLE 003A84  
                                      _TABLAT 003FF5                             ?_nwkDataReqTxConf 0004  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 006A  
                            __end_of_cmdBcast 30E6                                        _NVMDAT 0039E3  
                            __end_of_cmdGetSF 8C54                              __end_of_cmdGetTX 8C3C  
                       _UART1_SetErrorHandler 8DD6                              __end_of_cmdNaddr 8C24  
                              placeTimer@prev 000C                                  ?_setSyncWord 0001  
                            __end_of___xxtofl 41B2                              __end_of_cmdSetSF 68B6  
                            __end_of_cmdSetTX 59E8                            ??_nwkDataReqTxConf 0006  
                            __end_of_cmdReset 8E52                            PHY_DataConf@status 0005  
                            set_parity@parity 0004                    __size_of_SPI1_ExchangeByte 001A  
                              __CFG_XINST$OFF 000000                                  ___strtoxl@cp 0031  
                                vfprintf@cfmt 0053                                 ?_radio_engine 0001  
                                ?_PHY_DataInd 0013                                  ?_PHY_DataReq 0011  
                        ?_bootLoadApplication 0001                                        ___flge 5F00  
                            __end_of_get_rssi 87D0                              __end_of_fhssList FDAF  
                                      ___lmul 7A42                                        ___omul 6BF8  
                                   ??___aodiv 0012                                     ??___fladd 0031  
                                   ??___aomod 0012                                        ___wmul 874C  
                                      _cmdMac 7DA0                                __CFG_STVREN$ON 000000  
                                   ??___flmul 0018                                     ??___fltol 003D  
                                      _crcObj 01D0                                     ??___lldiv 001E  
                                   ??___lodiv 0012                                     ??___llmod 000A  
                      __end_of_free_tx_buffer 7E3C                                     ??___lomod 0012  
                       __size_of_cmdSetParity 008C                                     ??_cmdAddr 0058  
                                      _memcpy 74A0                              ?_TMR0_Initialize 0001  
                    __end_of_nwkRxTaskHandler 6806                                        _memset 4468  
                                   ??_cmdRecv 0002                                     ??_cmdSend 005A  
                            ___strtoxl@endptr 0012                                        clear_0 6638  
                                      clear_1 664A                                        clear_2 6656  
                                      clear_3 6662                                        clear_4 666E  
                                      clear_5 667A                                        clear_6 6686  
                            setCodingRate4@cr 0012                     CircularBufferPushBack@ctx 0013  
                   CircularBufferPushBack@val 0015                 DATAEE_ReadByte_Platform@copy1 000A  
               DATAEE_ReadByte_Platform@copy2 0009                 DATAEE_ReadByte_Platform@copy3 0008  
                                      _timers 00E8                                        _printf 8950  
                                      pad@buf 0016             __size_of_nwkTxAckWaitTimerHandler 0090  
                  __size_of_NWK_GroupIsMember 0032               __size_of_nwkRouteSendRouteError 00E0  
                            ?_SYS_TaskHandler 0001                                        dtoa@fp 001F  
                                      _strchr 7196                     ?_nwkTxAckWaitTimerHandler 0012  
                     __end_of_DATAEE_ReadByte 8B3A                                     ??_get_lqi 0043  
                            ___strtoxl@prev_a 001B                              __end_of_sendInfo 7798  
                                      _strlen 7D00                                        _strtok 5BA6  
                                      _strspn 78C4                                        _strtol 81BE  
                                      _strstr 5C82                                 cmdSetAES@byte 00A6  
              __size_of_nwkTxConvertPhyStatus 0038                                 cmdSetAES@temp 00A2  
               __end_of_nwkTxConvertPhyStatus 84CA                                        fputc@c 0004  
                              _PMD_Initialize 89D8                                        fputs@c 0011  
                                      fputs@i 0012                                  __packetIndex 017F  
                                      fputs@s 000D                                     ??_isalpha 0004  
                                   ??_isdigit 0004                        __end_of_nwkDataReqInit 8E16  
              __size_of_nwkRouteFrameReceived 01E2                                     ??_receive 0011  
               __end_of_nwkRouteFrameReceived 38B8                       _setSpreadingFactor$8654 0027  
                                   ??_islower 0004                                  __mediumconst FCB2  
                                   ??_isspace 0004                                        tblptrh 003FF7  
                                   ??_isupper 0004                                        tblptrl 003FF6  
                                      tblptru 003FF8                   __end_ofNWK_LinearizeLqi@val FDB8  
                                      srand@s 0002                        ??_SYS_TimerTaskHandler 0019  
                                ?_NWK_DataReq 0002                                        stoa@cp 001C  
                                      stoa@fp 000D                          __size_of_loadMACAddr 003C  
                       __end_of_TMR0_CallBack 8A9E                              __end_of_vfprintf 78C4  
                                      utoa@fp 001F                          processATCommand@data 00B1  
 UART1_SetTxInterruptHandler@InterruptHandler 0002   UART1_SetRxInterruptHandler@InterruptHandler 0002  
    TMR0_SetInterruptHandler@InterruptHandler 0002          __end_of_UART1_SetOverrunErrorHandler 8DC8  
       __size_of_UART1_SetOverrunErrorHandler 000E                  _UART1_SetOverrunErrorHandler 8DBA  
                               _curent_parity 0187                     _UART1_DefaultErrorHandler 8E44  
                                      xtoa@fp 001F                                     ??_strcspn 000C  
                                   ??_strncmp 0008                                     ??_toupper 000A  
                                   ??_strtoul 003A                 __size_of_INTERRUPT_Initialize 0040  
                __size_of_UART1_RxDataHandler 0024                                    ___flge@ff1 0010  
                                  ___flge@ff2 0014                                 cmdSetRFCH@cmd 0058  
                     ??_nwkRouteErrorReceived 000E                                  ___xxtofl@arg 000C  
                                ___xxtofl@exp 000B                             _SYSTEM_Initialize 89B6  
                                ___xxtofl@val 0002                                 cmdSetSF@CHstr 0082  
                            PHY_SetRxState@rx 0001                                    __accesstop 0060  
                        cmdGetRxCnt@atCommand 0002                       __end_of__initialization 669A  
                                ?_NWK_SetAddr 0004                               SX1276Write@addr 0010  
                    __size_of_SPI1_WriteBlock 0036                          bootLoadApplication@i 0035  
                             SX1276Write@data 000F                                _SPI1_ReadBlock 8502  
                          __size_of_crc16_app 0084                         __size_of_DIA_ReadByte 0022  
                          ?_SYSTEM_Initialize 0001                            _get_free_tx_buffer 7800  
                          _getSpreadingFactor 8BA4                                    _cadCounter 017D  
                           ?_nwkTxAckReceived 0008                            _setSpreadingFactor 526C  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0020  
                                  ___fltol@f1 0039                               _PHY_TaskHandler 8E38  
                                _cmdSetParity 6EE2                      ??_queue_serial_led_event 0022  
                     SYS_TimerTaskHandler@cnt 001D                                ??_radio_engine 004B  
                          ??_nwkTxAckReceived 0009              __end_of_nwkRxHandleReceivedFrame 1A04  
                       ??_bootLoadApplication 0030                            __size_of_cmdGetCAD 0018  
                                  _cadTimeOut 00F7                                __pcstackCOMRAM 0001  
                          CRC_Initialize@seed 0005                            __size_of_cmdGetTTL 0002  
                          __size_of___strtoxl 042E                            CRC_Initialize@poly 0003  
                    __end_of_SX1276ReadBuffer 889C                                 cmdSetTX@CHstr 0085  
                __size_of_nwkFrameCommandInit 0040                        __size_of_cmdGetCADRSSI 001A  
                               cmdSetAddr@cmd 0058                                  __pidataBANK0 8E4A  
                                __pidataBANK1 8B56                            nwkTxConfirm@status 0004  
                         ??_SYSTEM_Initialize 0007                           ?_get_free_tx_buffer 0002  
                         ?_getSpreadingFactor 000F                                   placeTimer@t 000E  
                                   ?_TMR0_ISR 0001                            __size_of_cmdSetAES 0200  
                         ?_setSpreadingFactor 0001                nwkRxHandleReceivedFrame@header 0031  
                          __size_of_cmdSetTTL 0002                              _DATAEE_WriteByte 80FE  
                              ivt0x8_undefint 00AC                               ?_free_tx_buffer 0002  
                           PHY_SetPanId@panId 0002                            __size_of_cmdRstCAD 0016  
                                   ?_PHY_Init 0001                                 __end_of_fputc 76C4  
                               cmdSetBaud@ptr 003D                                 __end_of_fputs 8278  
                           ??_SPI1_Initialize 0002                      nwkRxIndicateFrame@header 00D0  
              nwkRxHandleReceivedFrame@member 002E                                 __end_of_srand 8502  
                               __end_of_putch 8E2A                         SX1276WriteBuffer@addr 000B  
                  ??_DATAEE_ReadByte_Platform 0008                                     ?_NWK_Init 0001  
                                 receive@size 0011          __size_ofnwkFrame@nwkFramePayloadSize 002A  
                       SX1276WriteBuffer@size 000A                        __end_of_PMD_Initialize 89FA  
                       SPI1_ExchangeByte@data 0002                                 cmdSend@buf_id 008B  
                    nwkDataReqTaskHandler@req 0033                            _spi1_configuration FDB8  
                          __size_of_enableCrc 0012                __size_of_nwkDataReqTaskHandler 0082  
                  __size_of_UART1_tx_vect_isr 0020                             ?_DIO0_Receive_ISR 0001  
               __end_of_nwkDataReqTaskHandler 73A2                              ??_get_timer0base 0004  
                        __size_of_SX1276Write 0012                               ?_nwkDataReqInit 0001  
                               cmdSetNaddr@p1 0082                                 cmdSetNaddr@p2 0080  
                                crc16_app@len 0015                                  crc16_app@ptr 001B  
                                   ?_SYS_Init 0001                                _nwkFrameFrames 05BD  
                   _UART1_FramingErrorHandler 01F3                                    _cmdGetRFCH 8B3A  
                          ??_DIO0_Receive_ISR 0044               __size_of_CircularBufferPushBack 00F4  
                       __end_of_set_uart_baud 609C                                    _cmdGetMode 8D34  
                                _DIA_ReadByte 892E                          ??_get_free_tx_buffer 0003  
                        ??_getSpreadingFactor 0013                              _CRC_ReverseValue 7B58  
                                ??_SX1276Read 000D                          ??_setSpreadingFactor 0023  
                                     ??_fputc 0008                     __end_of_SYSTEM_Initialize 89D8  
                                     ??_fputs 0011                      __end_of_SYS_TimerStarted 8034  
                             __CFG_IVT1WAY$ON 000000                                       ??_srand 0004  
                                     ??_putch 0003                                    _cmdSetRFCH 6AB8  
                               ?_setFrequency 0023                        __end_of_SPI1_ReadBlock 853A  
                                  __pbssBANK0 00E2                                    __pbssBANK1 0100  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
                                  __pbssBANK4 0400                                    __pbssBANK5 0500  
                                  _cmdSetAddr 6DC0                                    _cmdSetBaud 7580  
               ?_UART1_SetOverrunErrorHandler 0002                        ?_UART1_SetErrorHandler 0002  
                                  _cmdSetSink 8D14                         __end_of_nwkRouteFrame 5E30  
                      _nwkRouteSendRouteError 59E8                                    _appDataInd 729E  
                          __size_of_initRadio 015E                                    crc16_app@i 001D  
                __size_of_nwkTxBroadcastFrame 0144                                    _atStateVar 00F3  
                 nwkTxBroadcastFrame@newFrame 0027                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                        CRC_ReverseValue@mask 0007                               setTxPower@power 0011  
                     setPreambleLength@length 0011                                       ?___flge 0010  
            __end_of_TMR0_SetInterruptHandler 8DF2                                       ?___lmul 0002  
                          _explicitHeaderMode 8C84                                       ?___omul 0002  
                                ??_UART1_Read 0002                      __size_of_print_hop_table 00E2  
                                     ?___wmul 0002                               _nwkDataReqQueue 00EA  
                                     ?_cmdMac 0001                                    ??_TMR0_ISR 0001  
                             __CFG_PPS1WAY$ON 000000                            NWK_OpenEndpoint@id 0004  
                        _nwkRxRejectDuplicate 2A98                             _nwkDataReqConfirm 573C  
                     __size_of_set_timer0base 0020                                    ??_PHY_Init 003A  
                   __size_of_PHY_SetShortAddr 0002                           nwkTxAckReceived@ind 0008  
                            ??_NWK_RouteTable 0004                                       ?_memcpy 0008  
                                     ?_memset 0002                __size_of_nwkRxHandleIndication 00CA  
                         ___omul@multiplicand 000A                                ___lmul@product 000A  
                                  ??_NWK_Init 0006                            __end_of_SX1276Read 8CE0  
                           _SX1276WriteBuffer 88E6                 __end_of_nwkRxHandleIndication 6230  
                    __end_of_nwkTxTaskHandler 36D6                            ?_nwkDataReqConfirm 0009  
                                     _CRCACCH 003963                                       _CRCACCL 003962  
                                     ?_printf 0076                               ?_PMD_Initialize 0001  
                                     _CRCDATH 003961                                       _CRCDATL 003960  
                           _UART1_Receive_ISR 6C92                                       _CRCCON0 003968  
                                     _CRCCON1 003969                            __size_of_nwkRxInit 004C  
                         _nwkRxServiceDataInd 75EC                            __size_of_nwkTxInit 0042  
                                     ?_strchr 0002                           ?_explicitHeaderMode 0001  
                                     ?_strlen 0002                                       ?_strtok 000F  
                                     ?_strtol 0034                                       ?_strspn 0008  
                                     ?_strstr 000D                                       _CRCXORH 003967  
                                     _CRCXORL 003966                              ?_DATAEE_ReadByte 0002  
                           __end_of_crc16_app 729E                                 ?_nwkFrameFree 0002  
                          ?_SX1276WriteBuffer 0009                                 ?_nwkFrameInit 0001  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                               ?_nwkFrameNext 0002                                     ?_cmdBcast 0058  
                                     i1l13031 7D60                                       i1l13043 7D8A  
                                     i1l13035 7D6E                                       i1l13039 7D7C  
                                   ?_cmdGetSF 0001                                     ?_cmdGetTX 0001  
                           _CRC_8BitDataWrite 8D54                                       i2l12371 8928  
                                ?_Default_ISR 0001                                       i2l13461 6D24  
                                     i2l13437 8562                          __size_of_UART1_Write 0044  
                                     i2l13439 8568                                     ?_cmdNaddr 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?_cmdSetSF 0058                                     ?___xxtofl 0002  
                                   ?_cmdSetTX 0058                                 computeFRF@num 002B  
                                   ?_cmdReset 0001                                 appDataInd@ind 0058  
                                  ??_SYS_Init 003A                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                       nwkRouteNormalizeRanks@i 0003  
                         ??_nwkDataReqConfirm 000B                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 04F0                                       _TBLPTRH 003FF7  
                                     _TBLPTRL 003FF6                            ?_CRC_8BitDataWrite 0001  
                                     _SPI1CLK 003D1C                                       _TBLPTRU 003FF8  
                    print_hop_table@atCommand 0058                                       _SPI1RXB 003D10  
                                     _NVMADRH 0039E1                                       _NVMADRL 0039E0  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _NVMCON2 0039E6                             __end_of_cmdGetCAD 8C6C  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                 _cmdGetCADRSSI 8B70  
                           __end_of_cmdGetTTL 8E5A                             __end_of___strtoxl 0F4C  
          __size_of_DATAEE_WriteByte_Platform 0044                             ?_NWK_RouteNextHop 0008  
                         ??_SX1276WriteBuffer 000B                        __size_of_cmdSetCADRSSI 00B0  
                                  cmdBcast@p1 0080                                ??_setFrequency 0027  
                  ?_DATAEE_WriteByte_Platform 0006                             __end_of_cmdSetAES 32E6  
                         ??_UART1_Receive_ISR 0001                                     ?_get_rssi 0001  
                             placeTimer@timer 0002                       __end_of_PHY_TaskHandler 8E3E  
                            ___lomod@dividend 0002                             __end_of_cmdSetTTL 8E54  
                       nwkTxAckReceived@frame 000D                             __end_of_cmdRstCAD 8CCA  
                             ?_SPI1_ReadBlock 0003                               crc16_app@result 0019  
                          ??_NWK_RouteNextHop 000B                                    _computeFRF 3A58  
                          __end_of_UART1_Read 7FAC                                     NWK_Init@i 0006  
                               ?_nwkGroupInit 0001                           ??_CRC_8BitDataWrite 0002  
                     __size_of_nwkRouteRemove 003C                          DATAEE_WriteByte@bAdd 0002  
                            ??_setCodingRate4 0011                          ?_nwkRxServiceDataInd 0058  
                        ??_explicitHeaderMode 0011                                       _TXPower 00F0  
                   __size_of_NWK_OpenEndpoint 0020                     INTERRUPT_Initialize@state 0002  
                           __end_of_enableCrc 8CF2                                    _dwellTimer 0177  
                                   ?_sendInfo 0001                                    _packetRSSI 017A  
                                     __Hparam 0000                              ??_SYS_TimerStart 0012  
             __size_of_queue_serial_led_event 0054                          __size_of_setSyncWord 0010  
                                     __Lparam 0000                      __end_of_UART1_Initialize 6A10  
                      _CircularBufferPushBack 546A                     __end_of_nwkDataReqConfirm 5824  
                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                             ??_SPI1_WriteBlock 0007  
                               ??_cmdGetRxCnt 0004                                    cmdSetAES@i 00A9  
                               ?_PHY_DataConf 0001                                 ?_nwkRxSendAck 002A  
                               ?_nwkTxConfirm 0002                                       cad@RSSI 0012  
                         _nwkDataReqSendFrame 1D4C                                 ??_cmdBootLoad 0058  
                             __size_of___flge 00D0                         ?_nwkRxRejectDuplicate 0012  
                                     ___aodiv 4310                                       ___fladd 1A04  
                                     ___aomod 4846                           nwkRouteRemove@entry 000B  
                    __size_of_NWK_TaskHandler 000E                                       _cadDone 017E  
                   __end_of_SX1276WriteBuffer 890A                                    cmdSetSF@p1 0080  
                             __size_of___lmul 005E                                    cmdSetSF@p2 0085  
                             __size_of___omul 009A                                       ___flmul 1312  
                                     ___fltol 609C                   __size_of_CircularBufferSize 005E  
                                     ___lldiv 7084                               __size_of___wmul 002E  
                                     ___lodiv 5AC8                                       ___llmod 7512  
                             __size_of_cmdMac 004E                        __size_of_SYS_TimerInit 000C  
                                     ___lomod 6478                                    cmdSetTX@p1 0082  
                                  cmdSetTX@p2 0080                         nwkRxIndicateFrame@ind 00D2  
                   __end_of_UART1_Receive_ISR 6D2A                                     ?_vfprintf 004E  
                                  cmdSend@cmd 0058                                       cad@temp 0014  
                        __size_of_PHY_DataInd 012C                      __end_of_processATCommand 3EDE  
                        __size_of_PHY_DataReq 005C                                       _cmdAddr 8A1E  
                           cmdSetCADRSSI@temp 0087                                       _aes_key 0148  
                                     _cmdRecv 8E56                                    _current_sf 00F2  
                             _start_radio_cad 8D64                                       _cmdSend 2826  
                                     _channel 00F1                                       __pcinit 65EC  
                             __size_of_memcpy 0072                               __size_of_memset 0154  
                                     __ramtop 1000                     __end_of_CRC_8BitDataWrite 8D64  
                 __size_of_UART1_Transmit_ISR 0038                       __size_of_PHY_SetChannel 003E  
                              ??_nwkFrameFree 0004                                       __ptext0 8824  
                                     __ptext1 3D62                                       __ptext2 7C06  
                                     __ptext3 83AA                                       __ptext4 8572  
                                     __ptext5 79E4                                       __ptext6 546A  
                                     __ptext7 00B2                                       __ptext8 8D04  
                                     __ptext9 5824                                ??_nwkFrameInit 0002  
                              ??_nwkFrameNext 0004                               __size_of_printf 0022  
                                     _get_lqi 6B5A                      SPI1_WriteBlock@blockSize 0005  
                                     _fhssReg 0500                             __end_of_initRadio 4310  
                                     cmdMac@i 0059                               __CFG_WRTAPP$OFF 000000  
                             __size_of_strchr 0084                               __size_of_strlen 0050  
                                  ??_cmdBcast 005A                               __size_of_strtok 00DC  
                             __size_of_strspn 0060                               __size_of_strtol 003E  
                             __size_of_strstr 00D8                                    ??_cmdGetSF 0058  
                                  ??_cmdGetTX 0058                         _OSCILLATOR_Initialize 8C9C  
                               ?_nwkRouteInit 0001                                 ??_cmdSetNaddr 005A  
                                __size_of_cad 00C0                                  __size_of_abs 003E  
                                  ??_cmdNaddr 0058                                    _placeTimer 38B8  
                                __size_of_pad 00B6                                       _isalpha 86B2  
                                     _isdigit 86E6                                 ??_cmdSendSink 0004  
                                  ??_cmdSetSF 005A                                    ??___xxtofl 0006  
                          _NWK_RouteFindEntry 7798                                       _net_key 0214  
                                  ??_cmdSetTX 005A                                       _receive 82B6  
                                  ??_cmdReset 0002                      nwkFrameCommandInit@frame 0002  
        ??strspn@nwkFrame@nwkFramePayloadSize 0004           ?strspn@nwkFrame@nwkFramePayloadSize 0002  
                             _radio_state_var 0176                                       _islower 864A  
                    ??_PIN_MANAGER_Initialize 0002                                       _isspace 8078  
                             __CFG_WRTSAF$OFF 000000                                   ?_cmdGetRFCH 0001  
                                     _isupper 867E                                ?_cmdGetCADRSSI 0001  
                           ?_executeATCommand 00AA                                 ??_appDataConf 0009  
           __size_of_nwkRxHandleReceivedFrame 036E                          __end_of_radio_engine 4CF4  
                                 ?_cmdGetMode 0001                     ?_nwkRxHandleReceivedFrame 0029  
                                     _uartmsg 0158                                       atoi@neg 000F  
                        ?_nwkDataReqSendFrame 002A                                 ?_PHY_SetPanId 0002  
                          _NWK_RouteFreeEntry 85A8                       __size_of_PHY_SetRxState 0008  
                                     _tx_done 0181                    __size_of_SYSTEM_Initialize 0022  
                          ??_executeATCommand 00AC                                       _strcspn 7924  
                                     _strncmp 4E16                                       _toupper 7CAE  
                                  ??_get_rssi 0002                           SYS_TimerStart@timer 0010  
                        end_of_initialization 669A                           ?_NWK_RouteFindEntry 0002  
                                     _strtoul 7F20                                   ?_cmdSetRFCH 0058  
                                   _SCANHADRH 00397A                                     _SCANHADRL 003979  
                                   _SCANHADRU 00397B                           __implicitHeaderMode 0180  
                              ??_nwkGroupInit 0002                          __size_of_NWK_DataReq 0080  
           __end_of_DATAEE_WriteByte_Platform 7FF0                                   ?_cmdSetAddr 0058  
                                   _SCANLADRH 003977                                     _SCANLADRL 003976  
                                 ?_cmdSetBaud 003A                                     _SCANLADRU 003978  
        nwkRxDuplicateRejectionTimerHandler@i 0015                                   ?_cmdSetSink 0001  
                           queueLedEvent@temp 001F                                ___omul@product 0012  
                       ??_nwkRxServiceDataInd 0059                                       memcpy@d 000F  
                                     memcpy@n 000C                                       memcpy@s 0011  
                                     fputc@fp 0006                                   ?_appDataInd 0058  
                                     memset@c 0004                                       memset@k 000A  
                                     memset@n 0006                                       memset@s 000C  
         __end_of_UART1_SetTxInterruptHandler 8DAC                   _UART1_SetTxInterruptHandler 8D9E  
                                     fputs@fp 000F                                     i1u1266_28 8A8C  
                 CRC_CalculatedResultGet@mask 000E                           ?_NWK_RouteFreeEntry 0002  
                           __end_of_nwkRxInit 7ED6                            _nwkRxIndicateFrame 32E6  
                 nwkTxDelayTimerHandler@frame 0017                             __end_of_nwkTxInit 80FE  
                                  _setTxPower 87FA                                     i2u1270_48 6CBC  
                                   i2u1270_49 6CCE                                     i2u1272_48 6CE8  
                                   i2u1272_49 6CFA                                     i2u1274_48 6D10  
                       NWK_RouteNewEntry@iter 0007                           nwkRxSendAck@command 002C  
                                   i2u1276_48 8AAE                   nwkTxDelayTimerHandler@timer 0012  
                                   i2u1278_48 8ACE                                    ??_sendInfo 0058  
                        __size_of_NWK_SetAddr 001E                ??_UART1_SetOverrunErrorHandler 0004  
                             ___lldiv@divisor 001A                               ___lldiv@counter 0022  
                 __end_of_CircularBufferSpace 85A8                                ??_PHY_DataConf 0005  
                              ??_nwkRxSendAck 002C                                ??_nwkTxConfirm 0005  
                    ??_nwkRouteNormalizeRanks 0002                             __end_of_vfpfcnvrt 0B1E  
                                  _nwkTxFrame 3BE2                                    _set_parity 7984  
                                   _SPI1TCNTL 003D12                           ?_nwkRxIndicateFrame 00C4  
                 __size_of_implicitHeaderMode 0018                                       postdec1 003FE5  
                                     postdec2 003FDD                                     _SPI1SSPPS 003AE0  
                               _cmdSetCADRSSI 68B6                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                       nwkDataReqTxConf@frame 0004                          ??_NWK_RouteFindEntry 0005  
                      __size_of_Timer0Handler 0050                                    ??_vfprintf 0053  
                   __size_of_nwkDataReqTxConf 00A8                                       strchr@c 0004  
                           UART1_Write@txData 0002                           _UART1_RxDataHandler 890A  
                                     strchr@s 0002                         __CFG_WDTCPS$WDTCPS_31 000000  
                  __end_of_getSignalBandwidth 4E16                                       strlen@a 0004  
                           initRadio@wideRSSI 0038                    __end_of_setSignalBandwidth 1312  
                                     strlen@s 0002                         nwkTxTaskHandler@frame 0016  
                    ?_CRC_CalculatedResultGet 0009                             ?_nwkRxTaskHandler 0001  
                  nwkRxHandleIndication@frame 00DE                                       strspn@c 000A  
                                     strspn@i 000D                                       strtok@p 0167  
                                     strtok@s 000F                                       strtol@s 0034  
                                     strspn@s 0008                                       strstr@h 000D  
                    _TMR0_SetInterruptHandler 8DE4                                       strstr@n 000F  
                                   _PORTBbits 003FCB                          ??_NWK_RouteFreeEntry 0004  
                         __end_of_cmdGetRxCnt 8E5C                                ??_nwkRouteInit 0002  
                           ??_print_hop_table 0080                           __end_of_cmdBootLoad 841E  
                          ??_nwkRxTaskHandler 01FE                                    _test_timer 01EB  
                                 ___fladd@grs 0038                        _queue_serial_led_event 7C06  
                              cmdSetRFCH@temp 0087                         setFrequency@frequency 0023  
                               ___xxtofl@sign 000A                           SPI1_ReadBlock@block 0003  
                                   _TRISBbits 003FC3                                ??_PHY_SetPanId 0004  
                       ??_nwkDataReqSendFrame 002C                                  strtol@endptr 0035  
                       __end_of_queueLedEvent 83E4                          ??_nwkRxIndicateFrame 00C6  
                         _nwkFrameCommandInit 813E                                 ?_NWK_SetPanId 0004  
                           placeTimer@timeout 0008                         nwkRxRejectDuplicate@i 0019  
                     nwkTxAckReceived@command 000B                                 _SYS_TimerInit 8DFE  
                            __CFG_FEXTOSC$OFF 000000                      __end_of_DATAEE_WriteByte 813E  
                         __end_of_cmdSetNaddr 74A0                          ?_UART1_RxDataHandler 0001  
                            ?_PHY_TaskHandler 0001                           __end_of_cmdSendSink 8E56  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                                   ___flmul@grs 001E  
                     _nwkRxIndicateFrame$5172 00CA                       _nwkRxIndicateFrame$5173 00CB  
                     _nwkRxIndicateFrame$5174 00CC                       _nwkRxIndicateFrame$5175 00CD  
                     _nwkRxIndicateFrame$5176 00CE                       _nwkRxIndicateFrame$5177 00CF  
                         __end_of_appDataConf 8994                __size_of_nwkRouteErrorReceived 005C  
                       setSignalBandwidth@sbw 0023                               _SPI1_Initialize 8BF2  
               __end_of_nwkRouteErrorReceived 7B58                          print_hop_table@entry 005A  
                            ??_free_tx_buffer 0004                             _nwkTxAckWaitTimer 0198  
                           get_rssi@temp_rssi 0003                      ??_nwkTxDelayTimerHandler 0014  
                     __end_of_start_radio_cad 8D74                        ??_nwkRxRejectDuplicate 0014  
                  __size_of_nwkDataReqConfirm 00E8                          _timer0ReloadVal16bit 01F7  
                              ?_cmdSetCADRSSI 0058                           __size_of_cmdGetRFCH 001C  
                       CircularBufferSize@ctx 0002                          ?_nwkFrameCommandInit 0002  
                    __end_of_CRC_ReverseValue 7BB0                           __size_of_cmdGetMode 0010  
                  __size_of_SX1276WriteBuffer 0024                             ?_SX1276ReadBuffer 0009  
                              _set_timer0base 8A3E                  __end_of_INTERRUPT_Initialize 81BE  
                     queue_serial_led_event@i 0022                       nwkRouteRemove@multicast 000A  
                            _PHY_SetShortAddr 8E5E                                __end_of___flge 5FD0  
                  __size_of_UART1_Receive_ISR 0098                          __end_of_setFrequency 4BD0  
                              __end_of___lmul 7AA0                                __end_of___omul 6C92  
                                 vfpfcnvrt@ap 0049                                   vfpfcnvrt@cp 0069  
                                 vfpfcnvrt@fp 0046                                   vfpfcnvrt@ll 0060  
                              __end_of___wmul 877A                              ??_nwkDataReqInit 0002  
                              __end_of_cmdMac 7DEE                            ??_SX1276ReadBuffer 000C  
                      __size_of_nwkFrameAlloc 00B4                           __size_of_cmdSetRFCH 00A2  
             CircularBufferPushBack@write_pos 001A                             __size_of_TMR0_ISR 0022  
                  __size_of_CRC_8BitDataWrite 0010                           __size_of_cmdSetAddr 0092  
                         __size_of_cmdSetBaud 006C                             __size_of_PHY_Init 0006  
                              __end_of_memcpy 7512                        ?_OSCILLATOR_Initialize 0001  
                         __size_of_cmdSetSink 0010                                __end_of_memset 45BC  
                   __size_of_nwkTxAckReceived 00C0                                SX1276Read@addr 000D  
                             setFrequency@num 002B                                SX1276Read@data 000E  
                         __size_of_appDataInd 0082                            NWK_RouteNewEntry@i 0006  
                           __size_of_NWK_Init 0056                             ??_NWK_TaskHandler 005E  
                              __end_of_printf 8972                           _nwkTxBroadcastFrame 4702  
                               ??_loadMACAddr 0006                               ??_cmdGetCADRSSI 0058  
                                 ?_placeTimer 0002                                __end_of_strchr 721A  
                              __end_of_strlen 7D50                                __end_of_strtok 5C82  
                              __end_of_strspn 7924                                __end_of_strtol 81FC  
                              __end_of_strstr 5D5A                           start_initialization 65EC  
                             ___lodiv@divisor 000A                               ___lodiv@counter 001A  
                    __size_of_TMR0_Initialize 003E                         _nwkTxConvertPhyStatus 8492  
             __size_of_PIN_MANAGER_Initialize 0088                             cmdSetAES@key_type 00A5  
                              ??_NWK_SetPanId 0006                                   __end_of_cad 63B8  
                                 __end_of_abs 82B6                                 nwkFrameInit@i 0002  
                                 __end_of_pad 65EC                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0004                                ?_SYS_TimerInit 0001  
                       _nwkRouteFrameReceived 36D6                       __size_of_CRC_Initialize 006C  
                     ?_nwkRouteSendRouteError 002A                      __size_of_SYS_TaskHandler 000E  
                           __size_of_SYS_Init 000E                         ??_UART1_RxDataHandler 0001  
                               _Timer0Handler 7D50                                   putch@txData 0003  
                                  ivt0x8_base 0008                 __size_of_SYS_TimerTaskHandler 011A  
                     NWK_RouteFreeEntry@entry 0002                             ?_SYS_TimerStarted 0002  
                              _nwkRouteRemove 836E                                 _uart1RxBuffer 0138  
                                _msgIDCounter 0182                   __end_of_bootLoadApplication 2826  
                          ??_SYS_TimerStarted 0004                             ___omul@multiplier 0002  
                               _uart1TxBuffer 0300                              _NWK_OpenEndpoint 8A5E  
                             ___llmod@divisor 0006                          __end_of_nwkFrameFree 8BA4  
                        __end_of_nwkFrameInit 89B6                     __size_of_DIO0_Receive_ISR 0096  
                                 ?_setTxPower 0001                          __end_of_nwkFrameNext 7084  
                        ?_nwkTxBroadcastFrame 0024                               ___llmod@counter 000A  
                         DATAEE_ReadByte@bAdd 0002                                cmdSetNaddr@cmd 0058  
                      nwkRouteFrameSent@frame 0008                                 crc16_app@dptr 0013  
                      nwkRouteFrameSent@entry 000C                                 crc16_app@seed 0017  
                            __CFG_LPBOREN$OFF 000000                             _nwkRouteFrameSent 5650  
                      __end_of_set_timer0base 8A5E                                   ___strtoxl@a 002D  
                                 ___strtoxl@c 0033                                   ___strtoxl@s 0010  
                       ??_nwkFrameCommandInit 0004                               NWK_SetAddr@addr 0004  
                                 vfprintf@fmt 0050                                   ?_nwkTxFrame 0024  
                           nwkRouteRemove@dst 0008                                   ?_set_parity 0001  
             __end_of_CRC_CalculatedResultGet 5F00                                      ??___flge 0018  
               nwkTxDelayTimerHandler@restart 0016                              ??_PMD_Initialize 0002  
             __size_of_nwkRouteNormalizeRanks 003A                                      ??___lmul 000A  
                                    ??___omul 0012                                   _cmdGetRxCnt 8E5A  
                                    ??___wmul 0006               CRC_CalculatedResultGet@xorValue 0009  
                                    ??_cmdMac 0058                            ?_nwkRouteFrameSent 0008  
                                 _cmdBootLoad 83E4                      _nwkTxAckWaitTimerHandler 6E52  
                             ___strtoxl@limit 0027                        __size_of_TMR0_CallBack 0020  
                           NWK_SetPanId@panId 0004                                  cmdSetAES@cmd 0058  
                                 __pdataBANK0 00FB                                   __pdataBANK1 01D5  
                       CRC_8BitDataWrite@data 0002                                      ??_memcpy 000E  
                           SYS_TimerStarted@t 0004                                      ??_memset 0008  
                              cmdSendSink@cmd 0002                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 81FC                          __end_of_nwkGroupInit 88C2  
                                  memset@dest 0002                                      ??_printf 0055  
                         __size_of_computeFRF 018A                             ?_nwkTxTaskHandler 0001  
                              _uart_baud_rate 0189                                      ??_strchr 0006  
                       __size_of_radio_engine 0124                                      ??_strlen 0004  
                                    ??_strtok 0013                                      ??_strtol 0038  
                                    ??_strspn 000C                                      ??_strstr 0011  
                         ??_nwkRouteFrameSent 000A                                     ___fladd@a 002D  
                                   ___fladd@b 0029                                  cmdSetRFCH@p1 0080  
                                cmdSetRFCH@p2 0085                         PHY_SetChannel@channel 002F  
                              _symbolDuration 015E                                   __pbssBIGRAM 05BD  
                          ??_nwkTxTaskHandler 0014                                   _cmdSetNaddr 7422  
                                   ___flmul@a 0014                                     ___flmul@b 0010  
                                 __pbssCOMRAM 005E                                set_uart_baud@i 0004  
                                 _cmdSendSink 8E54                              ??_SPI1_ReadBlock 0007  
                          _UART1_ErrorHandler 01EF                                 __pcstackBANK0 0060  
                               __pcstackBANK1 01FE                                 __pcstackBANK2 02DA  
                                cmdSetSF@temp 0087                __end_of_nwkRouteSendRouteError 5AC8  
                     nwkRoutePrepareTx@header 0011                          setSpreadingFactor@sf 002B  
                            ___aodiv@dividend 0002                             __size_of_cmdBcast 0208  
                           __size_of_cmdGetSF 0018                                   _CRCCON0bits 003968  
                                 _CRCCON1bits 003969                             __size_of_cmdGetTX 0018  
                   bootLoadApplication@buf_id 0032                                  cmdSetAddr@p1 0082  
                                cmdSetAddr@p2 0080                         _nwkDataReqTaskHandler 7320  
                         cmdSetBaud@atCommand 003A                                     _crc16_app 721A  
                           __size_of_cmdNaddr 0018                          __end_of_PHY_DataConf 8458  
                              _PHY_SetRxState 8E2A                          __end_of_nwkRxSendAck 546A  
                                 _appDataConf 8972                          __end_of_nwkTxConfirm 88E6  
                                cmdSetTTL@cmd 0002                             __size_of___xxtofl 0164  
                           __size_of_cmdSetSF 00B0                             __size_of_cmdSetTX 00E2  
                              ?_Timer0Handler 0001                       __end_of_SPI1_Initialize 8C0C  
                    _UART1_RxInterruptHandler 01FB                             __size_of_cmdReset 0004  
                      __end_of_nwkRouteRemove 83AA                 nwkRxHandleReceivedFrame@frame 0029  
                 __size_of_get_free_tx_buffer 0062                       nwkRxIndicateFrame@frame 00C4  
                 __size_of_getSpreadingFactor 001A                     SYS_TimerTaskHandler@timer 0022  
                 __size_of_setSpreadingFactor 0102                                  cmdSetTX@temp 0084  
                 ??_DATAEE_WriteByte_Platform 0009                           __end_of_loadMACAddr 836E  
           __size_of_DATAEE_ReadByte_Platform 00F2                       CRC_ReverseValue@reverse 0005  
                             _SPI1_WriteBlock 8614                                     _atCommand 0224  
                   ?_DATAEE_ReadByte_Platform 0006                                  _currentAddr0 01EE  
                                _currentAddr1 01ED                                 _nwkFrameAlloc 66A0  
                                   _cmdGetCAD 8C54                                 setSyncWord@sw 0011  
                           _nwkRoutePrepareTx 515E                           _nwkTxPhyActiveFrame 016B  
                                _currentNetID 00FC                                     _cmdGetTTL 8E58  
                                   ___strtoxl 0B1E                                  _currentMsgID 0186  
                           __size_of_get_rssi 002A                         ??_nwkTxBroadcastFrame 0026  
                     ?_CircularBufferPushBack 0013                                     _cmdSetAES 30E6  
                ?_UART1_SetRxInterruptHandler 0002               nwkRouteSendRouteError@multicast 002E  
                                   _cmdSetTTL 8E52                         _TMR0_InterruptHandler 01F5  
                          ?_nwkRoutePrepareTx 000D                     __end_of_nwkRouteFrameSent 573C  
                                   _atoi$7722 0011                                     _atoi$7723 0015  
                                   _atoi$7724 0013                                     _cmdRstCAD 8CB4  
                                   __pnvBANK1 01EF                          __end_of_nwkRouteInit 7E8A  
                             ??_cmdSetCADRSSI 005A                                _ATTimeoutTimer 00FD  
                         __size_of_placeTimer 01A0                        _PIN_MANAGER_Initialize 710E  
                                   _dtoa$7219 0031                              ?_start_radio_cad 0001  
                             ?_set_timer0base 0002               __size_of_nwkTxDelayTimerHandler 008C  
                           ?_UART1_Initialize 0001                     __size_of_NWK_RouteNextHop 004A  
        __end_of_UART1_SetFramingErrorHandler 8DD6         __size_of_UART1_SetFramingErrorHandler 000E  
                _UART1_SetFramingErrorHandler 8DC8                             __size_of_sendInfo 0068  
                                _radio_engine 4BD0                          __end_of_PHY_SetPanId 8E5E  
                               __pmediumconst FCB2                                     _enableCrc 8CE0  
                                    ?___aodiv 0002                                      ?___fladd 0029  
                                    ?___aomod 0002                           UART1_Read@readValue 0002  
                         ??_nwkRoutePrepareTx 000F                                     __ptext100 8458  
                                   __ptext101 6A10                                 nwkGroupInit@i 0002  
                                   __ptext110 7FF0                                     __ptext102 7AA0  
                            ___aodiv@quotient 0014                                     __ptext111 36D6  
                                   __ptext103 8DF2                                     __ptext200 7E8A  
                                   __ptext120 6FFA                                     __ptext112 6230  
                                   __ptext104 6754                                     __ptext201 8A5E  
                                   __ptext121 7AFC                                     __ptext113 6166  
                                   __ptext105 1696                                     __ptext210 8DBA  
                                   __ptext202 7E3C                                     __ptext130 867E  
                                   __ptext122 836E                                     __ptext114 536E  
                                   __ptext106 4702                                     __ptext211 8DC8  
                                   __ptext203 889C                                     __ptext131 86B2  
                                   __ptext123 85A8                                     __ptext115 32E6  
                                   __ptext107 2A98                                     __ptext220 76C4  
                                   __ptext212 8DD6                                     __ptext204 8994  
                                   __ptext140 7658                                     __ptext132 2CCA  
                                   __ptext124 8950                                     __ptext116 87D0  
                                   __ptext108 884C                                     __ptext221 89FC  
                                   __ptext213 82F4                                     __ptext205 8E0A  
                                   __ptext141 8E20                                     __ptext133 6478  
                                   __ptext125 7862                                     __ptext117 729E  
                                   __ptext109 38B8                                     __ptext230 8E66  
                                   __ptext222 8A7E                                     __ptext214 8DE4  
                                   __ptext206 89B6                                     __ptext150 5D5A  
                                   __ptext142 8034                                     __ptext134 5AC8  
                                   __ptext126 062E                                     __ptext118 75EC  
                                   __ptext231 8E68                                     __ptext223 8E60  
                                   __ptext215 8BF2                                     __ptext207 6966  
                                   __ptext151 59E8                                     __ptext143 8278  
                                   __ptext135 45BC                                     __ptext127 232E  
                                   __ptext119 63B8                                     __ptext232 8E44  
                                   __ptext224 7D50                                     __ptext216 89D8  
                                   __ptext208 8D9E                                     __ptext160 7ED6  
                                   __ptext152 813E                                     __ptext144 4846  
                                   __ptext136 207E                                     __ptext128 7CAE  
                                   __ptext233 890A                                     __ptext225 8E64  
                                   __ptext217 710E                                     __ptext209 8DAC  
                                   __ptext161 7798                                     __ptext153 8B8A  
                                   __ptext145 4310                                     __ptext137 6536  
                                   __ptext129 864A                                     __ptext234 0000  
                                   __ptext226 8AA0                                     __ptext218 8C9C  
                                   __ptext170 8DFE                                     __ptext162 871A  
                                   __ptext154 7320                                     __ptext146 3EDE  
                                   __ptext138 7D00                                     __ptext227 853A  
                                   __ptext219 817E                                     __ptext171 8E3E  
                                   __ptext163 66A0                                     __ptext155 1D4C  
                                   __ptext147 8078                                     __ptext139 823A  
                                   __ptext228 8AC0                                     __ptext180 5F00  
                                   __ptext172 41B2                                     __ptext164 4468  
                                   __ptext156 3BE2                                     __ptext148 86E6  
                                   __ptext229 6C92                                     __ptext181 8BBE  
                                   __ptext173 84CA                                     __ptext165 74A0  
                                   __ptext157 5050                                     __ptext149 874C  
                                   __ptext190 8614                                     __ptext182 4AA6  
                                   __ptext174 87FA                                     __ptext166 573C  
                                   __ptext158 6BF8                                     __ptext191 8CCA  
                                   __ptext183 85DE                                     __ptext175 526C  
                                   __ptext167 8972                                     __ptext159 515E  
                                   __ptext192 8874                                     __ptext184 82B6  
                                   __ptext176 0F4C                                     __ptext168 7DEE  
                                   __ptext193 8502                                     __ptext185 8C6C  
                                   __ptext177 8BA4                                     __ptext169 8D90  
                                   __ptext194 8BD8                                     __ptext186 8C84  
                                   __ptext178 4CF4                                     __ptext195 3A58  
                                   __ptext187 8CE0                                     __ptext179 404E  
                                   __ptext196 7512                                     __ptext188 8CF2  
                                   __ptext197 7084                                     __ptext189 88E6  
                      __end_of_PHY_SetChannel 823A                                     __ptext198 7BB0  
                      __size_of_set_uart_baud 00CC                                     __ptext199 80BC  
                                    ?___flmul 0010                                      ?___fltol 0039  
                                    ?___lldiv 0016                                      ?___lodiv 0002  
                                    ?___llmod 0002                                      ?___lomod 0002  
                          ??_UART1_Initialize 0004                              _nwkDataReqTxConf 6A10  
                                    ?_cmdAddr 0001                         NWK_RouteNextHop@entry 000B  
                                    ?_cmdRecv 0001                                      ?_cmdSend 0058  
                            _uart1RxLastError 0174                             ?_processATCommand 0001  
                               ??_UART1_Write 0002                             __size_of_vfprintf 0062  
                                    ?_get_lqi 0001                        __size_of_nwkRouteFrame 00D6  
                          ??_processATCommand 00AE                               ___lomod@divisor 000A  
                      __CFG_BBSIZE$BBSIZE_512 000000                         _nwkRxHandleIndication 6166  
                                   _fhssdebug 0178                               ___lomod@counter 0012  
    __end_of_UART1_DefaultOverrunErrorHandler 8E68     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 8E66                                      ?_isalpha 0002  
                                    ?_isdigit 0002                           __size_of_setTxPower 002A  
                      ?_nwkTxConvertPhyStatus 0001                        __end_of_PHY_SetRxState 8E32  
                                    ?_receive 0001                               ??_SYS_TimerInit 0002  
                                ??_cmdGetRFCH 0058                                      ?_islower 0002  
                                    ?_isspace 0002                                      ?_isupper 0002  
                      ?_nwkRouteFrameReceived 000B                           __end_of_SX1276Write 8D04  
                                ??_cmdGetMode 0058                        _nwkRouteNormalizeRanks 8458  
                                   _initRadio 41B2                                    ?_crc16_app 0013  
                       DIA_ReadByte@flashAddr 0002                                     cmdSend@p1 0089  
                                   cmdSend@p2 0087                           __size_of_nwkTxFrame 0180  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                         __size_of_set_parity 0060                                 _TMR0_CallBack 8A7E  
                   __end_of_nwkRoutePrepareTx 526C                                __size_of_fputc 006C  
                              __size_of_fputs 003E                     nwkRxRejectDuplicate@shift 0018  
                                    ?_strcspn 0008                      __size_of_DATAEE_ReadByte 001E  
                                    ?_strncmp 0002                                      ?_toupper 0008  
                                 _U1ERRIRbits 003DF9                                  ??_cmdSetRFCH 005A  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                                    ?_strtoul 0034                                __size_of_putch 000A  
                                ??_cmdSetAddr 005A                                  ??_cmdSetBaud 003C  
                        _INTERRUPT_Initialize 817E                                      _U1CTSPPS 003AE6  
                            __cadBackoffTimer 00F9                __end_of_CircularBufferPushBack 555E  
                                ??_cmdSetSink 0058                                    ?_cmdGetCAD 0001  
                        SX1276ReadBuffer@addr 000C                           ___strtoxl@conv_done 0026  
                                  ?_cmdGetTTL 0001                                    ?___strtoxl 0010  
                                ??_appDataInd 0059                                    nwkRxInit@i 0005  
                           ??_TMR0_Initialize 0004                       __size_of_get_timer0base 002C  
                        SX1276ReadBuffer@size 000B                                 ??_setSyncWord 0011  
                           free_tx_buffer@req 0002                                ___wmul@product 0006  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0002  
                                    _LATCbits 003FBC      nwkRxDuplicateRejectionTimerHandler@timer 0012  
                 __size_of_explicitHeaderMode 0018                                    ?_cmdSetAES 0058  
                                    _SCANCON0 00397C                                      _EUIDbyte 01B2  
                                  ?_cmdSetTTL 0002                                   _ledTimerVar 016D  
                           ??_SYS_TaskHandler 005E                                    ?_cmdRstCAD 0001  
                                    _IPR3bits 003983                                      _SCANTRIG 00397D  
                                    _PIE3bits 003993                                appDataConf@req 0007  
                              appDataInd@data 0080                            cmdSetAddr@tempaddr 0084  
                         __CFG_BORV$VBOR_2P45 000000                                   _ledStateVar 0175  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                             _NWK_RouteNewEntry 6230  
                                   _sinkAddr0 0185                                     _sinkAddr1 0184  
               ??_UART1_SetRxInterruptHandler 0004                         __size_of_setFrequency 012A  
                   __size_of_executeATCommand 057C                    ??_TMR0_SetInterruptHandler 0004  
                                    _PIR0bits 0039A0                                     _nwkGroups 0200  
                  __end_of_CircularBufferSize 7A42                   nwkRouteFrameReceived@header 0015  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                               ??_PHY_DataInd 0014                                     _nwkRxInit 7E8A  
                               ??_PHY_DataReq 0014                               _print_hop_table 5824  
                                   _nwkTxInit 80BC                           ___strtoxl@is_signed 0016  
                          ?_NWK_RouteNewEntry 0002                       _eeprom_write_flags_enum 018A  
                              _ATVersionMajor FDC0                          __end_of_NWK_SetPanId 8AFE  
                                  ?_enableCrc 0001                                _ATVersionMinor FDBF  
                     _setSignalBandwidth$8655 002B                            __end_of_cmdGetRFCH 8B56  
                                    _TMR0_ISR 89FC                     _DATAEE_WriteByte_Platform 7FAC  
                             ?_PHY_SetChannel 0001                    __end_of_UART1_Transmit_ISR 8572  
                          __end_of_cmdGetMode 8D44                                      _PHY_Init 8E3E  
               ?_UART1_SetFramingErrorHandler 0002                              initRadio@version 0037  
                                   _vfpfcnvrt 062E                                      _NWK_Init 7BB0  
                                 cmdBcast@cmd 0058                                     _txTimeOut 00F5  
                          SPI1_ReadBlock@data 0007                       ?_queue_serial_led_event 0001  
                                   _xtoa$7247 0032                                     _xtoa$7248 0034  
                          NWK_GroupIsMember@i 0006                            __end_of_cmdSetRFCH 6B5A  
                        free_tx_buffer@buf_id 0006                           ??_NWK_RouteNewEntry 0004  
                           ___wmul@multiplier 0002                              _nwkTxAckReceived 63B8  
                          __end_of_cmdSetAddr 6E52                          getSignalBandwidth@bw 0015  
                          __end_of_cmdSetBaud 75EC             nwkRxHandleReceivedFrame@broadcast 002D  
                          __end_of_cmdSetSink 8D24                        nwkDataReqSendFrame@req 002A  
                                   _tx_buffer 086A                            __end_of_appDataInd 7320  
                        setSignalBandwidth@bw 002F                                   _loadMACAddr 8332  
                             ?_PHY_SetRxState 0001                        ?_nwkDataReqTaskHandler 0001  
                     __end_of_SPI1_WriteBlock 864A                               ??_Timer0Handler 0001  
                      _nwkTxDelayTimerHandler 6F6E                                      _SYS_Init 8D90  
                         __end_of_UART1_Write 8078                         DATAEE_WriteByte@bData 0004  
                               ??_NWK_DataReq 0004                   __end_of_nwkRxServiceDataInd 7658  
                                  ?_initRadio 0001                       __size_of_NWK_RouteTable 000A  
                                _isspace$7749 0008                                _CRC_Initialize 76C4  
                              ?_TMR0_CallBack 0001                                   strtoul@base 0038  
                               _set_uart_baud 5FD0                                    vfpfcnvrt@c 0068  
                            ?_SPI1_Initialize 0001                            _getSignalBandwidth 4CF4  
                          _setSignalBandwidth 0F4C                                   _INTCON0bits 003FD2  
                           ___lmul@multiplier 0002                         __size_of_nwkFrameFree 001A  
                                   copy_data0 6600                                     copy_data1 6622  
                       __size_of_nwkFrameInit 0022                         ?_INTERRUPT_Initialize 0001  
                            get_rssi@rssi_reg 0002                         __size_of_nwkFrameNext 008A  
                 nwkDataReqSendFrame@mcHeader 002D              __size_of_CRC_CalculatedResultGet 00D0  
                    __end_of_PHY_SetShortAddr 8E60                                  ??_computeFRF 0023  
               nwkRxRejectDuplicate@freeEntry 001B                             ?_DATAEE_WriteByte 0002  
                                _setFrequency 4AA6                     __size_of_nwkRxTaskHandler 00B2  
                               ??_NWK_SetAddr 0006                        _uart1TxBufferRemaining 01FD  
                              ___strtoxl$7910 001F                                ___strtoxl$7911 0025  
                              ___strtoxl$7912 0021                                ___strtoxl$7913 0023  
                _nwkRxDuplicateRejectionTable 03C0                  _nwkRxDuplicateRejectionTimer 01A5  
                   __end_of_NWK_RouteNewEntry 62F8                                 _nwkRouteFrame 5D5A  
                          ??_DATAEE_WriteByte 0005                                   _ledtasksbuf 01BE  
                            _DIO0_Receive_ISR 6D2A                                 _nwkRouteTable 0274  
                         ?_getSignalBandwidth 000F                           ?_setSignalBandwidth 0023  
                  __size_of_nwkRouteFrameSent 00EC                                 ?_cmdSetParity 0058  
                                _uart1RxCount 00EC                    __end_of_implicitHeaderMode 8C84  
                                    __Hrparam 0000                        __end_of_ATVersionMajor FDC1  
                      __end_of_ATVersionMinor FDC0                             computeFRF@num_mod 0027  
                                   memcpy@tmp 000E                                    ?_nwkRxInit 0001  
                                  vfprintf@ap 0052                                      __Lrparam 0000  
                                  vfprintf@fp 004E                                    ?_nwkTxInit 0001  
                             _NWK_TaskHandler 8D82                         __size_of_nwkGroupInit 0026  
                          __CFG_BOREN$SBORDIS 000000                                ___strtoxl@base 0014  
                             _nwkRxAckControl 0173                                   cmdSetAES@p1 00A7  
                                 cmdSetAES@p2 00A0                           __end_of_setSyncWord 8D34  
                              ___strtoxl@sign 002B                                ___strtoxl@skip 002C  
                          cmdSetCADRSSI@CHstr 0082                       ??_OSCILLATOR_Initialize 0002  
                           ?_CRC_ReverseValue 0002                       __size_of_setCodingRate4 0036  
                           appDataInd@dataptr 00C1                __end_of_queue_serial_led_event 7C5A  
                            __size_of___aodiv 0158                              __size_of___fladd 0348  
                nwkRouteErrorReceived@command 000F                              __size_of___aomod 0134  
                 __size_of_NWK_RouteFindEntry 0068                              __size_of___flmul 0384  
                            __size_of___fltol 00CA                  DATAEE_ReadByte_Platform@addr 0006  
                            __size_of___lldiv 008A                              __size_of___lodiv 00DE  
                            __size_of___llmod 006E                      processATCommand@data_851 00B0  
                            __size_of___lomod 00BE                                    ?_vfpfcnvrt 0046  
                       SYS_TimerStarted@timer 0002                         nwkRxTaskHandler@frame 02DA  
                __size_of_CircularBufferSpace 0036                              __size_of_cmdAddr 0020  
                          ??_CRC_ReverseValue 0004   __end_of_nwkRxDuplicateRejectionTimerHandler 7CAE  
__size_of_nwkRxDuplicateRejectionTimerHandler 0054         ??_nwkRxDuplicateRejectionTimerHandler 0014  
        ?_nwkRxDuplicateRejectionTimerHandler 0012           _nwkRxDuplicateRejectionTimerHandler 7C5A  
                      nwkRoutePrepareTx@frame 000D                               ___aodiv@divisor 000A  
                                 _SX1276Write 8CF2                           __end_of_PHY_DataInd 4AA6  
                      ?_nwkRxHandleIndication 00DE                           __end_of_PHY_DataReq 7AFC  
                            __size_of_cmdRecv 0002                              __size_of_cmdSend 0272  
                 __end_of_nwkDataReqSendFrame 207E                           NWK_LinearizeLqi@val FDAF  
                             ___aodiv@counter 0012                                   cmdSetTX@cmd 0058  
                     __size_of_SYS_TimerStart 0028                          ??_getSignalBandwidth 0013  
                 __size_of_NWK_RouteFreeEntry 0036                      __end_of_NWK_OpenEndpoint 8A7E  
                        ??_setSignalBandwidth 0027                            __end_of_computeFRF 3BE2  
                       __size_of_PHY_DataConf 003A                         __size_of_nwkRxSendAck 00FC  
                       __size_of_nwkTxConfirm 0024                      _nwkRxHandleReceivedFrame 1696  
                                    _cmdBcast 2EDE                                  _nwkFrameFree 8B8A  
        __size_of_UART1_SetRxInterruptHandler 000E                                  _nwkFrameInit 8994  
                                    _cmdGetSF 8C3C                                  ??_placeTimer 0004  
                                    _cmdGetTX 8C24                                  _nwkFrameNext 6FFA  
                            __size_of_get_lqi 009E                                   _currentMode 0183  
                                    _cmdNaddr 8C0C                                      ___xxtofl 404E  
                                    _cmdSetSF 6806                        __end_of_CRC_Initialize 7730  
                                    _cmdSetTX 5906                                      _cmdReset 8E4E  
                           _set_hop_table_ttl 8D04                              __size_of_isalpha 0034  
                            __size_of_isdigit 0034                                      __pivt0x8 0008  
                            __size_of_receive 003E                   nwkRouteSendRouteError@frame 0031  
                                 ??_crc16_app 0019                              __size_of_islower 0034  
                              ?_set_uart_baud 0001                              __size_of_isspace 0044  
                               ?_DIA_ReadByte 0002                               ??_nwkFrameAlloc 0010  
                   __size_of_SX1276ReadBuffer 0028                                      __ptext10 8E16  
                                    __ptext11 5906                                      __ptext20 81BE  
                                    __ptext12 8E52                                      __ptext21 7580  
                                    __ptext13 8D14                                      __ptext30 0B1E  
                                    __ptext22 5BA6                                      __ptext14 6806  
                                    __ptext31 7A42                                      __ptext23 78C4  
                                    __ptext15 6AB8                                      __ptext40 8E58  
                                    __ptext32 8CB4                                      __ptext24 7924  
                                    __ptext16 6EE2                                      __ptext41 8C3C  
                                    __ptext33 8E4E                                      __ptext25 6DC0  
                                    __ptext17 7422                                      __ptext50 4E16  
                                    __ptext42 8E5A                                      __ptext34 8E56  
                                    __ptext26 30E6                                      __ptext18 8D24  
                                    __ptext51 7196                                      __ptext43 8B3A  
                                    __ptext35 8C0C                                      __ptext27 8E54  
                                    __ptext19 68B6                                      __ptext60 8332  
                                    __ptext52 7800                                      __ptext44 8D34  
                                    __ptext36 7DA0                                      __ptext28 2826  
                                    __ptext61 892E                                      __ptext53 73A2  
                                    __ptext45 8B70                                      __ptext37 8E32  
                                    __ptext29 7F20                                      __ptext70 8AFE  
                                    __ptext62 721A                                      __ptext54 8A1E  
                                    __ptext46 8C54                                      __ptext38 7730  
                                    __ptext71 8E5E                                      __ptext63 5E30  
                                    __ptext55 8D44                                      __ptext47 83E4  
                                    __ptext39 8C24                                      __ptext80 6F6E  
                                    __ptext72 7FAC                                      __ptext64 7B58  
                                    __ptext56 7F66                                      __ptext48 2EDE  
                                    __ptext81 88C2                                      __ptext73 555E  
                                    __ptext65 8D54                                      __ptext57 25AE  
                                    __ptext49 5C82                                      __ptext90 6D2A  
                                    __ptext82 8E38                                      __ptext74 80FE  
                                    __ptext66 8E2A                                      __ptext58 5FD0  
                                    __ptext91 87A6                                      __ptext83 4BD0  
                                    __ptext75 8B1C                                      __ptext67 81FC  
                                    __ptext59 7984                                      __ptext92 6B5A  
                                    __ptext84 62F8                                      __ptext76 8D74  
                                    __ptext68 8AE0                                      __ptext93 609C  
                                    __ptext85 8D64                                      __ptext77 4F36  
                                    __ptext69 8E5C                                      __ptext94 1312  
                                    __ptext86 8A3E                                      __ptext78 6E52  
                                    __ptext95 1A04                                      __ptext87 877A  
                                    __ptext79 7C5A                                      __ptext96 497A  
                                    __ptext88 841E                                      __ptext97 8D82  
                                    __ptext89 8492                                      __ptext98 34E6  
                                    __ptext99 5650                              __size_of_isupper 0034  
                          ?_set_hop_table_ttl 0058                   __size_of_nwkRxIndicateFrame 0200  
                                 appDataInd@i 00C3                    __size_of_nwkRoutePrepareTx 010E  
                        set_hop_table_ttl@cmd 0058                __size_of_UART1_SetErrorHandler 000E  
                                    _get_rssi 87A6                                      _fhssList FCB3  
               __end_of_UART1_SetErrorHandler 8DE4                         __size_of_nwkRouteInit 004E  
                 DATAEE_WriteByte@GIEBitValue 0005                                 nwkRouteInit@i 0002  
                            __size_of_strcspn 0060                              __size_of_strncmp 0120  
                            __size_of_toupper 0052                      nwkTxBroadcastFrame@frame 0024  
                                 ??_cmdGetCAD 0058                              __size_of_strtoul 0046  
                                    _ledtimer 01D3                                      _ledqueue 0400  
                                 ??_cmdGetTTL 0002                                   ??___strtoxl 0017  
                              ?_nwkRouteFrame 0033                       __end_of_print_hop_table 5906  
                                _nwkGroupInit 889C                               cmdSetCADRSSI@p1 0080  
                             cmdSetCADRSSI@p2 0085                                 __size_of_cmdI 0006  
                         __end_of_NWK_DataReq 7422                                 __size_of_idle 000C  
                               __size_of_atoi 0170                                 __size_of_main 0028  
                               __size_of_dtoa 02B0                           ??_set_hop_table_ttl 005A  
                               __size_of_rand 010E                                   ??_cmdSetAES 005A  
                  ??_nwkTxAckWaitTimerHandler 0014                                ??_cmdSetParity 005A  
                               __size_of_stoa 0146                                 __size_of_utoa 0214  
                                ??_setTxPower 0011                                   ??_cmdSetTTL 0004  
                               __size_of_xtoa 0280                         __size_of_PHY_SetPanId 0002  
                                 ??_cmdRstCAD 0058                               cmdSetAES@AESstr 0080  
        __end_of_TMR0_DefaultInterruptHandler 8E62         __size_of_TMR0_DefaultInterruptHandler 0002  
                _TMR0_DefaultInterruptHandler 8E60                             ??_DATAEE_ReadByte 0004  
                        __CFG_WDTCWS$WDTCWS_7 000000                           get_timer0base@timer 0002  
                                    _sendInfo 7730                 DATAEE_WriteByte_Platform@addr 0006  
                __end_of_FirmwareVersionMajor FDBF                 DATAEE_WriteByte_Platform@data 0008  
                                 _IVTLOCKbits 003FD4                            cmdSetBaud@tempbaud 003C  
                __end_of_FirmwareVersionMinor FDBE                           set_timer0base@timer 0002  
                       _nwkRouteErrorReceived 7AFC                        SX1276ReadBuffer@buffer 0009  
                    __size_of_PHY_TaskHandler 0006              nwkRxHandleReceivedFrame@mcHeader 002F  
                                ??_nwkTxFrame 0026                    nwkRouteFrameReceived@frame 000B  
                         sendOKMessage@F16639 01E6                     _UART1_OverrunErrorHandler 01F1  
                         __end_of_NWK_SetAddr 8B1C                            __end_of_placeTimer 3A58  
                                ??_set_parity 0002                              _NWK_RouteNextHop 7ED6  
                                   stoa@F1139 01DF  UART1_SetOverrunErrorHandler@interruptHandler 0002  
                  nwkRouteFrameReceived@entry 0013            __size_of_UART1_DefaultErrorHandler 0006  
                                ?_cmdGetRxCnt 0002                                   ??_enableCrc 0011  
                                _PHY_DataConf 841E                                  _nwkRxSendAck 536E  
                                _nwkTxConfirm 88C2                  __end_of_SYS_TimerTaskHandler 5050  
                   __size_of_SYS_TimerStarted 0044                                  ?_cmdBootLoad 0001  
                  ?_UART1_DefaultErrorHandler 0001                        __size_of_queueLedEvent 003A  
                                  strtol@base 0036                 __size_of_nwkRxRejectDuplicate 0232  
                                    _vfprintf 7862                                     printf@fmt 0076  
               nwkTxAckWaitTimerHandler@frame 0017                             _UART1_is_rx_ready 8D44  
                       cmdSetParity@atCommand 0058                                      _syncList 01D5  
               nwkTxAckWaitTimerHandler@timer 0012                           setFrequency@num_mod 0027  
                                 _UART1_Write 8034              __end_of_DATAEE_ReadByte_Platform 5650  
                            ___aomod@dividend 0002                     __end_of_set_hop_table_ttl 8D14  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0004                   __end_of_UART1_RxDataHandler 892E  
                              _vfpfcnvrt$7262 006C                                  _nwkRouteInit 7E3C  
                                ?_cmdSetNaddr 0058                                   _uart1RxHead 005E  
                                ?_cmdSendSink 0002                     setCodingRate4@denominator 0013  
                             ?_CRC_Initialize 0001                                   _uart1TxHead 00EF  
                             ??_TMR0_CallBack 0001                                   _uart1RxTail 00ED  
                                 _NVMCON1bits 0039E5                                   _phyRxBuffer 0340  
                            ?_SPI1_WriteBlock 0003                                   _uart1TxTail 00EE  
                                    memcpy@d1 0008                            __end_of_setTxPower 8824  
                                    memcpy@s1 000A                                ??_DIA_ReadByte 0006  
                       __end_of_cmdGetCADRSSI 8B8A                                   ??_initRadio 0033  
                        SPI1_WriteBlock@block 0003                                  ?_appDataConf 0007  
                                    isalpha@c 0002                                      isdigit@c 0002  
                      ??_INTERRUPT_Initialize 0002                           DIO0_Receive_ISR@ind 0046  
                         ??_UART1_is_rx_ready 0002                                  _PHY_SetPanId 8E5C  
                                  _SX1276Read 8CCA                            __end_of_nwkTxFrame 3D62  
                          __end_of_set_parity 79E4                      __end_of_nwkDataReqTxConf 6AB8  
                                    intlevel1 0000                                      intlevel2 0000  
                   nwkRouteSendRouteError@dst 002C                     nwkRouteSendRouteError@src 002A  
                              _get_timer0base 877A                     __size_of_nwkTxTaskHandler 01F0  
                      NWK_RouteNewEntry@entry 0009                       __end_of_NWK_TaskHandler 8D90  
                                    islower@c 0002                              ??_set_timer0base 0006  
                                    isspace@c 0002                   __end_of_nwkFrameCommandInit 817E  
                            ___lldiv@dividend 0016                       ?_PIN_MANAGER_Initialize 0001  
                  __size_of_NWK_RouteNewEntry 00C8                                   _setSyncWord 8D24  
                           __CFG_CLKOUTEN$OFF 000000                         __size_of_NWK_SetPanId 001E  
                                    isupper@c 0002                                     strncmp@_l 0002  
                                   strncmp@_r 0004                              _executeATCommand 00B2  
                          get_timer0base@tval 0004                   NWK_RouteFindEntry@multicast 0004  
                      nwkRxServiceDataInd@ind 0058                            set_timer0base@tval 0004  
                     NWK_OpenEndpoint@handler 0002                           _uart1RxStatusBuffer 0128  
               ?_TMR0_DefaultInterruptHandler 0001                                   ??_nwkRxInit 0005  
                                 ??_nwkTxInit 0002                               _nwkTxDelayTimer 018B  
                           _setPreambleLength 8BBE                                   _PHY_DataInd 497A  
                                 _PHY_DataReq 7AA0                          PHY_SetShortAddr@addr 0002  
                __size_of_bootLoadApplication 0278                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                                     strtok@sep 0011  
                                    printf@ap 0057                     __end_of_UART1_is_rx_ready 8D54  
                                  _UART1_Read 7F66  UART1_SetFramingErrorHandler@interruptHandler 0002  
                          ?_setPreambleLength 0011             __end_of_UART1_DefaultErrorHandler 8E4A  
                             ___aomod@divisor 000A                      nwkRouteErrorReceived@ind 000D  
                                 ??_vfpfcnvrt 004A                                      stoa@nuls 0011  
                             ___aomod@counter 0012                           SPI1_WriteBlock@data 0007  
                     ??_nwkTxConvertPhyStatus 0002                       __size_of_free_tx_buffer 004E  
                     ??_nwkRouteFrameReceived 000D                       ?_nwkRouteNormalizeRanks 0001  
      nwkFrame@nwkFramePayloadSize@frame_4725 0002                              ??_nwkRouteRemove 000B  
                            _halTimerIrqCount 016F                           ??_setPreambleLength 0013  
                            ___lldiv@quotient 001E                                   _uart_parity 0188  
                             _TMR0_Initialize 82F4                               ??_set_uart_baud 0002  
                                    strcspn@c 000A                                      strcspn@i 000D  
                                    strcspn@s 0008                             _current_baud_rate 0162  
                  __end_of_get_free_tx_buffer 7862                                      strncmp@l 0009  
                                    strncmp@n 0006                    __end_of_getSpreadingFactor 8BBE  
                                    strncmp@r 000B                                      toupper@c 0008  
                  __end_of_setSpreadingFactor 536E                     __size_of_UART1_Initialize 00AA  
                              _NWK_RouteTable 8E16                      DIO0_Receive_ISR@irqFlags 0045  
                             _SYS_TaskHandler 8D74                                   _NWK_DataReq 73A2  
                                    strstr@nl 0011                       __size_of_nwkDataReqInit 000C  
                                    strtoul@s 0034                       _CRC_CalculatedResultGet 5E30  
                    _UART1_TxInterruptHandler 01F9                   __end_of_nwkTxBroadcastFrame 4846  
                               _queueLedEvent 83AA                                  _NWK_SetPanId 8AE0  
                      __end_of_get_timer0base 87A6                                 ___fladd@signs 0035  
                         __end_of_Default_ISR 8E66                               ??_nwkRouteFrame 0035  
                             cmdSetRFCH@CHstr 0082                     __size_of_processATCommand 017C  
                                ___aodiv@sign 0013                              _nwkRxTaskHandler 6754  
              __end_of_PIN_MANAGER_Initialize 7196                       SPI1_ReadBlock@blockSize 0005  
                       NWK_RouteFindEntry@dst 0002                                  ___fladd@aexp 0036  
                                ___fladd@bexp 0037                                   _NWK_SetAddr 8AFE  
                              cmdBcast@buf_id 0082                              ?_print_hop_table 0058  
         __end_ofnwkFrame@nwkFramePayloadSize 87FA                   nwkFrame@nwkFramePayloadSize 87D0  
                    __end_of_nwkTxAckReceived 6478                  ?_UART1_SetTxInterruptHandler 0002  
                      ?_nwkRouteErrorReceived 000D                            _eeprom_write_flags 0171  
                            ??_PHY_SetChannel 002F                     __end_of_setPreambleLength 8BD8  
                                ___aomod@sign 0013                           NWK_RouteFindEntry@i 0007  
                    get_free_tx_buffer@buf_id 0002                    __end_of_spi1_configuration FDBD  
                  nwkRxRejectDuplicate@header 0012                CRC_CalculatedResultGet@reverse 0010  
               CRC_CalculatedResultGet@result 0011                         __end_of_cmdSetCADRSSI 6966  
