

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 09 20:27:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1,inline
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=2
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=2
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=2
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=2
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=2
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=2
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=2
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=2
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=2
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=2
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1,group=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1,group=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=4,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=4,class=CODE,delta=1
   250                           	psect	text225,global,reloc=4,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=4,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1
   258                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   259                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   260                           	psect	text233,global,reloc=2,class=CODE,delta=1
   261                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   262  0000                     
   263                           ; Version 2.10
   264                           ; Generated 31/07/2019 GMT
   265                           ; 
   266                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   267                           ; All rights reserved.
   268                           ; 
   269                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   270                           ; 
   271                           ; Redistribution and use in source and binary forms, with or without modification, are
   272                           ; permitted provided that the following conditions are met:
   273                           ; 
   274                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   275                           ;        conditions and the following disclaimer.
   276                           ; 
   277                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   278                           ;        of conditions and the following disclaimer in the documentation and/or other
   279                           ;        materials provided with the distribution.
   280                           ; 
   281                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   282                           ;        software without specific prior written permission.
   283                           ; 
   284                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   285                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   286                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   287                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   288                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   289                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   290                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   291                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   292                           ; 
   293                           ; 
   294                           ; Code-generator required, PIC18F26K42 Definitions
   295                           ; 
   296                           ; SFR Addresses
   297  0000                     
   298                           	psect	idataBANK0
   299  008D4C                     __pidataBANK0:
   300                           	opt callstack 0
   301                           
   302                           ;initializer for _RSSITarget
   303  008D4C  B0                 	db	176
   304                           
   305                           ;initializer for _currentNetID
   306  008D4D  55                 	db	85
   307                           
   308                           ;initializer for _currentAddr1
   309  008D4E  34                 	db	52
   310                           
   311                           ;initializer for _currentAddr0
   312  008D4F  12                 	db	18
   313                           
   314                           ;initializer for _ATTimeoutTimer
   315  008D50  03E8               	dw	1000
   316                           
   317                           	psect	idataBANK1
   318  008C3A                     __pidataBANK1:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for stoa@F1139
   322  008C3A  28                 	db	40
   323  008C3B  6E                 	db	110
   324  008C3C  75                 	db	117
   325  008C3D  6C                 	db	108
   326  008C3E  6C                 	db	108
   327  008C3F  29                 	db	41
   328  008C40  00                 	db	0
   329                           
   330                           ;initializer for sendOKMessage@F16637
   331  008C41  4F                 	db	79
   332  008C42  4B                 	db	75
   333  008C43  0D                 	db	13
   334  008C44  0A                 	db	10
   335  008C45  00                 	db	0
   336                           
   337                           ;initializer for _test_timer
   338  008C46  1388               	dw	5000
   339                           
   340                           	psect	idataBANK2
   341  008D30                     __pidataBANK2:
   342                           	opt callstack 0
   343                           
   344                           ;initializer for _syncList
   345  008D30  12                 	db	18
   346  008D31  23                 	db	35
   347  008D32  45                 	db	69
   348  008D33  56                 	db	86
   349  008D34  67                 	db	103
   350  008D35  78                 	db	120
   351  008D36  89                 	db	137
   352  008D37  9A                 	db	154
   353  008D38  AB                 	db	171
   354  008D39  BC                 	db	188
   355                           
   356                           	psect	mediumconst
   357  00FCC8                     __pmediumconst:
   358                           	opt callstack 0
   359  00FCC8  00                 	db	0
   360  00FCC9                     _fhssList:
   361                           	opt callstack 0
   362  00FCC9  7680               	dw	30336
   363  00FCCB  3600               	dw	13824
   364  00FCCD  FB00               	dw	64256
   365  00FCCF  361E               	dw	13854
   366  00FCD1  7F80               	dw	32640
   367  00FCD3  363D               	dw	13885
   368  00FCD5  0400               	dw	1024
   369  00FCD7  365C               	dw	13916
   370  00FCD9  8880               	dw	34944
   371  00FCDB  367A               	dw	13946
   372  00FCDD  0D00               	dw	3328
   373  00FCDF  3699               	dw	13977
   374  00FCE1  9180               	dw	37248
   375  00FCE3  36B7               	dw	14007
   376  00FCE5  1600               	dw	5632
   377  00FCE7  36D6               	dw	14038
   378  00FCE9  9A80               	dw	39552
   379  00FCEB  36F4               	dw	14068
   380  00FCED  1F00               	dw	7936
   381  00FCEF  3713               	dw	14099
   382  00FCF1  DCC0               	dw	56512
   383  00FCF3  3703               	dw	14083
   384  00FCF5  5840               	dw	22592
   385  00FCF7  36E5               	dw	14053
   386  00FCF9  D3C0               	dw	54208
   387  00FCFB  36C6               	dw	14022
   388  00FCFD  4F40               	dw	20288
   389  00FCFF  36A8               	dw	13992
   390  00FD01  CAC0               	dw	51904
   391  00FD03  3689               	dw	13961
   392  00FD05  4640               	dw	17984
   393  00FD07  366B               	dw	13931
   394  00FD09  C1C0               	dw	49600
   395  00FD0B  364C               	dw	13900
   396  00FD0D  3D40               	dw	15680
   397  00FD0F  362E               	dw	13870
   398  00FD11  B8C0               	dw	47296
   399  00FD13  360F               	dw	13839
   400  00FD15  3440               	dw	13376
   401  00FD17  35F1               	dw	13809
   402  00FD19  AFC0               	dw	44992
   403  00FD1B  35D2               	dw	13778
   404  00FD1D  D560               	dw	54624
   405  00FD1F  35F8               	dw	13816
   406  00FD21  59E0               	dw	23008
   407  00FD23  3617               	dw	13847
   408  00FD25  DE60               	dw	56928
   409  00FD27  3635               	dw	13877
   410  00FD29  6BE0               	dw	27616
   411  00FD2B  3691               	dw	13969
   412  00FD2D  F060               	dw	61536
   413  00FD2F  36AF               	dw	13999
   414  00FD31  74E0               	dw	29920
   415  00FD33  36CE               	dw	14030
   416  00FD35  F960               	dw	63840
   417  00FD37  36EC               	dw	14060
   418  00FD39  7DE0               	dw	32224
   419  00FD3B  370B               	dw	14091
   420  00FD3D  C020               	dw	49184
   421  00FD3F  371A               	dw	14106
   422  00FD41  4710               	dw	18192
   423  00FD43  3604               	dw	13828
   424  00FD45  6CB0               	dw	27824
   425  00FD47  362A               	dw	13866
   426  00FD49  5010               	dw	20496
   427  00FD4B  3641               	dw	13889
   428  00FD4D  75B0               	dw	30128
   429  00FD4F  3667               	dw	13927
   430  00FD51  5910               	dw	22800
   431  00FD53  367E               	dw	13950
   432  00FD55  7EB0               	dw	32432
   433  00FD57  36A4               	dw	13988
   434  00FD59  6210               	dw	25104
   435  00FD5B  36BB               	dw	14011
   436  00FD5D  87B0               	dw	34736
   437  00FD5F  36E1               	dw	14049
   438  00FD61  6B10               	dw	27408
   439  00FD63  36F8               	dw	14072
   440  00FD65  90B0               	dw	37040
   441  00FD67  371E               	dw	14110
   442  00FD69  AD50               	dw	44368
   443  00FD6B  3707               	dw	14087
   444  00FD6D  28D0               	dw	10448
   445  00FD6F  36E9               	dw	14057
   446  00FD71  A450               	dw	42064
   447  00FD73  36CA               	dw	14026
   448  00FD75  C0F0               	dw	49392
   449  00FD77  36B3               	dw	14003
   450  00FD79  9B50               	dw	39760
   451  00FD7B  368D               	dw	13965
   452  00FD7D  B7F0               	dw	47088
   453  00FD7F  3676               	dw	13942
   454  00FD81  9250               	dw	37456
   455  00FD83  3650               	dw	13904
   456  00FD85  AEF0               	dw	44784
   457  00FD87  3639               	dw	13881
   458  00FD89  8950               	dw	35152
   459  00FD8B  3613               	dw	13843
   460  00FD8D  A5F0               	dw	42480
   461  00FD8F  35FC               	dw	13820
   462  00FD91  50E0               	dw	20704
   463  00FD93  35DA               	dw	13786
   464  00FD95  04D0               	dw	1232
   465  00FD97  35F5               	dw	13813
   466  00FD99  2A70               	dw	10864
   467  00FD9B  361B               	dw	13851
   468  00FD9D  0DD0               	dw	3536
   469  00FD9F  3632               	dw	13874
   470  00FDA1  3C70               	dw	15472
   471  00FDA3  3695               	dw	13973
   472  00FDA5  1FD0               	dw	8144
   473  00FDA7  36AC               	dw	13996
   474  00FDA9  4570               	dw	17776
   475  00FDAB  36D2               	dw	14034
   476  00FDAD  28D0               	dw	10448
   477  00FDAF  36E9               	dw	14057
   478  00FDB1  4E70               	dw	20080
   479  00FDB3  370F               	dw	14095
   480  00FDB5  0E40               	dw	3648
   481  00FDB7  371B               	dw	14107
   482  00FDB9  A5F0               	dw	42480
   483  00FDBB  35FC               	dw	13820
   484  00FDBD  F130               	dw	61744
   485  00FDBF  3648               	dw	13896
   486  00FDC1  75B0               	dw	30128
   487  00FDC3  3667               	dw	13927
   488  00FDC5                     __end_of_fhssList:
   489                           	opt callstack 0
   490  00FDC5  03                 	db	3
   491  00FDC6  08                 	db	8
   492  00FDC7  1A                 	db	26
   493  00FDC8  40                 	db	64
   494  00FDC9  80                 	db	128
   495  00FDCA  BE                 	db	190
   496  00FDCB  E6                 	db	230
   497  00FDCC  F7                 	db	247
   498  00FDCD  FC                 	db	252
   499  00FDCE                     __end_ofNWK_LinearizeLqi@val:
   500                           	opt callstack 0
   501  00FDCE  82                 	db	130
   502  00FDCF  C0                 	db	192
   503  00FDD0  03                 	db	3
   504  00FDD1  03                 	db	3
   505  00FDD2  00                 	db	0
   506  00FDD3                     __end_of_spi1_configuration:
   507                           	opt callstack 0
   508  00FDD3  01                 	db	1
   509  00FDD4                     __end_of_FirmwareVersionMinor:
   510                           	opt callstack 0
   511  00FDD4  02                 	db	2
   512  00FDD5                     __end_of_FirmwareVersionMajor:
   513                           	opt callstack 0
   514  00FDD5  00                 	db	0
   515  00FDD6                     __end_of_ATVersionMinor:
   516                           	opt callstack 0
   517  00FDD6  01                 	db	1
   518  00FDD7                     __end_of_ATVersionMajor:
   519                           	opt callstack 0
   520  00FDD7                     STR_133:
   521                           
   522                           ; BSR set to: 0
   523  00FDD7  46                 	db	70	;'F'
   524  00FDD8  69                 	db	105	;'i'
   525  00FDD9  72                 	db	114	;'r'
   526  00FDDA  6D                 	db	109	;'m'
   527  00FDDB  77                 	db	119	;'w'
   528  00FDDC  61                 	db	97	;'a'
   529  00FDDD  72                 	db	114	;'r'
   530  00FDDE  65                 	db	101	;'e'
   531  00FDDF  20                 	db	32
   532  00FDE0  56                 	db	86	;'V'
   533  00FDE1  65                 	db	101	;'e'
   534  00FDE2  72                 	db	114	;'r'
   535  00FDE3  73                 	db	115	;'s'
   536  00FDE4  69                 	db	105	;'i'
   537  00FDE5  6F                 	db	111	;'o'
   538  00FDE6  6E                 	db	110	;'n'
   539  00FDE7  20                 	db	32
   540  00FDE8  25                 	db	37
   541  00FDE9  31                 	db	49	;'1'
   542  00FDEA  75                 	db	117	;'u'
   543  00FDEB  2E                 	db	46
   544  00FDEC  25                 	db	37
   545  00FDED  30                 	db	48	;'0'
   546  00FDEE  32                 	db	50	;'2'
   547  00FDEF  75                 	db	117	;'u'
   548  00FDF0  0D                 	db	13
   549  00FDF1  0A                 	db	10
   550  00FDF2  00                 	db	0
   551  00FDF3                     STR_132:
   552                           
   553                           ; BSR set to: 0
   554  00FDF3  41                 	db	65	;'A'
   555  00FDF4  54                 	db	84	;'T'
   556  00FDF5  20                 	db	32
   557  00FDF6  43                 	db	67	;'C'
   558  00FDF7  6F                 	db	111	;'o'
   559  00FDF8  6D                 	db	109	;'m'
   560  00FDF9  6D                 	db	109	;'m'
   561  00FDFA  61                 	db	97	;'a'
   562  00FDFB  6E                 	db	110	;'n'
   563  00FDFC  64                 	db	100	;'d'
   564  00FDFD  20                 	db	32
   565  00FDFE  53                 	db	83	;'S'
   566  00FDFF  65                 	db	101	;'e'
   567  00FE00  74                 	db	116	;'t'
   568  00FE01  20                 	db	32
   569  00FE02  25                 	db	37
   570  00FE03  31                 	db	49	;'1'
   571  00FE04  75                 	db	117	;'u'
   572  00FE05  2E                 	db	46
   573  00FE06  25                 	db	37
   574  00FE07  30                 	db	48	;'0'
   575  00FE08  32                 	db	50	;'2'
   576  00FE09  75                 	db	117	;'u'
   577  00FE0A  0D                 	db	13
   578  00FE0B  0A                 	db	10
   579  00FE0C  00                 	db	0
   580  00FE0D                     STR_29:
   581                           
   582                           ; BSR set to: 0
   583  00FE0D  43                 	db	67	;'C'
   584  00FE0E  41                 	db	65	;'A'
   585  00FE0F  44                 	db	68	;'D'
   586  00FE10  20                 	db	32
   587  00FE11  43                 	db	67	;'C'
   588  00FE12  4F                 	db	79	;'O'
   589  00FE13  55                 	db	85	;'U'
   590  00FE14  4E                 	db	78	;'N'
   591  00FE15  54                 	db	84	;'T'
   592  00FE16  45                 	db	69	;'E'
   593  00FE17  52                 	db	82	;'R'
   594  00FE18  20                 	db	32
   595  00FE19  3D                 	db	61	;'='
   596  00FE1A  20                 	db	32
   597  00FE1B  25                 	db	37
   598  00FE1C  30                 	db	48	;'0'
   599  00FE1D  32                 	db	50	;'2'
   600  00FE1E  58                 	db	88	;'X'
   601  00FE1F  0D                 	db	13
   602  00FE20  0A                 	db	10
   603  00FE21  00                 	db	0
   604  00FE22                     
   605                           ; BSR set to: 0
   606  00FE22  4D                 	db	77	;'M'
   607  00FE23  4F                 	db	79	;'O'
   608  00FE24  44                 	db	68	;'D'
   609  00FE25  45                 	db	69	;'E'
   610  00FE26  20                 	db	32
   611  00FE27  3D                 	db	61	;'='
   612  00FE28  20                 	db	32
   613  00FE29  45                 	db	69	;'E'
   614  00FE2A  4E                 	db	78	;'N'
   615  00FE2B  44                 	db	68	;'D'
   616  00FE2C  20                 	db	32
   617  00FE2D  4E                 	db	78	;'N'
   618  00FE2E  4F                 	db	79	;'O'
   619  00FE2F  44                 	db	68	;'D'
   620  00FE30  45                 	db	69	;'E'
   621  00FE31  0D                 	db	13
   622  00FE32  0A                 	db	10
   623  00FE33  00                 	db	0
   624  00FE34                     STR_31:
   625                           
   626                           ; BSR set to: 0
   627  00FE34  4D                 	db	77	;'M'
   628  00FE35  4F                 	db	79	;'O'
   629  00FE36  44                 	db	68	;'D'
   630  00FE37  45                 	db	69	;'E'
   631  00FE38  20                 	db	32
   632  00FE39  3D                 	db	61	;'='
   633  00FE3A  20                 	db	32
   634  00FE3B  52                 	db	82	;'R'
   635  00FE3C  45                 	db	69	;'E'
   636  00FE3D  50                 	db	80	;'P'
   637  00FE3E  45                 	db	69	;'E'
   638  00FE3F  41                 	db	65	;'A'
   639  00FE40  54                 	db	84	;'T'
   640  00FE41  45                 	db	69	;'E'
   641  00FE42  52                 	db	82	;'R'
   642  00FE43  0D                 	db	13
   643  00FE44  0A                 	db	10
   644  00FE45  00                 	db	0
   645  00FE46                     STR_11:
   646                           
   647                           ; BSR set to: 0
   648  00FE46  41                 	db	65	;'A'
   649  00FE47  44                 	db	68	;'D'
   650  00FE48  44                 	db	68	;'D'
   651  00FE49  52                 	db	82	;'R'
   652  00FE4A  3D                 	db	61	;'='
   653  00FE4B  25                 	db	37
   654  00FE4C  30                 	db	48	;'0'
   655  00FE4D  32                 	db	50	;'2'
   656  00FE4E  58                 	db	88	;'X'
   657  00FE4F  25                 	db	37
   658  00FE50  30                 	db	48	;'0'
   659  00FE51  32                 	db	50	;'2'
   660  00FE52  58                 	db	88	;'X'
   661  00FE53  0D                 	db	13
   662  00FE54  0A                 	db	10
   663  00FE55  00                 	db	0
   664  00FE56                     STR_88:
   665                           
   666                           ; BSR set to: 0
   667  00FE56  2B                 	db	43
   668  00FE57  43                 	db	67	;'C'
   669  00FE58  41                 	db	65	;'A'
   670  00FE59  44                 	db	68	;'D'
   671  00FE5A  43                 	db	67	;'C'
   672  00FE5B  4F                 	db	79	;'O'
   673  00FE5C  55                 	db	85	;'U'
   674  00FE5D  4E                 	db	78	;'N'
   675  00FE5E  54                 	db	84	;'T'
   676  00FE5F  45                 	db	69	;'E'
   677  00FE60  52                 	db	82	;'R'
   678  00FE61  52                 	db	82	;'R'
   679  00FE62  53                 	db	83	;'S'
   680  00FE63  54                 	db	84	;'T'
   681  00FE64  00                 	db	0
   682  00FE65                     STR_37:
   683                           
   684                           ; BSR set to: 0
   685  00FE65  54                 	db	84	;'T'
   686  00FE66  58                 	db	88	;'X'
   687  00FE67  20                 	db	32
   688  00FE68  50                 	db	80	;'P'
   689  00FE69  4F                 	db	79	;'O'
   690  00FE6A  57                 	db	87	;'W'
   691  00FE6B  45                 	db	69	;'E'
   692  00FE6C  52                 	db	82	;'R'
   693  00FE6D  3D                 	db	61	;'='
   694  00FE6E  25                 	db	37
   695  00FE6F  75                 	db	117	;'u'
   696  00FE70  0D                 	db	13
   697  00FE71  0A                 	db	10
   698  00FE72  00                 	db	0
   699  00FE73                     STR_15:
   700                           
   701                           ; BSR set to: 0
   702  00FE73  4E                 	db	78	;'N'
   703  00FE74  41                 	db	65	;'A'
   704  00FE75  44                 	db	68	;'D'
   705  00FE76  44                 	db	68	;'D'
   706  00FE77  52                 	db	82	;'R'
   707  00FE78  3D                 	db	61	;'='
   708  00FE79  25                 	db	37
   709  00FE7A  30                 	db	48	;'0'
   710  00FE7B  32                 	db	50	;'2'
   711  00FE7C  58                 	db	88	;'X'
   712  00FE7D  0D                 	db	13
   713  00FE7E  0A                 	db	10
   714  00FE7F  00                 	db	0
   715  00FE80                     STR_42:
   716                           
   717                           ; BSR set to: 0
   718  00FE80  43                 	db	67	;'C'
   719  00FE81  41                 	db	65	;'A'
   720  00FE82  44                 	db	68	;'D'
   721  00FE83  20                 	db	32
   722  00FE84  52                 	db	82	;'R'
   723  00FE85  53                 	db	83	;'S'
   724  00FE86  53                 	db	83	;'S'
   725  00FE87  3D                 	db	61	;'='
   726  00FE88  25                 	db	37
   727  00FE89  69                 	db	105	;'i'
   728  00FE8A  0D                 	db	13
   729  00FE8B  0A                 	db	10
   730  00FE8C  00                 	db	0
   731  00FE8D                     STR_1:
   732                           
   733                           ; BSR set to: 0
   734  00FE8D  52                 	db	82	;'R'
   735  00FE8E  58                 	db	88	;'X'
   736  00FE8F  3A                 	db	58	;':'
   737  00FE90  25                 	db	37
   738  00FE91  30                 	db	48	;'0'
   739  00FE92  34                 	db	52	;'4'
   740  00FE93  58                 	db	88	;'X'
   741  00FE94  3A                 	db	58	;':'
   742  00FE95  25                 	db	37
   743  00FE96  73                 	db	115	;'s'
   744  00FE97  0D                 	db	13
   745  00FE98  0A                 	db	10
   746  00FE99  00                 	db	0
   747  00FE9A                     STR_33:
   748                           
   749                           ; BSR set to: 0
   750  00FE9A  43                 	db	67	;'C'
   751  00FE9B  48                 	db	72	;'H'
   752  00FE9C  41                 	db	65	;'A'
   753  00FE9D  4E                 	db	78	;'N'
   754  00FE9E  4E                 	db	78	;'N'
   755  00FE9F  45                 	db	69	;'E'
   756  00FEA0  4C                 	db	76	;'L'
   757  00FEA1  3D                 	db	61	;'='
   758  00FEA2  25                 	db	37
   759  00FEA3  75                 	db	117	;'u'
   760  00FEA4  0D                 	db	13
   761  00FEA5  0A                 	db	10
   762  00FEA6  00                 	db	0
   763  00FEA7                     STR_86:
   764                           
   765                           ; BSR set to: 0
   766  00FEA7  2B                 	db	43
   767  00FEA8  43                 	db	67	;'C'
   768  00FEA9  41                 	db	65	;'A'
   769  00FEAA  44                 	db	68	;'D'
   770  00FEAB  43                 	db	67	;'C'
   771  00FEAC  4F                 	db	79	;'O'
   772  00FEAD  55                 	db	85	;'U'
   773  00FEAE  4E                 	db	78	;'N'
   774  00FEAF  54                 	db	84	;'T'
   775  00FEB0  45                 	db	69	;'E'
   776  00FEB1  52                 	db	82	;'R'
   777  00FEB2  3F                 	db	63	;'?'
   778  00FEB3  00                 	db	0
   779  00FEB4                     STR_60:
   780                           
   781                           ; BSR set to: 0
   782  00FEB4  48                 	db	72	;'H'
   783  00FEB5  6F                 	db	111	;'o'
   784  00FEB6  70                 	db	112	;'p'
   785  00FEB7  20                 	db	32
   786  00FEB8  74                 	db	116	;'t'
   787  00FEB9  61                 	db	97	;'a'
   788  00FEBA  62                 	db	98	;'b'
   789  00FEBB  6C                 	db	108	;'l'
   790  00FEBC  65                 	db	101	;'e'
   791  00FEBD  0D                 	db	13
   792  00FEBE  0A                 	db	10
   793  00FEBF  00                 	db	0
   794  00FEC0                     STR_131:
   795                           
   796                           ; BSR set to: 0
   797  00FEC0  4C                 	db	76	;'L'
   798  00FEC1  6F                 	db	111	;'o'
   799  00FEC2  52                 	db	82	;'R'
   800  00FEC3  61                 	db	97	;'a'
   801  00FEC4  20                 	db	32
   802  00FEC5  4D                 	db	77	;'M'
   803  00FEC6  65                 	db	101	;'e'
   804  00FEC7  73                 	db	115	;'s'
   805  00FEC8  68                 	db	104	;'h'
   806  00FEC9  0D                 	db	13
   807  00FECA  0A                 	db	10
   808  00FECB  00                 	db	0
   809  00FECC                     STR_4:
   810                           
   811                           ; BSR set to: 0
   812  00FECC  4E                 	db	78	;'N'
   813  00FECD  4F                 	db	79	;'O'
   814  00FECE  54                 	db	84	;'T'
   815  00FECF  20                 	db	32
   816  00FED0  4F                 	db	79	;'O'
   817  00FED1  4B                 	db	75	;'K'
   818  00FED2  3A                 	db	58	;':'
   819  00FED3  25                 	db	37
   820  00FED4  75                 	db	117	;'u'
   821  00FED5  0D                 	db	13
   822  00FED6  0A                 	db	10
   823  00FED7  00                 	db	0
   824  00FED8                     STR_72:
   825                           
   826                           ; BSR set to: 0
   827  00FED8  2B                 	db	43
   828  00FED9  53                 	db	83	;'S'
   829  00FEDA  48                 	db	72	;'H'
   830  00FEDB  4F                 	db	79	;'O'
   831  00FEDC  57                 	db	87	;'W'
   832  00FEDD  48                 	db	72	;'H'
   833  00FEDE  4F                 	db	79	;'O'
   834  00FEDF  50                 	db	80	;'P'
   835  00FEE0  53                 	db	83	;'S'
   836  00FEE1  3F                 	db	63	;'?'
   837  00FEE2  00                 	db	0
   838  00FEE3                     STR_92:
   839                           
   840                           ; BSR set to: 0
   841  00FEE3  2B                 	db	43
   842  00FEE4  43                 	db	67	;'C'
   843  00FEE5  41                 	db	65	;'A'
   844  00FEE6  44                 	db	68	;'D'
   845  00FEE7  52                 	db	82	;'R'
   846  00FEE8  53                 	db	83	;'S'
   847  00FEE9  53                 	db	83	;'S'
   848  00FEEA  49                 	db	73	;'I'
   849  00FEEB  3D                 	db	61	;'='
   850  00FEEC  00                 	db	0
   851  00FEED                     STR_128:
   852                           
   853                           ; BSR set to: 0
   854  00FEED  2B                 	db	43
   855  00FEEE  54                 	db	84	;'T'
   856  00FEEF  58                 	db	88	;'X'
   857  00FEF0  50                 	db	80	;'P'
   858  00FEF1  4F                 	db	79	;'O'
   859  00FEF2  57                 	db	87	;'W'
   860  00FEF3  45                 	db	69	;'E'
   861  00FEF4  52                 	db	82	;'R'
   862  00FEF5  3D                 	db	61	;'='
   863  00FEF6  00                 	db	0
   864  00FEF7                     STR_90:
   865                           
   866                           ; BSR set to: 0
   867  00FEF7  2B                 	db	43
   868  00FEF8  43                 	db	67	;'C'
   869  00FEF9  41                 	db	65	;'A'
   870  00FEFA  44                 	db	68	;'D'
   871  00FEFB  52                 	db	82	;'R'
   872  00FEFC  53                 	db	83	;'S'
   873  00FEFD  53                 	db	83	;'S'
   874  00FEFE  49                 	db	73	;'I'
   875  00FEFF  3F                 	db	63	;'?'
   876  00FF00  00                 	db	0
   877  00FF01                     STR_126:
   878                           
   879                           ; BSR set to: 0
   880  00FF01  2B                 	db	43
   881  00FF02  54                 	db	84	;'T'
   882  00FF03  58                 	db	88	;'X'
   883  00FF04  50                 	db	80	;'P'
   884  00FF05  4F                 	db	79	;'O'
   885  00FF06  57                 	db	87	;'W'
   886  00FF07  45                 	db	69	;'E'
   887  00FF08  52                 	db	82	;'R'
   888  00FF09  3F                 	db	63	;'?'
   889  00FF0A  00                 	db	0
   890  00FF0B                     STR_78:
   891                           
   892                           ; BSR set to: 0
   893  00FF0B  2B                 	db	43
   894  00FF0C  42                 	db	66	;'B'
   895  00FF0D  4F                 	db	79	;'O'
   896  00FF0E  4F                 	db	79	;'O'
   897  00FF0F  54                 	db	84	;'T'
   898  00FF10  4C                 	db	76	;'L'
   899  00FF11  4F                 	db	79	;'O'
   900  00FF12  41                 	db	65	;'A'
   901  00FF13  44                 	db	68	;'D'
   902  00FF14  00                 	db	0
   903  00FF15                     STR_84:
   904                           
   905                           ; BSR set to: 0
   906  00FF15  2B                 	db	43
   907  00FF16  41                 	db	65	;'A'
   908  00FF17  45                 	db	69	;'E'
   909  00FF18  53                 	db	83	;'S'
   910  00FF19  4B                 	db	75	;'K'
   911  00FF1A  45                 	db	69	;'E'
   912  00FF1B  59                 	db	89	;'Y'
   913  00FF1C  3A                 	db	58	;':'
   914  00FF1D  00                 	db	0
   915  00FF1E                     STR_98:
   916                           
   917                           ; BSR set to: 0
   918  00FF1E  2B                 	db	43
   919  00FF1F  48                 	db	72	;'H'
   920  00FF20  4F                 	db	79	;'O'
   921  00FF21  50                 	db	80	;'P'
   922  00FF22  54                 	db	84	;'T'
   923  00FF23  54                 	db	84	;'T'
   924  00FF24  4C                 	db	76	;'L'
   925  00FF25  3D                 	db	61	;'='
   926  00FF26  00                 	db	0
   927  00FF27                     STR_110:
   928                           
   929                           ; BSR set to: 0
   930  00FF27  2B                 	db	43
   931  00FF28  50                 	db	80	;'P'
   932  00FF29  41                 	db	65	;'A'
   933  00FF2A  52                 	db	82	;'R'
   934  00FF2B  49                 	db	73	;'I'
   935  00FF2C  54                 	db	84	;'T'
   936  00FF2D  59                 	db	89	;'Y'
   937  00FF2E  3D                 	db	61	;'='
   938  00FF2F  00                 	db	0
   939  00FF30                     STR_64:
   940                           
   941                           ; BSR set to: 0
   942  00FF30  2B                 	db	43
   943  00FF31  53                 	db	83	;'S'
   944  00FF32  45                 	db	69	;'E'
   945  00FF33  54                 	db	84	;'T'
   946  00FF34  53                 	db	83	;'S'
   947  00FF35  49                 	db	73	;'I'
   948  00FF36  4E                 	db	78	;'N'
   949  00FF37  4B                 	db	75	;'K'
   950  00FF38  00                 	db	0
   951  00FF39                     STR_56:
   952                           
   953                           ; BSR set to: 0
   954  00FF39  53                 	db	83	;'S'
   955  00FF3A  46                 	db	70	;'F'
   956  00FF3B  3D                 	db	61	;'='
   957  00FF3C  25                 	db	37
   958  00FF3D  75                 	db	117	;'u'
   959  00FF3E  0D                 	db	13
   960  00FF3F  0A                 	db	10
   961  00FF40  00                 	db	0
   962  00FF41                     STR_134:
   963                           
   964                           ; BSR set to: 0
   965  00FF41  52                 	db	82	;'R'
   966  00FF42  65                 	db	101	;'e'
   967  00FF43  67                 	db	103	;'g'
   968  00FF44  69                 	db	105	;'i'
   969  00FF45  6F                 	db	111	;'o'
   970  00FF46  6E                 	db	110	;'n'
   971  00FF47  20                 	db	32
   972  00FF48  00                 	db	0
   973  00FF49                     STR_108:
   974                           
   975                           ; BSR set to: 0
   976  00FF49  2B                 	db	43
   977  00FF4A  4E                 	db	78	;'N'
   978  00FF4B  41                 	db	65	;'A'
   979  00FF4C  44                 	db	68	;'D'
   980  00FF4D  44                 	db	68	;'D'
   981  00FF4E  52                 	db	82	;'R'
   982  00FF4F  3D                 	db	61	;'='
   983  00FF50  00                 	db	0
   984  00FF51                     STR_74:
   985                           
   986                           ; BSR set to: 0
   987  00FF51  2B                 	db	43
   988  00FF52  42                 	db	66	;'B'
   989  00FF53  43                 	db	67	;'C'
   990  00FF54  41                 	db	65	;'A'
   991  00FF55  53                 	db	83	;'S'
   992  00FF56  54                 	db	84	;'T'
   993  00FF57  3D                 	db	61	;'='
   994  00FF58  00                 	db	0
   995  00FF59                     STR_106:
   996                           
   997                           ; BSR set to: 0
   998  00FF59  2B                 	db	43
   999  00FF5A  4E                 	db	78	;'N'
  1000  00FF5B  41                 	db	65	;'A'
  1001  00FF5C  44                 	db	68	;'D'
  1002  00FF5D  44                 	db	68	;'D'
  1003  00FF5E  52                 	db	82	;'R'
  1004  00FF5F  3F                 	db	63	;'?'
  1005  00FF60  00                 	db	0
  1006  00FF61                     STR_62:
  1007                           
  1008                           ; BSR set to: 0
  1009  00FF61  2B                 	db	43
  1010  00FF62  53                 	db	83	;'S'
  1011  00FF63  45                 	db	69	;'E'
  1012  00FF64  4E                 	db	78	;'N'
  1013  00FF65  44                 	db	68	;'D'
  1014  00FF66  3A                 	db	58	;':'
  1015  00FF67  00                 	db	0
  1016  00FF68                     STR_76:
  1017                           
  1018                           ; BSR set to: 0
  1019  00FF68  2B                 	db	43
  1020  00FF69  42                 	db	66	;'B'
  1021  00FF6A  41                 	db	65	;'A'
  1022  00FF6B  55                 	db	85	;'U'
  1023  00FF6C  44                 	db	68	;'D'
  1024  00FF6D  3D                 	db	61	;'='
  1025  00FF6E  00                 	db	0
  1026  00FF6F                     STR_116:
  1027                           
  1028                           ; BSR set to: 0
  1029  00FF6F  2B                 	db	43
  1030  00FF70  52                 	db	82	;'R'
  1031  00FF71  46                 	db	70	;'F'
  1032  00FF72  43                 	db	67	;'C'
  1033  00FF73  48                 	db	72	;'H'
  1034  00FF74  3D                 	db	61	;'='
  1035  00FF75  00                 	db	0
  1036  00FF76                     STR_82:
  1037                           
  1038                           ; BSR set to: 0
  1039  00FF76  2B                 	db	43
  1040  00FF77  41                 	db	65	;'A'
  1041  00FF78  44                 	db	68	;'D'
  1042  00FF79  44                 	db	68	;'D'
  1043  00FF7A  52                 	db	82	;'R'
  1044  00FF7B  3D                 	db	61	;'='
  1045  00FF7C  00                 	db	0
  1046  00FF7D                     STR_96:
  1047                           
  1048                           ; BSR set to: 0
  1049  00FF7D  2B                 	db	43
  1050  00FF7E  48                 	db	72	;'H'
  1051  00FF7F  4F                 	db	79	;'O'
  1052  00FF80  50                 	db	80	;'P'
  1053  00FF81  53                 	db	83	;'S'
  1054  00FF82  3D                 	db	61	;'='
  1055  00FF83  00                 	db	0
  1056  00FF84                     STR_104:
  1057                           
  1058                           ; BSR set to: 0
  1059  00FF84  2B                 	db	43
  1060  00FF85  4D                 	db	77	;'M'
  1061  00FF86  4F                 	db	79	;'O'
  1062  00FF87  44                 	db	68	;'D'
  1063  00FF88  45                 	db	69	;'E'
  1064  00FF89  3F                 	db	63	;'?'
  1065  00FF8A  00                 	db	0
  1066  00FF8B                     STR_114:
  1067                           
  1068                           ; BSR set to: 0
  1069  00FF8B  2B                 	db	43
  1070  00FF8C  52                 	db	82	;'R'
  1071  00FF8D  46                 	db	70	;'F'
  1072  00FF8E  43                 	db	67	;'C'
  1073  00FF8F  48                 	db	72	;'H'
  1074  00FF90  3F                 	db	63	;'?'
  1075  00FF91  00                 	db	0
  1076  00FF92                     STR_80:
  1077                           
  1078                           ; BSR set to: 0
  1079  00FF92  2B                 	db	43
  1080  00FF93  41                 	db	65	;'A'
  1081  00FF94  44                 	db	68	;'D'
  1082  00FF95  44                 	db	68	;'D'
  1083  00FF96  52                 	db	82	;'R'
  1084  00FF97  3F                 	db	63	;'?'
  1085  00FF98  00                 	db	0
  1086  00FF99                     STR_94:
  1087                           
  1088                           ; BSR set to: 0
  1089  00FF99  2B                 	db	43
  1090  00FF9A  48                 	db	72	;'H'
  1091  00FF9B  4F                 	db	79	;'O'
  1092  00FF9C  50                 	db	80	;'P'
  1093  00FF9D  53                 	db	83	;'S'
  1094  00FF9E  3F                 	db	63	;'?'
  1095  00FF9F  00                 	db	0
  1096  00FFA0                     STR_120:
  1097                           
  1098                           ; BSR set to: 0
  1099  00FFA0  2B                 	db	43
  1100  00FFA1  52                 	db	82	;'R'
  1101  00FFA2  58                 	db	88	;'X'
  1102  00FFA3  43                 	db	67	;'C'
  1103  00FFA4  54                 	db	84	;'T'
  1104  00FFA5  3F                 	db	63	;'?'
  1105  00FFA6  00                 	db	0
  1106  00FFA7                     STR_66:
  1107                           
  1108                           ; BSR set to: 0
  1109  00FFA7  2B                 	db	43
  1110  00FFA8  53                 	db	83	;'S'
  1111  00FFA9  53                 	db	83	;'S'
  1112  00FFAA  49                 	db	73	;'I'
  1113  00FFAB  4E                 	db	78	;'N'
  1114  00FFAC  4B                 	db	75	;'K'
  1115  00FFAD  00                 	db	0
  1116  00FFAE                     STR_124:
  1117                           
  1118                           ; BSR set to: 0
  1119  00FFAE  2B                 	db	43
  1120  00FFAF  54                 	db	84	;'T'
  1121  00FFB0  54                 	db	84	;'T'
  1122  00FFB1  4C                 	db	76	;'L'
  1123  00FFB2  3D                 	db	61	;'='
  1124  00FFB3  00                 	db	0
  1125  00FFB4                     STR_102:
  1126                           
  1127                           ; BSR set to: 0
  1128  00FFB4  2B                 	db	43
  1129  00FFB5  4D                 	db	77	;'M'
  1130  00FFB6  41                 	db	65	;'A'
  1131  00FFB7  43                 	db	67	;'C'
  1132  00FFB8  3F                 	db	63	;'?'
  1133  00FFB9  00                 	db	0
  1134  00FFBA                     STR_122:
  1135                           
  1136                           ; BSR set to: 0
  1137  00FFBA  2B                 	db	43
  1138  00FFBB  54                 	db	84	;'T'
  1139  00FFBC  54                 	db	84	;'T'
  1140  00FFBD  4C                 	db	76	;'L'
  1141  00FFBE  3F                 	db	63	;'?'
  1142  00FFBF  00                 	db	0
  1143  00FFC0                     STR_48:
  1144                           
  1145                           ; BSR set to: 0
  1146  00FFC0  3D                 	db	61	;'='
  1147  00FFC1  4E                 	db	78	;'N'
  1148  00FFC2  4F                 	db	79	;'O'
  1149  00FFC3  4E                 	db	78	;'N'
  1150  00FFC4  45                 	db	69	;'E'
  1151  00FFC5  00                 	db	0
  1152  00FFC6                     STR_50:
  1153                           
  1154                           ; BSR set to: 0
  1155  00FFC6  3D                 	db	61	;'='
  1156  00FFC7  45                 	db	69	;'E'
  1157  00FFC8  56                 	db	86	;'V'
  1158  00FFC9  45                 	db	69	;'E'
  1159  00FFCA  4E                 	db	78	;'N'
  1160  00FFCB  00                 	db	0
  1161  00FFCC                     STR_112:
  1162                           
  1163                           ; BSR set to: 0
  1164  00FFCC  2B                 	db	43
  1165  00FFCD  52                 	db	82	;'R'
  1166  00FFCE  45                 	db	69	;'E'
  1167  00FFCF  43                 	db	67	;'C'
  1168  00FFD0  56                 	db	86	;'V'
  1169  00FFD1  00                 	db	0
  1170  00FFD2                     STR_135:
  1171                           
  1172                           ; BSR set to: 0
  1173  00FFD2  4E                 	db	78	;'N'
  1174  00FFD3  41                 	db	65	;'A'
  1175  00FFD4  0D                 	db	13
  1176  00FFD5  0A                 	db	10
  1177  00FFD6  00                 	db	0
  1178  00FFD7                     STR_13:
  1179                           
  1180                           ; BSR set to: 0
  1181  00FFD7  4F                 	db	79	;'O'
  1182  00FFD8  4B                 	db	75	;'K'
  1183  00FFD9  0D                 	db	13
  1184  00FFDA  0A                 	db	10
  1185  00FFDB  00                 	db	0
  1186  00FFDC                     STR_18:
  1187                           
  1188                           ; BSR set to: 0
  1189  00FFDC  4D                 	db	77	;'M'
  1190  00FFDD  41                 	db	65	;'A'
  1191  00FFDE  43                 	db	67	;'C'
  1192  00FFDF  3D                 	db	61	;'='
  1193  00FFE0  00                 	db	0
  1194  00FFE1                     STR_70:
  1195                           
  1196                           ; BSR set to: 0
  1197  00FFE1  2B                 	db	43
  1198  00FFE2  53                 	db	83	;'S'
  1199  00FFE3  46                 	db	70	;'F'
  1200  00FFE4  3D                 	db	61	;'='
  1201  00FFE5  00                 	db	0
  1202  00FFE6                     STR_68:
  1203                           
  1204                           ; BSR set to: 0
  1205  00FFE6  2B                 	db	43
  1206  00FFE7  53                 	db	83	;'S'
  1207  00FFE8  46                 	db	70	;'F'
  1208  00FFE9  3F                 	db	63	;'?'
  1209  00FFEA  00                 	db	0
  1210  00FFEB                     STR_46:
  1211                           
  1212                           ; BSR set to: 0
  1213  00FFEB  3D                 	db	61	;'='
  1214  00FFEC  4F                 	db	79	;'O'
  1215  00FFED  44                 	db	68	;'D'
  1216  00FFEE  44                 	db	68	;'D'
  1217  00FFEF  00                 	db	0
  1218  00FFF0                     STR_118:
  1219                           
  1220                           ; BSR set to: 0
  1221  00FFF0  2B                 	db	43
  1222  00FFF1  52                 	db	82	;'R'
  1223  00FFF2  53                 	db	83	;'S'
  1224  00FFF3  54                 	db	84	;'T'
  1225  00FFF4  00                 	db	0
  1226  00FFF5                     STR_19:
  1227                           
  1228                           ; BSR set to: 0
  1229  00FFF5  25                 	db	37
  1230  00FFF6  30                 	db	48	;'0'
  1231  00FFF7  32                 	db	50	;'2'
  1232  00FFF8  58                 	db	88	;'X'
  1233  00FFF9  00                 	db	0
  1234  00FFFA                     STR_100:
  1235                           
  1236                           ; BSR set to: 0
  1237  00FFFA  2B                 	db	43
  1238  00FFFB  49                 	db	73	;'I'
  1239  00FFFC  00                 	db	0
  1240  00FFFD                     STR_55:
  1241                           
  1242                           ; BSR set to: 0
  1243  00FFFD  0D                 	db	13
  1244  00FFFE  00                 	db	0
  1245  0000                     
  1246                           ; #config settings
  1247  00FFFF  00                 	db	0	; dummy byte at the end
  1248  0000                     
  1249                           	psect	nvBANK1
  1250  0001DF                     __pnvBANK1:
  1251                           	opt callstack 0
  1252  0001DF                     _UART1_ErrorHandler:
  1253                           	opt callstack 0
  1254  0001DF                     	ds	2
  1255  0001E1                     _UART1_OverrunErrorHandler:
  1256                           	opt callstack 0
  1257  0001E1                     	ds	2
  1258  0001E3                     _UART1_FramingErrorHandler:
  1259                           	opt callstack 0
  1260  0001E3                     	ds	2
  1261  0001E5                     _TMR0_InterruptHandler:
  1262                           	opt callstack 0
  1263  0001E5                     	ds	2
  1264  0001E7                     _timer0ReloadVal16bit:
  1265                           	opt callstack 0
  1266  0001E7                     	ds	2
  1267  0001E9                     _UART1_TxInterruptHandler:
  1268                           	opt callstack 0
  1269  0001E9                     	ds	2
  1270  0001EB                     _UART1_RxInterruptHandler:
  1271                           	opt callstack 0
  1272  0001EB                     	ds	2
  1273  0001ED                     _uart1TxBufferRemaining:
  1274                           	opt callstack 0
  1275  0001ED                     	ds	1
  1276  0000                     _CRCDATH	set	14689
  1277  0000                     _CRCDATL	set	14688
  1278  0000                     _CRCCON1bits	set	14697
  1279  0000                     _CRCXORL	set	14694
  1280  0000                     _CRCXORH	set	14695
  1281  0000                     _SCANTRIG	set	14717
  1282  0000                     _SCANHADRL	set	14713
  1283  0000                     _SCANHADRH	set	14714
  1284  0000                     _SCANHADRU	set	14715
  1285  0000                     _SCANLADRL	set	14710
  1286  0000                     _SCANLADRH	set	14711
  1287  0000                     _SCANLADRU	set	14712
  1288  0000                     _SCANCON0	set	14716
  1289  0000                     _CRCCON1	set	14697
  1290  0000                     _CRCCON0	set	14696
  1291  0000                     _PMD7	set	14791
  1292  0000                     _PMD6	set	14790
  1293  0000                     _PMD5	set	14789
  1294  0000                     _PMD4	set	14788
  1295  0000                     _PMD3	set	14787
  1296  0000                     _PMD2	set	14786
  1297  0000                     _PMD1	set	14785
  1298  0000                     _PMD0	set	14784
  1299  0000                     _OSCTUNE	set	14814
  1300  0000                     _OSCFRQ	set	14815
  1301  0000                     _OSCEN	set	14813
  1302  0000                     _OSCCON3	set	14811
  1303  0000                     _OSCCON1	set	14809
  1304  0000                     _IPR3bits	set	14723
  1305  0000                     _PIR0bits	set	14752
  1306  0000                     _NVMCON2	set	14822
  1307  0000                     _NVMDAT	set	14819
  1308  0000                     _NVMADRL	set	14816
  1309  0000                     _NVMADRH	set	14817
  1310  0000                     _NVMCON1bits	set	14821
  1311  0000                     _PIR3bits	set	14755
  1312  0000                     _PIR2bits	set	14754
  1313  0000                     _PIE3bits	set	14739
  1314  0000                     _CRCCON0bits	set	14696
  1315  0000                     _CRCACCH	set	14691
  1316  0000                     _CRCACCL	set	14690
  1317  0000                     _SPI1SDIPPS	set	15071
  1318  0000                     _RC7PPS	set	14871
  1319  0000                     _U1CTSPPS	set	15078
  1320  0000                     _U1RXPPS	set	15077
  1321  0000                     _RC1PPS	set	14865
  1322  0000                     _RB0PPS	set	14856
  1323  0000                     _SPI1SSPPS	set	15072
  1324  0000                     _SPI1SCKPPS	set	15070
  1325  0000                     _RC0PPS	set	14864
  1326  0000                     _INLVLE	set	14980
  1327  0000                     _INLVLC	set	14948
  1328  0000                     _INLVLB	set	14932
  1329  0000                     _INLVLA	set	14916
  1330  0000                     _SLRCONC	set	14947
  1331  0000                     _SLRCONB	set	14931
  1332  0000                     _SLRCONA	set	14915
  1333  0000                     _ODCONC	set	14946
  1334  0000                     _ODCONB	set	14930
  1335  0000                     _ODCONA	set	14914
  1336  0000                     _RC4I2C	set	14955
  1337  0000                     _RC3I2C	set	14954
  1338  0000                     _RB2I2C	set	14939
  1339  0000                     _RB1I2C	set	14938
  1340  0000                     _WPUC	set	14945
  1341  0000                     _WPUA	set	14913
  1342  0000                     _WPUB	set	14929
  1343  0000                     _WPUE	set	14977
  1344  0000                     _ANSELA	set	14912
  1345  0000                     _ANSELB	set	14928
  1346  0000                     _ANSELC	set	14944
  1347  0000                     _U1TXB	set	15850
  1348  0000                     _U1ERRIE	set	15866
  1349  0000                     _U1UIR	set	15864
  1350  0000                     _U1P3H	set	15857
  1351  0000                     _U1P3L	set	15856
  1352  0000                     _U1P2H	set	15855
  1353  0000                     _U1P2L	set	15854
  1354  0000                     _U1P1H	set	15853
  1355  0000                     _U1P1L	set	15852
  1356  0000                     _SPI1RXB	set	15632
  1357  0000                     _SPI1TXB	set	15633
  1358  0000                     _SPI1TCNTL	set	15634
  1359  0000                     _SPI1BAUD	set	15641
  1360  0000                     _SPI1CLK	set	15644
  1361  0000                     _SPI1CON2	set	15638
  1362  0000                     _SPI1CON1	set	15637
  1363  0000                     _SPI1CON0	set	15636
  1364  0000                     _U1ERRIR	set	15865
  1365  0000                     _U1FIFO	set	15863
  1366  0000                     _U1ERRIRbits	set	15865
  1367  0000                     _U1BRGH	set	15862
  1368  0000                     _U1BRGL	set	15861
  1369  0000                     _U1CON2	set	15860
  1370  0000                     _U1CON0	set	15858
  1371  0000                     _U1CON1	set	15859
  1372  0000                     _U1RXB	set	15848
  1373  0000                     _PORTBbits	set	16331
  1374  0000                     _LATCbits	set	16316
  1375  0000                     _TRISC	set	16324
  1376  0000                     _TRISB	set	16323
  1377  0000                     _TRISA	set	16322
  1378  0000                     _LATC	set	16316
  1379  0000                     _LATB	set	16315
  1380  0000                     _LATA	set	16314
  1381  0000                     _IVTBASEL	set	16341
  1382  0000                     _IVTBASEH	set	16342
  1383  0000                     _IVTBASEU	set	16343
  1384  0000                     _IVTLOCKbits	set	16340
  1385  0000                     _IVTLOCK	set	16340
  1386  0000                     _INTCON0bits	set	16338
  1387  0000                     _TABLAT	set	16373
  1388  0000                     _TBLPTRL	set	16374
  1389  0000                     _TBLPTRH	set	16375
  1390  0000                     _TBLPTRU	set	16376
  1391  0000                     _T0CON0	set	16312
  1392  0000                     _TMR0L	set	16310
  1393  0000                     _TMR0H	set	16311
  1394  0000                     _T0CON1	set	16313
  1395  0000                     _TRISBbits	set	16323
  1396  0000                     _LATAbits	set	16314
  1397  0000                     _GIE	set	130711
  1398                           
  1399                           	psect	cinit
  1400  005C74                     __pcinit:
  1401                           	opt callstack 0
  1402  005C74                     start_initialization:
  1403                           	opt callstack 0
  1404  005C74                     __initialization:
  1405                           	opt callstack 0
  1406                           
  1407                           ; Initialize objects allocated to BANK2 (10 bytes)
  1408                           ; load TBLPTR registers with __pidataBANK2
  1409  005C74  0E30               	movlw	low __pidataBANK2
  1410  005C76  6EF6               	movwf	tblptrl,c
  1411  005C78  0E8D               	movlw	high __pidataBANK2
  1412  005C7A  6EF7               	movwf	tblptrh,c
  1413  005C7C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1414  005C7E  6EF8               	movwf	tblptru,c
  1415  005C80  EE00  F2CA         	lfsr	0,__pdataBANK2
  1416  005C84  EE10 F00A          	lfsr	1,10
  1417  005C88                     copy_data0:
  1418  005C88  0009               	tblrd		*+
  1419  005C8A  006F FFD7 FFEE     	movff	tablat,postinc0
  1420  005C90  50E5               	movf	postdec1,w,c
  1421  005C92  50E1               	movf	fsr1l,w,c
  1422  005C94  E1F9               	bnz	copy_data0
  1423                           
  1424                           ; Initialize objects allocated to BANK1 (14 bytes)
  1425                           ; load TBLPTR registers with __pidataBANK1
  1426  005C96  0E3A               	movlw	low __pidataBANK1
  1427  005C98  6EF6               	movwf	tblptrl,c
  1428  005C9A  0E8C               	movlw	high __pidataBANK1
  1429  005C9C  6EF7               	movwf	tblptrh,c
  1430  005C9E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1431  005CA0  6EF8               	movwf	tblptru,c
  1432  005CA2  EE00  F1EE         	lfsr	0,__pdataBANK1
  1433  005CA6  EE10 F00E          	lfsr	1,14
  1434  005CAA                     copy_data1:
  1435  005CAA  0009               	tblrd		*+
  1436  005CAC  006F FFD7 FFEE     	movff	tablat,postinc0
  1437  005CB2  50E5               	movf	postdec1,w,c
  1438  005CB4  50E1               	movf	fsr1l,w,c
  1439  005CB6  E1F9               	bnz	copy_data1
  1440                           
  1441                           ; Initialize objects allocated to BANK0 (6 bytes)
  1442                           ; load TBLPTR registers with __pidataBANK0
  1443  005CB8  0E4C               	movlw	low __pidataBANK0
  1444  005CBA  6EF6               	movwf	tblptrl,c
  1445  005CBC  0E8D               	movlw	high __pidataBANK0
  1446  005CBE  6EF7               	movwf	tblptrh,c
  1447  005CC0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1448  005CC2  6EF8               	movwf	tblptru,c
  1449  005CC4  EE00  F0F9         	lfsr	0,__pdataBANK0
  1450  005CC8  EE10 F006          	lfsr	1,6
  1451  005CCC                     copy_data2:
  1452  005CCC  0009               	tblrd		*+
  1453  005CCE  006F FFD7 FFEE     	movff	tablat,postinc0
  1454  005CD4  50E5               	movf	postdec1,w,c
  1455  005CD6  50E1               	movf	fsr1l,w,c
  1456  005CD8  E1F9               	bnz	copy_data2
  1457                           
  1458                           ; Clear objects allocated to BIGRAM (1209 bytes)
  1459  005CDA  EE01  F1BD         	lfsr	0,__pbssBIGRAM
  1460  005CDE  EE11 F0B9          	lfsr	1,1209
  1461  005CE2                     clear_0:
  1462  005CE2  6AEE               	clrf	postinc0,c
  1463  005CE4  50E5               	movf	postdec1,w,c
  1464  005CE6  50E1               	movf	fsr1l,w,c
  1465  005CE8  E1FC               	bnz	clear_0
  1466  005CEA  50E2               	movf	fsr1h,w,c
  1467  005CEC  E1FA               	bnz	clear_0
  1468                           
  1469                           ; Clear objects allocated to BANK5 (189 bytes)
  1470  005CEE  EE01  F100         	lfsr	0,__pbssBANK5
  1471  005CF2  0EBD               	movlw	189
  1472  005CF4                     clear_1:
  1473  005CF4  6AEE               	clrf	postinc0,c
  1474  005CF6  06E8               	decf	wreg,f,c
  1475  005CF8  E1FD               	bnz	clear_1
  1476                           
  1477                           ; Clear objects allocated to BANK4 (96 bytes)
  1478  005CFA  EE01  F000         	lfsr	0,__pbssBANK4
  1479  005CFE  0E60               	movlw	96
  1480  005D00                     clear_2:
  1481  005D00  6AEE               	clrf	postinc0,c
  1482  005D02  06E8               	decf	wreg,f,c
  1483  005D04  E1FD               	bnz	clear_2
  1484                           
  1485                           ; Clear objects allocated to BANK3 (242 bytes)
  1486  005D06  EE00  F300         	lfsr	0,__pbssBANK3
  1487  005D0A  0EF2               	movlw	242
  1488  005D0C                     clear_3:
  1489  005D0C  6AEE               	clrf	postinc0,c
  1490  005D0E  06E8               	decf	wreg,f,c
  1491  005D10  E1FD               	bnz	clear_3
  1492                           
  1493                           ; Clear objects allocated to BANK2 (202 bytes)
  1494  005D12  EE00  F200         	lfsr	0,__pbssBANK2
  1495  005D16  0ECA               	movlw	202
  1496  005D18                     clear_4:
  1497  005D18  6AEE               	clrf	postinc0,c
  1498  005D1A  06E8               	decf	wreg,f,c
  1499  005D1C  E1FD               	bnz	clear_4
  1500                           
  1501                           ; Clear objects allocated to BANK1 (223 bytes)
  1502  005D1E  EE00  F100         	lfsr	0,__pbssBANK1
  1503  005D22  0EDF               	movlw	223
  1504  005D24                     clear_5:
  1505  005D24  6AEE               	clrf	postinc0,c
  1506  005D26  06E8               	decf	wreg,f,c
  1507  005D28  E1FD               	bnz	clear_5
  1508                           
  1509                           ; Clear objects allocated to BANK0 (31 bytes)
  1510  005D2A  EE00  F0DA         	lfsr	0,__pbssBANK0
  1511  005D2E  0E1F               	movlw	31
  1512  005D30                     clear_6:
  1513  005D30  6AEE               	clrf	postinc0,c
  1514  005D32  06E8               	decf	wreg,f,c
  1515  005D34  E1FD               	bnz	clear_6
  1516                           
  1517                           ; Clear objects allocated to COMRAM (1 bytes)
  1518  005D36  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1519                           
  1520                           ;
  1521                           ; Setup IVTBASE
  1522                           ;
  1523  005D38  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1524  005D3A  6ED5               	movwf	213,c
  1525  005D3C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1526  005D3E  6ED6               	movwf	214,c
  1527  005D40  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1528  005D42  6ED7               	movwf	215,c
  1529  005D44                     end_of_initialization:
  1530                           	opt callstack 0
  1531  005D44                     __end_of__initialization:
  1532                           	opt callstack 0
  1533  005D44  0100               	movlb	0
  1534  005D46  EFA8  F043         	goto	_main	;jump to C main() function
  1535                           
  1536                           	psect	bssCOMRAM
  1537  00005E                     __pbssCOMRAM:
  1538                           	opt callstack 0
  1539  00005E                     _uart1RxHead:
  1540                           	opt callstack 0
  1541  00005E                     	ds	1
  1542                           
  1543                           	psect	bssBANK0
  1544  0000DA                     __pbssBANK0:
  1545                           	opt callstack 0
  1546  0000DA                     _width:
  1547                           	opt callstack 0
  1548  0000DA                     	ds	2
  1549  0000DC                     _prec:
  1550                           	opt callstack 0
  1551  0000DC                     	ds	2
  1552  0000DE                     _flags:
  1553                           	opt callstack 0
  1554  0000DE                     	ds	2
  1555  0000E0                     _timers:
  1556                           	opt callstack 0
  1557  0000E0                     	ds	2
  1558  0000E2                     _nwkDataReqQueue:
  1559                           	opt callstack 0
  1560  0000E2                     	ds	2
  1561  0000E4                     _halTimerIrqCount:
  1562                           	opt callstack 0
  1563  0000E4                     	ds	2
  1564  0000E6                     _uart1RxCount:
  1565                           	opt callstack 0
  1566  0000E6                     	ds	1
  1567  0000E7                     _uart1RxTail:
  1568                           	opt callstack 0
  1569  0000E7                     	ds	1
  1570  0000E8                     _uart1TxTail:
  1571                           	opt callstack 0
  1572  0000E8                     	ds	1
  1573  0000E9                     _uart1TxHead:
  1574                           	opt callstack 0
  1575  0000E9                     	ds	1
  1576  0000EA                     _TXPower:
  1577                           	opt callstack 0
  1578  0000EA                     	ds	1
  1579  0000EB                     _channel:
  1580                           	opt callstack 0
  1581  0000EB                     	ds	1
  1582  0000EC                     _current_sf:
  1583                           	opt callstack 0
  1584  0000EC                     	ds	1
  1585  0000ED                     _cadCounter:
  1586                           	opt callstack 0
  1587  0000ED                     	ds	1
  1588  0000EE                     _cadDone:
  1589                           	opt callstack 0
  1590  0000EE                     	ds	1
  1591  0000EF                     _atStateVar:
  1592                           	opt callstack 0
  1593  0000EF                     	ds	1
  1594  0000F0                     _commandByteCounter:
  1595                           	opt callstack 0
  1596  0000F0                     	ds	1
  1597  0000F1                     _tx_done:
  1598                           	opt callstack 0
  1599  0000F1                     	ds	1
  1600  0000F2                     _msgIDCounter:
  1601                           	opt callstack 0
  1602  0000F2                     	ds	1
  1603  0000F3                     _txTimeOut:
  1604                           	opt callstack 0
  1605  0000F3                     	ds	2
  1606  0000F5                     _cadTimeOut:
  1607                           	opt callstack 0
  1608  0000F5                     	ds	2
  1609  0000F7                     __cadBackoffTimer:
  1610                           	opt callstack 0
  1611  0000F7                     	ds	2
  1612                           
  1613                           	psect	dataBANK0
  1614  0000F9                     __pdataBANK0:
  1615                           	opt callstack 0
  1616  0000F9                     _RSSITarget:
  1617                           	opt callstack 0
  1618  0000F9                     	ds	1
  1619  0000FA                     _currentNetID:
  1620                           	opt callstack 0
  1621  0000FA                     	ds	1
  1622  0000FB                     _currentAddr1:
  1623                           	opt callstack 0
  1624  0000FB                     	ds	1
  1625  0000FC                     _currentAddr0:
  1626                           	opt callstack 0
  1627  0000FC                     	ds	1
  1628  0000FD                     _ATTimeoutTimer:
  1629                           	opt callstack 0
  1630  0000FD                     	ds	2
  1631                           
  1632                           	psect	bssBANK1
  1633  000100                     __pbssBANK1:
  1634                           	opt callstack 0
  1635  000100                     _nwkIb:
  1636                           	opt callstack 0
  1637  000100                     	ds	40
  1638  000128                     _uart1RxStatusBuffer:
  1639                           	opt callstack 0
  1640  000128                     	ds	16
  1641  000138                     _uart1RxBuffer:
  1642                           	opt callstack 0
  1643  000138                     	ds	16
  1644  000148                     _uartmsg:
  1645                           	opt callstack 0
  1646  000148                     	ds	6
  1647  00014E                     _symbolDuration:
  1648                           	opt callstack 0
  1649  00014E                     	ds	4
  1650  000152                     _current_baud_rate:
  1651                           	opt callstack 0
  1652  000152                     	ds	3
  1653  000155                     _errno:
  1654                           	opt callstack 0
  1655  000155                     	ds	2
  1656  000157                     strtok@p:
  1657                           	opt callstack 0
  1658  000157                     	ds	2
  1659  000159                     _nout:
  1660                           	opt callstack 0
  1661  000159                     	ds	2
  1662  00015B                     _nwkTxPhyActiveFrame:
  1663                           	opt callstack 0
  1664  00015B                     	ds	2
  1665  00015D                     _ledTimerVar:
  1666                           	opt callstack 0
  1667  00015D                     	ds	2
  1668  00015F                     _eeprom_write_flags:
  1669                           	opt callstack 0
  1670  00015F                     	ds	2
  1671  000161                     _nwkRxAckControl:
  1672                           	opt callstack 0
  1673  000161                     	ds	1
  1674  000162                     _uart1RxLastError:
  1675                           	opt callstack 0
  1676  000162                     	ds	1
  1677  000163                     _ledStateVar:
  1678                           	opt callstack 0
  1679  000163                     	ds	1
  1680  000164                     _radio_state_var:
  1681                           	opt callstack 0
  1682  000164                     	ds	1
  1683  000165                     _dwellTimer:
  1684                           	opt callstack 0
  1685  000165                     	ds	1
  1686  000166                     _fhssdebug:
  1687                           	opt callstack 0
  1688  000166                     	ds	1
  1689  000167                     _SNR:
  1690                           	opt callstack 0
  1691  000167                     	ds	1
  1692  000168                     _packetRSSI:
  1693                           	opt callstack 0
  1694  000168                     	ds	1
  1695  000169                     _RSSI:
  1696                           	opt callstack 0
  1697  000169                     	ds	1
  1698  00016A                     _need_radio_reset:
  1699                           	opt callstack 0
  1700  00016A                     	ds	1
  1701  00016B                     __packetIndex:
  1702                           	opt callstack 0
  1703  00016B                     	ds	1
  1704  00016C                     __implicitHeaderMode:
  1705                           	opt callstack 0
  1706  00016C                     	ds	1
  1707  00016D                     _currentMode:
  1708                           	opt callstack 0
  1709  00016D                     	ds	1
  1710  00016E                     _sinkAddr1:
  1711                           	opt callstack 0
  1712  00016E                     	ds	1
  1713  00016F                     _sinkAddr0:
  1714                           	opt callstack 0
  1715  00016F                     	ds	1
  1716  000170                     _currentMsgID:
  1717                           	opt callstack 0
  1718  000170                     	ds	1
  1719  000171                     _curent_parity:
  1720                           	opt callstack 0
  1721  000171                     	ds	1
  1722  000172                     _uart_parity:
  1723                           	opt callstack 0
  1724  000172                     	ds	1
  1725  000173                     _uart_baud_rate:
  1726                           	opt callstack 0
  1727  000173                     	ds	1
  1728  000174                     _eeprom_write_flags_enum:
  1729                           	opt callstack 0
  1730  000174                     	ds	1
  1731  000175                     _dbuf:
  1732                           	opt callstack 0
  1733  000175                     	ds	32
  1734  000195                     _nwkTxDelayTimer:
  1735                           	opt callstack 0
  1736  000195                     	ds	13
  1737  0001A2                     _nwkTxAckWaitTimer:
  1738                           	opt callstack 0
  1739  0001A2                     	ds	13
  1740  0001AF                     _nwkRxDuplicateRejectionTimer:
  1741                           	opt callstack 0
  1742  0001AF                     	ds	13
  1743  0001BC                     _EUIDbyte:
  1744                           	opt callstack 0
  1745  0001BC                     	ds	12
  1746  0001C8                     _ledtasksbuf:
  1747                           	opt callstack 0
  1748  0001C8                     	ds	10
  1749  0001D2                     _seed:
  1750                           	opt callstack 0
  1751  0001D2                     	ds	8
  1752  0001DA                     _crcObj:
  1753                           	opt callstack 0
  1754  0001DA                     	ds	3
  1755  0001DD                     _ledtimer:
  1756                           	opt callstack 0
  1757  0001DD                     	ds	2
  1758                           
  1759                           	psect	dataBANK1
  1760  0001EE                     __pdataBANK1:
  1761                           	opt callstack 0
  1762  0001EE                     stoa@F1139:
  1763                           	opt callstack 0
  1764  0001EE                     	ds	7
  1765  0001F5                     	ds	5
  1766  0001FA                     _test_timer:
  1767                           	opt callstack 0
  1768  0001FA                     	ds	2
  1769                           
  1770                           	psect	bssBANK2
  1771  000200                     __pbssBANK2:
  1772                           	opt callstack 0
  1773  000200                     _nwkGroups:
  1774                           	opt callstack 0
  1775  000200                     	ds	20
  1776  000214                     _net_key:
  1777                           	opt callstack 0
  1778  000214                     	ds	16
  1779  000224                     _aes_key:
  1780                           	opt callstack 0
  1781  000224                     	ds	16
  1782  000234                     _atCommand:
  1783                           	opt callstack 0
  1784  000234                     	ds	80
  1785  000284                     _nwkRouteTable:
  1786                           	opt callstack 0
  1787  000284                     	ds	70
  1788                           
  1789                           	psect	dataBANK2
  1790  0002CA                     __pdataBANK2:
  1791                           	opt callstack 0
  1792  0002CA                     _syncList:
  1793                           	opt callstack 0
  1794  0002CA                     	ds	10
  1795                           
  1796                           	psect	bssBANK3
  1797  000300                     __pbssBANK3:
  1798                           	opt callstack 0
  1799  000300                     _uart1TxBuffer:
  1800                           	opt callstack 0
  1801  000300                     	ds	64
  1802  000340                     _phyRxBuffer:
  1803                           	opt callstack 0
  1804  000340                     	ds	128
  1805  0003C0                     _nwkRxDuplicateRejectionTable:
  1806                           	opt callstack 0
  1807  0003C0                     	ds	50
  1808                           
  1809                           	psect	bssBANK4
  1810  000400                     __pbssBANK4:
  1811                           	opt callstack 0
  1812  000400                     _ledqueue:
  1813                           	opt callstack 0
  1814  000400                     	ds	96
  1815                           
  1816                           	psect	bssBANK5
  1817  000500                     __pbssBANK5:
  1818                           	opt callstack 0
  1819  000500                     _fhssReg:
  1820                           	opt callstack 0
  1821  000500                     	ds	189
  1822                           
  1823                           	psect	bssBIGRAM
  1824  0005BD                     __pbssBIGRAM:
  1825                           	opt callstack 0
  1826  0005BD                     _nwkFrameFrames:
  1827                           	opt callstack 0
  1828  0005BD                     	ds	685
  1829  00086A                     _tx_buffer:
  1830                           	opt callstack 0
  1831  00086A                     	ds	524
  1832                           
  1833                           	psect	cstackBANK1
  1834  0001FC                     __pcstackBANK1:
  1835                           	opt callstack 0
  1836  0001FC                     ??_nwkRxTaskHandler:
  1837                           
  1838                           ; 1 bytes @ 0x0
  1839  0001FC                     	ds	2
  1840  0001FE                     nwkRxTaskHandler@frame:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 2 bytes @ 0x2
  1844  0001FE                     	ds	2
  1845                           
  1846                           	psect	cstackBANK0
  1847  000060                     __pcstackBANK0:
  1848                           	opt callstack 0
  1849  000060                     vfpfcnvrt@ll:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 8 bytes @ 0x0
  1853  000060                     	ds	8
  1854  000068                     vfpfcnvrt@c:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 1 bytes @ 0x8
  1858  000068                     	ds	1
  1859  000069                     vfpfcnvrt@cp:
  1860                           	opt callstack 0
  1861                           
  1862                           ; 1 bytes @ 0x9
  1863  000069                     	ds	1
  1864  00006A                     vfpfcnvrt@done:
  1865                           	opt callstack 0
  1866                           
  1867                           ; 2 bytes @ 0xA
  1868  00006A                     	ds	2
  1869  00006C                     _vfpfcnvrt$7242:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 2 bytes @ 0xC
  1873  00006C                     	ds	2
  1874  00006E                     vfpfcnvrt@llu:
  1875                           	opt callstack 0
  1876                           
  1877                           ; 8 bytes @ 0xE
  1878  00006E                     	ds	8
  1879  000076                     ??_cmdMac:
  1880  000076                     ??_cmdBootLoad:
  1881  000076                     appDataInd@ind:
  1882                           	opt callstack 0
  1883  000076                     nwkRxServiceDataInd@ind:
  1884                           	opt callstack 0
  1885  000076                     cmdSend@cmd:
  1886                           	opt callstack 0
  1887  000076                     cmdBcast@cmd:
  1888                           	opt callstack 0
  1889  000076                     cmdSetAddr@cmd:
  1890                           	opt callstack 0
  1891  000076                     cmdSetNaddr@cmd:
  1892                           	opt callstack 0
  1893  000076                     cmdSetAES@cmd:
  1894                           	opt callstack 0
  1895  000076                     cmdSetRFCH@cmd:
  1896                           	opt callstack 0
  1897  000076                     cmdSetTX@cmd:
  1898                           	opt callstack 0
  1899  000076                     cmdSetCADRSSI@atCommand:
  1900                           	opt callstack 0
  1901  000076                     cmdSetParity@atCommand:
  1902                           	opt callstack 0
  1903  000076                     cmdSetSF@atCommand:
  1904                           	opt callstack 0
  1905  000076                     print_hop_table@atCommand:
  1906                           	opt callstack 0
  1907  000076                     set_hop_table_ttl@cmd:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x16
  1911  000076                     	ds	1
  1912  000077                     ??_nwkRxServiceDataInd:
  1913  000077                     cmdMac@i:
  1914                           	opt callstack 0
  1915  000077                     appDataInd@data:
  1916                           	opt callstack 0
  1917                           
  1918                           ; 65 bytes @ 0x17
  1919  000077                     	ds	1
  1920  000078                     ??_cmdSend:
  1921  000078                     ??_cmdBcast:
  1922  000078                     ??_cmdSetAES:
  1923  000078                     cmdSetAddr@p2:
  1924                           	opt callstack 0
  1925  000078                     cmdSetNaddr@p2:
  1926                           	opt callstack 0
  1927  000078                     cmdSetRFCH@p1:
  1928                           	opt callstack 0
  1929  000078                     cmdSetTX@p2:
  1930                           	opt callstack 0
  1931  000078                     cmdSetCADRSSI@p1:
  1932                           	opt callstack 0
  1933  000078                     cmdSetSF@p1:
  1934                           	opt callstack 0
  1935                           
  1936                           ; 2 bytes @ 0x18
  1937  000078                     	ds	2
  1938  00007A                     cmdBcast@p1:
  1939                           	opt callstack 0
  1940  00007A                     cmdSetAddr@p1:
  1941                           	opt callstack 0
  1942  00007A                     cmdSetNaddr@p1:
  1943                           	opt callstack 0
  1944  00007A                     cmdSetTX@p1:
  1945                           	opt callstack 0
  1946  00007A                     cmdSetRFCH@CHstr:
  1947                           	opt callstack 0
  1948  00007A                     cmdSetCADRSSI@CHstr:
  1949                           	opt callstack 0
  1950  00007A                     cmdSetSF@CHstr:
  1951                           	opt callstack 0
  1952  00007A                     cmdSend@destaddr:
  1953                           	opt callstack 0
  1954  00007A                     cmdSetAES@AESstr:
  1955                           	opt callstack 0
  1956                           
  1957                           ; 32 bytes @ 0x1A
  1958  00007A                     	ds	2
  1959  00007C                     cmdBcast@buf_id:
  1960                           	opt callstack 0
  1961  00007C                     cmdSetNaddr@tempaddr:
  1962                           	opt callstack 0
  1963  00007C                     cmdSetTX@temp:
  1964                           	opt callstack 0
  1965  00007C                     cmdSetAddr@tempaddr:
  1966                           	opt callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x1C
  1969  00007C                     	ds	1
  1970  00007D                     cmdSetRFCH@p2:
  1971                           	opt callstack 0
  1972  00007D                     cmdSetCADRSSI@p2:
  1973                           	opt callstack 0
  1974  00007D                     cmdSetSF@p2:
  1975                           	opt callstack 0
  1976  00007D                     cmdSetTX@CHstr:
  1977                           	opt callstack 0
  1978                           
  1979                           ; 3 bytes @ 0x1D
  1980  00007D                     	ds	2
  1981  00007F                     cmdSetRFCH@temp:
  1982                           	opt callstack 0
  1983  00007F                     cmdSetCADRSSI@temp:
  1984                           	opt callstack 0
  1985  00007F                     cmdSetSF@temp:
  1986                           	opt callstack 0
  1987  00007F                     cmdSend@tempaddr:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 2 bytes @ 0x1F
  1991  00007F                     	ds	2
  1992  000081                     cmdSend@p2:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 2 bytes @ 0x21
  1996  000081                     	ds	2
  1997  000083                     cmdSend@p1:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 2 bytes @ 0x23
  2001  000083                     	ds	2
  2002  000085                     cmdSend@buf_id:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 1 bytes @ 0x25
  2006  000085                     	ds	21
  2007  00009A                     cmdSetAES@p2:
  2008                           	opt callstack 0
  2009                           
  2010                           ; 2 bytes @ 0x3A
  2011  00009A                     	ds	2
  2012  00009C                     cmdSetAES@temp:
  2013                           	opt callstack 0
  2014                           
  2015                           ; 3 bytes @ 0x3C
  2016  00009C                     	ds	3
  2017  00009F                     cmdSetAES@key_type:
  2018                           	opt callstack 0
  2019                           
  2020                           ; 1 bytes @ 0x3F
  2021  00009F                     	ds	1
  2022  0000A0                     cmdSetAES@byte:
  2023                           	opt callstack 0
  2024                           
  2025                           ; 1 bytes @ 0x40
  2026  0000A0                     	ds	1
  2027  0000A1                     cmdSetAES@p1:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 2 bytes @ 0x41
  2031  0000A1                     	ds	2
  2032  0000A3                     cmdSetAES@i:
  2033                           	opt callstack 0
  2034                           
  2035                           ; 1 bytes @ 0x43
  2036  0000A3                     	ds	1
  2037  0000A4                     executeATCommand@cmd:
  2038                           	opt callstack 0
  2039                           
  2040                           ; 2 bytes @ 0x44
  2041  0000A4                     	ds	2
  2042  0000A6                     ??_executeATCommand:
  2043                           
  2044                           ; 1 bytes @ 0x46
  2045  0000A6                     	ds	3
  2046  0000A9                     ??_processATCommand:
  2047                           
  2048                           ; 1 bytes @ 0x49
  2049  0000A9                     	ds	2
  2050  0000AB                     processATCommand@data_828:
  2051                           	opt callstack 0
  2052                           
  2053                           ; 1 bytes @ 0x4B
  2054  0000AB                     	ds	1
  2055  0000AC                     processATCommand@data:
  2056                           	opt callstack 0
  2057                           
  2058                           ; 1 bytes @ 0x4C
  2059  0000AC                     	ds	12
  2060  0000B8                     appDataInd@dataptr:
  2061                           	opt callstack 0
  2062                           
  2063                           ; 2 bytes @ 0x58
  2064  0000B8                     	ds	2
  2065  0000BA                     appDataInd@i:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 1 bytes @ 0x5A
  2069  0000BA                     	ds	1
  2070  0000BB                     nwkRxIndicateFrame@frame:
  2071                           	opt callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x5B
  2074  0000BB                     	ds	2
  2075  0000BD                     ??_nwkRxIndicateFrame:
  2076                           
  2077                           ; 1 bytes @ 0x5D
  2078  0000BD                     	ds	4
  2079  0000C1                     _nwkRxIndicateFrame$5152:
  2080                           	opt callstack 0
  2081                           
  2082                           ; 1 bytes @ 0x61
  2083  0000C1                     	ds	1
  2084  0000C2                     _nwkRxIndicateFrame$5153:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 1 bytes @ 0x62
  2088  0000C2                     	ds	1
  2089  0000C3                     _nwkRxIndicateFrame$5154:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 1 bytes @ 0x63
  2093  0000C3                     	ds	1
  2094  0000C4                     _nwkRxIndicateFrame$5155:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 1 bytes @ 0x64
  2098  0000C4                     	ds	1
  2099  0000C5                     _nwkRxIndicateFrame$5156:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 1 bytes @ 0x65
  2103  0000C5                     	ds	1
  2104  0000C6                     _nwkRxIndicateFrame$5157:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 1 bytes @ 0x66
  2108  0000C6                     	ds	1
  2109  0000C7                     nwkRxIndicateFrame@header:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 2 bytes @ 0x67
  2113  0000C7                     	ds	2
  2114  0000C9                     nwkRxIndicateFrame@ind:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 12 bytes @ 0x69
  2118  0000C9                     	ds	12
  2119  0000D5                     nwkRxHandleIndication@frame:
  2120                           	opt callstack 0
  2121                           
  2122                           ; 2 bytes @ 0x75
  2123  0000D5                     	ds	2
  2124  0000D7                     
  2125                           ; 1 bytes @ 0x77
  2126  0000D7                     	ds	2
  2127  0000D9                     nwkRxHandleIndication@ack:
  2128                           	opt callstack 0
  2129                           
  2130                           ; 1 bytes @ 0x79
  2131  0000D9                     	ds	1
  2132                           
  2133                           	psect	cstackCOMRAM
  2134  000001                     __pcstackCOMRAM:
  2135                           	opt callstack 0
  2136  000001                     ??_TMR0_ISR:
  2137  000001                     
  2138                           ; 1 bytes @ 0x0
  2139  000001                     	ds	1
  2140  000002                     ??_CRC_Initialize:
  2141  000002                     ??_nwkRouteNormalizeRanks:
  2142  000002                     ??_set_parity:
  2143  000002                     ??_set_uart_baud:
  2144  000002                     ??_nwkTxConvertPhyStatus:
  2145  000002                     ?_strlen:
  2146                           	opt callstack 0
  2147  000002                     ?_get_timer0base:
  2148                           	opt callstack 0
  2149  000002                     ?_nwkFrameNext:
  2150                           	opt callstack 0
  2151  000002                     ?_NWK_RouteFindEntry:
  2152                           	opt callstack 0
  2153  000002                     ?_NWK_RouteNewEntry:
  2154                           	opt callstack 0
  2155  000002                     ?_isupper:
  2156                           	opt callstack 0
  2157  000002                     ?_isalpha:
  2158                           	opt callstack 0
  2159  000002                     ?_isdigit:
  2160                           	opt callstack 0
  2161  000002                     ?_isspace:
  2162                           	opt callstack 0
  2163  000002                     ?_strncmp:
  2164                           	opt callstack 0
  2165  000002                     ?_strchr:
  2166                           	opt callstack 0
  2167  000002                     ?_islower:
  2168                           	opt callstack 0
  2169  000002                     ?_CircularBufferSize:
  2170                           	opt callstack 0
  2171  000002                     ?_CRC_ReverseValue:
  2172                           	opt callstack 0
  2173  000002                     ?___wmul:
  2174                           	opt callstack 0
  2175  000002                     ?___lmul:
  2176                           	opt callstack 0
  2177  000002                     ?___llmod:
  2178                           	opt callstack 0
  2179  000002                     ?___xxtofl:
  2180                           	opt callstack 0
  2181  000002                     ?___omul:
  2182                           	opt callstack 0
  2183  000002                     ?___aodiv:
  2184                           	opt callstack 0
  2185  000002                     ?___aomod:
  2186                           	opt callstack 0
  2187  000002                     ?___lodiv:
  2188                           	opt callstack 0
  2189  000002                     ?___lomod:
  2190                           	opt callstack 0
  2191  000002                     get_free_tx_buffer@buf_id:
  2192                           	opt callstack 0
  2193  000002                     SPI1_ExchangeByte@data:
  2194                           	opt callstack 0
  2195  000002                     INTERRUPT_Initialize@state:
  2196                           	opt callstack 0
  2197  000002                     UART1_Read@readValue:
  2198                           	opt callstack 0
  2199  000002                     UART1_Write@txData:
  2200                           	opt callstack 0
  2201  000002                     CRC_8BitDataWrite@data:
  2202                           	opt callstack 0
  2203  000002                     nwkFrameInit@i:
  2204                           	opt callstack 0
  2205  000002                     nwkGroupInit@i:
  2206                           	opt callstack 0
  2207  000002                     nwkRouteInit@i:
  2208                           	opt callstack 0
  2209  000002                     get_rssi@rssi_reg:
  2210                           	opt callstack 0
  2211  000002                     free_tx_buffer@req:
  2212                           	opt callstack 0
  2213  000002                     cmdSendSink@cmd:
  2214                           	opt callstack 0
  2215  000002                     cmdSetTTL@cmd:
  2216                           	opt callstack 0
  2217  000002                     cmdGetRxCnt@atCommand:
  2218                           	opt callstack 0
  2219  000002                     CircularBufferSize@ctx:
  2220                           	opt callstack 0
  2221  000002                     get_timer0base@timer:
  2222                           	opt callstack 0
  2223  000002                     set_timer0base@timer:
  2224                           	opt callstack 0
  2225  000002                     TMR0_SetInterruptHandler@InterruptHandler:
  2226                           	opt callstack 0
  2227  000002                     DATAEE_WriteByte@bAdd:
  2228                           	opt callstack 0
  2229  000002                     DATAEE_ReadByte@bAdd:
  2230                           	opt callstack 0
  2231  000002                     UART1_SetFramingErrorHandler@interruptHandler:
  2232                           	opt callstack 0
  2233  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
  2234                           	opt callstack 0
  2235  000002                     UART1_SetErrorHandler@interruptHandler:
  2236                           	opt callstack 0
  2237  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
  2238                           	opt callstack 0
  2239  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
  2240                           	opt callstack 0
  2241  000002                     CRC_ReverseValue@crc:
  2242                           	opt callstack 0
  2243  000002                     NWK_OpenEndpoint@handler:
  2244                           	opt callstack 0
  2245  000002                     NWK_DataReq@req:
  2246                           	opt callstack 0
  2247  000002                     nwkFrameFree@frame:
  2248                           	opt callstack 0
  2249  000002                     nwkFrameNext@frame:
  2250                           	opt callstack 0
  2251  000002                     nwkFrameCommandInit@frame:
  2252                           	opt callstack 0
  2253  000002                     NWK_GroupIsMember@group:
  2254                           	opt callstack 0
  2255  000002                     NWK_RouteFindEntry@dst:
  2256                           	opt callstack 0
  2257  000002                     NWK_RouteFreeEntry@entry:
  2258                           	opt callstack 0
  2259  000002                     nwkFrame@nwkFramePayloadSize@frame_4705:
  2260                           	opt callstack 0
  2261  000002                     nwkTxConfirm@frame:
  2262                           	opt callstack 0
  2263  000002                     PHY_SetPanId@panId:
  2264                           	opt callstack 0
  2265  000002                     PHY_SetShortAddr@addr:
  2266                           	opt callstack 0
  2267  000002                     SYS_TimerStarted@timer:
  2268                           	opt callstack 0
  2269  000002                     placeTimer@timer:
  2270                           	opt callstack 0
  2271  000002                     ___wmul@multiplier:
  2272                           	opt callstack 0
  2273  000002                     isalpha@c:
  2274                           	opt callstack 0
  2275  000002                     isdigit@c:
  2276                           	opt callstack 0
  2277  000002                     isspace@c:
  2278                           	opt callstack 0
  2279  000002                     isupper@c:
  2280                           	opt callstack 0
  2281  000002                     memset@dest:
  2282                           	opt callstack 0
  2283  000002                     srand@s:
  2284                           	opt callstack 0
  2285  000002                     strlen@s:
  2286                           	opt callstack 0
  2287  000002                     islower@c:
  2288                           	opt callstack 0
  2289  000002                     strchr@s:
  2290                           	opt callstack 0
  2291  000002                     strncmp@_l:
  2292                           	opt callstack 0
  2293  000002                     DIA_ReadByte@flashAddr:
  2294                           	opt callstack 0
  2295  000002                     ___lmul@multiplier:
  2296                           	opt callstack 0
  2297  000002                     ___llmod@dividend:
  2298                           	opt callstack 0
  2299  000002                     ___xxtofl@val:
  2300                           	opt callstack 0
  2301  000002                     ___omul@multiplier:
  2302                           	opt callstack 0
  2303  000002                     ___aodiv@dividend:
  2304                           	opt callstack 0
  2305  000002                     ___aomod@dividend:
  2306                           	opt callstack 0
  2307  000002                     ___lodiv@dividend:
  2308                           	opt callstack 0
  2309  000002                     ___lomod@dividend:
  2310                           	opt callstack 0
  2311                           
  2312                           ; 8 bytes @ 0x1
  2313  000002                     	ds	1
  2314  000003                     ??_get_free_tx_buffer:
  2315  000003                     putch@txData:
  2316                           	opt callstack 0
  2317  000003                     nwkRouteNormalizeRanks@i:
  2318                           	opt callstack 0
  2319  000003                     SPI1_WriteBlock@block:
  2320                           	opt callstack 0
  2321  000003                     SPI1_ReadBlock@block:
  2322                           	opt callstack 0
  2323  000003                     CRC_Initialize@poly:
  2324                           	opt callstack 0
  2325  000003                     get_rssi@temp_rssi:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x2
  2329  000003                     	ds	1
  2330  000004                     ??_free_tx_buffer:
  2331  000004                     ??_nwkFrameNext:
  2332  000004                     ??_srand:
  2333  000004                     ??_isupper:
  2334  000004                     ??_isalpha:
  2335  000004                     ??_isdigit:
  2336  000004                     ??_isspace:
  2337  000004                     ??_islower:
  2338  000004                     ??_CircularBufferSize:
  2339  000004                     ??_TMR0_Initialize:
  2340  000004                     ??_CRC_ReverseValue:
  2341  000004                     ??strspn@nwkFrame@nwkFramePayloadSize:
  2342  000004                     set_parity@parity:
  2343                           	opt callstack 0
  2344  000004                     set_uart_baud@i:
  2345                           	opt callstack 0
  2346  000004                     DATAEE_WriteByte@bData:
  2347                           	opt callstack 0
  2348  000004                     NWK_OpenEndpoint@id:
  2349                           	opt callstack 0
  2350  000004                     NWK_RouteFindEntry@multicast:
  2351                           	opt callstack 0
  2352  000004                     nwkTxConfirm@status:
  2353                           	opt callstack 0
  2354  000004                     nwkTxConvertPhyStatus@status:
  2355                           	opt callstack 0
  2356  000004                     get_timer0base@tval:
  2357                           	opt callstack 0
  2358  000004                     set_timer0base@tval:
  2359                           	opt callstack 0
  2360  000004                     NWK_SetAddr@addr:
  2361                           	opt callstack 0
  2362  000004                     NWK_SetPanId@panId:
  2363                           	opt callstack 0
  2364  000004                     nwkDataReqTxConf@frame:
  2365                           	opt callstack 0
  2366  000004                     SYS_TimerStarted@t:
  2367                           	opt callstack 0
  2368  000004                     ___wmul@multiplicand:
  2369                           	opt callstack 0
  2370  000004                     memset@c:
  2371                           	opt callstack 0
  2372  000004                     fputc@c:
  2373                           	opt callstack 0
  2374  000004                     strlen@a:
  2375                           	opt callstack 0
  2376  000004                     strchr@c:
  2377                           	opt callstack 0
  2378  000004                     strncmp@_r:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x3
  2382  000004                     	ds	1
  2383  000005                     DATAEE_WriteByte@GIEBitValue:
  2384                           	opt callstack 0
  2385  000005                     nwkRxInit@i:
  2386                           	opt callstack 0
  2387  000005                     PHY_DataConf@status:
  2388                           	opt callstack 0
  2389  000005                     SPI1_WriteBlock@blockSize:
  2390                           	opt callstack 0
  2391  000005                     SPI1_ReadBlock@blockSize:
  2392                           	opt callstack 0
  2393  000005                     CRC_Initialize@seed:
  2394                           	opt callstack 0
  2395  000005                     CRC_ReverseValue@reverse:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x4
  2399  000005                     	ds	1
  2400  000006                     ??_strchr:
  2401  000006                     ??___xxtofl:
  2402  000006                     free_tx_buffer@buf_id:
  2403                           	opt callstack 0
  2404  000006                     loadMACAddr@i:
  2405                           	opt callstack 0
  2406  000006                     NWK_Init@i:
  2407                           	opt callstack 0
  2408  000006                     NWK_GroupIsMember@i:
  2409                           	opt callstack 0
  2410  000006                     NWK_RouteNewEntry@i:
  2411                           	opt callstack 0
  2412  000006                     DATAEE_ReadByte_Platform@addr:
  2413                           	opt callstack 0
  2414  000006                     DATAEE_WriteByte_Platform@addr:
  2415                           	opt callstack 0
  2416  000006                     ___wmul@product:
  2417                           	opt callstack 0
  2418  000006                     memset@n:
  2419                           	opt callstack 0
  2420  000006                     fputc@fp:
  2421                           	opt callstack 0
  2422  000006                     strncmp@n:
  2423                           	opt callstack 0
  2424  000006                     ___lmul@multiplicand:
  2425                           	opt callstack 0
  2426  000006                     ___llmod@divisor:
  2427                           	opt callstack 0
  2428                           
  2429                           ; 4 bytes @ 0x5
  2430  000006                     	ds	1
  2431  000007                     NWK_RouteFindEntry@i:
  2432                           	opt callstack 0
  2433  000007                     appDataConf@req:
  2434                           	opt callstack 0
  2435  000007                     SPI1_WriteBlock@data:
  2436                           	opt callstack 0
  2437  000007                     SPI1_ReadBlock@data:
  2438                           	opt callstack 0
  2439  000007                     CRC_ReverseValue@mask:
  2440                           	opt callstack 0
  2441  000007                     NWK_RouteNewEntry@iter:
  2442                           	opt callstack 0
  2443                           
  2444                           ; 2 bytes @ 0x6
  2445  000007                     	ds	1
  2446  000008                     ??_memset:
  2447  000008                     ??_fputc:
  2448  000008                     ??_strncmp:
  2449  000008                     ?_toupper:
  2450                           	opt callstack 0
  2451  000008                     ?_strspn:
  2452                           	opt callstack 0
  2453  000008                     ?_strcspn:
  2454                           	opt callstack 0
  2455  000008                     ?_NWK_RouteNextHop:
  2456                           	opt callstack 0
  2457  000008                     DATAEE_ReadByte_Platform@copy3:
  2458                           	opt callstack 0
  2459  000008                     DATAEE_WriteByte_Platform@data:
  2460                           	opt callstack 0
  2461  000008                     nwkTxAckReceived@ind:
  2462                           	opt callstack 0
  2463  000008                     _isspace$7729:
  2464                           	opt callstack 0
  2465  000008                     nwkDataReqTxConf@req:
  2466                           	opt callstack 0
  2467  000008                     NWK_RouteNextHop@dst:
  2468                           	opt callstack 0
  2469  000008                     nwkRouteRemove@dst:
  2470                           	opt callstack 0
  2471  000008                     nwkRouteFrameSent@frame:
  2472                           	opt callstack 0
  2473  000008                     memcpy@d1:
  2474                           	opt callstack 0
  2475  000008                     toupper@c:
  2476                           	opt callstack 0
  2477  000008                     strcspn@s:
  2478                           	opt callstack 0
  2479  000008                     strspn@s:
  2480                           	opt callstack 0
  2481  000008                     placeTimer@timeout:
  2482                           	opt callstack 0
  2483                           
  2484                           ; 4 bytes @ 0x7
  2485  000008                     	ds	1
  2486  000009                     ?_CRC_CalculatedResultGet:
  2487                           	opt callstack 0
  2488  000009                     ?_atoi:
  2489                           	opt callstack 0
  2490  000009                     DATAEE_ReadByte_Platform@copy2:
  2491                           	opt callstack 0
  2492  000009                     SX1276WriteBuffer@buffer:
  2493                           	opt callstack 0
  2494  000009                     CRC_CalculatedResultGet@xorValue:
  2495                           	opt callstack 0
  2496  000009                     nwkDataReqConfirm@req:
  2497                           	opt callstack 0
  2498  000009                     NWK_RouteNewEntry@entry:
  2499                           	opt callstack 0
  2500  000009                     SX1276ReadBuffer@buffer:
  2501                           	opt callstack 0
  2502  000009                     atoi@s:
  2503                           	opt callstack 0
  2504  000009                     strncmp@l:
  2505                           	opt callstack 0
  2506                           
  2507                           ; 2 bytes @ 0x8
  2508  000009                     	ds	1
  2509  00000A                     ??_toupper:
  2510  00000A                     ??_nwkRouteFrameSent:
  2511  00000A                     ?_CircularBufferSpace:
  2512                           	opt callstack 0
  2513  00000A                     DATAEE_ReadByte_Platform@copy1:
  2514                           	opt callstack 0
  2515  00000A                     NWK_RouteNextHop@multicast:
  2516                           	opt callstack 0
  2517  00000A                     nwkRouteRemove@multicast:
  2518                           	opt callstack 0
  2519  00000A                     SX1276WriteBuffer@size:
  2520                           	opt callstack 0
  2521  00000A                     ___llmod@counter:
  2522                           	opt callstack 0
  2523  00000A                     ___xxtofl@sign:
  2524                           	opt callstack 0
  2525  00000A                     CircularBufferSpace@ctx:
  2526                           	opt callstack 0
  2527  00000A                     memcpy@s1:
  2528                           	opt callstack 0
  2529  00000A                     memset@k:
  2530                           	opt callstack 0
  2531  00000A                     strcspn@c:
  2532                           	opt callstack 0
  2533  00000A                     strspn@c:
  2534                           	opt callstack 0
  2535  00000A                     ___lmul@product:
  2536                           	opt callstack 0
  2537  00000A                     ___omul@multiplicand:
  2538                           	opt callstack 0
  2539  00000A                     ___aodiv@divisor:
  2540                           	opt callstack 0
  2541  00000A                     ___aomod@divisor:
  2542                           	opt callstack 0
  2543  00000A                     ___lodiv@divisor:
  2544                           	opt callstack 0
  2545  00000A                     ___lomod@divisor:
  2546                           	opt callstack 0
  2547                           
  2548                           ; 8 bytes @ 0x9
  2549  00000A                     	ds	1
  2550  00000B                     ??_CRC_CalculatedResultGet:
  2551  00000B                     ??_atoi:
  2552  00000B                     ??_nwkDataReqConfirm:
  2553  00000B                     SX1276ReadBuffer@size:
  2554                           	opt callstack 0
  2555  00000B                     SX1276WriteBuffer@addr:
  2556                           	opt callstack 0
  2557  00000B                     ___xxtofl@exp:
  2558                           	opt callstack 0
  2559  00000B                     NWK_RouteNextHop@entry:
  2560                           	opt callstack 0
  2561  00000B                     nwkRouteRemove@entry:
  2562                           	opt callstack 0
  2563  00000B                     nwkRouteFrameReceived@frame:
  2564                           	opt callstack 0
  2565  00000B                     nwkTxAckReceived@command:
  2566                           	opt callstack 0
  2567  00000B                     strncmp@r:
  2568                           	opt callstack 0
  2569                           
  2570                           ; 2 bytes @ 0xA
  2571  00000B                     	ds	1
  2572  00000C                     ??_strspn:
  2573  00000C                     ??_strcspn:
  2574  00000C                     ??_CircularBufferSpace:
  2575  00000C                     SX1276ReadBuffer@addr:
  2576                           	opt callstack 0
  2577  00000C                     nwkRouteFrameSent@entry:
  2578                           	opt callstack 0
  2579  00000C                     placeTimer@prev:
  2580                           	opt callstack 0
  2581  00000C                     memcpy@n:
  2582                           	opt callstack 0
  2583  00000C                     memset@s:
  2584                           	opt callstack 0
  2585  00000C                     ___xxtofl@arg:
  2586                           	opt callstack 0
  2587                           
  2588                           ; 4 bytes @ 0xB
  2589  00000C                     	ds	1
  2590  00000D                     ??_nwkRouteFrameReceived:
  2591  00000D                     ?_strstr:
  2592                           	opt callstack 0
  2593  00000D                     ?_stoa:
  2594                           	opt callstack 0
  2595  00000D                     nwkRouteErrorReceived@ind:
  2596                           	opt callstack 0
  2597  00000D                     SX1276Read@addr:
  2598                           	opt callstack 0
  2599  00000D                     nwkDataReqConfirm@prev:
  2600                           	opt callstack 0
  2601  00000D                     nwkRoutePrepareTx@frame:
  2602                           	opt callstack 0
  2603  00000D                     nwkTxAckReceived@frame:
  2604                           	opt callstack 0
  2605  00000D                     stoa@fp:
  2606                           	opt callstack 0
  2607  00000D                     fputs@s:
  2608                           	opt callstack 0
  2609  00000D                     strstr@h:
  2610                           	opt callstack 0
  2611  00000D                     strcspn@i:
  2612                           	opt callstack 0
  2613  00000D                     strspn@i:
  2614                           	opt callstack 0
  2615                           
  2616                           ; 2 bytes @ 0xC
  2617  00000D                     	ds	1
  2618  00000E                     ?_nwkFrameAlloc:
  2619                           	opt callstack 0
  2620  00000E                     SX1276Read@data:
  2621                           	opt callstack 0
  2622  00000E                     memcpy@tmp:
  2623                           	opt callstack 0
  2624  00000E                     CRC_CalculatedResultGet@mask:
  2625                           	opt callstack 0
  2626  00000E                     placeTimer@t:
  2627                           	opt callstack 0
  2628  00000E                     _toupper$7868:
  2629                           	opt callstack 0
  2630                           
  2631                           ; 2 bytes @ 0xD
  2632  00000E                     	ds	1
  2633  00000F                     ?_strtok:
  2634                           	opt callstack 0
  2635  00000F                     ?_getSignalBandwidth:
  2636                           	opt callstack 0
  2637  00000F                     ?_getSpreadingFactor:
  2638                           	opt callstack 0
  2639  00000F                     SX1276Write@data:
  2640                           	opt callstack 0
  2641  00000F                     stoa@s:
  2642                           	opt callstack 0
  2643  00000F                     nwkRouteErrorReceived@command:
  2644                           	opt callstack 0
  2645  00000F                     atoi@neg:
  2646                           	opt callstack 0
  2647  00000F                     memcpy@d:
  2648                           	opt callstack 0
  2649  00000F                     fputs@fp:
  2650                           	opt callstack 0
  2651  00000F                     strstr@n:
  2652                           	opt callstack 0
  2653  00000F                     strtok@s:
  2654                           	opt callstack 0
  2655                           
  2656                           ; 2 bytes @ 0xE
  2657  00000F                     	ds	1
  2658  000010                     ??_nwkFrameAlloc:
  2659  000010                     ??_stoa:
  2660  000010                     ?___flmul:
  2661                           	opt callstack 0
  2662  000010                     ?___strtoxl:
  2663                           	opt callstack 0
  2664  000010                     CRC_CalculatedResultGet@reverse:
  2665                           	opt callstack 0
  2666  000010                     SX1276Write@addr:
  2667                           	opt callstack 0
  2668  000010                     SYS_TimerStart@timer:
  2669                           	opt callstack 0
  2670  000010                     ___strtoxl@s:
  2671                           	opt callstack 0
  2672  000010                     ___flge@ff1:
  2673                           	opt callstack 0
  2674  000010                     ___flmul@b:
  2675                           	opt callstack 0
  2676                           
  2677                           ; 4 bytes @ 0xF
  2678  000010                     	ds	1
  2679  000011                     ??_setCodingRate4:
  2680  000011                     ??_cad:
  2681  000011                     nwkRouteFrameReceived@discovery:
  2682                           	opt callstack 0
  2683  000011                     setTxPower@power:
  2684                           	opt callstack 0
  2685  000011                     setSyncWord@sw:
  2686                           	opt callstack 0
  2687  000011                     receive@size:
  2688                           	opt callstack 0
  2689  000011                     fputs@c:
  2690                           	opt callstack 0
  2691  000011                     CRC_CalculatedResultGet@result:
  2692                           	opt callstack 0
  2693  000011                     nwkRoutePrepareTx@header:
  2694                           	opt callstack 0
  2695  000011                     setPreambleLength@length:
  2696                           	opt callstack 0
  2697  000011                     PHY_DataReq@data:
  2698                           	opt callstack 0
  2699  000011                     _atoi$7702:
  2700                           	opt callstack 0
  2701  000011                     memcpy@s:
  2702                           	opt callstack 0
  2703  000011                     strstr@nl:
  2704                           	opt callstack 0
  2705  000011                     strtok@sep:
  2706                           	opt callstack 0
  2707  000011                     stoa@nuls:
  2708                           	opt callstack 0
  2709                           
  2710                           ; 7 bytes @ 0x10
  2711  000011                     	ds	1
  2712  000012                     nwkFrameAlloc@i:
  2713                           	opt callstack 0
  2714  000012                     _nwkRouteFrameReceived$4119:
  2715                           	opt callstack 0
  2716  000012                     setCodingRate4@cr:
  2717                           	opt callstack 0
  2718  000012                     ___aodiv@counter:
  2719                           	opt callstack 0
  2720  000012                     ___aomod@counter:
  2721                           	opt callstack 0
  2722  000012                     ___lomod@counter:
  2723                           	opt callstack 0
  2724  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  2725                           	opt callstack 0
  2726  000012                     nwkRxRejectDuplicate@header:
  2727                           	opt callstack 0
  2728  000012                     nwkTxAckWaitTimerHandler@timer:
  2729                           	opt callstack 0
  2730  000012                     nwkTxDelayTimerHandler@timer:
  2731                           	opt callstack 0
  2732  000012                     cad@RSSI:
  2733                           	opt callstack 0
  2734  000012                     fputs@i:
  2735                           	opt callstack 0
  2736  000012                     ___strtoxl@endptr:
  2737                           	opt callstack 0
  2738  000012                     ___omul@product:
  2739                           	opt callstack 0
  2740  000012                     ___lodiv@quotient:
  2741                           	opt callstack 0
  2742                           
  2743                           ; 8 bytes @ 0x11
  2744  000012                     	ds	1
  2745  000013                     ??_getSignalBandwidth:
  2746  000013                     ??_getSpreadingFactor:
  2747  000013                     ?_crc16_app:
  2748                           	opt callstack 0
  2749  000013                     PHY_DataInd@ind:
  2750                           	opt callstack 0
  2751  000013                     setCodingRate4@denominator:
  2752                           	opt callstack 0
  2753  000013                     PHY_DataReq@size:
  2754                           	opt callstack 0
  2755  000013                     ___aodiv@sign:
  2756                           	opt callstack 0
  2757  000013                     ___aomod@sign:
  2758                           	opt callstack 0
  2759  000013                     CircularBufferPushBack@ctx:
  2760                           	opt callstack 0
  2761  000013                     crc16_app@dptr:
  2762                           	opt callstack 0
  2763  000013                     nwkRouteFrameReceived@entry:
  2764                           	opt callstack 0
  2765  000013                     _atoi$7704:
  2766                           	opt callstack 0
  2767                           
  2768                           ; 2 bytes @ 0x12
  2769  000013                     	ds	1
  2770  000014                     ??_nwkTxTaskHandler:
  2771  000014                     ??_PHY_DataInd:
  2772  000014                     ??_nwkRxRejectDuplicate:
  2773  000014                     ?_abs:
  2774                           	opt callstack 0
  2775  000014                     ?_pad:
  2776                           	opt callstack 0
  2777  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  2778                           	opt callstack 0
  2779  000014                     cad@temp:
  2780                           	opt callstack 0
  2781  000014                     pad@fp:
  2782                           	opt callstack 0
  2783  000014                     abs@a:
  2784                           	opt callstack 0
  2785  000014                     ___strtoxl@base:
  2786                           	opt callstack 0
  2787  000014                     ___flge@ff2:
  2788                           	opt callstack 0
  2789  000014                     ___flmul@a:
  2790                           	opt callstack 0
  2791  000014                     ___aodiv@quotient:
  2792                           	opt callstack 0
  2793                           
  2794                           ; 8 bytes @ 0x13
  2795  000014                     	ds	1
  2796  000015                     CircularBufferPushBack@val:
  2797                           	opt callstack 0
  2798  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  2799                           	opt callstack 0
  2800  000015                     getSignalBandwidth@bw:
  2801                           	opt callstack 0
  2802  000015                     _atoi$7703:
  2803                           	opt callstack 0
  2804  000015                     crc16_app@len:
  2805                           	opt callstack 0
  2806  000015                     nwkRouteFrameReceived@header:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 2 bytes @ 0x14
  2810  000015                     	ds	1
  2811  000016                     ??_abs:
  2812  000016                     ??_CircularBufferPushBack:
  2813  000016                     ?___lldiv:
  2814                           	opt callstack 0
  2815  000016                     nwkTxAckWaitTimerHandler@restart:
  2816                           	opt callstack 0
  2817  000016                     nwkTxDelayTimerHandler@restart:
  2818                           	opt callstack 0
  2819  000016                     ___strtoxl@is_signed:
  2820                           	opt callstack 0
  2821  000016                     nwkTxTaskHandler@frame:
  2822                           	opt callstack 0
  2823  000016                     pad@buf:
  2824                           	opt callstack 0
  2825  000016                     atoi@n:
  2826                           	opt callstack 0
  2827  000016                     ___lldiv@dividend:
  2828                           	opt callstack 0
  2829                           
  2830                           ; 4 bytes @ 0x15
  2831  000016                     	ds	1
  2832  000017                     ??___strtoxl:
  2833  000017                     crc16_app@seed:
  2834                           	opt callstack 0
  2835  000017                     PHY_DataInd@frame:
  2836                           	opt callstack 0
  2837  000017                     nwkTxAckWaitTimerHandler@frame:
  2838                           	opt callstack 0
  2839  000017                     nwkTxDelayTimerHandler@frame:
  2840                           	opt callstack 0
  2841                           
  2842                           ; 2 bytes @ 0x16
  2843  000017                     	ds	1
  2844  000018                     ??___flmul:
  2845  000018                     ??___flge:
  2846  000018                     nwkRxRejectDuplicate@shift:
  2847                           	opt callstack 0
  2848  000018                     pad@p:
  2849                           	opt callstack 0
  2850  000018                     stoa@i:
  2851                           	opt callstack 0
  2852                           
  2853                           ; 2 bytes @ 0x17
  2854  000018                     	ds	1
  2855  000019                     ??_SYS_TimerTaskHandler:
  2856  000019                     nwkRxRejectDuplicate@i:
  2857                           	opt callstack 0
  2858  000019                     crc16_app@result:
  2859                           	opt callstack 0
  2860                           
  2861                           ; 2 bytes @ 0x18
  2862  000019                     	ds	1
  2863  00001A                     ??_pad:
  2864  00001A                     ?_rand:
  2865                           	opt callstack 0
  2866  00001A                     nwkRxRejectDuplicate@diff:
  2867                           	opt callstack 0
  2868  00001A                     ___lodiv@counter:
  2869                           	opt callstack 0
  2870  00001A                     CircularBufferPushBack@write_pos:
  2871                           	opt callstack 0
  2872  00001A                     stoa@w:
  2873                           	opt callstack 0
  2874  00001A                     ___lldiv@divisor:
  2875                           	opt callstack 0
  2876                           
  2877                           ; 4 bytes @ 0x19
  2878  00001A                     	ds	1
  2879  00001B                     crc16_app@ptr:
  2880                           	opt callstack 0
  2881  00001B                     nwkRxRejectDuplicate@freeEntry:
  2882                           	opt callstack 0
  2883  00001B                     pad@i:
  2884                           	opt callstack 0
  2885  00001B                     ___strtoxl@prev_a:
  2886                           	opt callstack 0
  2887                           
  2888                           ; 4 bytes @ 0x1A
  2889  00001B                     	ds	1
  2890  00001C                     ??_rand:
  2891  00001C                     stoa@cp:
  2892                           	opt callstack 0
  2893  00001C                     ___flmul@sign:
  2894                           	opt callstack 0
  2895  00001C                     queueLedEvent@duration:
  2896                           	opt callstack 0
  2897                           
  2898                           ; 2 bytes @ 0x1B
  2899  00001C                     	ds	1
  2900  00001D                     SYS_TimerTaskHandler@cnt:
  2901                           	opt callstack 0
  2902  00001D                     ___flmul@aexp:
  2903                           	opt callstack 0
  2904  00001D                     crc16_app@i:
  2905                           	opt callstack 0
  2906  00001D                     nwkRxRejectDuplicate@entry:
  2907                           	opt callstack 0
  2908  00001D                     pad@w:
  2909                           	opt callstack 0
  2910  00001D                     stoa@p:
  2911                           	opt callstack 0
  2912                           
  2913                           ; 2 bytes @ 0x1C
  2914  00001D                     	ds	1
  2915  00001E                     queueLedEvent@LEDState:
  2916                           	opt callstack 0
  2917  00001E                     SYS_TimerTaskHandler@elapsed:
  2918                           	opt callstack 0
  2919  00001E                     ___lldiv@quotient:
  2920                           	opt callstack 0
  2921  00001E                     ___flmul@grs:
  2922                           	opt callstack 0
  2923                           
  2924                           ; 4 bytes @ 0x1D
  2925  00001E                     	ds	1
  2926  00001F                     ?_dtoa:
  2927                           	opt callstack 0
  2928  00001F                     ?_utoa:
  2929                           	opt callstack 0
  2930  00001F                     ?_xtoa:
  2931                           	opt callstack 0
  2932  00001F                     dtoa@fp:
  2933                           	opt callstack 0
  2934  00001F                     stoa@l:
  2935                           	opt callstack 0
  2936  00001F                     utoa@fp:
  2937                           	opt callstack 0
  2938  00001F                     xtoa@fp:
  2939                           	opt callstack 0
  2940  00001F                     ___strtoxl$7890:
  2941                           	opt callstack 0
  2942  00001F                     queueLedEvent@temp:
  2943                           	opt callstack 0
  2944                           
  2945                           ; 3 bytes @ 0x1E
  2946  00001F                     	ds	2
  2947  000021                     ___strtoxl$7892:
  2948                           	opt callstack 0
  2949  000021                     dtoa@d:
  2950                           	opt callstack 0
  2951  000021                     utoa@d:
  2952                           	opt callstack 0
  2953  000021                     xtoa@d:
  2954                           	opt callstack 0
  2955                           
  2956                           ; 8 bytes @ 0x20
  2957  000021                     	ds	1
  2958  000022                     queue_serial_led_event@i:
  2959                           	opt callstack 0
  2960  000022                     ___lldiv@counter:
  2961                           	opt callstack 0
  2962  000022                     ___flmul@bexp:
  2963                           	opt callstack 0
  2964  000022                     SYS_TimerTaskHandler@timer:
  2965                           	opt callstack 0
  2966                           
  2967                           ; 2 bytes @ 0x21
  2968  000022                     	ds	1
  2969  000023                     ??_setSpreadingFactor:
  2970  000023                     ___strtoxl$7893:
  2971                           	opt callstack 0
  2972  000023                     setFrequency@frequency:
  2973                           	opt callstack 0
  2974  000023                     setSignalBandwidth@sbw:
  2975                           	opt callstack 0
  2976  000023                     computeFRF@frequency:
  2977                           	opt callstack 0
  2978  000023                     ___flmul@prod:
  2979                           	opt callstack 0
  2980                           
  2981                           ; 4 bytes @ 0x22
  2982  000023                     	ds	1
  2983  000024                     nwkTxFrame@frame:
  2984                           	opt callstack 0
  2985  000024                     nwkTxBroadcastFrame@frame:
  2986                           	opt callstack 0
  2987                           
  2988                           ; 2 bytes @ 0x23
  2989  000024                     	ds	1
  2990  000025                     ___strtoxl$7891:
  2991                           	opt callstack 0
  2992                           
  2993                           ; 1 bytes @ 0x24
  2994  000025                     	ds	1
  2995  000026                     ??_nwkTxBroadcastFrame:
  2996  000026                     ___strtoxl@conv_done:
  2997                           	opt callstack 0
  2998                           
  2999                           ; 1 bytes @ 0x25
  3000  000026                     	ds	1
  3001  000027                     ??_setSignalBandwidth:
  3002  000027                     nwkTxBroadcastFrame@newFrame:
  3003                           	opt callstack 0
  3004  000027                     ___flmul@temp:
  3005                           	opt callstack 0
  3006  000027                     setFrequency@num_mod:
  3007                           	opt callstack 0
  3008  000027                     computeFRF@num_mod:
  3009                           	opt callstack 0
  3010  000027                     ___strtoxl@limit:
  3011                           	opt callstack 0
  3012  000027                     _setSpreadingFactor$8634:
  3013                           	opt callstack 0
  3014                           
  3015                           ; 4 bytes @ 0x26
  3016  000027                     	ds	1
  3017  000028                     nwkTxFrame@header:
  3018                           	opt callstack 0
  3019                           
  3020                           ; 2 bytes @ 0x27
  3021  000028                     	ds	1
  3022  000029                     ??_dtoa:
  3023  000029                     ??_utoa:
  3024  000029                     ?___fladd:
  3025                           	opt callstack 0
  3026  000029                     xtoa@x:
  3027                           	opt callstack 0
  3028  000029                     nwkRxHandleReceivedFrame@frame:
  3029                           	opt callstack 0
  3030  000029                     ___fladd@b:
  3031                           	opt callstack 0
  3032                           
  3033                           ; 4 bytes @ 0x28
  3034  000029                     	ds	1
  3035  00002A                     ??_xtoa:
  3036  00002A                     nwkDataReqSendFrame@req:
  3037                           	opt callstack 0
  3038  00002A                     nwkRouteSendRouteError@src:
  3039                           	opt callstack 0
  3040  00002A                     nwkRxSendAck@frame:
  3041                           	opt callstack 0
  3042                           
  3043                           ; 2 bytes @ 0x29
  3044  00002A                     	ds	1
  3045  00002B                     ??_nwkRxHandleReceivedFrame:
  3046  00002B                     setSpreadingFactor@sf:
  3047                           	opt callstack 0
  3048  00002B                     ___strtoxl@sign:
  3049                           	opt callstack 0
  3050  00002B                     setFrequency@num:
  3051                           	opt callstack 0
  3052  00002B                     computeFRF@num:
  3053                           	opt callstack 0
  3054  00002B                     _setSignalBandwidth$8635:
  3055                           	opt callstack 0
  3056                           
  3057                           ; 4 bytes @ 0x2A
  3058  00002B                     	ds	1
  3059  00002C                     ??_nwkDataReqSendFrame:
  3060  00002C                     ___strtoxl@skip:
  3061                           	opt callstack 0
  3062  00002C                     nwkRouteSendRouteError@dst:
  3063                           	opt callstack 0
  3064  00002C                     nwkRxSendAck@command:
  3065                           	opt callstack 0
  3066                           
  3067                           ; 2 bytes @ 0x2B
  3068  00002C                     	ds	1
  3069  00002D                     nwkRxHandleReceivedFrame@broadcast:
  3070                           	opt callstack 0
  3071  00002D                     nwkDataReqSendFrame@mcHeader:
  3072                           	opt callstack 0
  3073  00002D                     ___fladd@a:
  3074                           	opt callstack 0
  3075  00002D                     ___strtoxl@a:
  3076                           	opt callstack 0
  3077                           
  3078                           ; 4 bytes @ 0x2C
  3079  00002D                     	ds	1
  3080  00002E                     nwkRouteSendRouteError@multicast:
  3081                           	opt callstack 0
  3082  00002E                     nwkRxHandleReceivedFrame@member:
  3083                           	opt callstack 0
  3084  00002E                     nwkRxSendAck@ack:
  3085                           	opt callstack 0
  3086                           
  3087                           ; 2 bytes @ 0x2D
  3088  00002E                     	ds	1
  3089  00002F                     computeFRF@i:
  3090                           	opt callstack 0
  3091  00002F                     PHY_SetChannel@channel:
  3092                           	opt callstack 0
  3093  00002F                     nwkDataReqSendFrame@frame:
  3094                           	opt callstack 0
  3095  00002F                     nwkRouteSendRouteError@command:
  3096                           	opt callstack 0
  3097  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  3098                           	opt callstack 0
  3099  00002F                     setSignalBandwidth@bw:
  3100                           	opt callstack 0
  3101                           
  3102                           ; 4 bytes @ 0x2E
  3103  00002F                     	ds	1
  3104  000030                     ??_bootLoadApplication:
  3105                           
  3106                           ; 1 bytes @ 0x2F
  3107  000030                     	ds	1
  3108  000031                     ??_nwkDataReqTaskHandler:
  3109  000031                     ??___fladd:
  3110  000031                     nwkRouteSendRouteError@frame:
  3111                           	opt callstack 0
  3112  000031                     nwkRxHandleReceivedFrame@header:
  3113                           	opt callstack 0
  3114  000031                     _dtoa$7199:
  3115                           	opt callstack 0
  3116  000031                     utoa@p:
  3117                           	opt callstack 0
  3118  000031                     ___strtoxl@cp:
  3119                           	opt callstack 0
  3120                           
  3121                           ; 2 bytes @ 0x30
  3122  000031                     	ds	1
  3123  000032                     bootLoadApplication@buf_id:
  3124                           	opt callstack 0
  3125  000032                     _xtoa$7227:
  3126                           	opt callstack 0
  3127                           
  3128                           ; 2 bytes @ 0x31
  3129  000032                     	ds	1
  3130  000033                     ??_initRadio:
  3131  000033                     ___strtoxl@c:
  3132                           	opt callstack 0
  3133  000033                     bootLoadApplication@temp:
  3134                           	opt callstack 0
  3135  000033                     nwkDataReqTaskHandler@req:
  3136                           	opt callstack 0
  3137  000033                     nwkRouteFrame@frame:
  3138                           	opt callstack 0
  3139  000033                     dtoa@p:
  3140                           	opt callstack 0
  3141  000033                     utoa@w:
  3142                           	opt callstack 0
  3143                           
  3144                           ; 2 bytes @ 0x32
  3145  000033                     	ds	1
  3146  000034                     ?_strtoul:
  3147                           	opt callstack 0
  3148  000034                     ?_strtol:
  3149                           	opt callstack 0
  3150  000034                     strtol@s:
  3151                           	opt callstack 0
  3152  000034                     _xtoa$7228:
  3153                           	opt callstack 0
  3154  000034                     strtoul@s:
  3155                           	opt callstack 0
  3156                           
  3157                           ; 2 bytes @ 0x33
  3158  000034                     	ds	1
  3159  000035                     bootLoadApplication@i:
  3160                           	opt callstack 0
  3161  000035                     ___fladd@signs:
  3162                           	opt callstack 0
  3163  000035                     strtol@endptr:
  3164                           	opt callstack 0
  3165  000035                     nwkRouteFrame@header:
  3166                           	opt callstack 0
  3167  000035                     dtoa@w:
  3168                           	opt callstack 0
  3169  000035                     utoa@n:
  3170                           	opt callstack 0
  3171                           
  3172                           ; 8 bytes @ 0x34
  3173  000035                     	ds	1
  3174  000036                     ___fladd@aexp:
  3175                           	opt callstack 0
  3176  000036                     xtoa@p:
  3177                           	opt callstack 0
  3178  000036                     strtol@base:
  3179                           	opt callstack 0
  3180  000036                     strtoul@endptr:
  3181                           	opt callstack 0
  3182                           
  3183                           ; 2 bytes @ 0x35
  3184  000036                     	ds	1
  3185  000037                     initRadio@version:
  3186                           	opt callstack 0
  3187  000037                     ___fladd@bexp:
  3188                           	opt callstack 0
  3189  000037                     dtoa@s:
  3190                           	opt callstack 0
  3191                           
  3192                           ; 2 bytes @ 0x36
  3193  000037                     	ds	1
  3194  000038                     ___fladd@grs:
  3195                           	opt callstack 0
  3196  000038                     initRadio@wideRSSI:
  3197                           	opt callstack 0
  3198  000038                     xtoa@w:
  3199                           	opt callstack 0
  3200  000038                     strtoul@base:
  3201                           	opt callstack 0
  3202                           
  3203                           ; 2 bytes @ 0x37
  3204  000038                     	ds	1
  3205  000039                     ?___fltol:
  3206                           	opt callstack 0
  3207  000039                     ___fltol@f1:
  3208                           	opt callstack 0
  3209  000039                     dtoa@n:
  3210                           	opt callstack 0
  3211                           
  3212                           ; 8 bytes @ 0x38
  3213  000039                     	ds	1
  3214  00003A                     cmdSetBaud@atCommand:
  3215                           	opt callstack 0
  3216  00003A                     xtoa@n:
  3217                           	opt callstack 0
  3218                           
  3219                           ; 8 bytes @ 0x39
  3220  00003A                     	ds	2
  3221  00003C                     cmdSetBaud@tempbaud:
  3222                           	opt callstack 0
  3223                           
  3224                           ; 1 bytes @ 0x3B
  3225  00003C                     	ds	1
  3226  00003D                     ??___fltol:
  3227  00003D                     cmdSetBaud@ptr:
  3228                           	opt callstack 0
  3229  00003D                     utoa@i:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 2 bytes @ 0x3C
  3233  00003D                     	ds	4
  3234  000041                     ___fltol@sign1:
  3235                           	opt callstack 0
  3236  000041                     dtoa@i:
  3237                           	opt callstack 0
  3238                           
  3239                           ; 2 bytes @ 0x40
  3240  000041                     	ds	1
  3241  000042                     ___fltol@exp1:
  3242                           	opt callstack 0
  3243  000042                     xtoa@i:
  3244                           	opt callstack 0
  3245                           
  3246                           ; 2 bytes @ 0x41
  3247  000042                     	ds	1
  3248  000043                     get_lqi@rssi:
  3249                           	opt callstack 0
  3250                           
  3251                           ; 1 bytes @ 0x42
  3252  000043                     	ds	1
  3253  000044                     DIO0_Receive_ISR@packetLength:
  3254                           	opt callstack 0
  3255  000044                     xtoa@c:
  3256                           	opt callstack 0
  3257                           
  3258                           ; 2 bytes @ 0x43
  3259  000044                     	ds	1
  3260  000045                     DIO0_Receive_ISR@irqFlags:
  3261                           	opt callstack 0
  3262                           
  3263                           ; 1 bytes @ 0x44
  3264  000045                     	ds	1
  3265  000046                     ?_vfpfcnvrt:
  3266                           	opt callstack 0
  3267  000046                     vfpfcnvrt@fp:
  3268                           	opt callstack 0
  3269  000046                     DIO0_Receive_ISR@ind:
  3270                           	opt callstack 0
  3271                           
  3272                           ; 5 bytes @ 0x45
  3273  000046                     	ds	2
  3274  000048                     vfpfcnvrt@fmt:
  3275                           	opt callstack 0
  3276                           
  3277                           ; 1 bytes @ 0x47
  3278  000048                     	ds	1
  3279  000049                     vfpfcnvrt@ap:
  3280                           	opt callstack 0
  3281                           
  3282                           ; 1 bytes @ 0x48
  3283  000049                     	ds	1
  3284  00004A                     ??_vfpfcnvrt:
  3285                           
  3286                           ; 1 bytes @ 0x49
  3287  00004A                     	ds	1
  3288  00004B                     ??_radio_engine:
  3289                           
  3290                           ; 1 bytes @ 0x4A
  3291  00004B                     	ds	2
  3292  00004D                     
  3293                           ; 1 bytes @ 0x4C
  3294  00004D                     	ds	1
  3295  00004E                     ?_vfprintf:
  3296                           	opt callstack 0
  3297  00004E                     vfprintf@fp:
  3298                           	opt callstack 0
  3299                           
  3300                           ; 2 bytes @ 0x4D
  3301  00004E                     	ds	2
  3302  000050                     vfprintf@fmt:
  3303                           	opt callstack 0
  3304                           
  3305                           ; 2 bytes @ 0x4F
  3306  000050                     	ds	2
  3307  000052                     vfprintf@ap:
  3308                           	opt callstack 0
  3309                           
  3310                           ; 1 bytes @ 0x51
  3311  000052                     	ds	1
  3312  000053                     vfprintf@cfmt:
  3313                           	opt callstack 0
  3314                           
  3315                           ; 2 bytes @ 0x52
  3316  000053                     	ds	2
  3317  000055                     ?_printf:
  3318                           	opt callstack 0
  3319  000055                     printf@fmt:
  3320                           	opt callstack 0
  3321                           
  3322                           ; 2 bytes @ 0x54
  3323  000055                     	ds	6
  3324  00005B                     
  3325                           ; 1 bytes @ 0x5A
  3326  00005B                     	ds	2
  3327  00005D                     printf@ap:
  3328                           	opt callstack 0
  3329                           
  3330                           ; 1 bytes @ 0x5C
  3331  00005D                     	ds	1
  3332  00005E                     
  3333                           ; 1 bytes @ 0x5D
  3334 ;;
  3335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3336 ;;
  3337 ;; *************** function _main *****************
  3338 ;; Defined at:
  3339 ;;		line 51 in file "main.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 6/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;Total ram usage:        0 bytes
  3358 ;; Hardware stack levels required when called:   22
  3359 ;; This function calls:
  3360 ;;		_SYSTEM_Initialize
  3361 ;;		_SYS_Init
  3362 ;;		_SYS_TaskHandler
  3363 ;;		_TMR0_SetInterruptHandler
  3364 ;;		_bootLoadApplication
  3365 ;;		_processATCommand
  3366 ;; This function is called by:
  3367 ;;		Startup code after reset
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text0
  3372  008750                     __ptext0:
  3373                           	opt callstack 0
  3374  008750                     _main:
  3375                           	opt callstack 9
  3376                           
  3377                           ;main.c: 54:     SYSTEM_Initialize();
  3378                           
  3379                           ;incstack = 0
  3380  008750  EC71  F044         	call	_SYSTEM_Initialize	;wreg free
  3381                           
  3382                           ; BSR set to: 61
  3383                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  3384  008754  8ED2               	bsf	210,7,c	;volatile
  3385                           
  3386                           ; BSR set to: 61
  3387                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  3388  008756  8CD2               	bsf	210,6,c	;volatile
  3389                           
  3390                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  3391  008758  0E2A               	movlw	low _Timer0Handler
  3392  00875A  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3393  00875C  0E7C               	movlw	high _Timer0Handler
  3394  00875E  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3395  008760  EC7F  F046         	call	_TMR0_SetInterruptHandler	;wreg free
  3396                           
  3397                           ;main.c: 73:     SYS_Init();
  3398  008764  EC55  F046         	call	_SYS_Init	;wreg free
  3399                           
  3400                           ; BSR set to: 2
  3401                           ;main.c: 74:     bootLoadApplication();
  3402  008768  ECE0  F012         	call	_bootLoadApplication	;wreg free
  3403  00876C  86BA               	bsf	186,3,c	;volatile
  3404  00876E                     l16955:
  3405                           
  3406                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  3407  00876E  EC47  F046         	call	_SYS_TaskHandler	;wreg free
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 79:         processATCommand();
  3411  008772  ECB0  F01E         	call	_processATCommand	;wreg free
  3412  008776  D7FB               	goto	l16955
  3413  008778                     __end_of_main:
  3414                           	opt callstack 0
  3415                           
  3416 ;; *************** function _processATCommand *****************
  3417 ;; Defined at:
  3418 ;;		line 1008 in file "../app/app_src/application.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  data            1   75[BANK0 ] unsigned char 
  3423 ;;  data            1   76[BANK0 ] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 3F/0
  3430 ;;		On exit  : 6/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;Total ram usage:        4 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:   19
  3440 ;; This function calls:
  3441 ;;		_UART1_Read
  3442 ;;		_UART1_is_rx_ready
  3443 ;;		_executeATCommand
  3444 ;;		_get_timer0base
  3445 ;;		_memset
  3446 ;;		_queue_serial_led_event
  3447 ;;		_set_timer0base
  3448 ;; This function is called by:
  3449 ;;		_main
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text1
  3454  003D60                     __ptext1:
  3455                           	opt callstack 0
  3456  003D60                     _processATCommand:
  3457                           	opt callstack 11
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;../app/app_src/application.c: 1011:     if(tx_done && U1ERRIRbits.TXMTIF){
  3461                           
  3462                           ;incstack = 0
  3463  003D60  51F1               	movf	_tx_done& (0+255),w,b	;volatile
  3464  003D62  B4D8               	btfsc	status,2,c
  3465  003D64  D006               	goto	l16725
  3466                           
  3467                           ; BSR set to: 0
  3468  003D66  013D               	movlb	61	; () banked
  3469  003D68  AFF9               	btfss	249,7,b	;volatile
  3470  003D6A  D003               	goto	l16725
  3471                           
  3472                           ; BSR set to: 61
  3473                           ;../app/app_src/application.c: 1013:        tx_done = 0;
  3474  003D6C  0E00               	movlw	0
  3475  003D6E  0100               	movlb	0	; () banked
  3476  003D70  6FF1               	movwf	_tx_done& (0+255),b	;volatile
  3477  003D72                     l16725:
  3478                           
  3479                           ;../app/app_src/application.c: 1016:     if(((atStateVar != lookingForA) || (atStateVar 
      +                          != processCommand)) &&
  3480  003D72  0100               	movlb	0	; () banked
  3481  003D74  05EF               	decf	_atStateVar& (0+255),w,b
  3482  003D76  A4D8               	btfss	status,2,c
  3483  003D78  D004               	goto	u17130
  3484                           
  3485                           ; BSR set to: 0
  3486  003D7A  0E05               	movlw	5
  3487  003D7C  19EF               	xorwf	_atStateVar& (0+255),w,b
  3488  003D7E  B4D8               	btfsc	status,2,c
  3489  003D80  D08D               	goto	l16795
  3490  003D82                     u17130:
  3491                           
  3492                           ; BSR set to: 0
  3493  003D82  0EFD               	movlw	low _ATTimeoutTimer
  3494  003D84  6E02               	movwf	get_timer0base@timer^0,c
  3495  003D86  6A03               	clrf	(get_timer0base@timer+1)^0,c
  3496  003D88  EC53  F043         	call	_get_timer0base	;wreg free
  3497  003D8C  5002               	movf	?_get_timer0base^0,w,c
  3498  003D8E  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3499  003D90  A4D8               	btfss	status,2,c
  3500  003D92  D084               	goto	l16795
  3501                           
  3502                           ; BSR set to: 57
  3503                           ;../app/app_src/application.c: 1017:             (!get_timer0base(&ATTimeoutTimer))) {;.
      +                          ./app/app_src/application.c: 1018:         atStateVar = resetATMachine;
  3504  003D94  0E06               	movlw	6
  3505  003D96  0100               	movlb	0	; () banked
  3506  003D98  6FEF               	movwf	_atStateVar& (0+255),b
  3507  003D9A  D080               	goto	l16795
  3508  003D9C                     l16733:
  3509                           
  3510                           ;../app/app_src/application.c: 1022:             atStateVar = resetATMachine;
  3511  003D9C  0E06               	movlw	6
  3512  003D9E  0100               	movlb	0	; () banked
  3513  003DA0  6FEF               	movwf	_atStateVar& (0+255),b
  3514                           
  3515                           ;../app/app_src/application.c: 1023:             break;
  3516  003DA2  0012               	return	
  3517  003DA4                     l16735:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;../app/app_src/application.c: 1026:             if(UART1_is_rx_ready()){
  3521  003DA4  EC40  F046         	call	_UART1_is_rx_ready	;wreg free
  3522  003DA8  0900               	iorlw	0
  3523  003DAA  B4D8               	btfsc	status,2,c
  3524  003DAC  0012               	return	
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;../app/app_src/application.c: 1028:                 if(UART1_Read() == 'A')
  3528  003DAE  EC48  F03F         	call	_UART1_Read	;wreg free
  3529  003DB2  0A41               	xorlw	65
  3530  003DB4  A4D8               	btfss	status,2,c
  3531  003DB6  0012               	return	
  3532                           
  3533                           ; BSR set to: 57
  3534                           ;../app/app_src/application.c: 1029:                 {;../app/app_src/application.c: 103
      +                          1:                     atStateVar = lookingForT;
  3535  003DB8  0E02               	movlw	2
  3536  003DBA  0100               	movlb	0	; () banked
  3537  003DBC  6FEF               	movwf	_atStateVar& (0+255),b
  3538  003DBE                     l16741:
  3539                           
  3540                           ;../app/app_src/application.c: 1032:                     set_timer0base(&ATTimeoutTimer,
      +                           1000);
  3541  003DBE  0EFD               	movlw	low _ATTimeoutTimer
  3542  003DC0  6E02               	movwf	set_timer0base@timer^0,c
  3543  003DC2  6A03               	clrf	(set_timer0base@timer+1)^0,c
  3544  003DC4  0E03               	movlw	3
  3545  003DC6  6E05               	movwf	(set_timer0base@tval+1)^0,c
  3546  003DC8  0EE8               	movlw	232
  3547  003DCA  6E04               	movwf	set_timer0base@tval^0,c
  3548  003DCC  ECA5  F044         	call	_set_timer0base	;wreg free
  3549  003DD0  0012               	return	
  3550  003DD2                     l16743:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;../app/app_src/application.c: 1037:             if(UART1_is_rx_ready()){
  3554  003DD2  EC40  F046         	call	_UART1_is_rx_ready	;wreg free
  3555  003DD6  0900               	iorlw	0
  3556  003DD8  B4D8               	btfsc	status,2,c
  3557  003DDA  0012               	return	
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;../app/app_src/application.c: 1039:                 if(UART1_Read() == 'T')
  3561  003DDC  EC48  F03F         	call	_UART1_Read	;wreg free
  3562  003DE0  0A54               	xorlw	84
  3563  003DE2  A4D8               	btfss	status,2,c
  3564  003DE4  D004               	goto	l16749
  3565                           
  3566                           ; BSR set to: 57
  3567                           ;../app/app_src/application.c: 1040:                 {;../app/app_src/application.c: 104
      +                          2:                     atStateVar = readingCommand;
  3568  003DE6  0E03               	movlw	3
  3569  003DE8  0100               	movlb	0	; () banked
  3570  003DEA  6FEF               	movwf	_atStateVar& (0+255),b
  3571                           
  3572                           ;../app/app_src/application.c: 1043:                 }
  3573  003DEC  0012               	return	
  3574  003DEE                     l16749:
  3575                           
  3576                           ; BSR set to: 57
  3577                           ;../app/app_src/application.c: 1045:                 {;../app/app_src/application.c: 104
      +                          6:                     atStateVar = lookingForA;
  3578  003DEE  0E01               	movlw	1
  3579  003DF0  0100               	movlb	0	; () banked
  3580  003DF2  6FEF               	movwf	_atStateVar& (0+255),b
  3581  003DF4  0012               	return	
  3582  003DF6                     l16751:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;../app/app_src/application.c: 1052:             if(UART1_is_rx_ready())
  3586  003DF6  EC40  F046         	call	_UART1_is_rx_ready	;wreg free
  3587  003DFA  0900               	iorlw	0
  3588  003DFC  B4D8               	btfsc	status,2,c
  3589  003DFE  0012               	return	
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;../app/app_src/application.c: 1053:             {;../app/app_src/application.c: 1054:  
      +                                         uint8_t data = UART1_Read();
  3593  003E00  EC48  F03F         	call	_UART1_Read	;wreg free
  3594  003E04  0100               	movlb	0	; () banked
  3595  003E06  6FAC               	movwf	processATCommand@data& (0+255),b
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;../app/app_src/application.c: 1055:                 if(data == '\r')
  3599  003E08  0E0D               	movlw	13
  3600  003E0A  19AC               	xorwf	processATCommand@data& (0+255),w,b
  3601  003E0C  A4D8               	btfss	status,2,c
  3602  003E0E  D00C               	goto	l16763
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;../app/app_src/application.c: 1056:                 {;../app/app_src/application.c: 105
      +                          8:                     atStateVar = endingCommand;
  3606  003E10  0E04               	movlw	4
  3607  003E12  6FEF               	movwf	_atStateVar& (0+255),b
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;../app/app_src/application.c: 1060:                     atCommand[commandByteCounter++]
      +                           = '\0';
  3611  003E14  0E34               	movlw	low _atCommand
  3612  003E16  25F0               	addwf	_commandByteCounter& (0+255),w,b
  3613  003E18  6ED9               	movwf	fsr2l,c
  3614  003E1A  6ADA               	clrf	fsr2h,c
  3615  003E1C  0E02               	movlw	high _atCommand
  3616  003E1E  22DA               	addwfc	fsr2h,f,c
  3617  003E20  0E00               	movlw	0
  3618  003E22  6EDF               	movwf	indf2,c
  3619                           
  3620                           ; BSR set to: 0
  3621  003E24  2BF0               	incf	_commandByteCounter& (0+255),f,b
  3622                           
  3623                           ;../app/app_src/application.c: 1061:                 }
  3624  003E26  0012               	return	
  3625  003E28                     l16763:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;../app/app_src/application.c: 1063:                 {;../app/app_src/application.c: 106
      +                          4:                     atCommand[commandByteCounter++] = data;
  3629  003E28  0E34               	movlw	low _atCommand
  3630  003E2A  25F0               	addwf	_commandByteCounter& (0+255),w,b
  3631  003E2C  6ED9               	movwf	fsr2l,c
  3632  003E2E  6ADA               	clrf	fsr2h,c
  3633  003E30  0E02               	movlw	high _atCommand
  3634  003E32  22DA               	addwfc	fsr2h,f,c
  3635  003E34  0060  F2B3  FFDF   	movff	processATCommand@data,indf2
  3636                           
  3637                           ; BSR set to: 0
  3638  003E3A  2BF0               	incf	_commandByteCounter& (0+255),f,b
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;../app/app_src/application.c: 1065:                     if(commandByteCounter >= 80)
  3642  003E3C  0E4F               	movlw	79
  3643  003E3E  65F0               	cpfsgt	_commandByteCounter& (0+255),b
  3644  003E40  0012               	return	
  3645  003E42  D7AC               	goto	l16733
  3646  003E44                     l16771:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;../app/app_src/application.c: 1075:             if(UART1_is_rx_ready())
  3650  003E44  EC40  F046         	call	_UART1_is_rx_ready	;wreg free
  3651  003E48  0900               	iorlw	0
  3652  003E4A  B4D8               	btfsc	status,2,c
  3653  003E4C  0012               	return	
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;../app/app_src/application.c: 1076:             {;../app/app_src/application.c: 1077:  
      +                                         uint8_t data = UART1_Read();
  3657  003E4E  EC48  F03F         	call	_UART1_Read	;wreg free
  3658  003E52  0100               	movlb	0	; () banked
  3659  003E54  6FAB               	movwf	processATCommand@data_828& (0+255),b
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;../app/app_src/application.c: 1078:                 if(data == '\n')
  3663  003E56  0E0A               	movlw	10
  3664  003E58  19AB               	xorwf	processATCommand@data_828& (0+255),w,b
  3665  003E5A  A4D8               	btfss	status,2,c
  3666  003E5C  D79F               	goto	l16733
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;../app/app_src/application.c: 1079:                 {;../app/app_src/application.c: 108
      +                          1:                     atStateVar = processCommand;
  3670  003E5E  0E05               	movlw	5
  3671  003E60  6FEF               	movwf	_atStateVar& (0+255),b
  3672                           
  3673                           ;../app/app_src/application.c: 1082:                 }
  3674  003E62  0012               	return	
  3675  003E64                     l16781:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;../app/app_src/application.c: 1092:             executeATCommand(atCommand);
  3679  003E64  0E34               	movlw	low _atCommand
  3680  003E66  6FA4               	movwf	executeATCommand@cmd& (0+255),b
  3681  003E68  0E02               	movlw	high _atCommand
  3682  003E6A  6FA5               	movwf	(executeATCommand@cmd+1)& (0+255),b
  3683  003E6C  EC59  F000         	call	_executeATCommand	;wreg free
  3684                           
  3685                           ;../app/app_src/application.c: 1093:             queue_serial_led_event();
  3686  003E70  EC98  F03D         	call	_queue_serial_led_event	;wreg free
  3687  003E74  D793               	goto	l16733
  3688  003E76                     l16787:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;../app/app_src/application.c: 1097:             atStateVar = lookingForA;
  3692  003E76  0E01               	movlw	1
  3693  003E78  6FEF               	movwf	_atStateVar& (0+255),b
  3694                           
  3695                           ;../app/app_src/application.c: 1098:             commandByteCounter = 0;
  3696  003E7A  0E00               	movlw	0
  3697  003E7C  6FF0               	movwf	_commandByteCounter& (0+255),b
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;../app/app_src/application.c: 1100:             memset(atCommand,0,sizeof(atCommand));
  3701  003E7E  0E34               	movlw	low _atCommand
  3702  003E80  6E02               	movwf	memset@dest^0,c
  3703  003E82  0E02               	movlw	high _atCommand
  3704  003E84  6E03               	movwf	(memset@dest+1)^0,c
  3705  003E86  0E00               	movlw	0
  3706  003E88  6E05               	movwf	(memset@c+1)^0,c
  3707  003E8A  0E00               	movlw	0
  3708  003E8C  6E04               	movwf	memset@c^0,c
  3709  003E8E  0E00               	movlw	0
  3710  003E90  6E07               	movwf	(memset@n+1)^0,c
  3711  003E92  0E50               	movlw	80
  3712  003E94  6E06               	movwf	memset@n^0,c
  3713  003E96  EC32  F022         	call	_memset	;wreg free
  3714  003E9A  D791               	goto	l16741
  3715  003E9C                     l16795:
  3716  003E9C  0100               	movlb	0	; () banked
  3717  003E9E  51EF               	movf	_atStateVar& (0+255),w,b
  3718  003EA0  6FA9               	movwf	??_processATCommand& (0+255),b
  3719  003EA2  6BAA               	clrf	(??_processATCommand+1)& (0+255),b
  3720                           
  3721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3722                           ; Switch size 1, requested type "simple"
  3723                           ; Number of cases is 1, Range of values is 0 to 0
  3724                           ; switch strategies available:
  3725                           ; Name         Instructions Cycles
  3726                           ; simple_byte            4     3 (average)
  3727                           ;	Chosen strategy is simple_byte
  3728  003EA4  51AA               	movf	(??_processATCommand+1)& (0+255),w,b
  3729  003EA6  0A00               	xorlw	0	; case 0
  3730  003EA8  A4D8               	btfss	status,2,c
  3731  003EAA  D778               	goto	l16733
  3732                           
  3733                           ; BSR set to: 0
  3734                           ; Switch size 1, requested type "simple"
  3735                           ; Number of cases is 7, Range of values is 0 to 6
  3736                           ; switch strategies available:
  3737                           ; Name         Instructions Cycles
  3738                           ; simple_byte           22    12 (average)
  3739                           ;	Chosen strategy is simple_byte
  3740  003EAC  51A9               	movf	??_processATCommand& (0+255),w,b
  3741  003EAE  0A00               	xorlw	0	; case 0
  3742  003EB0  B4D8               	btfsc	status,2,c
  3743  003EB2  D774               	goto	l16733
  3744  003EB4  0A01               	xorlw	1	; case 1
  3745  003EB6  B4D8               	btfsc	status,2,c
  3746  003EB8  D775               	goto	l16735
  3747  003EBA  0A03               	xorlw	3	; case 2
  3748  003EBC  B4D8               	btfsc	status,2,c
  3749  003EBE  D789               	goto	l16743
  3750  003EC0  0A01               	xorlw	1	; case 3
  3751  003EC2  B4D8               	btfsc	status,2,c
  3752  003EC4  D798               	goto	l16751
  3753  003EC6  0A07               	xorlw	7	; case 4
  3754  003EC8  B4D8               	btfsc	status,2,c
  3755  003ECA  D7BC               	goto	l16771
  3756  003ECC  0A01               	xorlw	1	; case 5
  3757  003ECE  B4D8               	btfsc	status,2,c
  3758  003ED0  D7C9               	goto	l16781
  3759  003ED2  0A03               	xorlw	3	; case 6
  3760  003ED4  B4D8               	btfsc	status,2,c
  3761  003ED6  D7CF               	goto	l16787
  3762  003ED8  D761               	goto	l16733
  3763  003EDA                     __end_of_processATCommand:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _queue_serial_led_event *****************
  3767 ;; Defined at:
  3768 ;;		line 96 in file "../app/app_src/led.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  i               1   33[COMRAM] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;Total ram usage:        1 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:   10
  3789 ;; This function calls:
  3790 ;;		_queueLedEvent
  3791 ;; This function is called by:
  3792 ;;		_processATCommand
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text2
  3797  007B30                     __ptext2:
  3798                           	opt callstack 0
  3799  007B30                     _queue_serial_led_event:
  3800                           	opt callstack 19
  3801                           
  3802                           ;../app/app_src/led.c: 98:     queueLedEvent(0,400);
  3803                           
  3804                           ;incstack = 0
  3805  007B30  0E01               	movlw	1
  3806  007B32  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3807  007B34  0E90               	movlw	144
  3808  007B36  6E1C               	movwf	queueLedEvent@duration^0,c
  3809  007B38  0E00               	movlw	0
  3810  007B3A  EC6A  F041         	call	_queueLedEvent
  3811                           
  3812                           ;../app/app_src/led.c: 99:     for(uint8_t i = 0; i < 2; i++)
  3813  007B3E  0E00               	movlw	0
  3814  007B40  6E22               	movwf	queue_serial_led_event@i^0,c
  3815  007B42                     l16651:
  3816                           
  3817                           ;../app/app_src/led.c: 100:     {;../app/app_src/led.c: 101:         queueLedEvent(1,100
      +                          );
  3818  007B42  0E00               	movlw	0
  3819  007B44  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3820  007B46  0E64               	movlw	100
  3821  007B48  6E1C               	movwf	queueLedEvent@duration^0,c
  3822  007B4A  0E01               	movlw	1
  3823  007B4C  EC6A  F041         	call	_queueLedEvent
  3824                           
  3825                           ;../app/app_src/led.c: 102:         queueLedEvent(0,100);
  3826  007B50  0E00               	movlw	0
  3827  007B52  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3828  007B54  0E64               	movlw	100
  3829  007B56  6E1C               	movwf	queueLedEvent@duration^0,c
  3830  007B58  0E00               	movlw	0
  3831  007B5A  EC6A  F041         	call	_queueLedEvent
  3832                           
  3833                           ;../app/app_src/led.c: 103:     }
  3834  007B5E  2A22               	incf	queue_serial_led_event@i^0,f,c
  3835  007B60  0E01               	movlw	1
  3836  007B62  6422               	cpfsgt	queue_serial_led_event@i^0,c
  3837  007B64  D7EE               	goto	l16651
  3838                           
  3839                           ;../app/app_src/led.c: 104:     queueLedEvent(0,100);
  3840  007B66  0E00               	movlw	0
  3841  007B68  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3842  007B6A  0E64               	movlw	100
  3843  007B6C  6E1C               	movwf	queueLedEvent@duration^0,c
  3844  007B6E  0E00               	movlw	0
  3845  007B70  EC6A  F041         	call	_queueLedEvent
  3846                           
  3847                           ;../app/app_src/led.c: 105:     queueLedEvent(1,100);
  3848  007B74  0E00               	movlw	0
  3849  007B76  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3850  007B78  0E64               	movlw	100
  3851  007B7A  6E1C               	movwf	queueLedEvent@duration^0,c
  3852  007B7C  0E01               	movlw	1
  3853  007B7E  EC6A  F041         	call	_queueLedEvent
  3854  007B82  0012               	return		;funcret
  3855  007B84                     __end_of_queue_serial_led_event:
  3856                           	opt callstack 0
  3857                           
  3858 ;; *************** function _queueLedEvent *****************
  3859 ;; Defined at:
  3860 ;;		line 53 in file "../app/app_src/led.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  LEDState        1    wreg     unsigned char 
  3863 ;;  duration        2   27[COMRAM] unsigned short 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  LEDState        1   29[COMRAM] unsigned char 
  3866 ;;  temp            3   30[COMRAM] struct ledEvent
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      char 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:        6 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    9
  3883 ;; This function calls:
  3884 ;;		_CircularBufferPushBack
  3885 ;;		_CircularBufferSpace
  3886 ;; This function is called by:
  3887 ;;		_queue_serial_led_event
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text3
  3892  0082D4                     __ptext3:
  3893                           	opt callstack 0
  3894  0082D4                     _queueLedEvent:
  3895                           	opt callstack 19
  3896                           
  3897                           ;incstack = 0
  3898                           ;queueLedEvent@LEDState stored from wreg
  3899  0082D4  6E1E               	movwf	queueLedEvent@LEDState^0,c
  3900                           
  3901                           ;../app/app_src/led.c: 53: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);../a
      +                          pp/app_src/led.c: 54: {;../app/app_src/led.c: 55:     if(0 != CircularBufferSpace(&ledta
      +                          sksbuf))
  3902  0082D6  0EC8               	movlw	low _ledtasksbuf
  3903  0082D8  6E0A               	movwf	CircularBufferSpace@ctx^0,c
  3904  0082DA  0E01               	movlw	high _ledtasksbuf
  3905  0082DC  6E0B               	movwf	(CircularBufferSpace@ctx+1)^0,c
  3906  0082DE  EC4F  F042         	call	_CircularBufferSpace	;wreg free
  3907  0082E2  500A               	movf	?_CircularBufferSpace^0,w,c
  3908  0082E4  100B               	iorwf	(?_CircularBufferSpace+1)^0,w,c
  3909  0082E6  B4D8               	btfsc	status,2,c
  3910  0082E8  0012               	return	
  3911                           
  3912                           ;../app/app_src/led.c: 56:     {;../app/app_src/led.c: 57:         struct ledEvent temp;
      +                          ;../app/app_src/led.c: 58:         temp.LEDCondition = LEDState;
  3913  0082EA  0060  F078  F01F   	movff	queueLedEvent@LEDState,queueLedEvent@temp
  3914                           
  3915                           ;../app/app_src/led.c: 59:         temp.eventDuration = duration;
  3916  0082F0  0060  F070  F020   	movff	queueLedEvent@duration,queueLedEvent@temp+1
  3917  0082F6  0060  F074  F021   	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
  3918                           
  3919                           ;../app/app_src/led.c: 60:         CircularBufferPushBack(&ledtasksbuf,&temp);
  3920  0082FC  0EC8               	movlw	low _ledtasksbuf
  3921  0082FE  6E13               	movwf	CircularBufferPushBack@ctx^0,c
  3922  008300  0E01               	movlw	high _ledtasksbuf
  3923  008302  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
  3924  008304  0E1F               	movlw	low queueLedEvent@temp
  3925  008306  6E15               	movwf	CircularBufferPushBack@val^0,c
  3926  008308  EC34  F02A         	call	_CircularBufferPushBack	;wreg free
  3927  00830C  0012               	return		;funcret
  3928  00830E                     __end_of_queueLedEvent:
  3929                           	opt callstack 0
  3930                           
  3931 ;; *************** function _CircularBufferSpace *****************
  3932 ;; Defined at:
  3933 ;;		line 126 in file "../app/app_src/circular buffer.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  ctx             2    9[COMRAM] PTR const struct .
  3936 ;;		 -> ledtasksbuf(10), 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  2    9[COMRAM] unsigned int 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;Total ram usage:        4 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    8
  3955 ;; This function calls:
  3956 ;;		_CircularBufferSize
  3957 ;; This function is called by:
  3958 ;;		_queueLedEvent
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text4
  3963  00849E                     __ptext4:
  3964                           	opt callstack 0
  3965  00849E                     _CircularBufferSpace:
  3966                           	opt callstack 19
  3967                           
  3968                           ;../app/app_src/circular buffer.c: 128:     return (ctx->max_size - CircularBufferSize(c
      +                          tx));
  3969                           
  3970                           ;incstack = 0
  3971  00849E  0060  F028  F002   	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
  3972  0084A4  0060  F02C  F003   	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
  3973  0084AA  EC58  F03C         	call	_CircularBufferSize	;wreg free
  3974  0084AE  EE20 F008          	lfsr	2,8
  3975  0084B2  500A               	movf	CircularBufferSpace@ctx^0,w,c
  3976  0084B4  26D9               	addwf	fsr2l,f,c
  3977  0084B6  500B               	movf	(CircularBufferSpace@ctx+1)^0,w,c
  3978  0084B8  22DA               	addwfc	fsr2h,f,c
  3979  0084BA  006F FF78  F00C    	movff	postinc2,??_CircularBufferSpace
  3980  0084C0  006F FF74  F00D    	movff	postdec2,??_CircularBufferSpace+1
  3981  0084C6  5002               	movf	?_CircularBufferSize^0,w,c
  3982  0084C8  5C0C               	subwf	??_CircularBufferSpace^0,w,c
  3983  0084CA  6E0A               	movwf	?_CircularBufferSpace^0,c
  3984  0084CC  5003               	movf	(?_CircularBufferSize+1)^0,w,c
  3985  0084CE  580D               	subwfb	(??_CircularBufferSpace+1)^0,w,c
  3986  0084D0  6E0B               	movwf	(?_CircularBufferSpace+1)^0,c
  3987  0084D2  0012               	return		;funcret
  3988  0084D4                     __end_of_CircularBufferSpace:
  3989                           	opt callstack 0
  3990                           
  3991 ;; *************** function _CircularBufferSize *****************
  3992 ;; Defined at:
  3993 ;;		line 122 in file "../app/app_src/circular buffer.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  ctx             2    1[COMRAM] PTR const struct .
  3996 ;;		 -> ledtasksbuf(10), 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2    1[COMRAM] unsigned int 
  4001 ;; Registers used:
  4002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;Total ram usage:        8 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    7
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_CircularBufferSpace
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text5
  4023  0078B0                     __ptext5:
  4024                           	opt callstack 0
  4025  0078B0                     _CircularBufferSize:
  4026                           	opt callstack 19
  4027                           
  4028                           ;../app/app_src/circular buffer.c: 123:     return ((ctx->write_pos - ctx->read_pos) & c
      +                          tx->max_size);
  4029                           
  4030                           ;incstack = 0
  4031  0078B0  EE20 F008          	lfsr	2,8
  4032  0078B4  5002               	movf	CircularBufferSize@ctx^0,w,c
  4033  0078B6  26D9               	addwf	fsr2l,f,c
  4034  0078B8  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4035  0078BA  22DA               	addwfc	fsr2h,f,c
  4036  0078BC  006F FF78  F004    	movff	postinc2,??_CircularBufferSize
  4037  0078C2  006F FF74  F005    	movff	postdec2,??_CircularBufferSize+1
  4038  0078C8  EE20 F004          	lfsr	2,4
  4039  0078CC  5002               	movf	CircularBufferSize@ctx^0,w,c
  4040  0078CE  26D9               	addwf	fsr2l,f,c
  4041  0078D0  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4042  0078D2  22DA               	addwfc	fsr2h,f,c
  4043  0078D4  006F FF78  F006    	movff	postinc2,??_CircularBufferSize+2
  4044  0078DA  006F FF74  F007    	movff	postdec2,??_CircularBufferSize+3
  4045  0078E0  EE20 F002          	lfsr	2,2
  4046  0078E4  5002               	movf	CircularBufferSize@ctx^0,w,c
  4047  0078E6  26D9               	addwf	fsr2l,f,c
  4048  0078E8  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4049  0078EA  22DA               	addwfc	fsr2h,f,c
  4050  0078EC  006F FF78  F008    	movff	postinc2,??_CircularBufferSize+4
  4051  0078F2  006F FF74  F009    	movff	postdec2,??_CircularBufferSize+5
  4052  0078F8  5006               	movf	(??_CircularBufferSize+2)^0,w,c
  4053  0078FA  5E08               	subwf	(??_CircularBufferSize+4)^0,f,c
  4054  0078FC  5007               	movf	(??_CircularBufferSize+3)^0,w,c
  4055  0078FE  5A09               	subwfb	(??_CircularBufferSize+5)^0,f,c
  4056  007900  5004               	movf	??_CircularBufferSize^0,w,c
  4057  007902  1408               	andwf	(??_CircularBufferSize+4)^0,w,c
  4058  007904  6E02               	movwf	?_CircularBufferSize^0,c
  4059  007906  5005               	movf	(??_CircularBufferSize+1)^0,w,c
  4060  007908  1409               	andwf	(??_CircularBufferSize+5)^0,w,c
  4061  00790A  6E03               	movwf	(?_CircularBufferSize+1)^0,c
  4062  00790C  0012               	return		;funcret
  4063  00790E                     __end_of_CircularBufferSize:
  4064                           	opt callstack 0
  4065                           
  4066 ;; *************** function _CircularBufferPushBack *****************
  4067 ;; Defined at:
  4068 ;;		line 71 in file "../app/app_src/circular buffer.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  ctx             2   18[COMRAM] PTR struct .
  4071 ;;		 -> ledtasksbuf(10), 
  4072 ;;  val             1   20[COMRAM] PTR void 
  4073 ;;		 -> queueLedEvent@temp(3), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  write_pos       2   25[COMRAM] unsigned int 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      char 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        9 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:    8
  4092 ;; This function calls:
  4093 ;;		___wmul
  4094 ;;		_memcpy
  4095 ;; This function is called by:
  4096 ;;		_queueLedEvent
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text6
  4101  005468                     __ptext6:
  4102                           	opt callstack 0
  4103  005468                     _CircularBufferPushBack:
  4104                           	opt callstack 19
  4105                           
  4106                           ;../app/app_src/circular buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx
      +                          ->max_size;
  4107                           
  4108                           ;incstack = 0
  4109  005468  EE20 F008          	lfsr	2,8
  4110  00546C  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4111  00546E  26D9               	addwf	fsr2l,f,c
  4112  005470  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4113  005472  22DA               	addwfc	fsr2h,f,c
  4114  005474  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4115  00547A  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4116  005480  EE20 F002          	lfsr	2,2
  4117  005484  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4118  005486  26D9               	addwf	fsr2l,f,c
  4119  005488  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4120  00548A  22DA               	addwfc	fsr2h,f,c
  4121  00548C  006F FF78  F018    	movff	postinc2,??_CircularBufferPushBack+2
  4122  005492  006F FF74  F019    	movff	postdec2,??_CircularBufferPushBack+3
  4123  005498  0E01               	movlw	1
  4124  00549A  2618               	addwf	(??_CircularBufferPushBack+2)^0,f,c
  4125  00549C  0E00               	movlw	0
  4126  00549E  2219               	addwfc	(??_CircularBufferPushBack+3)^0,f,c
  4127  0054A0  5016               	movf	??_CircularBufferPushBack^0,w,c
  4128  0054A2  1418               	andwf	(??_CircularBufferPushBack+2)^0,w,c
  4129  0054A4  6E1A               	movwf	CircularBufferPushBack@write_pos^0,c
  4130  0054A6  5017               	movf	(??_CircularBufferPushBack+1)^0,w,c
  4131  0054A8  1419               	andwf	(??_CircularBufferPushBack+3)^0,w,c
  4132  0054AA  6E1B               	movwf	(CircularBufferPushBack@write_pos+1)^0,c
  4133                           
  4134                           ;../app/app_src/circular buffer.c: 75:     if (write_pos == ctx->read_pos) {
  4135  0054AC  EE20 F004          	lfsr	2,4
  4136  0054B0  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4137  0054B2  26D9               	addwf	fsr2l,f,c
  4138  0054B4  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4139  0054B6  22DA               	addwfc	fsr2h,f,c
  4140  0054B8  501A               	movf	CircularBufferPushBack@write_pos^0,w,c
  4141  0054BA  18DE               	xorwf	postinc2,w,c
  4142  0054BC  E104               	bnz	l15569
  4143  0054BE  501B               	movf	(CircularBufferPushBack@write_pos+1)^0,w,c
  4144  0054C0  18DE               	xorwf	postinc2,w,c
  4145  0054C2  B4D8               	btfsc	status,2,c
  4146  0054C4  0012               	return	
  4147  0054C6                     l15569:
  4148                           
  4149                           ;../app/app_src/circular buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->elemen
      +                          t_size], val,
  4150  0054C6  EE20 F002          	lfsr	2,2
  4151  0054CA  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4152  0054CC  26D9               	addwf	fsr2l,f,c
  4153  0054CE  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4154  0054D0  22DA               	addwfc	fsr2h,f,c
  4155  0054D2  006F FF78  F002    	movff	postinc2,___wmul@multiplier
  4156  0054D8  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
  4157  0054DE  EE20 F006          	lfsr	2,6
  4158  0054E2  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4159  0054E4  26D9               	addwf	fsr2l,f,c
  4160  0054E6  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4161  0054E8  22DA               	addwfc	fsr2h,f,c
  4162  0054EA  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
  4163  0054F0  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
  4164  0054F6  EC3C  F043         	call	___wmul	;wreg free
  4165  0054FA  0060  F04F  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
  4166  005500  0060  F053  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
  4167  005506  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
  4168  00550C  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
  4169  005512  5002               	movf	?___wmul^0,w,c
  4170  005514  2416               	addwf	??_CircularBufferPushBack^0,w,c
  4171  005516  6E08               	movwf	memcpy@d1^0,c
  4172  005518  5003               	movf	(?___wmul+1)^0,w,c
  4173  00551A  2017               	addwfc	(??_CircularBufferPushBack+1)^0,w,c
  4174  00551C  6E09               	movwf	(memcpy@d1+1)^0,c
  4175  00551E  0060  F054  F00A   	movff	CircularBufferPushBack@val,memcpy@s1
  4176  005524  6A0B               	clrf	(memcpy@s1+1)^0,c
  4177  005526  EE20 F006          	lfsr	2,6
  4178  00552A  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4179  00552C  26D9               	addwf	fsr2l,f,c
  4180  00552E  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4181  005530  22DA               	addwfc	fsr2h,f,c
  4182  005532  006F FF78  F00C    	movff	postinc2,memcpy@n
  4183  005538  006F FF74  F00D    	movff	postdec2,memcpy@n+1
  4184  00553E  ECEA  F039         	call	_memcpy	;wreg free
  4185                           
  4186                           ;../app/app_src/circular buffer.c: 82:     ctx->write_pos = write_pos;
  4187  005542  EE20 F002          	lfsr	2,2
  4188  005546  5013               	movf	CircularBufferPushBack@ctx^0,w,c
  4189  005548  26D9               	addwf	fsr2l,f,c
  4190  00554A  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
  4191  00554C  22DA               	addwfc	fsr2h,f,c
  4192  00554E  0060  F06B  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
  4193  005554  0060  F06F  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
  4194  00555A  0012               	return		;funcret
  4195  00555C                     __end_of_CircularBufferPushBack:
  4196                           	opt callstack 0
  4197                           
  4198 ;; *************** function _executeATCommand *****************
  4199 ;; Defined at:
  4200 ;;		line 831 in file "../app/app_src/application.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  cmd             2   68[BANK0 ] PTR unsigned char 
  4203 ;;		 -> atCommand(80), 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  retcode         1    0        unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      unsigned char 
  4208 ;; Registers used:
  4209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 3F/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;Total ram usage:        5 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:   18
  4222 ;; This function calls:
  4223 ;;		_cmdAddr
  4224 ;;		_cmdBcast
  4225 ;;		_cmdBootLoad
  4226 ;;		_cmdGetCAD
  4227 ;;		_cmdGetCADRSSI
  4228 ;;		_cmdGetMode
  4229 ;;		_cmdGetRFCH
  4230 ;;		_cmdGetRxCnt
  4231 ;;		_cmdGetSF
  4232 ;;		_cmdGetTTL
  4233 ;;		_cmdGetTX
  4234 ;;		_cmdI
  4235 ;;		_cmdMac
  4236 ;;		_cmdNaddr
  4237 ;;		_cmdRecv
  4238 ;;		_cmdReset
  4239 ;;		_cmdRstCAD
  4240 ;;		_cmdSend
  4241 ;;		_cmdSendSink
  4242 ;;		_cmdSetAES
  4243 ;;		_cmdSetAddr
  4244 ;;		_cmdSetBaud
  4245 ;;		_cmdSetCADRSSI
  4246 ;;		_cmdSetNaddr
  4247 ;;		_cmdSetParity
  4248 ;;		_cmdSetRFCH
  4249 ;;		_cmdSetSF
  4250 ;;		_cmdSetSink
  4251 ;;		_cmdSetTTL
  4252 ;;		_cmdSetTX
  4253 ;;		_print_hop_table
  4254 ;;		_printf
  4255 ;;		_set_hop_table_ttl
  4256 ;;		_strstr
  4257 ;; This function is called by:
  4258 ;;		_processATCommand
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text7
  4263  0000B2                     __ptext7:
  4264                           	opt callstack 0
  4265  0000B2                     _executeATCommand:
  4266                           	opt callstack 11
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;../app/app_src/application.c: 834:     switch(*(cmd+1))
  4270                           
  4271                           ;incstack = 0
  4272  0000B2  D296               	goto	l16637
  4273  0000B4                     l16497:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;../app/app_src/application.c: 837:          if(strstr(atCommand,"+SEND:")){
  4277  0000B4  0E34               	movlw	low _atCommand
  4278  0000B6  6E0D               	movwf	strstr@h^0,c
  4279  0000B8  0E02               	movlw	high _atCommand
  4280  0000BA  6E0E               	movwf	(strstr@h+1)^0,c
  4281  0000BC  0E61               	movlw	low STR_62
  4282  0000BE  6E0F               	movwf	strstr@n^0,c
  4283  0000C0  0EFF               	movlw	high STR_62
  4284  0000C2  6E10               	movwf	(strstr@n+1)^0,c
  4285  0000C4  ECCE  F02D         	call	_strstr	;wreg free
  4286  0000C8  500D               	movf	?_strstr^0,w,c
  4287  0000CA  100E               	iorwf	(?_strstr+1)^0,w,c
  4288  0000CC  B4D8               	btfsc	status,2,c
  4289  0000CE  D009               	goto	l16501
  4290                           
  4291                           ;../app/app_src/application.c: 838:           cmdSend(cmd);
  4292  0000D0  0060  F290  F076   	movff	executeATCommand@cmd,cmdSend@cmd
  4293  0000D6  0060  F294  F077   	movff	executeATCommand@cmd+1,cmdSend@cmd+1
  4294  0000DC  EC1C  F014         	call	_cmdSend	;wreg free
  4295                           
  4296                           ;../app/app_src/application.c: 839:          }
  4297  0000E0  0012               	return	
  4298  0000E2                     l16501:
  4299  0000E2  0E34               	movlw	low _atCommand
  4300  0000E4  6E0D               	movwf	strstr@h^0,c
  4301  0000E6  0E02               	movlw	high _atCommand
  4302  0000E8  6E0E               	movwf	(strstr@h+1)^0,c
  4303  0000EA  0E30               	movlw	low STR_64
  4304  0000EC  6E0F               	movwf	strstr@n^0,c
  4305  0000EE  0EFF               	movlw	high STR_64
  4306  0000F0  6E10               	movwf	(strstr@n+1)^0,c
  4307  0000F2  ECCE  F02D         	call	_strstr	;wreg free
  4308  0000F6  500D               	movf	?_strstr^0,w,c
  4309  0000F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4310  0000FA  B4D8               	btfsc	status,2,c
  4311  0000FC  D003               	goto	l16505
  4312                           
  4313                           ;../app/app_src/application.c: 841:           cmdSetSink();
  4314  0000FE  EC32  F046         	call	_cmdSetSink	;wreg free
  4315                           
  4316                           ;../app/app_src/application.c: 842:          }
  4317  000102  0012               	return	
  4318  000104                     l16505:
  4319  000104  0E34               	movlw	low _atCommand
  4320  000106  6E0D               	movwf	strstr@h^0,c
  4321  000108  0E02               	movlw	high _atCommand
  4322  00010A  6E0E               	movwf	(strstr@h+1)^0,c
  4323  00010C  0EA7               	movlw	low STR_66
  4324  00010E  6E0F               	movwf	strstr@n^0,c
  4325  000110  0EFF               	movlw	high STR_66
  4326  000112  6E10               	movwf	(strstr@n+1)^0,c
  4327  000114  ECCE  F02D         	call	_strstr	;wreg free
  4328  000118  500D               	movf	?_strstr^0,w,c
  4329  00011A  100E               	iorwf	(?_strstr+1)^0,w,c
  4330  00011C  B4D8               	btfsc	status,2,c
  4331  00011E  D007               	goto	l16509
  4332                           
  4333                           ;../app/app_src/application.c: 844:           cmdSendSink(atCommand);
  4334  000120  0E34               	movlw	low _atCommand
  4335  000122  6E02               	movwf	cmdSendSink@cmd^0,c
  4336  000124  0E02               	movlw	high _atCommand
  4337  000126  6E03               	movwf	(cmdSendSink@cmd+1)^0,c
  4338  000128  ECB8  F046         	call	_cmdSendSink	;wreg free
  4339                           
  4340                           ;../app/app_src/application.c: 845:          }
  4341  00012C  0012               	return	
  4342  00012E                     l16509:
  4343  00012E  0E34               	movlw	low _atCommand
  4344  000130  6E0D               	movwf	strstr@h^0,c
  4345  000132  0E02               	movlw	high _atCommand
  4346  000134  6E0E               	movwf	(strstr@h+1)^0,c
  4347  000136  0EE6               	movlw	low STR_68
  4348  000138  6E0F               	movwf	strstr@n^0,c
  4349  00013A  0EFF               	movlw	high STR_68
  4350  00013C  6E10               	movwf	(strstr@n+1)^0,c
  4351  00013E  ECCE  F02D         	call	_strstr	;wreg free
  4352  000142  500D               	movf	?_strstr^0,w,c
  4353  000144  100E               	iorwf	(?_strstr+1)^0,w,c
  4354  000146  B4D8               	btfsc	status,2,c
  4355  000148  D003               	goto	l16513
  4356                           
  4357                           ;../app/app_src/application.c: 847:           cmdGetSF();
  4358  00014A  ECC8  F045         	call	_cmdGetSF	;wreg free
  4359                           
  4360                           ;../app/app_src/application.c: 848:          }
  4361  00014E  0012               	return	
  4362  000150                     l16513:
  4363  000150  0E34               	movlw	low _atCommand
  4364  000152  6E0D               	movwf	strstr@h^0,c
  4365  000154  0E02               	movlw	high _atCommand
  4366  000156  6E0E               	movwf	(strstr@h+1)^0,c
  4367  000158  0EE1               	movlw	low STR_70
  4368  00015A  6E0F               	movwf	strstr@n^0,c
  4369  00015C  0EFF               	movlw	high STR_70
  4370  00015E  6E10               	movwf	(strstr@n+1)^0,c
  4371  000160  ECCE  F02D         	call	_strstr	;wreg free
  4372  000164  500D               	movf	?_strstr^0,w,c
  4373  000166  100E               	iorwf	(?_strstr+1)^0,w,c
  4374  000168  B4D8               	btfsc	status,2,c
  4375  00016A  D008               	goto	l16517
  4376                           
  4377                           ;../app/app_src/application.c: 850:           cmdSetSF(atCommand);
  4378  00016C  0E34               	movlw	low _atCommand
  4379  00016E  0100               	movlb	0	; () banked
  4380  000170  6F76               	movwf	cmdSetSF@atCommand& (0+255),b
  4381  000172  0E02               	movlw	high _atCommand
  4382  000174  6F77               	movwf	(cmdSetSF@atCommand+1)& (0+255),b
  4383  000176  ECA2  F033         	call	_cmdSetSF	;wreg free
  4384                           
  4385                           ;../app/app_src/application.c: 851:          }
  4386  00017A  0012               	return	
  4387  00017C                     l16517:
  4388  00017C  0E34               	movlw	low _atCommand
  4389  00017E  6E0D               	movwf	strstr@h^0,c
  4390  000180  0E02               	movlw	high _atCommand
  4391  000182  6E0E               	movwf	(strstr@h+1)^0,c
  4392  000184  0ED8               	movlw	low STR_72
  4393  000186  6E0F               	movwf	strstr@n^0,c
  4394  000188  0EFE               	movlw	high STR_72
  4395  00018A  6E10               	movwf	(strstr@n+1)^0,c
  4396  00018C  ECCE  F02D         	call	_strstr	;wreg free
  4397  000190  500D               	movf	?_strstr^0,w,c
  4398  000192  100E               	iorwf	(?_strstr+1)^0,w,c
  4399  000194  B4D8               	btfsc	status,2,c
  4400  000196  D219               	goto	l16633
  4401                           
  4402                           ;../app/app_src/application.c: 853:                 print_hop_table(atCommand);
  4403  000198  0E34               	movlw	low _atCommand
  4404  00019A  0100               	movlb	0	; () banked
  4405  00019C  6F76               	movwf	print_hop_table@atCommand& (0+255),b
  4406  00019E  0E02               	movlw	high _atCommand
  4407  0001A0  6F77               	movwf	(print_hop_table@atCommand+1)& (0+255),b
  4408  0001A2  EC2B  F046         	call	_print_hop_table	;wreg free
  4409                           
  4410                           ;../app/app_src/application.c: 854:             }
  4411  0001A6  0012               	return	
  4412  0001A8                     l16521:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;../app/app_src/application.c: 860:          if(strstr(atCommand,"+BCAST=")){
  4416  0001A8  0E34               	movlw	low _atCommand
  4417  0001AA  6E0D               	movwf	strstr@h^0,c
  4418  0001AC  0E02               	movlw	high _atCommand
  4419  0001AE  6E0E               	movwf	(strstr@h+1)^0,c
  4420  0001B0  0E51               	movlw	low STR_74
  4421  0001B2  6E0F               	movwf	strstr@n^0,c
  4422  0001B4  0EFF               	movlw	high STR_74
  4423  0001B6  6E10               	movwf	(strstr@n+1)^0,c
  4424  0001B8  ECCE  F02D         	call	_strstr	;wreg free
  4425  0001BC  500D               	movf	?_strstr^0,w,c
  4426  0001BE  100E               	iorwf	(?_strstr+1)^0,w,c
  4427  0001C0  B4D8               	btfsc	status,2,c
  4428  0001C2  D009               	goto	l16525
  4429                           
  4430                           ;../app/app_src/application.c: 861:     cmdBcast(cmd);
  4431  0001C4  0060  F290  F076   	movff	executeATCommand@cmd,cmdBcast@cmd
  4432  0001CA  0060  F294  F077   	movff	executeATCommand@cmd+1,cmdBcast@cmd+1
  4433  0001D0  EC74  F017         	call	_cmdBcast	;wreg free
  4434                           
  4435                           ;../app/app_src/application.c: 862:    }
  4436  0001D4  0012               	return	
  4437  0001D6                     l16525:
  4438  0001D6  0E34               	movlw	low _atCommand
  4439  0001D8  6E0D               	movwf	strstr@h^0,c
  4440  0001DA  0E02               	movlw	high _atCommand
  4441  0001DC  6E0E               	movwf	(strstr@h+1)^0,c
  4442  0001DE  0E68               	movlw	low STR_76
  4443  0001E0  6E0F               	movwf	strstr@n^0,c
  4444  0001E2  0EFF               	movlw	high STR_76
  4445  0001E4  6E10               	movwf	(strstr@n+1)^0,c
  4446  0001E6  ECCE  F02D         	call	_strstr	;wreg free
  4447  0001EA  500D               	movf	?_strstr^0,w,c
  4448  0001EC  100E               	iorwf	(?_strstr+1)^0,w,c
  4449  0001EE  B4D8               	btfsc	status,2,c
  4450  0001F0  D007               	goto	l16529
  4451                           
  4452                           ;../app/app_src/application.c: 864:                 cmdSetBaud(atCommand);
  4453  0001F2  0E34               	movlw	low _atCommand
  4454  0001F4  6E3A               	movwf	cmdSetBaud@atCommand^0,c
  4455  0001F6  0E02               	movlw	high _atCommand
  4456  0001F8  6E3B               	movwf	(cmdSetBaud@atCommand+1)^0,c
  4457  0001FA  EC5A  F03A         	call	_cmdSetBaud	;wreg free
  4458                           
  4459                           ;../app/app_src/application.c: 865:             }
  4460  0001FE  0012               	return	
  4461  000200                     l16529:
  4462  000200  0E34               	movlw	low _atCommand
  4463  000202  6E0D               	movwf	strstr@h^0,c
  4464  000204  0E02               	movlw	high _atCommand
  4465  000206  6E0E               	movwf	(strstr@h+1)^0,c
  4466  000208  0E0B               	movlw	low STR_78
  4467  00020A  6E0F               	movwf	strstr@n^0,c
  4468  00020C  0EFF               	movlw	high STR_78
  4469  00020E  6E10               	movwf	(strstr@n+1)^0,c
  4470  000210  ECCE  F02D         	call	_strstr	;wreg free
  4471  000214  500D               	movf	?_strstr^0,w,c
  4472  000216  100E               	iorwf	(?_strstr+1)^0,w,c
  4473  000218  B4D8               	btfsc	status,2,c
  4474  00021A  D1D7               	goto	l16633
  4475                           
  4476                           ;../app/app_src/application.c: 867:                 cmdBootLoad();
  4477  00021C  EC87  F041         	call	_cmdBootLoad	;wreg free
  4478                           
  4479                           ;../app/app_src/application.c: 868:             }
  4480  000220  0012               	return	
  4481  000222                     l16533:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;../app/app_src/application.c: 874:          if(strstr(atCommand,"+ADDR?")){
  4485  000222  0E34               	movlw	low _atCommand
  4486  000224  6E0D               	movwf	strstr@h^0,c
  4487  000226  0E02               	movlw	high _atCommand
  4488  000228  6E0E               	movwf	(strstr@h+1)^0,c
  4489  00022A  0E92               	movlw	low STR_80
  4490  00022C  6E0F               	movwf	strstr@n^0,c
  4491  00022E  0EFF               	movlw	high STR_80
  4492  000230  6E10               	movwf	(strstr@n+1)^0,c
  4493  000232  ECCE  F02D         	call	_strstr	;wreg free
  4494  000236  500D               	movf	?_strstr^0,w,c
  4495  000238  100E               	iorwf	(?_strstr+1)^0,w,c
  4496  00023A  B4D8               	btfsc	status,2,c
  4497  00023C  D003               	goto	l16537
  4498                           
  4499                           ;../app/app_src/application.c: 875:           cmdAddr();
  4500  00023E  ECF6  F044         	call	_cmdAddr	;wreg free
  4501                           
  4502                           ;../app/app_src/application.c: 876:          }
  4503  000242  0012               	return	
  4504  000244                     l16537:
  4505  000244  0E34               	movlw	low _atCommand
  4506  000246  6E0D               	movwf	strstr@h^0,c
  4507  000248  0E02               	movlw	high _atCommand
  4508  00024A  6E0E               	movwf	(strstr@h+1)^0,c
  4509  00024C  0E76               	movlw	low STR_82
  4510  00024E  6E0F               	movwf	strstr@n^0,c
  4511  000250  0EFF               	movlw	high STR_82
  4512  000252  6E10               	movwf	(strstr@n+1)^0,c
  4513  000254  ECCE  F02D         	call	_strstr	;wreg free
  4514  000258  500D               	movf	?_strstr^0,w,c
  4515  00025A  100E               	iorwf	(?_strstr+1)^0,w,c
  4516  00025C  B4D8               	btfsc	status,2,c
  4517  00025E  D008               	goto	l16541
  4518                           
  4519                           ;../app/app_src/application.c: 878:     cmdSetAddr(atCommand);
  4520  000260  0E34               	movlw	low _atCommand
  4521  000262  0100               	movlb	0	; () banked
  4522  000264  6F76               	movwf	cmdSetAddr@cmd& (0+255),b
  4523  000266  0E02               	movlw	high _atCommand
  4524  000268  6F77               	movwf	(cmdSetAddr@cmd+1)& (0+255),b
  4525  00026A  EC7C  F036         	call	_cmdSetAddr	;wreg free
  4526                           
  4527                           ;../app/app_src/application.c: 879:    }
  4528  00026E  0012               	return	
  4529  000270                     l16541:
  4530  000270  0E34               	movlw	low _atCommand
  4531  000272  6E0D               	movwf	strstr@h^0,c
  4532  000274  0E02               	movlw	high _atCommand
  4533  000276  6E0E               	movwf	(strstr@h+1)^0,c
  4534  000278  0E15               	movlw	low STR_84
  4535  00027A  6E0F               	movwf	strstr@n^0,c
  4536  00027C  0EFF               	movlw	high STR_84
  4537  00027E  6E10               	movwf	(strstr@n+1)^0,c
  4538  000280  ECCE  F02D         	call	_strstr	;wreg free
  4539  000284  500D               	movf	?_strstr^0,w,c
  4540  000286  100E               	iorwf	(?_strstr+1)^0,w,c
  4541  000288  B4D8               	btfsc	status,2,c
  4542  00028A  D19F               	goto	l16633
  4543                           
  4544                           ;../app/app_src/application.c: 881:           cmdSetAES(atCommand);
  4545  00028C  0E34               	movlw	low _atCommand
  4546  00028E  0100               	movlb	0	; () banked
  4547  000290  6F76               	movwf	cmdSetAES@cmd& (0+255),b
  4548  000292  0E02               	movlw	high _atCommand
  4549  000294  6F77               	movwf	(cmdSetAES@cmd+1)& (0+255),b
  4550  000296  EC74  F019         	call	_cmdSetAES	;wreg free
  4551                           
  4552                           ;../app/app_src/application.c: 882:          }
  4553  00029A  0012               	return	
  4554  00029C                     l16545:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;../app/app_src/application.c: 888:          if(strstr(atCommand,"+CADCOUNTER?")){
  4558  00029C  0E34               	movlw	low _atCommand
  4559  00029E  6E0D               	movwf	strstr@h^0,c
  4560  0002A0  0E02               	movlw	high _atCommand
  4561  0002A2  6E0E               	movwf	(strstr@h+1)^0,c
  4562  0002A4  0EA7               	movlw	low STR_86
  4563  0002A6  6E0F               	movwf	strstr@n^0,c
  4564  0002A8  0EFE               	movlw	high STR_86
  4565  0002AA  6E10               	movwf	(strstr@n+1)^0,c
  4566  0002AC  ECCE  F02D         	call	_strstr	;wreg free
  4567  0002B0  500D               	movf	?_strstr^0,w,c
  4568  0002B2  100E               	iorwf	(?_strstr+1)^0,w,c
  4569  0002B4  B4D8               	btfsc	status,2,c
  4570  0002B6  D003               	goto	l16549
  4571                           
  4572                           ;../app/app_src/application.c: 889:           cmdGetCAD();
  4573  0002B8  ECD3  F045         	call	_cmdGetCAD	;wreg free
  4574                           
  4575                           ;../app/app_src/application.c: 890:          }
  4576  0002BC  0012               	return	
  4577  0002BE                     l16549:
  4578  0002BE  0E34               	movlw	low _atCommand
  4579  0002C0  6E0D               	movwf	strstr@h^0,c
  4580  0002C2  0E02               	movlw	high _atCommand
  4581  0002C4  6E0E               	movwf	(strstr@h+1)^0,c
  4582  0002C6  0E56               	movlw	low STR_88
  4583  0002C8  6E0F               	movwf	strstr@n^0,c
  4584  0002CA  0EFE               	movlw	high STR_88
  4585  0002CC  6E10               	movwf	(strstr@n+1)^0,c
  4586  0002CE  ECCE  F02D         	call	_strstr	;wreg free
  4587  0002D2  500D               	movf	?_strstr^0,w,c
  4588  0002D4  100E               	iorwf	(?_strstr+1)^0,w,c
  4589  0002D6  B4D8               	btfsc	status,2,c
  4590  0002D8  D003               	goto	l16553
  4591                           
  4592                           ;../app/app_src/application.c: 892:           cmdRstCAD();
  4593  0002DA  ECE9  F045         	call	_cmdRstCAD	;wreg free
  4594                           
  4595                           ;../app/app_src/application.c: 893:          }
  4596  0002DE  0012               	return	
  4597  0002E0                     l16553:
  4598  0002E0  0E34               	movlw	low _atCommand
  4599  0002E2  6E0D               	movwf	strstr@h^0,c
  4600  0002E4  0E02               	movlw	high _atCommand
  4601  0002E6  6E0E               	movwf	(strstr@h+1)^0,c
  4602  0002E8  0EF7               	movlw	low STR_90
  4603  0002EA  6E0F               	movwf	strstr@n^0,c
  4604  0002EC  0EFE               	movlw	high STR_90
  4605  0002EE  6E10               	movwf	(strstr@n+1)^0,c
  4606  0002F0  ECCE  F02D         	call	_strstr	;wreg free
  4607  0002F4  500D               	movf	?_strstr^0,w,c
  4608  0002F6  100E               	iorwf	(?_strstr+1)^0,w,c
  4609  0002F8  B4D8               	btfsc	status,2,c
  4610  0002FA  D003               	goto	l16557
  4611                           
  4612                           ;../app/app_src/application.c: 895:           cmdGetCADRSSI();
  4613  0002FC  EC40  F045         	call	_cmdGetCADRSSI	;wreg free
  4614                           
  4615                           ;../app/app_src/application.c: 896:          }
  4616  000300  0012               	return	
  4617  000302                     l16557:
  4618  000302  0E34               	movlw	low _atCommand
  4619  000304  6E0D               	movwf	strstr@h^0,c
  4620  000306  0E02               	movlw	high _atCommand
  4621  000308  6E0E               	movwf	(strstr@h+1)^0,c
  4622  00030A  0EE3               	movlw	low STR_92
  4623  00030C  6E0F               	movwf	strstr@n^0,c
  4624  00030E  0EFE               	movlw	high STR_92
  4625  000310  6E10               	movwf	(strstr@n+1)^0,c
  4626  000312  ECCE  F02D         	call	_strstr	;wreg free
  4627  000316  500D               	movf	?_strstr^0,w,c
  4628  000318  100E               	iorwf	(?_strstr+1)^0,w,c
  4629  00031A  B4D8               	btfsc	status,2,c
  4630  00031C  D156               	goto	l16633
  4631                           
  4632                           ;../app/app_src/application.c: 898:           cmdSetCADRSSI(atCommand);
  4633  00031E  0E34               	movlw	low _atCommand
  4634  000320  0100               	movlb	0	; () banked
  4635  000322  6F76               	movwf	cmdSetCADRSSI@atCommand& (0+255),b
  4636  000324  0E02               	movlw	high _atCommand
  4637  000326  6F77               	movwf	(cmdSetCADRSSI@atCommand+1)& (0+255),b
  4638  000328  ECF9  F033         	call	_cmdSetCADRSSI	;wreg free
  4639                           
  4640                           ;../app/app_src/application.c: 899:          }
  4641  00032C  0012               	return	
  4642  00032E                     l16561:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;../app/app_src/application.c: 905:             if(strstr(atCommand,"+HOPS?")){
  4646  00032E  0E34               	movlw	low _atCommand
  4647  000330  6E0D               	movwf	strstr@h^0,c
  4648  000332  0E02               	movlw	high _atCommand
  4649  000334  6E0E               	movwf	(strstr@h+1)^0,c
  4650  000336  0E99               	movlw	low STR_94
  4651  000338  6E0F               	movwf	strstr@n^0,c
  4652  00033A  0EFF               	movlw	high STR_94
  4653  00033C  6E10               	movwf	(strstr@n+1)^0,c
  4654  00033E  ECCE  F02D         	call	_strstr	;wreg free
  4655  000342  500D               	movf	?_strstr^0,w,c
  4656  000344  100E               	iorwf	(?_strstr+1)^0,w,c
  4657  000346  B4D8               	btfsc	status,2,c
  4658  000348  D003               	goto	l16565
  4659  00034A                     u16840:
  4660                           
  4661                           ;../app/app_src/application.c: 906:                 cmdGetTTL();
  4662  00034A  ECBA  F046         	call	_cmdGetTTL	;wreg free
  4663                           
  4664                           ;../app/app_src/application.c: 907:             }
  4665  00034E  0012               	return	
  4666  000350                     l16565:
  4667  000350  0E34               	movlw	low _atCommand
  4668  000352  6E0D               	movwf	strstr@h^0,c
  4669  000354  0E02               	movlw	high _atCommand
  4670  000356  6E0E               	movwf	(strstr@h+1)^0,c
  4671  000358  0E7D               	movlw	low STR_96
  4672  00035A  6E0F               	movwf	strstr@n^0,c
  4673  00035C  0EFF               	movlw	high STR_96
  4674  00035E  6E10               	movwf	(strstr@n+1)^0,c
  4675  000360  ECCE  F02D         	call	_strstr	;wreg free
  4676  000364  500D               	movf	?_strstr^0,w,c
  4677  000366  100E               	iorwf	(?_strstr+1)^0,w,c
  4678  000368  B4D8               	btfsc	status,2,c
  4679  00036A  D007               	goto	l16569
  4680  00036C                     u16850:
  4681                           
  4682                           ;../app/app_src/application.c: 909:                 cmdSetTTL(atCommand);
  4683  00036C  0E34               	movlw	low _atCommand
  4684  00036E  6E02               	movwf	cmdSetTTL@cmd^0,c
  4685  000370  0E02               	movlw	high _atCommand
  4686  000372  6E03               	movwf	(cmdSetTTL@cmd+1)^0,c
  4687  000374  ECB7  F046         	call	_cmdSetTTL	;wreg free
  4688                           
  4689                           ;../app/app_src/application.c: 910:             }
  4690  000378  0012               	return	
  4691  00037A                     l16569:
  4692  00037A  0E34               	movlw	low _atCommand
  4693  00037C  6E0D               	movwf	strstr@h^0,c
  4694  00037E  0E02               	movlw	high _atCommand
  4695  000380  6E0E               	movwf	(strstr@h+1)^0,c
  4696  000382  0E1E               	movlw	low STR_98
  4697  000384  6E0F               	movwf	strstr@n^0,c
  4698  000386  0EFF               	movlw	high STR_98
  4699  000388  6E10               	movwf	(strstr@n+1)^0,c
  4700  00038A  ECCE  F02D         	call	_strstr	;wreg free
  4701  00038E  500D               	movf	?_strstr^0,w,c
  4702  000390  100E               	iorwf	(?_strstr+1)^0,w,c
  4703  000392  B4D8               	btfsc	status,2,c
  4704  000394  D11A               	goto	l16633
  4705                           
  4706                           ;../app/app_src/application.c: 912:                 set_hop_table_ttl(atCommand);
  4707  000396  0E34               	movlw	low _atCommand
  4708  000398  0100               	movlb	0	; () banked
  4709  00039A  6F76               	movwf	set_hop_table_ttl@cmd& (0+255),b
  4710  00039C  0E02               	movlw	high _atCommand
  4711  00039E  6F77               	movwf	(set_hop_table_ttl@cmd+1)& (0+255),b
  4712  0003A0  EC24  F046         	call	_set_hop_table_ttl	;wreg free
  4713                           
  4714                           ;../app/app_src/application.c: 913:             }
  4715  0003A4  0012               	return	
  4716  0003A6                     l16573:
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;../app/app_src/application.c: 919:             if(strstr(cmd,"+I")){
  4720  0003A6  0060  F290  F00D   	movff	executeATCommand@cmd,strstr@h
  4721  0003AC  0060  F294  F00E   	movff	executeATCommand@cmd+1,strstr@h+1
  4722  0003B2  0EFA               	movlw	low STR_100
  4723  0003B4  6E0F               	movwf	strstr@n^0,c
  4724  0003B6  0EFF               	movlw	high STR_100
  4725  0003B8  6E10               	movwf	(strstr@n+1)^0,c
  4726  0003BA  ECCE  F02D         	call	_strstr	;wreg free
  4727  0003BE  500D               	movf	?_strstr^0,w,c
  4728  0003C0  100E               	iorwf	(?_strstr+1)^0,w,c
  4729  0003C2  B4D8               	btfsc	status,2,c
  4730  0003C4  D102               	goto	l16633
  4731                           
  4732                           ;../app/app_src/application.c: 920:                 cmdI();
  4733  0003C6  ECA9  F046         	call	_cmdI	;wreg free
  4734                           
  4735                           ;../app/app_src/application.c: 921:             }
  4736  0003CA  0012               	return	
  4737  0003CC                     l16577:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;../app/app_src/application.c: 927:          if(strstr(atCommand,"+MAC?")){
  4741  0003CC  0E34               	movlw	low _atCommand
  4742  0003CE  6E0D               	movwf	strstr@h^0,c
  4743  0003D0  0E02               	movlw	high _atCommand
  4744  0003D2  6E0E               	movwf	(strstr@h+1)^0,c
  4745  0003D4  0EB4               	movlw	low STR_102
  4746  0003D6  6E0F               	movwf	strstr@n^0,c
  4747  0003D8  0EFF               	movlw	high STR_102
  4748  0003DA  6E10               	movwf	(strstr@n+1)^0,c
  4749  0003DC  ECCE  F02D         	call	_strstr	;wreg free
  4750  0003E0  500D               	movf	?_strstr^0,w,c
  4751  0003E2  100E               	iorwf	(?_strstr+1)^0,w,c
  4752  0003E4  B4D8               	btfsc	status,2,c
  4753  0003E6  D003               	goto	l16581
  4754                           
  4755                           ;../app/app_src/application.c: 928:           cmdMac();
  4756  0003E8  ECB4  F03E         	call	_cmdMac	;wreg free
  4757                           
  4758                           ;../app/app_src/application.c: 929:          }
  4759  0003EC  0012               	return	
  4760  0003EE                     l16581:
  4761  0003EE  0E34               	movlw	low _atCommand
  4762  0003F0  6E0D               	movwf	strstr@h^0,c
  4763  0003F2  0E02               	movlw	high _atCommand
  4764  0003F4  6E0E               	movwf	(strstr@h+1)^0,c
  4765  0003F6  0E84               	movlw	low STR_104
  4766  0003F8  6E0F               	movwf	strstr@n^0,c
  4767  0003FA  0EFF               	movlw	high STR_104
  4768  0003FC  6E10               	movwf	(strstr@n+1)^0,c
  4769  0003FE  ECCE  F02D         	call	_strstr	;wreg free
  4770  000402  500D               	movf	?_strstr^0,w,c
  4771  000404  100E               	iorwf	(?_strstr+1)^0,w,c
  4772  000406  B4D8               	btfsc	status,2,c
  4773  000408  D0E0               	goto	l16633
  4774                           
  4775                           ;../app/app_src/application.c: 931:           cmdGetMode();
  4776  00040A  EC39  F046         	call	_cmdGetMode	;wreg free
  4777                           
  4778                           ;../app/app_src/application.c: 932:          }
  4779  00040E  0012               	return	
  4780  000410                     l16585:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;../app/app_src/application.c: 938:          if(strstr(atCommand,"+NADDR?")){
  4784  000410  0E34               	movlw	low _atCommand
  4785  000412  6E0D               	movwf	strstr@h^0,c
  4786  000414  0E02               	movlw	high _atCommand
  4787  000416  6E0E               	movwf	(strstr@h+1)^0,c
  4788  000418  0E59               	movlw	low STR_106
  4789  00041A  6E0F               	movwf	strstr@n^0,c
  4790  00041C  0EFF               	movlw	high STR_106
  4791  00041E  6E10               	movwf	(strstr@n+1)^0,c
  4792  000420  ECCE  F02D         	call	_strstr	;wreg free
  4793  000424  500D               	movf	?_strstr^0,w,c
  4794  000426  100E               	iorwf	(?_strstr+1)^0,w,c
  4795  000428  B4D8               	btfsc	status,2,c
  4796  00042A  D003               	goto	l16589
  4797                           
  4798                           ;../app/app_src/application.c: 939:     cmdNaddr();
  4799  00042C  ECB2  F045         	call	_cmdNaddr	;wreg free
  4800                           
  4801                           ;../app/app_src/application.c: 940:    }
  4802  000430  0012               	return	
  4803  000432                     l16589:
  4804  000432  0E34               	movlw	low _atCommand
  4805  000434  6E0D               	movwf	strstr@h^0,c
  4806  000436  0E02               	movlw	high _atCommand
  4807  000438  6E0E               	movwf	(strstr@h+1)^0,c
  4808  00043A  0E49               	movlw	low STR_108
  4809  00043C  6E0F               	movwf	strstr@n^0,c
  4810  00043E  0EFF               	movlw	high STR_108
  4811  000440  6E10               	movwf	(strstr@n+1)^0,c
  4812  000442  ECCE  F02D         	call	_strstr	;wreg free
  4813  000446  500D               	movf	?_strstr^0,w,c
  4814  000448  100E               	iorwf	(?_strstr+1)^0,w,c
  4815  00044A  B4D8               	btfsc	status,2,c
  4816  00044C  D0BE               	goto	l16633
  4817                           
  4818                           ;../app/app_src/application.c: 942:     cmdSetNaddr(atCommand);
  4819  00044E  0E34               	movlw	low _atCommand
  4820  000450  0100               	movlb	0	; () banked
  4821  000452  6F76               	movwf	cmdSetNaddr@cmd& (0+255),b
  4822  000454  0E02               	movlw	high _atCommand
  4823  000456  6F77               	movwf	(cmdSetNaddr@cmd+1)& (0+255),b
  4824  000458  ECAC  F039         	call	_cmdSetNaddr	;wreg free
  4825                           
  4826                           ;../app/app_src/application.c: 943:    }
  4827  00045C  0012               	return	
  4828  00045E                     l16593:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;../app/app_src/application.c: 949:             if(strstr(atCommand,"+PARITY=")){
  4832  00045E  0E34               	movlw	low _atCommand
  4833  000460  6E0D               	movwf	strstr@h^0,c
  4834  000462  0E02               	movlw	high _atCommand
  4835  000464  6E0E               	movwf	(strstr@h+1)^0,c
  4836  000466  0E27               	movlw	low STR_110
  4837  000468  6E0F               	movwf	strstr@n^0,c
  4838  00046A  0EFF               	movlw	high STR_110
  4839  00046C  6E10               	movwf	(strstr@n+1)^0,c
  4840  00046E  ECCE  F02D         	call	_strstr	;wreg free
  4841  000472  500D               	movf	?_strstr^0,w,c
  4842  000474  100E               	iorwf	(?_strstr+1)^0,w,c
  4843  000476  B4D8               	btfsc	status,2,c
  4844  000478  D0A8               	goto	l16633
  4845                           
  4846                           ;../app/app_src/application.c: 950:                 cmdSetParity(atCommand);
  4847  00047A  0E34               	movlw	low _atCommand
  4848  00047C  0100               	movlb	0	; () banked
  4849  00047E  6F76               	movwf	cmdSetParity@atCommand& (0+255),b
  4850  000480  0E02               	movlw	high _atCommand
  4851  000482  6F77               	movwf	(cmdSetParity@atCommand+1)& (0+255),b
  4852  000484  EC53  F037         	call	_cmdSetParity	;wreg free
  4853  000488                     l16597:
  4854                           
  4855                           ;../app/app_src/application.c: 956:          if(strstr(atCommand,"+RECV")){
  4856  000488  0E34               	movlw	low _atCommand
  4857  00048A  6E0D               	movwf	strstr@h^0,c
  4858  00048C  0E02               	movlw	high _atCommand
  4859  00048E  6E0E               	movwf	(strstr@h+1)^0,c
  4860  000490  0ECC               	movlw	low STR_112
  4861  000492  6E0F               	movwf	strstr@n^0,c
  4862  000494  0EFF               	movlw	high STR_112
  4863  000496  6E10               	movwf	(strstr@n+1)^0,c
  4864  000498  ECCE  F02D         	call	_strstr	;wreg free
  4865  00049C  500D               	movf	?_strstr^0,w,c
  4866  00049E  100E               	iorwf	(?_strstr+1)^0,w,c
  4867  0004A0  B4D8               	btfsc	status,2,c
  4868  0004A2  D003               	goto	l16601
  4869                           
  4870                           ;../app/app_src/application.c: 957:           cmdRecv();
  4871  0004A4  ECB9  F046         	call	_cmdRecv	;wreg free
  4872                           
  4873                           ;../app/app_src/application.c: 958:          }
  4874  0004A8  0012               	return	
  4875  0004AA                     l16601:
  4876  0004AA  0E34               	movlw	low _atCommand
  4877  0004AC  6E0D               	movwf	strstr@h^0,c
  4878  0004AE  0E02               	movlw	high _atCommand
  4879  0004B0  6E0E               	movwf	(strstr@h+1)^0,c
  4880  0004B2  0E8B               	movlw	low STR_114
  4881  0004B4  6E0F               	movwf	strstr@n^0,c
  4882  0004B6  0EFF               	movlw	high STR_114
  4883  0004B8  6E10               	movwf	(strstr@n+1)^0,c
  4884  0004BA  ECCE  F02D         	call	_strstr	;wreg free
  4885  0004BE  500D               	movf	?_strstr^0,w,c
  4886  0004C0  100E               	iorwf	(?_strstr+1)^0,w,c
  4887  0004C2  B4D8               	btfsc	status,2,c
  4888  0004C4  D003               	goto	l16605
  4889                           
  4890                           ;../app/app_src/application.c: 960:           cmdGetRFCH();
  4891  0004C6  EC32  F045         	call	_cmdGetRFCH	;wreg free
  4892                           
  4893                           ;../app/app_src/application.c: 961:          }
  4894  0004CA  0012               	return	
  4895  0004CC                     l16605:
  4896  0004CC  0E34               	movlw	low _atCommand
  4897  0004CE  6E0D               	movwf	strstr@h^0,c
  4898  0004D0  0E02               	movlw	high _atCommand
  4899  0004D2  6E0E               	movwf	(strstr@h+1)^0,c
  4900  0004D4  0E6F               	movlw	low STR_116
  4901  0004D6  6E0F               	movwf	strstr@n^0,c
  4902  0004D8  0EFF               	movlw	high STR_116
  4903  0004DA  6E10               	movwf	(strstr@n+1)^0,c
  4904  0004DC  ECCE  F02D         	call	_strstr	;wreg free
  4905  0004E0  500D               	movf	?_strstr^0,w,c
  4906  0004E2  100E               	iorwf	(?_strstr+1)^0,w,c
  4907  0004E4  B4D8               	btfsc	status,2,c
  4908  0004E6  D008               	goto	l16609
  4909                           
  4910                           ;../app/app_src/application.c: 963:           cmdSetRFCH(atCommand);
  4911  0004E8  0E34               	movlw	low _atCommand
  4912  0004EA  0100               	movlb	0	; () banked
  4913  0004EC  6F76               	movwf	cmdSetRFCH@cmd& (0+255),b
  4914  0004EE  0E02               	movlw	high _atCommand
  4915  0004F0  6F77               	movwf	(cmdSetRFCH@cmd+1)& (0+255),b
  4916  0004F2  ECF9  F034         	call	_cmdSetRFCH	;wreg free
  4917                           
  4918                           ;../app/app_src/application.c: 964:          }
  4919  0004F6  0012               	return	
  4920  0004F8                     l16609:
  4921  0004F8  0E34               	movlw	low _atCommand
  4922  0004FA  6E0D               	movwf	strstr@h^0,c
  4923  0004FC  0E02               	movlw	high _atCommand
  4924  0004FE  6E0E               	movwf	(strstr@h+1)^0,c
  4925  000500  0EF0               	movlw	low STR_118
  4926  000502  6E0F               	movwf	strstr@n^0,c
  4927  000504  0EFF               	movlw	high STR_118
  4928  000506  6E10               	movwf	(strstr@n+1)^0,c
  4929  000508  ECCE  F02D         	call	_strstr	;wreg free
  4930  00050C  500D               	movf	?_strstr^0,w,c
  4931  00050E  100E               	iorwf	(?_strstr+1)^0,w,c
  4932  000510  B4D8               	btfsc	status,2,c
  4933  000512  D003               	goto	l16613
  4934                           
  4935                           ;../app/app_src/application.c: 966:           cmdReset();
  4936  000514  ECB5  F046         	call	_cmdReset	;wreg free
  4937                           
  4938                           ;../app/app_src/application.c: 967:          }
  4939  000518  0012               	return	
  4940  00051A                     l16613:
  4941  00051A  0E34               	movlw	low _atCommand
  4942  00051C  6E0D               	movwf	strstr@h^0,c
  4943  00051E  0E02               	movlw	high _atCommand
  4944  000520  6E0E               	movwf	(strstr@h+1)^0,c
  4945  000522  0EA0               	movlw	low STR_120
  4946  000524  6E0F               	movwf	strstr@n^0,c
  4947  000526  0EFF               	movlw	high STR_120
  4948  000528  6E10               	movwf	(strstr@n+1)^0,c
  4949  00052A  ECCE  F02D         	call	_strstr	;wreg free
  4950  00052E  500D               	movf	?_strstr^0,w,c
  4951  000530  100E               	iorwf	(?_strstr+1)^0,w,c
  4952  000532  B4D8               	btfsc	status,2,c
  4953  000534  D04A               	goto	l16633
  4954                           
  4955                           ;../app/app_src/application.c: 969:           cmdGetRxCnt(atCommand);
  4956  000536  0E34               	movlw	low _atCommand
  4957  000538  6E02               	movwf	cmdGetRxCnt@atCommand^0,c
  4958  00053A  0E02               	movlw	high _atCommand
  4959  00053C  6E03               	movwf	(cmdGetRxCnt@atCommand+1)^0,c
  4960  00053E  ECBB  F046         	call	_cmdGetRxCnt	;wreg free
  4961                           
  4962                           ;../app/app_src/application.c: 970:          }
  4963  000542  0012               	return	
  4964  000544                     l16617:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;../app/app_src/application.c: 976:          if(strstr(atCommand,"+TTL?")){
  4968  000544  0E34               	movlw	low _atCommand
  4969  000546  6E0D               	movwf	strstr@h^0,c
  4970  000548  0E02               	movlw	high _atCommand
  4971  00054A  6E0E               	movwf	(strstr@h+1)^0,c
  4972  00054C  0EBA               	movlw	low STR_122
  4973  00054E  6E0F               	movwf	strstr@n^0,c
  4974  000550  0EFF               	movlw	high STR_122
  4975  000552  6E10               	movwf	(strstr@n+1)^0,c
  4976  000554  ECCE  F02D         	call	_strstr	;wreg free
  4977  000558  500D               	movf	?_strstr^0,w,c
  4978  00055A  100E               	iorwf	(?_strstr+1)^0,w,c
  4979  00055C  A4D8               	btfss	status,2,c
  4980  00055E  D6F5               	goto	u16840
  4981  000560  0E34               	movlw	low _atCommand
  4982  000562  6E0D               	movwf	strstr@h^0,c
  4983  000564  0E02               	movlw	high _atCommand
  4984  000566  6E0E               	movwf	(strstr@h+1)^0,c
  4985  000568  0EAE               	movlw	low STR_124
  4986  00056A  6E0F               	movwf	strstr@n^0,c
  4987  00056C  0EFF               	movlw	high STR_124
  4988  00056E  6E10               	movwf	(strstr@n+1)^0,c
  4989  000570  ECCE  F02D         	call	_strstr	;wreg free
  4990  000574  500D               	movf	?_strstr^0,w,c
  4991  000576  100E               	iorwf	(?_strstr+1)^0,w,c
  4992  000578  A4D8               	btfss	status,2,c
  4993  00057A  D6F8               	goto	u16850
  4994  00057C  0E34               	movlw	low _atCommand
  4995  00057E  6E0D               	movwf	strstr@h^0,c
  4996  000580  0E02               	movlw	high _atCommand
  4997  000582  6E0E               	movwf	(strstr@h+1)^0,c
  4998  000584  0E01               	movlw	low STR_126
  4999  000586  6E0F               	movwf	strstr@n^0,c
  5000  000588  0EFF               	movlw	high STR_126
  5001  00058A  6E10               	movwf	(strstr@n+1)^0,c
  5002  00058C  ECCE  F02D         	call	_strstr	;wreg free
  5003  000590  500D               	movf	?_strstr^0,w,c
  5004  000592  100E               	iorwf	(?_strstr+1)^0,w,c
  5005  000594  B4D8               	btfsc	status,2,c
  5006  000596  D003               	goto	l16629
  5007                           
  5008                           ;../app/app_src/application.c: 983:           cmdGetTX();
  5009  000598  ECBD  F045         	call	_cmdGetTX	;wreg free
  5010                           
  5011                           ;../app/app_src/application.c: 984:          }
  5012  00059C  0012               	return	
  5013  00059E                     l16629:
  5014  00059E  0E34               	movlw	low _atCommand
  5015  0005A0  6E0D               	movwf	strstr@h^0,c
  5016  0005A2  0E02               	movlw	high _atCommand
  5017  0005A4  6E0E               	movwf	(strstr@h+1)^0,c
  5018  0005A6  0EED               	movlw	low STR_128
  5019  0005A8  6E0F               	movwf	strstr@n^0,c
  5020  0005AA  0EFE               	movlw	high STR_128
  5021  0005AC  6E10               	movwf	(strstr@n+1)^0,c
  5022  0005AE  ECCE  F02D         	call	_strstr	;wreg free
  5023  0005B2  500D               	movf	?_strstr^0,w,c
  5024  0005B4  100E               	iorwf	(?_strstr+1)^0,w,c
  5025  0005B6  B4D8               	btfsc	status,2,c
  5026  0005B8  D008               	goto	l16633
  5027                           
  5028                           ;../app/app_src/application.c: 986:           cmdSetTX(atCommand);
  5029  0005BA  0E34               	movlw	low _atCommand
  5030  0005BC  0100               	movlb	0	; () banked
  5031  0005BE  6F76               	movwf	cmdSetTX@cmd& (0+255),b
  5032  0005C0  0E02               	movlw	high _atCommand
  5033  0005C2  6F77               	movwf	(cmdSetTX@cmd+1)& (0+255),b
  5034  0005C4  EC11  F02C         	call	_cmdSetTX	;wreg free
  5035                           
  5036                           ;../app/app_src/application.c: 987:          }
  5037  0005C8  0012               	return	
  5038  0005CA                     l16633:
  5039                           
  5040                           ;../app/app_src/application.c: 996:             printf("NOT OK:%u\r\n", (uint16_t)UNDEFC
      +                          MD);
  5041  0005CA  0ECC               	movlw	low STR_4
  5042  0005CC  6E55               	movwf	printf@fmt^0,c
  5043  0005CE  0EFE               	movlw	high STR_4
  5044  0005D0  6E56               	movwf	(printf@fmt+1)^0,c
  5045  0005D2  0E00               	movlw	0
  5046  0005D4  6E58               	movwf	(?_printf+3)^0,c
  5047  0005D6  0E09               	movlw	9
  5048  0005D8  6E57               	movwf	(?_printf+2)^0,c
  5049  0005DA  EC3E  F044         	call	_printf	;wreg free
  5050                           
  5051                           ;../app/app_src/application.c: 997:             break;
  5052  0005DE  0012               	return	
  5053  0005E0                     l16637:
  5054                           
  5055                           ; BSR set to: 0
  5056  0005E0  EE20 F001          	lfsr	2,1
  5057  0005E4  51A4               	movf	executeATCommand@cmd& (0+255),w,b
  5058  0005E6  26D9               	addwf	fsr2l,f,c
  5059  0005E8  51A5               	movf	(executeATCommand@cmd+1)& (0+255),w,b
  5060  0005EA  22DA               	addwfc	fsr2h,f,c
  5061  0005EC  50DF               	movf	indf2,w,c
  5062  0005EE  6FA6               	movwf	??_executeATCommand& (0+255),b
  5063  0005F0  6BA7               	clrf	(??_executeATCommand+1)& (0+255),b
  5064                           
  5065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5066                           ; Switch size 1, requested type "simple"
  5067                           ; Number of cases is 1, Range of values is 0 to 0
  5068                           ; switch strategies available:
  5069                           ; Name         Instructions Cycles
  5070                           ; simple_byte            4     3 (average)
  5071                           ;	Chosen strategy is simple_byte
  5072  0005F2  51A7               	movf	(??_executeATCommand+1)& (0+255),w,b
  5073  0005F4  0A00               	xorlw	0	; case 0
  5074  0005F6  A4D8               	btfss	status,2,c
  5075  0005F8  D7E8               	goto	l16633
  5076                           
  5077                           ; BSR set to: 0
  5078                           ; Switch size 1, requested type "simple"
  5079                           ; Number of cases is 11, Range of values is 65 to 84
  5080                           ; switch strategies available:
  5081                           ; Name         Instructions Cycles
  5082                           ; simple_byte           34    18 (average)
  5083                           ;	Chosen strategy is simple_byte
  5084  0005FA  51A6               	movf	??_executeATCommand& (0+255),w,b
  5085  0005FC  0A41               	xorlw	65	; case 65
  5086  0005FE  B4D8               	btfsc	status,2,c
  5087  000600  D610               	goto	l16533
  5088  000602  0A03               	xorlw	3	; case 66
  5089  000604  B4D8               	btfsc	status,2,c
  5090  000606  D5D0               	goto	l16521
  5091  000608  0A01               	xorlw	1	; case 67
  5092  00060A  B4D8               	btfsc	status,2,c
  5093  00060C  D647               	goto	l16545
  5094  00060E  0A0B               	xorlw	11	; case 72
  5095  000610  B4D8               	btfsc	status,2,c
  5096  000612  D68D               	goto	l16561
  5097  000614  0A01               	xorlw	1	; case 73
  5098  000616  B4D8               	btfsc	status,2,c
  5099  000618  D6C6               	goto	l16573
  5100  00061A  0A04               	xorlw	4	; case 77
  5101  00061C  B4D8               	btfsc	status,2,c
  5102  00061E  D6D6               	goto	l16577
  5103  000620  0A03               	xorlw	3	; case 78
  5104  000622  B4D8               	btfsc	status,2,c
  5105  000624  D6F5               	goto	l16585
  5106  000626  0A1E               	xorlw	30	; case 80
  5107  000628  B4D8               	btfsc	status,2,c
  5108  00062A  D719               	goto	l16593
  5109  00062C  0A02               	xorlw	2	; case 82
  5110  00062E  B4D8               	btfsc	status,2,c
  5111  000630  D72B               	goto	l16597
  5112  000632  0A01               	xorlw	1	; case 83
  5113  000634  B4D8               	btfsc	status,2,c
  5114  000636  D53E               	goto	l16497
  5115  000638  0A07               	xorlw	7	; case 84
  5116  00063A  B4D8               	btfsc	status,2,c
  5117  00063C  D783               	goto	l16617
  5118  00063E  D7C5               	goto	l16633
  5119  000640                     __end_of_executeATCommand:
  5120                           	opt callstack 0
  5121                           
  5122 ;; *************** function _set_hop_table_ttl *****************
  5123 ;; Defined at:
  5124 ;;		line 809 in file "../app/app_src/application.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5127 ;;		 -> atCommand(80), 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 3F/0
  5136 ;;		On exit  : 3F/1
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;Total ram usage:        2 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:   16
  5146 ;; This function calls:
  5147 ;;		_printf
  5148 ;; This function is called by:
  5149 ;;		_executeATCommand
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text8
  5154  008C48                     __ptext8:
  5155                           	opt callstack 0
  5156  008C48                     _set_hop_table_ttl:
  5157                           	opt callstack 12
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;../app/app_src/application.c: 822:     printf("OK\r\n");
  5161                           
  5162                           ;incstack = 0
  5163  008C48  0ED7               	movlw	low STR_13
  5164  008C4A  6E55               	movwf	printf@fmt^0,c
  5165  008C4C  0EFF               	movlw	high STR_13
  5166  008C4E  6E56               	movwf	(printf@fmt+1)^0,c
  5167  008C50  EC3E  F044         	call	_printf	;wreg free
  5168                           
  5169                           ; BSR set to: 1
  5170  008C54  0012               	return		;funcret
  5171  008C56                     __end_of_set_hop_table_ttl:
  5172                           	opt callstack 0
  5173                           
  5174 ;; *************** function _print_hop_table *****************
  5175 ;; Defined at:
  5176 ;;		line 793 in file "../app/app_src/application.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5179 ;;		 -> atCommand(80), 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 3F/0
  5188 ;;		On exit  : 3F/1
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;Total ram usage:        2 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:   16
  5198 ;; This function calls:
  5199 ;;		_printf
  5200 ;; This function is called by:
  5201 ;;		_executeATCommand
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text9
  5206  008C56                     __ptext9:
  5207                           	opt callstack 0
  5208  008C56                     _print_hop_table:
  5209                           	opt callstack 12
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;../app/app_src/application.c: 794:     printf("Hop table\r\n");
  5213                           
  5214                           ; BSR set to: 1
  5215                           ;incstack = 0
  5216  008C56  0EB4               	movlw	low STR_60
  5217  008C58  6E55               	movwf	printf@fmt^0,c
  5218  008C5A  0EFE               	movlw	high STR_60
  5219  008C5C  6E56               	movwf	(printf@fmt+1)^0,c
  5220  008C5E  EC3E  F044         	call	_printf	;wreg free
  5221                           
  5222                           ; BSR set to: 1
  5223  008C62  0012               	return		;funcret
  5224  008C64                     __end_of_print_hop_table:
  5225                           	opt callstack 0
  5226                           
  5227 ;; *************** function _cmdSetTX *****************
  5228 ;; Defined at:
  5229 ;;		line 616 in file "../app/app_src/application.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5232 ;;		 -> atCommand(80), 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  CHstr           3   29[BANK0 ] unsigned char [3]
  5235 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  5236 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5237 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  5238 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5239 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5240 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5241 ;;  temp            1   28[BANK0 ] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 3F/0
  5248 ;;		On exit  : 3F/1
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;Total ram usage:       10 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:   16
  5258 ;; This function calls:
  5259 ;;		_DATAEE_WriteByte_Platform
  5260 ;;		_initRadio
  5261 ;;		_memcpy
  5262 ;;		_memset
  5263 ;;		_printf
  5264 ;;		_strstr
  5265 ;;		_strtoul
  5266 ;; This function is called by:
  5267 ;;		_executeATCommand
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text10
  5272  005822                     __ptext10:
  5273                           	opt callstack 0
  5274  005822                     _cmdSetTX:
  5275                           	opt callstack 12
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;../app/app_src/application.c: 617:  char *p1,*p2;;../app/app_src/application.c: 618:  c
      +                          har CHstr[3];;../app/app_src/application.c: 619:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 620:  p1 = strstr(atCommand,"=") + 1;
  5279                           
  5280                           ; BSR set to: 1
  5281                           ;incstack = 0
  5282  005822  0E34               	movlw	low _atCommand
  5283  005824  6E0D               	movwf	strstr@h^0,c
  5284  005826  0E02               	movlw	high _atCommand
  5285  005828  6E0E               	movwf	(strstr@h+1)^0,c
  5286  00582A  0EDF               	movlw	low (STR_18+3)
  5287  00582C  6E0F               	movwf	strstr@n^0,c
  5288  00582E  0EFF               	movlw	high (STR_18+3)
  5289  005830  6E10               	movwf	(strstr@n+1)^0,c
  5290  005832  ECCE  F02D         	call	_strstr	;wreg free
  5291  005836  0E01               	movlw	1
  5292  005838  240D               	addwf	?_strstr^0,w,c
  5293  00583A  0100               	movlb	0	; () banked
  5294  00583C  6F7A               	movwf	cmdSetTX@p1& (0+255),b
  5295  00583E  0E00               	movlw	0
  5296  005840  200E               	addwfc	(?_strstr+1)^0,w,c
  5297  005842  6F7B               	movwf	(cmdSetTX@p1+1)& (0+255),b
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;../app/app_src/application.c: 621:     if(!p1){
  5301  005844  517A               	movf	cmdSetTX@p1& (0+255),w,b
  5302  005846  117B               	iorwf	(cmdSetTX@p1+1)& (0+255),w,b
  5303  005848  A4D8               	btfss	status,2,c
  5304  00584A  D00A               	goto	l16137
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;../app/app_src/application.c: 622:         printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUN
      +                          DS);
  5308  00584C  0ECC               	movlw	low STR_4
  5309  00584E  6E55               	movwf	printf@fmt^0,c
  5310  005850  0EFE               	movlw	high STR_4
  5311  005852  6E56               	movwf	(printf@fmt+1)^0,c
  5312  005854  0E00               	movlw	0
  5313  005856  6E58               	movwf	(?_printf+3)^0,c
  5314  005858  0E0B               	movlw	11
  5315  00585A  6E57               	movwf	(?_printf+2)^0,c
  5316  00585C  EC3E  F044         	call	_printf	;wreg free
  5317  005860                     l16137:
  5318                           
  5319                           ;../app/app_src/application.c: 624:     memset(CHstr, 0 , sizeof(CHstr));
  5320  005860  0E7D               	movlw	low cmdSetTX@CHstr
  5321  005862  6E02               	movwf	memset@dest^0,c
  5322  005864  6A03               	clrf	(memset@dest+1)^0,c
  5323  005866  0E00               	movlw	0
  5324  005868  6E05               	movwf	(memset@c+1)^0,c
  5325  00586A  0E00               	movlw	0
  5326  00586C  6E04               	movwf	memset@c^0,c
  5327  00586E  0E00               	movlw	0
  5328  005870  6E07               	movwf	(memset@n+1)^0,c
  5329  005872  0E03               	movlw	3
  5330  005874  6E06               	movwf	memset@n^0,c
  5331  005876  EC32  F022         	call	_memset	;wreg free
  5332                           
  5333                           ;../app/app_src/application.c: 625:  memcpy(CHstr,p1,2);
  5334  00587A  0E7D               	movlw	low cmdSetTX@CHstr
  5335  00587C  6E08               	movwf	memcpy@d1^0,c
  5336  00587E  6A09               	clrf	(memcpy@d1+1)^0,c
  5337  005880  0060  F1E8  F00A   	movff	cmdSetTX@p1,memcpy@s1
  5338  005886  0060  F1EC  F00B   	movff	cmdSetTX@p1+1,memcpy@s1+1
  5339  00588C  0E00               	movlw	0
  5340  00588E  6E0D               	movwf	(memcpy@n+1)^0,c
  5341  005890  0E02               	movlw	2
  5342  005892  6E0C               	movwf	memcpy@n^0,c
  5343  005894  ECEA  F039         	call	_memcpy	;wreg free
  5344                           
  5345                           ;../app/app_src/application.c: 626:  temp = (uint8_t)strtoul(CHstr,&p2,10);
  5346  005898  0E7D               	movlw	low cmdSetTX@CHstr
  5347  00589A  6E34               	movwf	strtoul@s^0,c
  5348  00589C  6A35               	clrf	(strtoul@s+1)^0,c
  5349  00589E  0E78               	movlw	low cmdSetTX@p2
  5350  0058A0  6E36               	movwf	strtoul@endptr^0,c
  5351  0058A2  6A37               	clrf	(strtoul@endptr+1)^0,c
  5352  0058A4  0E00               	movlw	0
  5353  0058A6  6E39               	movwf	(strtoul@base+1)^0,c
  5354  0058A8  0E0A               	movlw	10
  5355  0058AA  6E38               	movwf	strtoul@base^0,c
  5356  0058AC  EC25  F03F         	call	_strtoul	;wreg free
  5357  0058B0  5034               	movf	?_strtoul^0,w,c
  5358  0058B2  0100               	movlb	0	; () banked
  5359  0058B4  6F7C               	movwf	cmdSetTX@temp& (0+255),b
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;../app/app_src/application.c: 627:  if((temp > 5) || (temp < 2)){
  5363  0058B6  0E06               	movlw	6
  5364  0058B8  617C               	cpfslt	cmdSetTX@temp& (0+255),b
  5365  0058BA  D003               	goto	u16290
  5366                           
  5367                           ; BSR set to: 0
  5368  0058BC  0E02               	movlw	2
  5369  0058BE  617C               	cpfslt	cmdSetTX@temp& (0+255),b
  5370  0058C0  D00B               	goto	l338
  5371  0058C2                     u16290:
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;../app/app_src/application.c: 628:   printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS);
  5375  0058C2  0ECC               	movlw	low STR_4
  5376  0058C4  6E55               	movwf	printf@fmt^0,c
  5377  0058C6  0EFE               	movlw	high STR_4
  5378  0058C8  6E56               	movwf	(printf@fmt+1)^0,c
  5379  0058CA  0E00               	movlw	0
  5380  0058CC  6E58               	movwf	(?_printf+3)^0,c
  5381  0058CE  0E0B               	movlw	11
  5382  0058D0  6E57               	movwf	(?_printf+2)^0,c
  5383  0058D2  EC3E  F044         	call	_printf	;wreg free
  5384                           
  5385                           ;../app/app_src/application.c: 629:  }
  5386  0058D6  0012               	return	
  5387  0058D8                     l338:
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;../app/app_src/application.c: 631:   TXPower = temp;
  5391  0058D8  0060  F1F0  F0EA   	movff	cmdSetTX@temp,_TXPower
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;../app/app_src/application.c: 632:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1,TXPower);
  5395  0058DE  0E00               	movlw	0
  5396  0058E0  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5397  0058E2  0E1D               	movlw	29
  5398  0058E4  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5399  0058E6  0060  F3A8  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
  5400  0058EC  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5401                           
  5402                           ;../app/app_src/application.c: 633:   initRadio();
  5403  0058F0  ECD7  F020         	call	_initRadio	;wreg free
  5404                           
  5405                           ; BSR set to: 1
  5406                           ;../app/app_src/application.c: 634:   printf("OK\r\n");
  5407  0058F4  0ED7               	movlw	low STR_13
  5408  0058F6  6E55               	movwf	printf@fmt^0,c
  5409  0058F8  0EFF               	movlw	high STR_13
  5410  0058FA  6E56               	movwf	(printf@fmt+1)^0,c
  5411  0058FC  EC3E  F044         	call	_printf	;wreg free
  5412                           
  5413                           ; BSR set to: 1
  5414  005900  0012               	return		;funcret
  5415  005902                     __end_of_cmdSetTX:
  5416                           	opt callstack 0
  5417                           
  5418 ;; *************** function _cmdSetTTL *****************
  5419 ;; Defined at:
  5420 ;;		line 514 in file "../app/app_src/application.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  5423 ;;		 -> atCommand(80), 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      void 
  5428 ;; Registers used:
  5429 ;;		None
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;Total ram usage:        2 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    7
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_executeATCommand
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text11
  5450  008D6E                     __ptext11:
  5451                           	opt callstack 0
  5452  008D6E                     _cmdSetTTL:
  5453                           	opt callstack 21
  5454                           
  5455                           ;../app/app_src/application.c: 521:  return;
  5456                           
  5457                           ; BSR set to: 1
  5458                           ;incstack = 0
  5459  008D6E  0012               	return		;funcret
  5460  008D70                     __end_of_cmdSetTTL:
  5461                           	opt callstack 0
  5462                           
  5463 ;; *************** function _cmdSetSink *****************
  5464 ;; Defined at:
  5465 ;;		line 403 in file "../app/app_src/application.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 3F/1
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:   16
  5486 ;; This function calls:
  5487 ;;		_printf
  5488 ;; This function is called by:
  5489 ;;		_executeATCommand
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text12
  5494  008C64                     __ptext12:
  5495                           	opt callstack 0
  5496  008C64                     _cmdSetSink:
  5497                           	opt callstack 12
  5498                           
  5499                           ;../app/app_src/application.c: 417:  printf("OK\r\n");
  5500                           
  5501                           ;incstack = 0
  5502  008C64  0ED7               	movlw	low STR_13
  5503  008C66  6E55               	movwf	printf@fmt^0,c
  5504  008C68  0EFF               	movlw	high STR_13
  5505  008C6A  6E56               	movwf	(printf@fmt+1)^0,c
  5506  008C6C  EC3E  F044         	call	_printf	;wreg free
  5507                           
  5508                           ; BSR set to: 1
  5509  008C70  0012               	return		;funcret
  5510  008C72                     __end_of_cmdSetSink:
  5511                           	opt callstack 0
  5512                           
  5513 ;; *************** function _cmdSetSF *****************
  5514 ;; Defined at:
  5515 ;;		line 757 in file "../app/app_src/application.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5518 ;;		 -> atCommand(80), 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  5521 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  5522 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5523 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5524 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5525 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  5526 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5527 ;;  temp            1   31[BANK0 ] char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 3F/0
  5534 ;;		On exit  : 3F/1
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:       10 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:   16
  5544 ;; This function calls:
  5545 ;;		_DATAEE_WriteByte_Platform
  5546 ;;		_initRadio
  5547 ;;		_memcpy
  5548 ;;		_printf
  5549 ;;		_strstr
  5550 ;;		_strtol
  5551 ;; This function is called by:
  5552 ;;		_executeATCommand
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text13
  5557  006744                     __ptext13:
  5558                           	opt callstack 0
  5559  006744                     _cmdSetSF:
  5560                           	opt callstack 12
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;../app/app_src/application.c: 758:  char *p1,*p2;;../app/app_src/application.c: 759:  c
      +                          har CHstr[3];;../app/app_src/application.c: 760:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 761:  p1 = strstr(atCommand,"=") + 1;
  5564                           
  5565                           ; BSR set to: 1
  5566                           ;incstack = 0
  5567  006744  0060  F1D8  F00D   	movff	cmdSetSF@atCommand,strstr@h
  5568  00674A  0060  F1DC  F00E   	movff	cmdSetSF@atCommand+1,strstr@h+1
  5569  006750  0EDF               	movlw	low (STR_18+3)
  5570  006752  6E0F               	movwf	strstr@n^0,c
  5571  006754  0EFF               	movlw	high (STR_18+3)
  5572  006756  6E10               	movwf	(strstr@n+1)^0,c
  5573  006758  ECCE  F02D         	call	_strstr	;wreg free
  5574  00675C  0E01               	movlw	1
  5575  00675E  240D               	addwf	?_strstr^0,w,c
  5576  006760  0100               	movlb	0	; () banked
  5577  006762  6F78               	movwf	cmdSetSF@p1& (0+255),b
  5578  006764  0E00               	movlw	0
  5579  006766  200E               	addwfc	(?_strstr+1)^0,w,c
  5580  006768  6F79               	movwf	(cmdSetSF@p1+1)& (0+255),b
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;../app/app_src/application.c: 762:  memcpy(CHstr,p1,2);
  5584  00676A  0E7A               	movlw	low cmdSetSF@CHstr
  5585  00676C  6E08               	movwf	memcpy@d1^0,c
  5586  00676E  6A09               	clrf	(memcpy@d1+1)^0,c
  5587  006770  0060  F1E0  F00A   	movff	cmdSetSF@p1,memcpy@s1
  5588  006776  0060  F1E4  F00B   	movff	cmdSetSF@p1+1,memcpy@s1+1
  5589  00677C  0E00               	movlw	0
  5590  00677E  6E0D               	movwf	(memcpy@n+1)^0,c
  5591  006780  0E02               	movlw	2
  5592  006782  6E0C               	movwf	memcpy@n^0,c
  5593  006784  ECEA  F039         	call	_memcpy	;wreg free
  5594                           
  5595                           ;../app/app_src/application.c: 763:  temp = (uint8_t)strtol(CHstr,&p2,16);
  5596  006788  0E7A               	movlw	low cmdSetSF@CHstr
  5597  00678A  6E34               	movwf	strtol@s^0,c
  5598  00678C  0E7D               	movlw	low cmdSetSF@p2
  5599  00678E  6E35               	movwf	strtol@endptr^0,c
  5600  006790  0E00               	movlw	0
  5601  006792  6E37               	movwf	(strtol@base+1)^0,c
  5602  006794  0E10               	movlw	16
  5603  006796  6E36               	movwf	strtol@base^0,c
  5604  006798  EC74  F040         	call	_strtol	;wreg free
  5605  00679C  5034               	movf	?_strtol^0,w,c
  5606  00679E  0100               	movlb	0	; () banked
  5607  0067A0  6F7F               	movwf	cmdSetSF@temp& (0+255),b
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;../app/app_src/application.c: 764:  if((temp > 12) || (temp < 7)){
  5611  0067A2  517F               	movf	cmdSetSF@temp& (0+255),w,b
  5612  0067A4  0A80               	xorlw	128
  5613  0067A6  0F73               	addlw	-141
  5614  0067A8  B0D8               	btfsc	status,0,c
  5615  0067AA  D005               	goto	u16360
  5616                           
  5617                           ; BSR set to: 0
  5618  0067AC  517F               	movf	cmdSetSF@temp& (0+255),w,b
  5619  0067AE  0A80               	xorlw	128
  5620  0067B0  0F79               	addlw	-135
  5621  0067B2  B0D8               	btfsc	status,0,c
  5622  0067B4  D009               	goto	l379
  5623  0067B6                     u16360:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;../app/app_src/application.c: 765:   printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  5627  0067B6  0ECC               	movlw	low STR_4
  5628  0067B8  6E55               	movwf	printf@fmt^0,c
  5629  0067BA  0EFE               	movlw	high STR_4
  5630  0067BC  6E56               	movwf	(printf@fmt+1)^0,c
  5631  0067BE  0E0D               	movlw	13
  5632  0067C0  6E57               	movwf	(?_printf+2)^0,c
  5633  0067C2  EC3E  F044         	call	_printf	;wreg free
  5634                           
  5635                           ;../app/app_src/application.c: 766:  }
  5636  0067C6  0012               	return	
  5637  0067C8                     l379:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;../app/app_src/application.c: 768:   current_sf = temp;
  5641  0067C8  0060  F1FC  F0EC   	movff	cmdSetSF@temp,_current_sf
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;../app/app_src/application.c: 769:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1,temp);
  5645  0067CE  0E00               	movlw	0
  5646  0067D0  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5647  0067D2  0E21               	movlw	33
  5648  0067D4  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5649  0067D6  0060  F1FC  F008   	movff	cmdSetSF@temp,DATAEE_WriteByte_Platform@data
  5650  0067DC  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5651                           
  5652                           ;../app/app_src/application.c: 770:   initRadio();
  5653  0067E0  ECD7  F020         	call	_initRadio	;wreg free
  5654                           
  5655                           ; BSR set to: 1
  5656                           ;../app/app_src/application.c: 771:   printf("OK\r\n");
  5657  0067E4  0ED7               	movlw	low STR_13
  5658  0067E6  6E55               	movwf	printf@fmt^0,c
  5659  0067E8  0EFF               	movlw	high STR_13
  5660  0067EA  6E56               	movwf	(printf@fmt+1)^0,c
  5661  0067EC  EC3E  F044         	call	_printf	;wreg free
  5662                           
  5663                           ; BSR set to: 1
  5664  0067F0  0012               	return		;funcret
  5665  0067F2                     __end_of_cmdSetSF:
  5666                           	opt callstack 0
  5667                           
  5668 ;; *************** function _cmdSetRFCH *****************
  5669 ;; Defined at:
  5670 ;;		line 580 in file "../app/app_src/application.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5673 ;;		 -> atCommand(80), 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  5676 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  5677 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  5678 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5679 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5680 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  5681 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5682 ;;  temp            1   31[BANK0 ] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 3F/0
  5689 ;;		On exit  : 3F/1
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;Total ram usage:       10 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:   16
  5699 ;; This function calls:
  5700 ;;		_DATAEE_WriteByte_Platform
  5701 ;;		_initRadio
  5702 ;;		_memcpy
  5703 ;;		_printf
  5704 ;;		_strstr
  5705 ;;		_strtoul
  5706 ;; This function is called by:
  5707 ;;		_executeATCommand
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text14
  5712  0069F2                     __ptext14:
  5713                           	opt callstack 0
  5714  0069F2                     _cmdSetRFCH:
  5715                           	opt callstack 12
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;../app/app_src/application.c: 581:  char *p1,*p2;;../app/app_src/application.c: 582:  c
      +                          har CHstr[3];;../app/app_src/application.c: 583:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 584:  p1 = strstr(atCommand,"=") + 1;
  5719                           
  5720                           ; BSR set to: 1
  5721                           ;incstack = 0
  5722  0069F2  0E34               	movlw	low _atCommand
  5723  0069F4  6E0D               	movwf	strstr@h^0,c
  5724  0069F6  0E02               	movlw	high _atCommand
  5725  0069F8  6E0E               	movwf	(strstr@h+1)^0,c
  5726  0069FA  0EDF               	movlw	low (STR_18+3)
  5727  0069FC  6E0F               	movwf	strstr@n^0,c
  5728  0069FE  0EFF               	movlw	high (STR_18+3)
  5729  006A00  6E10               	movwf	(strstr@n+1)^0,c
  5730  006A02  ECCE  F02D         	call	_strstr	;wreg free
  5731  006A06  0E01               	movlw	1
  5732  006A08  240D               	addwf	?_strstr^0,w,c
  5733  006A0A  0100               	movlb	0	; () banked
  5734  006A0C  6F78               	movwf	cmdSetRFCH@p1& (0+255),b
  5735  006A0E  0E00               	movlw	0
  5736  006A10  200E               	addwfc	(?_strstr+1)^0,w,c
  5737  006A12  6F79               	movwf	(cmdSetRFCH@p1+1)& (0+255),b
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;../app/app_src/application.c: 585:  memcpy(CHstr,p1,2);
  5741  006A14  0E7A               	movlw	low cmdSetRFCH@CHstr
  5742  006A16  6E08               	movwf	memcpy@d1^0,c
  5743  006A18  6A09               	clrf	(memcpy@d1+1)^0,c
  5744  006A1A  0060  F1E0  F00A   	movff	cmdSetRFCH@p1,memcpy@s1
  5745  006A20  0060  F1E4  F00B   	movff	cmdSetRFCH@p1+1,memcpy@s1+1
  5746  006A26  0E00               	movlw	0
  5747  006A28  6E0D               	movwf	(memcpy@n+1)^0,c
  5748  006A2A  0E02               	movlw	2
  5749  006A2C  6E0C               	movwf	memcpy@n^0,c
  5750  006A2E  ECEA  F039         	call	_memcpy	;wreg free
  5751                           
  5752                           ;../app/app_src/application.c: 586:  temp = (uint8_t)strtoul(CHstr,&p2,16) - 1;
  5753  006A32  0E7A               	movlw	low cmdSetRFCH@CHstr
  5754  006A34  6E34               	movwf	strtoul@s^0,c
  5755  006A36  6A35               	clrf	(strtoul@s+1)^0,c
  5756  006A38  0E7D               	movlw	low cmdSetRFCH@p2
  5757  006A3A  6E36               	movwf	strtoul@endptr^0,c
  5758  006A3C  6A37               	clrf	(strtoul@endptr+1)^0,c
  5759  006A3E  0E00               	movlw	0
  5760  006A40  6E39               	movwf	(strtoul@base+1)^0,c
  5761  006A42  0E10               	movlw	16
  5762  006A44  6E38               	movwf	strtoul@base^0,c
  5763  006A46  EC25  F03F         	call	_strtoul	;wreg free
  5764  006A4A  0434               	decf	?_strtoul^0,w,c
  5765  006A4C  0100               	movlb	0	; () banked
  5766  006A4E  6F7F               	movwf	cmdSetRFCH@temp& (0+255),b
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;../app/app_src/application.c: 587:  if(temp > sizeof(fhssList)){
  5770  006A50  0EFC               	movlw	252
  5771  006A52  657F               	cpfsgt	cmdSetRFCH@temp& (0+255),b
  5772  006A54  D009               	goto	l329
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;../app/app_src/application.c: 588:   printf("NOT OK:%u\r\n",CHOUTOFBOUNDS);
  5776  006A56  0ECC               	movlw	low STR_4
  5777  006A58  6E55               	movwf	printf@fmt^0,c
  5778  006A5A  0EFE               	movlw	high STR_4
  5779  006A5C  6E56               	movwf	(printf@fmt+1)^0,c
  5780  006A5E  0E0A               	movlw	10
  5781  006A60  6E57               	movwf	(?_printf+2)^0,c
  5782  006A62  EC3E  F044         	call	_printf	;wreg free
  5783                           
  5784                           ;../app/app_src/application.c: 589:  }
  5785  006A66  0012               	return	
  5786  006A68                     l329:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;../app/app_src/application.c: 591:   channel = temp;
  5790  006A68  0060  F1FC  F0EB   	movff	cmdSetRFCH@temp,_channel
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;../app/app_src/application.c: 592:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1,channel);
  5794  006A6E  0E00               	movlw	0
  5795  006A70  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5796  006A72  0E1C               	movlw	28
  5797  006A74  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5798  006A76  0060  F3AC  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
  5799  006A7C  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  5800                           
  5801                           ;../app/app_src/application.c: 593:   initRadio();
  5802  006A80  ECD7  F020         	call	_initRadio	;wreg free
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;../app/app_src/application.c: 594:         printf("OK\r\n");
  5806  006A84  0ED7               	movlw	low STR_13
  5807  006A86  6E55               	movwf	printf@fmt^0,c
  5808  006A88  0EFF               	movlw	high STR_13
  5809  006A8A  6E56               	movwf	(printf@fmt+1)^0,c
  5810  006A8C  EC3E  F044         	call	_printf	;wreg free
  5811                           
  5812                           ; BSR set to: 1
  5813  006A90  0012               	return		;funcret
  5814  006A92                     __end_of_cmdSetRFCH:
  5815                           	opt callstack 0
  5816                           
  5817 ;; *************** function _cmdSetParity *****************
  5818 ;; Defined at:
  5819 ;;		line 692 in file "../app/app_src/application.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  5822 ;;		 -> atCommand(80), 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 3F/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5834 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;Total ram usage:        2 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:   16
  5841 ;; This function calls:
  5842 ;;		_printf
  5843 ;;		_set_parity
  5844 ;;		_strstr
  5845 ;; This function is called by:
  5846 ;;		_executeATCommand
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text15
  5851  006EA6                     __ptext15:
  5852                           	opt callstack 0
  5853  006EA6                     _cmdSetParity:
  5854                           	opt callstack 12
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;../app/app_src/application.c: 693:     if(strstr(atCommand,"=ODD"))
  5858                           
  5859                           ; BSR set to: 1
  5860                           ;incstack = 0
  5861  006EA6  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5862  006EAC  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5863  006EB2  0EEB               	movlw	low STR_46
  5864  006EB4  6E0F               	movwf	strstr@n^0,c
  5865  006EB6  0EFF               	movlw	high STR_46
  5866  006EB8  6E10               	movwf	(strstr@n+1)^0,c
  5867  006EBA  ECCE  F02D         	call	_strstr	;wreg free
  5868  006EBE  500D               	movf	?_strstr^0,w,c
  5869  006EC0  100E               	iorwf	(?_strstr+1)^0,w,c
  5870  006EC2  B4D8               	btfsc	status,2,c
  5871  006EC4  D004               	goto	l16185
  5872                           
  5873                           ;../app/app_src/application.c: 694:     {;../app/app_src/application.c: 695:         set
      +                          _parity(UART_9BIT_ODD_PARITY);
  5874  006EC6  0E02               	movlw	2
  5875  006EC8  EC28  F03C         	call	_set_parity
  5876                           
  5877                           ;../app/app_src/application.c: 696:     }
  5878  006ECC  0012               	return	
  5879  006ECE                     l16185:
  5880  006ECE  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5881  006ED4  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5882  006EDA  0EC0               	movlw	low STR_48
  5883  006EDC  6E0F               	movwf	strstr@n^0,c
  5884  006EDE  0EFF               	movlw	high STR_48
  5885  006EE0  6E10               	movwf	(strstr@n+1)^0,c
  5886  006EE2  ECCE  F02D         	call	_strstr	;wreg free
  5887  006EE6  500D               	movf	?_strstr^0,w,c
  5888  006EE8  100E               	iorwf	(?_strstr+1)^0,w,c
  5889  006EEA  B4D8               	btfsc	status,2,c
  5890  006EEC  D004               	goto	l16189
  5891                           
  5892                           ;../app/app_src/application.c: 698:     {;../app/app_src/application.c: 699:         set
      +                          _parity(UART_8BIT_NO_PARITY);
  5893  006EEE  0E00               	movlw	0
  5894  006EF0  EC28  F03C         	call	_set_parity
  5895                           
  5896                           ;../app/app_src/application.c: 700:     }
  5897  006EF4  0012               	return	
  5898  006EF6                     l16189:
  5899  006EF6  0060  F1D8  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5900  006EFC  0060  F1DC  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5901  006F02  0EC6               	movlw	low STR_50
  5902  006F04  6E0F               	movwf	strstr@n^0,c
  5903  006F06  0EFF               	movlw	high STR_50
  5904  006F08  6E10               	movwf	(strstr@n+1)^0,c
  5905  006F0A  ECCE  F02D         	call	_strstr	;wreg free
  5906  006F0E  500D               	movf	?_strstr^0,w,c
  5907  006F10  100E               	iorwf	(?_strstr+1)^0,w,c
  5908  006F12  B4D8               	btfsc	status,2,c
  5909  006F14  D004               	goto	l16193
  5910                           
  5911                           ;../app/app_src/application.c: 702:     {;../app/app_src/application.c: 703:         set
      +                          _parity(UART_9BIT_EVEN_PARITY);
  5912  006F16  0E03               	movlw	3
  5913  006F18  EC28  F03C         	call	_set_parity
  5914                           
  5915                           ;../app/app_src/application.c: 704:     }
  5916  006F1C  0012               	return	
  5917  006F1E                     l16193:
  5918                           
  5919                           ;../app/app_src/application.c: 706:     {;../app/app_src/application.c: 707:         pri
      +                          ntf("NOT OK:%u\r\n",ILLEGALPARAMETER);
  5920  006F1E  0ECC               	movlw	low STR_4
  5921  006F20  6E55               	movwf	printf@fmt^0,c
  5922  006F22  0EFE               	movlw	high STR_4
  5923  006F24  6E56               	movwf	(printf@fmt+1)^0,c
  5924  006F26  0E0D               	movlw	13
  5925  006F28  6E57               	movwf	(?_printf+2)^0,c
  5926  006F2A  EC3E  F044         	call	_printf	;wreg free
  5927  006F2E  0012               	return		;funcret
  5928  006F30                     __end_of_cmdSetParity:
  5929                           	opt callstack 0
  5930                           
  5931 ;; *************** function _cmdSetNaddr *****************
  5932 ;; Defined at:
  5933 ;;		line 343 in file "../app/app_src/application.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  5936 ;;		 -> atCommand(80), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  5939 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  5940 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  5941 ;;  tempaddr        1   28[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      void 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 3F/0
  5948 ;;		On exit  : 3F/1
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;Total ram usage:        7 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:   16
  5958 ;; This function calls:
  5959 ;;		_DATAEE_WriteByte_Platform
  5960 ;;		_initRadio
  5961 ;;		_printf
  5962 ;;		_setSyncWord
  5963 ;;		_strstr
  5964 ;;		_strtoul
  5965 ;; This function is called by:
  5966 ;;		_executeATCommand
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text16
  5971  007358                     __ptext16:
  5972                           	opt callstack 0
  5973  007358                     _cmdSetNaddr:
  5974                           	opt callstack 12
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;../app/app_src/application.c: 344:  uint8_t tempaddr;;../app/app_src/application.c: 345
      +                          :  char *p1,*p2;;../app/app_src/application.c: 346:  p1 = strstr(atCommand,"=") + 1;
  5978                           
  5979                           ;incstack = 0
  5980  007358  0E34               	movlw	low _atCommand
  5981  00735A  6E0D               	movwf	strstr@h^0,c
  5982  00735C  0E02               	movlw	high _atCommand
  5983  00735E  6E0E               	movwf	(strstr@h+1)^0,c
  5984  007360  0EDF               	movlw	low (STR_18+3)
  5985  007362  6E0F               	movwf	strstr@n^0,c
  5986  007364  0EFF               	movlw	high (STR_18+3)
  5987  007366  6E10               	movwf	(strstr@n+1)^0,c
  5988  007368  ECCE  F02D         	call	_strstr	;wreg free
  5989  00736C  0E01               	movlw	1
  5990  00736E  240D               	addwf	?_strstr^0,w,c
  5991  007370  0100               	movlb	0	; () banked
  5992  007372  6F7A               	movwf	cmdSetNaddr@p1& (0+255),b
  5993  007374  0E00               	movlw	0
  5994  007376  200E               	addwfc	(?_strstr+1)^0,w,c
  5995  007378  6F7B               	movwf	(cmdSetNaddr@p1+1)& (0+255),b
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;../app/app_src/application.c: 348:  tempaddr = strtoul(p1,p2,16);
  5999  00737A  0060  F1E8  F034   	movff	cmdSetNaddr@p1,strtoul@s
  6000  007380  0060  F1EC  F035   	movff	cmdSetNaddr@p1+1,strtoul@s+1
  6001  007386  0060  F1E0  F036   	movff	cmdSetNaddr@p2,strtoul@endptr
  6002  00738C  0060  F1E4  F037   	movff	cmdSetNaddr@p2+1,strtoul@endptr+1
  6003  007392  0E00               	movlw	0
  6004  007394  6E39               	movwf	(strtoul@base+1)^0,c
  6005  007396  0E10               	movlw	16
  6006  007398  6E38               	movwf	strtoul@base^0,c
  6007  00739A  EC25  F03F         	call	_strtoul	;wreg free
  6008  00739E  5034               	movf	?_strtoul^0,w,c
  6009  0073A0  0100               	movlb	0	; () banked
  6010  0073A2  6F7C               	movwf	cmdSetNaddr@tempaddr& (0+255),b
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;../app/app_src/application.c: 349:  currentNetID = tempaddr;
  6014  0073A4  0060  F1F0  F0FA   	movff	cmdSetNaddr@tempaddr,_currentNetID
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;../app/app_src/application.c: 350:  setSyncWord(currentNetID);
  6018  0073AA  51FA               	movf	_currentNetID& (0+255),w,b
  6019  0073AC  EC05  F046         	call	_setSyncWord
  6020                           
  6021                           ;../app/app_src/application.c: 352:  DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,current
      +                          NetID);
  6022  0073B0  0E00               	movlw	0
  6023  0073B2  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6024  0073B4  0E19               	movlw	25
  6025  0073B6  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6026  0073B8  0060  F3E8  F008   	movff	_currentNetID,DATAEE_WriteByte_Platform@data
  6027  0073BE  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  6028                           
  6029                           ;../app/app_src/application.c: 353:     initRadio();
  6030  0073C2  ECD7  F020         	call	_initRadio	;wreg free
  6031                           
  6032                           ; BSR set to: 1
  6033                           ;../app/app_src/application.c: 354:  printf("OK\r\n");
  6034  0073C6  0ED7               	movlw	low STR_13
  6035  0073C8  6E55               	movwf	printf@fmt^0,c
  6036  0073CA  0EFF               	movlw	high STR_13
  6037  0073CC  6E56               	movwf	(printf@fmt+1)^0,c
  6038  0073CE  EC3E  F044         	call	_printf	;wreg free
  6039                           
  6040                           ; BSR set to: 1
  6041  0073D2  0012               	return		;funcret
  6042  0073D4                     __end_of_cmdSetNaddr:
  6043                           	opt callstack 0
  6044                           
  6045 ;; *************** function _setSyncWord *****************
  6046 ;; Defined at:
  6047 ;;		line 329 in file "../phy/sx1216/phy_src/phy.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  sw              1    wreg     unsigned char 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  sw              1   16[COMRAM] unsigned char 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      void 
  6054 ;; Registers used:
  6055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 3F/0
  6058 ;;		On exit  : 3F/3D
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;Total ram usage:        1 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:   11
  6068 ;; This function calls:
  6069 ;;		_SX1276Write
  6070 ;; This function is called by:
  6071 ;;		_cmdSetNaddr
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text17
  6076  008C0A                     __ptext17:
  6077                           	opt callstack 0
  6078  008C0A                     _setSyncWord:
  6079                           	opt callstack 16
  6080                           
  6081                           ; BSR set to: 1
  6082                           ;incstack = 0
  6083                           ;setSyncWord@sw stored from wreg
  6084  008C0A  6E11               	movwf	setSyncWord@sw^0,c
  6085                           
  6086                           ;../phy/sx1216/phy_src/phy.c: 329: void setSyncWord(uint8_t sw);../phy/sx1216/phy_src/ph
      +                          y.c: 330: {;../phy/sx1216/phy_src/phy.c: 331:   SX1276Write(0x39, sw);
  6087  008C0C  0060  F044  F00F   	movff	setSyncWord@sw,SX1276Write@data
  6088  008C12  0E39               	movlw	57
  6089  008C14  ECFC  F045         	call	_SX1276Write
  6090                           
  6091                           ; BSR set to: 61
  6092  008C18  0012               	return		;funcret
  6093  008C1A                     __end_of_setSyncWord:
  6094                           	opt callstack 0
  6095                           
  6096 ;; *************** function _cmdSetCADRSSI *****************
  6097 ;; Defined at:
  6098 ;;		line 656 in file "../app/app_src/application.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  atCommand       2   22[BANK0 ] PTR unsigned char 
  6101 ;;		 -> atCommand(80), 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  CHstr           3   26[BANK0 ] unsigned char [3]
  6104 ;;  p2              2   29[BANK0 ] PTR unsigned char 
  6105 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  6106 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6107 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6108 ;;  p1              2   24[BANK0 ] PTR unsigned char 
  6109 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6110 ;;  temp            1   31[BANK0 ] char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6115 ;; Tracked objects:
  6116 ;;		On entry : 3F/0
  6117 ;;		On exit  : 3F/1
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;Total ram usage:       10 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:   16
  6127 ;; This function calls:
  6128 ;;		_DATAEE_WriteByte_Platform
  6129 ;;		_initRadio
  6130 ;;		_memcpy
  6131 ;;		_printf
  6132 ;;		_strstr
  6133 ;;		_strtol
  6134 ;; This function is called by:
  6135 ;;		_executeATCommand
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text18
  6140  0067F2                     __ptext18:
  6141                           	opt callstack 0
  6142  0067F2                     _cmdSetCADRSSI:
  6143                           	opt callstack 12
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;../app/app_src/application.c: 657:  char *p1,*p2;;../app/app_src/application.c: 658:  c
      +                          har CHstr[3];;../app/app_src/application.c: 659:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 660:  p1 = strstr(atCommand,"=") + 1;
  6147                           
  6148                           ; BSR set to: 61
  6149                           ;incstack = 0
  6150  0067F2  0060  F1D8  F00D   	movff	cmdSetCADRSSI@atCommand,strstr@h
  6151  0067F8  0060  F1DC  F00E   	movff	cmdSetCADRSSI@atCommand+1,strstr@h+1
  6152  0067FE  0EDF               	movlw	low (STR_18+3)
  6153  006800  6E0F               	movwf	strstr@n^0,c
  6154  006802  0EFF               	movlw	high (STR_18+3)
  6155  006804  6E10               	movwf	(strstr@n+1)^0,c
  6156  006806  ECCE  F02D         	call	_strstr	;wreg free
  6157  00680A  0E01               	movlw	1
  6158  00680C  240D               	addwf	?_strstr^0,w,c
  6159  00680E  0100               	movlb	0	; () banked
  6160  006810  6F78               	movwf	cmdSetCADRSSI@p1& (0+255),b
  6161  006812  0E00               	movlw	0
  6162  006814  200E               	addwfc	(?_strstr+1)^0,w,c
  6163  006816  6F79               	movwf	(cmdSetCADRSSI@p1+1)& (0+255),b
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;../app/app_src/application.c: 661:  memcpy(CHstr,p1,3);
  6167  006818  0E7A               	movlw	low cmdSetCADRSSI@CHstr
  6168  00681A  6E08               	movwf	memcpy@d1^0,c
  6169  00681C  6A09               	clrf	(memcpy@d1+1)^0,c
  6170  00681E  0060  F1E0  F00A   	movff	cmdSetCADRSSI@p1,memcpy@s1
  6171  006824  0060  F1E4  F00B   	movff	cmdSetCADRSSI@p1+1,memcpy@s1+1
  6172  00682A  0E00               	movlw	0
  6173  00682C  6E0D               	movwf	(memcpy@n+1)^0,c
  6174  00682E  0E03               	movlw	3
  6175  006830  6E0C               	movwf	memcpy@n^0,c
  6176  006832  ECEA  F039         	call	_memcpy	;wreg free
  6177                           
  6178                           ;../app/app_src/application.c: 662:  temp = (uint8_t)strtol(CHstr,&p2,10);
  6179  006836  0E7A               	movlw	low cmdSetCADRSSI@CHstr
  6180  006838  6E34               	movwf	strtol@s^0,c
  6181  00683A  0E7D               	movlw	low cmdSetCADRSSI@p2
  6182  00683C  6E35               	movwf	strtol@endptr^0,c
  6183  00683E  0E00               	movlw	0
  6184  006840  6E37               	movwf	(strtol@base+1)^0,c
  6185  006842  0E0A               	movlw	10
  6186  006844  6E36               	movwf	strtol@base^0,c
  6187  006846  EC74  F040         	call	_strtol	;wreg free
  6188  00684A  5034               	movf	?_strtol^0,w,c
  6189  00684C  0100               	movlb	0	; () banked
  6190  00684E  6F7F               	movwf	cmdSetCADRSSI@temp& (0+255),b
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;../app/app_src/application.c: 663:  if((temp > 0) || (temp < -120)){
  6194  006850  517F               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6195  006852  0A80               	xorlw	128
  6196  006854  0F7F               	addlw	-129
  6197  006856  B0D8               	btfsc	status,0,c
  6198  006858  D005               	goto	u16310
  6199                           
  6200                           ; BSR set to: 0
  6201  00685A  517F               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6202  00685C  0A80               	xorlw	128
  6203  00685E  0FF8               	addlw	248
  6204  006860  B0D8               	btfsc	status,0,c
  6205  006862  D009               	goto	l348
  6206  006864                     u16310:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;../app/app_src/application.c: 664:   printf("NOT OK:%u\r\n",TXOUTOFBOUNDS);
  6210  006864  0ECC               	movlw	low STR_4
  6211  006866  6E55               	movwf	printf@fmt^0,c
  6212  006868  0EFE               	movlw	high STR_4
  6213  00686A  6E56               	movwf	(printf@fmt+1)^0,c
  6214  00686C  0E0B               	movlw	11
  6215  00686E  6E57               	movwf	(?_printf+2)^0,c
  6216  006870  EC3E  F044         	call	_printf	;wreg free
  6217                           
  6218                           ;../app/app_src/application.c: 665:  }
  6219  006874  0012               	return	
  6220  006876                     l348:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;../app/app_src/application.c: 667:   RSSITarget = temp;
  6224  006876  0060  F1FC  F0F9   	movff	cmdSetCADRSSI@temp,_RSSITarget
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;../app/app_src/application.c: 668:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1,RSSITarget);
  6228  00687C  0E00               	movlw	0
  6229  00687E  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6230  006880  0E1E               	movlw	30
  6231  006882  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6232  006884  0060  F3E4  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  6233  00688A  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  6234                           
  6235                           ;../app/app_src/application.c: 669:   initRadio();
  6236  00688E  ECD7  F020         	call	_initRadio	;wreg free
  6237                           
  6238                           ; BSR set to: 1
  6239                           ;../app/app_src/application.c: 670:   printf("OK\r\n");
  6240  006892  0ED7               	movlw	low STR_13
  6241  006894  6E55               	movwf	printf@fmt^0,c
  6242  006896  0EFF               	movlw	high STR_13
  6243  006898  6E56               	movwf	(printf@fmt+1)^0,c
  6244  00689A  EC3E  F044         	call	_printf	;wreg free
  6245                           
  6246                           ; BSR set to: 1
  6247  00689E  0012               	return		;funcret
  6248  0068A0                     __end_of_cmdSetCADRSSI:
  6249                           	opt callstack 0
  6250                           
  6251 ;; *************** function _strtol *****************
  6252 ;; Defined at:
  6253 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtol.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  s               1   51[COMRAM] PTR const unsigned char 
  6256 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), 
  6257 ;;  endptr          1   52[COMRAM] PTR PTR unsigned char 
  6258 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), 
  6259 ;;  base            2   53[COMRAM] int 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  4   51[COMRAM] long 
  6264 ;; Registers used:
  6265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;Total ram usage:        4 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:   10
  6278 ;; This function calls:
  6279 ;;		___strtoxl
  6280 ;; This function is called by:
  6281 ;;		_cmdSetCADRSSI
  6282 ;;		_cmdSetSF
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text19
  6287  0080E8                     __ptext19:
  6288                           	opt callstack 0
  6289  0080E8                     _strtol:
  6290                           	opt callstack 17
  6291                           
  6292                           ; BSR set to: 1
  6293                           ;incstack = 0
  6294  0080E8  0060  F0D0  F010   	movff	strtol@s,___strtoxl@s
  6295  0080EE  6A11               	clrf	(___strtoxl@s+1)^0,c
  6296  0080F0  0060  F0D4  F012   	movff	strtol@endptr,___strtoxl@endptr
  6297  0080F6  6A13               	clrf	(___strtoxl@endptr+1)^0,c
  6298  0080F8  0060  F0D8  F014   	movff	strtol@base,___strtoxl@base
  6299  0080FE  0060  F0DC  F015   	movff	strtol@base+1,___strtoxl@base+1
  6300  008104  0E01               	movlw	1
  6301  008106  6E16               	movwf	___strtoxl@is_signed^0,c
  6302  008108  EC98  F005         	call	___strtoxl	;wreg free
  6303  00810C  0060  F040  F034   	movff	?___strtoxl,?_strtol
  6304  008112  0060  F044  F035   	movff	?___strtoxl+1,?_strtol+1
  6305  008118  0060  F048  F036   	movff	?___strtoxl+2,?_strtol+2
  6306  00811E  0060  F04C  F037   	movff	?___strtoxl+3,?_strtol+3
  6307  008124  0012               	return		;funcret
  6308  008126                     __end_of_strtol:
  6309                           	opt callstack 0
  6310                           
  6311 ;; *************** function _cmdSetBaud *****************
  6312 ;; Defined at:
  6313 ;;		line 731 in file "../app/app_src/application.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  atCommand       2   57[COMRAM] PTR unsigned char 
  6316 ;;		 -> atCommand(80), 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  ptr             2   60[COMRAM] PTR unsigned char 
  6319 ;;		 -> atCommand(80), NULL(0), 
  6320 ;;  tempbaud        1   59[COMRAM] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;Total ram usage:        5 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:   11
  6337 ;; This function calls:
  6338 ;;		_strtok
  6339 ;;		_strtoul
  6340 ;; This function is called by:
  6341 ;;		_executeATCommand
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text20
  6346  0074B4                     __ptext20:
  6347                           	opt callstack 0
  6348  0074B4                     _cmdSetBaud:
  6349                           	opt callstack 17
  6350                           
  6351                           ;../app/app_src/application.c: 731: static void cmdSetBaud(char* atCommand);../app/app_s
      +                          rc/application.c: 732: {;../app/app_src/application.c: 733:     uint8_t tempbaud;;../app
      +                          /app_src/application.c: 734:     char *ptr;;../app/app_src/application.c: 735:     ptr =
      +                           strtok(atCommand,"=");
  6352                           
  6353                           ;incstack = 0
  6354  0074B4  0060  F0E8  F00F   	movff	cmdSetBaud@atCommand,strtok@s
  6355  0074BA  0060  F0EC  F010   	movff	cmdSetBaud@atCommand+1,strtok@s+1
  6356  0074C0  0EDF               	movlw	low (STR_18+3)
  6357  0074C2  6E11               	movwf	strtok@sep^0,c
  6358  0074C4  0EFF               	movlw	high (STR_18+3)
  6359  0074C6  6E12               	movwf	(strtok@sep+1)^0,c
  6360  0074C8  EC60  F02D         	call	_strtok	;wreg free
  6361  0074CC  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6362  0074D2  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6363                           
  6364                           ;../app/app_src/application.c: 736:     ptr = strtok(((void*)0),"\r");
  6365  0074D8  0E00               	movlw	0
  6366  0074DA  6E0F               	movwf	strtok@s^0,c
  6367  0074DC  0E00               	movlw	0
  6368  0074DE  6E10               	movwf	(strtok@s+1)^0,c
  6369  0074E0  0EFD               	movlw	low STR_55
  6370  0074E2  6E11               	movwf	strtok@sep^0,c
  6371  0074E4  0EFF               	movlw	high STR_55
  6372  0074E6  6E12               	movwf	(strtok@sep+1)^0,c
  6373  0074E8  EC60  F02D         	call	_strtok	;wreg free
  6374  0074EC  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6375  0074F2  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6376                           
  6377                           ;../app/app_src/application.c: 737:     tempbaud = (uint8_t)strtoul(ptr,((void*)0),10);
  6378  0074F8  0060  F0F4  F034   	movff	cmdSetBaud@ptr,strtoul@s
  6379  0074FE  0060  F0F8  F035   	movff	cmdSetBaud@ptr+1,strtoul@s+1
  6380  007504  0E00               	movlw	0
  6381  007506  6E36               	movwf	strtoul@endptr^0,c
  6382  007508  0E00               	movlw	0
  6383  00750A  6E37               	movwf	(strtoul@endptr+1)^0,c
  6384  00750C  0E00               	movlw	0
  6385  00750E  6E39               	movwf	(strtoul@base+1)^0,c
  6386  007510  0E0A               	movlw	10
  6387  007512  6E38               	movwf	strtoul@base^0,c
  6388  007514  EC25  F03F         	call	_strtoul	;wreg free
  6389  007518  5034               	movf	?_strtoul^0,w,c
  6390  00751A  6E3C               	movwf	cmdSetBaud@tempbaud^0,c
  6391                           
  6392                           ;../app/app_src/application.c: 738:     tempbaud++;
  6393  00751C  2A3C               	incf	cmdSetBaud@tempbaud^0,f,c
  6394  00751E  0012               	return		;funcret
  6395  007520                     __end_of_cmdSetBaud:
  6396                           	opt callstack 0
  6397                           
  6398 ;; *************** function _strtok *****************
  6399 ;; Defined at:
  6400 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtok.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  s               2   14[COMRAM] PTR unsigned char 
  6403 ;;		 -> atCommand(80), NULL(0), 
  6404 ;;  sep             2   16[COMRAM] PTR const unsigned char 
  6405 ;;		 -> STR_55(2), STR_54(2), 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;		None
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  2   14[COMRAM] PTR unsigned char 
  6410 ;; Registers used:
  6411 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;Total ram usage:        4 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    9
  6424 ;; This function calls:
  6425 ;;		_strcspn
  6426 ;;		_strspn
  6427 ;; This function is called by:
  6428 ;;		_cmdSetBaud
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text21
  6433  005AC0                     __ptext21:
  6434                           	opt callstack 0
  6435  005AC0                     _strtok:
  6436                           	opt callstack 18
  6437                           
  6438                           ;incstack = 0
  6439  005AC0  500F               	movf	strtok@s^0,w,c
  6440  005AC2  1010               	iorwf	(strtok@s+1)^0,w,c
  6441  005AC4  A4D8               	btfss	status,2,c
  6442  005AC6  D00F               	goto	l11507
  6443  005AC8  0060  F55C  F00F   	movff	strtok@p,strtok@s
  6444  005ACE  0060  F560  F010   	movff	strtok@p+1,strtok@s+1
  6445  005AD4  500F               	movf	strtok@s^0,w,c
  6446  005AD6  1010               	iorwf	(strtok@s+1)^0,w,c
  6447  005AD8  A4D8               	btfss	status,2,c
  6448  005ADA  D005               	goto	l11507
  6449  005ADC  0E00               	movlw	0
  6450  005ADE  6E0F               	movwf	?_strtok^0,c
  6451  005AE0  0E00               	movlw	0
  6452  005AE2  6E10               	movwf	(?_strtok+1)^0,c
  6453  005AE4  0012               	return	
  6454  005AE6                     l11507:
  6455  005AE6  0060  F03C  F008   	movff	strtok@s,strspn@s
  6456  005AEC  0060  F040  F009   	movff	strtok@s+1,strspn@s+1
  6457  005AF2  0060  F044  F00A   	movff	strtok@sep,strspn@c
  6458  005AF8  0060  F048  F00B   	movff	strtok@sep+1,strspn@c+1
  6459  005AFE  ECC8  F03B         	call	_strspn	;wreg free
  6460  005B02  5008               	movf	?_strspn^0,w,c
  6461  005B04  260F               	addwf	strtok@s^0,f,c
  6462  005B06  5009               	movf	(?_strspn+1)^0,w,c
  6463  005B08  2210               	addwfc	(strtok@s+1)^0,f,c
  6464  005B0A  0060  F03F  FFD9   	movff	strtok@s,fsr2l
  6465  005B10  0060  F043  FFDA   	movff	strtok@s+1,fsr2h
  6466  005B16  50DF               	movf	indf2,w,c
  6467  005B18  A4D8               	btfss	status,2,c
  6468  005B1A  D00C               	goto	l11515
  6469  005B1C  0E00               	movlw	0
  6470  005B1E  0101               	movlb	1	; () banked
  6471  005B20  6F57               	movwf	strtok@p& (0+255),b
  6472  005B22  0E00               	movlw	0
  6473  005B24  6F58               	movwf	(strtok@p+1)& (0+255),b
  6474  005B26  0060  F55C  F00F   	movff	strtok@p,?_strtok
  6475  005B2C  0060  F560  F010   	movff	strtok@p+1,?_strtok+1
  6476  005B32  0012               	return	
  6477  005B34                     l11515:
  6478  005B34  0060  F03C  F008   	movff	strtok@s,strcspn@s
  6479  005B3A  0060  F040  F009   	movff	strtok@s+1,strcspn@s+1
  6480  005B40  0060  F044  F00A   	movff	strtok@sep,strcspn@c
  6481  005B46  0060  F048  F00B   	movff	strtok@sep+1,strcspn@c+1
  6482  005B4C  ECF8  F03B         	call	_strcspn	;wreg free
  6483  005B50  5008               	movf	?_strcspn^0,w,c
  6484  005B52  240F               	addwf	strtok@s^0,w,c
  6485  005B54  0101               	movlb	1	; () banked
  6486  005B56  6F57               	movwf	strtok@p& (0+255),b
  6487  005B58  5009               	movf	(?_strcspn+1)^0,w,c
  6488  005B5A  2010               	addwfc	(strtok@s+1)^0,w,c
  6489  005B5C  6F58               	movwf	(strtok@p+1)& (0+255),b
  6490                           
  6491                           ; BSR set to: 1
  6492  005B5E  0060  F55F  FFD9   	movff	strtok@p,fsr2l
  6493  005B64  0060  F563  FFDA   	movff	strtok@p+1,fsr2h
  6494  005B6A  50DF               	movf	indf2,w,c
  6495  005B6C  B4D8               	btfsc	status,2,c
  6496  005B6E  D00B               	goto	l11523
  6497                           
  6498                           ; BSR set to: 1
  6499  005B70  0060  F55F  FFD9   	movff	strtok@p,fsr2l
  6500  005B76  0060  F563  FFDA   	movff	strtok@p+1,fsr2h
  6501  005B7C  0E00               	movlw	0
  6502  005B7E  6EDF               	movwf	indf2,c
  6503                           
  6504                           ; BSR set to: 1
  6505  005B80  4B57               	infsnz	strtok@p& (0+255),f,b
  6506  005B82  2B58               	incf	(strtok@p+1)& (0+255),f,b
  6507  005B84  D004               	goto	l4017
  6508  005B86                     l11523:
  6509                           
  6510                           ; BSR set to: 1
  6511  005B86  0E00               	movlw	0
  6512  005B88  6F57               	movwf	strtok@p& (0+255),b
  6513  005B8A  0E00               	movlw	0
  6514  005B8C  6F58               	movwf	(strtok@p+1)& (0+255),b
  6515  005B8E                     l4017:
  6516                           
  6517                           ; BSR set to: 1
  6518  005B8E  0060  F03C  F00F   	movff	strtok@s,?_strtok
  6519  005B94  0060  F040  F010   	movff	strtok@s+1,?_strtok+1
  6520  005B9A  0012               	return		;funcret
  6521  005B9C                     __end_of_strtok:
  6522                           	opt callstack 0
  6523                           
  6524 ;; *************** function _strspn *****************
  6525 ;; Defined at:
  6526 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strspn.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6529 ;;		 -> atCommand(80), NULL(0), 
  6530 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6531 ;;		 -> STR_55(2), STR_54(2), 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  i               2   12[COMRAM] unsigned int 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2    7[COMRAM] unsigned int 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;Total ram usage:        7 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    8
  6550 ;; This function calls:
  6551 ;;		_strchr
  6552 ;; This function is called by:
  6553 ;;		_strtok
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text22
  6558  007790                     __ptext22:
  6559                           	opt callstack 0
  6560  007790                     _strspn:
  6561                           	opt callstack 18
  6562                           
  6563                           ;incstack = 0
  6564  007790  0E00               	movlw	0
  6565  007792  6E0E               	movwf	(strspn@i+1)^0,c
  6566  007794  0E00               	movlw	0
  6567  007796  6E0D               	movwf	strspn@i^0,c
  6568  007798  D004               	goto	l11217
  6569  00779A                     l11215:
  6570  00779A  4A08               	infsnz	strspn@s^0,f,c
  6571  00779C  2A09               	incf	(strspn@s+1)^0,f,c
  6572  00779E  4A0D               	infsnz	strspn@i^0,f,c
  6573  0077A0  2A0E               	incf	(strspn@i+1)^0,f,c
  6574  0077A2                     l11217:
  6575  0077A2  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6576  0077A8  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6577  0077AE  50DF               	movf	indf2,w,c
  6578  0077B0  B4D8               	btfsc	status,2,c
  6579  0077B2  D017               	goto	u9790
  6580  0077B4  0060  F028  F002   	movff	strspn@c,strchr@s
  6581  0077BA  0060  F02C  F003   	movff	strspn@c+1,strchr@s+1
  6582  0077C0  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6583  0077C6  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6584  0077CC  50DF               	movf	indf2,w,c
  6585  0077CE  6E0C               	movwf	??_strspn^0,c
  6586  0077D0  500C               	movf	??_strspn^0,w,c
  6587  0077D2  6E04               	movwf	strchr@c^0,c
  6588  0077D4  6A05               	clrf	(strchr@c+1)^0,c
  6589  0077D6  EC66  F038         	call	_strchr	;wreg free
  6590  0077DA  5002               	movf	?_strchr^0,w,c
  6591  0077DC  1003               	iorwf	(?_strchr+1)^0,w,c
  6592  0077DE  A4D8               	btfss	status,2,c
  6593  0077E0  D7DC               	goto	l11215
  6594  0077E2                     u9790:
  6595  0077E2  0060  F034  F008   	movff	strspn@i,?_strspn
  6596  0077E8  0060  F038  F009   	movff	strspn@i+1,?_strspn+1
  6597  0077EE  0012               	return		;funcret
  6598  0077F0                     __end_of_strspn:
  6599                           	opt callstack 0
  6600                           
  6601 ;; *************** function _strcspn *****************
  6602 ;; Defined at:
  6603 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcspn.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6606 ;;		 -> atCommand(80), NULL(0), 
  6607 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6608 ;;		 -> STR_55(2), STR_54(2), 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  i               2   12[COMRAM] unsigned int 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2    7[COMRAM] unsigned int 
  6613 ;; Registers used:
  6614 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;Total ram usage:        7 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    8
  6627 ;; This function calls:
  6628 ;;		_strchr
  6629 ;; This function is called by:
  6630 ;;		_strtok
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text23
  6635  0077F0                     __ptext23:
  6636                           	opt callstack 0
  6637  0077F0                     _strcspn:
  6638                           	opt callstack 18
  6639                           
  6640                           ;incstack = 0
  6641  0077F0  0E00               	movlw	0
  6642  0077F2  6E0E               	movwf	(strcspn@i+1)^0,c
  6643  0077F4  0E00               	movlw	0
  6644  0077F6  6E0D               	movwf	strcspn@i^0,c
  6645  0077F8  D004               	goto	l11225
  6646  0077FA                     l11223:
  6647  0077FA  4A08               	infsnz	strcspn@s^0,f,c
  6648  0077FC  2A09               	incf	(strcspn@s+1)^0,f,c
  6649  0077FE  4A0D               	infsnz	strcspn@i^0,f,c
  6650  007800  2A0E               	incf	(strcspn@i+1)^0,f,c
  6651  007802                     l11225:
  6652  007802  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6653  007808  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6654  00780E  50DF               	movf	indf2,w,c
  6655  007810  B4D8               	btfsc	status,2,c
  6656  007812  D017               	goto	u9810
  6657  007814  0060  F028  F002   	movff	strcspn@c,strchr@s
  6658  00781A  0060  F02C  F003   	movff	strcspn@c+1,strchr@s+1
  6659  007820  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6660  007826  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6661  00782C  50DF               	movf	indf2,w,c
  6662  00782E  6E0C               	movwf	??_strcspn^0,c
  6663  007830  500C               	movf	??_strcspn^0,w,c
  6664  007832  6E04               	movwf	strchr@c^0,c
  6665  007834  6A05               	clrf	(strchr@c+1)^0,c
  6666  007836  EC66  F038         	call	_strchr	;wreg free
  6667  00783A  5002               	movf	?_strchr^0,w,c
  6668  00783C  1003               	iorwf	(?_strchr+1)^0,w,c
  6669  00783E  B4D8               	btfsc	status,2,c
  6670  007840  D7DC               	goto	l11223
  6671  007842                     u9810:
  6672  007842  0060  F034  F008   	movff	strcspn@i,?_strcspn
  6673  007848  0060  F038  F009   	movff	strcspn@i+1,?_strcspn+1
  6674  00784E  0012               	return		;funcret
  6675  007850                     __end_of_strcspn:
  6676                           	opt callstack 0
  6677                           
  6678 ;; *************** function _cmdSetAddr *****************
  6679 ;; Defined at:
  6680 ;;		line 308 in file "../app/app_src/application.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  6683 ;;		 -> atCommand(80), 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  tempaddr        2   28[BANK0 ] unsigned short 
  6686 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  6687 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6688 ;;  p2              2   24[BANK0 ] PTR unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 3F/0
  6695 ;;		On exit  : 3F/1
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;Total ram usage:        8 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:   16
  6705 ;; This function calls:
  6706 ;;		_printf
  6707 ;;		_strstr
  6708 ;;		_strtoul
  6709 ;; This function is called by:
  6710 ;;		_executeATCommand
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text24
  6715  006CF8                     __ptext24:
  6716                           	opt callstack 0
  6717  006CF8                     _cmdSetAddr:
  6718                           	opt callstack 12
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;../app/app_src/application.c: 309:  uint16_t tempaddr;;../app/app_src/application.c: 31
      +                          0:  char *p1,*p2;;../app/app_src/application.c: 311:  p1 = strstr(atCommand,"=") + 1;
  6722                           
  6723                           ;incstack = 0
  6724  006CF8  0E34               	movlw	low _atCommand
  6725  006CFA  6E0D               	movwf	strstr@h^0,c
  6726  006CFC  0E02               	movlw	high _atCommand
  6727  006CFE  6E0E               	movwf	(strstr@h+1)^0,c
  6728  006D00  0EDF               	movlw	low (STR_18+3)
  6729  006D02  6E0F               	movwf	strstr@n^0,c
  6730  006D04  0EFF               	movlw	high (STR_18+3)
  6731  006D06  6E10               	movwf	(strstr@n+1)^0,c
  6732  006D08  ECCE  F02D         	call	_strstr	;wreg free
  6733  006D0C  0E01               	movlw	1
  6734  006D0E  240D               	addwf	?_strstr^0,w,c
  6735  006D10  0100               	movlb	0	; () banked
  6736  006D12  6F7A               	movwf	cmdSetAddr@p1& (0+255),b
  6737  006D14  0E00               	movlw	0
  6738  006D16  200E               	addwfc	(?_strstr+1)^0,w,c
  6739  006D18  6F7B               	movwf	(cmdSetAddr@p1+1)& (0+255),b
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;../app/app_src/application.c: 313:  tempaddr = strtoul(p1,p2,16);
  6743  006D1A  0060  F1E8  F034   	movff	cmdSetAddr@p1,strtoul@s
  6744  006D20  0060  F1EC  F035   	movff	cmdSetAddr@p1+1,strtoul@s+1
  6745  006D26  0060  F1E0  F036   	movff	cmdSetAddr@p2,strtoul@endptr
  6746  006D2C  0060  F1E4  F037   	movff	cmdSetAddr@p2+1,strtoul@endptr+1
  6747  006D32  0E00               	movlw	0
  6748  006D34  6E39               	movwf	(strtoul@base+1)^0,c
  6749  006D36  0E10               	movlw	16
  6750  006D38  6E38               	movwf	strtoul@base^0,c
  6751  006D3A  EC25  F03F         	call	_strtoul	;wreg free
  6752  006D3E  0060  F0D0  F07C   	movff	?_strtoul,cmdSetAddr@tempaddr
  6753  006D44  0060  F0D4  F07D   	movff	?_strtoul+1,cmdSetAddr@tempaddr+1
  6754                           
  6755                           ;../app/app_src/application.c: 315:  if((tempaddr != 0x0000) && (tempaddr != 0xFFFF)){
  6756  006D4A  0100               	movlb	0	; () banked
  6757  006D4C  517C               	movf	cmdSetAddr@tempaddr& (0+255),w,b
  6758  006D4E  117D               	iorwf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6759  006D50  B4D8               	btfsc	status,2,c
  6760  006D52  D012               	goto	l15973
  6761                           
  6762                           ; BSR set to: 0
  6763  006D54  297C               	incf	cmdSetAddr@tempaddr& (0+255),w,b
  6764  006D56  E103               	bnz	u16180
  6765  006D58  297D               	incf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6766  006D5A  B4D8               	btfsc	status,2,c
  6767  006D5C  D00D               	goto	l15973
  6768  006D5E                     u16180:
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;../app/app_src/application.c: 316:   currentAddr0 = (uint8_t)(tempaddr >> 8);
  6772  006D5E  0060  F1F4  F0FC   	movff	cmdSetAddr@tempaddr+1,_currentAddr0
  6773                           
  6774                           ;../app/app_src/application.c: 317:   currentAddr1 = (uint8_t)(tempaddr & 0xFF);
  6775  006D64  0060  F1F0  F0FB   	movff	cmdSetAddr@tempaddr,_currentAddr1
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;../app/app_src/application.c: 318:   printf("OK\r\n");
  6779  006D6A  0ED7               	movlw	low STR_13
  6780  006D6C  6E55               	movwf	printf@fmt^0,c
  6781  006D6E  0EFF               	movlw	high STR_13
  6782  006D70  6E56               	movwf	(printf@fmt+1)^0,c
  6783  006D72  EC3E  F044         	call	_printf	;wreg free
  6784                           
  6785                           ;../app/app_src/application.c: 319:  }
  6786  006D76  0012               	return	
  6787  006D78                     l15973:
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;../app/app_src/application.c: 321:   printf("NOT OK:%u\r\n", NOT_VADLID_ADDR);
  6791  006D78  0ECC               	movlw	low STR_4
  6792  006D7A  6E55               	movwf	printf@fmt^0,c
  6793  006D7C  0EFE               	movlw	high STR_4
  6794  006D7E  6E56               	movwf	(printf@fmt+1)^0,c
  6795  006D80  0E05               	movlw	5
  6796  006D82  6E57               	movwf	(?_printf+2)^0,c
  6797  006D84  EC3E  F044         	call	_printf	;wreg free
  6798                           
  6799                           ; BSR set to: 1
  6800  006D88  0012               	return		;funcret
  6801  006D8A                     __end_of_cmdSetAddr:
  6802                           	opt callstack 0
  6803                           
  6804 ;; *************** function _cmdSetAES *****************
  6805 ;; Defined at:
  6806 ;;		line 449 in file "../app/app_src/application.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  6809 ;;		 -> atCommand(80), 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  temp            3   60[BANK0 ] unsigned char [3]
  6812 ;;  p2              2   58[BANK0 ] PTR unsigned char 
  6813 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  6814 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6815 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6816 ;;  byte            1   64[BANK0 ] unsigned char 
  6817 ;;  i               1   67[BANK0 ] unsigned char 
  6818 ;;  AESstr         32   26[BANK0 ] unsigned char [32]
  6819 ;;  p1              2   65[BANK0 ] PTR unsigned char 
  6820 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  6821 ;;  key_type        1   63[BANK0 ] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      void 
  6824 ;; Registers used:
  6825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 3F/0
  6828 ;;		On exit  : 3F/1
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;Total ram usage:       46 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:   16
  6838 ;; This function calls:
  6839 ;;		_DATAEE_WriteByte_Platform
  6840 ;;		_memcpy
  6841 ;;		_printf
  6842 ;;		_strlen
  6843 ;;		_strstr
  6844 ;;		_strtoul
  6845 ;; This function is called by:
  6846 ;;		_executeATCommand
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text25
  6851  0032E8                     __ptext25:
  6852                           	opt callstack 0
  6853  0032E8                     _cmdSetAES:
  6854                           	opt callstack 12
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;../app/app_src/application.c: 453:  p1 = strstr(atCommand,":") + 1;
  6858                           
  6859                           ; BSR set to: 0
  6860                           
  6861                           ; BSR set to: 1
  6862                           ;incstack = 0
  6863  0032E8  0E34               	movlw	low _atCommand
  6864  0032EA  6E0D               	movwf	strstr@h^0,c
  6865  0032EC  0E02               	movlw	high _atCommand
  6866  0032EE  6E0E               	movwf	(strstr@h+1)^0,c
  6867  0032F0  0E66               	movlw	low (STR_62+5)
  6868  0032F2  6E0F               	movwf	strstr@n^0,c
  6869  0032F4  0EFF               	movlw	high (STR_62+5)
  6870  0032F6  6E10               	movwf	(strstr@n+1)^0,c
  6871  0032F8  ECCE  F02D         	call	_strstr	;wreg free
  6872  0032FC  0E01               	movlw	1
  6873  0032FE  240D               	addwf	?_strstr^0,w,c
  6874  003300  0100               	movlb	0	; () banked
  6875  003302  6FA1               	movwf	cmdSetAES@p1& (0+255),b
  6876  003304  0E00               	movlw	0
  6877  003306  200E               	addwfc	(?_strstr+1)^0,w,c
  6878  003308  6FA2               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;../app/app_src/application.c: 454:     if(!p1){
  6882  00330A  51A1               	movf	cmdSetAES@p1& (0+255),w,b
  6883  00330C  11A2               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6884  00330E  A4D8               	btfss	status,2,c
  6885  003310  D017               	goto	l16035
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;../app/app_src/application.c: 455:         printf("NOT OK:%u\r\n", UNDEFCMD);
  6889  003312  0ECC               	movlw	low STR_4
  6890  003314  6E55               	movwf	printf@fmt^0,c
  6891  003316  0EFE               	movlw	high STR_4
  6892  003318  6E56               	movwf	(printf@fmt+1)^0,c
  6893  00331A  0E09               	movlw	9
  6894  00331C  6E57               	movwf	(?_printf+2)^0,c
  6895  00331E  EC3E  F044         	call	_printf	;wreg free
  6896  003322  0012               	return	
  6897  003324                     l16025:
  6898                           
  6899                           ; BSR set to: 0
  6900  003324  0E4E               	movlw	78
  6901  003326  D001               	goto	L1
  6902  003328                     l16027:
  6903                           
  6904                           ; BSR set to: 0
  6905  003328  0E41               	movlw	65
  6906  00332A                     L1:
  6907  00332A  6F9F               	movwf	cmdSetAES@key_type& (0+255),b
  6908  00332C  D02D               	goto	l16037
  6909  00332E                     l16029:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;../app/app_src/application.c: 462:             printf("NOT OK:%u\r\n", ILLEGALPARAMETER
      +                          );
  6913  00332E  0ECC               	movlw	low STR_4
  6914  003330  6E55               	movwf	printf@fmt^0,c
  6915  003332  0EFE               	movlw	high STR_4
  6916  003334  6E56               	movwf	(printf@fmt+1)^0,c
  6917  003336  0E0D               	movlw	13
  6918  003338  6E57               	movwf	(?_printf+2)^0,c
  6919  00333A  EC3E  F044         	call	_printf	;wreg free
  6920  00333E  0012               	return	
  6921  003340                     l16035:
  6922                           
  6923                           ; BSR set to: 0
  6924  003340  0060  F287  FFF6   	movff	cmdSetAES@p1,tblptrl
  6925  003346  0060  F28B  FFF7   	movff	cmdSetAES@p1+1,tblptrh
  6926  00334C  0E00               	movlw	low (__mediumconst shr (0+16))
  6927  00334E  6EF8               	movwf	tblptru,c
  6928  003350  0E0F               	movlw	(high __ramtop+-1)
  6929  003352  64F7               	cpfsgt	tblptrh,c
  6930  003354  D003               	bra	u16217
  6931  003356  0008               	tblrd		*
  6932  003358  50F5               	movf	tablat,w,c
  6933  00335A  D007               	bra	u16210
  6934  00335C                     u16217:
  6935  00335C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  6936  003362  006F FFDF FFEA     	movff	tblptrh,fsr0h
  6937  003368  50EF               	movf	indf0,w,c
  6938  00336A                     u16210:
  6939  00336A  0100               	movlb	0	; () banked
  6940  00336C  6F78               	movwf	??_cmdSetAES& (0+255),b
  6941  00336E  6B79               	clrf	(??_cmdSetAES+1)& (0+255),b
  6942                           
  6943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6944                           ; Switch size 1, requested type "simple"
  6945                           ; Number of cases is 1, Range of values is 0 to 0
  6946                           ; switch strategies available:
  6947                           ; Name         Instructions Cycles
  6948                           ; simple_byte            4     3 (average)
  6949                           ;	Chosen strategy is simple_byte
  6950  003370  5179               	movf	(??_cmdSetAES+1)& (0+255),w,b
  6951  003372  0A00               	xorlw	0	; case 0
  6952  003374  A4D8               	btfss	status,2,c
  6953  003376  D7DB               	goto	l16029
  6954                           
  6955                           ; BSR set to: 0
  6956                           ; Switch size 1, requested type "simple"
  6957                           ; Number of cases is 2, Range of values is 65 to 78
  6958                           ; switch strategies available:
  6959                           ; Name         Instructions Cycles
  6960                           ; simple_byte            7     4 (average)
  6961                           ;	Chosen strategy is simple_byte
  6962  003378  5178               	movf	??_cmdSetAES& (0+255),w,b
  6963  00337A  0A41               	xorlw	65	; case 65
  6964  00337C  B4D8               	btfsc	status,2,c
  6965  00337E  D7D4               	goto	l16027
  6966  003380  0A0F               	xorlw	15	; case 78
  6967  003382  B4D8               	btfsc	status,2,c
  6968  003384  D7CF               	goto	l16025
  6969  003386  D7D3               	goto	l16029
  6970  003388                     l16037:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;../app/app_src/application.c: 465:     p1 = strstr(atCommand,"=") + 1;
  6974  003388  0E34               	movlw	low _atCommand
  6975  00338A  6E0D               	movwf	strstr@h^0,c
  6976  00338C  0E02               	movlw	high _atCommand
  6977  00338E  6E0E               	movwf	(strstr@h+1)^0,c
  6978  003390  0EDF               	movlw	low (STR_18+3)
  6979  003392  6E0F               	movwf	strstr@n^0,c
  6980  003394  0EFF               	movlw	high (STR_18+3)
  6981  003396  6E10               	movwf	(strstr@n+1)^0,c
  6982  003398  ECCE  F02D         	call	_strstr	;wreg free
  6983  00339C  0E01               	movlw	1
  6984  00339E  240D               	addwf	?_strstr^0,w,c
  6985  0033A0  0100               	movlb	0	; () banked
  6986  0033A2  6FA1               	movwf	cmdSetAES@p1& (0+255),b
  6987  0033A4  0E00               	movlw	0
  6988  0033A6  200E               	addwfc	(?_strstr+1)^0,w,c
  6989  0033A8  6FA2               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;../app/app_src/application.c: 466:     if(!p1){
  6993  0033AA  51A1               	movf	cmdSetAES@p1& (0+255),w,b
  6994  0033AC  11A2               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6995  0033AE  A4D8               	btfss	status,2,c
  6996  0033B0  D009               	goto	l16045
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;../app/app_src/application.c: 467:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7000  0033B2  0ECC               	movlw	low STR_4
  7001  0033B4  6E55               	movwf	printf@fmt^0,c
  7002  0033B6  0EFE               	movlw	high STR_4
  7003  0033B8  6E56               	movwf	(printf@fmt+1)^0,c
  7004  0033BA  0E09               	movlw	9
  7005  0033BC  6E57               	movwf	(?_printf+2)^0,c
  7006  0033BE  EC3E  F044         	call	_printf	;wreg free
  7007  0033C2  0012               	return	
  7008  0033C4                     l16045:
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;../app/app_src/application.c: 471:  if(strlen(p1) != 32){
  7012  0033C4  0060  F284  F002   	movff	cmdSetAES@p1,strlen@s
  7013  0033CA  0060  F288  F003   	movff	cmdSetAES@p1+1,strlen@s+1
  7014  0033D0  EC3E  F03E         	call	_strlen	;wreg free
  7015  0033D4  0E20               	movlw	32
  7016  0033D6  1802               	xorwf	?_strlen^0,w,c
  7017  0033D8  1003               	iorwf	(?_strlen+1)^0,w,c
  7018  0033DA  B4D8               	btfsc	status,2,c
  7019  0033DC  D009               	goto	l16051
  7020                           
  7021                           ;../app/app_src/application.c: 472:   printf("NOT OK:%u\r\n",KEYLENERROR);
  7022  0033DE  0ECC               	movlw	low STR_4
  7023  0033E0  6E55               	movwf	printf@fmt^0,c
  7024  0033E2  0EFE               	movlw	high STR_4
  7025  0033E4  6E56               	movwf	(printf@fmt+1)^0,c
  7026  0033E6  0E08               	movlw	8
  7027  0033E8  6E57               	movwf	(?_printf+2)^0,c
  7028  0033EA  EC3E  F044         	call	_printf	;wreg free
  7029  0033EE  0012               	return	
  7030  0033F0                     l16051:
  7031                           
  7032                           ;../app/app_src/application.c: 475:  memcpy(AESstr,p1,32);
  7033  0033F0  0E7A               	movlw	low cmdSetAES@AESstr
  7034  0033F2  6E08               	movwf	memcpy@d1^0,c
  7035  0033F4  6A09               	clrf	(memcpy@d1+1)^0,c
  7036  0033F6  0060  F284  F00A   	movff	cmdSetAES@p1,memcpy@s1
  7037  0033FC  0060  F288  F00B   	movff	cmdSetAES@p1+1,memcpy@s1+1
  7038  003402  0E00               	movlw	0
  7039  003404  6E0D               	movwf	(memcpy@n+1)^0,c
  7040  003406  0E20               	movlw	32
  7041  003408  6E0C               	movwf	memcpy@n^0,c
  7042  00340A  ECEA  F039         	call	_memcpy	;wreg free
  7043                           
  7044                           ;../app/app_src/application.c: 477:  for(uint8_t i = 0; i < 16; i++){
  7045  00340E  0E00               	movlw	0
  7046  003410  0100               	movlb	0	; () banked
  7047  003412  6FA3               	movwf	cmdSetAES@i& (0+255),b
  7048  003414                     l16059:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;../app/app_src/application.c: 478:   char temp[3];;../app/app_src/application.c: 479:  
      +                           char *p2;;../app/app_src/application.c: 480:   uint8_t byte;;../app/app_src/application
      +                          .c: 481:   memcpy(temp,0,sizeof(temp));
  7052  003414  0E9C               	movlw	low cmdSetAES@temp
  7053  003416  6E08               	movwf	memcpy@d1^0,c
  7054  003418  6A09               	clrf	(memcpy@d1+1)^0,c
  7055  00341A  0E00               	movlw	0
  7056  00341C  6E0A               	movwf	memcpy@s1^0,c
  7057  00341E  0E00               	movlw	0
  7058  003420  6E0B               	movwf	(memcpy@s1+1)^0,c
  7059  003422  0E00               	movlw	0
  7060  003424  6E0D               	movwf	(memcpy@n+1)^0,c
  7061  003426  0E03               	movlw	3
  7062  003428  6E0C               	movwf	memcpy@n^0,c
  7063  00342A  ECEA  F039         	call	_memcpy	;wreg free
  7064                           
  7065                           ;../app/app_src/application.c: 482:   memcpy(temp,(AESstr + i*2),2);
  7066  00342E  0E9C               	movlw	low cmdSetAES@temp
  7067  003430  6E08               	movwf	memcpy@d1^0,c
  7068  003432  6A09               	clrf	(memcpy@d1+1)^0,c
  7069  003434  0100               	movlb	0	; () banked
  7070  003436  51A3               	movf	cmdSetAES@i& (0+255),w,b
  7071  003438  0D02               	mullw	2
  7072  00343A  50F3               	movf	243,w,c
  7073  00343C  0F7A               	addlw	low cmdSetAES@AESstr
  7074  00343E  6F78               	movwf	??_cmdSetAES& (0+255),b
  7075  003440  0060  F1E0  F00A   	movff	??_cmdSetAES,memcpy@s1
  7076  003446  6A0B               	clrf	(memcpy@s1+1)^0,c
  7077  003448  0E00               	movlw	0
  7078  00344A  6E0D               	movwf	(memcpy@n+1)^0,c
  7079  00344C  0E02               	movlw	2
  7080  00344E  6E0C               	movwf	memcpy@n^0,c
  7081  003450  ECEA  F039         	call	_memcpy	;wreg free
  7082                           
  7083                           ;../app/app_src/application.c: 483:   byte = (uint8_t)strtoul(temp,&p2,16);
  7084  003454  0E9C               	movlw	low cmdSetAES@temp
  7085  003456  6E34               	movwf	strtoul@s^0,c
  7086  003458  6A35               	clrf	(strtoul@s+1)^0,c
  7087  00345A  0E9A               	movlw	low cmdSetAES@p2
  7088  00345C  6E36               	movwf	strtoul@endptr^0,c
  7089  00345E  6A37               	clrf	(strtoul@endptr+1)^0,c
  7090  003460  0E00               	movlw	0
  7091  003462  6E39               	movwf	(strtoul@base+1)^0,c
  7092  003464  0E10               	movlw	16
  7093  003466  6E38               	movwf	strtoul@base^0,c
  7094  003468  EC25  F03F         	call	_strtoul	;wreg free
  7095  00346C  5034               	movf	?_strtoul^0,w,c
  7096  00346E  0100               	movlb	0	; () banked
  7097  003470  6FA0               	movwf	cmdSetAES@byte& (0+255),b
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;../app/app_src/application.c: 484:         if('A' == key_type){
  7101  003472  0E41               	movlw	65
  7102  003474  199F               	xorwf	cmdSetAES@key_type& (0+255),w,b
  7103  003476  A4D8               	btfss	status,2,c
  7104  003478  D015               	goto	l16071
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;../app/app_src/application.c: 485:             aes_key[i] = byte;
  7108  00347A  0E24               	movlw	low _aes_key
  7109  00347C  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7110  00347E  6ED9               	movwf	fsr2l,c
  7111  003480  6ADA               	clrf	fsr2h,c
  7112  003482  0E02               	movlw	high _aes_key
  7113  003484  22DA               	addwfc	fsr2h,f,c
  7114  003486  0060  F283  FFDF   	movff	cmdSetAES@byte,indf2
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;../app/app_src/application.c: 486:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7118  00348C  0E09               	movlw	9
  7119  00348E  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7120  003490  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7121  003492  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7122  003494  0E00               	movlw	0
  7123  003496  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7124  003498  0060  F280  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7125  00349E  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  7126                           
  7127                           ;../app/app_src/application.c: 487:         }
  7128  0034A2  D014               	goto	l16075
  7129  0034A4                     l16071:
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;../app/app_src/application.c: 489:             net_key[i] = byte;
  7133  0034A4  0E14               	movlw	low _net_key
  7134  0034A6  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7135  0034A8  6ED9               	movwf	fsr2l,c
  7136  0034AA  6ADA               	clrf	fsr2h,c
  7137  0034AC  0E02               	movlw	high _net_key
  7138  0034AE  22DA               	addwfc	fsr2h,f,c
  7139  0034B0  0060  F283  FFDF   	movff	cmdSetAES@byte,indf2
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;../app/app_src/application.c: 490:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7143  0034B6  0E23               	movlw	35
  7144  0034B8  25A3               	addwf	cmdSetAES@i& (0+255),w,b
  7145  0034BA  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7146  0034BC  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7147  0034BE  0E00               	movlw	0
  7148  0034C0  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7149  0034C2  0060  F280  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7150  0034C8  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  7151  0034CC                     l16075:
  7152                           
  7153                           ;../app/app_src/application.c: 492:  }
  7154  0034CC  0100               	movlb	0	; () banked
  7155  0034CE  2BA3               	incf	cmdSetAES@i& (0+255),f,b
  7156                           
  7157                           ; BSR set to: 0
  7158  0034D0  0E0F               	movlw	15
  7159  0034D2  65A3               	cpfsgt	cmdSetAES@i& (0+255),b
  7160  0034D4  D79F               	goto	l16059
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;../app/app_src/application.c: 493:  printf("OK\r\n");
  7164  0034D6  0ED7               	movlw	low STR_13
  7165  0034D8  6E55               	movwf	printf@fmt^0,c
  7166  0034DA  0EFF               	movlw	high STR_13
  7167  0034DC  6E56               	movwf	(printf@fmt+1)^0,c
  7168  0034DE  EC3E  F044         	call	_printf	;wreg free
  7169                           
  7170                           ; BSR set to: 1
  7171  0034E2  0012               	return		;funcret
  7172  0034E4                     __end_of_cmdSetAES:
  7173                           	opt callstack 0
  7174                           
  7175 ;; *************** function _cmdSendSink *****************
  7176 ;; Defined at:
  7177 ;;		line 428 in file "../app/app_src/application.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  7180 ;;		 -> atCommand(80), 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		None
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        2 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    7
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_executeATCommand
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text26
  7207  008D70                     __ptext26:
  7208                           	opt callstack 0
  7209  008D70                     _cmdSendSink:
  7210                           	opt callstack 21
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;incstack = 0
  7214  008D70  0012               	return		;funcret
  7215  008D72                     __end_of_cmdSendSink:
  7216                           	opt callstack 0
  7217                           
  7218 ;; *************** function _cmdSend *****************
  7219 ;; Defined at:
  7220 ;;		line 219 in file "../app/app_src/application.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  7223 ;;		 -> atCommand(80), 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  buf_id          1   37[BANK0 ] unsigned char 
  7226 ;;  destaddr        5   26[BANK0 ] unsigned char [5]
  7227 ;;  p1              2   35[BANK0 ] PTR unsigned char 
  7228 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  7229 ;;  p2              2   33[BANK0 ] PTR unsigned char 
  7230 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7231 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7232 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7233 ;;  tempaddr        2   31[BANK0 ] unsigned short 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 3F/1
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;Total ram usage:       16 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:   16
  7250 ;; This function calls:
  7251 ;;		_NWK_DataReq
  7252 ;;		_get_free_tx_buffer
  7253 ;;		_memcpy
  7254 ;;		_memset
  7255 ;;		_printf
  7256 ;;		_strlen
  7257 ;;		_strstr
  7258 ;;		_strtoul
  7259 ;; This function is called by:
  7260 ;;		_executeATCommand
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text27
  7265  002838                     __ptext27:
  7266                           	opt callstack 0
  7267  002838                     _cmdSend:
  7268                           	opt callstack 12
  7269                           
  7270                           ;../app/app_src/application.c: 220:  uint16_t tempaddr;;../app/app_src/application.c: 22
      +                          1:  char *p1,*p2;;../app/app_src/application.c: 222:  char destaddr[5];;../app/app_src/a
      +                          pplication.c: 223:         destaddr[4] = 0;
  7271                           
  7272                           ;incstack = 0
  7273  002838  0E00               	movlw	0
  7274  00283A  0100               	movlb	0	; () banked
  7275  00283C  6F7E               	movwf	(cmdSend@destaddr+4)& (0+255),b
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;../app/app_src/application.c: 224:  p1 = strstr(cmd,":") + 1;
  7279  00283E  0060  F1D8  F00D   	movff	cmdSend@cmd,strstr@h
  7280  002844  0060  F1DC  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7281  00284A  0E66               	movlw	low (STR_62+5)
  7282  00284C  6E0F               	movwf	strstr@n^0,c
  7283  00284E  0EFF               	movlw	high (STR_62+5)
  7284  002850  6E10               	movwf	(strstr@n+1)^0,c
  7285  002852  ECCE  F02D         	call	_strstr	;wreg free
  7286  002856  0E01               	movlw	1
  7287  002858  240D               	addwf	?_strstr^0,w,c
  7288  00285A  0100               	movlb	0	; () banked
  7289  00285C  6F83               	movwf	cmdSend@p1& (0+255),b
  7290  00285E  0E00               	movlw	0
  7291  002860  200E               	addwfc	(?_strstr+1)^0,w,c
  7292  002862  6F84               	movwf	(cmdSend@p1+1)& (0+255),b
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;../app/app_src/application.c: 225:  memcpy(destaddr,p1,4);
  7296  002864  0E7A               	movlw	low cmdSend@destaddr
  7297  002866  6E08               	movwf	memcpy@d1^0,c
  7298  002868  6A09               	clrf	(memcpy@d1+1)^0,c
  7299  00286A  0060  F20C  F00A   	movff	cmdSend@p1,memcpy@s1
  7300  002870  0060  F210  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7301  002876  0E00               	movlw	0
  7302  002878  6E0D               	movwf	(memcpy@n+1)^0,c
  7303  00287A  0E04               	movlw	4
  7304  00287C  6E0C               	movwf	memcpy@n^0,c
  7305  00287E  ECEA  F039         	call	_memcpy	;wreg free
  7306                           
  7307                           ;../app/app_src/application.c: 227:  tempaddr = strtoul(destaddr,&p2,16);
  7308  002882  0E7A               	movlw	low cmdSend@destaddr
  7309  002884  6E34               	movwf	strtoul@s^0,c
  7310  002886  6A35               	clrf	(strtoul@s+1)^0,c
  7311  002888  0E81               	movlw	low cmdSend@p2
  7312  00288A  6E36               	movwf	strtoul@endptr^0,c
  7313  00288C  6A37               	clrf	(strtoul@endptr+1)^0,c
  7314  00288E  0E00               	movlw	0
  7315  002890  6E39               	movwf	(strtoul@base+1)^0,c
  7316  002892  0E10               	movlw	16
  7317  002894  6E38               	movwf	strtoul@base^0,c
  7318  002896  EC25  F03F         	call	_strtoul	;wreg free
  7319  00289A  0060  F0D0  F07F   	movff	?_strtoul,cmdSend@tempaddr
  7320  0028A0  0060  F0D4  F080   	movff	?_strtoul+1,cmdSend@tempaddr+1
  7321                           
  7322                           ;../app/app_src/application.c: 229:  p1 = strstr(cmd,"=") + 1;
  7323  0028A6  0060  F1D8  F00D   	movff	cmdSend@cmd,strstr@h
  7324  0028AC  0060  F1DC  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7325  0028B2  0EDF               	movlw	low (STR_18+3)
  7326  0028B4  6E0F               	movwf	strstr@n^0,c
  7327  0028B6  0EFF               	movlw	high (STR_18+3)
  7328  0028B8  6E10               	movwf	(strstr@n+1)^0,c
  7329  0028BA  ECCE  F02D         	call	_strstr	;wreg free
  7330  0028BE  0E01               	movlw	1
  7331  0028C0  240D               	addwf	?_strstr^0,w,c
  7332  0028C2  0100               	movlb	0	; () banked
  7333  0028C4  6F83               	movwf	cmdSend@p1& (0+255),b
  7334  0028C6  0E00               	movlw	0
  7335  0028C8  200E               	addwfc	(?_strstr+1)^0,w,c
  7336  0028CA  6F84               	movwf	(cmdSend@p1+1)& (0+255),b
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;../app/app_src/application.c: 230:  if(strlen(p1) > 64){
  7340  0028CC  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7341  0028D2  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7342  0028D8  EC3E  F03E         	call	_strlen	;wreg free
  7343  0028DC  5003               	movf	(?_strlen+1)^0,w,c
  7344  0028DE  E104               	bnz	u16120
  7345  0028E0  0E41               	movlw	65
  7346  0028E2  5C02               	subwf	?_strlen^0,w,c
  7347  0028E4  A0D8               	btfss	status,0,c
  7348  0028E6  D009               	goto	l15881
  7349  0028E8                     u16120:
  7350                           
  7351                           ;../app/app_src/application.c: 231:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  7352  0028E8  0ECC               	movlw	low STR_4
  7353  0028EA  6E55               	movwf	printf@fmt^0,c
  7354  0028EC  0EFE               	movlw	high STR_4
  7355  0028EE  6E56               	movwf	(printf@fmt+1)^0,c
  7356  0028F0  0E07               	movlw	7
  7357  0028F2  6E57               	movwf	(?_printf+2)^0,c
  7358  0028F4  EC3E  F044         	call	_printf	;wreg free
  7359                           
  7360                           ;../app/app_src/application.c: 232:  }
  7361  0028F8  0012               	return	
  7362  0028FA                     l15881:
  7363                           
  7364                           ;../app/app_src/application.c: 234:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 235:         if(!get_free_tx_buffer(&buf_id)){
  7365  0028FA  0E85               	movlw	low cmdSend@buf_id
  7366  0028FC  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  7367  0028FE  EC66  F03B         	call	_get_free_tx_buffer	;wreg free
  7368  002902  0900               	iorlw	0
  7369  002904  A4D8               	btfss	status,2,c
  7370  002906  D009               	goto	l15887
  7371                           
  7372                           ;../app/app_src/application.c: 236:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  7373  002908  0ECC               	movlw	low STR_4
  7374  00290A  6E55               	movwf	printf@fmt^0,c
  7375  00290C  0EFE               	movlw	high STR_4
  7376  00290E  6E56               	movwf	(printf@fmt+1)^0,c
  7377  002910  0E11               	movlw	17
  7378  002912  6E57               	movwf	(?_printf+2)^0,c
  7379  002914  EC3E  F044         	call	_printf	;wreg free
  7380  002918  0012               	return	
  7381  00291A                     l15887:
  7382                           
  7383                           ;../app/app_src/application.c: 239:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  7384  00291A  0100               	movlb	0	; () banked
  7385  00291C  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7386  00291E  0D83               	mullw	131
  7387  002920  0E80               	movlw	low (_tx_buffer+22)
  7388  002922  24F3               	addwf	243,w,c
  7389  002924  6E02               	movwf	memset@dest^0,c
  7390  002926  0E08               	movlw	high (_tx_buffer+22)
  7391  002928  20F4               	addwfc	prodh,w,c
  7392  00292A  6E03               	movwf	(memset@dest+1)^0,c
  7393  00292C  0E00               	movlw	0
  7394  00292E  6E05               	movwf	(memset@c+1)^0,c
  7395  002930  0E00               	movlw	0
  7396  002932  6E04               	movwf	memset@c^0,c
  7397  002934  0E00               	movlw	0
  7398  002936  6E07               	movwf	(memset@n+1)^0,c
  7399  002938  0E6D               	movlw	109
  7400  00293A  6E06               	movwf	memset@n^0,c
  7401  00293C  EC32  F022         	call	_memset	;wreg free
  7402                           
  7403                           ;../app/app_src/application.c: 240:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  7404  002940  0100               	movlb	0	; () banked
  7405  002942  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7406  002944  0D83               	mullw	131
  7407  002946  0E80               	movlw	low (_tx_buffer+22)
  7408  002948  24F3               	addwf	243,w,c
  7409  00294A  6E08               	movwf	memcpy@d1^0,c
  7410  00294C  0E08               	movlw	high (_tx_buffer+22)
  7411  00294E  20F4               	addwfc	prodh,w,c
  7412  002950  6E09               	movwf	(memcpy@d1+1)^0,c
  7413  002952  0060  F20C  F00A   	movff	cmdSend@p1,memcpy@s1
  7414  002958  0060  F210  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7415  00295E  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7416  002964  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7417  00296A  EC3E  F03E         	call	_strlen	;wreg free
  7418  00296E  0060  F008  F00C   	movff	?_strlen,memcpy@n
  7419  002974  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  7420  00297A  ECEA  F039         	call	_memcpy	;wreg free
  7421                           
  7422                           ;../app/app_src/application.c: 241:   tx_buffer[buf_id].nwkDataReq.dstAddr = tempaddr;
  7423  00297E  0100               	movlb	0	; () banked
  7424  002980  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7425  002982  0D83               	mullw	131
  7426  002984  0E72               	movlw	low (_tx_buffer+8)
  7427  002986  24F3               	addwf	243,w,c
  7428  002988  6ED9               	movwf	fsr2l,c
  7429  00298A  0E08               	movlw	high (_tx_buffer+8)
  7430  00298C  20F4               	addwfc	prodh,w,c
  7431  00298E  6EDA               	movwf	fsr2h,c
  7432  002990  0060  F1FF  FFDE   	movff	cmdSend@tempaddr,postinc2
  7433  002996  0060  F203  FFDD   	movff	cmdSend@tempaddr+1,postdec2
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;../app/app_src/application.c: 242:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  7437  00299C  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7438  00299E  0D83               	mullw	131
  7439  0029A0  0E74               	movlw	low (_tx_buffer+10)
  7440  0029A2  24F3               	addwf	243,w,c
  7441  0029A4  6ED9               	movwf	fsr2l,c
  7442  0029A6  0E08               	movlw	high (_tx_buffer+10)
  7443  0029A8  20F4               	addwfc	prodh,w,c
  7444  0029AA  6EDA               	movwf	fsr2h,c
  7445  0029AC  0E01               	movlw	1
  7446  0029AE  6EDF               	movwf	indf2,c
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;../app/app_src/application.c: 243:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  7450  0029B0  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7451  0029B2  0D83               	mullw	131
  7452  0029B4  0E75               	movlw	low (_tx_buffer+11)
  7453  0029B6  24F3               	addwf	243,w,c
  7454  0029B8  6ED9               	movwf	fsr2l,c
  7455  0029BA  0E08               	movlw	high (_tx_buffer+11)
  7456  0029BC  20F4               	addwfc	prodh,w,c
  7457  0029BE  6EDA               	movwf	fsr2h,c
  7458  0029C0  0E01               	movlw	1
  7459  0029C2  6EDF               	movwf	indf2,c
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;../app/app_src/application.c: 244:         tx_buffer[buf_id].nwkDataReq.options = NWK_O
      +                          PT_ACK_REQUEST;
  7463  0029C4  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7464  0029C6  0D83               	mullw	131
  7465  0029C8  0E76               	movlw	low (_tx_buffer+12)
  7466  0029CA  24F3               	addwf	243,w,c
  7467  0029CC  6ED9               	movwf	fsr2l,c
  7468  0029CE  0E08               	movlw	high (_tx_buffer+12)
  7469  0029D0  20F4               	addwfc	prodh,w,c
  7470  0029D2  6EDA               	movwf	fsr2h,c
  7471  0029D4  0E01               	movlw	1
  7472  0029D6  6EDF               	movwf	indf2,c
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;../app/app_src/application.c: 245:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  7476  0029D8  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7477  0029DA  0D83               	mullw	131
  7478  0029DC  0E6A               	movlw	low _tx_buffer
  7479  0029DE  6F78               	movwf	??_cmdSend& (0+255),b
  7480  0029E0  0E08               	movlw	high _tx_buffer
  7481  0029E2  6F79               	movwf	(??_cmdSend+1)& (0+255),b
  7482  0029E4  0E16               	movlw	22
  7483  0029E6  2778               	addwf	??_cmdSend& (0+255),f,b
  7484  0029E8  0E00               	movlw	0
  7485  0029EA  2379               	addwfc	(??_cmdSend+1)& (0+255),f,b
  7486  0029EC  50F3               	movf	243,w,c
  7487  0029EE  2778               	addwf	??_cmdSend& (0+255),f,b
  7488  0029F0  50F4               	movf	244,w,c
  7489  0029F2  2379               	addwfc	(??_cmdSend+1)& (0+255),f,b
  7490  0029F4  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7491  0029F6  0D83               	mullw	131
  7492  0029F8  0E79               	movlw	low (_tx_buffer+15)
  7493  0029FA  24F3               	addwf	243,w,c
  7494  0029FC  6ED9               	movwf	fsr2l,c
  7495  0029FE  0E08               	movlw	high (_tx_buffer+15)
  7496  002A00  20F4               	addwfc	prodh,w,c
  7497  002A02  6EDA               	movwf	fsr2h,c
  7498  002A04  0060  F1E3  FFDE   	movff	??_cmdSend,postinc2
  7499  002A0A  0060  F1E7  FFDD   	movff	??_cmdSend+1,postdec2
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;../app/app_src/application.c: 246:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  7503  002A10  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7504  002A12  0D83               	mullw	131
  7505  002A14  0E7B               	movlw	low (_tx_buffer+17)
  7506  002A16  24F3               	addwf	243,w,c
  7507  002A18  6ED9               	movwf	fsr2l,c
  7508  002A1A  0E08               	movlw	high (_tx_buffer+17)
  7509  002A1C  20F4               	addwfc	prodh,w,c
  7510  002A1E  6EDA               	movwf	fsr2h,c
  7511  002A20  0060  F20C  F002   	movff	cmdSend@p1,strlen@s
  7512  002A26  0060  F210  F003   	movff	cmdSend@p1+1,strlen@s+1
  7513  002A2C  EC3E  F03E         	call	_strlen	;wreg free
  7514  002A30  5002               	movf	?_strlen^0,w,c
  7515  002A32  6EDF               	movwf	indf2,c
  7516                           
  7517                           ;../app/app_src/application.c: 247:         tx_buffer[buf_id].nwkDataReq.confirm = appDa
      +                          taConf;
  7518  002A34  0100               	movlb	0	; () banked
  7519  002A36  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7520  002A38  0D83               	mullw	131
  7521  002A3A  0E7C               	movlw	low (_tx_buffer+18)
  7522  002A3C  24F3               	addwf	243,w,c
  7523  002A3E  6ED9               	movwf	fsr2l,c
  7524  002A40  0E08               	movlw	high (_tx_buffer+18)
  7525  002A42  20F4               	addwfc	prodh,w,c
  7526  002A44  6EDA               	movwf	fsr2h,c
  7527  002A46  0E9E               	movlw	low _appDataConf
  7528  002A48  6EDE               	movwf	postinc2,c
  7529  002A4A  0E88               	movlw	high _appDataConf
  7530  002A4C  6EDD               	movwf	postdec2,c
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;../app/app_src/application.c: 248:         tx_buffer[buf_id].msgid = msgIDCounter++;
  7534  002A4E  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7535  002A50  0D83               	mullw	131
  7536  002A52  0E6C               	movlw	low (_tx_buffer+2)
  7537  002A54  24F3               	addwf	243,w,c
  7538  002A56  6ED9               	movwf	fsr2l,c
  7539  002A58  0E08               	movlw	high (_tx_buffer+2)
  7540  002A5A  20F4               	addwfc	prodh,w,c
  7541  002A5C  6EDA               	movwf	fsr2h,c
  7542  002A5E  0060  F3CB  FFDF   	movff	_msgIDCounter,indf2
  7543                           
  7544                           ; BSR set to: 0
  7545  002A64  2BF2               	incf	_msgIDCounter& (0+255),f,b
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;../app/app_src/application.c: 249:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  7549  002A66  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7550  002A68  0D83               	mullw	131
  7551  002A6A  0E6D               	movlw	low (_tx_buffer+3)
  7552  002A6C  24F3               	addwf	243,w,c
  7553  002A6E  6E02               	movwf	NWK_DataReq@req^0,c
  7554  002A70  0E08               	movlw	high (_tx_buffer+3)
  7555  002A72  20F4               	addwfc	prodh,w,c
  7556  002A74  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  7557  002A76  EC6C  F039         	call	_NWK_DataReq	;wreg free
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;../app/app_src/application.c: 250:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  7561  002A7A  0ED0               	movlw	low (STR_4+4)
  7562  002A7C  6E55               	movwf	printf@fmt^0,c
  7563  002A7E  0EFE               	movlw	high (STR_4+4)
  7564  002A80  6E56               	movwf	(printf@fmt+1)^0,c
  7565  002A82  5185               	movf	cmdSend@buf_id& (0+255),w,b
  7566  002A84  0D83               	mullw	131
  7567  002A86  0E6C               	movlw	low (_tx_buffer+2)
  7568  002A88  24F3               	addwf	243,w,c
  7569  002A8A  6ED9               	movwf	fsr2l,c
  7570  002A8C  0E08               	movlw	high (_tx_buffer+2)
  7571  002A8E  20F4               	addwfc	prodh,w,c
  7572  002A90  6EDA               	movwf	fsr2h,c
  7573  002A92  50DF               	movf	indf2,w,c
  7574  002A94  6F78               	movwf	??_cmdSend& (0+255),b
  7575  002A96  5178               	movf	??_cmdSend& (0+255),w,b
  7576  002A98  6E57               	movwf	(?_printf+2)^0,c
  7577  002A9A  6A58               	clrf	(?_printf+3)^0,c
  7578  002A9C  EC3E  F044         	call	_printf	;wreg free
  7579                           
  7580                           ; BSR set to: 1
  7581  002AA0  0012               	return		;funcret
  7582  002AA2                     __end_of_cmdSend:
  7583                           	opt callstack 0
  7584                           
  7585 ;; *************** function _strtoul *****************
  7586 ;; Defined at:
  7587 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtoul.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  s               2   51[COMRAM] PTR const unsigned char 
  7590 ;;		 -> STR_55(2), STR_54(2), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
  7591 ;;		 -> cmdSetAES@temp(3), atCommand(80), NULL(0), cmdSend@destaddr(5), 
  7592 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  7593 ;;		 -> cmdSetTX@p2(2), cmdSetRFCH@p2(2), cmdSetAES@p2(2), NULL(0), 
  7594 ;;		 -> cmdSend@p2(2), 
  7595 ;;  base            2   55[COMRAM] int 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  4   51[COMRAM] unsigned long 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7607 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7611 ;;Total ram usage:        6 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:   10
  7614 ;; This function calls:
  7615 ;;		___strtoxl
  7616 ;; This function is called by:
  7617 ;;		_cmdSend
  7618 ;;		_cmdSetAddr
  7619 ;;		_cmdSetNaddr
  7620 ;;		_cmdSetAES
  7621 ;;		_cmdSetRFCH
  7622 ;;		_cmdSetTX
  7623 ;;		_cmdSetBaud
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text28
  7628  007E4A                     __ptext28:
  7629                           	opt callstack 0
  7630  007E4A                     _strtoul:
  7631                           	opt callstack 17
  7632                           
  7633                           ; BSR set to: 1
  7634                           ;incstack = 0
  7635  007E4A  0060  F0D0  F010   	movff	strtoul@s,___strtoxl@s
  7636  007E50  0060  F0D4  F011   	movff	strtoul@s+1,___strtoxl@s+1
  7637  007E56  0060  F0D8  F012   	movff	strtoul@endptr,___strtoxl@endptr
  7638  007E5C  0060  F0DC  F013   	movff	strtoul@endptr+1,___strtoxl@endptr+1
  7639  007E62  0060  F0E0  F014   	movff	strtoul@base,___strtoxl@base
  7640  007E68  0060  F0E4  F015   	movff	strtoul@base+1,___strtoxl@base+1
  7641  007E6E  0E00               	movlw	0
  7642  007E70  6E16               	movwf	___strtoxl@is_signed^0,c
  7643  007E72  EC98  F005         	call	___strtoxl	;wreg free
  7644  007E76  0060  F040  F034   	movff	?___strtoxl,?_strtoul
  7645  007E7C  0060  F044  F035   	movff	?___strtoxl+1,?_strtoul+1
  7646  007E82  0060  F048  F036   	movff	?___strtoxl+2,?_strtoul+2
  7647  007E88  0060  F04C  F037   	movff	?___strtoxl+3,?_strtoul+3
  7648  007E8E  0012               	return		;funcret
  7649  007E90                     __end_of_strtoul:
  7650                           	opt callstack 0
  7651                           
  7652 ;; *************** function ___strtoxl *****************
  7653 ;; Defined at:
  7654 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__strtoxl.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7657 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7658 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7659 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7660 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
  7661 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), cmdSetTX@p2(2), cmdSetRFCH@p2(2), 
  7662 ;;		 -> cmdSetAES@p2(2), NULL(0), cmdSend@p2(2), 
  7663 ;;  base            2   19[COMRAM] int 
  7664 ;;  is_signed       1   21[COMRAM] unsigned char 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  a               4   44[COMRAM] unsigned long 
  7667 ;;  limit           4   38[COMRAM] unsigned long 
  7668 ;;  prev_a          4   26[COMRAM] unsigned long 
  7669 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  7670 ;;		 -> cmdSetSF@CHstr(3), STR_55(2), STR_54(2), cmdSetCADRSSI@CHstr(3), 
  7671 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7672 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7673 ;;  c               1   50[COMRAM] unsigned char 
  7674 ;;  skip            1   43[COMRAM] unsigned char 
  7675 ;;  sign            1   42[COMRAM] unsigned char 
  7676 ;;  conv_done       1   37[COMRAM] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  4   15[COMRAM] unsigned long 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7686 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;Total ram usage:       36 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    9
  7693 ;; This function calls:
  7694 ;;		___lmul
  7695 ;;		_isalpha
  7696 ;;		_isdigit
  7697 ;;		_isspace
  7698 ;;		_toupper
  7699 ;; This function is called by:
  7700 ;;		_strtol
  7701 ;;		_strtoul
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text29
  7706  000B30                     __ptext29:
  7707                           	opt callstack 0
  7708  000B30                     ___strtoxl:
  7709                           	opt callstack 17
  7710                           
  7711                           ;incstack = 0
  7712  000B30  0E00               	movlw	0
  7713  000B32  6E2D               	movwf	___strtoxl@a^0,c
  7714  000B34  0E00               	movlw	0
  7715  000B36  6E2E               	movwf	(___strtoxl@a+1)^0,c
  7716  000B38  0E00               	movlw	0
  7717  000B3A  6E2F               	movwf	(___strtoxl@a+2)^0,c
  7718  000B3C  0E00               	movlw	0
  7719  000B3E  6E30               	movwf	(___strtoxl@a+3)^0,c
  7720  000B40  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  7721  000B46  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  7722  000B4C  5031               	movf	___strtoxl@cp^0,w,c
  7723  000B4E  1032               	iorwf	(___strtoxl@cp+1)^0,w,c
  7724  000B50  B4D8               	btfsc	status,2,c
  7725  000B52  D1DF               	goto	l15469
  7726  000B54  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7727  000B5A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7728  000B60  0E00               	movlw	low (__mediumconst shr (0+16))
  7729  000B62  6EF8               	movwf	tblptru,c
  7730  000B64  0E0F               	movlw	(high __ramtop+-1)
  7731  000B66  64F7               	cpfsgt	tblptrh,c
  7732  000B68  D003               	bra	u15077
  7733  000B6A  0008               	tblrd		*
  7734  000B6C  50F5               	movf	tablat,w,c
  7735  000B6E  D007               	bra	u15070
  7736  000B70                     u15077:
  7737  000B70  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7738  000B76  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7739  000B7C  50EF               	movf	indf0,w,c
  7740  000B7E                     u15070:
  7741  000B7E  0900               	iorlw	0
  7742  000B80  B4D8               	btfsc	status,2,c
  7743  000B82  D1C7               	goto	l15469
  7744  000B84  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7745  000B8A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7746  000B90  0E00               	movlw	low (__mediumconst shr (0+16))
  7747  000B92  6EF8               	movwf	tblptru,c
  7748  000B94  0E0F               	movlw	(high __ramtop+-1)
  7749  000B96  64F7               	cpfsgt	tblptrh,c
  7750  000B98  D003               	bra	u15097
  7751  000B9A  0008               	tblrd		*
  7752  000B9C  50F5               	movf	tablat,w,c
  7753  000B9E  D007               	bra	u15090
  7754  000BA0                     u15097:
  7755  000BA0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7756  000BA6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7757  000BAC  50EF               	movf	indf0,w,c
  7758  000BAE                     u15090:
  7759  000BAE  D017               	goto	u15100
  7760  000BB0                     l15367:
  7761  000BB0  4A31               	infsnz	___strtoxl@cp^0,f,c
  7762  000BB2  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7763  000BB4  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7764  000BBA  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7765  000BC0  0E00               	movlw	low (__mediumconst shr (0+16))
  7766  000BC2  6EF8               	movwf	tblptru,c
  7767  000BC4  0E0F               	movlw	(high __ramtop+-1)
  7768  000BC6  64F7               	cpfsgt	tblptrh,c
  7769  000BC8  D003               	bra	u15107
  7770  000BCA  0008               	tblrd		*
  7771  000BCC  50F5               	movf	tablat,w,c
  7772  000BCE  D007               	bra	u15100
  7773  000BD0                     u15107:
  7774  000BD0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7775  000BD6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7776  000BDC  50EF               	movf	indf0,w,c
  7777  000BDE                     u15100:
  7778  000BDE  6E33               	movwf	___strtoxl@c^0,c
  7779  000BE0  0E01               	movlw	1
  7780  000BE2  6E25               	movwf	___strtoxl$7891^0,c
  7781  000BE4  0E20               	movlw	32
  7782  000BE6  1833               	xorwf	___strtoxl@c^0,w,c
  7783  000BE8  B4D8               	btfsc	status,2,c
  7784  000BEA  D013               	goto	l15377
  7785  000BEC  0EF7               	movlw	247
  7786  000BEE  6E17               	movwf	??___strtoxl^0,c
  7787  000BF0  0EFF               	movlw	255
  7788  000BF2  6E18               	movwf	(??___strtoxl+1)^0,c
  7789  000BF4  5033               	movf	___strtoxl@c^0,w,c
  7790  000BF6  6E19               	movwf	(??___strtoxl+2)^0,c
  7791  000BF8  6A1A               	clrf	(??___strtoxl+3)^0,c
  7792  000BFA  5017               	movf	??___strtoxl^0,w,c
  7793  000BFC  2619               	addwf	(??___strtoxl+2)^0,f,c
  7794  000BFE  5018               	movf	(??___strtoxl+1)^0,w,c
  7795  000C00  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7796  000C02  501A               	movf	(??___strtoxl+3)^0,w,c
  7797  000C04  E104               	bnz	u15120
  7798  000C06  0E05               	movlw	5
  7799  000C08  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7800  000C0A  A0D8               	btfss	status,0,c
  7801  000C0C  D002               	goto	l15377
  7802  000C0E                     u15120:
  7803  000C0E  0E00               	movlw	0
  7804  000C10  6E25               	movwf	___strtoxl$7891^0,c
  7805  000C12                     l15377:
  7806  000C12  0060  F094  F01F   	movff	___strtoxl$7891,___strtoxl$7890
  7807  000C18  6A20               	clrf	(___strtoxl$7890+1)^0,c
  7808  000C1A  501F               	movf	___strtoxl$7890^0,w,c
  7809  000C1C  1020               	iorwf	(___strtoxl$7890+1)^0,w,c
  7810  000C1E  A4D8               	btfss	status,2,c
  7811  000C20  D7C7               	goto	l15367
  7812  000C22  0E00               	movlw	0
  7813  000C24  6E2B               	movwf	___strtoxl@sign^0,c
  7814  000C26  0E00               	movlw	0
  7815  000C28  6E26               	movwf	___strtoxl@conv_done^0,c
  7816  000C2A  0E00               	movlw	0
  7817  000C2C  6E2C               	movwf	___strtoxl@skip^0,c
  7818  000C2E  0E2D               	movlw	45
  7819  000C30  1833               	xorwf	___strtoxl@c^0,w,c
  7820  000C32  A4D8               	btfss	status,2,c
  7821  000C34  D01B               	goto	l15391
  7822  000C36  0E01               	movlw	1
  7823  000C38  6E2B               	movwf	___strtoxl@sign^0,c
  7824  000C3A                     l15389:
  7825  000C3A  4A31               	infsnz	___strtoxl@cp^0,f,c
  7826  000C3C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7827  000C3E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7828  000C44  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7829  000C4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7830  000C4C  6EF8               	movwf	tblptru,c
  7831  000C4E  0E0F               	movlw	(high __ramtop+-1)
  7832  000C50  64F7               	cpfsgt	tblptrh,c
  7833  000C52  D003               	bra	u15157
  7834  000C54  0008               	tblrd		*
  7835  000C56  50F5               	movf	tablat,w,c
  7836  000C58  D007               	bra	u15150
  7837  000C5A                     u15157:
  7838  000C5A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7839  000C60  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7840  000C66  50EF               	movf	indf0,w,c
  7841  000C68                     u15150:
  7842  000C68  6E33               	movwf	___strtoxl@c^0,c
  7843  000C6A  D004               	goto	l15395
  7844  000C6C                     l15391:
  7845  000C6C  0E2B               	movlw	43
  7846  000C6E  1833               	xorwf	___strtoxl@c^0,w,c
  7847  000C70  B4D8               	btfsc	status,2,c
  7848  000C72  D7E3               	goto	l15389
  7849  000C74                     l15395:
  7850  000C74  0E30               	movlw	48
  7851  000C76  1833               	xorwf	___strtoxl@c^0,w,c
  7852  000C78  A4D8               	btfss	status,2,c
  7853  000C7A  D050               	goto	l15417
  7854  000C7C  4A31               	infsnz	___strtoxl@cp^0,f,c
  7855  000C7E  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7856  000C80  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7857  000C86  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7858  000C8C  0E00               	movlw	low (__mediumconst shr (0+16))
  7859  000C8E  6EF8               	movwf	tblptru,c
  7860  000C90  0E0F               	movlw	(high __ramtop+-1)
  7861  000C92  64F7               	cpfsgt	tblptrh,c
  7862  000C94  D003               	bra	u15187
  7863  000C96  0008               	tblrd		*
  7864  000C98  50F5               	movf	tablat,w,c
  7865  000C9A  D007               	bra	u15180
  7866  000C9C                     u15187:
  7867  000C9C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7868  000CA2  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7869  000CA8  50EF               	movf	indf0,w,c
  7870  000CAA                     u15180:
  7871  000CAA  6E33               	movwf	___strtoxl@c^0,c
  7872  000CAC  5014               	movf	___strtoxl@base^0,w,c
  7873  000CAE  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7874  000CB0  B4D8               	btfsc	status,2,c
  7875  000CB2  D005               	goto	u15200
  7876  000CB4  0E10               	movlw	16
  7877  000CB6  1814               	xorwf	___strtoxl@base^0,w,c
  7878  000CB8  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7879  000CBA  A4D8               	btfss	status,2,c
  7880  000CBC  D025               	goto	l15411
  7881  000CBE                     u15200:
  7882  000CBE  0E78               	movlw	120
  7883  000CC0  1833               	xorwf	___strtoxl@c^0,w,c
  7884  000CC2  B4D8               	btfsc	status,2,c
  7885  000CC4  D004               	goto	u15220
  7886  000CC6  0E58               	movlw	88
  7887  000CC8  1833               	xorwf	___strtoxl@c^0,w,c
  7888  000CCA  A4D8               	btfss	status,2,c
  7889  000CCC  D01D               	goto	l15411
  7890  000CCE                     u15220:
  7891  000CCE  0E00               	movlw	0
  7892  000CD0  6E15               	movwf	(___strtoxl@base+1)^0,c
  7893  000CD2  0E10               	movlw	16
  7894  000CD4  6E14               	movwf	___strtoxl@base^0,c
  7895  000CD6  4A31               	infsnz	___strtoxl@cp^0,f,c
  7896  000CD8  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7897  000CDA  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7898  000CE0  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7899  000CE6  0E00               	movlw	low (__mediumconst shr (0+16))
  7900  000CE8  6EF8               	movwf	tblptru,c
  7901  000CEA  0E0F               	movlw	(high __ramtop+-1)
  7902  000CEC  64F7               	cpfsgt	tblptrh,c
  7903  000CEE  D003               	bra	u15237
  7904  000CF0  0008               	tblrd		*
  7905  000CF2  50F5               	movf	tablat,w,c
  7906  000CF4  D007               	bra	u15230
  7907  000CF6                     u15237:
  7908  000CF6  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7909  000CFC  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7910  000D02  50EF               	movf	indf0,w,c
  7911  000D04                     u15230:
  7912  000D04  6E33               	movwf	___strtoxl@c^0,c
  7913  000D06  D00A               	goto	l15417
  7914  000D08                     l15411:
  7915  000D08  0E01               	movlw	1
  7916  000D0A  6E26               	movwf	___strtoxl@conv_done^0,c
  7917  000D0C  5014               	movf	___strtoxl@base^0,w,c
  7918  000D0E  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7919  000D10  A4D8               	btfss	status,2,c
  7920  000D12  D004               	goto	l15417
  7921  000D14  0E00               	movlw	0
  7922  000D16  6E15               	movwf	(___strtoxl@base+1)^0,c
  7923  000D18  0E08               	movlw	8
  7924  000D1A  6E14               	movwf	___strtoxl@base^0,c
  7925  000D1C                     l15417:
  7926  000D1C  5014               	movf	___strtoxl@base^0,w,c
  7927  000D1E  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7928  000D20  A4D8               	btfss	status,2,c
  7929  000D22  D004               	goto	l4077
  7930  000D24  0E00               	movlw	0
  7931  000D26  6E15               	movwf	(___strtoxl@base+1)^0,c
  7932  000D28  0E0A               	movlw	10
  7933  000D2A  6E14               	movwf	___strtoxl@base^0,c
  7934  000D2C                     l4077:
  7935  000D2C  5016               	movf	___strtoxl@is_signed^0,w,c
  7936  000D2E  B4D8               	btfsc	status,2,c
  7937  000D30  D014               	goto	l4078
  7938  000D32  502B               	movf	___strtoxl@sign^0,w,c
  7939  000D34  A4D8               	btfss	status,2,c
  7940  000D36  D008               	goto	l15425
  7941  000D38  0EFF               	movlw	255
  7942  000D3A  6E27               	movwf	___strtoxl@limit^0,c
  7943  000D3C  0EFF               	movlw	255
  7944  000D3E  6E28               	movwf	(___strtoxl@limit+1)^0,c
  7945  000D40  0EFF               	movlw	255
  7946  000D42  6E29               	movwf	(___strtoxl@limit+2)^0,c
  7947  000D44  0E7F               	movlw	127
  7948  000D46  D007               	goto	L2
  7949  000D48                     l15425:
  7950  000D48  0E00               	movlw	0
  7951  000D4A  6E27               	movwf	___strtoxl@limit^0,c
  7952  000D4C  0E00               	movlw	0
  7953  000D4E  6E28               	movwf	(___strtoxl@limit+1)^0,c
  7954  000D50  0E00               	movlw	0
  7955  000D52  6E29               	movwf	(___strtoxl@limit+2)^0,c
  7956  000D54  0E80               	movlw	128
  7957  000D56                     L2:
  7958  000D56  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  7959  000D58  D004               	goto	l4084
  7960  000D5A                     l4078:
  7961  000D5A  6827               	setf	___strtoxl@limit^0,c
  7962  000D5C  6828               	setf	(___strtoxl@limit+1)^0,c
  7963  000D5E  6829               	setf	(___strtoxl@limit+2)^0,c
  7964  000D60  682A               	setf	(___strtoxl@limit+3)^0,c
  7965  000D62                     l4084:
  7966  000D62  0060  F0B4  F01B   	movff	___strtoxl@a,___strtoxl@prev_a
  7967  000D68  0060  F0B8  F01C   	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  7968  000D6E  0060  F0BC  F01D   	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  7969  000D74  0060  F0C0  F01E   	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  7970  000D7A  0E9F               	movlw	159
  7971  000D7C  6E17               	movwf	??___strtoxl^0,c
  7972  000D7E  0EFF               	movlw	255
  7973  000D80  6E18               	movwf	(??___strtoxl+1)^0,c
  7974  000D82  5033               	movf	___strtoxl@c^0,w,c
  7975  000D84  6E19               	movwf	(??___strtoxl+2)^0,c
  7976  000D86  6A1A               	clrf	(??___strtoxl+3)^0,c
  7977  000D88  0E20               	movlw	32
  7978  000D8A  1219               	iorwf	(??___strtoxl+2)^0,f,c
  7979  000D8C  0E00               	movlw	0
  7980  000D8E  121A               	iorwf	(??___strtoxl+3)^0,f,c
  7981  000D90  5017               	movf	??___strtoxl^0,w,c
  7982  000D92  2619               	addwf	(??___strtoxl+2)^0,f,c
  7983  000D94  5018               	movf	(??___strtoxl+1)^0,w,c
  7984  000D96  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7985  000D98  501A               	movf	(??___strtoxl+3)^0,w,c
  7986  000D9A  E106               	bnz	u15280
  7987  000D9C  0E1A               	movlw	26
  7988  000D9E  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7989  000DA0  B0D8               	btfsc	status,0,c
  7990  000DA2  D002               	goto	u15280
  7991  000DA4  0E01               	movlw	1
  7992  000DA6  D001               	goto	u15290
  7993  000DA8                     u15280:
  7994  000DA8  0E00               	movlw	0
  7995  000DAA                     u15290:
  7996  000DAA  6E21               	movwf	___strtoxl$7892^0,c
  7997  000DAC  6A22               	clrf	(___strtoxl$7892+1)^0,c
  7998  000DAE  5021               	movf	___strtoxl$7892^0,w,c
  7999  000DB0  1022               	iorwf	(___strtoxl$7892+1)^0,w,c
  8000  000DB2  B4D8               	btfsc	status,2,c
  8001  000DB4  D00A               	goto	l15435
  8002  000DB6  0060  F0CC  F008   	movff	___strtoxl@c,toupper@c
  8003  000DBC  6A09               	clrf	(toupper@c+1)^0,c
  8004  000DBE  ECEC  F03D         	call	_toupper	;wreg free
  8005  000DC2  5008               	movf	?_toupper^0,w,c
  8006  000DC4  0FC9               	addlw	201
  8007  000DC6  6E33               	movwf	___strtoxl@c^0,c
  8008  000DC8  D01C               	goto	l15443
  8009  000DCA                     l15435:
  8010  000DCA  0ED0               	movlw	208
  8011  000DCC  6E17               	movwf	??___strtoxl^0,c
  8012  000DCE  0EFF               	movlw	255
  8013  000DD0  6E18               	movwf	(??___strtoxl+1)^0,c
  8014  000DD2  5033               	movf	___strtoxl@c^0,w,c
  8015  000DD4  6E19               	movwf	(??___strtoxl+2)^0,c
  8016  000DD6  6A1A               	clrf	(??___strtoxl+3)^0,c
  8017  000DD8  5017               	movf	??___strtoxl^0,w,c
  8018  000DDA  2619               	addwf	(??___strtoxl+2)^0,f,c
  8019  000DDC  5018               	movf	(??___strtoxl+1)^0,w,c
  8020  000DDE  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8021  000DE0  501A               	movf	(??___strtoxl+3)^0,w,c
  8022  000DE2  E106               	bnz	u15310
  8023  000DE4  0E0A               	movlw	10
  8024  000DE6  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8025  000DE8  B0D8               	btfsc	status,0,c
  8026  000DEA  D002               	goto	u15310
  8027  000DEC  0E01               	movlw	1
  8028  000DEE  D001               	goto	u15320
  8029  000DF0                     u15310:
  8030  000DF0  0E00               	movlw	0
  8031  000DF2                     u15320:
  8032  000DF2  6E23               	movwf	___strtoxl$7893^0,c
  8033  000DF4  6A24               	clrf	(___strtoxl$7893+1)^0,c
  8034  000DF6  5023               	movf	___strtoxl$7893^0,w,c
  8035  000DF8  1024               	iorwf	(___strtoxl$7893+1)^0,w,c
  8036  000DFA  B4D8               	btfsc	status,2,c
  8037  000DFC  D07C               	goto	l15463
  8038  000DFE  0E30               	movlw	48
  8039  000E00  5E33               	subwf	___strtoxl@c^0,f,c
  8040  000E02                     l15443:
  8041  000E02  5033               	movf	___strtoxl@c^0,w,c
  8042  000E04  6E17               	movwf	??___strtoxl^0,c
  8043  000E06  6A18               	clrf	(??___strtoxl+1)^0,c
  8044  000E08  5014               	movf	___strtoxl@base^0,w,c
  8045  000E0A  5C17               	subwf	??___strtoxl^0,w,c
  8046  000E0C  5018               	movf	(??___strtoxl+1)^0,w,c
  8047  000E0E  0A80               	xorlw	128
  8048  000E10  6E19               	movwf	(??___strtoxl+2)^0,c
  8049  000E12  5015               	movf	(___strtoxl@base+1)^0,w,c
  8050  000E14  0A80               	xorlw	128
  8051  000E16  5819               	subwfb	(??___strtoxl+2)^0,w,c
  8052  000E18  B0D8               	btfsc	status,0,c
  8053  000E1A  D06D               	goto	l15463
  8054  000E1C  502C               	movf	___strtoxl@skip^0,w,c
  8055  000E1E  A4D8               	btfss	status,2,c
  8056  000E20  D04F               	goto	l15459
  8057  000E22  0060  F050  F002   	movff	___strtoxl@base,___lmul@multiplier
  8058  000E28  0060  F054  F003   	movff	___strtoxl@base+1,___lmul@multiplier+1
  8059  000E2E  0E00               	movlw	0
  8060  000E30  BE03               	btfsc	(___lmul@multiplier+1)^0,7,c
  8061  000E32  0EFF               	movlw	-1
  8062  000E34  6E04               	movwf	(___lmul@multiplier+2)^0,c
  8063  000E36  6E05               	movwf	(___lmul@multiplier+3)^0,c
  8064  000E38  0060  F0B4  F006   	movff	___strtoxl@a,___lmul@multiplicand
  8065  000E3E  0060  F0B8  F007   	movff	___strtoxl@a+1,___lmul@multiplicand+1
  8066  000E44  0060  F0BC  F008   	movff	___strtoxl@a+2,___lmul@multiplicand+2
  8067  000E4A  0060  F0C0  F009   	movff	___strtoxl@a+3,___lmul@multiplicand+3
  8068  000E50  EC87  F03C         	call	___lmul	;wreg free
  8069  000E54  5033               	movf	___strtoxl@c^0,w,c
  8070  000E56  2402               	addwf	?___lmul^0,w,c
  8071  000E58  6E2D               	movwf	___strtoxl@a^0,c
  8072  000E5A  0E00               	movlw	0
  8073  000E5C  2003               	addwfc	(?___lmul+1)^0,w,c
  8074  000E5E  6E2E               	movwf	(___strtoxl@a+1)^0,c
  8075  000E60  0E00               	movlw	0
  8076  000E62  2004               	addwfc	(?___lmul+2)^0,w,c
  8077  000E64  6E2F               	movwf	(___strtoxl@a+2)^0,c
  8078  000E66  0E00               	movlw	0
  8079  000E68  2005               	addwfc	(?___lmul+3)^0,w,c
  8080  000E6A  6E30               	movwf	(___strtoxl@a+3)^0,c
  8081  000E6C  501B               	movf	___strtoxl@prev_a^0,w,c
  8082  000E6E  5C2D               	subwf	___strtoxl@a^0,w,c
  8083  000E70  501C               	movf	(___strtoxl@prev_a+1)^0,w,c
  8084  000E72  582E               	subwfb	(___strtoxl@a+1)^0,w,c
  8085  000E74  501D               	movf	(___strtoxl@prev_a+2)^0,w,c
  8086  000E76  582F               	subwfb	(___strtoxl@a+2)^0,w,c
  8087  000E78  501E               	movf	(___strtoxl@prev_a+3)^0,w,c
  8088  000E7A  5830               	subwfb	(___strtoxl@a+3)^0,w,c
  8089  000E7C  A0D8               	btfss	status,0,c
  8090  000E7E  D00D               	goto	u15380
  8091  000E80  5016               	movf	___strtoxl@is_signed^0,w,c
  8092  000E82  B4D8               	btfsc	status,2,c
  8093  000E84  D01D               	goto	l15459
  8094  000E86  502D               	movf	___strtoxl@a^0,w,c
  8095  000E88  5C27               	subwf	___strtoxl@limit^0,w,c
  8096  000E8A  502E               	movf	(___strtoxl@a+1)^0,w,c
  8097  000E8C  5828               	subwfb	(___strtoxl@limit+1)^0,w,c
  8098  000E8E  502F               	movf	(___strtoxl@a+2)^0,w,c
  8099  000E90  5829               	subwfb	(___strtoxl@limit+2)^0,w,c
  8100  000E92  5030               	movf	(___strtoxl@a+3)^0,w,c
  8101  000E94  582A               	subwfb	(___strtoxl@limit+3)^0,w,c
  8102  000E96  B0D8               	btfsc	status,0,c
  8103  000E98  D013               	goto	l15459
  8104  000E9A                     u15380:
  8105  000E9A  0060  F09C  F02D   	movff	___strtoxl@limit,___strtoxl@a
  8106  000EA0  0060  F0A0  F02E   	movff	___strtoxl@limit+1,___strtoxl@a+1
  8107  000EA6  0060  F0A4  F02F   	movff	___strtoxl@limit+2,___strtoxl@a+2
  8108  000EAC  0060  F0A8  F030   	movff	___strtoxl@limit+3,___strtoxl@a+3
  8109  000EB2  0E00               	movlw	0
  8110  000EB4  0101               	movlb	1	; () banked
  8111  000EB6  6F56               	movwf	(_errno+1)& (0+255),b
  8112  000EB8  0E22               	movlw	34
  8113  000EBA  6F55               	movwf	_errno& (0+255),b
  8114  000EBC  0E01               	movlw	1
  8115  000EBE  6E2C               	movwf	___strtoxl@skip^0,c
  8116  000EC0                     l15459:
  8117  000EC0  4A31               	infsnz	___strtoxl@cp^0,f,c
  8118  000EC2  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8119  000EC4  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8120  000ECA  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8121  000ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8122  000ED2  6EF8               	movwf	tblptru,c
  8123  000ED4  0E0F               	movlw	(high __ramtop+-1)
  8124  000ED6  64F7               	cpfsgt	tblptrh,c
  8125  000ED8  D003               	bra	u15397
  8126  000EDA  0008               	tblrd		*
  8127  000EDC  50F5               	movf	tablat,w,c
  8128  000EDE  D007               	bra	u15390
  8129  000EE0                     u15397:
  8130  000EE0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8131  000EE6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8132  000EEC  50EF               	movf	indf0,w,c
  8133  000EEE                     u15390:
  8134  000EEE  6E33               	movwf	___strtoxl@c^0,c
  8135  000EF0  0E01               	movlw	1
  8136  000EF2  6E26               	movwf	___strtoxl@conv_done^0,c
  8137  000EF4  D736               	goto	l4084
  8138  000EF6                     l15463:
  8139  000EF6  502C               	movf	___strtoxl@skip^0,w,c
  8140  000EF8  A4D8               	btfss	status,2,c
  8141  000EFA  D00B               	goto	l15469
  8142  000EFC  502B               	movf	___strtoxl@sign^0,w,c
  8143  000EFE  B4D8               	btfsc	status,2,c
  8144  000F00  D008               	goto	l15469
  8145  000F02  1E30               	comf	(___strtoxl@a+3)^0,f,c
  8146  000F04  1E2F               	comf	(___strtoxl@a+2)^0,f,c
  8147  000F06  1E2E               	comf	(___strtoxl@a+1)^0,f,c
  8148  000F08  6C2D               	negf	___strtoxl@a^0,c
  8149  000F0A  0E00               	movlw	0
  8150  000F0C  222E               	addwfc	(___strtoxl@a+1)^0,f,c
  8151  000F0E  222F               	addwfc	(___strtoxl@a+2)^0,f,c
  8152  000F10  2230               	addwfc	(___strtoxl@a+3)^0,f,c
  8153  000F12                     l15469:
  8154  000F12  5012               	movf	___strtoxl@endptr^0,w,c
  8155  000F14  1013               	iorwf	(___strtoxl@endptr+1)^0,w,c
  8156  000F16  B4D8               	btfsc	status,2,c
  8157  000F18  D015               	goto	l15477
  8158  000F1A  5026               	movf	___strtoxl@conv_done^0,w,c
  8159  000F1C  A4D8               	btfss	status,2,c
  8160  000F1E  D006               	goto	l15475
  8161  000F20  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  8162  000F26  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  8163  000F2C                     l15475:
  8164  000F2C  0060  F04B  FFD9   	movff	___strtoxl@endptr,fsr2l
  8165  000F32  0060  F04F  FFDA   	movff	___strtoxl@endptr+1,fsr2h
  8166  000F38  0060  F0C7  FFDE   	movff	___strtoxl@cp,postinc2
  8167  000F3E  0060  F0CB  FFDD   	movff	___strtoxl@cp+1,postdec2
  8168  000F44                     l15477:
  8169  000F44  0060  F0B4  F010   	movff	___strtoxl@a,?___strtoxl
  8170  000F4A  0060  F0B8  F011   	movff	___strtoxl@a+1,?___strtoxl+1
  8171  000F50  0060  F0BC  F012   	movff	___strtoxl@a+2,?___strtoxl+2
  8172  000F56  0060  F0C0  F013   	movff	___strtoxl@a+3,?___strtoxl+3
  8173  000F5C  0012               	return		;funcret
  8174  000F5E                     __end_of___strtoxl:
  8175                           	opt callstack 0
  8176                           
  8177 ;; *************** function ___lmul *****************
  8178 ;; Defined at:
  8179 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  multiplier      4    1[COMRAM] unsigned long 
  8182 ;;  multiplicand    4    5[COMRAM] unsigned long 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  product         4    9[COMRAM] unsigned long 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  4    1[COMRAM] unsigned long 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8194 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;Total ram usage:       12 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    7
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		___strtoxl
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text30
  8209  00790E                     __ptext30:
  8210                           	opt callstack 0
  8211  00790E                     ___lmul:
  8212                           	opt callstack 18
  8213                           
  8214                           ;incstack = 0
  8215  00790E  0E00               	movlw	0
  8216  007910  6E0A               	movwf	___lmul@product^0,c
  8217  007912  0E00               	movlw	0
  8218  007914  6E0B               	movwf	(___lmul@product+1)^0,c
  8219  007916  0E00               	movlw	0
  8220  007918  6E0C               	movwf	(___lmul@product+2)^0,c
  8221  00791A  0E00               	movlw	0
  8222  00791C  6E0D               	movwf	(___lmul@product+3)^0,c
  8223  00791E                     l10159:
  8224  00791E  A002               	btfss	___lmul@multiplier^0,0,c
  8225  007920  D008               	goto	l10163
  8226  007922  5006               	movf	___lmul@multiplicand^0,w,c
  8227  007924  260A               	addwf	___lmul@product^0,f,c
  8228  007926  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  8229  007928  220B               	addwfc	(___lmul@product+1)^0,f,c
  8230  00792A  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  8231  00792C  220C               	addwfc	(___lmul@product+2)^0,f,c
  8232  00792E  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  8233  007930  220D               	addwfc	(___lmul@product+3)^0,f,c
  8234  007932                     l10163:
  8235  007932  90D8               	bcf	status,0,c
  8236  007934  3606               	rlcf	___lmul@multiplicand^0,f,c
  8237  007936  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8238  007938  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8239  00793A  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8240  00793C  90D8               	bcf	status,0,c
  8241  00793E  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  8242  007940  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  8243  007942  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  8244  007944  3202               	rrcf	___lmul@multiplier^0,f,c
  8245  007946  5002               	movf	___lmul@multiplier^0,w,c
  8246  007948  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  8247  00794A  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  8248  00794C  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  8249  00794E  A4D8               	btfss	status,2,c
  8250  007950  D7E6               	goto	l10159
  8251  007952  0060  F028  F002   	movff	___lmul@product,?___lmul
  8252  007958  0060  F02C  F003   	movff	___lmul@product+1,?___lmul+1
  8253  00795E  0060  F030  F004   	movff	___lmul@product+2,?___lmul+2
  8254  007964  0060  F034  F005   	movff	___lmul@product+3,?___lmul+3
  8255  00796A  0012               	return		;funcret
  8256  00796C                     __end_of___lmul:
  8257                           	opt callstack 0
  8258                           
  8259 ;; *************** function _cmdRstCAD *****************
  8260 ;; Defined at:
  8261 ;;		line 541 in file "../app/app_src/application.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 3F/1
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;Total ram usage:        0 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:   16
  8282 ;; This function calls:
  8283 ;;		_printf
  8284 ;; This function is called by:
  8285 ;;		_executeATCommand
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text31
  8290  008BD2                     __ptext31:
  8291                           	opt callstack 0
  8292  008BD2                     _cmdRstCAD:
  8293                           	opt callstack 12
  8294                           
  8295                           ;../app/app_src/application.c: 542:  cadCounter = 0;
  8296                           
  8297                           ;incstack = 0
  8298  008BD2  0E00               	movlw	0
  8299  008BD4  0100               	movlb	0	; () banked
  8300  008BD6  6FED               	movwf	_cadCounter& (0+255),b
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;../app/app_src/application.c: 543:  printf("OK\r\n");
  8304  008BD8  0ED7               	movlw	low STR_13
  8305  008BDA  6E55               	movwf	printf@fmt^0,c
  8306  008BDC  0EFF               	movlw	high STR_13
  8307  008BDE  6E56               	movwf	(printf@fmt+1)^0,c
  8308  008BE0  EC3E  F044         	call	_printf	;wreg free
  8309                           
  8310                           ; BSR set to: 1
  8311  008BE4  0012               	return		;funcret
  8312  008BE6                     __end_of_cmdRstCAD:
  8313                           	opt callstack 0
  8314                           
  8315 ;; *************** function _cmdReset *****************
  8316 ;; Defined at:
  8317 ;;		line 681 in file "../app/app_src/application.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		None
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;Total ram usage:        0 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    7
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_executeATCommand
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text32
  8346  008D6A                     __ptext32:
  8347                           	opt callstack 0
  8348  008D6A                     _cmdReset:
  8349                           	opt callstack 21
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;incstack = 0
  8353  008D6A  00FF               	reset		;# 
  8354  008D6C                     l355:
  8355  008D6C  D7FF               	goto	l355
  8356  008D6E                     __end_of_cmdReset:
  8357                           	opt callstack 0
  8358                           
  8359 ;; *************** function _cmdRecv *****************
  8360 ;; Defined at:
  8361 ;;		line 364 in file "../app/app_src/application.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;		None
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		None
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;Total ram usage:        0 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    7
  8382 ;; This function calls:
  8383 ;;		Nothing
  8384 ;; This function is called by:
  8385 ;;		_executeATCommand
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text33
  8390  008D72                     __ptext33:
  8391                           	opt callstack 0
  8392  008D72                     _cmdRecv:
  8393                           	opt callstack 21
  8394                           
  8395                           ;../app/app_src/application.c: 378:  return;
  8396                           
  8397                           ;incstack = 0
  8398  008D72  0012               	return		;funcret
  8399  008D74                     __end_of_cmdRecv:
  8400                           	opt callstack 0
  8401                           
  8402 ;; *************** function _cmdNaddr *****************
  8403 ;; Defined at:
  8404 ;;		line 332 in file "../app/app_src/application.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;		None
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;		None
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 3F/1
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;Total ram usage:        0 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; Hardware stack levels required when called:   16
  8425 ;; This function calls:
  8426 ;;		_printf
  8427 ;; This function is called by:
  8428 ;;		_executeATCommand
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text34
  8433  008B64                     __ptext34:
  8434                           	opt callstack 0
  8435  008B64                     _cmdNaddr:
  8436                           	opt callstack 12
  8437                           
  8438                           ;../app/app_src/application.c: 333:  printf("NADDR=%02X\r\n",currentNetID);
  8439                           
  8440                           ;incstack = 0
  8441  008B64  0E73               	movlw	low STR_15
  8442  008B66  6E55               	movwf	printf@fmt^0,c
  8443  008B68  0EFE               	movlw	high STR_15
  8444  008B6A  6E56               	movwf	(printf@fmt+1)^0,c
  8445  008B6C  0060  F3E8  F057   	movff	_currentNetID,?_printf+2
  8446  008B72  6A58               	clrf	(?_printf+3)^0,c
  8447  008B74  EC3E  F044         	call	_printf	;wreg free
  8448                           
  8449                           ; BSR set to: 1
  8450  008B78  0012               	return		;funcret
  8451  008B7A                     __end_of_cmdNaddr:
  8452                           	opt callstack 0
  8453                           
  8454 ;; *************** function _cmdMac *****************
  8455 ;; Defined at:
  8456 ;;		line 387 in file "../app/app_src/application.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;		None
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  i               1   23[BANK0 ] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 3F/1
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;Total ram usage:        2 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:   16
  8477 ;; This function calls:
  8478 ;;		_printf
  8479 ;; This function is called by:
  8480 ;;		_executeATCommand
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text35
  8485  007D68                     __ptext35:
  8486                           	opt callstack 0
  8487  007D68                     _cmdMac:
  8488                           	opt callstack 12
  8489                           
  8490                           ;../app/app_src/application.c: 388:  printf("MAC=");
  8491                           
  8492                           ; BSR set to: 1
  8493                           ;incstack = 0
  8494  007D68  0EDC               	movlw	low STR_18
  8495  007D6A  6E55               	movwf	printf@fmt^0,c
  8496  007D6C  0EFF               	movlw	high STR_18
  8497  007D6E  6E56               	movwf	(printf@fmt+1)^0,c
  8498  007D70  EC3E  F044         	call	_printf	;wreg free
  8499                           
  8500                           ; BSR set to: 1
  8501                           ;../app/app_src/application.c: 389:  for(uint8_t i = 0; i < sizeof(EUIDbyte); i++){
  8502  007D74  0E00               	movlw	0
  8503  007D76  0100               	movlb	0	; () banked
  8504  007D78  6F77               	movwf	cmdMac@i& (0+255),b
  8505  007D7A                     l16003:
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;../app/app_src/application.c: 390:   printf("%02X", EUIDbyte[i]);
  8509  007D7A  0EF5               	movlw	low STR_19
  8510  007D7C  6E55               	movwf	printf@fmt^0,c
  8511  007D7E  0EFF               	movlw	high STR_19
  8512  007D80  6E56               	movwf	(printf@fmt+1)^0,c
  8513  007D82  0EBC               	movlw	low _EUIDbyte
  8514  007D84  2577               	addwf	cmdMac@i& (0+255),w,b
  8515  007D86  6ED9               	movwf	fsr2l,c
  8516  007D88  6ADA               	clrf	fsr2h,c
  8517  007D8A  0E01               	movlw	high _EUIDbyte
  8518  007D8C  22DA               	addwfc	fsr2h,f,c
  8519  007D8E  50DF               	movf	indf2,w,c
  8520  007D90  6F76               	movwf	??_cmdMac& (0+255),b
  8521  007D92  5176               	movf	??_cmdMac& (0+255),w,b
  8522  007D94  6E57               	movwf	(?_printf+2)^0,c
  8523  007D96  6A58               	clrf	(?_printf+3)^0,c
  8524  007D98  EC3E  F044         	call	_printf	;wreg free
  8525                           
  8526                           ; BSR set to: 1
  8527                           ;../app/app_src/application.c: 391:  }
  8528  007D9C  0100               	movlb	0	; () banked
  8529  007D9E  2B77               	incf	cmdMac@i& (0+255),f,b
  8530                           
  8531                           ; BSR set to: 0
  8532  007DA0  0E0B               	movlw	11
  8533  007DA2  6577               	cpfsgt	cmdMac@i& (0+255),b
  8534  007DA4  D7EA               	goto	l16003
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;../app/app_src/application.c: 392:  printf("\r\n");
  8538  007DA6  0ED4               	movlw	low (STR_135+2)
  8539  007DA8  6E55               	movwf	printf@fmt^0,c
  8540  007DAA  0EFF               	movlw	high (STR_135+2)
  8541  007DAC  6E56               	movwf	(printf@fmt+1)^0,c
  8542  007DAE  EC3E  F044         	call	_printf	;wreg free
  8543                           
  8544                           ; BSR set to: 1
  8545  007DB2  0012               	return		;funcret
  8546  007DB4                     __end_of_cmdMac:
  8547                           	opt callstack 0
  8548                           
  8549 ;; *************** function _cmdI *****************
  8550 ;; Defined at:
  8551 ;;		line 207 in file "../app/app_src/application.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 3F/1
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:   17
  8572 ;; This function calls:
  8573 ;;		_sendInfo
  8574 ;; This function is called by:
  8575 ;;		_executeATCommand
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text36
  8580  008D52                     __ptext36:
  8581                           	opt callstack 0
  8582  008D52                     _cmdI:
  8583                           	opt callstack 11
  8584                           
  8585                           ;../app/app_src/application.c: 209:     sendInfo();
  8586                           
  8587                           ; BSR set to: 1
  8588                           ;incstack = 0
  8589  008D52  ECB6  F03C         	call	_sendInfo	;wreg free
  8590                           
  8591                           ; BSR set to: 1
  8592  008D56  0012               	return		;funcret
  8593  008D58                     __end_of_cmdI:
  8594                           	opt callstack 0
  8595                           
  8596 ;; *************** function _sendInfo *****************
  8597 ;; Defined at:
  8598 ;;		line 1146 in file "../app/app_src/application.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 3F/1
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;Total ram usage:        0 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:   16
  8619 ;; This function calls:
  8620 ;;		_printf
  8621 ;; This function is called by:
  8622 ;;		_cmdI
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text37
  8627  00796C                     __ptext37:
  8628                           	opt callstack 0
  8629  00796C                     _sendInfo:
  8630                           	opt callstack 11
  8631                           
  8632                           ;../app/app_src/application.c: 1148:     printf("LoRa Mesh\r\n");
  8633                           
  8634                           ; BSR set to: 1
  8635                           ;incstack = 0
  8636  00796C  0EC0               	movlw	low STR_131
  8637  00796E  6E55               	movwf	printf@fmt^0,c
  8638  007970  0EFE               	movlw	high STR_131
  8639  007972  6E56               	movwf	(printf@fmt+1)^0,c
  8640  007974  EC3E  F044         	call	_printf	;wreg free
  8641  007978  0EF3               	movlw	low STR_132
  8642  00797A  6E55               	movwf	printf@fmt^0,c
  8643  00797C  0EFD               	movlw	high STR_132
  8644  00797E  6E56               	movwf	(printf@fmt+1)^0,c
  8645  007980  0E00               	movlw	0
  8646  007982  6E58               	movwf	(?_printf+3)^0,c
  8647  007984  0E01               	movlw	1
  8648  007986  6E57               	movwf	(?_printf+2)^0,c
  8649  007988  0E00               	movlw	0
  8650  00798A  6E5A               	movwf	(?_printf+5)^0,c
  8651  00798C  0E00               	movlw	0
  8652  00798E  6E59               	movwf	(?_printf+4)^0,c
  8653  007990  EC3E  F044         	call	_printf	;wreg free
  8654  007994  0ED7               	movlw	low STR_133
  8655  007996  6E55               	movwf	printf@fmt^0,c
  8656  007998  0EFD               	movlw	high STR_133
  8657  00799A  6E56               	movwf	(printf@fmt+1)^0,c
  8658  00799C  0E00               	movlw	0
  8659  00799E  6E58               	movwf	(?_printf+3)^0,c
  8660  0079A0  0E02               	movlw	2
  8661  0079A2  6E57               	movwf	(?_printf+2)^0,c
  8662  0079A4  0E00               	movlw	0
  8663  0079A6  6E5A               	movwf	(?_printf+5)^0,c
  8664  0079A8  0E01               	movlw	1
  8665  0079AA  6E59               	movwf	(?_printf+4)^0,c
  8666  0079AC  EC3E  F044         	call	_printf	;wreg free
  8667                           
  8668                           ;../app/app_src/application.c: 1152:     printf("Region ");
  8669  0079B0  0E41               	movlw	low STR_134
  8670  0079B2  6E55               	movwf	printf@fmt^0,c
  8671  0079B4  0EFF               	movlw	high STR_134
  8672  0079B6  6E56               	movwf	(printf@fmt+1)^0,c
  8673  0079B8  EC3E  F044         	call	_printf	;wreg free
  8674                           
  8675                           ;../app/app_src/application.c: 1154:     printf("NA\r\n");
  8676  0079BC  0ED2               	movlw	low STR_135
  8677  0079BE  6E55               	movwf	printf@fmt^0,c
  8678  0079C0  0EFF               	movlw	high STR_135
  8679  0079C2  6E56               	movwf	(printf@fmt+1)^0,c
  8680  0079C4  EC3E  F044         	call	_printf	;wreg free
  8681                           
  8682                           ; BSR set to: 1
  8683  0079C8  0012               	return		;funcret
  8684  0079CA                     __end_of_sendInfo:
  8685                           	opt callstack 0
  8686                           
  8687 ;; *************** function _cmdGetTX *****************
  8688 ;; Defined at:
  8689 ;;		line 605 in file "../app/app_src/application.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;		None
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;		None
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1    wreg      void 
  8696 ;; Registers used:
  8697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 3F/1
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;Total ram usage:        0 bytes
  8708 ;; Hardware stack levels used:    1
  8709 ;; Hardware stack levels required when called:   16
  8710 ;; This function calls:
  8711 ;;		_printf
  8712 ;; This function is called by:
  8713 ;;		_executeATCommand
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text38
  8718  008B7A                     __ptext38:
  8719                           	opt callstack 0
  8720  008B7A                     _cmdGetTX:
  8721                           	opt callstack 12
  8722                           
  8723                           ;../app/app_src/application.c: 606:  printf("TX POWER=%u\r\n",(uint16_t)TXPower);
  8724                           
  8725                           ; BSR set to: 1
  8726                           ;incstack = 0
  8727  008B7A  0E65               	movlw	low STR_37
  8728  008B7C  6E55               	movwf	printf@fmt^0,c
  8729  008B7E  0EFE               	movlw	high STR_37
  8730  008B80  6E56               	movwf	(printf@fmt+1)^0,c
  8731  008B82  0060  F3A8  F057   	movff	_TXPower,?_printf+2
  8732  008B88  6A58               	clrf	(?_printf+3)^0,c
  8733  008B8A  EC3E  F044         	call	_printf	;wreg free
  8734                           
  8735                           ; BSR set to: 1
  8736  008B8E  0012               	return		;funcret
  8737  008B90                     __end_of_cmdGetTX:
  8738                           	opt callstack 0
  8739                           
  8740 ;; *************** function _cmdGetTTL *****************
  8741 ;; Defined at:
  8742 ;;		line 503 in file "../app/app_src/application.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		None
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;Total ram usage:        0 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    7
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_executeATCommand
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text39
  8771  008D74                     __ptext39:
  8772                           	opt callstack 0
  8773  008D74                     _cmdGetTTL:
  8774                           	opt callstack 21
  8775                           
  8776                           ;../app/app_src/application.c: 505:  return;
  8777                           
  8778                           ; BSR set to: 1
  8779                           ;incstack = 0
  8780  008D74  0012               	return		;funcret
  8781  008D76                     __end_of_cmdGetTTL:
  8782                           	opt callstack 0
  8783                           
  8784 ;; *************** function _cmdGetSF *****************
  8785 ;; Defined at:
  8786 ;;		line 747 in file "../app/app_src/application.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;		None
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;		None
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      void 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 3F/1
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8804 ;;Total ram usage:        0 bytes
  8805 ;; Hardware stack levels used:    1
  8806 ;; Hardware stack levels required when called:   16
  8807 ;; This function calls:
  8808 ;;		_printf
  8809 ;; This function is called by:
  8810 ;;		_executeATCommand
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text40
  8815  008B90                     __ptext40:
  8816                           	opt callstack 0
  8817  008B90                     _cmdGetSF:
  8818                           	opt callstack 12
  8819                           
  8820                           ;../app/app_src/application.c: 748:     printf("SF=%u\r\n", current_sf);
  8821                           
  8822                           ;incstack = 0
  8823  008B90  0E39               	movlw	low STR_56
  8824  008B92  6E55               	movwf	printf@fmt^0,c
  8825  008B94  0EFF               	movlw	high STR_56
  8826  008B96  6E56               	movwf	(printf@fmt+1)^0,c
  8827  008B98  0060  F3B0  F057   	movff	_current_sf,?_printf+2
  8828  008B9E  6A58               	clrf	(?_printf+3)^0,c
  8829  008BA0  EC3E  F044         	call	_printf	;wreg free
  8830                           
  8831                           ; BSR set to: 1
  8832  008BA4  0012               	return		;funcret
  8833  008BA6                     __end_of_cmdGetSF:
  8834                           	opt callstack 0
  8835                           
  8836 ;; *************** function _cmdGetRxCnt *****************
  8837 ;; Defined at:
  8838 ;;		line 782 in file "../app/app_src/application.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  atCommand       2    1[COMRAM] PTR unsigned char 
  8841 ;;		 -> atCommand(80), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		None
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8857 ;;Total ram usage:        2 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    7
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_executeATCommand
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text41
  8868  008D76                     __ptext41:
  8869                           	opt callstack 0
  8870  008D76                     _cmdGetRxCnt:
  8871                           	opt callstack 21
  8872                           
  8873                           ; BSR set to: 1
  8874                           ;incstack = 0
  8875  008D76  0012               	return		;funcret
  8876  008D78                     __end_of_cmdGetRxCnt:
  8877                           	opt callstack 0
  8878                           
  8879 ;; *************** function _cmdGetRFCH *****************
  8880 ;; Defined at:
  8881 ;;		line 569 in file "../app/app_src/application.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      void 
  8888 ;; Registers used:
  8889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 3F/1
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:   16
  8902 ;; This function calls:
  8903 ;;		_printf
  8904 ;; This function is called by:
  8905 ;;		_executeATCommand
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text42
  8910  008A64                     __ptext42:
  8911                           	opt callstack 0
  8912  008A64                     _cmdGetRFCH:
  8913                           	opt callstack 12
  8914                           
  8915                           ;../app/app_src/application.c: 570:  printf("CHANNEL=%u\r\n",(channel + 1));
  8916                           
  8917                           ;incstack = 0
  8918  008A64  0E9A               	movlw	low STR_33
  8919  008A66  6E55               	movwf	printf@fmt^0,c
  8920  008A68  0EFE               	movlw	high STR_33
  8921  008A6A  6E56               	movwf	(printf@fmt+1)^0,c
  8922  008A6C  0E01               	movlw	1
  8923  008A6E  0100               	movlb	0	; () banked
  8924  008A70  25EB               	addwf	_channel& (0+255),w,b
  8925  008A72  6E57               	movwf	(?_printf+2)^0,c
  8926  008A74  6A58               	clrf	(?_printf+3)^0,c
  8927  008A76  0E00               	movlw	0
  8928  008A78  2258               	addwfc	(?_printf+3)^0,f,c
  8929  008A7A  EC3E  F044         	call	_printf	;wreg free
  8930                           
  8931                           ; BSR set to: 1
  8932  008A7E  0012               	return		;funcret
  8933  008A80                     __end_of_cmdGetRFCH:
  8934                           	opt callstack 0
  8935                           
  8936 ;; *************** function _cmdGetMode *****************
  8937 ;; Defined at:
  8938 ;;		line 553 in file "../app/app_src/application.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 3F/1
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;Total ram usage:        0 bytes
  8957 ;; Hardware stack levels used:    1
  8958 ;; Hardware stack levels required when called:   16
  8959 ;; This function calls:
  8960 ;;		_printf
  8961 ;; This function is called by:
  8962 ;;		_executeATCommand
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text43
  8967  008C72                     __ptext43:
  8968                           	opt callstack 0
  8969  008C72                     _cmdGetMode:
  8970                           	opt callstack 12
  8971                           
  8972                           ;../app/app_src/application.c: 555:   printf("MODE = REPEATER\r\n");
  8973                           
  8974                           ; BSR set to: 1
  8975                           ;incstack = 0
  8976  008C72  0E34               	movlw	low STR_31
  8977  008C74  6E55               	movwf	printf@fmt^0,c
  8978  008C76  0EFE               	movlw	high STR_31
  8979  008C78  6E56               	movwf	(printf@fmt+1)^0,c
  8980  008C7A  EC3E  F044         	call	_printf	;wreg free
  8981                           
  8982                           ; BSR set to: 1
  8983                           
  8984                           ;../app/app_src/application.c: 556:  }
  8985  008C7E  0012               	return		;funcret
  8986  008C80                     __end_of_cmdGetMode:
  8987                           	opt callstack 0
  8988                           
  8989 ;; *************** function _cmdGetCADRSSI *****************
  8990 ;; Defined at:
  8991 ;;		line 645 in file "../app/app_src/application.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 3F/1
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;Total ram usage:        0 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:   16
  9012 ;; This function calls:
  9013 ;;		_printf
  9014 ;; This function is called by:
  9015 ;;		_executeATCommand
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text44
  9020  008A80                     __ptext44:
  9021                           	opt callstack 0
  9022  008A80                     _cmdGetCADRSSI:
  9023                           	opt callstack 12
  9024                           
  9025                           ;../app/app_src/application.c: 646:  printf("CAD RSS=%i\r\n",RSSITarget);
  9026                           
  9027                           ; BSR set to: 1
  9028                           ;incstack = 0
  9029  008A80  0E80               	movlw	low STR_42
  9030  008A82  6E55               	movwf	printf@fmt^0,c
  9031  008A84  0EFE               	movlw	high STR_42
  9032  008A86  6E56               	movwf	(printf@fmt+1)^0,c
  9033  008A88  0100               	movlb	0	; () banked
  9034  008A8A  51F9               	movf	_RSSITarget& (0+255),w,b
  9035  008A8C  6E57               	movwf	(?_printf+2)^0,c
  9036  008A8E  6A58               	clrf	(?_printf+3)^0,c
  9037  008A90  BE57               	btfsc	(?_printf+2)^0,7,c
  9038  008A92  0658               	decf	(?_printf+3)^0,f,c
  9039  008A94  EC3E  F044         	call	_printf	;wreg free
  9040                           
  9041                           ; BSR set to: 1
  9042  008A98  0012               	return		;funcret
  9043  008A9A                     __end_of_cmdGetCADRSSI:
  9044                           	opt callstack 0
  9045                           
  9046 ;; *************** function _cmdGetCAD *****************
  9047 ;; Defined at:
  9048 ;;		line 530 in file "../app/app_src/application.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;		None
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      void 
  9055 ;; Registers used:
  9056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 3F/1
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;Total ram usage:        0 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:   16
  9069 ;; This function calls:
  9070 ;;		_printf
  9071 ;; This function is called by:
  9072 ;;		_executeATCommand
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text45
  9077  008BA6                     __ptext45:
  9078                           	opt callstack 0
  9079  008BA6                     _cmdGetCAD:
  9080                           	opt callstack 12
  9081                           
  9082                           ;../app/app_src/application.c: 531:  printf("CAD COUNTER = %02X\r\n",cadCounter);
  9083                           
  9084                           ; BSR set to: 1
  9085                           ;incstack = 0
  9086  008BA6  0E0D               	movlw	low STR_29
  9087  008BA8  6E55               	movwf	printf@fmt^0,c
  9088  008BAA  0EFE               	movlw	high STR_29
  9089  008BAC  6E56               	movwf	(printf@fmt+1)^0,c
  9090  008BAE  0060  F3B4  F057   	movff	_cadCounter,?_printf+2
  9091  008BB4  6A58               	clrf	(?_printf+3)^0,c
  9092  008BB6  EC3E  F044         	call	_printf	;wreg free
  9093                           
  9094                           ; BSR set to: 1
  9095  008BBA  0012               	return		;funcret
  9096  008BBC                     __end_of_cmdGetCAD:
  9097                           	opt callstack 0
  9098                           
  9099 ;; *************** function _cmdBootLoad *****************
  9100 ;; Defined at:
  9101 ;;		line 718 in file "../app/app_src/application.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;		None
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;		None
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9117 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;Total ram usage:        2 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:   16
  9122 ;; This function calls:
  9123 ;;		_DATAEE_WriteByte_Platform
  9124 ;;		_printf
  9125 ;; This function is called by:
  9126 ;;		_executeATCommand
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text46
  9131  00830E                     __ptext46:
  9132                           	opt callstack 0
  9133  00830E                     _cmdBootLoad:
  9134                           	opt callstack 12
  9135                           
  9136                           ;../app/app_src/application.c: 719:     DATAEE_WriteByte_Platform(0 + 0,0x00);
  9137                           
  9138                           ; BSR set to: 1
  9139                           ;incstack = 0
  9140  00830E  0E00               	movlw	0
  9141  008310  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  9142  008312  0E00               	movlw	0
  9143  008314  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  9144  008316  0E00               	movlw	0
  9145  008318  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
  9146  00831A  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
  9147                           
  9148                           ;../app/app_src/application.c: 720:     printf("OK\r\n");
  9149  00831E  0ED7               	movlw	low STR_13
  9150  008320  6E55               	movwf	printf@fmt^0,c
  9151  008322  0EFF               	movlw	high STR_13
  9152  008324  6E56               	movwf	(printf@fmt+1)^0,c
  9153  008326  EC3E  F044         	call	_printf	;wreg free
  9154                           
  9155                           ; BSR set to: 1
  9156                           ;../app/app_src/application.c: 721:     _delay((unsigned long)((1000)*(64000000/4000.0))
      +                          );
  9157  00832A  0E52               	movlw	82
  9158  00832C  0100               	movlb	0	; () banked
  9159  00832E  6F77               	movwf	(??_cmdBootLoad+1)& (0+255),b
  9160  008330  0E2B               	movlw	43
  9161  008332  6F76               	movwf	??_cmdBootLoad& (0+255),b
  9162  008334  0E00               	movlw	0
  9163  008336                     u17397:
  9164  008336  2EE8               	decfsz	wreg,f,c
  9165  008338  D7FE               	bra	u17397
  9166  00833A  2F76               	decfsz	??_cmdBootLoad& (0+255),f,b
  9167  00833C  D7FC               	bra	u17397
  9168  00833E  2F77               	decfsz	(??_cmdBootLoad+1)& (0+255),f,b
  9169  008340  D7FA               	bra	u17397
  9170  008342  F000               	nop	
  9171  008344  00FF               	reset		;# 
  9172  008346  0012               	return		;funcret
  9173  008348                     __end_of_cmdBootLoad:
  9174                           	opt callstack 0
  9175                           
  9176 ;; *************** function _cmdBcast *****************
  9177 ;; Defined at:
  9178 ;;		line 261 in file "../app/app_src/application.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;  cmd             2   22[BANK0 ] PTR unsigned char 
  9181 ;;		 -> atCommand(80), 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  buf_id          1   28[BANK0 ] unsigned char 
  9184 ;;  p2              3    0        PTR unsigned char 
  9185 ;;  p1              2   26[BANK0 ] PTR unsigned char 
  9186 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 3F/1
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9198 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9199 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9200 ;;Total ram usage:        7 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:   16
  9203 ;; This function calls:
  9204 ;;		_NWK_DataReq
  9205 ;;		_get_free_tx_buffer
  9206 ;;		_memcpy
  9207 ;;		_memset
  9208 ;;		_printf
  9209 ;;		_strlen
  9210 ;;		_strstr
  9211 ;; This function is called by:
  9212 ;;		_executeATCommand
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text47
  9217  002EE8                     __ptext47:
  9218                           	opt callstack 0
  9219  002EE8                     _cmdBcast:
  9220                           	opt callstack 12
  9221                           
  9222                           ;../app/app_src/application.c: 262:  char *p1,*p2;;../app/app_src/application.c: 264:  p
      +                          1 = strstr(cmd,"=") + 1;
  9223                           
  9224                           ;incstack = 0
  9225  002EE8  0060  F1D8  F00D   	movff	cmdBcast@cmd,strstr@h
  9226  002EEE  0060  F1DC  F00E   	movff	cmdBcast@cmd+1,strstr@h+1
  9227  002EF4  0EDF               	movlw	low (STR_18+3)
  9228  002EF6  6E0F               	movwf	strstr@n^0,c
  9229  002EF8  0EFF               	movlw	high (STR_18+3)
  9230  002EFA  6E10               	movwf	(strstr@n+1)^0,c
  9231  002EFC  ECCE  F02D         	call	_strstr	;wreg free
  9232  002F00  0E01               	movlw	1
  9233  002F02  240D               	addwf	?_strstr^0,w,c
  9234  002F04  0100               	movlb	0	; () banked
  9235  002F06  6F7A               	movwf	cmdBcast@p1& (0+255),b
  9236  002F08  0E00               	movlw	0
  9237  002F0A  200E               	addwfc	(?_strstr+1)^0,w,c
  9238  002F0C  6F7B               	movwf	(cmdBcast@p1+1)& (0+255),b
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;../app/app_src/application.c: 266:  if((!p1) || (strlen(p1) > 64)){
  9242  002F0E  517A               	movf	cmdBcast@p1& (0+255),w,b
  9243  002F10  117B               	iorwf	(cmdBcast@p1+1)& (0+255),w,b
  9244  002F12  B4D8               	btfsc	status,2,c
  9245  002F14  D00E               	goto	u16150
  9246                           
  9247                           ; BSR set to: 0
  9248  002F16  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9249  002F1C  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9250  002F22  EC3E  F03E         	call	_strlen	;wreg free
  9251  002F26  5003               	movf	(?_strlen+1)^0,w,c
  9252  002F28  E104               	bnz	u16150
  9253  002F2A  0E41               	movlw	65
  9254  002F2C  5C02               	subwf	?_strlen^0,w,c
  9255  002F2E  A0D8               	btfss	status,0,c
  9256  002F30  D009               	goto	l15923
  9257  002F32                     u16150:
  9258                           
  9259                           ;../app/app_src/application.c: 267:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  9260  002F32  0ECC               	movlw	low STR_4
  9261  002F34  6E55               	movwf	printf@fmt^0,c
  9262  002F36  0EFE               	movlw	high STR_4
  9263  002F38  6E56               	movwf	(printf@fmt+1)^0,c
  9264  002F3A  0E07               	movlw	7
  9265  002F3C  6E57               	movwf	(?_printf+2)^0,c
  9266  002F3E  EC3E  F044         	call	_printf	;wreg free
  9267                           
  9268                           ;../app/app_src/application.c: 268:  }
  9269  002F42  0012               	return	
  9270  002F44                     l15923:
  9271                           
  9272                           ;../app/app_src/application.c: 270:   uint8_t buf_id;;../app/app_src/application.c: 271:
      +                                   if(!get_free_tx_buffer(&buf_id)){
  9273  002F44  0E7C               	movlw	low cmdBcast@buf_id
  9274  002F46  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  9275  002F48  EC66  F03B         	call	_get_free_tx_buffer	;wreg free
  9276  002F4C  0900               	iorlw	0
  9277  002F4E  A4D8               	btfss	status,2,c
  9278  002F50  D009               	goto	l15929
  9279                           
  9280                           ;../app/app_src/application.c: 272:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  9281  002F52  0ECC               	movlw	low STR_4
  9282  002F54  6E55               	movwf	printf@fmt^0,c
  9283  002F56  0EFE               	movlw	high STR_4
  9284  002F58  6E56               	movwf	(printf@fmt+1)^0,c
  9285  002F5A  0E11               	movlw	17
  9286  002F5C  6E57               	movwf	(?_printf+2)^0,c
  9287  002F5E  EC3E  F044         	call	_printf	;wreg free
  9288  002F62  0012               	return	
  9289  002F64                     l15929:
  9290                           
  9291                           ;../app/app_src/application.c: 275:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  9292  002F64  0100               	movlb	0	; () banked
  9293  002F66  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9294  002F68  0D83               	mullw	131
  9295  002F6A  0E80               	movlw	low (_tx_buffer+22)
  9296  002F6C  24F3               	addwf	243,w,c
  9297  002F6E  6E02               	movwf	memset@dest^0,c
  9298  002F70  0E08               	movlw	high (_tx_buffer+22)
  9299  002F72  20F4               	addwfc	prodh,w,c
  9300  002F74  6E03               	movwf	(memset@dest+1)^0,c
  9301  002F76  0E00               	movlw	0
  9302  002F78  6E05               	movwf	(memset@c+1)^0,c
  9303  002F7A  0E00               	movlw	0
  9304  002F7C  6E04               	movwf	memset@c^0,c
  9305  002F7E  0E00               	movlw	0
  9306  002F80  6E07               	movwf	(memset@n+1)^0,c
  9307  002F82  0E6D               	movlw	109
  9308  002F84  6E06               	movwf	memset@n^0,c
  9309  002F86  EC32  F022         	call	_memset	;wreg free
  9310                           
  9311                           ;../app/app_src/application.c: 276:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  9312  002F8A  0100               	movlb	0	; () banked
  9313  002F8C  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9314  002F8E  0D83               	mullw	131
  9315  002F90  0E80               	movlw	low (_tx_buffer+22)
  9316  002F92  24F3               	addwf	243,w,c
  9317  002F94  6E08               	movwf	memcpy@d1^0,c
  9318  002F96  0E08               	movlw	high (_tx_buffer+22)
  9319  002F98  20F4               	addwfc	prodh,w,c
  9320  002F9A  6E09               	movwf	(memcpy@d1+1)^0,c
  9321  002F9C  0060  F1E8  F00A   	movff	cmdBcast@p1,memcpy@s1
  9322  002FA2  0060  F1EC  F00B   	movff	cmdBcast@p1+1,memcpy@s1+1
  9323  002FA8  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9324  002FAE  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9325  002FB4  EC3E  F03E         	call	_strlen	;wreg free
  9326  002FB8  0060  F008  F00C   	movff	?_strlen,memcpy@n
  9327  002FBE  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  9328  002FC4  ECEA  F039         	call	_memcpy	;wreg free
  9329                           
  9330                           ;../app/app_src/application.c: 277:   tx_buffer[buf_id].nwkDataReq.dstAddr = 0xffff;
  9331  002FC8  0100               	movlb	0	; () banked
  9332  002FCA  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9333  002FCC  0D83               	mullw	131
  9334  002FCE  0E72               	movlw	low (_tx_buffer+8)
  9335  002FD0  24F3               	addwf	243,w,c
  9336  002FD2  6ED9               	movwf	fsr2l,c
  9337  002FD4  0E08               	movlw	high (_tx_buffer+8)
  9338  002FD6  20F4               	addwfc	prodh,w,c
  9339  002FD8  6EDA               	movwf	fsr2h,c
  9340  002FDA  0EFF               	movlw	255
  9341  002FDC  6EDE               	movwf	postinc2,c
  9342  002FDE  0EFF               	movlw	255
  9343  002FE0  6EDD               	movwf	postdec2,c
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;../app/app_src/application.c: 278:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  9347  002FE2  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9348  002FE4  0D83               	mullw	131
  9349  002FE6  0E74               	movlw	low (_tx_buffer+10)
  9350  002FE8  24F3               	addwf	243,w,c
  9351  002FEA  6ED9               	movwf	fsr2l,c
  9352  002FEC  0E08               	movlw	high (_tx_buffer+10)
  9353  002FEE  20F4               	addwfc	prodh,w,c
  9354  002FF0  6EDA               	movwf	fsr2h,c
  9355  002FF2  0E01               	movlw	1
  9356  002FF4  6EDF               	movwf	indf2,c
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;../app/app_src/application.c: 279:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  9360  002FF6  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9361  002FF8  0D83               	mullw	131
  9362  002FFA  0E75               	movlw	low (_tx_buffer+11)
  9363  002FFC  24F3               	addwf	243,w,c
  9364  002FFE  6ED9               	movwf	fsr2l,c
  9365  003000  0E08               	movlw	high (_tx_buffer+11)
  9366  003002  20F4               	addwfc	prodh,w,c
  9367  003004  6EDA               	movwf	fsr2h,c
  9368  003006  0E01               	movlw	1
  9369  003008  6EDF               	movwf	indf2,c
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;../app/app_src/application.c: 280:         tx_buffer[buf_id].nwkDataReq.options = 0;
  9373  00300A  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9374  00300C  0D83               	mullw	131
  9375  00300E  0E76               	movlw	low (_tx_buffer+12)
  9376  003010  24F3               	addwf	243,w,c
  9377  003012  6ED9               	movwf	fsr2l,c
  9378  003014  0E08               	movlw	high (_tx_buffer+12)
  9379  003016  20F4               	addwfc	prodh,w,c
  9380  003018  6EDA               	movwf	fsr2h,c
  9381  00301A  0E00               	movlw	0
  9382  00301C  6EDF               	movwf	indf2,c
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;../app/app_src/application.c: 281:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  9386  00301E  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9387  003020  0D83               	mullw	131
  9388  003022  0E6A               	movlw	low _tx_buffer
  9389  003024  6F78               	movwf	??_cmdBcast& (0+255),b
  9390  003026  0E08               	movlw	high _tx_buffer
  9391  003028  6F79               	movwf	(??_cmdBcast+1)& (0+255),b
  9392  00302A  0E16               	movlw	22
  9393  00302C  2778               	addwf	??_cmdBcast& (0+255),f,b
  9394  00302E  0E00               	movlw	0
  9395  003030  2379               	addwfc	(??_cmdBcast+1)& (0+255),f,b
  9396  003032  50F3               	movf	243,w,c
  9397  003034  2778               	addwf	??_cmdBcast& (0+255),f,b
  9398  003036  50F4               	movf	244,w,c
  9399  003038  2379               	addwfc	(??_cmdBcast+1)& (0+255),f,b
  9400  00303A  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9401  00303C  0D83               	mullw	131
  9402  00303E  0E79               	movlw	low (_tx_buffer+15)
  9403  003040  24F3               	addwf	243,w,c
  9404  003042  6ED9               	movwf	fsr2l,c
  9405  003044  0E08               	movlw	high (_tx_buffer+15)
  9406  003046  20F4               	addwfc	prodh,w,c
  9407  003048  6EDA               	movwf	fsr2h,c
  9408  00304A  0060  F1E3  FFDE   	movff	??_cmdBcast,postinc2
  9409  003050  0060  F1E7  FFDD   	movff	??_cmdBcast+1,postdec2
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;../app/app_src/application.c: 282:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  9413  003056  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9414  003058  0D83               	mullw	131
  9415  00305A  0E7B               	movlw	low (_tx_buffer+17)
  9416  00305C  24F3               	addwf	243,w,c
  9417  00305E  6ED9               	movwf	fsr2l,c
  9418  003060  0E08               	movlw	high (_tx_buffer+17)
  9419  003062  20F4               	addwfc	prodh,w,c
  9420  003064  6EDA               	movwf	fsr2h,c
  9421  003066  0060  F1E8  F002   	movff	cmdBcast@p1,strlen@s
  9422  00306C  0060  F1EC  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9423  003072  EC3E  F03E         	call	_strlen	;wreg free
  9424  003076  5002               	movf	?_strlen^0,w,c
  9425  003078  6EDF               	movwf	indf2,c
  9426                           
  9427                           ;../app/app_src/application.c: 283:         tx_buffer[buf_id].nwkDataReq.confirm = (void
      +                          *)&appDataConf;
  9428  00307A  0100               	movlb	0	; () banked
  9429  00307C  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9430  00307E  0D83               	mullw	131
  9431  003080  0E7C               	movlw	low (_tx_buffer+18)
  9432  003082  24F3               	addwf	243,w,c
  9433  003084  6ED9               	movwf	fsr2l,c
  9434  003086  0E08               	movlw	high (_tx_buffer+18)
  9435  003088  20F4               	addwfc	prodh,w,c
  9436  00308A  6EDA               	movwf	fsr2h,c
  9437  00308C  0E9E               	movlw	low _appDataConf
  9438  00308E  6EDE               	movwf	postinc2,c
  9439  003090  0E88               	movlw	high _appDataConf
  9440  003092  6EDD               	movwf	postdec2,c
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;../app/app_src/application.c: 284:         tx_buffer[buf_id].msgid = msgIDCounter++;
  9444  003094  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9445  003096  0D83               	mullw	131
  9446  003098  0E6C               	movlw	low (_tx_buffer+2)
  9447  00309A  24F3               	addwf	243,w,c
  9448  00309C  6ED9               	movwf	fsr2l,c
  9449  00309E  0E08               	movlw	high (_tx_buffer+2)
  9450  0030A0  20F4               	addwfc	prodh,w,c
  9451  0030A2  6EDA               	movwf	fsr2h,c
  9452  0030A4  0060  F3CB  FFDF   	movff	_msgIDCounter,indf2
  9453                           
  9454                           ; BSR set to: 0
  9455  0030AA  2BF2               	incf	_msgIDCounter& (0+255),f,b
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;../app/app_src/application.c: 285:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  9459  0030AC  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9460  0030AE  0D83               	mullw	131
  9461  0030B0  0E6D               	movlw	low (_tx_buffer+3)
  9462  0030B2  24F3               	addwf	243,w,c
  9463  0030B4  6E02               	movwf	NWK_DataReq@req^0,c
  9464  0030B6  0E08               	movlw	high (_tx_buffer+3)
  9465  0030B8  20F4               	addwfc	prodh,w,c
  9466  0030BA  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  9467  0030BC  EC6C  F039         	call	_NWK_DataReq	;wreg free
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;../app/app_src/application.c: 286:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  9471  0030C0  0ED0               	movlw	low (STR_4+4)
  9472  0030C2  6E55               	movwf	printf@fmt^0,c
  9473  0030C4  0EFE               	movlw	high (STR_4+4)
  9474  0030C6  6E56               	movwf	(printf@fmt+1)^0,c
  9475  0030C8  517C               	movf	cmdBcast@buf_id& (0+255),w,b
  9476  0030CA  0D83               	mullw	131
  9477  0030CC  0E6C               	movlw	low (_tx_buffer+2)
  9478  0030CE  24F3               	addwf	243,w,c
  9479  0030D0  6ED9               	movwf	fsr2l,c
  9480  0030D2  0E08               	movlw	high (_tx_buffer+2)
  9481  0030D4  20F4               	addwfc	prodh,w,c
  9482  0030D6  6EDA               	movwf	fsr2h,c
  9483  0030D8  50DF               	movf	indf2,w,c
  9484  0030DA  6F78               	movwf	??_cmdBcast& (0+255),b
  9485  0030DC  5178               	movf	??_cmdBcast& (0+255),w,b
  9486  0030DE  6E57               	movwf	(?_printf+2)^0,c
  9487  0030E0  6A58               	clrf	(?_printf+3)^0,c
  9488  0030E2  EC3E  F044         	call	_printf	;wreg free
  9489                           
  9490                           ; BSR set to: 1
  9491  0030E6  0012               	return		;funcret
  9492  0030E8                     __end_of_cmdBcast:
  9493                           	opt callstack 0
  9494                           
  9495 ;; *************** function _strstr *****************
  9496 ;; Defined at:
  9497 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strstr.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  h               2   12[COMRAM] PTR const unsigned char 
  9500 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9501 ;;  n               2   14[COMRAM] PTR const unsigned char 
  9502 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9503 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9504 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9505 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9506 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9507 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9508 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9509 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9510 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9511 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9512 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9513 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  nl              2   16[COMRAM] unsigned int 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  2   12[COMRAM] PTR unsigned char 
  9518 ;; Registers used:
  9519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;Total ram usage:        6 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:    8
  9532 ;; This function calls:
  9533 ;;		_strchr
  9534 ;;		_strlen
  9535 ;;		_strncmp
  9536 ;; This function is called by:
  9537 ;;		_cmdSend
  9538 ;;		_cmdBcast
  9539 ;;		_cmdSetAddr
  9540 ;;		_cmdSetNaddr
  9541 ;;		_cmdSetAES
  9542 ;;		_cmdSetRFCH
  9543 ;;		_cmdSetTX
  9544 ;;		_cmdSetCADRSSI
  9545 ;;		_cmdSetParity
  9546 ;;		_cmdSetSF
  9547 ;;		_executeATCommand
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text48
  9552  005B9C                     __ptext48:
  9553                           	opt callstack 0
  9554  005B9C                     _strstr:
  9555                           	opt callstack 20
  9556                           
  9557                           ; BSR set to: 1
  9558                           ;incstack = 0
  9559  005B9C  500F               	movf	strstr@n^0,w,c
  9560  005B9E  1010               	iorwf	(strstr@n+1)^0,w,c
  9561  005BA0  B4D8               	btfsc	status,2,c
  9562  005BA2  D063               	goto	u15480
  9563  005BA4  0060  F03C  F002   	movff	strstr@n,strlen@s
  9564  005BAA  0060  F040  F003   	movff	strstr@n+1,strlen@s+1
  9565  005BB0  EC3E  F03E         	call	_strlen	;wreg free
  9566  005BB4  0060  F008  F011   	movff	?_strlen,strstr@nl
  9567  005BBA  0060  F00C  F012   	movff	?_strlen+1,strstr@nl+1
  9568  005BC0  D038               	goto	l15495
  9569  005BC2                     l15487:
  9570  005BC2  0060  F034  F002   	movff	strstr@h,strncmp@_l
  9571  005BC8  0060  F038  F003   	movff	strstr@h+1,strncmp@_l+1
  9572  005BCE  0060  F03C  F004   	movff	strstr@n,strncmp@_r
  9573  005BD4  0060  F040  F005   	movff	strstr@n+1,strncmp@_r+1
  9574  005BDA  0060  F044  F006   	movff	strstr@nl,strncmp@n
  9575  005BE0  0060  F048  F007   	movff	strstr@nl+1,strncmp@n+1
  9576  005BE6  EC0A  F027         	call	_strncmp	;wreg free
  9577  005BEA  5002               	movf	?_strncmp^0,w,c
  9578  005BEC  1003               	iorwf	(?_strncmp+1)^0,w,c
  9579  005BEE  A4D8               	btfss	status,2,c
  9580  005BF0  D007               	goto	l15493
  9581  005BF2  0060  F034  F00D   	movff	strstr@h,?_strstr
  9582  005BF8  0060  F038  F00E   	movff	strstr@h+1,?_strstr+1
  9583  005BFE  0012               	return	
  9584  005C00                     l15493:
  9585  005C00  0E01               	movlw	1
  9586  005C02  240D               	addwf	strstr@h^0,w,c
  9587  005C04  6E02               	movwf	strchr@s^0,c
  9588  005C06  0E00               	movlw	0
  9589  005C08  200E               	addwfc	(strstr@h+1)^0,w,c
  9590  005C0A  6E03               	movwf	(strchr@s+1)^0,c
  9591  005C0C  0060  F03F  FFF6   	movff	strstr@n,tblptrl
  9592  005C12  0060  F043  FFF7   	movff	strstr@n+1,tblptrh
  9593  005C18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9594  005C18  6AF8               	clrf	tblptru,c
  9595  005C1A                     	endif
  9596  005C1A                     	if	0	;tblptru may be non-zero
  9597  005C1A                     	endif
  9598  005C1A  0008               	tblrd		*
  9599  005C1C  50F5               	movf	tablat,w,c
  9600  005C1E  6E04               	movwf	strchr@c^0,c
  9601  005C20  6A05               	clrf	(strchr@c+1)^0,c
  9602  005C22  EC66  F038         	call	_strchr	;wreg free
  9603  005C26  0060  F008  F00D   	movff	?_strchr,strstr@h
  9604  005C2C  0060  F00C  F00E   	movff	?_strchr+1,strstr@h+1
  9605  005C32                     l15495:
  9606  005C32  500D               	movf	strstr@h^0,w,c
  9607  005C34  100E               	iorwf	(strstr@h+1)^0,w,c
  9608  005C36  B4D8               	btfsc	status,2,c
  9609  005C38  D018               	goto	u15480
  9610  005C3A  0060  F037  FFF6   	movff	strstr@h,tblptrl
  9611  005C40  0060  F03B  FFF7   	movff	strstr@h+1,tblptrh
  9612  005C46  0E00               	movlw	low (__mediumconst shr (0+16))
  9613  005C48  6EF8               	movwf	tblptru,c
  9614  005C4A  0E0F               	movlw	(high __ramtop+-1)
  9615  005C4C  64F7               	cpfsgt	tblptrh,c
  9616  005C4E  D003               	bra	u15477
  9617  005C50  0008               	tblrd		*
  9618  005C52  50F5               	movf	tablat,w,c
  9619  005C54  D007               	bra	u15470
  9620  005C56                     u15477:
  9621  005C56  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9622  005C5C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9623  005C62  50EF               	movf	indf0,w,c
  9624  005C64                     u15470:
  9625  005C64  0900               	iorlw	0
  9626  005C66  A4D8               	btfss	status,2,c
  9627  005C68  D7AC               	goto	l15487
  9628  005C6A                     u15480:
  9629  005C6A  0E00               	movlw	0
  9630  005C6C  6E0D               	movwf	?_strstr^0,c
  9631  005C6E  0E00               	movlw	0
  9632  005C70  6E0E               	movwf	(?_strstr+1)^0,c
  9633  005C72  0012               	return		;funcret
  9634  005C74                     __end_of_strstr:
  9635                           	opt callstack 0
  9636                           
  9637 ;; *************** function _strncmp *****************
  9638 ;; Defined at:
  9639 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  9642 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9643 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  9644 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9645 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9646 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9647 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9648 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9649 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9650 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9651 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9652 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9653 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9654 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9655 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9656 ;;  n               2    5[COMRAM] unsigned int 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  r               2   10[COMRAM] PTR const unsigned char 
  9659 ;;		 -> STR_129(10), STR_127(10), STR_125(6), STR_123(6), 
  9660 ;;		 -> STR_121(7), STR_119(5), STR_117(7), STR_115(7), 
  9661 ;;		 -> STR_113(6), STR_111(9), STR_109(8), STR_107(8), 
  9662 ;;		 -> STR_105(7), STR_103(6), STR_101(3), STR_99(9), 
  9663 ;;		 -> STR_97(7), STR_95(7), STR_93(10), STR_91(10), 
  9664 ;;		 -> STR_89(15), STR_87(13), STR_85(9), STR_83(7), 
  9665 ;;		 -> STR_81(7), STR_79(10), STR_77(7), STR_75(8), 
  9666 ;;		 -> STR_73(11), STR_71(5), STR_69(5), STR_67(7), 
  9667 ;;		 -> STR_65(9), STR_63(7), STR_57(2), STR_51(6), 
  9668 ;;		 -> STR_49(6), STR_47(5), STR_43(2), STR_38(2), 
  9669 ;;		 -> STR_34(2), STR_25(2), STR_22(2), STR_16(2), 
  9670 ;;		 -> STR_12(2), STR_7(2), STR_3(2), STR_2(2), 
  9671 ;;  l               2    8[COMRAM] PTR const unsigned char 
  9672 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  2    1[COMRAM] int 
  9675 ;; Registers used:
  9676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9682 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;Total ram usage:       11 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    7
  9689 ;; This function calls:
  9690 ;;		Nothing
  9691 ;; This function is called by:
  9692 ;;		_strstr
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text49
  9697  004E14                     __ptext49:
  9698                           	opt callstack 0
  9699  004E14                     _strncmp:
  9700                           	opt callstack 20
  9701                           
  9702                           ;incstack = 0
  9703  004E14  0060  F008  F009   	movff	strncmp@_l,strncmp@l
  9704  004E1A  0060  F00C  F00A   	movff	strncmp@_l+1,strncmp@l+1
  9705  004E20  0060  F010  F00B   	movff	strncmp@_r,strncmp@r
  9706  004E26  0060  F014  F00C   	movff	strncmp@_r+1,strncmp@r+1
  9707  004E2C  0606               	decf	strncmp@n^0,f,c
  9708  004E2E  A0D8               	btfss	status,0,c
  9709  004E30  0607               	decf	(strncmp@n+1)^0,f,c
  9710  004E32  2806               	incf	strncmp@n^0,w,c
  9711  004E34  E10F               	bnz	l11201
  9712  004E36  2807               	incf	(strncmp@n+1)^0,w,c
  9713  004E38  A4D8               	btfss	status,2,c
  9714  004E3A  D00C               	goto	l11201
  9715  004E3C  0E00               	movlw	0
  9716  004E3E  6E03               	movwf	(?_strncmp+1)^0,c
  9717  004E40  0E00               	movlw	0
  9718  004E42  6E02               	movwf	?_strncmp^0,c
  9719  004E44  0012               	return	
  9720  004E46                     l11199:
  9721  004E46  4A09               	infsnz	strncmp@l^0,f,c
  9722  004E48  2A0A               	incf	(strncmp@l+1)^0,f,c
  9723  004E4A  4A0B               	infsnz	strncmp@r^0,f,c
  9724  004E4C  2A0C               	incf	(strncmp@r+1)^0,f,c
  9725  004E4E  0606               	decf	strncmp@n^0,f,c
  9726  004E50  A0D8               	btfss	status,0,c
  9727  004E52  0607               	decf	(strncmp@n+1)^0,f,c
  9728  004E54                     l11201:
  9729  004E54  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9730  004E5A  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9731  004E60  0E00               	movlw	low (__mediumconst shr (0+16))
  9732  004E62  6EF8               	movwf	tblptru,c
  9733  004E64  0E0F               	movlw	(high __ramtop+-1)
  9734  004E66  64F7               	cpfsgt	tblptrh,c
  9735  004E68  D003               	bra	u9727
  9736  004E6A  0008               	tblrd		*
  9737  004E6C  50F5               	movf	tablat,w,c
  9738  004E6E  D007               	bra	u9720
  9739  004E70                     u9727:
  9740  004E70  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9741  004E76  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9742  004E7C  50EF               	movf	indf0,w,c
  9743  004E7E                     u9720:
  9744  004E7E  0900               	iorlw	0
  9745  004E80  B4D8               	btfsc	status,2,c
  9746  004E82  D033               	goto	u9760
  9747  004E84  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9748  004E8A  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9749  004E90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9750  004E90  6AF8               	clrf	tblptru,c
  9751  004E92                     	endif
  9752  004E92                     	if	0	;tblptru may be non-zero
  9753  004E92                     	endif
  9754  004E92  0008               	tblrd		*
  9755  004E94  50F5               	movf	tablat,w,c
  9756  004E96  0900               	iorlw	0
  9757  004E98  B4D8               	btfsc	status,2,c
  9758  004E9A  D027               	goto	u9760
  9759  004E9C  5006               	movf	strncmp@n^0,w,c
  9760  004E9E  1007               	iorwf	(strncmp@n+1)^0,w,c
  9761  004EA0  B4D8               	btfsc	status,2,c
  9762  004EA2  D023               	goto	u9760
  9763  004EA4  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9764  004EAA  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9765  004EB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9766  004EB0  6AF8               	clrf	tblptru,c
  9767  004EB2                     	endif
  9768  004EB2                     	if	0	;tblptru may be non-zero
  9769  004EB2                     	endif
  9770  004EB2  0008               	tblrd		*
  9771  004EB4  006F FFD4  F008    	movff	tablat,??_strncmp
  9772  004EBA  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9773  004EC0  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9774  004EC6  0E00               	movlw	low (__mediumconst shr (0+16))
  9775  004EC8  6EF8               	movwf	tblptru,c
  9776  004ECA  0E0F               	movlw	(high __ramtop+-1)
  9777  004ECC  64F7               	cpfsgt	tblptrh,c
  9778  004ECE  D003               	bra	u9767
  9779  004ED0  0008               	tblrd		*
  9780  004ED2  50F5               	movf	tablat,w,c
  9781  004ED4  D007               	bra	u9765
  9782  004ED6                     u9767:
  9783  004ED6  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9784  004EDC  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9785  004EE2  50EF               	movf	indf0,w,c
  9786  004EE4                     u9765:
  9787  004EE4  1808               	xorwf	??_strncmp^0,w,c
  9788  004EE6  B4D8               	btfsc	status,2,c
  9789  004EE8  D7AE               	goto	l11199
  9790  004EEA                     u9760:
  9791  004EEA  0060  F027  FFF6   	movff	strncmp@l,tblptrl
  9792  004EF0  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
  9793  004EF6  0E00               	movlw	low (__mediumconst shr (0+16))
  9794  004EF8  6EF8               	movwf	tblptru,c
  9795  004EFA  0E0F               	movlw	(high __ramtop+-1)
  9796  004EFC  64F7               	cpfsgt	tblptrh,c
  9797  004EFE  D003               	bra	u9777
  9798  004F00  0008               	tblrd		*
  9799  004F02  50F5               	movf	tablat,w,c
  9800  004F04  D007               	bra	u9770
  9801  004F06                     u9777:
  9802  004F06  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9803  004F0C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9804  004F12  50EF               	movf	indf0,w,c
  9805  004F14                     u9770:
  9806  004F14  6E08               	movwf	??_strncmp^0,c
  9807  004F16  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
  9808  004F1C  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
  9809  004F22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9810  004F22  6AF8               	clrf	tblptru,c
  9811  004F24                     	endif
  9812  004F24                     	if	0	;tblptru may be non-zero
  9813  004F24                     	endif
  9814  004F24  0008               	tblrd		*
  9815  004F26  50F5               	movf	tablat,w,c
  9816  004F28  5C08               	subwf	??_strncmp^0,w,c
  9817  004F2A  6E02               	movwf	?_strncmp^0,c
  9818  004F2C  6A03               	clrf	(?_strncmp+1)^0,c
  9819  004F2E  A0D8               	btfss	status,0,c
  9820  004F30  0603               	decf	(?_strncmp+1)^0,f,c
  9821  004F32  0012               	return		;funcret
  9822  004F34                     __end_of_strncmp:
  9823                           	opt callstack 0
  9824                           
  9825 ;; *************** function _strchr *****************
  9826 ;; Defined at:
  9827 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strchr.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  s               2    1[COMRAM] PTR const unsigned char 
  9830 ;;		 -> STR_55(2), STR_54(2), atCommand(80), NULL(0), 
  9831 ;;  c               2    3[COMRAM] int 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  2    1[COMRAM] PTR unsigned char 
  9836 ;; Registers used:
  9837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;Total ram usage:        6 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    7
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_strstr
  9854 ;;		_strcspn
  9855 ;;		_strspn
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           	psect	text50
  9860  0070CC                     __ptext50:
  9861                           	opt callstack 0
  9862  0070CC                     _strchr:
  9863                           	opt callstack 20
  9864                           
  9865                           ;incstack = 0
  9866  0070CC  0060  F00B  FFF6   	movff	strchr@s,tblptrl
  9867  0070D2  0060  F00F  FFF7   	movff	strchr@s+1,tblptrh
  9868  0070D8  0E00               	movlw	low (__mediumconst shr (0+16))
  9869  0070DA  6EF8               	movwf	tblptru,c
  9870  0070DC  0E0F               	movlw	(high __ramtop+-1)
  9871  0070DE  64F7               	cpfsgt	tblptrh,c
  9872  0070E0  D003               	bra	u9037
  9873  0070E2  0008               	tblrd		*
  9874  0070E4  50F5               	movf	tablat,w,c
  9875  0070E6  D007               	bra	u9030
  9876  0070E8                     u9037:
  9877  0070E8  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9878  0070EE  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9879  0070F4  50EF               	movf	indf0,w,c
  9880  0070F6                     u9030:
  9881  0070F6  1804               	xorwf	strchr@c^0,w,c
  9882  0070F8  A4D8               	btfss	status,2,c
  9883  0070FA  D007               	goto	l10655
  9884  0070FC  0060  F008  F002   	movff	strchr@s,?_strchr
  9885  007102  0060  F00C  F003   	movff	strchr@s+1,?_strchr+1
  9886  007108  0012               	return	
  9887  00710A                     l10655:
  9888  00710A  5002               	movf	strchr@s^0,w,c
  9889  00710C  6E06               	movwf	??_strchr^0,c
  9890  00710E  5003               	movf	(strchr@s+1)^0,w,c
  9891  007110  6E07               	movwf	(??_strchr+1)^0,c
  9892  007112  4A02               	infsnz	strchr@s^0,f,c
  9893  007114  2A03               	incf	(strchr@s+1)^0,f,c
  9894  007116  0060  F01B  FFF6   	movff	??_strchr,tblptrl
  9895  00711C  0060  F01F  FFF7   	movff	??_strchr+1,tblptrh
  9896  007122  0E00               	movlw	low (__mediumconst shr (0+16))
  9897  007124  6EF8               	movwf	tblptru,c
  9898  007126  0E0F               	movlw	(high __ramtop+-1)
  9899  007128  64F7               	cpfsgt	tblptrh,c
  9900  00712A  D003               	bra	u9057
  9901  00712C  0008               	tblrd		*
  9902  00712E  50F5               	movf	tablat,w,c
  9903  007130  D007               	bra	u9050
  9904  007132                     u9057:
  9905  007132  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9906  007138  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9907  00713E  50EF               	movf	indf0,w,c
  9908  007140                     u9050:
  9909  007140  0900               	iorlw	0
  9910  007142  A4D8               	btfss	status,2,c
  9911  007144  D7C3               	goto	_strchr
  9912  007146  0E00               	movlw	0
  9913  007148  6E02               	movwf	?_strchr^0,c
  9914  00714A  0E00               	movlw	0
  9915  00714C  6E03               	movwf	(?_strchr+1)^0,c
  9916  00714E  0012               	return		;funcret
  9917  007150                     __end_of_strchr:
  9918                           	opt callstack 0
  9919                           
  9920 ;; *************** function _get_free_tx_buffer *****************
  9921 ;; Defined at:
  9922 ;;		line 58 in file "../app/app_src/application.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
  9925 ;;		 -> cmdBcast@buf_id(1), cmdSend@buf_id(1), 
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;		None
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      _Bool 
  9930 ;; Registers used:
  9931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9937 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9941 ;;Total ram usage:        2 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:    7
  9944 ;; This function calls:
  9945 ;;		Nothing
  9946 ;; This function is called by:
  9947 ;;		_cmdSend
  9948 ;;		_cmdBcast
  9949 ;; This function uses a non-reentrant model
  9950 ;;
  9951                           
  9952                           	psect	text51
  9953  0076CC                     __ptext51:
  9954                           	opt callstack 0
  9955  0076CC                     _get_free_tx_buffer:
  9956                           	opt callstack 20
  9957                           
  9958                           ;../app/app_src/application.c: 59:     *buf_id = 0;
  9959                           
  9960                           ;incstack = 0
  9961  0076CC  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9962  0076CE  6ED9               	movwf	fsr2l,c
  9963  0076D0  6ADA               	clrf	fsr2h,c
  9964  0076D2  0E00               	movlw	0
  9965  0076D4  6EDF               	movwf	indf2,c
  9966                           
  9967                           ;../app/app_src/application.c: 60:     while(*buf_id < 4){
  9968  0076D6  D023               	goto	l206
  9969  0076D8                     l11355:
  9970                           
  9971                           ;../app/app_src/application.c: 61:         if(tx_buffer[*buf_id].free){
  9972  0076D8  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9973  0076DA  6ED9               	movwf	fsr2l,c
  9974  0076DC  6ADA               	clrf	fsr2h,c
  9975  0076DE  50DF               	movf	indf2,w,c
  9976  0076E0  6E03               	movwf	??_get_free_tx_buffer^0,c
  9977  0076E2  5003               	movf	??_get_free_tx_buffer^0,w,c
  9978  0076E4  0D83               	mullw	131
  9979  0076E6  0E6A               	movlw	low _tx_buffer
  9980  0076E8  24F3               	addwf	243,w,c
  9981  0076EA  6ED9               	movwf	fsr2l,c
  9982  0076EC  0E08               	movlw	high _tx_buffer
  9983  0076EE  20F4               	addwfc	prodh,w,c
  9984  0076F0  6EDA               	movwf	fsr2h,c
  9985  0076F2  A4DF               	btfss	indf2,2,c
  9986  0076F4  D010               	goto	l11363
  9987                           
  9988                           ;../app/app_src/application.c: 62:             tx_buffer[*buf_id].free = 0;
  9989  0076F6  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
  9990  0076F8  6ED9               	movwf	fsr2l,c
  9991  0076FA  6ADA               	clrf	fsr2h,c
  9992  0076FC  50DF               	movf	indf2,w,c
  9993  0076FE  6E03               	movwf	??_get_free_tx_buffer^0,c
  9994  007700  5003               	movf	??_get_free_tx_buffer^0,w,c
  9995  007702  0D83               	mullw	131
  9996  007704  0E6A               	movlw	low _tx_buffer
  9997  007706  24F3               	addwf	243,w,c
  9998  007708  6ED9               	movwf	fsr2l,c
  9999  00770A  0E08               	movlw	high _tx_buffer
 10000  00770C  20F4               	addwfc	prodh,w,c
 10001  00770E  6EDA               	movwf	fsr2h,c
 10002  007710  94DF               	bcf	indf2,2,c
 10003                           
 10004                           ;../app/app_src/application.c: 63:             return 1;
 10005  007712  0E01               	movlw	1
 10006  007714  0012               	return	
 10007  007716                     l11363:
 10008                           
 10009                           ;../app/app_src/application.c: 65:         (*buf_id)++;
 10010  007716  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10011  007718  6ED9               	movwf	fsr2l,c
 10012  00771A  6ADA               	clrf	fsr2h,c
 10013  00771C  2ADF               	incf	indf2,f,c
 10014  00771E                     l206:
 10015                           
 10016                           ;../app/app_src/application.c: 60:     while(*buf_id < 4){
 10017  00771E  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10018  007720  6ED9               	movwf	fsr2l,c
 10019  007722  6ADA               	clrf	fsr2h,c
 10020  007724  0E03               	movlw	3
 10021  007726  64DF               	cpfsgt	indf2,c
 10022  007728  D7D7               	goto	l11355
 10023                           
 10024                           ;../app/app_src/application.c: 67:     return 0;
 10025  00772A  0E00               	movlw	0
 10026  00772C  0012               	return		;funcret
 10027  00772E                     __end_of_get_free_tx_buffer:
 10028                           	opt callstack 0
 10029                           
 10030 ;; *************** function _NWK_DataReq *****************
 10031 ;; Defined at:
 10032 ;;		line 87 in file "../nwk/nwk_src/nwkDataReq.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 10035 ;;		 -> tx_buffer(524), 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;		None
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10042 ;; Tracked objects:
 10043 ;;		On entry : 3F/0
 10044 ;;		On exit  : 3F/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;Total ram usage:        2 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    7
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_cmdSend
 10058 ;;		_cmdBcast
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text52
 10063  0072D8                     __ptext52:
 10064                           	opt callstack 0
 10065  0072D8                     _NWK_DataReq:
 10066                           	opt callstack 20
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;../nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);../nwk/nwk_src/nw
      +                          kDataReq.c: 88: {;../nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INI
      +                          TIAL;
 10070                           
 10071                           ;incstack = 0
 10072  0072D8  EE20 F004          	lfsr	2,4
 10073  0072DC  5002               	movf	NWK_DataReq@req^0,w,c
 10074  0072DE  26D9               	addwf	fsr2l,f,c
 10075  0072E0  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10076  0072E2  22DA               	addwfc	fsr2h,f,c
 10077  0072E4  0E00               	movlw	0
 10078  0072E6  6EDF               	movwf	indf2,c
 10079                           
 10080                           ;../nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 10081  0072E8  EE20 F011          	lfsr	2,17
 10082  0072EC  5002               	movf	NWK_DataReq@req^0,w,c
 10083  0072EE  26D9               	addwf	fsr2l,f,c
 10084  0072F0  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10085  0072F2  22DA               	addwfc	fsr2h,f,c
 10086  0072F4  0E00               	movlw	0
 10087  0072F6  6EDF               	movwf	indf2,c
 10088                           
 10089                           ;../nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
 10090  0072F8  EE20 F002          	lfsr	2,2
 10091  0072FC  5002               	movf	NWK_DataReq@req^0,w,c
 10092  0072FE  26D9               	addwf	fsr2l,f,c
 10093  007300  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10094  007302  22DA               	addwfc	fsr2h,f,c
 10095  007304  0E00               	movlw	0
 10096  007306  6EDE               	movwf	postinc2,c
 10097  007308  0E00               	movlw	0
 10098  00730A  6EDD               	movwf	postdec2,c
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;../nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 10102  00730C  0101               	movlb	1	; () banked
 10103  00730E  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 10104  007310  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 10105                           
 10106                           ; BSR set to: 1
 10107                           ;../nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
 10108  007312  0100               	movlb	0	; () banked
 10109  007314  51E2               	movf	_nwkDataReqQueue& (0+255),w,b
 10110  007316  11E3               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 10111  007318  A4D8               	btfss	status,2,c
 10112  00731A  D011               	goto	l11433
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;../nwk/nwk_src/nwkDataReq.c: 96:   {;../nwk/nwk_src/nwkDataReq.c: 97:     req->next = (
      +                          (void*)0);
 10116  00731C  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10117  007322  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10118  007328  0E00               	movlw	0
 10119  00732A  6EDE               	movwf	postinc2,c
 10120  00732C  0E00               	movlw	0
 10121  00732E  6EDD               	movwf	postdec2,c
 10122  007330                     l11431:
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;../nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 10126  007330  0060  F008  F0E2   	movff	NWK_DataReq@req,_nwkDataReqQueue
 10127  007336  0060  F00C  F0E3   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 10128                           
 10129                           ;../nwk/nwk_src/nwkDataReq.c: 99:   }
 10130  00733C  0012               	return	
 10131  00733E                     l11433:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;../nwk/nwk_src/nwkDataReq.c: 101:   {;../nwk/nwk_src/nwkDataReq.c: 102:     req->next =
      +                           nwkDataReqQueue;
 10135  00733E  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10136  007344  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10137  00734A  0060  F38B  FFDE   	movff	_nwkDataReqQueue,postinc2
 10138  007350  0060  F38F  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 10139  007356  D7EC               	goto	l11431
 10140  007358                     __end_of_NWK_DataReq:
 10141                           	opt callstack 0
 10142                           
 10143 ;; *************** function _cmdAddr *****************
 10144 ;; Defined at:
 10145 ;;		line 297 in file "../app/app_src/application.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;		None
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;		None
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  1    wreg      void 
 10152 ;; Registers used:
 10153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10154 ;; Tracked objects:
 10155 ;;		On entry : 0/0
 10156 ;;		On exit  : 3F/1
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;Total ram usage:        0 bytes
 10164 ;; Hardware stack levels used:    1
 10165 ;; Hardware stack levels required when called:   16
 10166 ;; This function calls:
 10167 ;;		_printf
 10168 ;; This function is called by:
 10169 ;;		_executeATCommand
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text53
 10174  0089EC                     __ptext53:
 10175                           	opt callstack 0
 10176  0089EC                     _cmdAddr:
 10177                           	opt callstack 12
 10178                           
 10179                           ;../app/app_src/application.c: 298:  printf("ADDR=%02X%02X\r\n",currentAddr0,currentAddr
      +                          1);
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;incstack = 0
 10183  0089EC  0E46               	movlw	low STR_11
 10184  0089EE  6E55               	movwf	printf@fmt^0,c
 10185  0089F0  0EFE               	movlw	high STR_11
 10186  0089F2  6E56               	movwf	(printf@fmt+1)^0,c
 10187  0089F4  0060  F3F0  F057   	movff	_currentAddr0,?_printf+2
 10188  0089FA  6A58               	clrf	(?_printf+3)^0,c
 10189  0089FC  0060  F3EC  F059   	movff	_currentAddr1,?_printf+4
 10190  008A02  6A5A               	clrf	(?_printf+5)^0,c
 10191  008A04  EC3E  F044         	call	_printf	;wreg free
 10192                           
 10193                           ; BSR set to: 1
 10194  008A08  0012               	return		;funcret
 10195  008A0A                     __end_of_cmdAddr:
 10196                           	opt callstack 0
 10197                           
 10198 ;; *************** function _UART1_is_rx_ready *****************
 10199 ;; Defined at:
 10200 ;;		line 169 in file "mcc_generated_files/uart1.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      _Bool 
 10207 ;; Registers used:
 10208 ;;		wreg, status,2
 10209 ;; Tracked objects:
 10210 ;;		On entry : 3F/0
 10211 ;;		On exit  : 3F/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;Total ram usage:        0 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:    7
 10221 ;; This function calls:
 10222 ;;		Nothing
 10223 ;; This function is called by:
 10224 ;;		_processATCommand
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text54
 10229  008C80                     __ptext54:
 10230                           	opt callstack 0
 10231  008C80                     _UART1_is_rx_ready:
 10232                           	opt callstack 22
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 10236                           
 10237                           ; BSR set to: 1
 10238                           ;incstack = 0
 10239  008C80  51E6               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10240  008C82  B4D8               	btfsc	status,2,c
 10241  008C84  D002               	goto	u11710
 10242  008C86  0E01               	movlw	1
 10243  008C88  0012               	return	
 10244  008C8A                     u11710:
 10245  008C8A  0E00               	movlw	0
 10246                           
 10247                           ; BSR set to: 0
 10248  008C8C  0012               	return		;funcret
 10249  008C8E                     __end_of_UART1_is_rx_ready:
 10250                           	opt callstack 0
 10251                           
 10252 ;; *************** function _UART1_Read *****************
 10253 ;; Defined at:
 10254 ;;		line 188 in file "mcc_generated_files/uart1.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;		None
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;  readValue       1    1[COMRAM] unsigned char 
 10259 ;; Return value:  Size  Location     Type
 10260 ;;                  1    wreg      unsigned char 
 10261 ;; Registers used:
 10262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10263 ;; Tracked objects:
 10264 ;;		On entry : 3F/0
 10265 ;;		On exit  : 3F/39
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10272 ;;Total ram usage:        1 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:    7
 10275 ;; This function calls:
 10276 ;;		Nothing
 10277 ;; This function is called by:
 10278 ;;		_processATCommand
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           	psect	text55
 10283  007E90                     __ptext55:
 10284                           	opt callstack 0
 10285  007E90                     _UART1_Read:
 10286                           	opt callstack 22
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 10293                           
 10294                           ; BSR set to: 0
 10295                           ;incstack = 0
 10296  007E90  51E6               	movf	_uart1RxCount& (0+255),w,b	;volatile
 10297  007E92  B4D8               	btfsc	status,2,c
 10298  007E94  D7FD               	goto	_UART1_Read
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10302  007E96  0E28               	movlw	low _uart1RxStatusBuffer
 10303  007E98  25E7               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10304  007E9A  6ED9               	movwf	fsr2l,c
 10305  007E9C  6ADA               	clrf	fsr2h,c
 10306  007E9E  0E01               	movlw	high _uart1RxStatusBuffer
 10307  007EA0  22DA               	addwfc	fsr2h,f,c
 10308  007EA2  50DF               	movf	indf2,w,c
 10309  007EA4  0101               	movlb	1	; () banked
 10310  007EA6  6F62               	movwf	_uart1RxLastError& (0+255),b	;volatile
 10311                           
 10312                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 10313  007EA8  0E38               	movlw	low _uart1RxBuffer
 10314  007EAA  0100               	movlb	0	; () banked
 10315  007EAC  25E7               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 10316  007EAE  6ED9               	movwf	fsr2l,c
 10317  007EB0  6ADA               	clrf	fsr2h,c
 10318  007EB2  0E01               	movlw	high _uart1RxBuffer
 10319  007EB4  22DA               	addwfc	fsr2h,f,c
 10320  007EB6  50DF               	movf	indf2,w,c
 10321  007EB8  6E02               	movwf	UART1_Read@readValue^0,c
 10322                           
 10323                           ; BSR set to: 0
 10324  007EBA  2BE7               	incf	_uart1RxTail& (0+255),f,b	;volatile
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10328  007EBC  0E0F               	movlw	15
 10329  007EBE  65E7               	cpfsgt	_uart1RxTail& (0+255),b
 10330  007EC0  D002               	goto	l12639
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 10334  007EC2  0E00               	movlw	0
 10335  007EC4  6FE7               	movwf	_uart1RxTail& (0+255),b	;volatile
 10336  007EC6                     l12639:
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 10340  007EC6  0139               	movlb	57	; () banked
 10341  007EC8  9793               	bcf	147,3,b	;volatile
 10342                           
 10343                           ; BSR set to: 57
 10344                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 10345  007ECA  0100               	movlb	0	; () banked
 10346  007ECC  07E6               	decf	_uart1RxCount& (0+255),f,b	;volatile
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 10350  007ECE  0139               	movlb	57	; () banked
 10351  007ED0  8793               	bsf	147,3,b	;volatile
 10352                           
 10353                           ; BSR set to: 57
 10354                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 10355  007ED2  5002               	movf	UART1_Read@readValue^0,w,c
 10356                           
 10357                           ; BSR set to: 57
 10358  007ED4  0012               	return		;funcret
 10359  007ED6                     __end_of_UART1_Read:
 10360                           	opt callstack 0
 10361                           
 10362 ;; *************** function _bootLoadApplication *****************
 10363 ;; Defined at:
 10364 ;;		line 1277 in file "../app/app_src/application.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;		None
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;  buf_id          1   49[COMRAM] unsigned char 
 10369 ;;  temp            2   50[COMRAM] unsigned short 
 10370 ;;  i               1   52[COMRAM] unsigned char 
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10375 ;; Tracked objects:
 10376 ;;		On entry : 3F/2
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;Total ram usage:        6 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:   14
 10387 ;; This function calls:
 10388 ;;		_DATAEE_ReadByte_Platform
 10389 ;;		_DATAEE_WriteByte_Platform
 10390 ;;		_NWK_OpenEndpoint
 10391 ;;		_NWK_SetAddr
 10392 ;;		_NWK_SetPanId
 10393 ;;		_PHY_SetChannel
 10394 ;;		_PHY_SetRxState
 10395 ;;		_crc16_app
 10396 ;;		_loadMACAddr
 10397 ;;		_set_parity
 10398 ;;		_set_uart_baud
 10399 ;; This function is called by:
 10400 ;;		_main
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text56
 10405  0025C0                     __ptext56:
 10406                           	opt callstack 0
 10407  0025C0                     _bootLoadApplication:
 10408                           	opt callstack 16
 10409                           
 10410                           ; BSR set to: 2
 10411                           ;../app/app_src/application.c: 1279:     uint16_t temp;;../app/app_src/application.c: 12
      +                          80:     uint8_t i;;../app/app_src/application.c: 1285:     loadMACAddr();
 10412                           
 10413                           ; BSR set to: 57
 10414                           ;incstack = 0
 10415  0025C0  EC2E  F041         	call	_loadMACAddr	;wreg free
 10416                           
 10417                           ;../app/app_src/application.c: 1287:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte)
      +                          , 0);
 10418  0025C4  0EBC               	movlw	low _EUIDbyte
 10419  0025C6  6E13               	movwf	crc16_app@dptr^0,c
 10420  0025C8  0E01               	movlw	high _EUIDbyte
 10421  0025CA  6E14               	movwf	(crc16_app@dptr+1)^0,c
 10422  0025CC  0E00               	movlw	0
 10423  0025CE  6E16               	movwf	(crc16_app@len+1)^0,c
 10424  0025D0  0E0C               	movlw	12
 10425  0025D2  6E15               	movwf	crc16_app@len^0,c
 10426  0025D4  0E00               	movlw	0
 10427  0025D6  6E18               	movwf	(crc16_app@seed+1)^0,c
 10428  0025D8  0E00               	movlw	0
 10429  0025DA  6E17               	movwf	crc16_app@seed^0,c
 10430  0025DC  ECA8  F038         	call	_crc16_app	;wreg free
 10431  0025E0  0060  F04C  F033   	movff	?_crc16_app,bootLoadApplication@temp
 10432  0025E6  0060  F050  F034   	movff	?_crc16_app+1,bootLoadApplication@temp+1
 10433                           
 10434                           ; BSR set to: 57
 10435                           ;../app/app_src/application.c: 1288:     currentAddr0 = (temp >> 8) & 0xFF;
 10436  0025EC  0060  F0D0  F0FC   	movff	bootLoadApplication@temp+1,_currentAddr0
 10437                           
 10438                           ; BSR set to: 57
 10439                           ;../app/app_src/application.c: 1289:     currentAddr1 = (temp) & 0xFF;
 10440  0025F2  0060  F0CC  F0FB   	movff	bootLoadApplication@temp,_currentAddr1
 10441                           
 10442                           ; BSR set to: 57
 10443                           ;../app/app_src/application.c: 1292:     currentNetID = DATAEE_ReadByte_Platform(0 + 0 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1);
 10444  0025F8  0E00               	movlw	0
 10445  0025FA  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10446  0025FC  0E19               	movlw	25
 10447  0025FE  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10448  002600  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10449  002604  0100               	movlb	0	; () banked
 10450  002606  6FFA               	movwf	_currentNetID& (0+255),b
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;../app/app_src/application.c: 1295:     for(i = 0; i < 16; i++){
 10454  002608  0E00               	movlw	0
 10455  00260A  6E35               	movwf	bootLoadApplication@i^0,c
 10456  00260C                     l16815:
 10457                           
 10458                           ;../app/app_src/application.c: 1296:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10459  00260C  0E24               	movlw	low _aes_key
 10460  00260E  2435               	addwf	bootLoadApplication@i^0,w,c
 10461  002610  6ED9               	movwf	fsr2l,c
 10462  002612  6ADA               	clrf	fsr2h,c
 10463  002614  0E02               	movlw	high _aes_key
 10464  002616  22DA               	addwfc	fsr2h,f,c
 10465  002618  0E09               	movlw	9
 10466  00261A  2435               	addwf	bootLoadApplication@i^0,w,c
 10467  00261C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10468  00261E  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10469  002620  0E00               	movlw	0
 10470  002622  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10471  002624  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10472  002628  6EDF               	movwf	indf2,c
 10473                           
 10474                           ;../app/app_src/application.c: 1297:     }
 10475  00262A  2A35               	incf	bootLoadApplication@i^0,f,c
 10476  00262C  0E0F               	movlw	15
 10477  00262E  6435               	cpfsgt	bootLoadApplication@i^0,c
 10478  002630  D7ED               	goto	l16815
 10479                           
 10480                           ;../app/app_src/application.c: 1298:     for(i = 0; i < 16; i++){
 10481  002632  0E00               	movlw	0
 10482  002634  6E35               	movwf	bootLoadApplication@i^0,c
 10483  002636                     l16827:
 10484                           
 10485                           ;../app/app_src/application.c: 1299:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 10486  002636  0E14               	movlw	low _net_key
 10487  002638  2435               	addwf	bootLoadApplication@i^0,w,c
 10488  00263A  6ED9               	movwf	fsr2l,c
 10489  00263C  6ADA               	clrf	fsr2h,c
 10490  00263E  0E02               	movlw	high _net_key
 10491  002640  22DA               	addwfc	fsr2h,f,c
 10492  002642  0E23               	movlw	35
 10493  002644  2435               	addwf	bootLoadApplication@i^0,w,c
 10494  002646  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10495  002648  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10496  00264A  0E00               	movlw	0
 10497  00264C  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 10498  00264E  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10499  002652  6EDF               	movwf	indf2,c
 10500                           
 10501                           ;../app/app_src/application.c: 1300:     }
 10502  002654  2A35               	incf	bootLoadApplication@i^0,f,c
 10503  002656  0E0F               	movlw	15
 10504  002658  6435               	cpfsgt	bootLoadApplication@i^0,c
 10505  00265A  D7ED               	goto	l16827
 10506                           
 10507                           ;../app/app_src/application.c: 1307:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1);
 10508  00265C  0E00               	movlw	0
 10509  00265E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10510  002660  0E1A               	movlw	26
 10511  002662  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10512  002664  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10513  002668  0101               	movlb	1	; () banked
 10514  00266A  6F6F               	movwf	_sinkAddr0& (0+255),b
 10515                           
 10516                           ;../app/app_src/application.c: 1308:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1);
 10517  00266C  0E00               	movlw	0
 10518  00266E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10519  002670  0E1B               	movlw	27
 10520  002672  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10521  002674  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10522  002678  0101               	movlb	1	; () banked
 10523  00267A  6F6E               	movwf	_sinkAddr1& (0+255),b
 10524                           
 10525                           ;../app/app_src/application.c: 1311:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1);
 10526  00267C  0E00               	movlw	0
 10527  00267E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10528  002680  0E1C               	movlw	28
 10529  002682  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10530  002684  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10531  002688  0100               	movlb	0	; () banked
 10532  00268A  6FEB               	movwf	_channel& (0+255),b
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;../app/app_src/application.c: 1312:     if(channel > sizeof(fhssList)){
 10536  00268C  0EFC               	movlw	252
 10537  00268E  65EB               	cpfsgt	_channel& (0+255),b
 10538  002690  D00B               	goto	l16841
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;../app/app_src/application.c: 1313:         channel = 0;
 10542  002692  0E00               	movlw	0
 10543  002694  6FEB               	movwf	_channel& (0+255),b
 10544                           
 10545                           ; BSR set to: 0
 10546                           ;../app/app_src/application.c: 1314:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1,channel);
 10547  002696  0E00               	movlw	0
 10548  002698  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10549  00269A  0E1C               	movlw	28
 10550  00269C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10551  00269E  0060  F3AC  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
 10552  0026A4  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10553  0026A8                     l16841:
 10554                           
 10555                           ;../app/app_src/application.c: 1318:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1);
 10556  0026A8  0E00               	movlw	0
 10557  0026AA  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10558  0026AC  0E1D               	movlw	29
 10559  0026AE  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10560  0026B0  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10561  0026B4  0100               	movlb	0	; () banked
 10562  0026B6  6FEA               	movwf	_TXPower& (0+255),b
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;../app/app_src/application.c: 1319:     if((TXPower < 2) || (TXPower > 5)){
 10566  0026B8  0E01               	movlw	1
 10567  0026BA  65EA               	cpfsgt	_TXPower& (0+255),b
 10568  0026BC  D003               	goto	u17280
 10569                           
 10570                           ; BSR set to: 0
 10571  0026BE  0E05               	movlw	5
 10572  0026C0  65EA               	cpfsgt	_TXPower& (0+255),b
 10573  0026C2  D00B               	goto	l16851
 10574  0026C4                     u17280:
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;../app/app_src/application.c: 1320:         TXPower = 5;
 10578  0026C4  0E05               	movlw	5
 10579  0026C6  6FEA               	movwf	_TXPower& (0+255),b
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;../app/app_src/application.c: 1321:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1,TXPower);
 10583  0026C8  0E00               	movlw	0
 10584  0026CA  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10585  0026CC  0E1D               	movlw	29
 10586  0026CE  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10587  0026D0  0060  F3A8  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
 10588  0026D6  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10589  0026DA                     l16851:
 10590                           
 10591                           ;../app/app_src/application.c: 1325:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10592  0026DA  0E00               	movlw	0
 10593  0026DC  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10594  0026DE  0E21               	movlw	33
 10595  0026E0  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10596  0026E2  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10597  0026E6  0100               	movlb	0	; () banked
 10598  0026E8  6FEC               	movwf	_current_sf& (0+255),b
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;../app/app_src/application.c: 1326:     if((current_sf < 7) || (current_sf > 12)){
 10602  0026EA  0E06               	movlw	6
 10603  0026EC  65EC               	cpfsgt	_current_sf& (0+255),b
 10604  0026EE  D003               	goto	u17300
 10605                           
 10606                           ; BSR set to: 0
 10607  0026F0  0E0C               	movlw	12
 10608  0026F2  65EC               	cpfsgt	_current_sf& (0+255),b
 10609  0026F4  D00B               	goto	l16861
 10610  0026F6                     u17300:
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;../app/app_src/application.c: 1327:         current_sf = 7;
 10614  0026F6  0E07               	movlw	7
 10615  0026F8  6FEC               	movwf	_current_sf& (0+255),b
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;../app/app_src/application.c: 1328:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
 10619  0026FA  0E00               	movlw	0
 10620  0026FC  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10621  0026FE  0E21               	movlw	33
 10622  002700  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10623  002702  0060  F3B0  F008   	movff	_current_sf,DATAEE_WriteByte_Platform@data
 10624  002708  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10625  00270C                     l16861:
 10626                           
 10627                           ;../app/app_src/application.c: 1332:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10628  00270C  0E00               	movlw	0
 10629  00270E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10630  002710  0E1E               	movlw	30
 10631  002712  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10632  002714  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10633  002718  0100               	movlb	0	; () banked
 10634  00271A  6FF9               	movwf	_RSSITarget& (0+255),b
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;../app/app_src/application.c: 1333:     if((RSSITarget >= -30) || (RSSITarget < -120)){
 10638  00271C  51F9               	movf	_RSSITarget& (0+255),w,b
 10639  00271E  0A80               	xorlw	128
 10640  002720  0F9E               	addlw	158
 10641  002722  B0D8               	btfsc	status,0,c
 10642  002724  D005               	goto	u17320
 10643                           
 10644                           ; BSR set to: 0
 10645  002726  51F9               	movf	_RSSITarget& (0+255),w,b
 10646  002728  0A80               	xorlw	128
 10647  00272A  0FF8               	addlw	248
 10648  00272C  B0D8               	btfsc	status,0,c
 10649  00272E  D00B               	goto	l16871
 10650  002730                     u17320:
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;../app/app_src/application.c: 1334:         RSSITarget = -80;
 10654  002730  0EB0               	movlw	176
 10655  002732  6FF9               	movwf	_RSSITarget& (0+255),b
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;../app/app_src/application.c: 1335:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1,RSSITarget);
 10659  002734  0E00               	movlw	0
 10660  002736  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10661  002738  0E1E               	movlw	30
 10662  00273A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10663  00273C  0060  F3E4  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
 10664  002742  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10665  002746                     l16871:
 10666                           
 10667                           ;../app/app_src/application.c: 1339:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1);
 10668  002746  0E00               	movlw	0
 10669  002748  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10670  00274A  0E1F               	movlw	31
 10671  00274C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10672  00274E  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10673  002752  6E35               	movwf	bootLoadApplication@i^0,c
 10674                           
 10675                           ;../app/app_src/application.c: 1340:     if((i > UART_9BIT_EVEN_PARITY) | (UART_7BIT_MOD
      +                          E == i)){
 10676  002754  0E04               	movlw	4
 10677  002756  6035               	cpfslt	bootLoadApplication@i^0,c
 10678  002758  D003               	goto	u17340
 10679  00275A  0435               	decf	bootLoadApplication@i^0,w,c
 10680  00275C  A4D8               	btfss	status,2,c
 10681  00275E  D00A               	goto	l16881
 10682  002760                     u17340:
 10683                           
 10684                           ;../app/app_src/application.c: 1341:         i = UART_9BIT_EVEN_PARITY;
 10685  002760  0E03               	movlw	3
 10686  002762  6E35               	movwf	bootLoadApplication@i^0,c
 10687                           
 10688                           ;../app/app_src/application.c: 1342:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
 10689  002764  0E00               	movlw	0
 10690  002766  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10691  002768  0E1F               	movlw	31
 10692  00276A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10693  00276C  0E03               	movlw	3
 10694  00276E  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10695  002770  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10696  002774                     l16881:
 10697                           
 10698                           ;../app/app_src/application.c: 1345:     set_parity(i);
 10699  002774  5035               	movf	bootLoadApplication@i^0,w,c
 10700  002776  EC28  F03C         	call	_set_parity
 10701                           
 10702                           ;../app/app_src/application.c: 1348:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 10703  00277A  0E00               	movlw	0
 10704  00277C  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 10705  00277E  0E20               	movlw	32
 10706  002780  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 10707  002782  ECAE  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 10708  002786  6E35               	movwf	bootLoadApplication@i^0,c
 10709                           
 10710                           ;../app/app_src/application.c: 1349:     if(i > UART_BAUD_19200){
 10711  002788  0E01               	movlw	1
 10712  00278A  6435               	cpfsgt	bootLoadApplication@i^0,c
 10713  00278C  D00A               	goto	l16891
 10714                           
 10715                           ;../app/app_src/application.c: 1350:         i = UART_BAUD_19200;
 10716  00278E  0E01               	movlw	1
 10717  002790  6E35               	movwf	bootLoadApplication@i^0,c
 10718                           
 10719                           ;../app/app_src/application.c: 1351:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
 10720  002792  0E00               	movlw	0
 10721  002794  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 10722  002796  0E20               	movlw	32
 10723  002798  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 10724  00279A  0E01               	movlw	1
 10725  00279C  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 10726  00279E  EC6B  F03F         	call	_DATAEE_WriteByte_Platform	;wreg free
 10727  0027A2                     l16891:
 10728                           
 10729                           ;../app/app_src/application.c: 1353:     set_uart_baud(i);
 10730  0027A2  5035               	movf	bootLoadApplication@i^0,w,c
 10731  0027A4  EC47  F030         	call	_set_uart_baud
 10732                           
 10733                           ;../app/app_src/application.c: 1392:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 10734  0027A8  0E00               	movlw	0
 10735  0027AA  6E32               	movwf	bootLoadApplication@buf_id^0,c
 10736  0027AC                     l16897:
 10737                           
 10738                           ;../app/app_src/application.c: 1393:         tx_buffer[buf_id].free = 1;
 10739  0027AC  5032               	movf	bootLoadApplication@buf_id^0,w,c
 10740  0027AE  0D83               	mullw	131
 10741  0027B0  0E6A               	movlw	low _tx_buffer
 10742  0027B2  24F3               	addwf	243,w,c
 10743  0027B4  6ED9               	movwf	fsr2l,c
 10744  0027B6  0E08               	movlw	high _tx_buffer
 10745  0027B8  20F4               	addwfc	prodh,w,c
 10746  0027BA  6EDA               	movwf	fsr2h,c
 10747  0027BC  84DF               	bsf	indf2,2,c
 10748                           
 10749                           ;../app/app_src/application.c: 1394:     }
 10750  0027BE  2A32               	incf	bootLoadApplication@buf_id^0,f,c
 10751  0027C0  0E03               	movlw	3
 10752  0027C2  6432               	cpfsgt	bootLoadApplication@buf_id^0,c
 10753  0027C4  D7F3               	goto	l16897
 10754                           
 10755                           ;../app/app_src/application.c: 1395:     temp = (currentAddr0 << 8) | currentAddr1;
 10756  0027C6  0100               	movlb	0	; () banked
 10757  0027C8  51FB               	movf	_currentAddr1& (0+255),w,b
 10758  0027CA  0060  F3F0  F030   	movff	_currentAddr0,??_bootLoadApplication
 10759  0027D0  6A31               	clrf	(??_bootLoadApplication+1)^0,c
 10760  0027D2  0060  F0C0  F031   	movff	??_bootLoadApplication,??_bootLoadApplication+1
 10761  0027D8  6A30               	clrf	??_bootLoadApplication^0,c
 10762  0027DA  1030               	iorwf	??_bootLoadApplication^0,w,c
 10763  0027DC  6E33               	movwf	bootLoadApplication@temp^0,c
 10764  0027DE  5031               	movf	(??_bootLoadApplication+1)^0,w,c
 10765  0027E0  6E34               	movwf	(bootLoadApplication@temp+1)^0,c
 10766                           
 10767                           ;../app/app_src/application.c: 1396:     if(temp > 0x8000){
 10768  0027E2  0433               	decf	bootLoadApplication@temp^0,w,c
 10769  0027E4  0E80               	movlw	128
 10770  0027E6  5834               	subwfb	(bootLoadApplication@temp+1)^0,w,c
 10771  0027E8  A0D8               	btfss	status,0,c
 10772  0027EA  D00A               	goto	l16911
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;../app/app_src/application.c: 1397:         temp -= 0x8000;
 10776  0027EC  0E00               	movlw	0
 10777  0027EE  5E33               	subwf	bootLoadApplication@temp^0,f,c
 10778  0027F0  0E80               	movlw	128
 10779  0027F2  5A34               	subwfb	(bootLoadApplication@temp+1)^0,f,c
 10780                           
 10781                           ; BSR set to: 0
 10782                           ;../app/app_src/application.c: 1398:         currentAddr0 = (temp >> 8) & 0xFF;
 10783  0027F4  0060  F0D0  F0FC   	movff	bootLoadApplication@temp+1,_currentAddr0
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;../app/app_src/application.c: 1399:         currentAddr1 = temp & 0xFF;
 10787  0027FA  0060  F0CC  F0FB   	movff	bootLoadApplication@temp,_currentAddr1
 10788  002800                     l16911:
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;../app/app_src/application.c: 1401:     NWK_SetAddr(temp);
 10792  002800  0060  F0CC  F004   	movff	bootLoadApplication@temp,NWK_SetAddr@addr
 10793  002806  0060  F0D0  F005   	movff	bootLoadApplication@temp+1,NWK_SetAddr@addr+1
 10794  00280C  EC14  F045         	call	_NWK_SetAddr	;wreg free
 10795                           
 10796                           ; BSR set to: 0
 10797                           ;../app/app_src/application.c: 1402:     NWK_SetPanId(0x1234);
 10798  002810  0E12               	movlw	18
 10799  002812  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
 10800  002814  0E34               	movlw	52
 10801  002816  6E04               	movwf	NWK_SetPanId@panId^0,c
 10802  002818  EC05  F045         	call	_NWK_SetPanId	;wreg free
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;../app/app_src/application.c: 1403:     PHY_SetChannel(0x00);
 10806  00281C  0E00               	movlw	0
 10807  00281E  EC93  F040         	call	_PHY_SetChannel
 10808                           
 10809                           ; BSR set to: 61
 10810                           ;../app/app_src/application.c: 1404:     PHY_SetRxState(1);
 10811  002822  0E01               	movlw	1
 10812  002824  ECA2  F046         	call	_PHY_SetRxState
 10813                           
 10814                           ; BSR set to: 61
 10815                           ;../app/app_src/application.c: 1405:     NWK_OpenEndpoint(ASCII_EP, appDataInd);
 10816  002828  0ED4               	movlw	low _appDataInd
 10817  00282A  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 10818  00282C  0E71               	movlw	high _appDataInd
 10819  00282E  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 10820  002830  0E01               	movlw	1
 10821  002832  ECB5  F044         	call	_NWK_OpenEndpoint
 10822  002836  0012               	return		;funcret
 10823  002838                     __end_of_bootLoadApplication:
 10824                           	opt callstack 0
 10825                           
 10826 ;; *************** function _set_uart_baud *****************
 10827 ;; Defined at:
 10828 ;;		line 148 in file "../app/app_src/application.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;  i               1    wreg     unsigned char 
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;  i               1    3[COMRAM] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      unsigned char 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 3F/3D
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;Total ram usage:        3 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    7
 10849 ;; This function calls:
 10850 ;;		Nothing
 10851 ;; This function is called by:
 10852 ;;		_bootLoadApplication
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           	psect	text57
 10857  00608E                     __ptext57:
 10858                           	opt callstack 0
 10859  00608E                     _set_uart_baud:
 10860                           	opt callstack 22
 10861                           
 10862                           ;incstack = 0
 10863                           ;set_uart_baud@i stored from wreg
 10864  00608E  6E04               	movwf	set_uart_baud@i^0,c
 10865                           
 10866                           ;../app/app_src/application.c: 148: static uint8_t set_uart_baud(uint8_t i);../app/app_s
      +                          rc/application.c: 149: {;../app/app_src/application.c: 150:     U1CON1 &= ~(1<<7);
 10867  006090  013D               	movlb	61	; () banked
 10868  006092  9FF3               	bcf	243,7,b	;volatile
 10869                           
 10870                           ;../app/app_src/application.c: 151:     switch(i)
 10871  006094  D047               	goto	l12707
 10872  006096                     l12655:
 10873                           
 10874                           ; BSR set to: 61
 10875                           ;../app/app_src/application.c: 155:             U1CON0 &=~ (1<<7);
 10876  006096  9FF2               	bcf	242,7,b	;volatile
 10877                           
 10878                           ; BSR set to: 61
 10879                           ;../app/app_src/application.c: 156:             U1BRGL = 0xA0;
 10880  006098  0EA0               	movlw	160
 10881  00609A  6FF5               	movwf	245,b	;volatile
 10882                           
 10883                           ; BSR set to: 61
 10884                           ;../app/app_src/application.c: 157:             U1BRGH = 0x01;
 10885  00609C  0E01               	movlw	1
 10886  00609E  6FF6               	movwf	246,b	;volatile
 10887                           
 10888                           ; BSR set to: 61
 10889                           ;../app/app_src/application.c: 158:             current_baud_rate = 9600;
 10890  0060A0  0E80               	movlw	128
 10891  0060A2  0101               	movlb	1	; () banked
 10892  0060A4  6F52               	movwf	_current_baud_rate& (0+255),b
 10893  0060A6  0E25               	movlw	37
 10894  0060A8  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10895  0060AA  0E00               	movlw	0
 10896  0060AC  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10897                           
 10898                           ; BSR set to: 1
 10899                           ;../app/app_src/application.c: 159:             uart_baud_rate = UART_BAUD_9600;
 10900  0060AE  0E00               	movlw	0
 10901  0060B0  D037               	goto	L6
 10902  0060B2                     l12665:
 10903                           
 10904                           ; BSR set to: 61
 10905                           ;../app/app_src/application.c: 163:             U1CON0 &=~ (1<<7);
 10906  0060B2  9FF2               	bcf	242,7,b	;volatile
 10907                           
 10908                           ; BSR set to: 61
 10909                           ;../app/app_src/application.c: 164:             U1BRGL = 0xCF;
 10910  0060B4  0ECF               	movlw	207
 10911  0060B6  6FF5               	movwf	245,b	;volatile
 10912                           
 10913                           ; BSR set to: 61
 10914                           ;../app/app_src/application.c: 165:             U1BRGH = 0x00;
 10915  0060B8  0E00               	movlw	0
 10916  0060BA  6FF6               	movwf	246,b	;volatile
 10917                           
 10918                           ; BSR set to: 61
 10919                           ;../app/app_src/application.c: 166:             current_baud_rate = 19200;
 10920  0060BC  0E00               	movlw	0
 10921  0060BE  0101               	movlb	1	; () banked
 10922  0060C0  6F52               	movwf	_current_baud_rate& (0+255),b
 10923  0060C2  0E4B               	movlw	75
 10924  0060C4  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10925  0060C6  0E00               	movlw	0
 10926  0060C8  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10927                           
 10928                           ; BSR set to: 1
 10929                           ;../app/app_src/application.c: 167:             uart_baud_rate = UART_BAUD_19200;
 10930  0060CA  0E01               	movlw	1
 10931  0060CC  D029               	goto	L6
 10932  0060CE                     l12675:
 10933                           
 10934                           ; BSR set to: 61
 10935                           ;../app/app_src/application.c: 171:             U1CON0 &=~ (1<<7);
 10936  0060CE  9FF2               	bcf	242,7,b	;volatile
 10937                           
 10938                           ; BSR set to: 61
 10939                           ;../app/app_src/application.c: 172:             U1BRGL = 0x67;
 10940  0060D0  0E67               	movlw	103
 10941  0060D2  6FF5               	movwf	245,b	;volatile
 10942                           
 10943                           ; BSR set to: 61
 10944                           ;../app/app_src/application.c: 173:             U1BRGH = 0x00;
 10945  0060D4  0E00               	movlw	0
 10946  0060D6  6FF6               	movwf	246,b	;volatile
 10947                           
 10948                           ; BSR set to: 61
 10949                           ;../app/app_src/application.c: 174:             current_baud_rate = 38400;
 10950  0060D8  0E00               	movlw	0
 10951  0060DA  0101               	movlb	1	; () banked
 10952  0060DC  6F52               	movwf	_current_baud_rate& (0+255),b
 10953  0060DE  0E96               	movlw	150
 10954  0060E0  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10955  0060E2  0E00               	movlw	0
 10956  0060E4  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10957                           
 10958                           ; BSR set to: 1
 10959                           ;../app/app_src/application.c: 175:             uart_baud_rate = UART_BAUD_38400;
 10960  0060E6  0E02               	movlw	2
 10961  0060E8  D01B               	goto	L6
 10962  0060EA                     l12685:
 10963                           
 10964                           ; BSR set to: 61
 10965                           ;../app/app_src/application.c: 179:             U1CON0 |= (1<<7);
 10966  0060EA  8FF2               	bsf	242,7,b	;volatile
 10967                           
 10968                           ; BSR set to: 61
 10969                           ;../app/app_src/application.c: 180:             U1BRGL = 0x14;
 10970  0060EC  0E14               	movlw	20
 10971  0060EE  6FF5               	movwf	245,b	;volatile
 10972                           
 10973                           ; BSR set to: 61
 10974                           ;../app/app_src/application.c: 181:             U1BRGH = 0x01;
 10975  0060F0  0E01               	movlw	1
 10976  0060F2  6FF6               	movwf	246,b	;volatile
 10977                           
 10978                           ; BSR set to: 61
 10979                           ;../app/app_src/application.c: 182:             current_baud_rate = 57600;
 10980  0060F4  0E00               	movlw	0
 10981  0060F6  0101               	movlb	1	; () banked
 10982  0060F8  6F52               	movwf	_current_baud_rate& (0+255),b
 10983  0060FA  0EE1               	movlw	225
 10984  0060FC  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 10985  0060FE  0E00               	movlw	0
 10986  006100  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 10987                           
 10988                           ; BSR set to: 1
 10989                           ;../app/app_src/application.c: 183:             uart_baud_rate = UART_BAUD_57600;
 10990  006102  0E03               	movlw	3
 10991  006104  D00D               	goto	L6
 10992  006106                     l12695:
 10993                           
 10994                           ; BSR set to: 61
 10995                           ;../app/app_src/application.c: 187:             U1CON0 |= (1<<7);
 10996  006106  8FF2               	bsf	242,7,b	;volatile
 10997                           
 10998                           ; BSR set to: 61
 10999                           ;../app/app_src/application.c: 188:             U1BRGL = 0x89;
 11000  006108  0E89               	movlw	137
 11001  00610A  6FF5               	movwf	245,b	;volatile
 11002                           
 11003                           ; BSR set to: 61
 11004                           ;../app/app_src/application.c: 189:             U1BRGH = 0x00;
 11005  00610C  0E00               	movlw	0
 11006  00610E  6FF6               	movwf	246,b	;volatile
 11007                           
 11008                           ; BSR set to: 61
 11009                           ;../app/app_src/application.c: 190:             current_baud_rate = 115200;
 11010  006110  0E00               	movlw	0
 11011  006112  0101               	movlb	1	; () banked
 11012  006114  6F52               	movwf	_current_baud_rate& (0+255),b
 11013  006116  0EC2               	movlw	194
 11014  006118  6F53               	movwf	(_current_baud_rate+1)& (0+255),b
 11015  00611A  0E01               	movlw	1
 11016  00611C  6F54               	movwf	(_current_baud_rate+2)& (0+255),b
 11017                           
 11018                           ; BSR set to: 1
 11019                           ;../app/app_src/application.c: 191:             uart_baud_rate = UART_BAUD_115200;
 11020  00611E  0E04               	movlw	4
 11021  006120                     L6:
 11022  006120  6F73               	movwf	_uart_baud_rate& (0+255),b
 11023                           
 11024                           ;../app/app_src/application.c: 192:             break;
 11025  006122  D018               	goto	l12709
 11026  006124                     l12707:
 11027                           
 11028                           ; BSR set to: 61
 11029  006124  5004               	movf	set_uart_baud@i^0,w,c
 11030  006126  6E02               	movwf	??_set_uart_baud^0,c
 11031  006128  6A03               	clrf	(??_set_uart_baud+1)^0,c
 11032                           
 11033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11034                           ; Switch size 1, requested type "simple"
 11035                           ; Number of cases is 1, Range of values is 0 to 0
 11036                           ; switch strategies available:
 11037                           ; Name         Instructions Cycles
 11038                           ; simple_byte            4     3 (average)
 11039                           ;	Chosen strategy is simple_byte
 11040  00612A  5003               	movf	(??_set_uart_baud+1)^0,w,c
 11041  00612C  0A00               	xorlw	0	; case 0
 11042  00612E  A4D8               	btfss	status,2,c
 11043  006130  0012               	return	
 11044                           
 11045                           ; BSR set to: 61
 11046                           ; Switch size 1, requested type "simple"
 11047                           ; Number of cases is 5, Range of values is 0 to 4
 11048                           ; switch strategies available:
 11049                           ; Name         Instructions Cycles
 11050                           ; simple_byte           16     9 (average)
 11051                           ;	Chosen strategy is simple_byte
 11052  006132  5002               	movf	??_set_uart_baud^0,w,c
 11053  006134  0A00               	xorlw	0	; case 0
 11054  006136  B4D8               	btfsc	status,2,c
 11055  006138  D7AE               	goto	l12655
 11056  00613A  0A01               	xorlw	1	; case 1
 11057  00613C  B4D8               	btfsc	status,2,c
 11058  00613E  D7B9               	goto	l12665
 11059  006140  0A03               	xorlw	3	; case 2
 11060  006142  B4D8               	btfsc	status,2,c
 11061  006144  D7C4               	goto	l12675
 11062  006146  0A01               	xorlw	1	; case 3
 11063  006148  B4D8               	btfsc	status,2,c
 11064  00614A  D7CF               	goto	l12685
 11065  00614C  0A07               	xorlw	7	; case 4
 11066  00614E  A4D8               	btfss	status,2,c
 11067  006150  0012               	return	
 11068  006152  D7D9               	goto	l12695
 11069  006154                     l12709:
 11070                           
 11071                           ; BSR set to: 1
 11072                           ;../app/app_src/application.c: 196:     U1CON1 |= (1<<7);
 11073  006154  013D               	movlb	61	; () banked
 11074  006156  8FF3               	bsf	243,7,b	;volatile
 11075                           
 11076                           ; BSR set to: 61
 11077  006158  0012               	return		;funcret
 11078  00615A                     __end_of_set_uart_baud:
 11079                           	opt callstack 0
 11080                           
 11081 ;; *************** function _set_parity *****************
 11082 ;; Defined at:
 11083 ;;		line 104 in file "../app/app_src/application.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;  parity          1    wreg     unsigned char 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  parity          1    3[COMRAM] unsigned char 
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1    wreg      unsigned char 
 11090 ;; Registers used:
 11091 ;;		wreg, status,2, status,0
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;Total ram usage:        3 bytes
 11102 ;; Hardware stack levels used:    1
 11103 ;; Hardware stack levels required when called:    7
 11104 ;; This function calls:
 11105 ;;		Nothing
 11106 ;; This function is called by:
 11107 ;;		_cmdSetParity
 11108 ;;		_bootLoadApplication
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text58
 11113  007850                     __ptext58:
 11114                           	opt callstack 0
 11115  007850                     _set_parity:
 11116                           	opt callstack 20
 11117                           
 11118                           ; BSR set to: 61
 11119                           ;incstack = 0
 11120                           ;set_parity@parity stored from wreg
 11121  007850  6E04               	movwf	set_parity@parity^0,c
 11122                           
 11123                           ;../app/app_src/application.c: 104: static uint8_t set_parity(uint8_t parity);../app/app
      +                          _src/application.c: 105: {;../app/app_src/application.c: 106:     if((parity >= UART_PAR
      +                          ITY_SENTINAL) || (UART_7BIT_MODE == parity)){
 11124  007852  0E04               	movlw	4
 11125  007854  6004               	cpfslt	set_parity@parity^0,c
 11126  007856  0012               	return	
 11127  007858  0404               	decf	set_parity@parity^0,w,c
 11128  00785A  B4D8               	btfsc	status,2,c
 11129  00785C  0012               	return	
 11130                           
 11131                           ;../app/app_src/application.c: 109:     U1CON1 &= 0b01111111;
 11132  00785E  013D               	movlb	61	; () banked
 11133  007860  9FF3               	bcf	243,7,b	;volatile
 11134                           
 11135                           ; BSR set to: 61
 11136                           ;../app/app_src/application.c: 110:     U1CON0 &= 0b11110000;
 11137  007862  0EF0               	movlw	240
 11138  007864  17F2               	andwf	242,f,b	;volatile
 11139                           
 11140                           ; BSR set to: 61
 11141                           ;../app/app_src/application.c: 111:     U1CON0 |= (parity & 0b00001111);
 11142  007866  5004               	movf	set_parity@parity^0,w,c
 11143  007868  0B0F               	andlw	15
 11144  00786A  13F2               	iorwf	242,f,b	;volatile
 11145                           
 11146                           ; BSR set to: 61
 11147                           ;../app/app_src/application.c: 112:     U1CON2 &=~ (0b00110000);
 11148  00786C  0ECF               	movlw	207
 11149  00786E  17F4               	andwf	244,f,b	;volatile
 11150                           
 11151                           ; BSR set to: 61
 11152                           ;../app/app_src/application.c: 113:     U1CON1 |= 0b10000000;
 11153  007870  8FF3               	bsf	243,7,b	;volatile
 11154                           
 11155                           ;../app/app_src/application.c: 114:     switch(parity){
 11156  007872  D00C               	goto	l11391
 11157  007874                     l11383:
 11158                           
 11159                           ; BSR set to: 61
 11160                           ;../app/app_src/application.c: 116:             uart_parity = UART_8BIT_NO_PARITY;
 11161  007874  0E00               	movlw	0
 11162  007876  0101               	movlb	1	; () banked
 11163  007878  6F72               	movwf	_uart_parity& (0+255),b
 11164                           
 11165                           ;../app/app_src/application.c: 120:             break;
 11166  00787A  0012               	return	
 11167  00787C                     l11385:
 11168                           
 11169                           ; BSR set to: 61
 11170                           ;../app/app_src/application.c: 122:             uart_parity = UART_9BIT_ODD_PARITY;
 11171  00787C  0E02               	movlw	2
 11172  00787E  0101               	movlb	1	; () banked
 11173  007880  6F72               	movwf	_uart_parity& (0+255),b
 11174                           
 11175                           ;../app/app_src/application.c: 126:             break;
 11176  007882  0012               	return	
 11177  007884                     l11387:
 11178                           
 11179                           ; BSR set to: 61
 11180                           ;../app/app_src/application.c: 128:             uart_parity = UART_9BIT_EVEN_PARITY;
 11181  007884  0E03               	movlw	3
 11182  007886  0101               	movlb	1	; () banked
 11183  007888  6F72               	movwf	_uart_parity& (0+255),b
 11184                           
 11185                           ;../app/app_src/application.c: 132:             break;
 11186  00788A  0012               	return	
 11187  00788C                     l11391:
 11188                           
 11189                           ; BSR set to: 61
 11190  00788C  5004               	movf	set_parity@parity^0,w,c
 11191  00788E  6E02               	movwf	??_set_parity^0,c
 11192  007890  6A03               	clrf	(??_set_parity+1)^0,c
 11193                           
 11194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11195                           ; Switch size 1, requested type "simple"
 11196                           ; Number of cases is 1, Range of values is 0 to 0
 11197                           ; switch strategies available:
 11198                           ; Name         Instructions Cycles
 11199                           ; simple_byte            4     3 (average)
 11200                           ;	Chosen strategy is simple_byte
 11201  007892  5003               	movf	(??_set_parity+1)^0,w,c
 11202  007894  0A00               	xorlw	0	; case 0
 11203  007896  A4D8               	btfss	status,2,c
 11204  007898  D7ED               	goto	l11383
 11205                           
 11206                           ; BSR set to: 61
 11207                           ; Switch size 1, requested type "simple"
 11208                           ; Number of cases is 3, Range of values is 0 to 3
 11209                           ; switch strategies available:
 11210                           ; Name         Instructions Cycles
 11211                           ; simple_byte           10     6 (average)
 11212                           ;	Chosen strategy is simple_byte
 11213  00789A  5002               	movf	??_set_parity^0,w,c
 11214  00789C  0A00               	xorlw	0	; case 0
 11215  00789E  B4D8               	btfsc	status,2,c
 11216  0078A0  D7E9               	goto	l11383
 11217  0078A2  0A02               	xorlw	2	; case 2
 11218  0078A4  B4D8               	btfsc	status,2,c
 11219  0078A6  D7EA               	goto	l11385
 11220  0078A8  0A01               	xorlw	1	; case 3
 11221  0078AA  B4D8               	btfsc	status,2,c
 11222  0078AC  D7EB               	goto	l11387
 11223  0078AE  D7E2               	goto	l11383
 11224  0078B0                     __end_of_set_parity:
 11225                           	opt callstack 0
 11226                           
 11227 ;; *************** function _loadMACAddr *****************
 11228 ;; Defined at:
 11229 ;;		line 1258 in file "../app/app_src/application.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;		None
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;  i               1    5[COMRAM] unsigned char 
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      void 
 11236 ;; Registers used:
 11237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 3F/2
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11247 ;;Total ram usage:        1 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; Hardware stack levels required when called:    8
 11250 ;; This function calls:
 11251 ;;		_DIA_ReadByte
 11252 ;; This function is called by:
 11253 ;;		_bootLoadApplication
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text59
 11258  00825C                     __ptext59:
 11259                           	opt callstack 0
 11260  00825C                     _loadMACAddr:
 11261                           	opt callstack 21
 11262                           
 11263                           ; BSR set to: 2
 11264                           ;../app/app_src/application.c: 1261:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
 11265                           
 11266                           ;incstack = 0
 11267  00825C  0E00               	movlw	0
 11268  00825E  6E06               	movwf	loadMACAddr@i^0,c
 11269  008260                     l12889:
 11270                           
 11271                           ;../app/app_src/application.c: 1262:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8
      +                          _t)DIA_ReadByte(0x3F0000 + i);
 11272  008260  5006               	movf	loadMACAddr@i^0,w,c
 11273  008262  08C7               	sublw	low (_EUIDbyte+11)
 11274  008264  6ED9               	movwf	fsr2l,c
 11275  008266  0E00               	movlw	0
 11276  008268  A0D8               	btfss	status,0,c
 11277  00826A  2AE8               	incf	wreg,f,c
 11278  00826C  0801               	sublw	high (_EUIDbyte+11)
 11279  00826E  6EDA               	movwf	fsr2h,c
 11280  008270  0E00               	movlw	0
 11281  008272  2406               	addwf	loadMACAddr@i^0,w,c
 11282  008274  6E02               	movwf	DIA_ReadByte@flashAddr^0,c
 11283  008276  6A03               	clrf	(DIA_ReadByte@flashAddr+1)^0,c
 11284  008278  0E00               	movlw	0
 11285  00827A  2203               	addwfc	(DIA_ReadByte@flashAddr+1)^0,f,c
 11286  00827C  6A04               	clrf	(DIA_ReadByte@flashAddr+2)^0,c
 11287  00827E  0E3F               	movlw	63
 11288  008280  2204               	addwfc	(DIA_ReadByte@flashAddr+2)^0,f,c
 11289  008282  6A05               	clrf	(DIA_ReadByte@flashAddr+3)^0,c
 11290  008284  0E00               	movlw	0
 11291  008286  2205               	addwfc	(DIA_ReadByte@flashAddr+3)^0,f,c
 11292  008288  EC2D  F044         	call	_DIA_ReadByte	;wreg free
 11293  00828C  6EDF               	movwf	indf2,c
 11294                           
 11295                           ;../app/app_src/application.c: 1263:     }
 11296  00828E  2A06               	incf	loadMACAddr@i^0,f,c
 11297  008290  0E0B               	movlw	11
 11298  008292  6406               	cpfsgt	loadMACAddr@i^0,c
 11299  008294  D7E5               	goto	l12889
 11300  008296  0012               	return	
 11301  008298                     __end_of_loadMACAddr:
 11302                           	opt callstack 0
 11303                           
 11304 ;; *************** function _DIA_ReadByte *****************
 11305 ;; Defined at:
 11306 ;;		line 212 in file "mcc_generated_files/memory.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  flashAddr       4    1[COMRAM] unsigned long 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;		None
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  1    wreg      unsigned char 
 11313 ;; Registers used:
 11314 ;;		wreg, status,2
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/2
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11323 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11324 ;;Total ram usage:        4 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    7
 11327 ;; This function calls:
 11328 ;;		Nothing
 11329 ;; This function is called by:
 11330 ;;		_loadMACAddr
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text60
 11335  00885A                     __ptext60:
 11336                           	opt callstack 0
 11337  00885A                     _DIA_ReadByte:
 11338                           	opt callstack 21
 11339                           
 11340                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
 11341                           
 11342                           ;incstack = 0
 11343  00885A  0139               	movlb	57	; () banked
 11344  00885C  51E5               	movf	229,w,b	;volsfr
 11345  00885E  0B3F               	andlw	-193
 11346  008860  0940               	iorlw	64
 11347  008862  6FE5               	movwf	229,b	;volsfr
 11348                           
 11349                           ; BSR set to: 57
 11350                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
 11351  008864  0060  F013  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
 11352                           
 11353                           ; BSR set to: 57
 11354                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
 11355  00886A  0060  F00F  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
 11356                           
 11357                           ; BSR set to: 57
 11358                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 11359  008870  0060  F00B  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
 11360  008876  0008               	tblrd		*	;# 
 11361                           
 11362                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
 11363  008878  50F5               	movf	245,w,c	;volatile
 11364  00887A  0012               	return		;funcret
 11365  00887C                     __end_of_DIA_ReadByte:
 11366                           	opt callstack 0
 11367                           
 11368 ;; *************** function _crc16_app *****************
 11369 ;; Defined at:
 11370 ;;		line 4 in file "../app/app_src/crc.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;  dptr            2   18[COMRAM] PTR void 
 11373 ;;		 -> EUIDbyte(12), 
 11374 ;;  len             2   20[COMRAM] unsigned short 
 11375 ;;  seed            2   22[COMRAM] unsigned short 
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;  i               2   28[COMRAM] unsigned short 
 11378 ;;  ptr             2   26[COMRAM] PTR unsigned char 
 11379 ;;		 -> EUIDbyte(12), 
 11380 ;;  result          2   24[COMRAM] unsigned short 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  2   18[COMRAM] unsigned short 
 11383 ;; Registers used:
 11384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/2
 11387 ;;		On exit  : 3F/39
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11390 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11394 ;;Total ram usage:       12 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; Hardware stack levels required when called:    9
 11397 ;; This function calls:
 11398 ;;		_CRC_8BitDataWrite
 11399 ;;		_CRC_CalculatedResultGet
 11400 ;; This function is called by:
 11401 ;;		_bootLoadApplication
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text61
 11406  007150                     __ptext61:
 11407                           	opt callstack 0
 11408  007150                     _crc16_app:
 11409                           	opt callstack 20
 11410                           
 11411                           ;../app/app_src/crc.c: 5:     uint8_t* ptr = (uint8_t*)dptr;
 11412                           
 11413                           ;incstack = 0
 11414  007150  0060  F04C  F01B   	movff	crc16_app@dptr,crc16_app@ptr
 11415  007156  0060  F050  F01C   	movff	crc16_app@dptr+1,crc16_app@ptr+1
 11416                           
 11417                           ;../app/app_src/crc.c: 6:     uint16_t result;;../app/app_src/crc.c: 8:     CRCACCL = se
      +                          ed;
 11418  00715C  0060  F05F  F962   	movff	crc16_app@seed,14690	;volatile
 11419                           
 11420                           ;../app/app_src/crc.c: 9:     CRCACCH = seed >> 8;
 11421  007162  0060  F063  F963   	movff	crc16_app@seed+1,14691	;volatile
 11422                           
 11423                           ;../app/app_src/crc.c: 12:     CRCCON0bits.EN = 1;
 11424  007168  0139               	movlb	57	; () banked
 11425  00716A  8F68               	bsf	104,7,b	;volatile
 11426                           
 11427                           ; BSR set to: 57
 11428                           ;../app/app_src/crc.c: 13:     CRCCON0bits.CRCGO = 1;
 11429  00716C  8D68               	bsf	104,6,b	;volatile
 11430                           
 11431                           ; BSR set to: 57
 11432                           ;../app/app_src/crc.c: 14:     for(uint16_t i = 0; i < len; i++ )
 11433  00716E  0E00               	movlw	0
 11434  007170  6E1E               	movwf	(crc16_app@i+1)^0,c
 11435  007172  0E00               	movlw	0
 11436  007174  6E1D               	movwf	crc16_app@i^0,c
 11437  007176  D00F               	goto	l12913
 11438  007178                     l606:
 11439                           
 11440                           ; BSR set to: 57
 11441  007178  B168               	btfsc	104,0,b	;volatile
 11442  00717A  D7FE               	goto	l606
 11443                           
 11444                           ; BSR set to: 57
 11445                           ;../app/app_src/crc.c: 17:         CRC_8BitDataWrite(*ptr);
 11446  00717C  0060  F06F  FFD9   	movff	crc16_app@ptr,fsr2l
 11447  007182  0060  F073  FFDA   	movff	crc16_app@ptr+1,fsr2h
 11448  007188  50DF               	movf	indf2,w,c
 11449  00718A  EC0D  F046         	call	_CRC_8BitDataWrite
 11450                           
 11451                           ; BSR set to: 57
 11452                           ;../app/app_src/crc.c: 18:         ptr++;
 11453  00718E  4A1B               	infsnz	crc16_app@ptr^0,f,c
 11454  007190  2A1C               	incf	(crc16_app@ptr+1)^0,f,c
 11455                           
 11456                           ; BSR set to: 57
 11457                           ;../app/app_src/crc.c: 19:     }
 11458  007192  4A1D               	infsnz	crc16_app@i^0,f,c
 11459  007194  2A1E               	incf	(crc16_app@i+1)^0,f,c
 11460  007196                     l12913:
 11461                           
 11462                           ; BSR set to: 57
 11463  007196  5015               	movf	crc16_app@len^0,w,c
 11464  007198  5C1D               	subwf	crc16_app@i^0,w,c
 11465  00719A  5016               	movf	(crc16_app@len+1)^0,w,c
 11466  00719C  581E               	subwfb	(crc16_app@i+1)^0,w,c
 11467  00719E  A0D8               	btfss	status,0,c
 11468  0071A0  D7EB               	goto	l606
 11469  0071A2                     u12100:
 11470                           
 11471                           ; BSR set to: 57
 11472  0071A2  BB68               	btfsc	104,5,b	;volatile
 11473  0071A4  D7FE               	goto	u12100
 11474                           
 11475                           ; BSR set to: 57
 11476                           ;../app/app_src/crc.c: 22:     result = CRC_CalculatedResultGet(0,0);
 11477  0071A6  0E00               	movlw	0
 11478  0071A8  6E0A               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
 11479  0071AA  0E00               	movlw	0
 11480  0071AC  6E09               	movwf	CRC_CalculatedResultGet@xorValue^0,c
 11481  0071AE  0E00               	movlw	0
 11482  0071B0  EC10  F02F         	call	_CRC_CalculatedResultGet
 11483  0071B4  0060  F024  F019   	movff	?_CRC_CalculatedResultGet,crc16_app@result
 11484  0071BA  0060  F028  F01A   	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 11485                           
 11486                           ;../app/app_src/crc.c: 23:     CRCCON0bits.CRCGO = 0;
 11487  0071C0  0139               	movlb	57	; () banked
 11488  0071C2  9D68               	bcf	104,6,b	;volatile
 11489                           
 11490                           ; BSR set to: 57
 11491                           ;../app/app_src/crc.c: 24:     CRCCON0bits.EN = 0;
 11492  0071C4  9F68               	bcf	104,7,b	;volatile
 11493                           
 11494                           ; BSR set to: 57
 11495                           ;../app/app_src/crc.c: 25:     return(result);
 11496  0071C6  0060  F064  F013   	movff	crc16_app@result,?_crc16_app
 11497  0071CC  0060  F068  F014   	movff	crc16_app@result+1,?_crc16_app+1
 11498                           
 11499                           ; BSR set to: 57
 11500  0071D2  0012               	return		;funcret
 11501  0071D4                     __end_of_crc16_app:
 11502                           	opt callstack 0
 11503                           
 11504 ;; *************** function _CRC_CalculatedResultGet *****************
 11505 ;; Defined at:
 11506 ;;		line 159 in file "mcc_generated_files/crc.c"
 11507 ;; Parameters:    Size  Location     Type
 11508 ;;  reverse         1    wreg     _Bool 
 11509 ;;  xorValue        2    8[COMRAM] unsigned short 
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;  reverse         1   15[COMRAM] _Bool 
 11512 ;;  result          2   16[COMRAM] unsigned short 
 11513 ;;  mask            2   13[COMRAM] unsigned short 
 11514 ;; Return value:  Size  Location     Type
 11515 ;;                  2    8[COMRAM] unsigned short 
 11516 ;; Registers used:
 11517 ;;		wreg, status,2, status,0, cstack
 11518 ;; Tracked objects:
 11519 ;;		On entry : 3F/39
 11520 ;;		On exit  : 0/0
 11521 ;;		Unchanged: 0/0
 11522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11524 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11525 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;Total ram usage:       10 bytes
 11528 ;; Hardware stack levels used:    1
 11529 ;; Hardware stack levels required when called:    8
 11530 ;; This function calls:
 11531 ;;		_CRC_ReverseValue
 11532 ;; This function is called by:
 11533 ;;		_crc16_app
 11534 ;; This function uses a non-reentrant model
 11535 ;;
 11536                           
 11537                           	psect	text62
 11538  005E20                     __ptext62:
 11539                           	opt callstack 0
 11540  005E20                     _CRC_CalculatedResultGet:
 11541                           	opt callstack 20
 11542                           
 11543                           ; BSR set to: 57
 11544                           ;incstack = 0
 11545                           ;CRC_CalculatedResultGet@reverse stored from wreg
 11546  005E20  6E10               	movwf	CRC_CalculatedResultGet@reverse^0,c
 11547                           
 11548                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11549  005E22  0139               	movlb	57	; () banked
 11550  005E24  9D68               	bcf	104,6,b	;volatile
 11551                           
 11552                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11553  005E26  9DA0               	bcf	160,6,b	;volatile
 11554                           
 11555                           ; BSR set to: 57
 11556                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11557  005E28  5169               	movf	105,w,b	;volatile
 11558  005E2A  0B0F               	andlw	15
 11559  005E2C  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11560  005E2E  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11561  005E30  5169               	movf	105,w,b	;volatile
 11562  005E32  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11563  005E34  0B0F               	andlw	-241
 11564  005E36  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11565  005E38  6F69               	movwf	105,b	;volatile
 11566                           
 11567                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11568  005E3A  0E08               	movlw	8
 11569  005E3C  0101               	movlb	1	; () banked
 11570  005E3E  65DB               	cpfsgt	(_crcObj+1)& (0+255),b
 11571  005E40  D005               	goto	l12267
 11572                           
 11573                           ; BSR set to: 1
 11574                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11575  005E42  0E00               	movlw	0
 11576  005E44  0139               	movlb	57	; () banked
 11577  005E46  6F61               	movwf	97,b	;volatile
 11578                           
 11579                           ;mcc_generated_files/crc.c: 171:          CRCDATL = 0;
 11580  005E48  0E00               	movlw	0
 11581  005E4A  D002               	goto	L7
 11582  005E4C                     l12267:
 11583                           
 11584                           ; BSR set to: 1
 11585                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11586  005E4C  0E00               	movlw	0
 11587  005E4E  0139               	movlb	57	; () banked
 11588  005E50                     L7:
 11589  005E50  6F60               	movwf	96,b	;volatile
 11590                           
 11591                           ; BSR set to: 57
 11592                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11593  005E52  8D68               	bsf	104,6,b	;volatile
 11594  005E54                     l1600:
 11595                           
 11596                           ; BSR set to: 57
 11597  005E54  ADA0               	btfss	160,6,b	;volatile
 11598  005E56  D7FE               	goto	l1600
 11599                           
 11600                           ; BSR set to: 57
 11601                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11602  005E58  9DA0               	bcf	160,6,b	;volatile
 11603                           
 11604                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11605  005E5A  9D68               	bcf	104,6,b	;volatile
 11606                           
 11607                           ; BSR set to: 57
 11608                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11609  005E5C  0060  F768  F00B   	movff	_crcObj,??_CRC_CalculatedResultGet
 11610  005E62  0EFF               	movlw	255
 11611  005E64  260B               	addwf	??_CRC_CalculatedResultGet^0,f,c
 11612  005E66  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 11613  005E68  5169               	movf	105,w,b	;volatile
 11614  005E6A  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11615  005E6C  0B0F               	andlw	-241
 11616  005E6E  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 11617  005E70  6F69               	movwf	105,b	;volatile
 11618                           
 11619                           ; BSR set to: 57
 11620                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11621  005E72  5163               	movf	99,w,b	;volatile
 11622  005E74  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 11623  005E76  5162               	movf	98,w,b	;volatile
 11624  005E78  6E11               	movwf	CRC_CalculatedResultGet@result^0,c
 11625  005E7A  0060  F02C  F012   	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 11626                           
 11627                           ; BSR set to: 57
 11628                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11629  005E80  0E10               	movlw	16
 11630  005E82  0101               	movlb	1	; () banked
 11631  005E84  61DB               	cpfslt	(_crcObj+1)& (0+255),b
 11632  005E86  D018               	goto	l12279
 11633                           
 11634                           ; BSR set to: 1
 11635                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11636  005E88  0060  F76C  F00B   	movff	_crcObj+1,??_CRC_CalculatedResultGet
 11637  005E8E  0E01               	movlw	1
 11638  005E90  6E0C               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 11639  005E92  0E00               	movlw	0
 11640  005E94  6E0D               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 11641  005E96  2A0B               	incf	??_CRC_CalculatedResultGet^0,f,c
 11642  005E98  D003               	goto	u11324
 11643  005E9A                     u11325:
 11644  005E9A  90D8               	bcf	status,0,c
 11645  005E9C  360C               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 11646  005E9E  360D               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 11647  005EA0                     u11324:
 11648  005EA0  2E0B               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 11649  005EA2  D7FB               	goto	u11325
 11650  005EA4  0EFF               	movlw	255
 11651  005EA6  240C               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 11652  005EA8  6E0E               	movwf	CRC_CalculatedResultGet@mask^0,c
 11653  005EAA  0EFF               	movlw	255
 11654  005EAC  200D               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 11655  005EAE  6E0F               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 11656                           
 11657                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11658  005EB0  500E               	movf	CRC_CalculatedResultGet@mask^0,w,c
 11659  005EB2  1611               	andwf	CRC_CalculatedResultGet@result^0,f,c
 11660  005EB4  500F               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 11661  005EB6  1612               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11662  005EB8                     l12279:
 11663                           
 11664                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11665  005EB8  5010               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 11666  005EBA  B4D8               	btfsc	status,2,c
 11667  005EBC  D00E               	goto	l12283
 11668                           
 11669                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11670  005EBE  0060  F044  F002   	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 11671  005EC4  0060  F048  F003   	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 11672  005ECA  EC41  F03D         	call	_CRC_ReverseValue	;wreg free
 11673  005ECE  0060  F008  F011   	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 11674  005ED4  0060  F00C  F012   	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 11675  005EDA                     l12283:
 11676                           
 11677                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11678  005EDA  5009               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 11679  005EDC  1A11               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 11680  005EDE  500A               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 11681  005EE0  1A12               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 11682                           
 11683                           ;mcc_generated_files/crc.c: 198:     return result;
 11684  005EE2  0060  F044  F009   	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 11685  005EE8  0060  F048  F00A   	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 11686  005EEE  0012               	return		;funcret
 11687  005EF0                     __end_of_CRC_CalculatedResultGet:
 11688                           	opt callstack 0
 11689                           
 11690 ;; *************** function _CRC_ReverseValue *****************
 11691 ;; Defined at:
 11692 ;;		line 138 in file "mcc_generated_files/crc.c"
 11693 ;; Parameters:    Size  Location     Type
 11694 ;;  crc             2    1[COMRAM] unsigned short 
 11695 ;; Auto vars:     Size  Location     Type
 11696 ;;  mask            2    6[COMRAM] unsigned short 
 11697 ;;  reverse         2    4[COMRAM] unsigned short 
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  2    1[COMRAM] unsigned short 
 11700 ;; Registers used:
 11701 ;;		wreg, status,2, status,0
 11702 ;; Tracked objects:
 11703 ;;		On entry : 0/1
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11710 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11711 ;;Total ram usage:        7 bytes
 11712 ;; Hardware stack levels used:    1
 11713 ;; Hardware stack levels required when called:    7
 11714 ;; This function calls:
 11715 ;;		Nothing
 11716 ;; This function is called by:
 11717 ;;		_CRC_CalculatedResultGet
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           	psect	text63
 11722  007A82                     __ptext63:
 11723                           	opt callstack 0
 11724  007A82                     _CRC_ReverseValue:
 11725                           	opt callstack 20
 11726                           
 11727                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11728                           
 11729                           ;incstack = 0
 11730  007A82  0E00               	movlw	0
 11731  007A84  6E08               	movwf	(CRC_ReverseValue@mask+1)^0,c
 11732  007A86  0E01               	movlw	1
 11733  007A88  6E07               	movwf	CRC_ReverseValue@mask^0,c
 11734                           
 11735                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11736  007A8A  0060  F76C  F004   	movff	_crcObj+1,??_CRC_ReverseValue
 11737  007A90  0EFF               	movlw	255
 11738  007A92  2604               	addwf	??_CRC_ReverseValue^0,f,c
 11739  007A94  2804               	incf	??_CRC_ReverseValue^0,w,c
 11740  007A96  D003               	goto	u10350
 11741  007A98                     u10355:
 11742  007A98  90D8               	bcf	status,0,c
 11743  007A9A  3607               	rlcf	CRC_ReverseValue@mask^0,f,c
 11744  007A9C  3608               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 11745  007A9E                     u10350:
 11746  007A9E  2EE8               	decfsz	wreg,f,c
 11747  007AA0  D7FB               	goto	u10355
 11748                           
 11749                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11750  007AA2  0E00               	movlw	0
 11751  007AA4  6E06               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 11752  007AA6  0E00               	movlw	0
 11753  007AA8  6E05               	movwf	CRC_ReverseValue@reverse^0,c
 11754                           
 11755                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11756  007AAA  D00C               	goto	l1591
 11757  007AAC                     l1592:
 11758                           
 11759                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11760  007AAC  A002               	btfss	CRC_ReverseValue@crc^0,0,c
 11761  007AAE  D004               	goto	l11551
 11762                           
 11763                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11764  007AB0  5007               	movf	CRC_ReverseValue@mask^0,w,c
 11765  007AB2  1205               	iorwf	CRC_ReverseValue@reverse^0,f,c
 11766  007AB4  5008               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 11767  007AB6  1206               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 11768  007AB8                     l11551:
 11769                           
 11770                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11771  007AB8  90D8               	bcf	status,0,c
 11772  007ABA  3208               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 11773  007ABC  3207               	rrcf	CRC_ReverseValue@mask^0,f,c
 11774                           
 11775                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11776  007ABE  90D8               	bcf	status,0,c
 11777  007AC0  3203               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 11778  007AC2  3202               	rrcf	CRC_ReverseValue@crc^0,f,c
 11779  007AC4                     l1591:
 11780                           
 11781                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11782  007AC4  5002               	movf	CRC_ReverseValue@crc^0,w,c
 11783  007AC6  1003               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 11784  007AC8  A4D8               	btfss	status,2,c
 11785  007ACA  D7F0               	goto	l1592
 11786                           
 11787                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11788  007ACC  0060  F014  F002   	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 11789  007AD2  0060  F018  F003   	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 11790  007AD8  0012               	return		;funcret
 11791  007ADA                     __end_of_CRC_ReverseValue:
 11792                           	opt callstack 0
 11793                           
 11794 ;; *************** function _CRC_8BitDataWrite *****************
 11795 ;; Defined at:
 11796 ;;		line 125 in file "mcc_generated_files/crc.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;  data            1    wreg     unsigned char 
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;  data            1    1[COMRAM] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      _Bool 
 11803 ;; Registers used:
 11804 ;;		wreg
 11805 ;; Tracked objects:
 11806 ;;		On entry : 3F/39
 11807 ;;		On exit  : 3F/39
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;Total ram usage:        1 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    7
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		_crc16_app
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           	psect	text64
 11825  008C1A                     __ptext64:
 11826                           	opt callstack 0
 11827  008C1A                     _CRC_8BitDataWrite:
 11828                           	opt callstack 21
 11829                           
 11830                           ;incstack = 0
 11831                           ;CRC_8BitDataWrite@data stored from wreg
 11832  008C1A  6E02               	movwf	CRC_8BitDataWrite@data^0,c
 11833                           
 11834                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11835  008C1C  0139               	movlb	57	; () banked
 11836  008C1E  B168               	btfsc	104,0,b	;volatile
 11837  008C20  0012               	return	
 11838                           
 11839                           ; BSR set to: 57
 11840                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11841  008C22  0060  F00B  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 11842                           
 11843                           ; BSR set to: 57
 11844  008C28  0012               	return		;funcret
 11845  008C2A                     __end_of_CRC_8BitDataWrite:
 11846                           	opt callstack 0
 11847                           
 11848 ;; *************** function _PHY_SetRxState *****************
 11849 ;; Defined at:
 11850 ;;		line 814 in file "../phy/sx1216/phy_src/phy.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  rx              1    wreg     _Bool 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;  rx              1    0[COMRAM] _Bool 
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  1    wreg      void 
 11857 ;; Registers used:
 11858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11859 ;; Tracked objects:
 11860 ;;		On entry : 3F/3D
 11861 ;;		On exit  : 3F/3D
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;Total ram usage:        0 bytes
 11869 ;; Hardware stack levels used:    1
 11870 ;; Hardware stack levels required when called:   13
 11871 ;; This function calls:
 11872 ;;		_receive
 11873 ;; This function is called by:
 11874 ;;		_bootLoadApplication
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text65
 11879  008D44                     __ptext65:
 11880                           	opt callstack 0
 11881  008D44                     _PHY_SetRxState:
 11882                           	opt callstack 16
 11883                           
 11884                           ; BSR set to: 61
 11885                           ;../phy/sx1216/phy_src/phy.c: 815:     receive(0);
 11886                           
 11887                           ; BSR set to: 57
 11888                           ;incstack = 0
 11889  008D44  0E00               	movlw	0
 11890  008D46  ECF0  F040         	call	_receive
 11891                           
 11892                           ; BSR set to: 61
 11893  008D4A  0012               	return		;funcret
 11894  008D4C                     __end_of_PHY_SetRxState:
 11895                           	opt callstack 0
 11896                           
 11897 ;; *************** function _PHY_SetChannel *****************
 11898 ;; Defined at:
 11899 ;;		line 818 in file "../phy/sx1216/phy_src/phy.c"
 11900 ;; Parameters:    Size  Location     Type
 11901 ;;  channel         1    wreg     unsigned char 
 11902 ;; Auto vars:     Size  Location     Type
 11903 ;;  channel         1   46[COMRAM] unsigned char 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  1    wreg      void 
 11906 ;; Registers used:
 11907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11908 ;; Tracked objects:
 11909 ;;		On entry : 3F/0
 11910 ;;		On exit  : 3F/3D
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11917 ;;Total ram usage:        1 bytes
 11918 ;; Hardware stack levels used:    1
 11919 ;; Hardware stack levels required when called:   12
 11920 ;; This function calls:
 11921 ;;		_setFrequency
 11922 ;; This function is called by:
 11923 ;;		_bootLoadApplication
 11924 ;; This function uses a non-reentrant model
 11925 ;;
 11926                           
 11927                           	psect	text66
 11928  008126                     __ptext66:
 11929                           	opt callstack 0
 11930  008126                     _PHY_SetChannel:
 11931                           	opt callstack 17
 11932                           
 11933                           ; BSR set to: 61
 11934                           ;incstack = 0
 11935                           ;PHY_SetChannel@channel stored from wreg
 11936  008126  6E2F               	movwf	PHY_SetChannel@channel^0,c
 11937                           
 11938                           ;../phy/sx1216/phy_src/phy.c: 819:     setFrequency(fhssList[channel]);
 11939  008128  502F               	movf	PHY_SetChannel@channel^0,w,c
 11940  00812A  0D04               	mullw	4
 11941  00812C  0EC9               	movlw	low _fhssList
 11942  00812E  24F3               	addwf	243,w,c
 11943  008130  6EF6               	movwf	tblptrl,c
 11944  008132  0EFC               	movlw	high _fhssList
 11945  008134  20F4               	addwfc	244,w,c
 11946  008136  6EF7               	movwf	tblptrh,c
 11947  008138                     	if	1	;There are 3 active tblptr bytes
 11948  008138  6AF8               	clrf	tblptru,c
 11949  00813A  0E00               	movlw	low (__mediumconst shr (0+16))
 11950  00813C  22F8               	addwfc	tblptru,f,c
 11951  00813E                     	endif
 11952  00813E  0009               	tblrd		*+
 11953  008140  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 11954  008146  0009               	tblrd		*+
 11955  008148  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 11956  00814E  0009               	tblrd		*+
 11957  008150  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 11958  008156  000A               	tblrd		*-
 11959  008158  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 11960  00815E  EC51  F025         	call	_setFrequency	;wreg free
 11961                           
 11962                           ; BSR set to: 61
 11963  008162  0012               	return		;funcret
 11964  008164                     __end_of_PHY_SetChannel:
 11965                           	opt callstack 0
 11966                           
 11967 ;; *************** function _NWK_SetPanId *****************
 11968 ;; Defined at:
 11969 ;;		line 116 in file "../nwk/nwk_src/nwk.c"
 11970 ;; Parameters:    Size  Location     Type
 11971 ;;  panId           2    3[COMRAM] unsigned short 
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;		None
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  1    wreg      void 
 11976 ;; Registers used:
 11977 ;;		cstack
 11978 ;; Tracked objects:
 11979 ;;		On entry : 3F/0
 11980 ;;		On exit  : 3F/0
 11981 ;;		Unchanged: 3F/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;Total ram usage:        2 bytes
 11988 ;; Hardware stack levels used:    1
 11989 ;; Hardware stack levels required when called:    8
 11990 ;; This function calls:
 11991 ;;		_PHY_SetPanId
 11992 ;; This function is called by:
 11993 ;;		_bootLoadApplication
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997                           	psect	text67
 11998  008A0A                     __ptext67:
 11999                           	opt callstack 0
 12000  008A0A                     _NWK_SetPanId:
 12001                           	opt callstack 21
 12002                           
 12003                           ; BSR set to: 0
 12004                           ;../nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);../nwk/nwk_src/nwk.c: 117:
      +                           {;../nwk/nwk_src/nwk.c: 118:   nwkIb.panId = panId;
 12005                           
 12006                           ; BSR set to: 61
 12007                           ;incstack = 0
 12008  008A0A  0060  F010  F102   	movff	NWK_SetPanId@panId,_nwkIb+2
 12009  008A10  0060  F014  F103   	movff	NWK_SetPanId@panId+1,_nwkIb+3
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;../nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
 12013  008A16  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
 12014  008A1C  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
 12015  008A22  ECBC  F046         	call	_PHY_SetPanId	;wreg free
 12016                           
 12017                           ; BSR set to: 0
 12018  008A26  0012               	return		;funcret
 12019  008A28                     __end_of_NWK_SetPanId:
 12020                           	opt callstack 0
 12021                           
 12022 ;; *************** function _PHY_SetPanId *****************
 12023 ;; Defined at:
 12024 ;;		line 822 in file "../phy/sx1216/phy_src/phy.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;  panId           2    1[COMRAM] unsigned short 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		None
 12033 ;; Tracked objects:
 12034 ;;		On entry : 3F/0
 12035 ;;		On exit  : 3F/0
 12036 ;;		Unchanged: 3F/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;Total ram usage:        2 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    7
 12045 ;; This function calls:
 12046 ;;		Nothing
 12047 ;; This function is called by:
 12048 ;;		_NWK_SetPanId
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text68
 12053  008D78                     __ptext68:
 12054                           	opt callstack 0
 12055  008D78                     _PHY_SetPanId:
 12056                           	opt callstack 21
 12057                           
 12058                           ; BSR set to: 0
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;incstack = 0
 12062  008D78  0012               	return		;funcret
 12063  008D7A                     __end_of_PHY_SetPanId:
 12064                           	opt callstack 0
 12065                           
 12066 ;; *************** function _NWK_SetAddr *****************
 12067 ;; Defined at:
 12068 ;;		line 106 in file "../nwk/nwk_src/nwk.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;  addr            2    3[COMRAM] unsigned short 
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;		None
 12073 ;; Return value:  Size  Location     Type
 12074 ;;                  1    wreg      void 
 12075 ;; Registers used:
 12076 ;;		cstack
 12077 ;; Tracked objects:
 12078 ;;		On entry : 3F/0
 12079 ;;		On exit  : 3F/0
 12080 ;;		Unchanged: 3F/0
 12081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12086 ;;Total ram usage:        2 bytes
 12087 ;; Hardware stack levels used:    1
 12088 ;; Hardware stack levels required when called:    8
 12089 ;; This function calls:
 12090 ;;		_PHY_SetShortAddr
 12091 ;; This function is called by:
 12092 ;;		_bootLoadApplication
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           	psect	text69
 12097  008A28                     __ptext69:
 12098                           	opt callstack 0
 12099  008A28                     _NWK_SetAddr:
 12100                           	opt callstack 21
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;../nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);../nwk/nwk_src/nwk.c: 107: {
      +                          ;../nwk/nwk_src/nwk.c: 108:   nwkIb.addr = addr;
 12104                           
 12105                           ; BSR set to: 0
 12106                           ;incstack = 0
 12107  008A28  0060  F010  F100   	movff	NWK_SetAddr@addr,_nwkIb
 12108  008A2E  0060  F014  F101   	movff	NWK_SetAddr@addr+1,_nwkIb+1
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;../nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
 12112  008A34  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
 12113  008A3A  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
 12114  008A40  ECBD  F046         	call	_PHY_SetShortAddr	;wreg free
 12115                           
 12116                           ; BSR set to: 0
 12117  008A44  0012               	return		;funcret
 12118  008A46                     __end_of_NWK_SetAddr:
 12119                           	opt callstack 0
 12120                           
 12121 ;; *************** function _PHY_SetShortAddr *****************
 12122 ;; Defined at:
 12123 ;;		line 826 in file "../phy/sx1216/phy_src/phy.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;  addr            2    1[COMRAM] unsigned short 
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;		None
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      void 
 12130 ;; Registers used:
 12131 ;;		None
 12132 ;; Tracked objects:
 12133 ;;		On entry : 3F/0
 12134 ;;		On exit  : 3F/0
 12135 ;;		Unchanged: 3F/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;Total ram usage:        2 bytes
 12142 ;; Hardware stack levels used:    1
 12143 ;; Hardware stack levels required when called:    7
 12144 ;; This function calls:
 12145 ;;		Nothing
 12146 ;; This function is called by:
 12147 ;;		_NWK_SetAddr
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	text70
 12152  008D7A                     __ptext70:
 12153                           	opt callstack 0
 12154  008D7A                     _PHY_SetShortAddr:
 12155                           	opt callstack 21
 12156                           
 12157                           ; BSR set to: 0
 12158                           
 12159                           ; BSR set to: 0
 12160                           ;incstack = 0
 12161  008D7A  0012               	return		;funcret
 12162  008D7C                     __end_of_PHY_SetShortAddr:
 12163                           	opt callstack 0
 12164                           
 12165 ;; *************** function _DATAEE_WriteByte_Platform *****************
 12166 ;; Defined at:
 12167 ;;		line 40 in file "../app/app_src/EEPROM.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;  addr            2    5[COMRAM] unsigned short 
 12170 ;;  data            1    7[COMRAM] unsigned char 
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;		None
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  1    wreg      void 
 12175 ;; Registers used:
 12176 ;;		wreg, status,2, status,0, cstack
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12182 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12186 ;;Total ram usage:        3 bytes
 12187 ;; Hardware stack levels used:    1
 12188 ;; Hardware stack levels required when called:    8
 12189 ;; This function calls:
 12190 ;;		_DATAEE_WriteByte
 12191 ;; This function is called by:
 12192 ;;		_cmdSetNaddr
 12193 ;;		_cmdSetAES
 12194 ;;		_cmdSetRFCH
 12195 ;;		_cmdSetTX
 12196 ;;		_cmdSetCADRSSI
 12197 ;;		_cmdBootLoad
 12198 ;;		_cmdSetSF
 12199 ;;		_bootLoadApplication
 12200 ;; This function uses a non-reentrant model
 12201 ;;
 12202                           
 12203                           	psect	text71
 12204  007ED6                     __ptext71:
 12205                           	opt callstack 0
 12206  007ED6                     _DATAEE_WriteByte_Platform:
 12207                           	opt callstack 19
 12208                           
 12209                           ;../app/app_src/EEPROM.c: 42:     DATAEE_WriteByte(addr, data);
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;incstack = 0
 12213  007ED6  0060  F018  F002   	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 12214  007EDC  0060  F01C  F003   	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12215  007EE2  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12216  007EE8  EC14  F040         	call	_DATAEE_WriteByte	;wreg free
 12217                           
 12218                           ;../app/app_src/EEPROM.c: 43:     DATAEE_WriteByte(addr + 256, data);
 12219  007EEC  0E00               	movlw	0
 12220  007EEE  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12221  007EF0  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12222  007EF2  0E01               	movlw	1
 12223  007EF4  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12224  007EF6  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12225  007EF8  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12226  007EFE  EC14  F040         	call	_DATAEE_WriteByte	;wreg free
 12227                           
 12228                           ;../app/app_src/EEPROM.c: 44:     DATAEE_WriteByte(addr + 512, data);
 12229  007F02  0E00               	movlw	0
 12230  007F04  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 12231  007F06  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12232  007F08  0E02               	movlw	2
 12233  007F0A  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 12234  007F0C  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12235  007F0E  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 12236  007F14  EC14  F040         	call	_DATAEE_WriteByte	;wreg free
 12237  007F18  0012               	return		;funcret
 12238  007F1A                     __end_of_DATAEE_WriteByte_Platform:
 12239                           	opt callstack 0
 12240                           
 12241 ;; *************** function _DATAEE_ReadByte_Platform *****************
 12242 ;; Defined at:
 12243 ;;		line 6 in file "../app/app_src/EEPROM.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  addr            2    5[COMRAM] unsigned short 
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;  copy1           1    9[COMRAM] unsigned char 
 12248 ;;  copy2           1    8[COMRAM] unsigned char 
 12249 ;;  copy3           1    7[COMRAM] unsigned char 
 12250 ;; Return value:  Size  Location     Type
 12251 ;;                  1    wreg      unsigned char 
 12252 ;; Registers used:
 12253 ;;		wreg, status,2, status,0, cstack
 12254 ;; Tracked objects:
 12255 ;;		On entry : 0/39
 12256 ;;		On exit  : 0/0
 12257 ;;		Unchanged: 0/0
 12258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12260 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12262 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12263 ;;Total ram usage:        5 bytes
 12264 ;; Hardware stack levels used:    1
 12265 ;; Hardware stack levels required when called:    8
 12266 ;; This function calls:
 12267 ;;		_DATAEE_ReadByte
 12268 ;;		_DATAEE_WriteByte
 12269 ;; This function is called by:
 12270 ;;		_bootLoadApplication
 12271 ;; This function uses a non-reentrant model
 12272 ;;
 12273                           
 12274                           	psect	text72
 12275  00555C                     __ptext72:
 12276                           	opt callstack 0
 12277  00555C                     _DATAEE_ReadByte_Platform:
 12278                           	opt callstack 21
 12279                           
 12280                           ;../app/app_src/EEPROM.c: 7:     uint8_t copy1, copy2, copy3;;../app/app_src/EEPROM.c: 8
      +                          :     copy1 = DATAEE_ReadByte(addr);
 12281                           
 12282                           ;incstack = 0
 12283  00555C  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
 12284  005562  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
 12285  005568  EC23  F045         	call	_DATAEE_ReadByte	;wreg free
 12286  00556C  6E0A               	movwf	DATAEE_ReadByte_Platform@copy1^0,c
 12287                           
 12288                           ;../app/app_src/EEPROM.c: 9:     copy2 = DATAEE_ReadByte(addr + 256);
 12289  00556E  0E00               	movlw	0
 12290  005570  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12291  005572  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12292  005574  0E01               	movlw	1
 12293  005576  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12294  005578  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12295  00557A  EC23  F045         	call	_DATAEE_ReadByte	;wreg free
 12296  00557E  6E09               	movwf	DATAEE_ReadByte_Platform@copy2^0,c
 12297                           
 12298                           ;../app/app_src/EEPROM.c: 10:     copy3 = DATAEE_ReadByte(addr + 512);
 12299  005580  0E00               	movlw	0
 12300  005582  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12301  005584  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 12302  005586  0E02               	movlw	2
 12303  005588  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12304  00558A  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 12305  00558C  EC23  F045         	call	_DATAEE_ReadByte	;wreg free
 12306  005590  6E08               	movwf	DATAEE_ReadByte_Platform@copy3^0,c
 12307                           
 12308                           ; BSR set to: 57
 12309                           ;../app/app_src/EEPROM.c: 13:     if((copy1 == copy2) && (copy2 == copy3)){
 12310  005592  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12311  005594  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12312  005596  A4D8               	btfss	status,2,c
 12313  005598  D006               	goto	l12937
 12314                           
 12315                           ; BSR set to: 57
 12316  00559A  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12317  00559C  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12318  00559E  A4D8               	btfss	status,2,c
 12319  0055A0  D002               	goto	l12937
 12320  0055A2                     u12130:
 12321                           
 12322                           ;../app/app_src/EEPROM.c: 14:         return copy1;
 12323  0055A2  500A               	movf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12324  0055A4  0012               	return	
 12325  0055A6                     l12937:
 12326                           
 12327                           ; BSR set to: 57
 12328  0055A6  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12329  0055A8  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12330  0055AA  A4D8               	btfss	status,2,c
 12331  0055AC  D010               	goto	l12949
 12332                           
 12333                           ; BSR set to: 57
 12334  0055AE  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12335  0055B0  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12336  0055B2  B4D8               	btfsc	status,2,c
 12337  0055B4  D00C               	goto	l12949
 12338                           
 12339                           ; BSR set to: 57
 12340                           ;../app/app_src/EEPROM.c: 18:         DATAEE_WriteByte(addr + 512, copy1);
 12341  0055B6  0E00               	movlw	0
 12342  0055B8  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12343  0055BA  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12344  0055BC  0E02               	movlw	2
 12345  0055BE  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12346  0055C0  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12347  0055C2  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12348  0055C8  EC14  F040         	call	_DATAEE_WriteByte	;wreg free
 12349  0055CC  D7EA               	goto	u12130
 12350  0055CE                     l12949:
 12351                           
 12352                           ; BSR set to: 57
 12353  0055CE  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12354  0055D0  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12355  0055D2  B4D8               	btfsc	status,2,c
 12356  0055D4  D011               	goto	l12961
 12357                           
 12358                           ; BSR set to: 57
 12359  0055D6  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12360  0055D8  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12361  0055DA  A4D8               	btfss	status,2,c
 12362  0055DC  D00D               	goto	l12961
 12363                           
 12364                           ; BSR set to: 57
 12365                           ;../app/app_src/EEPROM.c: 23:         DATAEE_WriteByte(addr , copy2);
 12366  0055DE  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
 12367  0055E4  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 12368  0055EA  0060  F024  F004   	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
 12369  0055F0  EC14  F040         	call	_DATAEE_WriteByte	;wreg free
 12370                           
 12371                           ;../app/app_src/EEPROM.c: 24:         return copy2;
 12372  0055F4  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12373  0055F6  0012               	return	
 12374  0055F8                     l12961:
 12375                           
 12376                           ; BSR set to: 57
 12377  0055F8  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12378  0055FA  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 12379  0055FC  A4D8               	btfss	status,2,c
 12380  0055FE  D010               	goto	l12973
 12381                           
 12382                           ; BSR set to: 57
 12383  005600  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 12384  005602  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 12385  005604  B4D8               	btfsc	status,2,c
 12386  005606  D00C               	goto	l12973
 12387                           
 12388                           ; BSR set to: 57
 12389                           ;../app/app_src/EEPROM.c: 28:         DATAEE_WriteByte(addr + 256, copy1);
 12390  005608  0E00               	movlw	0
 12391  00560A  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12392  00560C  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12393  00560E  0E01               	movlw	1
 12394  005610  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12395  005612  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12396  005614  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12397  00561A  EC14  F040         	call	_DATAEE_WriteByte	;wreg free
 12398  00561E  D7C1               	goto	u12130
 12399  005620                     l12973:
 12400                           
 12401                           ; BSR set to: 57
 12402                           ;../app/app_src/EEPROM.c: 34:         DATAEE_WriteByte(addr + 256, copy1);
 12403  005620  0E00               	movlw	0
 12404  005622  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12405  005624  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12406  005626  0E01               	movlw	1
 12407  005628  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12408  00562A  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12409  00562C  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12410  005632  EC14  F040         	call	_DATAEE_WriteByte	;wreg free
 12411                           
 12412                           ;../app/app_src/EEPROM.c: 35:         DATAEE_WriteByte(addr + 512, copy1);
 12413  005636  0E00               	movlw	0
 12414  005638  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 12415  00563A  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 12416  00563C  0E02               	movlw	2
 12417  00563E  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 12418  005640  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 12419  005642  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 12420  005648  EC14  F040         	call	_DATAEE_WriteByte	;wreg free
 12421  00564C  D7AA               	goto	u12130
 12422  00564E                     __end_of_DATAEE_ReadByte_Platform:
 12423                           	opt callstack 0
 12424                           
 12425 ;; *************** function _DATAEE_WriteByte *****************
 12426 ;; Defined at:
 12427 ;;		line 172 in file "mcc_generated_files/memory.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  bAdd            2    1[COMRAM] unsigned short 
 12430 ;;  bData           1    3[COMRAM] unsigned char 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		wreg, status,2, status,0
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12442 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12446 ;;Total ram usage:        4 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; Hardware stack levels required when called:    7
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_DATAEE_ReadByte_Platform
 12453 ;;		_DATAEE_WriteByte_Platform
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           	psect	text73
 12458  008028                     __ptext73:
 12459                           	opt callstack 0
 12460  008028                     _DATAEE_WriteByte:
 12461                           	opt callstack 19
 12462                           
 12463                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 12464                           
 12465                           ;incstack = 0
 12466  008028  0E00               	movlw	0
 12467  00802A  BED2               	btfsc	210,7,c	;volatile
 12468  00802C  0E01               	movlw	1
 12469  00802E  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 12470                           
 12471                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 12472  008030  5003               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 12473  008032  0B03               	andlw	3
 12474  008034  0139               	movlb	57	; () banked
 12475  008036  6FE1               	movwf	225,b	;volatile
 12476                           
 12477                           ; BSR set to: 57
 12478                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12479  008038  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 12480                           
 12481                           ; BSR set to: 57
 12482                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 12483  00803E  0060  F013  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 12484                           
 12485                           ; BSR set to: 57
 12486                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 12487  008044  0E3F               	movlw	-193
 12488  008046  17E5               	andwf	229,f,b	;volsfr
 12489                           
 12490                           ; BSR set to: 57
 12491                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 12492  008048  85E5               	bsf	229,2,b	;volsfr
 12493                           
 12494                           ; BSR set to: 57
 12495                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 12496  00804A  9ED2               	bcf	210,7,c	;volatile
 12497                           
 12498                           ; BSR set to: 57
 12499                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 12500  00804C  0E55               	movlw	85
 12501  00804E  6FE6               	movwf	230,b	;volsfr
 12502                           
 12503                           ; BSR set to: 57
 12504                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 12505  008050  0EAA               	movlw	170
 12506  008052  6FE6               	movwf	230,b	;volsfr
 12507                           
 12508                           ; BSR set to: 57
 12509                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 12510  008054  83E5               	bsf	229,1,b	;volsfr
 12511  008056                     l1180:
 12512                           
 12513                           ; BSR set to: 57
 12514                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 12515  008056  B3E5               	btfsc	229,1,b	;volsfr
 12516  008058  D7FE               	goto	l1180
 12517                           
 12518                           ; BSR set to: 57
 12519                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 12520  00805A  95E5               	bcf	229,2,b	;volsfr
 12521                           
 12522                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 12523  00805C  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 12524  00805E  D002               	bra	u9095
 12525  008060  9ED2               	bcf	210,7,c	;volatile
 12526  008062  D001               	bra	u9096
 12527  008064                     u9095:
 12528  008064  8ED2               	bsf	210,7,c	;volatile
 12529  008066                     u9096:
 12530  008066  0012               	return		;funcret
 12531  008068                     __end_of_DATAEE_WriteByte:
 12532                           	opt callstack 0
 12533                           
 12534 ;; *************** function _DATAEE_ReadByte *****************
 12535 ;; Defined at:
 12536 ;;		line 194 in file "mcc_generated_files/memory.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;  bAdd            2    1[COMRAM] unsigned short 
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;		None
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  1    wreg      unsigned char 
 12543 ;; Registers used:
 12544 ;;		wreg, status,2, status,0
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/39
 12547 ;;		On exit  : 3F/39
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12554 ;;Total ram usage:        2 bytes
 12555 ;; Hardware stack levels used:    1
 12556 ;; Hardware stack levels required when called:    7
 12557 ;; This function calls:
 12558 ;;		Nothing
 12559 ;; This function is called by:
 12560 ;;		_DATAEE_ReadByte_Platform
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text74
 12565  008A46                     __ptext74:
 12566                           	opt callstack 0
 12567  008A46                     _DATAEE_ReadByte:
 12568                           	opt callstack 21
 12569                           
 12570                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 12571                           
 12572                           ;incstack = 0
 12573  008A46  5003               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 12574  008A48  0B03               	andlw	3
 12575  008A4A  0139               	movlb	57	; () banked
 12576  008A4C  6FE1               	movwf	225,b	;volatile
 12577                           
 12578                           ; BSR set to: 57
 12579                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 12580  008A4E  0060  F00B  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 12581                           
 12582                           ; BSR set to: 57
 12583                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
 12584  008A54  0E3F               	movlw	-193
 12585  008A56  17E5               	andwf	229,f,b	;volsfr
 12586                           
 12587                           ; BSR set to: 57
 12588                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
 12589  008A58  81E5               	bsf	229,0,b	;volsfr
 12590                           
 12591                           ; BSR set to: 57
 12592                           ;mcc_generated_files/memory.c: 200:     __nop();
 12593  008A5A  F000               	nop	
 12594                           
 12595                           ;mcc_generated_files/memory.c: 201:     __nop();
 12596  008A5C  F000               	nop	
 12597                           
 12598                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
 12599  008A5E  0139               	movlb	57	; () banked
 12600  008A60  51E3               	movf	227,w,b	;volatile
 12601                           
 12602                           ; BSR set to: 57
 12603  008A62  0012               	return		;funcret
 12604  008A64                     __end_of_DATAEE_ReadByte:
 12605                           	opt callstack 0
 12606                           
 12607 ;; *************** function _SYS_TaskHandler *****************
 12608 ;; Defined at:
 12609 ;;		line 67 in file "../sys/sys_src/sys.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;		None
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1    wreg      void 
 12616 ;; Registers used:
 12617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/2
 12620 ;;		On exit  : 3F/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;Total ram usage:        0 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:   21
 12630 ;; This function calls:
 12631 ;;		_NWK_TaskHandler
 12632 ;;		_PHY_TaskHandler
 12633 ;;		_SYS_TimerTaskHandler
 12634 ;; This function is called by:
 12635 ;;		_main
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text75
 12640  008C8E                     __ptext75:
 12641                           	opt callstack 0
 12642  008C8E                     _SYS_TaskHandler:
 12643                           	opt callstack 9
 12644                           
 12645                           ;../sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 12646                           
 12647                           ; BSR set to: 57
 12648                           ;incstack = 0
 12649  008C8E  ECAC  F046         	call	_PHY_TaskHandler	;wreg free
 12650                           
 12651                           ;../sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 12652  008C92  EC4E  F046         	call	_NWK_TaskHandler	;wreg free
 12653                           
 12654                           ;../sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 12655  008C96  EC9A  F027         	call	_SYS_TimerTaskHandler	;wreg free
 12656                           
 12657                           ; BSR set to: 0
 12658  008C9A  0012               	return		;funcret
 12659  008C9C                     __end_of_SYS_TaskHandler:
 12660                           	opt callstack 0
 12661                           
 12662 ;; *************** function _SYS_TimerTaskHandler *****************
 12663 ;; Defined at:
 12664 ;;		line 112 in file "../sys/sys_src/sysTimer.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;		None
 12667 ;; Auto vars:     Size  Location     Type
 12668 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
 12669 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12670 ;;  elapsed         4   29[COMRAM] unsigned long 
 12671 ;;  cnt             1   28[COMRAM] unsigned char 
 12672 ;; Return value:  Size  Location     Type
 12673 ;;                  1    wreg      void 
 12674 ;; Registers used:
 12675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12676 ;; Tracked objects:
 12677 ;;		On entry : 0/0
 12678 ;;		On exit  : 3F/0
 12679 ;;		Unchanged: 0/0
 12680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12682 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12684 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12685 ;;Total ram usage:       11 bytes
 12686 ;; Hardware stack levels used:    1
 12687 ;; Hardware stack levels required when called:   10
 12688 ;; This function calls:
 12689 ;;		_nwkRxDuplicateRejectionTimerHandler
 12690 ;;		_nwkTxAckWaitTimerHandler
 12691 ;;		_nwkTxDelayTimerHandler
 12692 ;;		_placeTimer
 12693 ;; This function is called by:
 12694 ;;		_SYS_TaskHandler
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           	psect	text76
 12699  004F34                     __ptext76:
 12700                           	opt callstack 0
 12701  004F34                     _SYS_TimerTaskHandler:
 12702                           	opt callstack 19
 12703                           
 12704                           ;../sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;../sys/sys_src/sysTimer.c: 115:  
      +                             uint8_t cnt;;../sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;incstack = 0
 12708  004F34  0100               	movlb	0	; () banked
 12709  004F36  51E4               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 12710  004F38  11E5               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 12711  004F3A  B4D8               	btfsc	status,2,c
 12712  004F3C  0012               	return	
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;../sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 12716                           
 12717                           ;../sys/sys_src/sysTimer.c: 119:     }
 12718  004F3E  0139               	movlb	57	; () banked
 12719  004F40  9F93               	bcf	147,7,b	;volatile
 12720                           
 12721                           ;../sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 12722  004F42  0060  F390  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 12723                           
 12724                           ; BSR set to: 57
 12725                           ;../sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 12726  004F48  0E00               	movlw	0
 12727  004F4A  0100               	movlb	0	; () banked
 12728  004F4C  6FE5               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 12729  004F4E  0E00               	movlw	0
 12730  004F50  6FE4               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;../sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 12734  004F52  0139               	movlb	57	; () banked
 12735  004F54  8F93               	bsf	147,7,b	;volatile
 12736                           
 12737                           ;../sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 12738  004F56  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
 12739  004F58  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
 12740  004F5A  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
 12741  004F5C  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
 12742  004F5E  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
 12743                           
 12744                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12745  004F60  D04E               	goto	u17069
 12746  004F62                     l16701:
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;../sys/sys_src/sysTimer.c: 129:     {;../sys/sys_src/sysTimer.c: 130:         SYS_Timer
      +                          _t *timer = timers;
 12750  004F62  0060  F380  F022   	movff	_timers,SYS_TimerTaskHandler@timer
 12751  004F68  0060  F384  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;../sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 12755  004F6E  EE20 F002          	lfsr	2,2
 12756  004F72  51E0               	movf	_timers& (0+255),w,b
 12757  004F74  26D9               	addwf	fsr2l,f,c
 12758  004F76  51E1               	movf	(_timers+1)& (0+255),w,b
 12759  004F78  22DA               	addwfc	fsr2h,f,c
 12760  004F7A  50DE               	movf	postinc2,w,c
 12761  004F7C  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
 12762  004F7E  50DE               	movf	postinc2,w,c
 12763  004F80  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
 12764  004F82  50DE               	movf	postinc2,w,c
 12765  004F84  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
 12766  004F86  50DD               	movf	postdec2,w,c
 12767  004F88  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
 12768                           
 12769                           ;../sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 12770  004F8A  0060  F383  FFD9   	movff	_timers,fsr2l
 12771  004F90  0060  F387  FFDA   	movff	_timers+1,fsr2h
 12772  004F96  006F FF78  F0E0    	movff	postinc2,_timers
 12773  004F9C  006F FF74  F0E1    	movff	postdec2,_timers+1
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;../sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 12777  004FA2  EE20 F00A          	lfsr	2,10
 12778  004FA6  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12779  004FA8  26D9               	addwf	fsr2l,f,c
 12780  004FAA  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12781  004FAC  22DA               	addwfc	fsr2h,f,c
 12782  004FAE  04DE               	decf	postinc2,w,c
 12783  004FB0  A4D8               	btfss	status,2,c
 12784  004FB2  D008               	goto	l16709
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;../sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 12788  004FB4  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 12789  004FBA  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 12790  004FC0  EC5B  F01C         	call	_placeTimer	;wreg free
 12791  004FC4                     l16709:
 12792                           
 12793                           ;../sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 12794  004FC4  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 12795  004FCA  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 12796  004FD0  EE20 F00B          	lfsr	2,11
 12797  004FD4  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 12798  004FD6  26D9               	addwf	fsr2l,f,c
 12799  004FD8  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 12800  004FDA  22DA               	addwfc	fsr2h,f,c
 12801  004FDC  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
 12802  004FE2  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
 12803  004FE8  D801               	call	u17068
 12804  004FEA  D009               	goto	u17069
 12805  004FEC                     u17068:
 12806  004FEC  0005               	push	
 12807  004FEE  6EFA               	movwf	pclath,c
 12808  004FF0  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
 12809  004FF2  6EFD               	movwf	tosl,c
 12810  004FF4  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
 12811  004FF6  6EFE               	movwf	tosh,c
 12812  004FF8  6AFF               	clrf	tosu,c
 12813  004FFA  50FA               	movf	pclath,w,c
 12814  004FFC  0012               	return		;indir
 12815  004FFE                     u17069:
 12816                           
 12817                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 12818  004FFE  0100               	movlb	0	; () banked
 12819  005000  51E0               	movf	_timers& (0+255),w,b
 12820  005002  11E1               	iorwf	(_timers+1)& (0+255),w,b
 12821  005004  B4D8               	btfsc	status,2,c
 12822  005006  D010               	goto	u17080
 12823                           
 12824                           ; BSR set to: 0
 12825  005008  EE20 F002          	lfsr	2,2
 12826  00500C  51E0               	movf	_timers& (0+255),w,b
 12827  00500E  26D9               	addwf	fsr2l,f,c
 12828  005010  51E1               	movf	(_timers+1)& (0+255),w,b
 12829  005012  22DA               	addwfc	fsr2h,f,c
 12830  005014  50DE               	movf	postinc2,w,c
 12831  005016  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
 12832  005018  50DE               	movf	postinc2,w,c
 12833  00501A  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12834  00501C  50DE               	movf	postinc2,w,c
 12835  00501E  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12836  005020  50DE               	movf	postinc2,w,c
 12837  005022  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12838  005024  B0D8               	btfsc	status,0,c
 12839  005026  D79D               	goto	l16701
 12840  005028                     u17080:
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;../sys/sys_src/sysTimer.c: 139:     if (timers){
 12844  005028  51E0               	movf	_timers& (0+255),w,b
 12845  00502A  11E1               	iorwf	(_timers+1)& (0+255),w,b
 12846  00502C  B4D8               	btfsc	status,2,c
 12847  00502E  0012               	return	
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;../sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 12851  005030  EE20 F002          	lfsr	2,2
 12852  005034  51E0               	movf	_timers& (0+255),w,b
 12853  005036  26D9               	addwf	fsr2l,f,c
 12854  005038  51E1               	movf	(_timers+1)& (0+255),w,b
 12855  00503A  22DA               	addwfc	fsr2h,f,c
 12856  00503C  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
 12857  00503E  5EDE               	subwf	postinc2,f,c
 12858  005040  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 12859  005042  5ADE               	subwfb	postinc2,f,c
 12860  005044  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 12861  005046  5ADE               	subwfb	postinc2,f,c
 12862  005048  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 12863  00504A  5ADE               	subwfb	postinc2,f,c
 12864                           
 12865                           ; BSR set to: 0
 12866  00504C  0012               	return		;funcret
 12867  00504E                     __end_of_SYS_TimerTaskHandler:
 12868                           	opt callstack 0
 12869                           
 12870 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 12871 ;; Defined at:
 12872 ;;		line 205 in file "../nwk/nwk_src/nwkTx.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 12875 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12876 ;; Auto vars:     Size  Location     Type
 12877 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 12878 ;;		 -> nwkFrameFrames(685), NULL(0), 
 12879 ;;  restart         1   21[COMRAM] _Bool 
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  1    wreg      void 
 12882 ;; Registers used:
 12883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12884 ;; Tracked objects:
 12885 ;;		On entry : 0/0
 12886 ;;		On exit  : 0/0
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12890 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;Total ram usage:        7 bytes
 12894 ;; Hardware stack levels used:    1
 12895 ;; Hardware stack levels required when called:    9
 12896 ;; This function calls:
 12897 ;;		_SYS_TimerStart
 12898 ;;		_nwkFrameNext
 12899 ;;		_nwkTxConfirm
 12900 ;; This function is called by:
 12901 ;;		_nwkTxInit
 12902 ;;		_SYS_TimerTaskHandler
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text77
 12907  006D8A                     __ptext77:
 12908                           	opt callstack 0
 12909  006D8A                     _nwkTxAckWaitTimerHandler:
 12910                           	opt callstack 19
 12911                           
 12912                           ;../nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);.
      +                          ./nwk/nwk_src/nwkTx.c: 206: {;../nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*
      +                          )0);
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;incstack = 0
 12916  006D8A  0E00               	movlw	0
 12917  006D8C  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
 12918  006D8E  0E00               	movlw	0
 12919  006D90  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
 12920                           
 12921                           ;../nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 12922  006D92  0E00               	movlw	0
 12923  006D94  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 12924                           
 12925                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 12926  006D96  D023               	goto	l2313
 12927  006D98                     l16401:
 12928                           
 12929                           ;../nwk/nwk_src/nwkTx.c: 211:   {;../nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state)
 12930  006D98  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 12931  006D9E  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 12932  006DA4  0E16               	movlw	22
 12933  006DA6  18DE               	xorwf	postinc2,w,c
 12934  006DA8  A4D8               	btfss	status,2,c
 12935  006DAA  D019               	goto	l2313
 12936                           
 12937                           ;../nwk/nwk_src/nwkTx.c: 213:     {;../nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 12938  006DAC  0E01               	movlw	1
 12939  006DAE  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 12940                           
 12941                           ;../nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 12942  006DB0  EE20 F084          	lfsr	2,132
 12943  006DB4  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 12944  006DB6  26D9               	addwf	fsr2l,f,c
 12945  006DB8  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 12946  006DBA  22DA               	addwfc	fsr2h,f,c
 12947  006DBC  06DE               	decf	postinc2,f,c
 12948  006DBE  0E00               	movlw	0
 12949  006DC0  5ADD               	subwfb	postdec2,f,c
 12950  006DC2  50DE               	movf	postinc2,w,c
 12951  006DC4  10DE               	iorwf	postinc2,w,c
 12952  006DC6  A4D8               	btfss	status,2,c
 12953  006DC8  D00A               	goto	l2313
 12954                           
 12955                           ;../nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 12956  006DCA  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 12957  006DD0  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 12958  006DD6  0E10               	movlw	16
 12959  006DD8  6E04               	movwf	nwkTxConfirm@status^0,c
 12960  006DDA  ECF7  F043         	call	_nwkTxConfirm	;wreg free
 12961  006DDE                     l2313:
 12962                           
 12963                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 12964  006DDE  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 12965  006DE4  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 12966  006DEA  EC98  F037         	call	_nwkFrameNext	;wreg free
 12967  006DEE  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 12968  006DF4  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 12969  006DFA  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 12970  006DFC  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 12971  006DFE  A4D8               	btfss	status,2,c
 12972  006E00  D7CB               	goto	l16401
 12973                           
 12974                           ;../nwk/nwk_src/nwkTx.c: 221:   if (restart)
 12975  006E02  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
 12976  006E04  B4D8               	btfsc	status,2,c
 12977  006E06  0012               	return	
 12978                           
 12979                           ;../nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 12980  006E08  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 12981  006E0E  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 12982  006E14  ECBC  F043         	call	_SYS_TimerStart	;wreg free
 12983  006E18  0012               	return		;funcret
 12984  006E1A                     __end_of_nwkTxAckWaitTimerHandler:
 12985                           	opt callstack 0
 12986                           
 12987 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 12988 ;; Defined at:
 12989 ;;		line 181 in file "../nwk/nwk_src/nwkRx.c"
 12990 ;; Parameters:    Size  Location     Type
 12991 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 12992 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 12993 ;; Auto vars:     Size  Location     Type
 12994 ;;  i               1   20[COMRAM] unsigned char 
 12995 ;;  restart         1   19[COMRAM] _Bool 
 12996 ;; Return value:  Size  Location     Type
 12997 ;;                  1    wreg      void 
 12998 ;; Registers used:
 12999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13000 ;; Tracked objects:
 13001 ;;		On entry : 0/0
 13002 ;;		On exit  : 0/0
 13003 ;;		Unchanged: 0/0
 13004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13006 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13009 ;;Total ram usage:        4 bytes
 13010 ;; Hardware stack levels used:    1
 13011 ;; Hardware stack levels required when called:    9
 13012 ;; This function calls:
 13013 ;;		_SYS_TimerStart
 13014 ;; This function is called by:
 13015 ;;		_nwkRxInit
 13016 ;;		_SYS_TimerTaskHandler
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           	psect	text78
 13021  007B84                     __ptext78:
 13022                           	opt callstack 0
 13023  007B84                     _nwkRxDuplicateRejectionTimerHandler:
 13024                           	opt callstack 19
 13025                           
 13026                           ;../nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_
      +                          t *timer);../nwk/nwk_src/nwkRx.c: 182: {;../nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 
      +                          0;
 13027                           
 13028                           ;incstack = 0
 13029  007B84  0E00               	movlw	0
 13030  007B86  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 13031                           
 13032                           ;../nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
 13033  007B88  0E00               	movlw	0
 13034  007B8A  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13035  007B8C                     l16383:
 13036                           
 13037                           ;../nwk/nwk_src/nwkRx.c: 186:   {;../nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRej
      +                          ectionTable[i].ttl)
 13038  007B8C  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 13039  007B8E  0D05               	mullw	5
 13040  007B90  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 13041  007B92  24F3               	addwf	243,w,c
 13042  007B94  6ED9               	movwf	fsr2l,c
 13043  007B96  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 13044  007B98  20F4               	addwfc	prodh,w,c
 13045  007B9A  6EDA               	movwf	fsr2h,c
 13046  007B9C  50DF               	movf	indf2,w,c
 13047  007B9E  B4D8               	btfsc	status,2,c
 13048  007BA0  D00B               	goto	l16389
 13049                           
 13050                           ;../nwk/nwk_src/nwkRx.c: 188:     {;../nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRej
      +                          ectionTable[i].ttl--;
 13051  007BA2  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 13052  007BA4  0D05               	mullw	5
 13053  007BA6  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 13054  007BA8  24F3               	addwf	243,w,c
 13055  007BAA  6ED9               	movwf	fsr2l,c
 13056  007BAC  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 13057  007BAE  20F4               	addwfc	prodh,w,c
 13058  007BB0  6EDA               	movwf	fsr2h,c
 13059  007BB2  06DF               	decf	indf2,f,c
 13060                           
 13061                           ;../nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 13062  007BB4  0E01               	movlw	1
 13063  007BB6  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 13064  007BB8                     l16389:
 13065                           
 13066                           ;../nwk/nwk_src/nwkRx.c: 192:   }
 13067  007BB8  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
 13068  007BBA  0E09               	movlw	9
 13069  007BBC  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
 13070  007BBE  D7E6               	goto	l16383
 13071                           
 13072                           ;../nwk/nwk_src/nwkRx.c: 194:   if (restart)
 13073  007BC0  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
 13074  007BC2  B4D8               	btfsc	status,2,c
 13075  007BC4  0012               	return	
 13076                           
 13077                           ;../nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 13078  007BC6  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 13079  007BCC  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 13080  007BD2  ECBC  F043         	call	_SYS_TimerStart	;wreg free
 13081  007BD6  0012               	return		;funcret
 13082  007BD8                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 13083                           	opt callstack 0
 13084                           
 13085 ;; *************** function _nwkTxDelayTimerHandler *****************
 13086 ;; Defined at:
 13087 ;;		line 244 in file "../nwk/nwk_src/nwkTx.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 13090 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 13093 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13094 ;;  restart         1   21[COMRAM] _Bool 
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  1    wreg      void 
 13097 ;; Registers used:
 13098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;Total ram usage:        7 bytes
 13109 ;; Hardware stack levels used:    1
 13110 ;; Hardware stack levels required when called:    9
 13111 ;; This function calls:
 13112 ;;		_SYS_TimerStart
 13113 ;;		_nwkFrameNext
 13114 ;; This function is called by:
 13115 ;;		_nwkTxInit
 13116 ;;		_SYS_TimerTaskHandler
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           	psect	text79
 13121  006E1A                     __ptext79:
 13122                           	opt callstack 0
 13123  006E1A                     _nwkTxDelayTimerHandler:
 13124                           	opt callstack 19
 13125                           
 13126                           ;../nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);../
      +                          nwk/nwk_src/nwkTx.c: 245: {;../nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0
      +                          );
 13127                           
 13128                           ;incstack = 0
 13129  006E1A  0E00               	movlw	0
 13130  006E1C  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
 13131  006E1E  0E00               	movlw	0
 13132  006E20  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
 13133                           
 13134                           ;../nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 13135  006E22  0E00               	movlw	0
 13136  006E24  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13137                           
 13138                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13139  006E26  D021               	goto	l16425
 13140  006E28                     l16417:
 13141                           
 13142                           ;../nwk/nwk_src/nwkTx.c: 250:   {;../nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT
      +                          _DELAY == frame->state)
 13143  006E28  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13144  006E2E  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13145  006E34  0E11               	movlw	17
 13146  006E36  18DE               	xorwf	postinc2,w,c
 13147  006E38  A4D8               	btfss	status,2,c
 13148  006E3A  D017               	goto	l16425
 13149                           
 13150                           ;../nwk/nwk_src/nwkTx.c: 252:     {;../nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 13151  006E3C  0E01               	movlw	1
 13152  006E3E  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 13153                           
 13154                           ;../nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 13155  006E40  EE20 F084          	lfsr	2,132
 13156  006E44  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13157  006E46  26D9               	addwf	fsr2l,f,c
 13158  006E48  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13159  006E4A  22DA               	addwfc	fsr2h,f,c
 13160  006E4C  06DE               	decf	postinc2,f,c
 13161  006E4E  0E00               	movlw	0
 13162  006E50  5ADD               	subwfb	postdec2,f,c
 13163  006E52  50DE               	movf	postinc2,w,c
 13164  006E54  10DE               	iorwf	postinc2,w,c
 13165  006E56  A4D8               	btfss	status,2,c
 13166  006E58  D008               	goto	l16425
 13167                           
 13168                           ;../nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 13169  006E5A  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 13170  006E60  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 13171  006E66  0E13               	movlw	19
 13172  006E68  6EDF               	movwf	indf2,c
 13173  006E6A                     l16425:
 13174                           
 13175                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 13176  006E6A  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 13177  006E70  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 13178  006E76  EC98  F037         	call	_nwkFrameNext	;wreg free
 13179  006E7A  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 13180  006E80  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 13181  006E86  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 13182  006E88  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 13183  006E8A  A4D8               	btfss	status,2,c
 13184  006E8C  D7CD               	goto	l16417
 13185                           
 13186                           ;../nwk/nwk_src/nwkTx.c: 260:   if (restart)
 13187  006E8E  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
 13188  006E90  B4D8               	btfsc	status,2,c
 13189  006E92  0012               	return	
 13190                           
 13191                           ;../nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 13192  006E94  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 13193  006E9A  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 13194  006EA0  ECBC  F043         	call	_SYS_TimerStart	;wreg free
 13195  006EA4  0012               	return		;funcret
 13196  006EA6                     __end_of_nwkTxDelayTimerHandler:
 13197                           	opt callstack 0
 13198                           
 13199 ;; *************** function _nwkTxConfirm *****************
 13200 ;; Defined at:
 13201 ;;		line 227 in file "../nwk/nwk_src/nwkTx.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 13204 ;;		 -> nwkFrameFrames(685), NULL(0), 
 13205 ;;  status          1    3[COMRAM] unsigned char 
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;		None
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  1    wreg      void 
 13210 ;; Registers used:
 13211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13217 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13221 ;;Total ram usage:        3 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:    7
 13224 ;; This function calls:
 13225 ;;		Nothing
 13226 ;; This function is called by:
 13227 ;;		_nwkTxAckWaitTimerHandler
 13228 ;; This function uses a non-reentrant model
 13229 ;;
 13230                           
 13231                           	psect	text80
 13232  0087EE                     __ptext80:
 13233                           	opt callstack 0
 13234  0087EE                     _nwkTxConfirm:
 13235                           	opt callstack 20
 13236                           
 13237                           ;../nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 228: {;../nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CON
      +                          FIRM;
 13238                           
 13239                           ;incstack = 0
 13240  0087EE  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 13241  0087F4  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 13242  0087FA  0E17               	movlw	23
 13243  0087FC  6EDF               	movwf	indf2,c
 13244                           
 13245                           ;../nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 13246  0087FE  EE20 F083          	lfsr	2,131
 13247  008802  5002               	movf	nwkTxConfirm@frame^0,w,c
 13248  008804  26D9               	addwf	fsr2l,f,c
 13249  008806  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
 13250  008808  22DA               	addwfc	fsr2h,f,c
 13251  00880A  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
 13252  008810  0012               	return		;funcret
 13253  008812                     __end_of_nwkTxConfirm:
 13254                           	opt callstack 0
 13255                           
 13256 ;; *************** function _PHY_TaskHandler *****************
 13257 ;; Defined at:
 13258 ;;		line 859 in file "../phy/sx1216/phy_src/phy.c"
 13259 ;; Parameters:    Size  Location     Type
 13260 ;;		None
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;		None
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  1    wreg      void 
 13265 ;; Registers used:
 13266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/2
 13269 ;;		On exit  : 2/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;Total ram usage:        0 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:   15
 13279 ;; This function calls:
 13280 ;;		_radio_engine
 13281 ;; This function is called by:
 13282 ;;		_SYS_TaskHandler
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           	psect	text81
 13287  008D58                     __ptext81:
 13288                           	opt callstack 0
 13289  008D58                     _PHY_TaskHandler:
 13290                           	opt callstack 14
 13291                           
 13292                           ;../phy/sx1216/phy_src/phy.c: 860:     radio_engine();
 13293                           
 13294                           ;incstack = 0
 13295  008D58  ECE6  F025         	call	_radio_engine	;wreg free
 13296  008D5C  0012               	return		;funcret
 13297  008D5E                     __end_of_PHY_TaskHandler:
 13298                           	opt callstack 0
 13299                           
 13300 ;; *************** function _radio_engine *****************
 13301 ;; Defined at:
 13302 ;;		line 742 in file "../phy/sx1216/phy_src/phy.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;		None
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/2
 13313 ;;		On exit  : 2/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;Total ram usage:        2 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:   14
 13323 ;; This function calls:
 13324 ;;		_DIO0_Receive_ISR
 13325 ;;		_PHY_DataConf
 13326 ;;		_SX1276Read
 13327 ;;		_cad
 13328 ;;		_get_timer0base
 13329 ;;		_initRadio
 13330 ;;		_receive
 13331 ;;		_set_timer0base
 13332 ;; This function is called by:
 13333 ;;		_PHY_TaskHandler
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           	psect	text82
 13338  004BCC                     __ptext82:
 13339                           	opt callstack 0
 13340  004BCC                     _radio_engine:
 13341                           	opt callstack 14
 13342                           
 13343                           ;../phy/sx1216/phy_src/phy.c: 743:     switch(radio_state_var){
 13344                           
 13345                           ;incstack = 0
 13346  004BCC  D073               	goto	l16487
 13347  004BCE                     l16433:
 13348                           
 13349                           ; BSR set to: 1
 13350                           ;../phy/sx1216/phy_src/phy.c: 745:             initRadio();
 13351  004BCE  ECD7  F020         	call	_initRadio	;wreg free
 13352                           
 13353                           ; BSR set to: 1
 13354                           ;../phy/sx1216/phy_src/phy.c: 746:             radio_state_var = START_RX;
 13355  004BD2  0E01               	movlw	1
 13356  004BD4  6F64               	movwf	_radio_state_var& (0+255),b
 13357                           
 13358                           ; BSR set to: 1
 13359                           ;../phy/sx1216/phy_src/phy.c: 747:             need_radio_reset = 0;
 13360  004BD6  0E00               	movlw	0
 13361  004BD8  6F6A               	movwf	_need_radio_reset& (0+255),b
 13362                           
 13363                           ;../phy/sx1216/phy_src/phy.c: 748:             break;
 13364  004BDA  0012               	return	
 13365  004BDC                     l16439:
 13366                           
 13367                           ; BSR set to: 1
 13368                           ;../phy/sx1216/phy_src/phy.c: 750:             if(need_radio_reset){
 13369  004BDC  516A               	movf	_need_radio_reset& (0+255),w,b
 13370  004BDE  B4D8               	btfsc	status,2,c
 13371  004BE0  D003               	goto	l16443
 13372  004BE2                     u16600:
 13373                           
 13374                           ; BSR set to: 1
 13375                           ;../phy/sx1216/phy_src/phy.c: 751:                 radio_state_var = INIT_RADIO;
 13376  004BE2  0E00               	movlw	0
 13377  004BE4  6F64               	movwf	_radio_state_var& (0+255),b
 13378                           
 13379                           ;../phy/sx1216/phy_src/phy.c: 752:                 break;
 13380  004BE6  0012               	return	
 13381  004BE8                     l16443:
 13382                           
 13383                           ; BSR set to: 1
 13384                           ;../phy/sx1216/phy_src/phy.c: 754:             receive(0);
 13385  004BE8  0E00               	movlw	0
 13386  004BEA  ECF0  F040         	call	_receive
 13387                           
 13388                           ; BSR set to: 61
 13389                           ;../phy/sx1216/phy_src/phy.c: 755:             radio_state_var = WAIT_FOR_RX;
 13390  004BEE  0E02               	movlw	2
 13391  004BF0  0101               	movlb	1	; () banked
 13392  004BF2  6F64               	movwf	_radio_state_var& (0+255),b
 13393                           
 13394                           ;../phy/sx1216/phy_src/phy.c: 756:             break;
 13395  004BF4  0012               	return	
 13396  004BF6                     l2641:
 13397                           
 13398                           ; BSR set to: 1
 13399                           ;../phy/sx1216/phy_src/phy.c: 758:             if(PORTBbits.RB4){
 13400  004BF6  A8CB               	btfss	203,4,c	;volatile
 13401  004BF8  0012               	return	
 13402                           
 13403                           ; BSR set to: 1
 13404                           ;../phy/sx1216/phy_src/phy.c: 759:                 radio_state_var = RX_MESSAGE;
 13405  004BFA  0E03               	movlw	3
 13406  004BFC  6F64               	movwf	_radio_state_var& (0+255),b
 13407  004BFE  0012               	return	
 13408  004C00                     l16449:
 13409                           
 13410                           ; BSR set to: 1
 13411                           ;../phy/sx1216/phy_src/phy.c: 763:             DIO0_Receive_ISR();
 13412  004C00  EC31  F036         	call	_DIO0_Receive_ISR	;wreg free
 13413  004C04                     l16451:
 13414                           
 13415                           ;../phy/sx1216/phy_src/phy.c: 764:             radio_state_var = START_RX;
 13416  004C04  0E01               	movlw	1
 13417  004C06  0101               	movlb	1	; () banked
 13418  004C08  6F64               	movwf	_radio_state_var& (0+255),b
 13419                           
 13420                           ;../phy/sx1216/phy_src/phy.c: 765:             break;
 13421  004C0A  0012               	return	
 13422  004C0C                     l16453:
 13423                           
 13424                           ; BSR set to: 1
 13425                           ;../phy/sx1216/phy_src/phy.c: 767:             if(!get_timer0base(&_cadBackoffTimer)){
 13426  004C0C  0EF7               	movlw	low __cadBackoffTimer
 13427  004C0E  6E02               	movwf	get_timer0base@timer^0,c
 13428  004C10  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13429  004C12  EC53  F043         	call	_get_timer0base	;wreg free
 13430  004C16  5002               	movf	?_get_timer0base^0,w,c
 13431  004C18  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13432  004C1A  A4D8               	btfss	status,2,c
 13433  004C1C  D7F3               	goto	l16451
 13434                           
 13435                           ; BSR set to: 57
 13436                           ;../phy/sx1216/phy_src/phy.c: 768:                 if(cad()){
 13437  004C1E  EC76  F031         	call	_cad	;wreg free
 13438  004C22  0900               	iorlw	0
 13439  004C24  B4D8               	btfsc	status,2,c
 13440  004C26  D012               	goto	l16465
 13441                           
 13442                           ;../phy/sx1216/phy_src/phy.c: 770:                     set_timer0base(&_cadBackoffTimer,
      +                           2000);
 13443  004C28  0EF7               	movlw	low __cadBackoffTimer
 13444  004C2A  6E02               	movwf	set_timer0base@timer^0,c
 13445  004C2C  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13446  004C2E  0E07               	movlw	7
 13447  004C30  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13448  004C32  0ED0               	movlw	208
 13449  004C34  6E04               	movwf	set_timer0base@tval^0,c
 13450  004C36  ECA5  F044         	call	_set_timer0base	;wreg free
 13451                           
 13452                           ; BSR set to: 57
 13453                           ;../phy/sx1216/phy_src/phy.c: 772:                     radio_state_var = START_RX;
 13454  004C3A  0E01               	movlw	1
 13455  004C3C  0101               	movlb	1	; () banked
 13456  004C3E  6F64               	movwf	_radio_state_var& (0+255),b
 13457                           
 13458                           ; BSR set to: 1
 13459                           ;../phy/sx1216/phy_src/phy.c: 773:                     if(cadCounter < 10)
 13460  004C40  0E0A               	movlw	10
 13461  004C42  0100               	movlb	0	; () banked
 13462  004C44  61ED               	cpfslt	_cadCounter& (0+255),b
 13463  004C46  0012               	return	
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;../phy/sx1216/phy_src/phy.c: 774:                     {;../phy/sx1216/phy_src/phy.c: 77
      +                          5:                         cadCounter++;
 13467  004C48  2BED               	incf	_cadCounter& (0+255),f,b
 13468  004C4A  0012               	return	
 13469  004C4C                     l16465:
 13470                           
 13471                           ;../phy/sx1216/phy_src/phy.c: 780:                 radio_state_var = START_TX;
 13472  004C4C  0E06               	movlw	6
 13473  004C4E  0101               	movlb	1	; () banked
 13474  004C50  6F64               	movwf	_radio_state_var& (0+255),b
 13475  004C52  0012               	return	
 13476  004C54                     l16469:
 13477                           
 13478                           ; BSR set to: 1
 13479                           ;../phy/sx1216/phy_src/phy.c: 789:             set_timer0base(&txTimeOut, 1000);
 13480  004C54  0EF3               	movlw	low _txTimeOut
 13481  004C56  6E02               	movwf	set_timer0base@timer^0,c
 13482  004C58  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13483  004C5A  0E03               	movlw	3
 13484  004C5C  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13485  004C5E  0EE8               	movlw	232
 13486  004C60  6E04               	movwf	set_timer0base@tval^0,c
 13487  004C62  ECA5  F044         	call	_set_timer0base	;wreg free
 13488                           
 13489                           ; BSR set to: 57
 13490                           ;../phy/sx1216/phy_src/phy.c: 790:             radio_state_var = WAIT_FOR_TX;
 13491  004C66  0E07               	movlw	7
 13492  004C68  0101               	movlb	1	; () banked
 13493  004C6A  6F64               	movwf	_radio_state_var& (0+255),b
 13494                           
 13495                           ;../phy/sx1216/phy_src/phy.c: 791:             break;
 13496  004C6C  0012               	return	
 13497  004C6E                     l16473:
 13498                           
 13499                           ; BSR set to: 1
 13500                           ;../phy/sx1216/phy_src/phy.c: 793:             if((!get_timer0base(&txTimeOut)) || ((SX1
      +                          276Read(0x12) & 0x08))){
 13501  004C6E  0EF3               	movlw	low _txTimeOut
 13502  004C70  6E02               	movwf	get_timer0base@timer^0,c
 13503  004C72  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13504  004C74  EC53  F043         	call	_get_timer0base	;wreg free
 13505  004C78  5002               	movf	?_get_timer0base^0,w,c
 13506  004C7A  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13507  004C7C  B4D8               	btfsc	status,2,c
 13508  004C7E  D006               	goto	u16660
 13509                           
 13510                           ; BSR set to: 57
 13511  004C80  0E12               	movlw	18
 13512  004C82  ECDE  F045         	call	_SX1276Read
 13513  004C86  6E4B               	movwf	??_radio_engine^0,c
 13514  004C88  A64B               	btfss	??_radio_engine^0,3,c
 13515  004C8A  0012               	return	
 13516  004C8C                     u16660:
 13517                           
 13518                           ;../phy/sx1216/phy_src/phy.c: 794:                 radio_state_var = START_RX;
 13519  004C8C  0E01               	movlw	1
 13520  004C8E  0101               	movlb	1	; () banked
 13521  004C90  6F64               	movwf	_radio_state_var& (0+255),b
 13522                           
 13523                           ; BSR set to: 1
 13524                           ;../phy/sx1216/phy_src/phy.c: 795:                 if(get_timer0base(&txTimeOut)){
 13525  004C92  0EF3               	movlw	low _txTimeOut
 13526  004C94  6E02               	movwf	get_timer0base@timer^0,c
 13527  004C96  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13528  004C98  EC53  F043         	call	_get_timer0base	;wreg free
 13529  004C9C  5002               	movf	?_get_timer0base^0,w,c
 13530  004C9E  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13531  004CA0  B4D8               	btfsc	status,2,c
 13532  004CA2  D004               	goto	l16483
 13533                           
 13534                           ; BSR set to: 57
 13535                           ;../phy/sx1216/phy_src/phy.c: 796:                     PHY_DataConf(PHY_STATUS_SUCCESS);
 13536  004CA4  0E00               	movlw	0
 13537  004CA6  ECA4  F041         	call	_PHY_DataConf
 13538                           
 13539                           ;../phy/sx1216/phy_src/phy.c: 797:                 }
 13540  004CAA  0012               	return	
 13541  004CAC                     l16483:
 13542                           
 13543                           ; BSR set to: 57
 13544                           ;../phy/sx1216/phy_src/phy.c: 799:                     PHY_DataConf(PHY_STATUS_NO_ACK);
 13545  004CAC  0E02               	movlw	2
 13546  004CAE  ECA4  F041         	call	_PHY_DataConf
 13547  004CB2  0012               	return	
 13548  004CB4                     l16487:
 13549  004CB4  0101               	movlb	1	; () banked
 13550  004CB6  5164               	movf	_radio_state_var& (0+255),w,b
 13551  004CB8  6E4B               	movwf	??_radio_engine^0,c
 13552  004CBA  6A4C               	clrf	(??_radio_engine+1)^0,c
 13553                           
 13554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13555                           ; Switch size 1, requested type "simple"
 13556                           ; Number of cases is 1, Range of values is 0 to 0
 13557                           ; switch strategies available:
 13558                           ; Name         Instructions Cycles
 13559                           ; simple_byte            4     3 (average)
 13560                           ;	Chosen strategy is simple_byte
 13561  004CBC  504C               	movf	(??_radio_engine+1)^0,w,c
 13562  004CBE  0A00               	xorlw	0	; case 0
 13563  004CC0  A4D8               	btfss	status,2,c
 13564  004CC2  D78F               	goto	u16600
 13565                           
 13566                           ; BSR set to: 1
 13567                           ; Switch size 1, requested type "simple"
 13568                           ; Number of cases is 7, Range of values is 0 to 7
 13569                           ; switch strategies available:
 13570                           ; Name         Instructions Cycles
 13571                           ; simple_byte           22    12 (average)
 13572                           ;	Chosen strategy is simple_byte
 13573  004CC4  504B               	movf	??_radio_engine^0,w,c
 13574  004CC6  0A00               	xorlw	0	; case 0
 13575  004CC8  B4D8               	btfsc	status,2,c
 13576  004CCA  D781               	goto	l16433
 13577  004CCC  0A01               	xorlw	1	; case 1
 13578  004CCE  B4D8               	btfsc	status,2,c
 13579  004CD0  D785               	goto	l16439
 13580  004CD2  0A03               	xorlw	3	; case 2
 13581  004CD4  B4D8               	btfsc	status,2,c
 13582  004CD6  D78F               	goto	l2641
 13583  004CD8  0A01               	xorlw	1	; case 3
 13584  004CDA  B4D8               	btfsc	status,2,c
 13585  004CDC  D791               	goto	l16449
 13586  004CDE  0A07               	xorlw	7	; case 4
 13587  004CE0  B4D8               	btfsc	status,2,c
 13588  004CE2  D794               	goto	l16453
 13589  004CE4  0A02               	xorlw	2	; case 6
 13590  004CE6  B4D8               	btfsc	status,2,c
 13591  004CE8  D7B5               	goto	l16469
 13592  004CEA  0A01               	xorlw	1	; case 7
 13593  004CEC  B4D8               	btfsc	status,2,c
 13594  004CEE  D7BF               	goto	l16473
 13595  004CF0  D778               	goto	u16600
 13596  004CF2                     __end_of_radio_engine:
 13597                           	opt callstack 0
 13598                           
 13599 ;; *************** function _cad *****************
 13600 ;; Defined at:
 13601 ;;		line 509 in file "../phy/sx1216/phy_src/phy.c"
 13602 ;; Parameters:    Size  Location     Type
 13603 ;;		None
 13604 ;; Auto vars:     Size  Location     Type
 13605 ;;  RSSI            2   17[COMRAM] short 
 13606 ;;  temp            1   19[COMRAM] unsigned char 
 13607 ;; Return value:  Size  Location     Type
 13608 ;;                  1    wreg      unsigned char 
 13609 ;; Registers used:
 13610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13611 ;; Tracked objects:
 13612 ;;		On entry : 3F/39
 13613 ;;		On exit  : 2/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13617 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13620 ;;Total ram usage:        4 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; Hardware stack levels required when called:   13
 13623 ;; This function calls:
 13624 ;;		_SX1276Read
 13625 ;;		_SX1276Write
 13626 ;;		_get_timer0base
 13627 ;;		_set_timer0base
 13628 ;;		_start_radio_cad
 13629 ;; This function is called by:
 13630 ;;		_radio_engine
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text83
 13635  0062EC                     __ptext83:
 13636                           	opt callstack 0
 13637  0062EC                     _cad:
 13638                           	opt callstack 14
 13639                           
 13640                           ; BSR set to: 57
 13641                           ;../phy/sx1216/phy_src/phy.c: 511:     uint8_t temp;;../phy/sx1216/phy_src/phy.c: 513:  
      +                             temp = SX1276Read(0x18);
 13642                           
 13643                           ;incstack = 0
 13644  0062EC  0E18               	movlw	24
 13645  0062EE  ECDE  F045         	call	_SX1276Read
 13646  0062F2  6E14               	movwf	cad@temp^0,c
 13647                           
 13648                           ; BSR set to: 61
 13649                           ;../phy/sx1216/phy_src/phy.c: 514:     if((temp & 0x01) | (temp & 0x02))
 13650  0062F4  0060  F050  F011   	movff	cad@temp,??_cad
 13651  0062FA  0E02               	movlw	2
 13652  0062FC  1611               	andwf	??_cad^0,f,c
 13653  0062FE  5014               	movf	cad@temp^0,w,c
 13654  006300  0B01               	andlw	1
 13655  006302  1011               	iorwf	??_cad^0,w,c
 13656  006304  0900               	iorlw	0
 13657  006306  B4D8               	btfsc	status,2,c
 13658  006308  D002               	goto	l15799
 13659  00630A                     u16020:
 13660                           
 13661                           ;../phy/sx1216/phy_src/phy.c: 515:     {;../phy/sx1216/phy_src/phy.c: 516:         retur
      +                          n 1;
 13662  00630A  0E01               	movlw	1
 13663  00630C  0012               	return	
 13664  00630E                     l15799:
 13665                           
 13666                           ; BSR set to: 61
 13667                           ;../phy/sx1216/phy_src/phy.c: 518:     start_radio_cad();
 13668  00630E  EC15  F046         	call	_start_radio_cad	;wreg free
 13669                           
 13670                           ; BSR set to: 61
 13671                           ;../phy/sx1216/phy_src/phy.c: 519:     cadDone = 0;
 13672  006312  0E00               	movlw	0
 13673  006314  0100               	movlb	0	; () banked
 13674  006316  6FEE               	movwf	_cadDone& (0+255),b
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;../phy/sx1216/phy_src/phy.c: 520:     set_timer0base(&cadTimeOut, 2000);
 13678  006318  0EF5               	movlw	low _cadTimeOut
 13679  00631A  6E02               	movwf	set_timer0base@timer^0,c
 13680  00631C  6A03               	clrf	(set_timer0base@timer+1)^0,c
 13681  00631E  0E07               	movlw	7
 13682  006320  6E05               	movwf	(set_timer0base@tval+1)^0,c
 13683  006322  0ED0               	movlw	208
 13684  006324  6E04               	movwf	set_timer0base@tval^0,c
 13685  006326  ECA5  F044         	call	_set_timer0base	;wreg free
 13686                           
 13687                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 13688  00632A  D029               	goto	l15833
 13689  00632C                     l15805:
 13690                           
 13691                           ; BSR set to: 57
 13692                           ;../phy/sx1216/phy_src/phy.c: 523:     {;../phy/sx1216/phy_src/phy.c: 524:         temp 
      +                          = SX1276Read(0x12);
 13693  00632C  0E12               	movlw	18
 13694  00632E  ECDE  F045         	call	_SX1276Read
 13695  006332  6E14               	movwf	cad@temp^0,c
 13696                           
 13697                           ;../phy/sx1216/phy_src/phy.c: 525:         SX1276Write(0x12,temp);
 13698  006334  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
 13699  00633A  0E12               	movlw	18
 13700  00633C  ECFC  F045         	call	_SX1276Write
 13701                           
 13702                           ; BSR set to: 61
 13703                           ;../phy/sx1216/phy_src/phy.c: 526:         if(temp & 0x04)
 13704  006340  A414               	btfss	cad@temp^0,2,c
 13705  006342  D01D               	goto	l15833
 13706                           
 13707                           ; BSR set to: 61
 13708                           ;../phy/sx1216/phy_src/phy.c: 527:         {;../phy/sx1216/phy_src/phy.c: 528:          
      +                             cadDone = 1;
 13709  006344  0E01               	movlw	1
 13710  006346  0100               	movlb	0	; () banked
 13711  006348  6FEE               	movwf	_cadDone& (0+255),b
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;../phy/sx1216/phy_src/phy.c: 529:             if(temp & 0x01)
 13715  00634A  B014               	btfsc	cad@temp^0,0,c
 13716  00634C  D7DE               	goto	u16020
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;../phy/sx1216/phy_src/phy.c: 534:             {;../phy/sx1216/phy_src/phy.c: 535:      
      +                                     int16_t RSSI;;../phy/sx1216/phy_src/phy.c: 536:                 RSSI = -157 +
      +                           SX1276Read(0x1B);
 13720  00634E  0E1B               	movlw	27
 13721  006350  ECDE  F045         	call	_SX1276Read
 13722  006354  6E11               	movwf	??_cad^0,c
 13723  006356  0E63               	movlw	99
 13724  006358  2411               	addwf	??_cad^0,w,c
 13725  00635A  6E12               	movwf	cad@RSSI^0,c
 13726  00635C  6A13               	clrf	(cad@RSSI+1)^0,c
 13727  00635E  0EFF               	movlw	255
 13728  006360  2213               	addwfc	(cad@RSSI+1)^0,f,c
 13729                           
 13730                           ; BSR set to: 61
 13731                           ;../phy/sx1216/phy_src/phy.c: 538:                 if(RSSI < RSSITarget)
 13732  006362  5013               	movf	(cad@RSSI+1)^0,w,c
 13733  006364  0A80               	xorlw	128
 13734  006366  6E11               	movwf	??_cad^0,c
 13735  006368  0100               	movlb	0	; () banked
 13736  00636A  51F9               	movf	_RSSITarget& (0+255),w,b
 13737  00636C  5C12               	subwf	cad@RSSI^0,w,c
 13738  00636E  0E80               	movlw	128
 13739  006370  BFF9               	btfsc	_RSSITarget& (0+255),7,b
 13740  006372  0E7F               	movlw	127
 13741  006374  5811               	subwfb	??_cad^0,w,c
 13742  006376  B0D8               	btfsc	status,0,c
 13743  006378  D7C8               	goto	u16020
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;../phy/sx1216/phy_src/phy.c: 539:                 {;../phy/sx1216/phy_src/phy.c: 540:  
      +                                             return 0;
 13747  00637A  0E00               	movlw	0
 13748  00637C  0012               	return	
 13749  00637E                     l15833:
 13750                           
 13751                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 13752  00637E  0100               	movlb	0	; () banked
 13753  006380  51EE               	movf	_cadDone& (0+255),w,b
 13754  006382  A4D8               	btfss	status,2,c
 13755  006384  D009               	goto	u16070
 13756                           
 13757                           ; BSR set to: 0
 13758  006386  0EF5               	movlw	low _cadTimeOut
 13759  006388  6E02               	movwf	get_timer0base@timer^0,c
 13760  00638A  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13761  00638C  EC53  F043         	call	_get_timer0base	;wreg free
 13762  006390  5002               	movf	?_get_timer0base^0,w,c
 13763  006392  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13764  006394  A4D8               	btfss	status,2,c
 13765  006396  D7CA               	goto	l15805
 13766  006398                     u16070:
 13767                           
 13768                           ;../phy/sx1216/phy_src/phy.c: 549:     if(!get_timer0base(&cadTimeOut))
 13769  006398  0EF5               	movlw	low _cadTimeOut
 13770  00639A  6E02               	movwf	get_timer0base@timer^0,c
 13771  00639C  6A03               	clrf	(get_timer0base@timer+1)^0,c
 13772  00639E  EC53  F043         	call	_get_timer0base	;wreg free
 13773  0063A2  5002               	movf	?_get_timer0base^0,w,c
 13774  0063A4  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 13775  0063A6  A4D8               	btfss	status,2,c
 13776  0063A8  0012               	return	
 13777  0063AA  D7AF               	goto	u16020
 13778  0063AC                     __end_of_cad:
 13779                           	opt callstack 0
 13780                           
 13781 ;; *************** function _start_radio_cad *****************
 13782 ;; Defined at:
 13783 ;;		line 562 in file "../phy/sx1216/phy_src/phy.c"
 13784 ;; Parameters:    Size  Location     Type
 13785 ;;		None
 13786 ;; Auto vars:     Size  Location     Type
 13787 ;;		None
 13788 ;; Return value:  Size  Location     Type
 13789 ;;                  1    wreg      void 
 13790 ;; Registers used:
 13791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13792 ;; Tracked objects:
 13793 ;;		On entry : 3F/3D
 13794 ;;		On exit  : 3F/3D
 13795 ;;		Unchanged: 0/0
 13796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13801 ;;Total ram usage:        0 bytes
 13802 ;; Hardware stack levels used:    1
 13803 ;; Hardware stack levels required when called:   12
 13804 ;; This function calls:
 13805 ;;		_SX1276Write
 13806 ;;		_idle
 13807 ;; This function is called by:
 13808 ;;		_cad
 13809 ;; This function uses a non-reentrant model
 13810 ;;
 13811                           
 13812                           	psect	text84
 13813  008C2A                     __ptext84:
 13814                           	opt callstack 0
 13815  008C2A                     _start_radio_cad:
 13816                           	opt callstack 14
 13817                           
 13818                           ; BSR set to: 61
 13819                           ;../phy/sx1216/phy_src/phy.c: 564:     idle();
 13820                           
 13821                           ;incstack = 0
 13822  008C2A  EC86  F046         	call	_idle	;wreg free
 13823                           
 13824                           ;../phy/sx1216/phy_src/phy.c: 565:     SX1276Write(0x01,0x80 | 0x07);
 13825  008C2E  0E87               	movlw	135
 13826  008C30  6E0F               	movwf	SX1276Write@data^0,c
 13827  008C32  0E01               	movlw	1
 13828  008C34  ECFC  F045         	call	_SX1276Write
 13829                           
 13830                           ; BSR set to: 61
 13831  008C38  0012               	return		;funcret
 13832  008C3A                     __end_of_start_radio_cad:
 13833                           	opt callstack 0
 13834                           
 13835 ;; *************** function _set_timer0base *****************
 13836 ;; Defined at:
 13837 ;;		line 35 in file "../hal/hal_src/Timers.c"
 13838 ;; Parameters:    Size  Location     Type
 13839 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13840 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13841 ;;		 -> ATTimeoutTimer(2), 
 13842 ;;  tval            2    3[COMRAM] unsigned short 
 13843 ;; Auto vars:     Size  Location     Type
 13844 ;;		None
 13845 ;; Return value:  Size  Location     Type
 13846 ;;                  1    wreg      void 
 13847 ;; Registers used:
 13848 ;;		fsr2l, fsr2h
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 3F/39
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13857 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13858 ;;Total ram usage:        4 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; Hardware stack levels required when called:    7
 13861 ;; This function calls:
 13862 ;;		Nothing
 13863 ;; This function is called by:
 13864 ;;		_processATCommand
 13865 ;;		_cad
 13866 ;;		_radio_engine
 13867 ;; This function uses a non-reentrant model
 13868 ;;
 13869                           
 13870                           	psect	text85
 13871  00894A                     __ptext85:
 13872                           	opt callstack 0
 13873  00894A                     _set_timer0base:
 13874                           	opt callstack 22
 13875                           
 13876                           ;../hal/hal_src/Timers.c: 36:     PIE3bits.TMR0IE = 0;;
 13877                           
 13878                           ; BSR set to: 61
 13879                           ;incstack = 0
 13880  00894A  0139               	movlb	57	; () banked
 13881  00894C  9F93               	bcf	147,7,b	;volatile
 13882                           
 13883                           ; BSR set to: 57
 13884                           ;../hal/hal_src/Timers.c: 37:     *timer = tval;
 13885  00894E  0060  F00B  FFD9   	movff	set_timer0base@timer,fsr2l
 13886  008954  0060  F00F  FFDA   	movff	set_timer0base@timer+1,fsr2h
 13887  00895A  0060  F013  FFDE   	movff	set_timer0base@tval,postinc2
 13888  008960  0060  F017  FFDD   	movff	set_timer0base@tval+1,postdec2
 13889                           
 13890                           ; BSR set to: 57
 13891                           ;../hal/hal_src/Timers.c: 38:     PIE3bits.TMR0IE = 1;;
 13892  008966  8F93               	bsf	147,7,b	;volatile
 13893                           
 13894                           ; BSR set to: 57
 13895  008968  0012               	return		;funcret
 13896  00896A                     __end_of_set_timer0base:
 13897                           	opt callstack 0
 13898                           
 13899 ;; *************** function _get_timer0base *****************
 13900 ;; Defined at:
 13901 ;;		line 27 in file "../hal/hal_src/Timers.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;  timer           2    1[COMRAM] PTR unsigned short 
 13904 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 13905 ;;		 -> ATTimeoutTimer(2), 
 13906 ;; Auto vars:     Size  Location     Type
 13907 ;;  tval            2    3[COMRAM] unsigned short 
 13908 ;; Return value:  Size  Location     Type
 13909 ;;                  2    1[COMRAM] unsigned short 
 13910 ;; Registers used:
 13911 ;;		fsr2l, fsr2h
 13912 ;; Tracked objects:
 13913 ;;		On entry : 0/0
 13914 ;;		On exit  : 3F/39
 13915 ;;		Unchanged: 0/0
 13916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13920 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13921 ;;Total ram usage:        4 bytes
 13922 ;; Hardware stack levels used:    1
 13923 ;; Hardware stack levels required when called:    7
 13924 ;; This function calls:
 13925 ;;		Nothing
 13926 ;; This function is called by:
 13927 ;;		_processATCommand
 13928 ;;		_cad
 13929 ;;		_radio_engine
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text86
 13934  0086A6                     __ptext86:
 13935                           	opt callstack 0
 13936  0086A6                     _get_timer0base:
 13937                           	opt callstack 22
 13938                           
 13939                           ;../hal/hal_src/Timers.c: 28:     uint16_t tval;;../hal/hal_src/Timers.c: 29:     PIE3bi
      +                          ts.TMR0IE = 0;;
 13940                           
 13941                           ; BSR set to: 57
 13942                           ;incstack = 0
 13943  0086A6  0139               	movlb	57	; () banked
 13944  0086A8  9F93               	bcf	147,7,b	;volatile
 13945                           
 13946                           ; BSR set to: 57
 13947                           ;../hal/hal_src/Timers.c: 30:     tval = *timer;
 13948  0086AA  0060  F00B  FFD9   	movff	get_timer0base@timer,fsr2l
 13949  0086B0  0060  F00F  FFDA   	movff	get_timer0base@timer+1,fsr2h
 13950  0086B6  006F FF78  F004    	movff	postinc2,get_timer0base@tval
 13951  0086BC  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
 13952                           
 13953                           ; BSR set to: 57
 13954                           ;../hal/hal_src/Timers.c: 31:     PIE3bits.TMR0IE = 1;;
 13955  0086C2  8F93               	bsf	147,7,b	;volatile
 13956                           
 13957                           ; BSR set to: 57
 13958                           ;../hal/hal_src/Timers.c: 32:     return tval;
 13959  0086C4  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
 13960  0086CA  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
 13961                           
 13962                           ; BSR set to: 57
 13963  0086D0  0012               	return		;funcret
 13964  0086D2                     __end_of_get_timer0base:
 13965                           	opt callstack 0
 13966                           
 13967 ;; *************** function _PHY_DataConf *****************
 13968 ;; Defined at:
 13969 ;;		line 286 in file "../nwk/nwk_src/nwkTx.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  status          1    wreg     unsigned char 
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;  status          1    4[COMRAM] unsigned char 
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  1    wreg      void 
 13976 ;; Registers used:
 13977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13978 ;; Tracked objects:
 13979 ;;		On entry : 3F/39
 13980 ;;		On exit  : 3F/1
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;Total ram usage:        1 bytes
 13988 ;; Hardware stack levels used:    1
 13989 ;; Hardware stack levels required when called:    8
 13990 ;; This function calls:
 13991 ;;		_nwkTxConvertPhyStatus
 13992 ;; This function is called by:
 13993 ;;		_radio_engine
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           	psect	text87
 13998  008348                     __ptext87:
 13999                           	opt callstack 0
 14000  008348                     _PHY_DataConf:
 14001                           	opt callstack 19
 14002                           
 14003                           ; BSR set to: 57
 14004                           ;incstack = 0
 14005                           ;PHY_DataConf@status stored from wreg
 14006  008348  6E05               	movwf	PHY_DataConf@status^0,c
 14007                           
 14008                           ;../nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);../nwk/nwk_src/nwkTx.c: 
      +                          287: {;../nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhySt
      +                          atus(status);
 14009  00834A  0101               	movlb	1	; () banked
 14010  00834C  EE20 F083          	lfsr	2,131
 14011  008350  515B               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 14012  008352  26D9               	addwf	fsr2l,f,c
 14013  008354  515C               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 14014  008356  22DA               	addwfc	fsr2h,f,c
 14015  008358  5005               	movf	PHY_DataConf@status^0,w,c
 14016  00835A  ECFB  F041         	call	_nwkTxConvertPhyStatus
 14017  00835E  6EDF               	movwf	indf2,c
 14018                           
 14019                           ;../nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 14020  008360  0060  F56F  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 14021  008366  0060  F573  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 14022  00836C  0E15               	movlw	21
 14023  00836E  6EDF               	movwf	indf2,c
 14024                           
 14025                           ;../nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
 14026  008370  0E00               	movlw	0
 14027  008372  0101               	movlb	1	; () banked
 14028  008374  6F5B               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 14029  008376  0E00               	movlw	0
 14030  008378  6F5C               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 14031                           
 14032                           ; BSR set to: 1
 14033                           ;../nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 14034  00837A  0726               	decf	(_nwkIb+38)& (0+255),f,b
 14035  00837C  A0D8               	btfss	status,0,c
 14036  00837E  0727               	decf	(_nwkIb+39)& (0+255),f,b
 14037                           
 14038                           ; BSR set to: 1
 14039  008380  0012               	return		;funcret
 14040  008382                     __end_of_PHY_DataConf:
 14041                           	opt callstack 0
 14042                           
 14043 ;; *************** function _nwkTxConvertPhyStatus *****************
 14044 ;; Defined at:
 14045 ;;		line 266 in file "../nwk/nwk_src/nwkTx.c"
 14046 ;; Parameters:    Size  Location     Type
 14047 ;;  status          1    wreg     unsigned char 
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;  status          1    3[COMRAM] unsigned char 
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  1    wreg      unsigned char 
 14052 ;; Registers used:
 14053 ;;		wreg, status,2, status,0
 14054 ;; Tracked objects:
 14055 ;;		On entry : 3F/1
 14056 ;;		On exit  : 0/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14063 ;;Total ram usage:        3 bytes
 14064 ;; Hardware stack levels used:    1
 14065 ;; Hardware stack levels required when called:    7
 14066 ;; This function calls:
 14067 ;;		Nothing
 14068 ;; This function is called by:
 14069 ;;		_PHY_DataConf
 14070 ;; This function uses a non-reentrant model
 14071 ;;
 14072                           
 14073                           	psect	text88
 14074  0083F6                     __ptext88:
 14075                           	opt callstack 0
 14076  0083F6                     _nwkTxConvertPhyStatus:
 14077                           	opt callstack 19
 14078                           
 14079                           ; BSR set to: 1
 14080                           ;incstack = 0
 14081                           ;nwkTxConvertPhyStatus@status stored from wreg
 14082  0083F6  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
 14083                           
 14084                           ;../nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 267: {;../nwk/nwk_src/nwkTx.c: 268:   switch (status)
 14085  0083F8  D008               	goto	l11025
 14086  0083FA                     l11007:
 14087                           
 14088                           ;../nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 14089  0083FA  0E00               	movlw	0
 14090  0083FC  0012               	return	
 14091  0083FE                     l11011:
 14092                           
 14093                           ;../nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 14094  0083FE  0E20               	movlw	32
 14095  008400  0012               	return	
 14096  008402                     l11015:
 14097                           
 14098                           ;../nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 14099  008402  0E21               	movlw	33
 14100  008404  0012               	return	
 14101  008406                     l11019:
 14102                           
 14103                           ;../nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 14104  008406  0E01               	movlw	1
 14105  008408  0012               	return	
 14106  00840A                     l11025:
 14107  00840A  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
 14108  00840C  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
 14109  00840E  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
 14110                           
 14111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14112                           ; Switch size 1, requested type "simple"
 14113                           ; Number of cases is 1, Range of values is 0 to 0
 14114                           ; switch strategies available:
 14115                           ; Name         Instructions Cycles
 14116                           ; simple_byte            4     3 (average)
 14117                           ;	Chosen strategy is simple_byte
 14118  008410  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
 14119  008412  0A00               	xorlw	0	; case 0
 14120  008414  A4D8               	btfss	status,2,c
 14121  008416  D7F7               	goto	l11019
 14122                           
 14123                           ; Switch size 1, requested type "simple"
 14124                           ; Number of cases is 3, Range of values is 0 to 2
 14125                           ; switch strategies available:
 14126                           ; Name         Instructions Cycles
 14127                           ; simple_byte           10     6 (average)
 14128                           ;	Chosen strategy is simple_byte
 14129  008418  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
 14130  00841A  0A00               	xorlw	0	; case 0
 14131  00841C  B4D8               	btfsc	status,2,c
 14132  00841E  D7ED               	goto	l11007
 14133  008420  0A01               	xorlw	1	; case 1
 14134  008422  B4D8               	btfsc	status,2,c
 14135  008424  D7EC               	goto	l11011
 14136  008426  0A03               	xorlw	3	; case 2
 14137  008428  B4D8               	btfsc	status,2,c
 14138  00842A  D7EB               	goto	l11015
 14139  00842C  D7EC               	goto	l11019
 14140  00842E                     __end_of_nwkTxConvertPhyStatus:
 14141                           	opt callstack 0
 14142                           
 14143 ;; *************** function _DIO0_Receive_ISR *****************
 14144 ;; Defined at:
 14145 ;;		line 642 in file "../phy/sx1216/phy_src/phy.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;		None
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;  ind             5   69[COMRAM] struct PHY_DataInd_t
 14150 ;;  packetLength    1   67[COMRAM] unsigned char 
 14151 ;;  irqFlags        1   68[COMRAM] unsigned char 
 14152 ;; Return value:  Size  Location     Type
 14153 ;;                  1    wreg      void 
 14154 ;; Registers used:
 14155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14156 ;; Tracked objects:
 14157 ;;		On entry : 0/1
 14158 ;;		On exit  : 3F/3D
 14159 ;;		Unchanged: 0/0
 14160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14162 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14164 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14165 ;;Total ram usage:        7 bytes
 14166 ;; Hardware stack levels used:    1
 14167 ;; Hardware stack levels required when called:   13
 14168 ;; This function calls:
 14169 ;;		_PHY_DataInd
 14170 ;;		_SX1276Read
 14171 ;;		_SX1276ReadBuffer
 14172 ;;		_SX1276Write
 14173 ;;		_get_lqi
 14174 ;;		_get_rssi
 14175 ;;		_receive
 14176 ;; This function is called by:
 14177 ;;		_radio_engine
 14178 ;; This function uses a non-reentrant model
 14179 ;;
 14180                           
 14181                           	psect	text89
 14182  006C62                     __ptext89:
 14183                           	opt callstack 0
 14184  006C62                     _DIO0_Receive_ISR:
 14185                           	opt callstack 14
 14186                           
 14187                           ;../phy/sx1216/phy_src/phy.c: 644:     uint8_t irqFlags = SX1276Read(0x12);
 14188                           
 14189                           ;incstack = 0
 14190  006C62  0E12               	movlw	18
 14191  006C64  ECDE  F045         	call	_SX1276Read
 14192  006C68  6E45               	movwf	DIO0_Receive_ISR@irqFlags^0,c
 14193                           
 14194                           ;../phy/sx1216/phy_src/phy.c: 647:     SX1276Write(0x12, irqFlags);
 14195  006C6A  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14196  006C70  0E12               	movlw	18
 14197  006C72  ECFC  F045         	call	_SX1276Write
 14198                           
 14199                           ;../phy/sx1216/phy_src/phy.c: 648:     SX1276Write(0x12, irqFlags);
 14200  006C76  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 14201  006C7C  0E12               	movlw	18
 14202  006C7E  ECFC  F045         	call	_SX1276Write
 14203                           
 14204                           ; BSR set to: 61
 14205                           ;../phy/sx1216/phy_src/phy.c: 650:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40)
      +                           && ((irqFlags & 0x80) == 0))
 14206  006C82  AA45               	btfss	DIO0_Receive_ISR@irqFlags^0,5,c
 14207                           
 14208                           ; BSR set to: 61
 14209  006C84  AC45               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
 14210  006C86  D034               	goto	l15863
 14211                           
 14212                           ; BSR set to: 61
 14213  006C88  BE45               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
 14214  006C8A  D032               	goto	l15863
 14215                           
 14216                           ; BSR set to: 61
 14217                           ;../phy/sx1216/phy_src/phy.c: 651:     {;../phy/sx1216/phy_src/phy.c: 652:         PHY_D
      +                          ataInd_t ind;;../phy/sx1216/phy_src/phy.c: 653:         uint8_t packetLength;;../phy/sx1
      +                          216/phy_src/phy.c: 656:         packetLength = SX1276Read(0x13);
 14218  006C8C  0E13               	movlw	19
 14219  006C8E  ECDE  F045         	call	_SX1276Read
 14220  006C92  6E44               	movwf	DIO0_Receive_ISR@packetLength^0,c
 14221                           
 14222                           ;../phy/sx1216/phy_src/phy.c: 659:         SX1276Write(0x0D, SX1276Read(0x10));
 14223  006C94  0E10               	movlw	16
 14224  006C96  ECDE  F045         	call	_SX1276Read
 14225  006C9A  6E0F               	movwf	SX1276Write@data^0,c
 14226  006C9C  0E0D               	movlw	13
 14227  006C9E  ECFC  F045         	call	_SX1276Write
 14228                           
 14229                           ;../phy/sx1216/phy_src/phy.c: 660:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLe
      +                          ngth);
 14230  006CA2  0E40               	movlw	low _phyRxBuffer
 14231  006CA4  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 14232  006CA6  0E03               	movlw	high _phyRxBuffer
 14233  006CA8  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 14234  006CAA  0060  F110  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 14235  006CB0  0E00               	movlw	0
 14236  006CB2  ECD0  F043         	call	_SX1276ReadBuffer
 14237                           
 14238                           ;../phy/sx1216/phy_src/phy.c: 662:         SNR = SX1276Read(0x19);
 14239  006CB6  0E19               	movlw	25
 14240  006CB8  ECDE  F045         	call	_SX1276Read
 14241  006CBC  0101               	movlb	1	; () banked
 14242  006CBE  6F67               	movwf	_SNR& (0+255),b
 14243                           
 14244                           ;../phy/sx1216/phy_src/phy.c: 663:         packetRSSI = SX1276Read(0x1A);
 14245  006CC0  0E1A               	movlw	26
 14246  006CC2  ECDE  F045         	call	_SX1276Read
 14247  006CC6  0101               	movlb	1	; () banked
 14248  006CC8  6F68               	movwf	_packetRSSI& (0+255),b
 14249                           
 14250                           ; BSR set to: 1
 14251                           ;../phy/sx1216/phy_src/phy.c: 664:         ind.data = phyRxBuffer;
 14252  006CCA  0E40               	movlw	low _phyRxBuffer
 14253  006CCC  6E46               	movwf	DIO0_Receive_ISR@ind^0,c
 14254  006CCE  0E03               	movlw	high _phyRxBuffer
 14255  006CD0  6E47               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
 14256                           
 14257                           ; BSR set to: 1
 14258                           ;../phy/sx1216/phy_src/phy.c: 665:         ind.size = packetLength;
 14259  006CD2  0060  F110  F048   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 14260                           
 14261                           ; BSR set to: 1
 14262                           ;../phy/sx1216/phy_src/phy.c: 666:         ind.rssi = get_rssi(packetRSSI);
 14263  006CD8  5168               	movf	_packetRSSI& (0+255),w,b
 14264  006CDA  EC69  F043         	call	_get_rssi
 14265  006CDE  6E4A               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
 14266                           
 14267                           ;../phy/sx1216/phy_src/phy.c: 667:         ind.lqi = get_lqi(ind.rssi);
 14268  006CE0  504A               	movf	(DIO0_Receive_ISR@ind+4)^0,w,c
 14269  006CE2  EC49  F035         	call	_get_lqi
 14270  006CE6  6E49               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
 14271                           
 14272                           ;../phy/sx1216/phy_src/phy.c: 668:         PHY_DataInd(&ind);
 14273  006CE8  0E46               	movlw	low DIO0_Receive_ISR@ind
 14274  006CEA  6E13               	movwf	PHY_DataInd@ind^0,c
 14275  006CEC  ECBB  F024         	call	_PHY_DataInd	;wreg free
 14276  006CF0                     l15863:
 14277                           
 14278                           ;../phy/sx1216/phy_src/phy.c: 671:     receive(0);
 14279  006CF0  0E00               	movlw	0
 14280  006CF2  ECF0  F040         	call	_receive
 14281                           
 14282                           ; BSR set to: 61
 14283  006CF6  0012               	return		;funcret
 14284  006CF8                     __end_of_DIO0_Receive_ISR:
 14285                           	opt callstack 0
 14286                           
 14287 ;; *************** function _get_rssi *****************
 14288 ;; Defined at:
 14289 ;;		line 615 in file "../phy/sx1216/phy_src/phy.c"
 14290 ;; Parameters:    Size  Location     Type
 14291 ;;  rssi_reg        1    wreg     unsigned char 
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;  rssi_reg        1    1[COMRAM] unsigned char 
 14294 ;;  temp_rssi       2    2[COMRAM] short 
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  1    wreg      char 
 14297 ;; Registers used:
 14298 ;;		wreg, status,2, status,0
 14299 ;; Tracked objects:
 14300 ;;		On entry : 3F/1
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14308 ;;Total ram usage:        3 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; Hardware stack levels required when called:    7
 14311 ;; This function calls:
 14312 ;;		Nothing
 14313 ;; This function is called by:
 14314 ;;		_DIO0_Receive_ISR
 14315 ;; This function uses a non-reentrant model
 14316 ;;
 14317                           
 14318                           	psect	text90
 14319  0086D2                     __ptext90:
 14320                           	opt callstack 0
 14321  0086D2                     _get_rssi:
 14322                           	opt callstack 19
 14323                           
 14324                           ; BSR set to: 61
 14325                           ;incstack = 0
 14326                           ;get_rssi@rssi_reg stored from wreg
 14327  0086D2  6E02               	movwf	get_rssi@rssi_reg^0,c
 14328                           
 14329                           ;../phy/sx1216/phy_src/phy.c: 616:     int16_t temp_rssi = -157 + rssi_reg;
 14330  0086D4  0E63               	movlw	99
 14331  0086D6  2402               	addwf	get_rssi@rssi_reg^0,w,c
 14332  0086D8  6E03               	movwf	get_rssi@temp_rssi^0,c
 14333  0086DA  6A04               	clrf	(get_rssi@temp_rssi+1)^0,c
 14334  0086DC  0EFF               	movlw	255
 14335  0086DE  2204               	addwfc	(get_rssi@temp_rssi+1)^0,f,c
 14336                           
 14337                           ;../phy/sx1216/phy_src/phy.c: 617:     if(temp_rssi < -127){
 14338  0086E0  AE04               	btfss	(get_rssi@temp_rssi+1)^0,7,c
 14339  0086E2  D00A               	goto	l2615
 14340  0086E4  0E81               	movlw	129
 14341  0086E6  5C03               	subwf	get_rssi@temp_rssi^0,w,c
 14342  0086E8  0EFF               	movlw	255
 14343  0086EA  5804               	subwfb	(get_rssi@temp_rssi+1)^0,w,c
 14344  0086EC  B0D8               	btfsc	status,0,c
 14345  0086EE  D004               	goto	l2615
 14346                           
 14347                           ;../phy/sx1216/phy_src/phy.c: 618:         temp_rssi = -127;
 14348  0086F0  0EFF               	movlw	255
 14349  0086F2  6E04               	movwf	(get_rssi@temp_rssi+1)^0,c
 14350  0086F4  0E81               	movlw	129
 14351  0086F6  6E03               	movwf	get_rssi@temp_rssi^0,c
 14352  0086F8                     l2615:
 14353                           
 14354                           ;../phy/sx1216/phy_src/phy.c: 620:     return (temp_rssi);
 14355  0086F8  5003               	movf	get_rssi@temp_rssi^0,w,c
 14356  0086FA  0012               	return		;funcret
 14357  0086FC                     __end_of_get_rssi:
 14358                           	opt callstack 0
 14359                           
 14360 ;; *************** function _get_lqi *****************
 14361 ;; Defined at:
 14362 ;;		line 629 in file "../phy/sx1216/phy_src/phy.c"
 14363 ;; Parameters:    Size  Location     Type
 14364 ;;  rssi            1    wreg     char 
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;  rssi            1   66[COMRAM] char 
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  1    wreg      unsigned char 
 14369 ;; Registers used:
 14370 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/1
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14380 ;;Total ram usage:        1 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; Hardware stack levels required when called:    8
 14383 ;; This function calls:
 14384 ;;		___fladd
 14385 ;;		___flmul
 14386 ;;		___fltol
 14387 ;;		___xxtofl
 14388 ;; This function is called by:
 14389 ;;		_DIO0_Receive_ISR
 14390 ;; This function uses a non-reentrant model
 14391 ;;
 14392                           
 14393                           	psect	text91
 14394  006A92                     __ptext91:
 14395                           	opt callstack 0
 14396  006A92                     _get_lqi:
 14397                           	opt callstack 18
 14398                           
 14399                           ;incstack = 0
 14400                           ;get_lqi@rssi stored from wreg
 14401  006A92  6E43               	movwf	get_lqi@rssi^0,c
 14402                           
 14403                           ;../phy/sx1216/phy_src/phy.c: 630:     if(rssi > -10){
 14404  006A94  5043               	movf	get_lqi@rssi^0,w,c
 14405  006A96  0A80               	xorlw	128
 14406  006A98  0F89               	addlw	137
 14407  006A9A  A0D8               	btfss	status,0,c
 14408  006A9C  D002               	goto	l11189
 14409                           
 14410                           ;../phy/sx1216/phy_src/phy.c: 631:         return 255;
 14411  006A9E  0EFF               	movlw	255
 14412  006AA0  0012               	return	
 14413  006AA2                     l11189:
 14414                           
 14415                           ;../phy/sx1216/phy_src/phy.c: 633:     return ((2.18*(int16_t)rssi) + 10795);
 14416  006AA2  0E00               	movlw	0
 14417  006AA4  6E2D               	movwf	___fladd@a^0,c
 14418  006AA6  0EAC               	movlw	172
 14419  006AA8  6E2E               	movwf	(___fladd@a+1)^0,c
 14420  006AAA  0E28               	movlw	40
 14421  006AAC  6E2F               	movwf	(___fladd@a+2)^0,c
 14422  006AAE  0E46               	movlw	70
 14423  006AB0  6E30               	movwf	(___fladd@a+3)^0,c
 14424  006AB2  0E1F               	movlw	31
 14425  006AB4  6E14               	movwf	___flmul@a^0,c
 14426  006AB6  0E85               	movlw	133
 14427  006AB8  6E15               	movwf	(___flmul@a+1)^0,c
 14428  006ABA  0E0B               	movlw	11
 14429  006ABC  6E16               	movwf	(___flmul@a+2)^0,c
 14430  006ABE  0E40               	movlw	64
 14431  006AC0  6E17               	movwf	(___flmul@a+3)^0,c
 14432  006AC2  5043               	movf	get_lqi@rssi^0,w,c
 14433  006AC4  6E02               	movwf	___xxtofl@val^0,c
 14434  006AC6  0E00               	movlw	0
 14435  006AC8  BE02               	btfsc	___xxtofl@val^0,7,c
 14436  006ACA  0EFF               	movlw	-1
 14437  006ACC  6E03               	movwf	(___xxtofl@val+1)^0,c
 14438  006ACE  6E04               	movwf	(___xxtofl@val+2)^0,c
 14439  006AD0  6E05               	movwf	(___xxtofl@val+3)^0,c
 14440  006AD2  0E01               	movlw	1
 14441  006AD4  EC25  F020         	call	___xxtofl
 14442  006AD8  0060  F008  F010   	movff	?___xxtofl,___flmul@b
 14443  006ADE  0060  F00C  F011   	movff	?___xxtofl+1,___flmul@b+1
 14444  006AE4  0060  F010  F012   	movff	?___xxtofl+2,___flmul@b+2
 14445  006AEA  0060  F014  F013   	movff	?___xxtofl+3,___flmul@b+3
 14446  006AF0  EC92  F009         	call	___flmul	;wreg free
 14447  006AF4  0060  F040  F029   	movff	?___flmul,___fladd@b
 14448  006AFA  0060  F044  F02A   	movff	?___flmul+1,___fladd@b+1
 14449  006B00  0060  F048  F02B   	movff	?___flmul+2,___fladd@b+2
 14450  006B06  0060  F04C  F02C   	movff	?___flmul+3,___fladd@b+3
 14451  006B0C  EC0B  F00D         	call	___fladd	;wreg free
 14452  006B10  0060  F0A4  F039   	movff	?___fladd,___fltol@f1
 14453  006B16  0060  F0A8  F03A   	movff	?___fladd+1,___fltol@f1+1
 14454  006B1C  0060  F0AC  F03B   	movff	?___fladd+2,___fltol@f1+2
 14455  006B22  0060  F0B0  F03C   	movff	?___fladd+3,___fltol@f1+3
 14456  006B28  ECAD  F030         	call	___fltol	;wreg free
 14457  006B2C  5039               	movf	?___fltol^0,w,c
 14458  006B2E  0012               	return		;funcret
 14459  006B30                     __end_of_get_lqi:
 14460                           	opt callstack 0
 14461                           
 14462 ;; *************** function ___fltol *****************
 14463 ;; Defined at:
 14464 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;  f1              4   56[COMRAM] unsigned char 
 14467 ;; Auto vars:     Size  Location     Type
 14468 ;;  exp1            1   65[COMRAM] unsigned char 
 14469 ;;  sign1           1   64[COMRAM] unsigned char 
 14470 ;; Return value:  Size  Location     Type
 14471 ;;                  4   56[COMRAM] long 
 14472 ;; Registers used:
 14473 ;;		wreg, status,2, status,0
 14474 ;; Tracked objects:
 14475 ;;		On entry : 0/1
 14476 ;;		On exit  : 0/0
 14477 ;;		Unchanged: 0/0
 14478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14481 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14482 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14483 ;;Total ram usage:       10 bytes
 14484 ;; Hardware stack levels used:    1
 14485 ;; Hardware stack levels required when called:    7
 14486 ;; This function calls:
 14487 ;;		Nothing
 14488 ;; This function is called by:
 14489 ;;		_get_lqi
 14490 ;; This function uses a non-reentrant model
 14491 ;;
 14492                           
 14493                           	psect	text92
 14494  00615A                     __ptext92:
 14495                           	opt callstack 0
 14496  00615A                     ___fltol:
 14497                           	opt callstack 18
 14498                           
 14499                           ;incstack = 0
 14500  00615A  343B               	rlcf	(___fltol@f1+2)^0,w,c
 14501  00615C  343C               	rlcf	(___fltol@f1+3)^0,w,c
 14502  00615E  6E42               	movwf	___fltol@exp1^0,c
 14503  006160  5042               	movf	___fltol@exp1^0,w,c
 14504  006162  A4D8               	btfss	status,2,c
 14505  006164  D009               	goto	l10549
 14506  006166                     u8830:
 14507  006166  0E00               	movlw	0
 14508  006168  6E39               	movwf	?___fltol^0,c
 14509  00616A  0E00               	movlw	0
 14510  00616C  6E3A               	movwf	(?___fltol+1)^0,c
 14511  00616E  0E00               	movlw	0
 14512  006170  6E3B               	movwf	(?___fltol+2)^0,c
 14513  006172  0E00               	movlw	0
 14514  006174  6E3C               	movwf	(?___fltol+3)^0,c
 14515  006176  0012               	return	
 14516  006178                     l10549:
 14517  006178  0060  F0E4  F03D   	movff	___fltol@f1,??___fltol
 14518  00617E  0060  F0E8  F03E   	movff	___fltol@f1+1,??___fltol+1
 14519  006184  0060  F0EC  F03F   	movff	___fltol@f1+2,??___fltol+2
 14520  00618A  0060  F0F0  F040   	movff	___fltol@f1+3,??___fltol+3
 14521  006190  0E20               	movlw	32
 14522  006192  D005               	goto	u8840
 14523  006194                     u8845:
 14524  006194  90D8               	bcf	status,0,c
 14525  006196  3240               	rrcf	(??___fltol+3)^0,f,c
 14526  006198  323F               	rrcf	(??___fltol+2)^0,f,c
 14527  00619A  323E               	rrcf	(??___fltol+1)^0,f,c
 14528  00619C  323D               	rrcf	??___fltol^0,f,c
 14529  00619E                     u8840:
 14530  00619E  2EE8               	decfsz	wreg,f,c
 14531  0061A0  D7F9               	goto	u8845
 14532  0061A2  503D               	movf	??___fltol^0,w,c
 14533  0061A4  6E41               	movwf	___fltol@sign1^0,c
 14534  0061A6  8E3B               	bsf	(___fltol@f1+2)^0,7,c
 14535  0061A8  0EFF               	movlw	255
 14536  0061AA  1639               	andwf	___fltol@f1^0,f,c
 14537  0061AC  0EFF               	movlw	255
 14538  0061AE  163A               	andwf	(___fltol@f1+1)^0,f,c
 14539  0061B0  0EFF               	movlw	255
 14540  0061B2  163B               	andwf	(___fltol@f1+2)^0,f,c
 14541  0061B4  0E00               	movlw	0
 14542  0061B6  163C               	andwf	(___fltol@f1+3)^0,f,c
 14543  0061B8  0E96               	movlw	150
 14544  0061BA  5E42               	subwf	___fltol@exp1^0,f,c
 14545  0061BC  AE42               	btfss	___fltol@exp1^0,7,c
 14546  0061BE  D00D               	goto	l10569
 14547  0061C0  5042               	movf	___fltol@exp1^0,w,c
 14548  0061C2  0A80               	xorlw	128
 14549  0061C4  0F97               	addlw	151
 14550  0061C6  A0D8               	btfss	status,0,c
 14551  0061C8  D7CE               	goto	u8830
 14552  0061CA                     l10565:
 14553  0061CA  90D8               	bcf	status,0,c
 14554  0061CC  323C               	rrcf	(___fltol@f1+3)^0,f,c
 14555  0061CE  323B               	rrcf	(___fltol@f1+2)^0,f,c
 14556  0061D0  323A               	rrcf	(___fltol@f1+1)^0,f,c
 14557  0061D2  3239               	rrcf	___fltol@f1^0,f,c
 14558  0061D4  3E42               	incfsz	___fltol@exp1^0,f,c
 14559  0061D6  D7F9               	goto	l10565
 14560  0061D8  D00D               	goto	u8880
 14561  0061DA                     l10569:
 14562  0061DA  0E1F               	movlw	31
 14563  0061DC  6442               	cpfsgt	___fltol@exp1^0,c
 14564  0061DE  D007               	goto	l10577
 14565  0061E0  D7C2               	goto	u8830
 14566  0061E2                     l10575:
 14567  0061E2  90D8               	bcf	status,0,c
 14568  0061E4  3639               	rlcf	___fltol@f1^0,f,c
 14569  0061E6  363A               	rlcf	(___fltol@f1+1)^0,f,c
 14570  0061E8  363B               	rlcf	(___fltol@f1+2)^0,f,c
 14571  0061EA  363C               	rlcf	(___fltol@f1+3)^0,f,c
 14572  0061EC  0642               	decf	___fltol@exp1^0,f,c
 14573  0061EE                     l10577:
 14574  0061EE  5042               	movf	___fltol@exp1^0,w,c
 14575  0061F0  A4D8               	btfss	status,2,c
 14576  0061F2  D7F7               	goto	l10575
 14577  0061F4                     u8880:
 14578  0061F4  5041               	movf	___fltol@sign1^0,w,c
 14579  0061F6  B4D8               	btfsc	status,2,c
 14580  0061F8  D008               	goto	l10583
 14581  0061FA  1E3C               	comf	(___fltol@f1+3)^0,f,c
 14582  0061FC  1E3B               	comf	(___fltol@f1+2)^0,f,c
 14583  0061FE  1E3A               	comf	(___fltol@f1+1)^0,f,c
 14584  006200  6C39               	negf	___fltol@f1^0,c
 14585  006202  0E00               	movlw	0
 14586  006204  223A               	addwfc	(___fltol@f1+1)^0,f,c
 14587  006206  223B               	addwfc	(___fltol@f1+2)^0,f,c
 14588  006208  223C               	addwfc	(___fltol@f1+3)^0,f,c
 14589  00620A                     l10583:
 14590  00620A  0060  F0E4  F039   	movff	___fltol@f1,?___fltol
 14591  006210  0060  F0E8  F03A   	movff	___fltol@f1+1,?___fltol+1
 14592  006216  0060  F0EC  F03B   	movff	___fltol@f1+2,?___fltol+2
 14593  00621C  0060  F0F0  F03C   	movff	___fltol@f1+3,?___fltol+3
 14594  006222  0012               	return		;funcret
 14595  006224                     __end_of___fltol:
 14596                           	opt callstack 0
 14597                           
 14598 ;; *************** function ___flmul *****************
 14599 ;; Defined at:
 14600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 14601 ;; Parameters:    Size  Location     Type
 14602 ;;  b               4   15[COMRAM] long 
 14603 ;;  a               4   19[COMRAM] long 
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;  prod            4   34[COMRAM] struct .
 14606 ;;  grs             4   29[COMRAM] unsigned long 
 14607 ;;  temp            2   38[COMRAM] struct .
 14608 ;;  bexp            1   33[COMRAM] unsigned char 
 14609 ;;  aexp            1   28[COMRAM] unsigned char 
 14610 ;;  sign            1   27[COMRAM] unsigned char 
 14611 ;; Return value:  Size  Location     Type
 14612 ;;                  4   15[COMRAM] unsigned char 
 14613 ;; Registers used:
 14614 ;;		wreg, status,2, status,0, prodl, prodh
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/1
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14620 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14621 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14622 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14623 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14624 ;;Total ram usage:       25 bytes
 14625 ;; Hardware stack levels used:    1
 14626 ;; Hardware stack levels required when called:    7
 14627 ;; This function calls:
 14628 ;;		Nothing
 14629 ;; This function is called by:
 14630 ;;		_get_lqi
 14631 ;; This function uses a non-reentrant model
 14632 ;;
 14633                           
 14634                           	psect	text93
 14635  001324                     __ptext93:
 14636                           	opt callstack 0
 14637  001324                     ___flmul:
 14638                           	opt callstack 18
 14639                           
 14640                           ;incstack = 0
 14641  001324  5013               	movf	(___flmul@b+3)^0,w,c
 14642  001326  0B80               	andlw	128
 14643  001328  6E1C               	movwf	___flmul@sign^0,c
 14644  00132A  5013               	movf	(___flmul@b+3)^0,w,c
 14645  00132C  2413               	addwf	(___flmul@b+3)^0,w,c
 14646  00132E  6E22               	movwf	___flmul@bexp^0,c
 14647  001330  BE12               	btfsc	(___flmul@b+2)^0,7,c
 14648  001332  8022               	bsf	___flmul@bexp^0,0,c
 14649  001334  5022               	movf	___flmul@bexp^0,w,c
 14650  001336  B4D8               	btfsc	status,2,c
 14651  001338  D00D               	goto	l10405
 14652  00133A  2822               	incf	___flmul@bexp^0,w,c
 14653  00133C  A4D8               	btfss	status,2,c
 14654  00133E  D008               	goto	l10403
 14655  001340  0E00               	movlw	0
 14656  001342  6E10               	movwf	___flmul@b^0,c
 14657  001344  0E00               	movlw	0
 14658  001346  6E11               	movwf	(___flmul@b+1)^0,c
 14659  001348  0E00               	movlw	0
 14660  00134A  6E12               	movwf	(___flmul@b+2)^0,c
 14661  00134C  0E00               	movlw	0
 14662  00134E  6E13               	movwf	(___flmul@b+3)^0,c
 14663  001350                     l10403:
 14664  001350  8E12               	bsf	(___flmul@b+2)^0,7,c
 14665  001352  D008               	goto	l10407
 14666  001354                     l10405:
 14667  001354  0E00               	movlw	0
 14668  001356  6E10               	movwf	___flmul@b^0,c
 14669  001358  0E00               	movlw	0
 14670  00135A  6E11               	movwf	(___flmul@b+1)^0,c
 14671  00135C  0E00               	movlw	0
 14672  00135E  6E12               	movwf	(___flmul@b+2)^0,c
 14673  001360  0E00               	movlw	0
 14674  001362  6E13               	movwf	(___flmul@b+3)^0,c
 14675  001364                     l10407:
 14676  001364  5017               	movf	(___flmul@a+3)^0,w,c
 14677  001366  0B80               	andlw	128
 14678  001368  1A1C               	xorwf	___flmul@sign^0,f,c
 14679  00136A  5017               	movf	(___flmul@a+3)^0,w,c
 14680  00136C  2417               	addwf	(___flmul@a+3)^0,w,c
 14681  00136E  6E1D               	movwf	___flmul@aexp^0,c
 14682  001370  BE16               	btfsc	(___flmul@a+2)^0,7,c
 14683  001372  801D               	bsf	___flmul@aexp^0,0,c
 14684  001374  501D               	movf	___flmul@aexp^0,w,c
 14685  001376  B4D8               	btfsc	status,2,c
 14686  001378  D00D               	goto	l10423
 14687  00137A  281D               	incf	___flmul@aexp^0,w,c
 14688  00137C  A4D8               	btfss	status,2,c
 14689  00137E  D008               	goto	l10421
 14690  001380  0E00               	movlw	0
 14691  001382  6E14               	movwf	___flmul@a^0,c
 14692  001384  0E00               	movlw	0
 14693  001386  6E15               	movwf	(___flmul@a+1)^0,c
 14694  001388  0E00               	movlw	0
 14695  00138A  6E16               	movwf	(___flmul@a+2)^0,c
 14696  00138C  0E00               	movlw	0
 14697  00138E  6E17               	movwf	(___flmul@a+3)^0,c
 14698  001390                     l10421:
 14699  001390  8E16               	bsf	(___flmul@a+2)^0,7,c
 14700  001392  D008               	goto	l3810
 14701  001394                     l10423:
 14702  001394  0E00               	movlw	0
 14703  001396  6E14               	movwf	___flmul@a^0,c
 14704  001398  0E00               	movlw	0
 14705  00139A  6E15               	movwf	(___flmul@a+1)^0,c
 14706  00139C  0E00               	movlw	0
 14707  00139E  6E16               	movwf	(___flmul@a+2)^0,c
 14708  0013A0  0E00               	movlw	0
 14709  0013A2  6E17               	movwf	(___flmul@a+3)^0,c
 14710  0013A4                     l3810:
 14711  0013A4  501D               	movf	___flmul@aexp^0,w,c
 14712  0013A6  B4D8               	btfsc	status,2,c
 14713  0013A8  D003               	goto	u8670
 14714  0013AA  5022               	movf	___flmul@bexp^0,w,c
 14715  0013AC  A4D8               	btfss	status,2,c
 14716  0013AE  D009               	goto	l10431
 14717  0013B0                     u8670:
 14718  0013B0  0E00               	movlw	0
 14719  0013B2  6E10               	movwf	?___flmul^0,c
 14720  0013B4  0E00               	movlw	0
 14721  0013B6  6E11               	movwf	(?___flmul+1)^0,c
 14722  0013B8  0E00               	movlw	0
 14723  0013BA  6E12               	movwf	(?___flmul+2)^0,c
 14724  0013BC  0E00               	movlw	0
 14725  0013BE  6E13               	movwf	(?___flmul+3)^0,c
 14726  0013C0  0012               	return	
 14727  0013C2                     l10431:
 14728  0013C2  5016               	movf	(___flmul@a+2)^0,w,c
 14729  0013C4  0210               	mulwf	___flmul@b^0,c
 14730  0013C6  006F FFCC  F027    	movff	prodl,___flmul@temp
 14731  0013CC  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14732  0013D2  5027               	movf	___flmul@temp^0,w,c
 14733  0013D4  6E1E               	movwf	___flmul@grs^0,c
 14734  0013D6  6A1F               	clrf	(___flmul@grs+1)^0,c
 14735  0013D8  6A20               	clrf	(___flmul@grs+2)^0,c
 14736  0013DA  6A21               	clrf	(___flmul@grs+3)^0,c
 14737  0013DC  5028               	movf	(___flmul@temp+1)^0,w,c
 14738  0013DE  6E23               	movwf	___flmul@prod^0,c
 14739  0013E0  6A24               	clrf	(___flmul@prod+1)^0,c
 14740  0013E2  6A25               	clrf	(___flmul@prod+2)^0,c
 14741  0013E4  6A26               	clrf	(___flmul@prod+3)^0,c
 14742  0013E6  5015               	movf	(___flmul@a+1)^0,w,c
 14743  0013E8  0211               	mulwf	(___flmul@b+1)^0,c
 14744  0013EA  006F FFCC  F027    	movff	prodl,___flmul@temp
 14745  0013F0  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14746  0013F6  5027               	movf	___flmul@temp^0,w,c
 14747  0013F8  261E               	addwf	___flmul@grs^0,f,c
 14748  0013FA  0E00               	movlw	0
 14749  0013FC  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14750  0013FE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14751  001400  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14752  001402  5028               	movf	(___flmul@temp+1)^0,w,c
 14753  001404  2623               	addwf	___flmul@prod^0,f,c
 14754  001406  0E00               	movlw	0
 14755  001408  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14756  00140A  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14757  00140C  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14758  00140E  5014               	movf	___flmul@a^0,w,c
 14759  001410  0212               	mulwf	(___flmul@b+2)^0,c
 14760  001412  006F FFCC  F027    	movff	prodl,___flmul@temp
 14761  001418  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14762  00141E  5027               	movf	___flmul@temp^0,w,c
 14763  001420  261E               	addwf	___flmul@grs^0,f,c
 14764  001422  0E00               	movlw	0
 14765  001424  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14766  001426  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14767  001428  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14768  00142A  5028               	movf	(___flmul@temp+1)^0,w,c
 14769  00142C  2623               	addwf	___flmul@prod^0,f,c
 14770  00142E  0E00               	movlw	0
 14771  001430  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14772  001432  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14773  001434  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14774  001436  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 14775  00143C  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 14776  001442  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 14777  001448  6A1E               	clrf	___flmul@grs^0,c
 14778  00144A  5014               	movf	___flmul@a^0,w,c
 14779  00144C  0211               	mulwf	(___flmul@b+1)^0,c
 14780  00144E  006F FFCC  F027    	movff	prodl,___flmul@temp
 14781  001454  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14782  00145A  5027               	movf	___flmul@temp^0,w,c
 14783  00145C  261E               	addwf	___flmul@grs^0,f,c
 14784  00145E  5028               	movf	(___flmul@temp+1)^0,w,c
 14785  001460  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14786  001462  0E00               	movlw	0
 14787  001464  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14788  001466  0E00               	movlw	0
 14789  001468  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14790  00146A  5015               	movf	(___flmul@a+1)^0,w,c
 14791  00146C  0210               	mulwf	___flmul@b^0,c
 14792  00146E  006F FFCC  F027    	movff	prodl,___flmul@temp
 14793  001474  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14794  00147A  5027               	movf	___flmul@temp^0,w,c
 14795  00147C  261E               	addwf	___flmul@grs^0,f,c
 14796  00147E  5028               	movf	(___flmul@temp+1)^0,w,c
 14797  001480  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14798  001482  0E00               	movlw	0
 14799  001484  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14800  001486  0E00               	movlw	0
 14801  001488  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14802  00148A  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 14803  001490  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 14804  001496  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 14805  00149C  6A1E               	clrf	___flmul@grs^0,c
 14806  00149E  5014               	movf	___flmul@a^0,w,c
 14807  0014A0  0210               	mulwf	___flmul@b^0,c
 14808  0014A2  006F FFCC  F027    	movff	prodl,___flmul@temp
 14809  0014A8  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14810  0014AE  5027               	movf	___flmul@temp^0,w,c
 14811  0014B0  261E               	addwf	___flmul@grs^0,f,c
 14812  0014B2  5028               	movf	(___flmul@temp+1)^0,w,c
 14813  0014B4  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14814  0014B6  0E00               	movlw	0
 14815  0014B8  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14816  0014BA  0E00               	movlw	0
 14817  0014BC  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14818  0014BE  5016               	movf	(___flmul@a+2)^0,w,c
 14819  0014C0  0211               	mulwf	(___flmul@b+1)^0,c
 14820  0014C2  006F FFCC  F027    	movff	prodl,___flmul@temp
 14821  0014C8  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14822  0014CE  5027               	movf	___flmul@temp^0,w,c
 14823  0014D0  2623               	addwf	___flmul@prod^0,f,c
 14824  0014D2  5028               	movf	(___flmul@temp+1)^0,w,c
 14825  0014D4  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14826  0014D6  0E00               	movlw	0
 14827  0014D8  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14828  0014DA  0E00               	movlw	0
 14829  0014DC  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14830  0014DE  5015               	movf	(___flmul@a+1)^0,w,c
 14831  0014E0  0212               	mulwf	(___flmul@b+2)^0,c
 14832  0014E2  006F FFCC  F027    	movff	prodl,___flmul@temp
 14833  0014E8  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14834  0014EE  5027               	movf	___flmul@temp^0,w,c
 14835  0014F0  2623               	addwf	___flmul@prod^0,f,c
 14836  0014F2  5028               	movf	(___flmul@temp+1)^0,w,c
 14837  0014F4  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14838  0014F6  0E00               	movlw	0
 14839  0014F8  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14840  0014FA  0E00               	movlw	0
 14841  0014FC  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14842  0014FE  5016               	movf	(___flmul@a+2)^0,w,c
 14843  001500  0212               	mulwf	(___flmul@b+2)^0,c
 14844  001502  006F FFCC  F027    	movff	prodl,___flmul@temp
 14845  001508  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 14846  00150E  5027               	movf	___flmul@temp^0,w,c
 14847  001510  6E18               	movwf	??___flmul^0,c
 14848  001512  5028               	movf	(___flmul@temp+1)^0,w,c
 14849  001514  6E19               	movwf	(??___flmul+1)^0,c
 14850  001516  6A1A               	clrf	(??___flmul+2)^0,c
 14851  001518  6A1B               	clrf	(??___flmul+3)^0,c
 14852  00151A  0060  F068  F01B   	movff	??___flmul+2,??___flmul+3
 14853  001520  0060  F064  F01A   	movff	??___flmul+1,??___flmul+2
 14854  001526  0060  F060  F019   	movff	??___flmul,??___flmul+1
 14855  00152C  6A18               	clrf	??___flmul^0,c
 14856  00152E  5018               	movf	??___flmul^0,w,c
 14857  001530  2623               	addwf	___flmul@prod^0,f,c
 14858  001532  5019               	movf	(??___flmul+1)^0,w,c
 14859  001534  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14860  001536  501A               	movf	(??___flmul+2)^0,w,c
 14861  001538  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14862  00153A  501B               	movf	(??___flmul+3)^0,w,c
 14863  00153C  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14864  00153E  5021               	movf	(___flmul@grs+3)^0,w,c
 14865  001540  2623               	addwf	___flmul@prod^0,f,c
 14866  001542  0E00               	movlw	0
 14867  001544  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14868  001546  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14869  001548  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14870  00154A  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 14871  001550  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 14872  001556  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 14873  00155C  6A1E               	clrf	___flmul@grs^0,c
 14874  00155E  501D               	movf	___flmul@aexp^0,w,c
 14875  001560  0060  F088  F018   	movff	___flmul@bexp,??___flmul
 14876  001566  6A19               	clrf	(??___flmul+1)^0,c
 14877  001568  2618               	addwf	??___flmul^0,f,c
 14878  00156A  0E00               	movlw	0
 14879  00156C  2219               	addwfc	(??___flmul+1)^0,f,c
 14880  00156E  0E82               	movlw	130
 14881  001570  2418               	addwf	??___flmul^0,w,c
 14882  001572  6E27               	movwf	___flmul@temp^0,c
 14883  001574  0EFF               	movlw	255
 14884  001576  2019               	addwfc	(??___flmul+1)^0,w,c
 14885  001578  6E28               	movwf	(___flmul@temp+1)^0,c
 14886  00157A  D00F               	goto	l10479
 14887  00157C                     l10473:
 14888  00157C  90D8               	bcf	status,0,c
 14889  00157E  3623               	rlcf	___flmul@prod^0,f,c
 14890  001580  3624               	rlcf	(___flmul@prod+1)^0,f,c
 14891  001582  3625               	rlcf	(___flmul@prod+2)^0,f,c
 14892  001584  3626               	rlcf	(___flmul@prod+3)^0,f,c
 14893  001586  BE21               	btfsc	(___flmul@grs+3)^0,7,c
 14894  001588  8023               	bsf	___flmul@prod^0,0,c
 14895  00158A  90D8               	bcf	status,0,c
 14896  00158C  361E               	rlcf	___flmul@grs^0,f,c
 14897  00158E  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14898  001590  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14899  001592  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14900  001594  0627               	decf	___flmul@temp^0,f,c
 14901  001596  A0D8               	btfss	status,0,c
 14902  001598  0628               	decf	(___flmul@temp+1)^0,f,c
 14903  00159A                     l10479:
 14904  00159A  AE25               	btfss	(___flmul@prod+2)^0,7,c
 14905  00159C  D7EF               	goto	l10473
 14906  00159E  0E00               	movlw	0
 14907  0015A0  6E1D               	movwf	___flmul@aexp^0,c
 14908  0015A2  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14909  0015A4  D017               	goto	l3819
 14910  0015A6  0EFF               	movlw	255
 14911  0015A8  141E               	andwf	___flmul@grs^0,w,c
 14912  0015AA  6E18               	movwf	??___flmul^0,c
 14913  0015AC  0EFF               	movlw	255
 14914  0015AE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14915  0015B0  6E19               	movwf	(??___flmul+1)^0,c
 14916  0015B2  0EFF               	movlw	255
 14917  0015B4  1420               	andwf	(___flmul@grs+2)^0,w,c
 14918  0015B6  6E1A               	movwf	(??___flmul+2)^0,c
 14919  0015B8  0E7F               	movlw	127
 14920  0015BA  1421               	andwf	(___flmul@grs+3)^0,w,c
 14921  0015BC  6E1B               	movwf	(??___flmul+3)^0,c
 14922  0015BE  5018               	movf	??___flmul^0,w,c
 14923  0015C0  1019               	iorwf	(??___flmul+1)^0,w,c
 14924  0015C2  101A               	iorwf	(??___flmul+2)^0,w,c
 14925  0015C4  101B               	iorwf	(??___flmul+3)^0,w,c
 14926  0015C6  B4D8               	btfsc	status,2,c
 14927  0015C8  D003               	goto	l3820
 14928  0015CA                     u8710:
 14929  0015CA  0E01               	movlw	1
 14930  0015CC  6E1D               	movwf	___flmul@aexp^0,c
 14931  0015CE  D002               	goto	l3819
 14932  0015D0                     l3820:
 14933  0015D0  B023               	btfsc	___flmul@prod^0,0,c
 14934  0015D2  D7FB               	goto	u8710
 14935  0015D4                     l3819:
 14936  0015D4  501D               	movf	___flmul@aexp^0,w,c
 14937  0015D6  B4D8               	btfsc	status,2,c
 14938  0015D8  D027               	goto	l10499
 14939  0015DA  0E01               	movlw	1
 14940  0015DC  2623               	addwf	___flmul@prod^0,f,c
 14941  0015DE  0E00               	movlw	0
 14942  0015E0  2224               	addwfc	(___flmul@prod+1)^0,f,c
 14943  0015E2  2225               	addwfc	(___flmul@prod+2)^0,f,c
 14944  0015E4  2226               	addwfc	(___flmul@prod+3)^0,f,c
 14945  0015E6  A026               	btfss	(___flmul@prod+3)^0,0,c
 14946  0015E8  D01F               	goto	l10499
 14947  0015EA  0060  F08C  F018   	movff	___flmul@prod,??___flmul
 14948  0015F0  0060  F090  F019   	movff	___flmul@prod+1,??___flmul+1
 14949  0015F6  0060  F094  F01A   	movff	___flmul@prod+2,??___flmul+2
 14950  0015FC  0060  F098  F01B   	movff	___flmul@prod+3,??___flmul+3
 14951  001602  341B               	rlcf	(??___flmul+3)^0,w,c
 14952  001604  321B               	rrcf	(??___flmul+3)^0,f,c
 14953  001606  321A               	rrcf	(??___flmul+2)^0,f,c
 14954  001608  3219               	rrcf	(??___flmul+1)^0,f,c
 14955  00160A  3218               	rrcf	??___flmul^0,f,c
 14956  00160C  0060  F060  F023   	movff	??___flmul,___flmul@prod
 14957  001612  0060  F064  F024   	movff	??___flmul+1,___flmul@prod+1
 14958  001618  0060  F068  F025   	movff	??___flmul+2,___flmul@prod+2
 14959  00161E  0060  F06C  F026   	movff	??___flmul+3,___flmul@prod+3
 14960  001624  4A27               	infsnz	___flmul@temp^0,f,c
 14961  001626  2A28               	incf	(___flmul@temp+1)^0,f,c
 14962  001628                     l10499:
 14963  001628  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 14964  00162A  D00D               	goto	l10503
 14965  00162C  5028               	movf	(___flmul@temp+1)^0,w,c
 14966  00162E  E103               	bnz	u8750
 14967  001630  2827               	incf	___flmul@temp^0,w,c
 14968  001632  A0D8               	btfss	status,0,c
 14969  001634  D008               	goto	l10503
 14970  001636                     u8750:
 14971  001636  0E00               	movlw	0
 14972  001638  6E23               	movwf	___flmul@prod^0,c
 14973  00163A  0E00               	movlw	0
 14974  00163C  6E24               	movwf	(___flmul@prod+1)^0,c
 14975  00163E  0E80               	movlw	128
 14976  001640  6E25               	movwf	(___flmul@prod+2)^0,c
 14977  001642  0E7F               	movlw	127
 14978  001644  D021               	goto	L8
 14979  001646                     l10503:
 14980  001646  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 14981  001648  D005               	goto	u8760
 14982  00164A  5028               	movf	(___flmul@temp+1)^0,w,c
 14983  00164C  E10E               	bnz	l3827
 14984  00164E  0427               	decf	___flmul@temp^0,w,c
 14985  001650  B0D8               	btfsc	status,0,c
 14986  001652  D00B               	goto	l3827
 14987  001654                     u8760:
 14988  001654  0E00               	movlw	0
 14989  001656  6E23               	movwf	___flmul@prod^0,c
 14990  001658  0E00               	movlw	0
 14991  00165A  6E24               	movwf	(___flmul@prod+1)^0,c
 14992  00165C  0E00               	movlw	0
 14993  00165E  6E25               	movwf	(___flmul@prod+2)^0,c
 14994  001660  0E00               	movlw	0
 14995  001662  6E26               	movwf	(___flmul@prod+3)^0,c
 14996  001664  0E00               	movlw	0
 14997  001666  6E1C               	movwf	___flmul@sign^0,c
 14998  001668  D010               	goto	l10515
 14999  00166A                     l3827:
 15000  00166A  0060  F09C  F022   	movff	___flmul@temp,___flmul@bexp
 15001  001670  0EFF               	movlw	255
 15002  001672  1623               	andwf	___flmul@prod^0,f,c
 15003  001674  0EFF               	movlw	255
 15004  001676  1624               	andwf	(___flmul@prod+1)^0,f,c
 15005  001678  0E7F               	movlw	127
 15006  00167A  1625               	andwf	(___flmul@prod+2)^0,f,c
 15007  00167C  0E00               	movlw	0
 15008  00167E  1626               	andwf	(___flmul@prod+3)^0,f,c
 15009  001680  B022               	btfsc	___flmul@bexp^0,0,c
 15010  001682  8E25               	bsf	(___flmul@prod+2)^0,7,c
 15011  001684  90D8               	bcf	status,0,c
 15012  001686  3022               	rrcf	___flmul@bexp^0,w,c
 15013  001688                     L8:
 15014  001688  6E26               	movwf	(___flmul@prod+3)^0,c
 15015  00168A                     l10515:
 15016  00168A  501C               	movf	___flmul@sign^0,w,c
 15017  00168C  1226               	iorwf	(___flmul@prod+3)^0,f,c
 15018  00168E  0060  F08C  F010   	movff	___flmul@prod,?___flmul
 15019  001694  0060  F090  F011   	movff	___flmul@prod+1,?___flmul+1
 15020  00169A  0060  F094  F012   	movff	___flmul@prod+2,?___flmul+2
 15021  0016A0  0060  F098  F013   	movff	___flmul@prod+3,?___flmul+3
 15022  0016A6  0012               	return		;funcret
 15023  0016A8                     __end_of___flmul:
 15024                           	opt callstack 0
 15025                           
 15026 ;; *************** function ___fladd *****************
 15027 ;; Defined at:
 15028 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 15029 ;; Parameters:    Size  Location     Type
 15030 ;;  b               4   40[COMRAM] unsigned char 
 15031 ;;  a               4   44[COMRAM] unsigned char 
 15032 ;; Auto vars:     Size  Location     Type
 15033 ;;  grs             1   55[COMRAM] unsigned char 
 15034 ;;  bexp            1   54[COMRAM] unsigned char 
 15035 ;;  aexp            1   53[COMRAM] unsigned char 
 15036 ;;  signs           1   52[COMRAM] unsigned char 
 15037 ;; Return value:  Size  Location     Type
 15038 ;;                  4   40[COMRAM] unsigned char 
 15039 ;; Registers used:
 15040 ;;		wreg, status,2, status,0
 15041 ;; Tracked objects:
 15042 ;;		On entry : 0/1
 15043 ;;		On exit  : 0/0
 15044 ;;		Unchanged: 0/0
 15045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15046 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15047 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15049 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;Total ram usage:       16 bytes
 15051 ;; Hardware stack levels used:    1
 15052 ;; Hardware stack levels required when called:    7
 15053 ;; This function calls:
 15054 ;;		Nothing
 15055 ;; This function is called by:
 15056 ;;		_get_lqi
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           	psect	text94
 15061  001A16                     __ptext94:
 15062                           	opt callstack 0
 15063  001A16                     ___fladd:
 15064                           	opt callstack 18
 15065                           
 15066                           ;incstack = 0
 15067  001A16  502C               	movf	(___fladd@b+3)^0,w,c
 15068  001A18  0B80               	andlw	128
 15069  001A1A  6E35               	movwf	___fladd@signs^0,c
 15070  001A1C  502C               	movf	(___fladd@b+3)^0,w,c
 15071  001A1E  242C               	addwf	(___fladd@b+3)^0,w,c
 15072  001A20  6E37               	movwf	___fladd@bexp^0,c
 15073  001A22  BE2B               	btfsc	(___fladd@b+2)^0,7,c
 15074  001A24  8037               	bsf	___fladd@bexp^0,0,c
 15075  001A26  5037               	movf	___fladd@bexp^0,w,c
 15076  001A28  B4D8               	btfsc	status,2,c
 15077  001A2A  D00D               	goto	l10205
 15078  001A2C  2837               	incf	___fladd@bexp^0,w,c
 15079  001A2E  A4D8               	btfss	status,2,c
 15080  001A30  D008               	goto	l10201
 15081  001A32  0E00               	movlw	0
 15082  001A34  6E29               	movwf	___fladd@b^0,c
 15083  001A36  0E00               	movlw	0
 15084  001A38  6E2A               	movwf	(___fladd@b+1)^0,c
 15085  001A3A  0E00               	movlw	0
 15086  001A3C  6E2B               	movwf	(___fladd@b+2)^0,c
 15087  001A3E  0E00               	movlw	0
 15088  001A40  6E2C               	movwf	(___fladd@b+3)^0,c
 15089  001A42                     l10201:
 15090  001A42  8E2B               	bsf	(___fladd@b+2)^0,7,c
 15091  001A44  D006               	goto	L9
 15092  001A46                     l10205:
 15093  001A46  0E00               	movlw	0
 15094  001A48  6E29               	movwf	___fladd@b^0,c
 15095  001A4A  0E00               	movlw	0
 15096  001A4C  6E2A               	movwf	(___fladd@b+1)^0,c
 15097  001A4E  0E00               	movlw	0
 15098  001A50  6E2B               	movwf	(___fladd@b+2)^0,c
 15099  001A52                     L9:
 15100  001A52  0E00               	movlw	0
 15101  001A54  6E2C               	movwf	(___fladd@b+3)^0,c
 15102  001A56  5030               	movf	(___fladd@a+3)^0,w,c
 15103  001A58  0B80               	andlw	128
 15104  001A5A  6E36               	movwf	___fladd@aexp^0,c
 15105  001A5C  5035               	movf	___fladd@signs^0,w,c
 15106  001A5E  1836               	xorwf	___fladd@aexp^0,w,c
 15107  001A60  A4D8               	btfss	status,2,c
 15108  001A62  8C35               	bsf	___fladd@signs^0,6,c
 15109  001A64  5030               	movf	(___fladd@a+3)^0,w,c
 15110  001A66  2430               	addwf	(___fladd@a+3)^0,w,c
 15111  001A68  6E36               	movwf	___fladd@aexp^0,c
 15112  001A6A  BE2F               	btfsc	(___fladd@a+2)^0,7,c
 15113  001A6C  8036               	bsf	___fladd@aexp^0,0,c
 15114  001A6E  5036               	movf	___fladd@aexp^0,w,c
 15115  001A70  B4D8               	btfsc	status,2,c
 15116  001A72  D00D               	goto	l10229
 15117  001A74  2836               	incf	___fladd@aexp^0,w,c
 15118  001A76  A4D8               	btfss	status,2,c
 15119  001A78  D008               	goto	l10225
 15120  001A7A  0E00               	movlw	0
 15121  001A7C  6E2D               	movwf	___fladd@a^0,c
 15122  001A7E  0E00               	movlw	0
 15123  001A80  6E2E               	movwf	(___fladd@a+1)^0,c
 15124  001A82  0E00               	movlw	0
 15125  001A84  6E2F               	movwf	(___fladd@a+2)^0,c
 15126  001A86  0E00               	movlw	0
 15127  001A88  6E30               	movwf	(___fladd@a+3)^0,c
 15128  001A8A                     l10225:
 15129  001A8A  8E2F               	bsf	(___fladd@a+2)^0,7,c
 15130  001A8C  D006               	goto	L10
 15131  001A8E                     l10229:
 15132  001A8E  0E00               	movlw	0
 15133  001A90  6E2D               	movwf	___fladd@a^0,c
 15134  001A92  0E00               	movlw	0
 15135  001A94  6E2E               	movwf	(___fladd@a+1)^0,c
 15136  001A96  0E00               	movlw	0
 15137  001A98  6E2F               	movwf	(___fladd@a+2)^0,c
 15138  001A9A                     L10:
 15139  001A9A  0E00               	movlw	0
 15140  001A9C  6E30               	movwf	(___fladd@a+3)^0,c
 15141  001A9E  5037               	movf	___fladd@bexp^0,w,c
 15142  001AA0  5C36               	subwf	___fladd@aexp^0,w,c
 15143  001AA2  B0D8               	btfsc	status,0,c
 15144  001AA4  D031               	goto	l10267
 15145  001AA6  AC35               	btfss	___fladd@signs^0,6,c
 15146  001AA8  D002               	goto	l10237
 15147  001AAA  0E80               	movlw	128
 15148  001AAC  1A35               	xorwf	___fladd@signs^0,f,c
 15149  001AAE                     l10237:
 15150  001AAE  0060  F0DC  F038   	movff	___fladd@bexp,___fladd@grs
 15151  001AB4  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 15152  001ABA  0060  F0E0  F036   	movff	___fladd@grs,___fladd@aexp
 15153  001AC0  0060  F0A4  F038   	movff	___fladd@b,___fladd@grs
 15154  001AC6  0060  F0B4  F029   	movff	___fladd@a,___fladd@b
 15155  001ACC  0060  F0E0  F02D   	movff	___fladd@grs,___fladd@a
 15156  001AD2  0060  F0A8  F038   	movff	___fladd@b+1,___fladd@grs
 15157  001AD8  0060  F0B8  F02A   	movff	___fladd@a+1,___fladd@b+1
 15158  001ADE  0060  F0E0  F02E   	movff	___fladd@grs,___fladd@a+1
 15159  001AE4  0060  F0AC  F038   	movff	___fladd@b+2,___fladd@grs
 15160  001AEA  0060  F0BC  F02B   	movff	___fladd@a+2,___fladd@b+2
 15161  001AF0  0060  F0E0  F02F   	movff	___fladd@grs,___fladd@a+2
 15162  001AF6  0060  F0B0  F038   	movff	___fladd@b+3,___fladd@grs
 15163  001AFC  0060  F0C0  F02C   	movff	___fladd@a+3,___fladd@b+3
 15164  001B02  0060  F0E0  F030   	movff	___fladd@grs,___fladd@a+3
 15165  001B08                     l10267:
 15166  001B08  0E00               	movlw	0
 15167  001B0A  6E38               	movwf	___fladd@grs^0,c
 15168  001B0C  5037               	movf	___fladd@bexp^0,w,c
 15169  001B0E  0060  F0D8  F031   	movff	___fladd@aexp,??___fladd
 15170  001B14  6A32               	clrf	(??___fladd+1)^0,c
 15171  001B16  5E31               	subwf	??___fladd^0,f,c
 15172  001B18  0E00               	movlw	0
 15173  001B1A  5A32               	subwfb	(??___fladd+1)^0,f,c
 15174  001B1C  BE32               	btfsc	(??___fladd+1)^0,7,c
 15175  001B1E  D02D               	goto	l3725
 15176  001B20  5032               	movf	(??___fladd+1)^0,w,c
 15177  001B22  E104               	bnz	u8300
 15178  001B24  0E1A               	movlw	26
 15179  001B26  5C31               	subwf	??___fladd^0,w,c
 15180  001B28  A0D8               	btfss	status,0,c
 15181  001B2A  D027               	goto	l3725
 15182  001B2C                     u8300:
 15183  001B2C  5029               	movf	___fladd@b^0,w,c
 15184  001B2E  102A               	iorwf	(___fladd@b+1)^0,w,c
 15185  001B30  102B               	iorwf	(___fladd@b+2)^0,w,c
 15186  001B32  102C               	iorwf	(___fladd@b+3)^0,w,c
 15187  001B34  B4D8               	btfsc	status,2,c
 15188  001B36  D002               	goto	u8310
 15189  001B38  0E01               	movlw	1
 15190  001B3A  D001               	goto	u8320
 15191  001B3C                     u8310:
 15192  001B3C  0E00               	movlw	0
 15193  001B3E                     u8320:
 15194  001B3E  6E38               	movwf	___fladd@grs^0,c
 15195  001B40  0E00               	movlw	0
 15196  001B42  6E29               	movwf	___fladd@b^0,c
 15197  001B44  0E00               	movlw	0
 15198  001B46  6E2A               	movwf	(___fladd@b+1)^0,c
 15199  001B48  0E00               	movlw	0
 15200  001B4A  6E2B               	movwf	(___fladd@b+2)^0,c
 15201  001B4C  0E00               	movlw	0
 15202  001B4E  6E2C               	movwf	(___fladd@b+3)^0,c
 15203  001B50  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 15204  001B56  D015               	goto	u8350
 15205  001B58                     l3726:
 15206  001B58  A038               	btfss	___fladd@grs^0,0,c
 15207  001B5A  D005               	goto	l10279
 15208  001B5C  90D8               	bcf	status,0,c
 15209  001B5E  3038               	rrcf	___fladd@grs^0,w,c
 15210  001B60  0901               	iorlw	1
 15211  001B62  6E38               	movwf	___fladd@grs^0,c
 15212  001B64  D002               	goto	l10281
 15213  001B66                     l10279:
 15214  001B66  90D8               	bcf	status,0,c
 15215  001B68  3238               	rrcf	___fladd@grs^0,f,c
 15216  001B6A                     l10281:
 15217  001B6A  B029               	btfsc	___fladd@b^0,0,c
 15218  001B6C  8E38               	bsf	___fladd@grs^0,7,c
 15219  001B6E  342C               	rlcf	(___fladd@b+3)^0,w,c
 15220  001B70  322C               	rrcf	(___fladd@b+3)^0,f,c
 15221  001B72  322B               	rrcf	(___fladd@b+2)^0,f,c
 15222  001B74  322A               	rrcf	(___fladd@b+1)^0,f,c
 15223  001B76  3229               	rrcf	___fladd@b^0,f,c
 15224  001B78  2A37               	incf	___fladd@bexp^0,f,c
 15225  001B7A                     l3725:
 15226  001B7A  5036               	movf	___fladd@aexp^0,w,c
 15227  001B7C  5C37               	subwf	___fladd@bexp^0,w,c
 15228  001B7E  A0D8               	btfss	status,0,c
 15229  001B80  D7EB               	goto	l3726
 15230  001B82                     u8350:
 15231  001B82  BC35               	btfsc	___fladd@signs^0,6,c
 15232  001B84  D028               	goto	l10313
 15233  001B86  5037               	movf	___fladd@bexp^0,w,c
 15234  001B88  A4D8               	btfss	status,2,c
 15235  001B8A  D009               	goto	l10295
 15236  001B8C  0E00               	movlw	0
 15237  001B8E  6E29               	movwf	?___fladd^0,c
 15238  001B90  0E00               	movlw	0
 15239  001B92  6E2A               	movwf	(?___fladd+1)^0,c
 15240  001B94  0E00               	movlw	0
 15241  001B96  6E2B               	movwf	(?___fladd+2)^0,c
 15242  001B98  0E00               	movlw	0
 15243  001B9A  6E2C               	movwf	(?___fladd+3)^0,c
 15244  001B9C  0012               	return	
 15245  001B9E                     l10295:
 15246  001B9E  502D               	movf	___fladd@a^0,w,c
 15247  001BA0  2629               	addwf	___fladd@b^0,f,c
 15248  001BA2  502E               	movf	(___fladd@a+1)^0,w,c
 15249  001BA4  222A               	addwfc	(___fladd@b+1)^0,f,c
 15250  001BA6  502F               	movf	(___fladd@a+2)^0,w,c
 15251  001BA8  222B               	addwfc	(___fladd@b+2)^0,f,c
 15252  001BAA  5030               	movf	(___fladd@a+3)^0,w,c
 15253  001BAC  222C               	addwfc	(___fladd@b+3)^0,f,c
 15254  001BAE  A02C               	btfss	(___fladd@b+3)^0,0,c
 15255  001BB0  D071               	goto	u8480
 15256  001BB2  A038               	btfss	___fladd@grs^0,0,c
 15257  001BB4  D005               	goto	l10303
 15258  001BB6  90D8               	bcf	status,0,c
 15259  001BB8  3038               	rrcf	___fladd@grs^0,w,c
 15260  001BBA  0901               	iorlw	1
 15261  001BBC  6E38               	movwf	___fladd@grs^0,c
 15262  001BBE  D002               	goto	l10305
 15263  001BC0                     l10303:
 15264  001BC0  90D8               	bcf	status,0,c
 15265  001BC2  3238               	rrcf	___fladd@grs^0,f,c
 15266  001BC4                     l10305:
 15267  001BC4  B029               	btfsc	___fladd@b^0,0,c
 15268  001BC6  8E38               	bsf	___fladd@grs^0,7,c
 15269  001BC8  342C               	rlcf	(___fladd@b+3)^0,w,c
 15270  001BCA  322C               	rrcf	(___fladd@b+3)^0,f,c
 15271  001BCC  322B               	rrcf	(___fladd@b+2)^0,f,c
 15272  001BCE  322A               	rrcf	(___fladd@b+1)^0,f,c
 15273  001BD0  3229               	rrcf	___fladd@b^0,f,c
 15274  001BD2  2A37               	incf	___fladd@bexp^0,f,c
 15275  001BD4  D05F               	goto	u8480
 15276  001BD6                     l10313:
 15277  001BD6  502D               	movf	___fladd@a^0,w,c
 15278  001BD8  5C29               	subwf	___fladd@b^0,w,c
 15279  001BDA  502E               	movf	(___fladd@a+1)^0,w,c
 15280  001BDC  582A               	subwfb	(___fladd@b+1)^0,w,c
 15281  001BDE  502F               	movf	(___fladd@a+2)^0,w,c
 15282  001BE0  582B               	subwfb	(___fladd@b+2)^0,w,c
 15283  001BE2  502C               	movf	(___fladd@b+3)^0,w,c
 15284  001BE4  0A80               	xorlw	128
 15285  001BE6  6E31               	movwf	??___fladd^0,c
 15286  001BE8  5030               	movf	(___fladd@a+3)^0,w,c
 15287  001BEA  0A80               	xorlw	128
 15288  001BEC  5831               	subwfb	??___fladd^0,w,c
 15289  001BEE  B0D8               	btfsc	status,0,c
 15290  001BF0  D025               	goto	l10323
 15291  001BF2  5029               	movf	___fladd@b^0,w,c
 15292  001BF4  5C2D               	subwf	___fladd@a^0,w,c
 15293  001BF6  6E31               	movwf	??___fladd^0,c
 15294  001BF8  502A               	movf	(___fladd@b+1)^0,w,c
 15295  001BFA  582E               	subwfb	(___fladd@a+1)^0,w,c
 15296  001BFC  6E32               	movwf	(??___fladd+1)^0,c
 15297  001BFE  502B               	movf	(___fladd@b+2)^0,w,c
 15298  001C00  582F               	subwfb	(___fladd@a+2)^0,w,c
 15299  001C02  6E33               	movwf	(??___fladd+2)^0,c
 15300  001C04  502C               	movf	(___fladd@b+3)^0,w,c
 15301  001C06  5830               	subwfb	(___fladd@a+3)^0,w,c
 15302  001C08  6E34               	movwf	(??___fladd+3)^0,c
 15303  001C0A  0EFF               	movlw	255
 15304  001C0C  2431               	addwf	??___fladd^0,w,c
 15305  001C0E  6E29               	movwf	___fladd@b^0,c
 15306  001C10  0EFF               	movlw	255
 15307  001C12  2032               	addwfc	(??___fladd+1)^0,w,c
 15308  001C14  6E2A               	movwf	(___fladd@b+1)^0,c
 15309  001C16  0EFF               	movlw	255
 15310  001C18  2033               	addwfc	(??___fladd+2)^0,w,c
 15311  001C1A  6E2B               	movwf	(___fladd@b+2)^0,c
 15312  001C1C  0EFF               	movlw	255
 15313  001C1E  2034               	addwfc	(??___fladd+3)^0,w,c
 15314  001C20  6E2C               	movwf	(___fladd@b+3)^0,c
 15315  001C22  0E80               	movlw	128
 15316  001C24  1A35               	xorwf	___fladd@signs^0,f,c
 15317  001C26  6C38               	negf	___fladd@grs^0,c
 15318  001C28  5038               	movf	___fladd@grs^0,w,c
 15319  001C2A  A4D8               	btfss	status,2,c
 15320  001C2C  D00F               	goto	l3741
 15321  001C2E  0E01               	movlw	1
 15322  001C30  2629               	addwf	___fladd@b^0,f,c
 15323  001C32  0E00               	movlw	0
 15324  001C34  222A               	addwfc	(___fladd@b+1)^0,f,c
 15325  001C36  222B               	addwfc	(___fladd@b+2)^0,f,c
 15326  001C38  222C               	addwfc	(___fladd@b+3)^0,f,c
 15327  001C3A  D008               	goto	l3741
 15328  001C3C                     l10323:
 15329  001C3C  502D               	movf	___fladd@a^0,w,c
 15330  001C3E  5E29               	subwf	___fladd@b^0,f,c
 15331  001C40  502E               	movf	(___fladd@a+1)^0,w,c
 15332  001C42  5A2A               	subwfb	(___fladd@b+1)^0,f,c
 15333  001C44  502F               	movf	(___fladd@a+2)^0,w,c
 15334  001C46  5A2B               	subwfb	(___fladd@b+2)^0,f,c
 15335  001C48  5030               	movf	(___fladd@a+3)^0,w,c
 15336  001C4A  5A2C               	subwfb	(___fladd@b+3)^0,f,c
 15337  001C4C                     l3741:
 15338  001C4C  5029               	movf	___fladd@b^0,w,c
 15339  001C4E  102A               	iorwf	(___fladd@b+1)^0,w,c
 15340  001C50  102B               	iorwf	(___fladd@b+2)^0,w,c
 15341  001C52  102C               	iorwf	(___fladd@b+3)^0,w,c
 15342  001C54  A4D8               	btfss	status,2,c
 15343  001C56  D01C               	goto	l10347
 15344  001C58  5038               	movf	___fladd@grs^0,w,c
 15345  001C5A  A4D8               	btfss	status,2,c
 15346  001C5C  D019               	goto	l10347
 15347  001C5E  0E00               	movlw	0
 15348  001C60  6E29               	movwf	?___fladd^0,c
 15349  001C62  0E00               	movlw	0
 15350  001C64  6E2A               	movwf	(?___fladd+1)^0,c
 15351  001C66  0E00               	movlw	0
 15352  001C68  6E2B               	movwf	(?___fladd+2)^0,c
 15353  001C6A  0E00               	movlw	0
 15354  001C6C  6E2C               	movwf	(?___fladd+3)^0,c
 15355  001C6E  0012               	return	
 15356  001C70                     l10331:
 15357  001C70  90D8               	bcf	status,0,c
 15358  001C72  3629               	rlcf	___fladd@b^0,f,c
 15359  001C74  362A               	rlcf	(___fladd@b+1)^0,f,c
 15360  001C76  362B               	rlcf	(___fladd@b+2)^0,f,c
 15361  001C78  362C               	rlcf	(___fladd@b+3)^0,f,c
 15362  001C7A  BE38               	btfsc	___fladd@grs^0,7,c
 15363  001C7C  8029               	bsf	___fladd@b^0,0,c
 15364  001C7E  A038               	btfss	___fladd@grs^0,0,c
 15365  001C80  D002               	goto	l10341
 15366  001C82  80D8               	bsf	status,0,c
 15367  001C84  D001               	goto	L11
 15368  001C86                     l10341:
 15369  001C86  90D8               	bcf	status,0,c
 15370  001C88                     L11:
 15371  001C88  3638               	rlcf	___fladd@grs^0,f,c
 15372  001C8A  5037               	movf	___fladd@bexp^0,w,c
 15373  001C8C  A4D8               	btfss	status,2,c
 15374  001C8E  0637               	decf	___fladd@bexp^0,f,c
 15375  001C90                     l10347:
 15376  001C90  AE2B               	btfss	(___fladd@b+2)^0,7,c
 15377  001C92  D7EE               	goto	l10331
 15378  001C94                     u8480:
 15379  001C94  0E00               	movlw	0
 15380  001C96  6E36               	movwf	___fladd@aexp^0,c
 15381  001C98  AE38               	btfss	___fladd@grs^0,7,c
 15382  001C9A  D00C               	goto	l3750
 15383  001C9C  0060  F0E0  F031   	movff	___fladd@grs,??___fladd
 15384  001CA2  0E7F               	movlw	127
 15385  001CA4  1631               	andwf	??___fladd^0,f,c
 15386  001CA6  B4D8               	btfsc	status,2,c
 15387  001CA8  D003               	goto	l3751
 15388  001CAA                     u8500:
 15389  001CAA  0E01               	movlw	1
 15390  001CAC  6E36               	movwf	___fladd@aexp^0,c
 15391  001CAE  D002               	goto	l3750
 15392  001CB0                     l3751:
 15393  001CB0  B029               	btfsc	___fladd@b^0,0,c
 15394  001CB2  D7FB               	goto	u8500
 15395  001CB4                     l3750:
 15396  001CB4  5036               	movf	___fladd@aexp^0,w,c
 15397  001CB6  B4D8               	btfsc	status,2,c
 15398  001CB8  D028               	goto	l10367
 15399  001CBA  0E01               	movlw	1
 15400  001CBC  2629               	addwf	___fladd@b^0,f,c
 15401  001CBE  0E00               	movlw	0
 15402  001CC0  222A               	addwfc	(___fladd@b+1)^0,f,c
 15403  001CC2  222B               	addwfc	(___fladd@b+2)^0,f,c
 15404  001CC4  222C               	addwfc	(___fladd@b+3)^0,f,c
 15405  001CC6  A02C               	btfss	(___fladd@b+3)^0,0,c
 15406  001CC8  D020               	goto	l10367
 15407  001CCA  0060  F0A4  F031   	movff	___fladd@b,??___fladd
 15408  001CD0  0060  F0A8  F032   	movff	___fladd@b+1,??___fladd+1
 15409  001CD6  0060  F0AC  F033   	movff	___fladd@b+2,??___fladd+2
 15410  001CDC  0060  F0B0  F034   	movff	___fladd@b+3,??___fladd+3
 15411  001CE2  3434               	rlcf	(??___fladd+3)^0,w,c
 15412  001CE4  3234               	rrcf	(??___fladd+3)^0,f,c
 15413  001CE6  3233               	rrcf	(??___fladd+2)^0,f,c
 15414  001CE8  3232               	rrcf	(??___fladd+1)^0,f,c
 15415  001CEA  3231               	rrcf	??___fladd^0,f,c
 15416  001CEC  0060  F0C4  F029   	movff	??___fladd,___fladd@b
 15417  001CF2  0060  F0C8  F02A   	movff	??___fladd+1,___fladd@b+1
 15418  001CF8  0060  F0CC  F02B   	movff	??___fladd+2,___fladd@b+2
 15419  001CFE  0060  F0D0  F02C   	movff	??___fladd+3,___fladd@b+3
 15420  001D04  2837               	incf	___fladd@bexp^0,w,c
 15421  001D06  A4D8               	btfss	status,2,c
 15422  001D08  2A37               	incf	___fladd@bexp^0,f,c
 15423  001D0A                     l10367:
 15424  001D0A  2837               	incf	___fladd@bexp^0,w,c
 15425  001D0C  B4D8               	btfsc	status,2,c
 15426  001D0E  D003               	goto	u8560
 15427  001D10  5037               	movf	___fladd@bexp^0,w,c
 15428  001D12  A4D8               	btfss	status,2,c
 15429  001D14  D00D               	goto	l10375
 15430  001D16                     u8560:
 15431  001D16  0E00               	movlw	0
 15432  001D18  6E29               	movwf	___fladd@b^0,c
 15433  001D1A  0E00               	movlw	0
 15434  001D1C  6E2A               	movwf	(___fladd@b+1)^0,c
 15435  001D1E  0E00               	movlw	0
 15436  001D20  6E2B               	movwf	(___fladd@b+2)^0,c
 15437  001D22  0E00               	movlw	0
 15438  001D24  6E2C               	movwf	(___fladd@b+3)^0,c
 15439  001D26  5037               	movf	___fladd@bexp^0,w,c
 15440  001D28  A4D8               	btfss	status,2,c
 15441  001D2A  D002               	goto	l10375
 15442  001D2C  0E00               	movlw	0
 15443  001D2E  6E35               	movwf	___fladd@signs^0,c
 15444  001D30                     l10375:
 15445  001D30  A037               	btfss	___fladd@bexp^0,0,c
 15446  001D32  D002               	goto	l10379
 15447  001D34  8E2B               	bsf	(___fladd@b+2)^0,7,c
 15448  001D36  D001               	goto	l10381
 15449  001D38                     l10379:
 15450  001D38  9E2B               	bcf	(___fladd@b+2)^0,7,c
 15451  001D3A                     l10381:
 15452  001D3A  90D8               	bcf	status,0,c
 15453  001D3C  3037               	rrcf	___fladd@bexp^0,w,c
 15454  001D3E  6E2C               	movwf	(___fladd@b+3)^0,c
 15455  001D40  BE35               	btfsc	___fladd@signs^0,7,c
 15456  001D42  8E2C               	bsf	(___fladd@b+3)^0,7,c
 15457  001D44  0060  F0A4  F029   	movff	___fladd@b,?___fladd
 15458  001D4A  0060  F0A8  F02A   	movff	___fladd@b+1,?___fladd+1
 15459  001D50  0060  F0AC  F02B   	movff	___fladd@b+2,?___fladd+2
 15460  001D56  0060  F0B0  F02C   	movff	___fladd@b+3,?___fladd+3
 15461  001D5C  0012               	return		;funcret
 15462  001D5E                     __end_of___fladd:
 15463                           	opt callstack 0
 15464                           
 15465 ;; *************** function _PHY_DataInd *****************
 15466 ;; Defined at:
 15467 ;;		line 116 in file "../nwk/nwk_src/nwkRx.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;  ind             1   18[COMRAM] PTR struct PHY_DataInd_t
 15470 ;;		 -> DIO0_Receive_ISR@ind(5), 
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 15473 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  1    wreg      void 
 15476 ;; Registers used:
 15477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15478 ;; Tracked objects:
 15479 ;;		On entry : 0/1
 15480 ;;		On exit  : 0/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15483 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15485 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15486 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15487 ;;Total ram usage:        6 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:    9
 15490 ;; This function calls:
 15491 ;;		_memcpy
 15492 ;;		_nwkFrameAlloc
 15493 ;; This function is called by:
 15494 ;;		_DIO0_Receive_ISR
 15495 ;; This function uses a non-reentrant model
 15496 ;;
 15497                           
 15498                           	psect	text95
 15499  004976                     __ptext95:
 15500                           	opt callstack 0
 15501  004976                     _PHY_DataInd:
 15502                           	opt callstack 17
 15503                           
 15504                           ;../nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);../nwk/nwk_src/nwkRx.
      +                          c: 117: {;../nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRx.c: 120:
      +                             if (0x88 != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 15505                           
 15506                           ;incstack = 0
 15507  004976  5013               	movf	PHY_DataInd@ind^0,w,c
 15508  004978  6ED9               	movwf	fsr2l,c
 15509  00497A  6ADA               	clrf	fsr2h,c
 15510  00497C  EE10 F001          	lfsr	1,1
 15511  004980  50DE               	movf	postinc2,w,c
 15512  004982  26E1               	addwf	fsr1l,f,c
 15513  004984  50DD               	movf	postdec2,w,c
 15514  004986  22E2               	addwfc	fsr1h,f,c
 15515  004988  0E88               	movlw	136
 15516  00498A  18E6               	xorwf	postinc1,w,c
 15517  00498C  A4D8               	btfss	status,2,c
 15518  00498E  0012               	return	
 15519  004990  5013               	movf	PHY_DataInd@ind^0,w,c
 15520  004992  6ED9               	movwf	fsr2l,c
 15521  004994  6ADA               	clrf	fsr2h,c
 15522  004996  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 15523  00499C  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 15524  0049A2  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 15525  0049A8  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 15526  0049AE  0E61               	movlw	97
 15527  0049B0  18DE               	xorwf	postinc2,w,c
 15528  0049B2  B4D8               	btfsc	status,2,c
 15529  0049B4  D013               	goto	u14650
 15530  0049B6  5013               	movf	PHY_DataInd@ind^0,w,c
 15531  0049B8  6ED9               	movwf	fsr2l,c
 15532  0049BA  6ADA               	clrf	fsr2h,c
 15533  0049BC  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 15534  0049C2  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 15535  0049C8  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 15536  0049CE  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 15537  0049D4  0E41               	movlw	65
 15538  0049D6  18DE               	xorwf	postinc2,w,c
 15539  0049D8  A4D8               	btfss	status,2,c
 15540  0049DA  0012               	return	
 15541  0049DC                     u14650:
 15542  0049DC  5013               	movf	PHY_DataInd@ind^0,w,c
 15543  0049DE  6ED9               	movwf	fsr2l,c
 15544  0049E0  6ADA               	clrf	fsr2h,c
 15545  0049E2  0E02               	movlw	2
 15546  0049E4  26D9               	addwf	fsr2l,f,c
 15547  0049E6  0E10               	movlw	16
 15548  0049E8  60DF               	cpfslt	indf2,c
 15549  0049EA  D001               	goto	l15067
 15550  0049EC  0012               	return	
 15551  0049EE                     l15067:
 15552                           
 15553                           ;../nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
 15554  0049EE  ECF0  F032         	call	_nwkFrameAlloc	;wreg free
 15555  0049F2  0060  F038  F017   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 15556  0049F8  0060  F03C  F018   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 15557  0049FE  5017               	movf	PHY_DataInd@frame^0,w,c
 15558  004A00  1018               	iorwf	(PHY_DataInd@frame+1)^0,w,c
 15559  004A02  B4D8               	btfsc	status,2,c
 15560  004A04  0012               	return	
 15561                           
 15562                           ;../nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 15563  004A06  0060  F05F  FFD9   	movff	PHY_DataInd@frame,fsr2l
 15564  004A0C  0060  F063  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 15565  004A12  0E20               	movlw	32
 15566  004A14  6EDF               	movwf	indf2,c
 15567                           
 15568                           ;../nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 15569  004A16  5013               	movf	PHY_DataInd@ind^0,w,c
 15570  004A18  6ED9               	movwf	fsr2l,c
 15571  004A1A  6ADA               	clrf	fsr2h,c
 15572  004A1C  0E02               	movlw	2
 15573  004A1E  26D9               	addwf	fsr2l,f,c
 15574  004A20  EE10 F001          	lfsr	1,1
 15575  004A24  5017               	movf	PHY_DataInd@frame^0,w,c
 15576  004A26  26E1               	addwf	fsr1l,f,c
 15577  004A28  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15578  004A2A  22E2               	addwfc	fsr1h,f,c
 15579  004A2C  006F FF7F FFE7     	movff	indf2,indf1
 15580                           
 15581                           ;../nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 15582  004A32  5013               	movf	PHY_DataInd@ind^0,w,c
 15583  004A34  6ED9               	movwf	fsr2l,c
 15584  004A36  6ADA               	clrf	fsr2h,c
 15585  004A38  0E03               	movlw	3
 15586  004A3A  26D9               	addwf	fsr2l,f,c
 15587  004A3C  EE10 F083          	lfsr	1,131
 15588  004A40  5017               	movf	PHY_DataInd@frame^0,w,c
 15589  004A42  26E1               	addwf	fsr1l,f,c
 15590  004A44  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15591  004A46  22E2               	addwfc	fsr1h,f,c
 15592  004A48  006F FF7F FFE7     	movff	indf2,indf1
 15593                           
 15594                           ;../nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 15595  004A4E  5013               	movf	PHY_DataInd@ind^0,w,c
 15596  004A50  6ED9               	movwf	fsr2l,c
 15597  004A52  6ADA               	clrf	fsr2h,c
 15598  004A54  0E04               	movlw	4
 15599  004A56  26D9               	addwf	fsr2l,f,c
 15600  004A58  EE10 F084          	lfsr	1,132
 15601  004A5C  5017               	movf	PHY_DataInd@frame^0,w,c
 15602  004A5E  26E1               	addwf	fsr1l,f,c
 15603  004A60  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 15604  004A62  22E2               	addwfc	fsr1h,f,c
 15605  004A64  006F FF7F FFE7     	movff	indf2,indf1
 15606                           
 15607                           ;../nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 15608  004A6A  0E02               	movlw	2
 15609  004A6C  2417               	addwf	PHY_DataInd@frame^0,w,c
 15610  004A6E  6E08               	movwf	memcpy@d1^0,c
 15611  004A70  0E00               	movlw	0
 15612  004A72  2018               	addwfc	(PHY_DataInd@frame+1)^0,w,c
 15613  004A74  6E09               	movwf	(memcpy@d1+1)^0,c
 15614  004A76  5013               	movf	PHY_DataInd@ind^0,w,c
 15615  004A78  6ED9               	movwf	fsr2l,c
 15616  004A7A  6ADA               	clrf	fsr2h,c
 15617  004A7C  006F FF78  F00A    	movff	postinc2,memcpy@s1
 15618  004A82  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 15619  004A88  5013               	movf	PHY_DataInd@ind^0,w,c
 15620  004A8A  6ED9               	movwf	fsr2l,c
 15621  004A8C  6ADA               	clrf	fsr2h,c
 15622  004A8E  0E02               	movlw	2
 15623  004A90  26D9               	addwf	fsr2l,f,c
 15624  004A92  50DF               	movf	indf2,w,c
 15625  004A94  6E14               	movwf	??_PHY_DataInd^0,c
 15626  004A96  5014               	movf	??_PHY_DataInd^0,w,c
 15627  004A98  6E0C               	movwf	memcpy@n^0,c
 15628  004A9A  6A0D               	clrf	(memcpy@n+1)^0,c
 15629  004A9C  ECEA  F039         	call	_memcpy	;wreg free
 15630  004AA0  0012               	return		;funcret
 15631  004AA2                     __end_of_PHY_DataInd:
 15632                           	opt callstack 0
 15633                           
 15634 ;; *************** function _NWK_TaskHandler *****************
 15635 ;; Defined at:
 15636 ;;		line 196 in file "../nwk/nwk_src/nwk.c"
 15637 ;; Parameters:    Size  Location     Type
 15638 ;;		None
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;		None
 15641 ;; Return value:  Size  Location     Type
 15642 ;;                  1    wreg      void 
 15643 ;; Registers used:
 15644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15645 ;; Tracked objects:
 15646 ;;		On entry : 2/0
 15647 ;;		On exit  : 0/0
 15648 ;;		Unchanged: 0/0
 15649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15654 ;;Total ram usage:        0 bytes
 15655 ;; Hardware stack levels used:    1
 15656 ;; Hardware stack levels required when called:   20
 15657 ;; This function calls:
 15658 ;;		_nwkDataReqTaskHandler
 15659 ;;		_nwkRxTaskHandler
 15660 ;;		_nwkTxTaskHandler
 15661 ;; This function is called by:
 15662 ;;		_SYS_TaskHandler
 15663 ;; This function uses a non-reentrant model
 15664 ;;
 15665                           
 15666                           	psect	text96
 15667  008C9C                     __ptext96:
 15668                           	opt callstack 0
 15669  008C9C                     _NWK_TaskHandler:
 15670                           	opt callstack 9
 15671                           
 15672                           ;../nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 15673                           
 15674                           ;incstack = 0
 15675  008C9C  EC4A  F033         	call	_nwkRxTaskHandler	;wreg free
 15676                           
 15677                           ; BSR set to: 1
 15678                           ;../nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 15679  008CA0  EC72  F01A         	call	_nwkTxTaskHandler	;wreg free
 15680                           
 15681                           ;../nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 15682  008CA4  EC2B  F039         	call	_nwkDataReqTaskHandler	;wreg free
 15683  008CA8  0012               	return		;funcret
 15684  008CAA                     __end_of_NWK_TaskHandler:
 15685                           	opt callstack 0
 15686                           
 15687 ;; *************** function _nwkTxTaskHandler *****************
 15688 ;; Defined at:
 15689 ;;		line 297 in file "../nwk/nwk_src/nwkTx.c"
 15690 ;; Parameters:    Size  Location     Type
 15691 ;;		None
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
 15694 ;;		 -> nwkFrameFrames(685), NULL(0), 
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  1    wreg      void 
 15697 ;; Registers used:
 15698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15699 ;; Tracked objects:
 15700 ;;		On entry : 3F/1
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15707 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15708 ;;Total ram usage:        4 bytes
 15709 ;; Hardware stack levels used:    1
 15710 ;; Hardware stack levels required when called:   13
 15711 ;; This function calls:
 15712 ;;		_PHY_DataReq
 15713 ;;		_SYS_TimerStart
 15714 ;;		_nwkDataReqTxConf
 15715 ;;		_nwkFrameFree
 15716 ;;		_nwkFrameNext
 15717 ;;		_nwkRouteFrameSent
 15718 ;; This function is called by:
 15719 ;;		_NWK_TaskHandler
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723                           	psect	text97
 15724  0034E4                     __ptext97:
 15725                           	opt callstack 0
 15726  0034E4                     _nwkTxTaskHandler:
 15727                           	opt callstack 15
 15728                           
 15729                           ; BSR set to: 1
 15730                           ;../nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
 15731                           
 15732                           ;incstack = 0
 15733  0034E4  0E00               	movlw	0
 15734  0034E6  6E16               	movwf	nwkTxTaskHandler@frame^0,c
 15735  0034E8  0E00               	movlw	0
 15736  0034EA  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
 15737                           
 15738                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15739  0034EC  D0E0               	goto	l16341
 15740  0034EE                     l16295:
 15741                           
 15742                           ;../nwk/nwk_src/nwkTx.c: 313:       {;../nwk/nwk_src/nwkTx.c: 314:         if (frame->tx
      +                          .timeout > 0)
 15743  0034EE  EE20 F084          	lfsr	2,132
 15744  0034F2  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15745  0034F4  26D9               	addwf	fsr2l,f,c
 15746  0034F6  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15747  0034F8  22DA               	addwfc	fsr2h,f,c
 15748  0034FA  50DE               	movf	postinc2,w,c
 15749  0034FC  10DE               	iorwf	postinc2,w,c
 15750  0034FE  B4D8               	btfsc	status,2,c
 15751  003500  D00F               	goto	l16301
 15752                           
 15753                           ;../nwk/nwk_src/nwkTx.c: 315:         {;../nwk/nwk_src/nwkTx.c: 316:           frame->st
      +                          ate = NWK_TX_STATE_WAIT_DELAY;
 15754  003502  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15755  003508  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15756  00350E  0E11               	movlw	17
 15757  003510  6EDF               	movwf	indf2,c
 15758                           
 15759                           ;../nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 15760  003512  0E95               	movlw	low _nwkTxDelayTimer
 15761  003514  6E10               	movwf	SYS_TimerStart@timer^0,c
 15762  003516  0E01               	movlw	high _nwkTxDelayTimer
 15763  003518  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 15764  00351A  ECBC  F043         	call	_SYS_TimerStart	;wreg free
 15765                           
 15766                           ;../nwk/nwk_src/nwkTx.c: 318:         }
 15767  00351E  D0C7               	goto	l16341
 15768  003520                     l16301:
 15769                           
 15770                           ;../nwk/nwk_src/nwkTx.c: 320:         {;../nwk/nwk_src/nwkTx.c: 321:           frame->st
      +                          ate = NWK_TX_STATE_SEND;
 15771  003520  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15772  003526  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15773  00352C  0E13               	movlw	19
 15774  00352E  D065               	goto	L13
 15775  003530                     l16303:
 15776                           
 15777                           ;../nwk/nwk_src/nwkTx.c: 326:       {;../nwk/nwk_src/nwkTx.c: 327:         if (((void*)0
      +                          ) == nwkTxPhyActiveFrame)
 15778  003530  0101               	movlb	1	; () banked
 15779  003532  515B               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 15780  003534  115C               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 15781  003536  A4D8               	btfss	status,2,c
 15782  003538  D0BA               	goto	l16341
 15783                           
 15784                           ; BSR set to: 1
 15785                           ;../nwk/nwk_src/nwkTx.c: 328:         {;../nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyA
      +                          ctiveFrame = frame;
 15786  00353A  0060  F058  F15B   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 15787  003540  0060  F05C  F15C   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 15788                           
 15789                           ; BSR set to: 1
 15790                           ;../nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 15791  003546  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15792  00354C  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15793  003552  0E14               	movlw	20
 15794  003554  6EDF               	movwf	indf2,c
 15795                           
 15796                           ; BSR set to: 1
 15797                           ;../nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 15798  003556  0E02               	movlw	2
 15799  003558  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
 15800  00355A  6E11               	movwf	PHY_DataReq@data^0,c
 15801  00355C  0E00               	movlw	0
 15802  00355E  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
 15803  003560  6E12               	movwf	(PHY_DataReq@data+1)^0,c
 15804  003562  EE20 F001          	lfsr	2,1
 15805  003566  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15806  003568  26D9               	addwf	fsr2l,f,c
 15807  00356A  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15808  00356C  22DA               	addwfc	fsr2h,f,c
 15809  00356E  50DF               	movf	indf2,w,c
 15810  003570  6E13               	movwf	PHY_DataReq@size^0,c
 15811  003572  ECE5  F03C         	call	_PHY_DataReq	;wreg free
 15812                           
 15813                           ; BSR set to: 1
 15814                           ;../nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 15815  003576  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 15816  003578  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 15817  00357A  D099               	goto	l16341
 15818  00357C                     l16313:
 15819                           
 15820                           ;../nwk/nwk_src/nwkTx.c: 340:       {;../nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCE
      +                          SS_STATUS == frame->tx.status)
 15821  00357C  EE20 F083          	lfsr	2,131
 15822  003580  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15823  003582  26D9               	addwf	fsr2l,f,c
 15824  003584  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15825  003586  22DA               	addwfc	fsr2h,f,c
 15826  003588  50DF               	movf	indf2,w,c
 15827  00358A  A4D8               	btfss	status,2,c
 15828  00358C  D02F               	goto	l16325
 15829                           
 15830                           ;../nwk/nwk_src/nwkTx.c: 342:         {;../nwk/nwk_src/nwkTx.c: 343:           if (frame
      +                          ->header.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 15831  00358E  EE20 F00D          	lfsr	2,13
 15832  003592  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15833  003594  26D9               	addwf	fsr2l,f,c
 15834  003596  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15835  003598  22DA               	addwfc	fsr2h,f,c
 15836  00359A  0101               	movlb	1	; () banked
 15837  00359C  5100               	movf	_nwkIb& (0+255),w,b
 15838  00359E  18DE               	xorwf	postinc2,w,c
 15839  0035A0  E125               	bnz	l16327
 15840  0035A2  5101               	movf	(_nwkIb+1)& (0+255),w,b
 15841  0035A4  18DE               	xorwf	postinc2,w,c
 15842  0035A6  A4D8               	btfss	status,2,c
 15843  0035A8  D021               	goto	l16325
 15844                           
 15845                           ; BSR set to: 1
 15846  0035AA  EE20 F00B          	lfsr	2,11
 15847  0035AE  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15848  0035B0  26D9               	addwf	fsr2l,f,c
 15849  0035B2  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15850  0035B4  22DA               	addwfc	fsr2h,f,c
 15851  0035B6  A0DF               	btfss	indf2,0,c
 15852  0035B8  D019               	goto	l16325
 15853                           
 15854                           ; BSR set to: 1
 15855                           ;../nwk/nwk_src/nwkTx.c: 344:           {;../nwk/nwk_src/nwkTx.c: 345:             frame
      +                          ->state = NWK_TX_STATE_WAIT_ACK;
 15856  0035BA  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15857  0035C0  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15858  0035C6  0E16               	movlw	22
 15859  0035C8  6EDF               	movwf	indf2,c
 15860                           
 15861                           ; BSR set to: 1
 15862                           ;../nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
 15863  0035CA  EE20 F084          	lfsr	2,132
 15864  0035CE  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15865  0035D0  26D9               	addwf	fsr2l,f,c
 15866  0035D2  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15867  0035D4  22DA               	addwfc	fsr2h,f,c
 15868  0035D6  0E06               	movlw	6
 15869  0035D8  6EDE               	movwf	postinc2,c
 15870  0035DA  0E00               	movlw	0
 15871  0035DC  6EDD               	movwf	postdec2,c
 15872                           
 15873                           ; BSR set to: 1
 15874                           ;../nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 15875  0035DE  0EA2               	movlw	low _nwkTxAckWaitTimer
 15876  0035E0  6E10               	movwf	SYS_TimerStart@timer^0,c
 15877  0035E2  0E01               	movlw	high _nwkTxAckWaitTimer
 15878  0035E4  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 15879  0035E6  ECBC  F043         	call	_SYS_TimerStart	;wreg free
 15880                           
 15881                           ;../nwk/nwk_src/nwkTx.c: 348:           }
 15882  0035EA  D061               	goto	l16341
 15883  0035EC                     l16325:
 15884  0035EC                     l16327:
 15885                           
 15886                           ;../nwk/nwk_src/nwkTx.c: 355:         {;../nwk/nwk_src/nwkTx.c: 356:           frame->st
      +                          ate = NWK_TX_STATE_CONFIRM;
 15887  0035EC  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15888  0035F2  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15889  0035F8  0E17               	movlw	23
 15890  0035FA                     L13:
 15891  0035FA  6EDF               	movwf	indf2,c
 15892  0035FC  D058               	goto	l16341
 15893  0035FE                     l16329:
 15894                           
 15895                           ;../nwk/nwk_src/nwkTx.c: 364:       {;../nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrame
      +                          Sent(frame);
 15896  0035FE  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 15897  003604  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 15898  00360A  EC27  F02B         	call	_nwkRouteFrameSent	;wreg free
 15899                           
 15900                           ;../nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
 15901  00360E  EE20 F087          	lfsr	2,135
 15902  003612  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15903  003614  26D9               	addwf	fsr2l,f,c
 15904  003616  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15905  003618  22DA               	addwfc	fsr2h,f,c
 15906  00361A  50DE               	movf	postinc2,w,c
 15907  00361C  10DE               	iorwf	postinc2,w,c
 15908  00361E  A4D8               	btfss	status,2,c
 15909  003620  D009               	goto	l16335
 15910                           
 15911                           ;../nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 15912  003622  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 15913  003628  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 15914  00362E  EC4D  F045         	call	_nwkFrameFree	;wreg free
 15915  003632  D03D               	goto	l16341
 15916  003634                     l16335:
 15917                           
 15918                           ;../nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 15919  003634  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 15920  00363A  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 15921  003640  EE20 F087          	lfsr	2,135
 15922  003644  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15923  003646  26D9               	addwf	fsr2l,f,c
 15924  003648  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 15925  00364A  22DA               	addwfc	fsr2h,f,c
 15926  00364C  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
 15927  003652  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
 15928  003658  D801               	call	u16468
 15929  00365A  D029               	goto	l16341
 15930  00365C                     u16468:
 15931  00365C  0005               	push	
 15932  00365E  6EFA               	movwf	pclath,c
 15933  003660  5014               	movf	??_nwkTxTaskHandler^0,w,c
 15934  003662  6EFD               	movwf	tosl,c
 15935  003664  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 15936  003666  6EFE               	movwf	tosh,c
 15937  003668  6AFF               	clrf	tosu,c
 15938  00366A  50FA               	movf	pclath,w,c
 15939  00366C  0012               	return		;indir
 15940  00366E                     l16339:
 15941  00366E  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 15942  003674  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 15943  00367A  50DF               	movf	indf2,w,c
 15944  00367C  6E14               	movwf	??_nwkTxTaskHandler^0,c
 15945  00367E  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
 15946                           
 15947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15948                           ; Switch size 1, requested type "simple"
 15949                           ; Number of cases is 1, Range of values is 0 to 0
 15950                           ; switch strategies available:
 15951                           ; Name         Instructions Cycles
 15952                           ; simple_byte            4     3 (average)
 15953                           ;	Chosen strategy is simple_byte
 15954  003680  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 15955  003682  0A00               	xorlw	0	; case 0
 15956  003684  A4D8               	btfss	status,2,c
 15957  003686  D013               	goto	l16341
 15958                           
 15959                           ; Switch size 1, requested type "simple"
 15960                           ; Number of cases is 6, Range of values is 18 to 23
 15961                           ; switch strategies available:
 15962                           ; Name         Instructions Cycles
 15963                           ; simple_byte           19    10 (average)
 15964                           ;	Chosen strategy is simple_byte
 15965  003688  5014               	movf	??_nwkTxTaskHandler^0,w,c
 15966  00368A  0A12               	xorlw	18	; case 18
 15967  00368C  B4D8               	btfsc	status,2,c
 15968  00368E  D72F               	goto	l16295
 15969  003690  0A01               	xorlw	1	; case 19
 15970  003692  B4D8               	btfsc	status,2,c
 15971  003694  D74D               	goto	l16303
 15972  003696  0A07               	xorlw	7	; case 20
 15973  003698  B4D8               	btfsc	status,2,c
 15974  00369A  D009               	goto	l16341
 15975  00369C  0A01               	xorlw	1	; case 21
 15976  00369E  B4D8               	btfsc	status,2,c
 15977  0036A0  D76D               	goto	l16313
 15978  0036A2  0A03               	xorlw	3	; case 22
 15979  0036A4  B4D8               	btfsc	status,2,c
 15980  0036A6  D003               	goto	l16341
 15981  0036A8  0A01               	xorlw	1	; case 23
 15982  0036AA  B4D8               	btfsc	status,2,c
 15983  0036AC  D7A8               	goto	l16329
 15984  0036AE                     l16341:
 15985                           
 15986                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 15987  0036AE  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 15988  0036B4  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 15989  0036BA  EC98  F037         	call	_nwkFrameNext	;wreg free
 15990  0036BE  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 15991  0036C4  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 15992  0036CA  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 15993  0036CC  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
 15994  0036CE  B4D8               	btfsc	status,2,c
 15995  0036D0  0012               	return	
 15996  0036D2  D7CD               	goto	l16339
 15997  0036D4                     __end_of_nwkTxTaskHandler:
 15998                           	opt callstack 0
 15999                           
 16000 ;; *************** function _nwkRouteFrameSent *****************
 16001 ;; Defined at:
 16002 ;;		line 236 in file "../nwk/nwk_src/nwkRoute.c"
 16003 ;; Parameters:    Size  Location     Type
 16004 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
 16005 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16006 ;; Auto vars:     Size  Location     Type
 16007 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
 16008 ;;		 -> nwkRouteTable(70), NULL(0), 
 16009 ;; Return value:  Size  Location     Type
 16010 ;;                  1    wreg      void 
 16011 ;; Registers used:
 16012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16013 ;; Tracked objects:
 16014 ;;		On entry : 0/1
 16015 ;;		On exit  : 0/0
 16016 ;;		Unchanged: 0/0
 16017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16021 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16022 ;;Total ram usage:        6 bytes
 16023 ;; Hardware stack levels used:    1
 16024 ;; Hardware stack levels required when called:    8
 16025 ;; This function calls:
 16026 ;;		_NWK_RouteFindEntry
 16027 ;;		_NWK_RouteFreeEntry
 16028 ;;		_nwkRouteNormalizeRanks
 16029 ;; This function is called by:
 16030 ;;		_nwkTxTaskHandler
 16031 ;; This function uses a non-reentrant model
 16032 ;;
 16033                           
 16034                           	psect	text98
 16035  00564E                     __ptext98:
 16036                           	opt callstack 0
 16037  00564E                     _nwkRouteFrameSent:
 16038                           	opt callstack 19
 16039                           
 16040                           ;../nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 237: {;../nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;../
      +                          nwk/nwk_src/nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
 16041                           
 16042                           ;incstack = 0
 16043  00564E  EE20 F00F          	lfsr	2,15
 16044  005652  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16045  005654  26D9               	addwf	fsr2l,f,c
 16046  005656  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16047  005658  22DA               	addwfc	fsr2h,f,c
 16048  00565A  28DE               	incf	postinc2,w,c
 16049  00565C  E103               	bnz	l15629
 16050  00565E  28DE               	incf	postinc2,w,c
 16051  005660  B4D8               	btfsc	status,2,c
 16052  005662  0012               	return	
 16053  005664                     l15629:
 16054                           
 16055                           ;../nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, 
      +                          frame->header.nwkFcf.multicast);
 16056  005664  EE20 F00F          	lfsr	2,15
 16057  005668  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16058  00566A  26D9               	addwf	fsr2l,f,c
 16059  00566C  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16060  00566E  22DA               	addwfc	fsr2h,f,c
 16061  005670  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 16062  005676  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 16063  00567C  EE20 F00B          	lfsr	2,11
 16064  005680  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16065  005682  26D9               	addwf	fsr2l,f,c
 16066  005684  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16067  005686  22DA               	addwfc	fsr2h,f,c
 16068  005688  0E00               	movlw	0
 16069  00568A  B6DF               	btfsc	indf2,3,c
 16070  00568C  0E01               	movlw	1
 16071  00568E  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 16072  005690  EC32  F03B         	call	_NWK_RouteFindEntry	;wreg free
 16073  005694  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 16074  00569A  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 16075                           
 16076                           ;../nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
 16077  0056A0  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 16078  0056A2  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
 16079  0056A4  B4D8               	btfsc	status,2,c
 16080  0056A6  0012               	return	
 16081  0056A8  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16082  0056AE  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16083  0056B4  B0DF               	btfsc	indf2,0,c
 16084  0056B6  0012               	return	
 16085                           
 16086                           ;../nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 16087  0056B8  EE20 F083          	lfsr	2,131
 16088  0056BC  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 16089  0056BE  26D9               	addwf	fsr2l,f,c
 16090  0056C0  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 16091  0056C2  22DA               	addwfc	fsr2h,f,c
 16092  0056C4  50DF               	movf	indf2,w,c
 16093  0056C6  A4D8               	btfss	status,2,c
 16094  0056C8  D017               	goto	l15643
 16095                           
 16096                           ;../nwk/nwk_src/nwkRoute.c: 249:   {;../nwk/nwk_src/nwkRoute.c: 250:     entry->score = 
      +                          3;
 16097  0056CA  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16098  0056D0  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16099  0056D6  50DF               	movf	indf2,w,c
 16100  0056D8  0B0F               	andlw	-241
 16101  0056DA  0930               	iorlw	48
 16102  0056DC  6EDF               	movwf	indf2,c
 16103                           
 16104                           ;../nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
 16105  0056DE  EE20 F005          	lfsr	2,5
 16106  0056E2  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 16107  0056E4  26D9               	addwf	fsr2l,f,c
 16108  0056E6  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
 16109  0056E8  22DA               	addwfc	fsr2h,f,c
 16110  0056EA  2ADF               	incf	indf2,f,c
 16111  0056EC  28DE               	incf	postinc2,w,c
 16112  0056EE  A4D8               	btfss	status,2,c
 16113  0056F0  0012               	return	
 16114                           
 16115                           ;../nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
 16116  0056F2  ECC1  F041         	call	_nwkRouteNormalizeRanks	;wreg free
 16117  0056F6  0012               	return	
 16118  0056F8                     l15643:
 16119                           
 16120                           ;../nwk/nwk_src/nwkRoute.c: 256:   {;../nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entr
      +                          y->score)
 16121  0056F8  0E01               	movlw	1
 16122  0056FA  6E0A               	movwf	??_nwkRouteFrameSent^0,c
 16123  0056FC  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 16124  005702  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 16125  005708  38DF               	swapf	indf2,w,c
 16126  00570A  0B0F               	andlw	15
 16127  00570C  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
 16128  00570E  500A               	movf	??_nwkRouteFrameSent^0,w,c
 16129  005710  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
 16130  005712  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
 16131  005714  50DF               	movf	indf2,w,c
 16132  005716  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 16133  005718  0B0F               	andlw	-241
 16134  00571A  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 16135  00571C  6EDF               	movwf	indf2,c
 16136  00571E  38DF               	swapf	indf2,w,c
 16137  005720  0B0F               	andlw	15
 16138  005722  0900               	iorlw	0
 16139  005724  A4D8               	btfss	status,2,c
 16140  005726  0012               	return	
 16141                           
 16142                           ;../nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
 16143  005728  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 16144  00572E  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 16145  005734  EC6A  F042         	call	_NWK_RouteFreeEntry	;wreg free
 16146  005738  0012               	return		;funcret
 16147  00573A                     __end_of_nwkRouteFrameSent:
 16148                           	opt callstack 0
 16149                           
 16150 ;; *************** function _nwkRouteNormalizeRanks *****************
 16151 ;; Defined at:
 16152 ;;		line 358 in file "../nwk/nwk_src/nwkRoute.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;		None
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;  i               1    2[COMRAM] unsigned char 
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  1    wreg      void 
 16159 ;; Registers used:
 16160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/1
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16170 ;;Total ram usage:        2 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:    7
 16173 ;; This function calls:
 16174 ;;		Nothing
 16175 ;; This function is called by:
 16176 ;;		_nwkRouteFrameSent
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           	psect	text99
 16181  008382                     __ptext99:
 16182                           	opt callstack 0
 16183  008382                     _nwkRouteNormalizeRanks:
 16184                           	opt callstack 19
 16185                           
 16186                           ;../nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
 16187                           
 16188                           ;incstack = 0
 16189  008382  0E00               	movlw	0
 16190  008384  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
 16191  008386                     l10759:
 16192                           
 16193                           ;../nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1
      +                          ) + 1;
 16194  008386  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 16195  008388  0D07               	mullw	7
 16196  00838A  0E89               	movlw	low (_nwkRouteTable+5)
 16197  00838C  24F3               	addwf	243,w,c
 16198  00838E  6ED9               	movwf	fsr2l,c
 16199  008390  0E02               	movlw	high (_nwkRouteTable+5)
 16200  008392  20F4               	addwfc	prodh,w,c
 16201  008394  6EDA               	movwf	fsr2h,c
 16202  008396  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 16203  008398  0D07               	mullw	7
 16204  00839A  0E89               	movlw	low (_nwkRouteTable+5)
 16205  00839C  24F3               	addwf	243,w,c
 16206  00839E  6EE1               	movwf	fsr1l,c
 16207  0083A0  0E02               	movlw	high (_nwkRouteTable+5)
 16208  0083A2  20F4               	addwfc	prodh,w,c
 16209  0083A4  6EE2               	movwf	fsr1h,c
 16210  0083A6  50E7               	movf	indf1,w,c
 16211  0083A8  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
 16212  0083AA  90D8               	bcf	status,0,c
 16213  0083AC  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
 16214  0083AE  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
 16215  0083B0  6EDF               	movwf	indf2,c
 16216  0083B2  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
 16217  0083B4  0E09               	movlw	9
 16218  0083B6  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
 16219  0083B8  D7E6               	goto	l10759
 16220  0083BA  0012               	return	
 16221  0083BC                     __end_of_nwkRouteNormalizeRanks:
 16222                           	opt callstack 0
 16223                           
 16224 ;; *************** function _nwkDataReqTxConf *****************
 16225 ;; Defined at:
 16226 ;;		line 168 in file "../nwk/nwk_src/nwkDataReq.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
 16229 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16230 ;; Auto vars:     Size  Location     Type
 16231 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
 16232 ;;		 -> NULL(0), tx_buffer(524), 
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  1    wreg      void 
 16235 ;; Registers used:
 16236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/1
 16239 ;;		On exit  : 3F/1
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16245 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16246 ;;Total ram usage:        6 bytes
 16247 ;; Hardware stack levels used:    1
 16248 ;; Hardware stack levels required when called:    8
 16249 ;; This function calls:
 16250 ;;		_nwkFrameFree
 16251 ;; This function is called by:
 16252 ;;		_nwkDataReqSendFrame
 16253 ;;		_nwkTxTaskHandler
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text100
 16258  00694A                     __ptext100:
 16259                           	opt callstack 0
 16260  00694A                     _nwkDataReqTxConf:
 16261                           	opt callstack 19
 16262                           
 16263                           ;../nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkDataReq.c: 169: {;../nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *r
      +                          eq = nwkDataReqQueue; req; req = req->next)
 16264                           
 16265                           ;incstack = 0
 16266  00694A  0060  F388  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 16267  006950  0060  F38C  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 16268  006956  D040               	goto	l15621
 16269  006958                     l15613:
 16270                           
 16271                           ;../nwk/nwk_src/nwkDataReq.c: 171:   {;../nwk/nwk_src/nwkDataReq.c: 172:     if (req->fr
      +                          ame == frame)
 16272  006958  EE20 F002          	lfsr	2,2
 16273  00695C  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16274  00695E  26D9               	addwf	fsr2l,f,c
 16275  006960  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16276  006962  22DA               	addwfc	fsr2h,f,c
 16277  006964  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16278  006966  18DE               	xorwf	postinc2,w,c
 16279  006968  E12B               	bnz	l15619
 16280  00696A  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16281  00696C  18DE               	xorwf	postinc2,w,c
 16282  00696E  A4D8               	btfss	status,2,c
 16283  006970  D027               	goto	l15619
 16284                           
 16285                           ;../nwk/nwk_src/nwkDataReq.c: 173:     {;../nwk/nwk_src/nwkDataReq.c: 174:       req->st
      +                          atus = frame->tx.status;
 16286  006972  EE20 F083          	lfsr	2,131
 16287  006976  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16288  006978  26D9               	addwf	fsr2l,f,c
 16289  00697A  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16290  00697C  22DA               	addwfc	fsr2h,f,c
 16291  00697E  EE10 F011          	lfsr	1,17
 16292  006982  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16293  006984  26E1               	addwf	fsr1l,f,c
 16294  006986  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16295  006988  22E2               	addwfc	fsr1h,f,c
 16296  00698A  006F FF7F FFE7     	movff	indf2,indf1
 16297                           
 16298                           ;../nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
 16299  006990  EE20 F086          	lfsr	2,134
 16300  006994  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 16301  006996  26D9               	addwf	fsr2l,f,c
 16302  006998  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 16303  00699A  22DA               	addwfc	fsr2h,f,c
 16304  00699C  EE10 F012          	lfsr	1,18
 16305  0069A0  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16306  0069A2  26E1               	addwf	fsr1l,f,c
 16307  0069A4  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16308  0069A6  22E2               	addwfc	fsr1h,f,c
 16309  0069A8  006F FF7F FFE7     	movff	indf2,indf1
 16310                           
 16311                           ;../nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 16312  0069AE  EE20 F004          	lfsr	2,4
 16313  0069B2  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16314  0069B4  26D9               	addwf	fsr2l,f,c
 16315  0069B6  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 16316  0069B8  22DA               	addwfc	fsr2h,f,c
 16317  0069BA  0E02               	movlw	2
 16318  0069BC  6EDF               	movwf	indf2,c
 16319                           
 16320                           ;../nwk/nwk_src/nwkDataReq.c: 177:       break;
 16321  0069BE  D010               	goto	u15610
 16322  0069C0                     l15619:
 16323                           
 16324                           ;../nwk/nwk_src/nwkDataReq.c: 179:   }
 16325  0069C0  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 16326  0069C6  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 16327  0069CC  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
 16328  0069D2  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
 16329  0069D8                     l15621:
 16330  0069D8  5008               	movf	nwkDataReqTxConf@req^0,w,c
 16331  0069DA  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
 16332  0069DC  A4D8               	btfss	status,2,c
 16333  0069DE  D7BC               	goto	l15613
 16334  0069E0                     u15610:
 16335                           
 16336                           ;../nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
 16337  0069E0  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 16338  0069E6  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 16339  0069EC  EC4D  F045         	call	_nwkFrameFree	;wreg free
 16340                           
 16341                           ; BSR set to: 1
 16342  0069F0  0012               	return		;funcret
 16343  0069F2                     __end_of_nwkDataReqTxConf:
 16344                           	opt callstack 0
 16345                           
 16346 ;; *************** function _PHY_DataReq *****************
 16347 ;; Defined at:
 16348 ;;		line 842 in file "../phy/sx1216/phy_src/phy.c"
 16349 ;; Parameters:    Size  Location     Type
 16350 ;;  data            2   16[COMRAM] PTR unsigned char 
 16351 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16352 ;;  size            1   18[COMRAM] unsigned char 
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;		None
 16355 ;; Return value:  Size  Location     Type
 16356 ;;                  1    wreg      void 
 16357 ;; Registers used:
 16358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16359 ;; Tracked objects:
 16360 ;;		On entry : 3F/1
 16361 ;;		On exit  : 3F/1
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16364 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16367 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16368 ;;Total ram usage:        3 bytes
 16369 ;; Hardware stack levels used:    1
 16370 ;; Hardware stack levels required when called:   12
 16371 ;; This function calls:
 16372 ;;		_SPI1_ExchangeByte
 16373 ;;		_SPI1_WriteBlock
 16374 ;;		_SX1276Write
 16375 ;;		_explicitHeaderMode
 16376 ;;		_idle
 16377 ;; This function is called by:
 16378 ;;		_nwkTxTaskHandler
 16379 ;; This function uses a non-reentrant model
 16380 ;;
 16381                           
 16382                           	psect	text101
 16383  0079CA                     __ptext101:
 16384                           	opt callstack 0
 16385  0079CA                     _PHY_DataReq:
 16386                           	opt callstack 15
 16387                           
 16388                           ; BSR set to: 1
 16389                           ;../phy/sx1216/phy_src/phy.c: 843:     idle();
 16390                           
 16391                           ; BSR set to: 1
 16392                           ;incstack = 0
 16393  0079CA  EC86  F046         	call	_idle	;wreg free
 16394                           
 16395                           ;../phy/sx1216/phy_src/phy.c: 844:     explicitHeaderMode();
 16396  0079CE  EC9A  F045         	call	_explicitHeaderMode	;wreg free
 16397                           
 16398                           ;../phy/sx1216/phy_src/phy.c: 846:     SX1276Write(0x0E, 0x0);
 16399  0079D2  0E00               	movlw	0
 16400  0079D4  6E0F               	movwf	SX1276Write@data^0,c
 16401  0079D6  0E0E               	movlw	14
 16402  0079D8  ECFC  F045         	call	_SX1276Write
 16403                           
 16404                           ;../phy/sx1216/phy_src/phy.c: 847:     SX1276Write(0x0D, 0x00);
 16405  0079DC  0E00               	movlw	0
 16406  0079DE  6E0F               	movwf	SX1276Write@data^0,c
 16407  0079E0  0E0D               	movlw	13
 16408  0079E2  ECFC  F045         	call	_SX1276Write
 16409                           
 16410                           ;../phy/sx1216/phy_src/phy.c: 848:     SX1276Write(0x22, size);
 16411  0079E6  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
 16412  0079EC  0E22               	movlw	34
 16413  0079EE  ECFC  F045         	call	_SX1276Write
 16414                           
 16415                           ; BSR set to: 61
 16416  0079F2  9CBC               	bcf	188,6,c	;volatile
 16417                           
 16418                           ; BSR set to: 61
 16419                           ;../phy/sx1216/phy_src/phy.c: 851:     SPI1_ExchangeByte(0x00 | 0x80);
 16420  0079F4  0E80               	movlw	128
 16421  0079F6  EC74  F045         	call	_SPI1_ExchangeByte
 16422                           
 16423                           ; BSR set to: 61
 16424                           ;../phy/sx1216/phy_src/phy.c: 852:     SPI1_WriteBlock(data,size);
 16425  0079FA  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
 16426  007A00  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
 16427  007A06  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
 16428  007A0C  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 16429  007A0E  ECA0  F042         	call	_SPI1_WriteBlock	;wreg free
 16430                           
 16431                           ; BSR set to: 61
 16432  007A12  8CBC               	bsf	188,6,c	;volatile
 16433                           
 16434                           ; BSR set to: 61
 16435                           ;../phy/sx1216/phy_src/phy.c: 854:     SX1276Write(0x01,
 16436  007A14  0E83               	movlw	131
 16437  007A16  6E0F               	movwf	SX1276Write@data^0,c
 16438  007A18  0E01               	movlw	1
 16439  007A1A  ECFC  F045         	call	_SX1276Write
 16440                           
 16441                           ; BSR set to: 61
 16442                           ;../phy/sx1216/phy_src/phy.c: 856:     radio_state_var = START_TX;
 16443  007A1E  0E06               	movlw	6
 16444  007A20  0101               	movlb	1	; () banked
 16445  007A22  6F64               	movwf	_radio_state_var& (0+255),b
 16446                           
 16447                           ; BSR set to: 1
 16448  007A24  0012               	return		;funcret
 16449  007A26                     __end_of_PHY_DataReq:
 16450                           	opt callstack 0
 16451                           
 16452 ;; *************** function _idle *****************
 16453 ;; Defined at:
 16454 ;;		line 116 in file "../phy/sx1216/phy_src/phy.c"
 16455 ;; Parameters:    Size  Location     Type
 16456 ;;		None
 16457 ;; Auto vars:     Size  Location     Type
 16458 ;;		None
 16459 ;; Return value:  Size  Location     Type
 16460 ;;                  1    wreg      void 
 16461 ;; Registers used:
 16462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16463 ;; Tracked objects:
 16464 ;;		On entry : 3/3D
 16465 ;;		On exit  : 3F/3D
 16466 ;;		Unchanged: 0/0
 16467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16472 ;;Total ram usage:        0 bytes
 16473 ;; Hardware stack levels used:    1
 16474 ;; Hardware stack levels required when called:   11
 16475 ;; This function calls:
 16476 ;;		_SX1276Write
 16477 ;; This function is called by:
 16478 ;;		_start_radio_cad
 16479 ;;		_PHY_DataReq
 16480 ;; This function uses a non-reentrant model
 16481 ;;
 16482                           
 16483                           	psect	text102
 16484  008D0C                     __ptext102:
 16485                           	opt callstack 0
 16486  008D0C                     _idle:
 16487                           	opt callstack 14
 16488                           
 16489                           ;../phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 16490                           
 16491                           ; BSR set to: 1
 16492                           ;incstack = 0
 16493  008D0C  0E81               	movlw	129
 16494  008D0E  6E0F               	movwf	SX1276Write@data^0,c
 16495  008D10  0E01               	movlw	1
 16496  008D12  ECFC  F045         	call	_SX1276Write
 16497                           
 16498                           ; BSR set to: 61
 16499  008D16  0012               	return		;funcret
 16500  008D18                     __end_of_idle:
 16501                           	opt callstack 0
 16502                           
 16503 ;; *************** function _nwkRxTaskHandler *****************
 16504 ;; Defined at:
 16505 ;;		line 483 in file "../nwk/nwk_src/nwkRx.c"
 16506 ;; Parameters:    Size  Location     Type
 16507 ;;		None
 16508 ;; Auto vars:     Size  Location     Type
 16509 ;;  frame           2    2[BANK1 ] PTR struct NwkFrame_t
 16510 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16511 ;; Return value:  Size  Location     Type
 16512 ;;                  1    wreg      void 
 16513 ;; Registers used:
 16514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16515 ;; Tracked objects:
 16516 ;;		On entry : 2/0
 16517 ;;		On exit  : 3F/1
 16518 ;;		Unchanged: 0/0
 16519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16521 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16522 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16523 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16524 ;;Total ram usage:        4 bytes
 16525 ;; Hardware stack levels used:    1
 16526 ;; Hardware stack levels required when called:   19
 16527 ;; This function calls:
 16528 ;;		_nwkFrameFree
 16529 ;;		_nwkFrameNext
 16530 ;;		_nwkRouteFrame
 16531 ;;		_nwkRxHandleIndication
 16532 ;;		_nwkRxHandleReceivedFrame
 16533 ;; This function is called by:
 16534 ;;		_NWK_TaskHandler
 16535 ;; This function uses a non-reentrant model
 16536 ;;
 16537                           
 16538                           	psect	text103
 16539  006694                     __ptext103:
 16540                           	opt callstack 0
 16541  006694                     _nwkRxTaskHandler:
 16542                           	opt callstack 9
 16543                           
 16544                           ;../nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
 16545                           
 16546                           ; BSR set to: 61
 16547                           ;incstack = 0
 16548  006694  0E00               	movlw	0
 16549  006696  0101               	movlb	1	; () banked
 16550  006698  6FFE               	movwf	nwkRxTaskHandler@frame& (0+255),b
 16551  00669A  0E00               	movlw	0
 16552  00669C  6FFF               	movwf	(nwkRxTaskHandler@frame+1)& (0+255),b
 16553                           
 16554                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 16555  00669E  D03E               	goto	l16285
 16556  0066A0                     l16273:
 16557                           
 16558                           ; BSR set to: 1
 16559                           ;../nwk/nwk_src/nwkRx.c: 492:       {;../nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleRe
      +                          ceivedFrame(frame);
 16560  0066A0  0060  F7F8  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 16561  0066A6  0060  F7FC  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 16562  0066AC  EC54  F00B         	call	_nwkRxHandleReceivedFrame	;wreg free
 16563                           
 16564                           ;../nwk/nwk_src/nwkRx.c: 494:       } break;
 16565  0066B0  D035               	goto	l16285
 16566  0066B2                     l16275:
 16567                           
 16568                           ; BSR set to: 1
 16569                           ;../nwk/nwk_src/nwkRx.c: 504:       {;../nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIn
      +                          dication(frame);
 16570  0066B2  0060  F7F8  F0D5   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 16571  0066B8  0060  F7FC  F0D6   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 16572  0066BE  ECE0  F02F         	call	_nwkRxHandleIndication	;wreg free
 16573                           
 16574                           ;../nwk/nwk_src/nwkRx.c: 506:       } break;
 16575  0066C2  D02C               	goto	l16285
 16576  0066C4                     l16277:
 16577                           
 16578                           ; BSR set to: 1
 16579                           ;../nwk/nwk_src/nwkRx.c: 510:       {;../nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame
      +                          (frame);
 16580  0066C4  0060  F7F8  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 16581  0066CA  0060  F7FC  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 16582  0066D0  ECA5  F02E         	call	_nwkRouteFrame	;wreg free
 16583                           
 16584                           ;../nwk/nwk_src/nwkRx.c: 512:       } break;
 16585  0066D4  D023               	goto	l16285
 16586  0066D6                     l16279:
 16587                           
 16588                           ; BSR set to: 1
 16589                           ;../nwk/nwk_src/nwkRx.c: 516:       {;../nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(
      +                          frame);
 16590  0066D6  0060  F7F8  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 16591  0066DC  0060  F7FC  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 16592  0066E2  EC4D  F045         	call	_nwkFrameFree	;wreg free
 16593                           
 16594                           ;../nwk/nwk_src/nwkRx.c: 518:       } break;
 16595  0066E6  D01A               	goto	l16285
 16596  0066E8                     l16283:
 16597                           
 16598                           ; BSR set to: 1
 16599  0066E8  0060  F7FB  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 16600  0066EE  0060  F7FF  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 16601  0066F4  50DF               	movf	indf2,w,c
 16602  0066F6  6FFC               	movwf	??_nwkRxTaskHandler& (0+255),b
 16603  0066F8  6BFD               	clrf	(??_nwkRxTaskHandler+1)& (0+255),b
 16604                           
 16605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16606                           ; Switch size 1, requested type "simple"
 16607                           ; Number of cases is 1, Range of values is 0 to 0
 16608                           ; switch strategies available:
 16609                           ; Name         Instructions Cycles
 16610                           ; simple_byte            4     3 (average)
 16611                           ;	Chosen strategy is simple_byte
 16612  0066FA  51FD               	movf	(??_nwkRxTaskHandler+1)& (0+255),w,b
 16613  0066FC  0A00               	xorlw	0	; case 0
 16614  0066FE  A4D8               	btfss	status,2,c
 16615  006700  D00D               	goto	l16285
 16616                           
 16617                           ; BSR set to: 1
 16618                           ; Switch size 1, requested type "simple"
 16619                           ; Number of cases is 4, Range of values is 32 to 36
 16620                           ; switch strategies available:
 16621                           ; Name         Instructions Cycles
 16622                           ; simple_byte           13     7 (average)
 16623                           ;	Chosen strategy is simple_byte
 16624  006702  51FC               	movf	??_nwkRxTaskHandler& (0+255),w,b
 16625  006704  0A20               	xorlw	32	; case 32
 16626  006706  B4D8               	btfsc	status,2,c
 16627  006708  D7CB               	goto	l16273
 16628  00670A  0A02               	xorlw	2	; case 34
 16629  00670C  B4D8               	btfsc	status,2,c
 16630  00670E  D7D1               	goto	l16275
 16631  006710  0A01               	xorlw	1	; case 35
 16632  006712  B4D8               	btfsc	status,2,c
 16633  006714  D7D7               	goto	l16277
 16634  006716  0A07               	xorlw	7	; case 36
 16635  006718  B4D8               	btfsc	status,2,c
 16636  00671A  D7DD               	goto	l16279
 16637  00671C                     l16285:
 16638                           
 16639                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 16640  00671C  0060  F7F8  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 16641  006722  0060  F7FC  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 16642  006728  EC98  F037         	call	_nwkFrameNext	;wreg free
 16643  00672C  0060  F008  F1FE   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 16644  006732  0060  F00C  F1FF   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 16645  006738  0101               	movlb	1	; () banked
 16646  00673A  51FE               	movf	nwkRxTaskHandler@frame& (0+255),w,b
 16647  00673C  11FF               	iorwf	(nwkRxTaskHandler@frame+1)& (0+255),w,b
 16648  00673E  B4D8               	btfsc	status,2,c
 16649  006740  0012               	return	
 16650  006742  D7D2               	goto	l16283
 16651  006744                     __end_of_nwkRxTaskHandler:
 16652                           	opt callstack 0
 16653                           
 16654 ;; *************** function _nwkRxHandleReceivedFrame *****************
 16655 ;; Defined at:
 16656 ;;		line 292 in file "../nwk/nwk_src/nwkRx.c"
 16657 ;; Parameters:    Size  Location     Type
 16658 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
 16659 ;;		 -> nwkFrameFrames(685), NULL(0), 
 16660 ;; Auto vars:     Size  Location     Type
 16661 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
 16662 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16663 ;;  member          1   45[COMRAM] _Bool 
 16664 ;;  broadcast       1   44[COMRAM] _Bool 
 16665 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
 16666 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 16667 ;; Return value:  Size  Location     Type
 16668 ;;                  1    wreg      void 
 16669 ;; Registers used:
 16670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16671 ;; Tracked objects:
 16672 ;;		On entry : 2/1
 16673 ;;		On exit  : 0/0
 16674 ;;		Unchanged: 0/0
 16675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16677 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16679 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16680 ;;Total ram usage:       10 bytes
 16681 ;; Hardware stack levels used:    1
 16682 ;; Hardware stack levels required when called:   10
 16683 ;; This function calls:
 16684 ;;		_NWK_GroupIsMember
 16685 ;;		_nwkRouteFrameReceived
 16686 ;;		_nwkRxRejectDuplicate
 16687 ;;		_nwkTxBroadcastFrame
 16688 ;; This function is called by:
 16689 ;;		_nwkRxTaskHandler
 16690 ;; This function uses a non-reentrant model
 16691 ;;
 16692                           
 16693                           	psect	text104
 16694  0016A8                     __ptext104:
 16695                           	opt callstack 0
 16696  0016A8                     _nwkRxHandleReceivedFrame:
 16697                           	opt callstack 17
 16698                           
 16699                           ;../nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);..
      +                          /nwk/nwk_src/nwkRx.c: 293: {;../nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &
      +                          frame->header;
 16700                           
 16701                           ; BSR set to: 1
 16702                           ;incstack = 0
 16703  0016A8  0E02               	movlw	2
 16704  0016AA  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
 16705  0016AC  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
 16706  0016AE  0E00               	movlw	0
 16707  0016B0  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 16708  0016B2  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
 16709                           
 16710                           ;../nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 16711  0016B4  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16712  0016BA  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16713  0016C0  0E24               	movlw	36
 16714  0016C2  6EDF               	movwf	indf2,c
 16715                           
 16716                           ;../nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
 16717  0016C4  EE20 F009          	lfsr	2,9
 16718  0016C8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16719  0016CA  26D9               	addwf	fsr2l,f,c
 16720  0016CC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16721  0016CE  22DA               	addwfc	fsr2h,f,c
 16722  0016D0  B2DF               	btfsc	indf2,1,c
 16723  0016D2  0012               	return	
 16724                           
 16725                           ;../nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackReques
      +                          t)
 16726  0016D4  EE20 F009          	lfsr	2,9
 16727  0016D8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16728  0016DA  26D9               	addwf	fsr2l,f,c
 16729  0016DC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16730  0016DE  22DA               	addwfc	fsr2h,f,c
 16731  0016E0  A6DF               	btfss	indf2,3,c
 16732  0016E2  D008               	goto	l15673
 16733  0016E4  EE20 F009          	lfsr	2,9
 16734  0016E8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16735  0016EA  26D9               	addwf	fsr2l,f,c
 16736  0016EC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16737  0016EE  22DA               	addwfc	fsr2h,f,c
 16738  0016F0  B0DF               	btfsc	indf2,0,c
 16739  0016F2  0012               	return	
 16740  0016F4                     l15673:
 16741                           
 16742                           ;../nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 16743  0016F4  EE20 F003          	lfsr	2,3
 16744  0016F8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16745  0016FA  26D9               	addwf	fsr2l,f,c
 16746  0016FC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16747  0016FE  22DA               	addwfc	fsr2h,f,c
 16748  001700  28DE               	incf	postinc2,w,c
 16749  001702  E125               	bnz	l15683
 16750  001704  28DE               	incf	postinc2,w,c
 16751  001706  A4D8               	btfss	status,2,c
 16752  001708  D022               	goto	l15683
 16753                           
 16754                           ;../nwk/nwk_src/nwkRx.c: 312:   {;../nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == hea
      +                          der->nwkDstAddr || 0xffff == header->nwkDstAddr)
 16755  00170A  EE20 F00D          	lfsr	2,13
 16756  00170E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16757  001710  26D9               	addwf	fsr2l,f,c
 16758  001712  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16759  001714  22DA               	addwfc	fsr2h,f,c
 16760  001716  0101               	movlb	1	; () banked
 16761  001718  5100               	movf	_nwkIb& (0+255),w,b
 16762  00171A  18DE               	xorwf	postinc2,w,c
 16763  00171C  E104               	bnz	u15730
 16764  00171E  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16765  001720  18DE               	xorwf	postinc2,w,c
 16766  001722  B4D8               	btfsc	status,2,c
 16767  001724  D00B               	goto	u15740
 16768  001726                     u15730:
 16769                           
 16770                           ; BSR set to: 1
 16771  001726  EE20 F00D          	lfsr	2,13
 16772  00172A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16773  00172C  26D9               	addwf	fsr2l,f,c
 16774  00172E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16775  001730  22DA               	addwfc	fsr2h,f,c
 16776  001732  28DE               	incf	postinc2,w,c
 16777  001734  E102               	bnz	u15741
 16778  001736  28DE               	incf	postinc2,w,c
 16779  001738  A4D8               	btfss	status,2,c
 16780  00173A                     u15741:
 16781  00173A  0012               	return	
 16782  00173C                     u15740:
 16783                           
 16784                           ; BSR set to: 1
 16785                           ;../nwk/nwk_src/nwkRx.c: 314:     {;../nwk/nwk_src/nwkRx.c: 320:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 16786  00173C  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 16787  001742  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 16788  001748  0E22               	movlw	34
 16789  00174A  6EDF               	movwf	indf2,c
 16790  00174C  0012               	return	
 16791  00174E                     l15683:
 16792                           
 16793                           ;../nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackRe
      +                          quest)
 16794  00174E  EE20 F00D          	lfsr	2,13
 16795  001752  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16796  001754  26D9               	addwf	fsr2l,f,c
 16797  001756  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16798  001758  22DA               	addwfc	fsr2h,f,c
 16799  00175A  28DE               	incf	postinc2,w,c
 16800  00175C  E10B               	bnz	l15689
 16801  00175E  28DE               	incf	postinc2,w,c
 16802  001760  A4D8               	btfss	status,2,c
 16803  001762  D008               	goto	l15689
 16804  001764  EE20 F009          	lfsr	2,9
 16805  001768  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16806  00176A  26D9               	addwf	fsr2l,f,c
 16807  00176C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16808  00176E  22DA               	addwfc	fsr2h,f,c
 16809  001770  B0DF               	btfsc	indf2,0,c
 16810  001772  0012               	return	
 16811  001774                     l15689:
 16812                           
 16813                           ;../nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 16814  001774  EE20 F00B          	lfsr	2,11
 16815  001778  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16816  00177A  26D9               	addwf	fsr2l,f,c
 16817  00177C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16818  00177E  22DA               	addwfc	fsr2h,f,c
 16819  001780  0101               	movlb	1	; () banked
 16820  001782  5100               	movf	_nwkIb& (0+255),w,b
 16821  001784  18DE               	xorwf	postinc2,w,c
 16822  001786  E104               	bnz	l15693
 16823  001788  5101               	movf	(_nwkIb+1)& (0+255),w,b
 16824  00178A  18DE               	xorwf	postinc2,w,c
 16825  00178C  B4D8               	btfsc	status,2,c
 16826  00178E  0012               	return	
 16827  001790                     l15693:
 16828                           
 16829                           ; BSR set to: 1
 16830                           ;../nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 16831  001790  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 16832  001796  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 16833  00179C  EC6A  F01B         	call	_nwkRouteFrameReceived	;wreg free
 16834                           
 16835                           ;../nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 16836  0017A0  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 16837  0017A6  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 16838  0017AC  EC51  F015         	call	_nwkRxRejectDuplicate	;wreg free
 16839  0017B0  0900               	iorlw	0
 16840  0017B2  A4D8               	btfss	status,2,c
 16841  0017B4  0012               	return	
 16842                           
 16843                           ;../nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 16844  0017B6  EE20 F009          	lfsr	2,9
 16845  0017BA  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16846  0017BC  26D9               	addwf	fsr2l,f,c
 16847  0017BE  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16848  0017C0  22DA               	addwfc	fsr2h,f,c
 16849  0017C2  A6DF               	btfss	indf2,3,c
 16850  0017C4  D0C7               	goto	l15731
 16851                           
 16852                           ;../nwk/nwk_src/nwkRx.c: 345:   {;../nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHead
      +                          er_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 16853  0017C6  EE20 F081          	lfsr	2,129
 16854  0017CA  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 16855  0017CC  26D9               	addwf	fsr2l,f,c
 16856  0017CE  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 16857  0017D0  22DA               	addwfc	fsr2h,f,c
 16858  0017D2  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 16859  0017D8  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 16860                           
 16861                           ;../nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 16862  0017DE  EE20 F00D          	lfsr	2,13
 16863  0017E2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16864  0017E4  26D9               	addwf	fsr2l,f,c
 16865  0017E6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16866  0017E8  22DA               	addwfc	fsr2h,f,c
 16867  0017EA  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 16868  0017F0  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 16869  0017F6  EC23  F043         	call	_NWK_GroupIsMember	;wreg free
 16870  0017FA  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
 16871                           
 16872                           ;../nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 16873  0017FC  0E00               	movlw	0
 16874  0017FE  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16875                           
 16876                           ;../nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 16877  001800  EE20 F005          	lfsr	2,5
 16878  001804  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 16879  001806  26D9               	addwf	fsr2l,f,c
 16880  001808  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 16881  00180A  22DA               	addwfc	fsr2h,f,c
 16882  00180C  28DE               	incf	postinc2,w,c
 16883  00180E  E16C               	bnz	l15713
 16884  001810  28DE               	incf	postinc2,w,c
 16885  001812  A4D8               	btfss	status,2,c
 16886  001814  D069               	goto	l15713
 16887                           
 16888                           ;../nwk/nwk_src/nwkRx.c: 351:     {;../nwk/nwk_src/nwkRx.c: 352:       if (member)
 16889  001816  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 16890  001818  B4D8               	btfsc	status,2,c
 16891  00181A  D031               	goto	l15711
 16892                           
 16893                           ;../nwk/nwk_src/nwkRx.c: 353:       {;../nwk/nwk_src/nwkRx.c: 354:         broadcast = m
      +                          cHeader->memberRadius > 0;
 16894  00181C  EE20 F001          	lfsr	2,1
 16895  001820  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16896  001822  26D9               	addwf	fsr2l,f,c
 16897  001824  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16898  001826  22DA               	addwfc	fsr2h,f,c
 16899  001828  50DF               	movf	indf2,w,c
 16900  00182A  0B0F               	andlw	15
 16901  00182C  0900               	iorlw	0
 16902  00182E  B4D8               	btfsc	status,2,c
 16903  001830  D002               	goto	u15820
 16904  001832  0E01               	movlw	1
 16905  001834  D001               	goto	u15830
 16906  001836                     u15820:
 16907  001836  0E00               	movlw	0
 16908  001838                     u15830:
 16909  001838  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16910                           
 16911                           ;../nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 16912  00183A  0E01               	movlw	1
 16913  00183C  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16914  00183E  EE20 F001          	lfsr	2,1
 16915  001842  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16916  001844  26D9               	addwf	fsr2l,f,c
 16917  001846  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16918  001848  22DA               	addwfc	fsr2h,f,c
 16919  00184A  50DF               	movf	indf2,w,c
 16920  00184C  0B0F               	andlw	15
 16921  00184E  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 16922  001850  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 16923  001852  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 16924  001854  50DF               	movf	indf2,w,c
 16925  001856  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16926  001858  0BF0               	andlw	-16
 16927  00185A  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16928  00185C  6EDF               	movwf	indf2,c
 16929                           
 16930                           ;../nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMember
      +                          Radius;
 16931  00185E  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16932  001864  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16933  00186A  38DF               	swapf	indf2,w,c
 16934  00186C  0B0F               	andlw	15
 16935  00186E  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16936  001870  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16937  001876  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16938  00187C  D030               	goto	L15
 16939  00187E                     l15711:
 16940                           
 16941                           ;../nwk/nwk_src/nwkRx.c: 359:       {;../nwk/nwk_src/nwkRx.c: 360:         broadcast = m
      +                          cHeader->nonMemberRadius > 0;
 16942  00187E  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16943  001884  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16944  00188A  50DF               	movf	indf2,w,c
 16945  00188C  0B0F               	andlw	15
 16946  00188E  0900               	iorlw	0
 16947  001890  B4D8               	btfsc	status,2,c
 16948  001892  D002               	goto	u15840
 16949  001894  0E01               	movlw	1
 16950  001896  D001               	goto	u15850
 16951  001898                     u15840:
 16952  001898  0E00               	movlw	0
 16953  00189A                     u15850:
 16954  00189A  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 16955                           
 16956                           ;../nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 16957  00189C  0E01               	movlw	1
 16958  00189E  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16959  0018A0  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 16960  0018A6  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 16961  0018AC  50DF               	movf	indf2,w,c
 16962  0018AE  0B0F               	andlw	15
 16963  0018B0  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 16964  0018B2  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 16965  0018B4  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 16966  0018B6  50DF               	movf	indf2,w,c
 16967  0018B8  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16968  0018BA  0BF0               	andlw	-16
 16969  0018BC  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 16970  0018BE  6EDF               	movwf	indf2,c
 16971                           
 16972                           ;../nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius
      +                          ;
 16973  0018C0  EE20 F001          	lfsr	2,1
 16974  0018C4  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16975  0018C6  26D9               	addwf	fsr2l,f,c
 16976  0018C8  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16977  0018CA  22DA               	addwfc	fsr2h,f,c
 16978  0018CC  38DF               	swapf	indf2,w,c
 16979  0018CE  0B0F               	andlw	15
 16980  0018D0  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 16981  0018D2  EE20 F001          	lfsr	2,1
 16982  0018D6  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 16983  0018D8  26D9               	addwf	fsr2l,f,c
 16984  0018DA  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 16985  0018DC  22DA               	addwfc	fsr2h,f,c
 16986  0018DE                     L15:
 16987  0018DE  50DF               	movf	indf2,w,c
 16988  0018E0  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 16989  0018E2  0BF0               	andlw	-16
 16990  0018E4  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 16991  0018E6  D014               	goto	L14
 16992  0018E8                     l15713:
 16993                           
 16994                           ;../nwk/nwk_src/nwkRx.c: 366:     {;../nwk/nwk_src/nwkRx.c: 367:       if (member)
 16995  0018E8  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 16996  0018EA  B4D8               	btfsc	status,2,c
 16997  0018EC  D00A               	goto	l15719
 16998                           
 16999                           ;../nwk/nwk_src/nwkRx.c: 368:       {;../nwk/nwk_src/nwkRx.c: 369:         broadcast = 1
      +                          ;
 17000  0018EE  0E01               	movlw	1
 17001  0018F0  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 17002                           
 17003                           ;../nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 17004  0018F2  EE20 F009          	lfsr	2,9
 17005  0018F6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17006  0018F8  26D9               	addwf	fsr2l,f,c
 17007  0018FA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17008  0018FC  22DA               	addwfc	fsr2h,f,c
 17009  0018FE  84DF               	bsf	indf2,2,c
 17010                           
 17011                           ;../nwk/nwk_src/nwkRx.c: 371:       }
 17012  001900  D008               	goto	l15721
 17013  001902                     l15719:
 17014                           
 17015                           ;../nwk/nwk_src/nwkRx.c: 374:       {;../nwk/nwk_src/nwkRx.c: 375:         frame->state 
      +                          = NWK_RX_STATE_ROUTE;
 17016  001902  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17017  001908  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17018  00190E  0E23               	movlw	35
 17019  001910                     L14:
 17020  001910  6EDF               	movwf	indf2,c
 17021  001912                     l15721:
 17022                           
 17023                           ;../nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 17024  001912  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
 17025  001914  B4D8               	btfsc	status,2,c
 17026  001916  D008               	goto	l15725
 17027                           
 17028                           ;../nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 17029  001918  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 17030  00191E  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 17031  001924  EC7F  F023         	call	_nwkTxBroadcastFrame	;wreg free
 17032  001928                     l15725:
 17033                           
 17034                           ;../nwk/nwk_src/nwkRx.c: 383:     if (member)
 17035  001928  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 17036  00192A  B4D8               	btfsc	status,2,c
 17037  00192C  0012               	return	
 17038                           
 17039                           ;../nwk/nwk_src/nwkRx.c: 384:     {;../nwk/nwk_src/nwkRx.c: 385:       frame->payload +=
      +                           sizeof(NwkFrameMulticastHeader_t);
 17040  00192E  EE20 F081          	lfsr	2,129
 17041  001932  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 17042  001934  26D9               	addwf	fsr2l,f,c
 17043  001936  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 17044  001938  22DA               	addwfc	fsr2h,f,c
 17045  00193A  0E02               	movlw	2
 17046  00193C  26DE               	addwf	postinc2,f,c
 17047  00193E  0E00               	movlw	0
 17048  001940  22DD               	addwfc	postdec2,f,c
 17049                           
 17050                           ;../nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 17051  001942  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17052  001948  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17053  00194E  0E22               	movlw	34
 17054  001950  6EDF               	movwf	indf2,c
 17055  001952  0012               	return	
 17056  001954                     l15731:
 17057                           
 17058                           ;../nwk/nwk_src/nwkRx.c: 397:   {;../nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header-
      +                          >macDstAddr && nwkIb.addr != header->nwkDstAddr &&
 17059  001954  EE20 F005          	lfsr	2,5
 17060  001958  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17061  00195A  26D9               	addwf	fsr2l,f,c
 17062  00195C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17063  00195E  22DA               	addwfc	fsr2h,f,c
 17064  001960  28DE               	incf	postinc2,w,c
 17065  001962  E121               	bnz	l15739
 17066  001964  28DE               	incf	postinc2,w,c
 17067  001966  A4D8               	btfss	status,2,c
 17068  001968  D01E               	goto	l15739
 17069  00196A  EE20 F00D          	lfsr	2,13
 17070  00196E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17071  001970  26D9               	addwf	fsr2l,f,c
 17072  001972  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17073  001974  22DA               	addwfc	fsr2h,f,c
 17074  001976  0101               	movlb	1	; () banked
 17075  001978  5100               	movf	_nwkIb& (0+255),w,b
 17076  00197A  18DE               	xorwf	postinc2,w,c
 17077  00197C  E104               	bnz	u15900
 17078  00197E  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17079  001980  18DE               	xorwf	postinc2,w,c
 17080  001982  B4D8               	btfsc	status,2,c
 17081  001984  D010               	goto	l15739
 17082  001986                     u15900:
 17083                           
 17084                           ; BSR set to: 1
 17085  001986  EE20 F009          	lfsr	2,9
 17086  00198A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17087  00198C  26D9               	addwf	fsr2l,f,c
 17088  00198E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17089  001990  22DA               	addwfc	fsr2h,f,c
 17090  001992  B4DF               	btfsc	indf2,2,c
 17091  001994  D008               	goto	l15739
 17092                           
 17093                           ; BSR set to: 1
 17094                           ;../nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 17095  001996  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 17096  00199C  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 17097  0019A2  EC7F  F023         	call	_nwkTxBroadcastFrame	;wreg free
 17098  0019A6                     l15739:
 17099                           
 17100                           ;../nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == head
      +                          er->nwkDstAddr)
 17101  0019A6  EE20 F00D          	lfsr	2,13
 17102  0019AA  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17103  0019AC  26D9               	addwf	fsr2l,f,c
 17104  0019AE  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17105  0019B0  22DA               	addwfc	fsr2h,f,c
 17106  0019B2  0101               	movlb	1	; () banked
 17107  0019B4  5100               	movf	_nwkIb& (0+255),w,b
 17108  0019B6  18DE               	xorwf	postinc2,w,c
 17109  0019B8  E104               	bnz	u15920
 17110  0019BA  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17111  0019BC  18DE               	xorwf	postinc2,w,c
 17112  0019BE  B4D8               	btfsc	status,2,c
 17113  0019C0  D00B               	goto	u15930
 17114  0019C2                     u15920:
 17115                           
 17116                           ; BSR set to: 1
 17117  0019C2  EE20 F00D          	lfsr	2,13
 17118  0019C6  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17119  0019C8  26D9               	addwf	fsr2l,f,c
 17120  0019CA  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17121  0019CC  22DA               	addwfc	fsr2h,f,c
 17122  0019CE  28DE               	incf	postinc2,w,c
 17123  0019D0  E10C               	bnz	l15745
 17124  0019D2  28DE               	incf	postinc2,w,c
 17125  0019D4  A4D8               	btfss	status,2,c
 17126  0019D6  D009               	goto	l15745
 17127  0019D8                     u15930:
 17128                           
 17129                           ; BSR set to: 1
 17130                           ;../nwk/nwk_src/nwkRx.c: 403:     {;../nwk/nwk_src/nwkRx.c: 409:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 17131  0019D8  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17132  0019DE  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17133  0019E4  0E22               	movlw	34
 17134  0019E6  6EDF               	movwf	indf2,c
 17135                           
 17136                           ;../nwk/nwk_src/nwkRx.c: 410:     }
 17137  0019E8  0012               	return	
 17138  0019EA                     l15745:
 17139                           
 17140                           ; BSR set to: 1
 17141  0019EA  EE20 F005          	lfsr	2,5
 17142  0019EE  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 17143  0019F0  26D9               	addwf	fsr2l,f,c
 17144  0019F2  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 17145  0019F4  22DA               	addwfc	fsr2h,f,c
 17146  0019F6  5100               	movf	_nwkIb& (0+255),w,b
 17147  0019F8  18DE               	xorwf	postinc2,w,c
 17148  0019FA  E10C               	bnz	l2126
 17149  0019FC  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17150  0019FE  18DE               	xorwf	postinc2,w,c
 17151  001A00  A4D8               	btfss	status,2,c
 17152  001A02  0012               	return	
 17153                           
 17154                           ; BSR set to: 1
 17155                           ;../nwk/nwk_src/nwkRx.c: 414:     {;../nwk/nwk_src/nwkRx.c: 415:       frame->state = NW
      +                          K_RX_STATE_ROUTE;
 17156  001A04  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 17157  001A0A  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 17158  001A10  0E23               	movlw	35
 17159  001A12  6EDF               	movwf	indf2,c
 17160  001A14                     l2126:
 17161  001A14  0012               	return		;funcret
 17162  001A16                     __end_of_nwkRxHandleReceivedFrame:
 17163                           	opt callstack 0
 17164                           
 17165 ;; *************** function _nwkTxBroadcastFrame *****************
 17166 ;; Defined at:
 17167 ;;		line 159 in file "../nwk/nwk_src/nwkTx.c"
 17168 ;; Parameters:    Size  Location     Type
 17169 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 17170 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17171 ;; Auto vars:     Size  Location     Type
 17172 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
 17173 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17174 ;; Return value:  Size  Location     Type
 17175 ;;                  1    wreg      void 
 17176 ;; Registers used:
 17177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17178 ;; Tracked objects:
 17179 ;;		On entry : 0/1
 17180 ;;		On exit  : 0/0
 17181 ;;		Unchanged: 0/0
 17182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17186 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17187 ;;Total ram usage:        5 bytes
 17188 ;; Hardware stack levels used:    1
 17189 ;; Hardware stack levels required when called:    9
 17190 ;; This function calls:
 17191 ;;		_memcpy
 17192 ;;		_nwkFrameAlloc
 17193 ;;		_rand
 17194 ;; This function is called by:
 17195 ;;		_nwkRxHandleReceivedFrame
 17196 ;; This function uses a non-reentrant model
 17197 ;;
 17198                           
 17199                           	psect	text105
 17200  0046FE                     __ptext105:
 17201                           	opt callstack 0
 17202  0046FE                     _nwkTxBroadcastFrame:
 17203                           	opt callstack 17
 17204                           
 17205                           ;../nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkTx.c: 160: {;../nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;../nwk/nwk_src/nwk
      +                          Tx.c: 163:   if (((void*)0) == (newFrame = nwkFrameAlloc()))
 17206                           
 17207                           ;incstack = 0
 17208  0046FE  ECF0  F032         	call	_nwkFrameAlloc	;wreg free
 17209  004702  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 17210  004708  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 17211  00470E  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17212  004710  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17213  004712  B4D8               	btfsc	status,2,c
 17214  004714  0012               	return	
 17215                           
 17216                           ;../nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 17217  004716  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 17218  00471C  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 17219  004722  0E12               	movlw	18
 17220  004724  6EDF               	movwf	indf2,c
 17221                           
 17222                           ;../nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 17223  004726  EE20 F001          	lfsr	2,1
 17224  00472A  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17225  00472C  26D9               	addwf	fsr2l,f,c
 17226  00472E  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17227  004730  22DA               	addwfc	fsr2h,f,c
 17228  004732  EE10 F001          	lfsr	1,1
 17229  004736  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17230  004738  26E1               	addwf	fsr1l,f,c
 17231  00473A  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17232  00473C  22E2               	addwfc	fsr1h,f,c
 17233  00473E  006F FF7F FFE7     	movff	indf2,indf1
 17234                           
 17235                           ;../nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 17236  004744  EE20 F083          	lfsr	2,131
 17237  004748  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17238  00474A  26D9               	addwf	fsr2l,f,c
 17239  00474C  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17240  00474E  22DA               	addwfc	fsr2h,f,c
 17241  004750  0E00               	movlw	0
 17242  004752  6EDF               	movwf	indf2,c
 17243                           
 17244                           ;../nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 17245  004754  EC27  F028         	call	_rand	;wreg free
 17246  004758  0E07               	movlw	7
 17247  00475A  161A               	andwf	?_rand^0,f,c
 17248  00475C  0E00               	movlw	0
 17249  00475E  161B               	andwf	(?_rand+1)^0,f,c
 17250  004760  0E01               	movlw	1
 17251  004762  261A               	addwf	?_rand^0,f,c
 17252  004764  0E00               	movlw	0
 17253  004766  221B               	addwfc	(?_rand+1)^0,f,c
 17254  004768  EE20 F084          	lfsr	2,132
 17255  00476C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17256  00476E  26D9               	addwf	fsr2l,f,c
 17257  004770  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17258  004772  22DA               	addwfc	fsr2h,f,c
 17259  004774  0060  F06B  FFDE   	movff	?_rand,postinc2
 17260  00477A  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 17261                           
 17262                           ; BSR set to: 1
 17263                           ;../nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
 17264  004780  EE20 F087          	lfsr	2,135
 17265  004784  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17266  004786  26D9               	addwf	fsr2l,f,c
 17267  004788  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17268  00478A  22DA               	addwfc	fsr2h,f,c
 17269  00478C  0E00               	movlw	0
 17270  00478E  6EDE               	movwf	postinc2,c
 17271  004790  0E00               	movlw	0
 17272  004792  6EDD               	movwf	postdec2,c
 17273                           
 17274                           ; BSR set to: 1
 17275                           ;../nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 17276  004794  0E02               	movlw	2
 17277  004796  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
 17278  004798  6E08               	movwf	memcpy@d1^0,c
 17279  00479A  0E00               	movlw	0
 17280  00479C  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17281  00479E  6E09               	movwf	(memcpy@d1+1)^0,c
 17282  0047A0  0E02               	movlw	2
 17283  0047A2  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
 17284  0047A4  6E0A               	movwf	memcpy@s1^0,c
 17285  0047A6  0E00               	movlw	0
 17286  0047A8  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17287  0047AA  6E0B               	movwf	(memcpy@s1+1)^0,c
 17288  0047AC  EE20 F001          	lfsr	2,1
 17289  0047B0  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17290  0047B2  26D9               	addwf	fsr2l,f,c
 17291  0047B4  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17292  0047B6  22DA               	addwfc	fsr2h,f,c
 17293  0047B8  50DF               	movf	indf2,w,c
 17294  0047BA  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
 17295  0047BC  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
 17296  0047BE  6E0C               	movwf	memcpy@n^0,c
 17297  0047C0  6A0D               	clrf	(memcpy@n+1)^0,c
 17298  0047C2  ECEA  F039         	call	_memcpy	;wreg free
 17299                           
 17300                           ;../nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 17301  0047C6  EE20 F002          	lfsr	2,2
 17302  0047CA  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17303  0047CC  26D9               	addwf	fsr2l,f,c
 17304  0047CE  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17305  0047D0  22DA               	addwfc	fsr2h,f,c
 17306  0047D2  0E41               	movlw	65
 17307  0047D4  6EDE               	movwf	postinc2,c
 17308  0047D6  0E88               	movlw	136
 17309  0047D8  6EDD               	movwf	postdec2,c
 17310                           
 17311                           ;../nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 17312  0047DA  EE20 F007          	lfsr	2,7
 17313  0047DE  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17314  0047E0  26D9               	addwf	fsr2l,f,c
 17315  0047E2  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17316  0047E4  22DA               	addwfc	fsr2h,f,c
 17317  0047E6  0EFF               	movlw	255
 17318  0047E8  6EDE               	movwf	postinc2,c
 17319  0047EA  0EFF               	movlw	255
 17320  0047EC  6EDD               	movwf	postdec2,c
 17321                           
 17322                           ;../nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId
      +                          ;
 17323  0047EE  EE20 F005          	lfsr	2,5
 17324  0047F2  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 17325  0047F4  26D9               	addwf	fsr2l,f,c
 17326  0047F6  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 17327  0047F8  22DA               	addwfc	fsr2h,f,c
 17328  0047FA  EE10 F005          	lfsr	1,5
 17329  0047FE  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17330  004800  26E1               	addwf	fsr1l,f,c
 17331  004802  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17332  004804  22E2               	addwfc	fsr1h,f,c
 17333  004806  006F FF7B FFE6     	movff	postinc2,postinc1
 17334  00480C  006F FF77 FFE5     	movff	postdec2,postdec1
 17335                           
 17336                           ;../nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 17337  004812  EE20 F009          	lfsr	2,9
 17338  004816  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17339  004818  26D9               	addwf	fsr2l,f,c
 17340  00481A  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17341  00481C  22DA               	addwfc	fsr2h,f,c
 17342  00481E  0060  F403  FFDE   	movff	_nwkIb,postinc2
 17343  004824  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 17344                           
 17345                           ;../nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 17346  00482A  0101               	movlb	1	; () banked
 17347  00482C  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 17348  00482E  EE20 F004          	lfsr	2,4
 17349  004832  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 17350  004834  26D9               	addwf	fsr2l,f,c
 17351  004836  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 17352  004838  22DA               	addwfc	fsr2h,f,c
 17353  00483A  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 17354  004840  0012               	return		;funcret
 17355  004842                     __end_of_nwkTxBroadcastFrame:
 17356                           	opt callstack 0
 17357                           
 17358 ;; *************** function _nwkRxRejectDuplicate *****************
 17359 ;; Defined at:
 17360 ;;		line 200 in file "../nwk/nwk_src/nwkRx.c"
 17361 ;; Parameters:    Size  Location     Type
 17362 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
 17363 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 17364 ;; Auto vars:     Size  Location     Type
 17365 ;;  shift           1   23[COMRAM] unsigned char 
 17366 ;;  diff            1   25[COMRAM] unsigned char 
 17367 ;;  i               1   24[COMRAM] unsigned char 
 17368 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
 17369 ;;		 -> nwkRxDuplicateRejectionTable(50), 
 17370 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
 17371 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
 17372 ;; Return value:  Size  Location     Type
 17373 ;;                  1    wreg      _Bool 
 17374 ;; Registers used:
 17375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17376 ;; Tracked objects:
 17377 ;;		On entry : 0/1
 17378 ;;		On exit  : 0/0
 17379 ;;		Unchanged: 0/0
 17380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17382 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17384 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17385 ;;Total ram usage:       13 bytes
 17386 ;; Hardware stack levels used:    1
 17387 ;; Hardware stack levels required when called:    9
 17388 ;; This function calls:
 17389 ;;		_SYS_TimerStart
 17390 ;;		_nwkRouteRemove
 17391 ;; This function is called by:
 17392 ;;		_nwkRxHandleReceivedFrame
 17393 ;; This function uses a non-reentrant model
 17394 ;;
 17395                           
 17396                           	psect	text106
 17397  002AA2                     __ptext106:
 17398                           	opt callstack 0
 17399  002AA2                     _nwkRxRejectDuplicate:
 17400                           	opt callstack 17
 17401                           
 17402                           ;../nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header
      +                          );../nwk/nwk_src/nwkRx.c: 201: {;../nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEnt
      +                          ry_t *entry;;../nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((
      +                          void*)0);
 17403                           
 17404                           ;incstack = 0
 17405  002AA2  0E00               	movlw	0
 17406  002AA4  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
 17407  002AA6  0E00               	movlw	0
 17408  002AA8  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
 17409                           
 17410                           ;../nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
 17411  002AAA  0E00               	movlw	0
 17412  002AAC  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
 17413  002AAE                     l15113:
 17414                           
 17415                           ;../nwk/nwk_src/nwkRx.c: 206:   {;../nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplica
      +                          teRejectionTable[i];
 17416  002AAE  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
 17417  002AB0  0D05               	mullw	5
 17418  002AB2  0EC0               	movlw	low _nwkRxDuplicateRejectionTable
 17419  002AB4  24F3               	addwf	243,w,c
 17420  002AB6  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
 17421  002AB8  0E03               	movlw	high _nwkRxDuplicateRejectionTable
 17422  002ABA  20F4               	addwfc	prodh,w,c
 17423  002ABC  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
 17424                           
 17425                           ;../nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 17426  002ABE  EE20 F004          	lfsr	2,4
 17427  002AC2  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17428  002AC4  26D9               	addwf	fsr2l,f,c
 17429  002AC6  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17430  002AC8  22DA               	addwfc	fsr2h,f,c
 17431  002ACA  50DF               	movf	indf2,w,c
 17432  002ACC  B4D8               	btfsc	status,2,c
 17433  002ACE  D0B3               	goto	l15153
 17434  002AD0  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 17435  002AD6  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 17436  002ADC  EE10 F00B          	lfsr	1,11
 17437  002AE0  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17438  002AE2  26E1               	addwf	fsr1l,f,c
 17439  002AE4  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17440  002AE6  22E2               	addwfc	fsr1h,f,c
 17441  002AE8  50DE               	movf	postinc2,w,c
 17442  002AEA  18E6               	xorwf	postinc1,w,c
 17443  002AEC  E103               	bnz	u14711
 17444  002AEE  50DE               	movf	postinc2,w,c
 17445  002AF0  18E6               	xorwf	postinc1,w,c
 17446  002AF2  A4D8               	btfss	status,2,c
 17447  002AF4                     u14711:
 17448  002AF4  D0A0               	goto	l15153
 17449                           
 17450                           ;../nwk/nwk_src/nwkRx.c: 210:     {;../nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (i
      +                          nt8_t)entry->seq - header->nwkSeq;
 17451  002AF6  EE20 F00A          	lfsr	2,10
 17452  002AFA  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17453  002AFC  26D9               	addwf	fsr2l,f,c
 17454  002AFE  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17455  002B00  22DA               	addwfc	fsr2h,f,c
 17456  002B02  50DF               	movf	indf2,w,c
 17457  002B04  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 17458  002B06  EE20 F002          	lfsr	2,2
 17459  002B0A  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17460  002B0C  26D9               	addwf	fsr2l,f,c
 17461  002B0E  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17462  002B10  22DA               	addwfc	fsr2h,f,c
 17463  002B12  50DF               	movf	indf2,w,c
 17464  002B14  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17465  002B16  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
 17466  002B18  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17467  002B1A  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
 17468                           
 17469                           ;../nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 17470  002B1C  0E08               	movlw	8
 17471  002B1E  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
 17472  002B20  D055               	goto	l15141
 17473                           
 17474                           ;../nwk/nwk_src/nwkRx.c: 214:       {;../nwk/nwk_src/nwkRx.c: 215:         if (entry->ma
      +                          sk & (1 << diff))
 17475  002B22  EE20 F003          	lfsr	2,3
 17476  002B26  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17477  002B28  26D9               	addwf	fsr2l,f,c
 17478  002B2A  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17479  002B2C  22DA               	addwfc	fsr2h,f,c
 17480  002B2E  50DF               	movf	indf2,w,c
 17481  002B30  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 17482  002B32  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 17483  002B38  0E01               	movlw	1
 17484  002B3A  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
 17485  002B3C  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17486  002B3E  D002               	goto	u14734
 17487  002B40                     u14735:
 17488  002B40  90D8               	bcf	status,0,c
 17489  002B42  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
 17490  002B44                     u14734:
 17491  002B44  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
 17492  002B46  D7FC               	goto	u14735
 17493  002B48  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
 17494  002B4A  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
 17495  002B4C  0900               	iorlw	0
 17496  002B4E  B4D8               	btfsc	status,2,c
 17497  002B50  D028               	goto	l15133
 17498                           
 17499                           ;../nwk/nwk_src/nwkRx.c: 216:         {;../nwk/nwk_src/nwkRx.c: 218:           if (nwkIb
      +                          .addr == header->macDstAddr)
 17500  002B52  EE20 F005          	lfsr	2,5
 17501  002B56  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17502  002B58  26D9               	addwf	fsr2l,f,c
 17503  002B5A  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17504  002B5C  22DA               	addwfc	fsr2h,f,c
 17505  002B5E  0101               	movlb	1	; () banked
 17506  002B60  5100               	movf	_nwkIb& (0+255),w,b
 17507  002B62  18DE               	xorwf	postinc2,w,c
 17508  002B64  E11C               	bnz	l15129
 17509  002B66  5101               	movf	(_nwkIb+1)& (0+255),w,b
 17510  002B68  18DE               	xorwf	postinc2,w,c
 17511  002B6A  A4D8               	btfss	status,2,c
 17512  002B6C  D018               	goto	l15129
 17513                           
 17514                           ; BSR set to: 1
 17515                           ;../nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwk
      +                          Fcf.multicast);
 17516  002B6E  EE20 F00D          	lfsr	2,13
 17517  002B72  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17518  002B74  26D9               	addwf	fsr2l,f,c
 17519  002B76  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17520  002B78  22DA               	addwfc	fsr2h,f,c
 17521  002B7A  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 17522  002B80  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 17523  002B86  EE20 F009          	lfsr	2,9
 17524  002B8A  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17525  002B8C  26D9               	addwf	fsr2l,f,c
 17526  002B8E  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17527  002B90  22DA               	addwfc	fsr2h,f,c
 17528  002B92  0E00               	movlw	0
 17529  002B94  B6DF               	btfsc	indf2,3,c
 17530  002B96  0E01               	movlw	1
 17531  002B98  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 17532  002B9A  EC4C  F041         	call	_nwkRouteRemove	;wreg free
 17533  002B9E                     l15129:
 17534                           
 17535                           ;../nwk/nwk_src/nwkRx.c: 221:           return 1;
 17536  002B9E  0E01               	movlw	1
 17537  002BA0  0012               	return	
 17538  002BA2                     l15133:
 17539                           
 17540                           ;../nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 17541  002BA2  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 17542  002BA8  0E01               	movlw	1
 17543  002BAA  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17544  002BAC  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 17545  002BAE  D002               	goto	u14764
 17546  002BB0                     u14765:
 17547  002BB0  90D8               	bcf	status,0,c
 17548  002BB2  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17549  002BB4                     u14764:
 17550  002BB4  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 17551  002BB6  D7FC               	goto	u14765
 17552  002BB8  EE20 F003          	lfsr	2,3
 17553  002BBC  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17554  002BBE  26D9               	addwf	fsr2l,f,c
 17555  002BC0  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17556  002BC2  22DA               	addwfc	fsr2h,f,c
 17557  002BC4  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17558  002BC6  12DF               	iorwf	indf2,f,c
 17559  002BC8                     l15135:
 17560                           
 17561                           ;../nwk/nwk_src/nwkRx.c: 225:         return 0;
 17562  002BC8  0E00               	movlw	0
 17563  002BCA  0012               	return	
 17564  002BCC                     l15141:
 17565                           
 17566                           ;../nwk/nwk_src/nwkRx.c: 228:       {;../nwk/nwk_src/nwkRx.c: 229:         uint8_t shift
      +                           = -(int8_t)diff;
 17567  002BCC  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
 17568  002BCE  0800               	sublw	0
 17569  002BD0  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
 17570                           
 17571                           ;../nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 17572  002BD2  EE20 F00A          	lfsr	2,10
 17573  002BD6  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17574  002BD8  26D9               	addwf	fsr2l,f,c
 17575  002BDA  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17576  002BDC  22DA               	addwfc	fsr2h,f,c
 17577  002BDE  EE10 F002          	lfsr	1,2
 17578  002BE2  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17579  002BE4  26E1               	addwf	fsr1l,f,c
 17580  002BE6  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17581  002BE8  22E2               	addwfc	fsr1h,f,c
 17582  002BEA  006F FF7F FFE7     	movff	indf2,indf1
 17583                           
 17584                           ;../nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 17585  002BF0  EE20 F003          	lfsr	2,3
 17586  002BF4  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17587  002BF6  26D9               	addwf	fsr2l,f,c
 17588  002BF8  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17589  002BFA  22DA               	addwfc	fsr2h,f,c
 17590  002BFC  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 17591  002C02  EE10 F003          	lfsr	1,3
 17592  002C06  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17593  002C08  26E1               	addwf	fsr1l,f,c
 17594  002C0A  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17595  002C0C  22E2               	addwfc	fsr1h,f,c
 17596  002C0E  50E7               	movf	indf1,w,c
 17597  002C10  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 17598  002C12  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 17599  002C14  D002               	goto	u14774
 17600  002C16                     u14775:
 17601  002C16  90D8               	bcf	status,0,c
 17602  002C18  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 17603  002C1A                     u14774:
 17604  002C1A  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 17605  002C1C  D7FC               	goto	u14775
 17606  002C1E  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 17607  002C20  0901               	iorlw	1
 17608  002C22  6EDF               	movwf	indf2,c
 17609                           
 17610                           ;../nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
 17611  002C24  EE20 F004          	lfsr	2,4
 17612  002C28  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17613  002C2A  26D9               	addwf	fsr2l,f,c
 17614  002C2C  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17615  002C2E  22DA               	addwfc	fsr2h,f,c
 17616  002C30  0E01               	movlw	1
 17617  002C32  6EDF               	movwf	indf2,c
 17618  002C34  D7C9               	goto	l15135
 17619  002C36                     l15153:
 17620                           
 17621                           ;../nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 17622  002C36  EE20 F004          	lfsr	2,4
 17623  002C3A  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 17624  002C3C  26D9               	addwf	fsr2l,f,c
 17625  002C3E  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 17626  002C40  22DA               	addwfc	fsr2h,f,c
 17627  002C42  50DF               	movf	indf2,w,c
 17628  002C44  A4D8               	btfss	status,2,c
 17629  002C46  D006               	goto	l15157
 17630                           
 17631                           ;../nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 17632  002C48  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 17633  002C4E  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 17634  002C54                     l15157:
 17635                           
 17636                           ;../nwk/nwk_src/nwkRx.c: 240:   }
 17637  002C54  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
 17638  002C56  0E09               	movlw	9
 17639  002C58  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
 17640  002C5A  D729               	goto	l15113
 17641                           
 17642                           ;../nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
 17643  002C5C  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17644  002C5E  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17645  002C60  B4D8               	btfsc	status,2,c
 17646  002C62  D79D               	goto	l15129
 17647                           
 17648                           ;../nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 17649  002C64  EE20 F00B          	lfsr	2,11
 17650  002C68  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17651  002C6A  26D9               	addwf	fsr2l,f,c
 17652  002C6C  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17653  002C6E  22DA               	addwfc	fsr2h,f,c
 17654  002C70  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
 17655  002C76  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
 17656  002C7C  006F FF7B FFE6     	movff	postinc2,postinc1
 17657  002C82  006F FF77 FFE5     	movff	postdec2,postdec1
 17658                           
 17659                           ;../nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 17660  002C88  EE20 F00A          	lfsr	2,10
 17661  002C8C  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 17662  002C8E  26D9               	addwf	fsr2l,f,c
 17663  002C90  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 17664  002C92  22DA               	addwfc	fsr2h,f,c
 17665  002C94  EE10 F002          	lfsr	1,2
 17666  002C98  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17667  002C9A  26E1               	addwf	fsr1l,f,c
 17668  002C9C  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17669  002C9E  22E2               	addwfc	fsr1h,f,c
 17670  002CA0  006F FF7F FFE7     	movff	indf2,indf1
 17671                           
 17672                           ;../nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 17673  002CA6  EE20 F003          	lfsr	2,3
 17674  002CAA  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17675  002CAC  26D9               	addwf	fsr2l,f,c
 17676  002CAE  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17677  002CB0  22DA               	addwfc	fsr2h,f,c
 17678  002CB2  0E01               	movlw	1
 17679  002CB4  6EDF               	movwf	indf2,c
 17680                           
 17681                           ;../nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
 17682  002CB6  EE20 F004          	lfsr	2,4
 17683  002CBA  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 17684  002CBC  26D9               	addwf	fsr2l,f,c
 17685  002CBE  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 17686  002CC0  22DA               	addwfc	fsr2h,f,c
 17687  002CC2  0E01               	movlw	1
 17688  002CC4  6EDF               	movwf	indf2,c
 17689                           
 17690                           ;../nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 17691  002CC6  0EAF               	movlw	low _nwkRxDuplicateRejectionTimer
 17692  002CC8  6E10               	movwf	SYS_TimerStart@timer^0,c
 17693  002CCA  0E01               	movlw	high _nwkRxDuplicateRejectionTimer
 17694  002CCC  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 17695  002CCE  ECBC  F043         	call	_SYS_TimerStart	;wreg free
 17696  002CD2  D77A               	goto	l15135
 17697  002CD4                     __end_of_nwkRxRejectDuplicate:
 17698                           	opt callstack 0
 17699                           
 17700 ;; *************** function _SYS_TimerStart *****************
 17701 ;; Defined at:
 17702 ;;		line 70 in file "../sys/sys_src/sysTimer.c"
 17703 ;; Parameters:    Size  Location     Type
 17704 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
 17705 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17706 ;; Auto vars:     Size  Location     Type
 17707 ;;		None
 17708 ;; Return value:  Size  Location     Type
 17709 ;;                  1    wreg      void 
 17710 ;; Registers used:
 17711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17712 ;; Tracked objects:
 17713 ;;		On entry : 0/0
 17714 ;;		On exit  : 0/0
 17715 ;;		Unchanged: 0/0
 17716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17721 ;;Total ram usage:        2 bytes
 17722 ;; Hardware stack levels used:    1
 17723 ;; Hardware stack levels required when called:    8
 17724 ;; This function calls:
 17725 ;;		_SYS_TimerStarted
 17726 ;;		_placeTimer
 17727 ;; This function is called by:
 17728 ;;		_nwkRxDuplicateRejectionTimerHandler
 17729 ;;		_nwkRxRejectDuplicate
 17730 ;;		_nwkTxAckWaitTimerHandler
 17731 ;;		_nwkTxDelayTimerHandler
 17732 ;;		_nwkTxTaskHandler
 17733 ;; This function uses a non-reentrant model
 17734 ;;
 17735                           
 17736                           	psect	text107
 17737  008778                     __ptext107:
 17738                           	opt callstack 0
 17739  008778                     _SYS_TimerStart:
 17740                           	opt callstack 19
 17741                           
 17742                           ;../sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);../sys/sys_src/s
      +                          ysTimer.c: 71: {;../sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 17743                           
 17744                           ;incstack = 0
 17745  008778  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 17746  00877E  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 17747  008784  EC8D  F03F         	call	_SYS_TimerStarted	;wreg free
 17748  008788  0900               	iorlw	0
 17749  00878A  A4D8               	btfss	status,2,c
 17750  00878C  0012               	return	
 17751                           
 17752                           ;../sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 17753  00878E  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
 17754  008794  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 17755  00879A  EC5B  F01C         	call	_placeTimer	;wreg free
 17756  00879E  0012               	return		;funcret
 17757  0087A0                     __end_of_SYS_TimerStart:
 17758                           	opt callstack 0
 17759                           
 17760 ;; *************** function _placeTimer *****************
 17761 ;; Defined at:
 17762 ;;		line 146 in file "../sys/sys_src/sysTimer.c"
 17763 ;; Parameters:    Size  Location     Type
 17764 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 17765 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17766 ;; Auto vars:     Size  Location     Type
 17767 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
 17768 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17769 ;;  timeout         4    7[COMRAM] unsigned long 
 17770 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
 17771 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17772 ;; Return value:  Size  Location     Type
 17773 ;;                  1    wreg      void 
 17774 ;; Registers used:
 17775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17776 ;; Tracked objects:
 17777 ;;		On entry : 0/0
 17778 ;;		On exit  : 0/0
 17779 ;;		Unchanged: 0/0
 17780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17782 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17783 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17784 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17785 ;;Total ram usage:       14 bytes
 17786 ;; Hardware stack levels used:    1
 17787 ;; Hardware stack levels required when called:    7
 17788 ;; This function calls:
 17789 ;;		Nothing
 17790 ;; This function is called by:
 17791 ;;		_SYS_TimerStart
 17792 ;;		_SYS_TimerTaskHandler
 17793 ;; This function uses a non-reentrant model
 17794 ;;
 17795                           
 17796                           	psect	text108
 17797  0038B6                     __ptext108:
 17798                           	opt callstack 0
 17799  0038B6                     _placeTimer:
 17800                           	opt callstack 21
 17801                           
 17802                           ;../sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 147: {;../sys/sys_src/sysTimer.c: 148:   if (timers)
 17803                           
 17804                           ;incstack = 0
 17805  0038B6  0100               	movlb	0	; () banked
 17806  0038B8  51E0               	movf	_timers& (0+255),w,b
 17807  0038BA  11E1               	iorwf	(_timers+1)& (0+255),w,b
 17808  0038BC  B4D8               	btfsc	status,2,c
 17809  0038BE  D0A8               	goto	l14723
 17810                           
 17811                           ; BSR set to: 0
 17812                           ;../sys/sys_src/sysTimer.c: 149:   {;../sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *pr
      +                          ev = ((void*)0);
 17813  0038C0  0E00               	movlw	0
 17814  0038C2  6E0C               	movwf	placeTimer@prev^0,c
 17815  0038C4  0E00               	movlw	0
 17816  0038C6  6E0D               	movwf	(placeTimer@prev+1)^0,c
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;../sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 17820  0038C8  EE20 F006          	lfsr	2,6
 17821  0038CC  5002               	movf	placeTimer@timer^0,w,c
 17822  0038CE  26D9               	addwf	fsr2l,f,c
 17823  0038D0  5003               	movf	(placeTimer@timer+1)^0,w,c
 17824  0038D2  22DA               	addwfc	fsr2h,f,c
 17825  0038D4  006F FF78  F008    	movff	postinc2,placeTimer@timeout
 17826  0038DA  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
 17827  0038E0  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
 17828  0038E6  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;../sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 17832  0038EC  0060  F380  F00E   	movff	_timers,placeTimer@t
 17833  0038F2  0060  F384  F00F   	movff	_timers+1,placeTimer@t+1
 17834  0038F8  D03F               	goto	l14709
 17835  0038FA                     l14699:
 17836                           
 17837                           ;../sys/sys_src/sysTimer.c: 154:     {;../sys/sys_src/sysTimer.c: 155:       if (timeout
      +                           < t->timeout)
 17838  0038FA  EE20 F002          	lfsr	2,2
 17839  0038FE  500E               	movf	placeTimer@t^0,w,c
 17840  003900  26D9               	addwf	fsr2l,f,c
 17841  003902  500F               	movf	(placeTimer@t+1)^0,w,c
 17842  003904  22DA               	addwfc	fsr2h,f,c
 17843  003906  50DE               	movf	postinc2,w,c
 17844  003908  5C08               	subwf	placeTimer@timeout^0,w,c
 17845  00390A  50DE               	movf	postinc2,w,c
 17846  00390C  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
 17847  00390E  50DE               	movf	postinc2,w,c
 17848  003910  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
 17849  003912  50DE               	movf	postinc2,w,c
 17850  003914  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
 17851  003916  B0D8               	btfsc	status,0,c
 17852  003918  D00F               	goto	l14705
 17853                           
 17854                           ;../sys/sys_src/sysTimer.c: 156:       {;../sys/sys_src/sysTimer.c: 157:          t->tim
      +                          eout -= timeout;
 17855  00391A  EE20 F002          	lfsr	2,2
 17856  00391E  500E               	movf	placeTimer@t^0,w,c
 17857  003920  26D9               	addwf	fsr2l,f,c
 17858  003922  500F               	movf	(placeTimer@t+1)^0,w,c
 17859  003924  22DA               	addwfc	fsr2h,f,c
 17860  003926  5008               	movf	placeTimer@timeout^0,w,c
 17861  003928  5EDE               	subwf	postinc2,f,c
 17862  00392A  5009               	movf	(placeTimer@timeout+1)^0,w,c
 17863  00392C  5ADE               	subwfb	postinc2,f,c
 17864  00392E  500A               	movf	(placeTimer@timeout+2)^0,w,c
 17865  003930  5ADE               	subwfb	postinc2,f,c
 17866  003932  500B               	movf	(placeTimer@timeout+3)^0,w,c
 17867  003934  5ADE               	subwfb	postinc2,f,c
 17868                           
 17869                           ;../sys/sys_src/sysTimer.c: 158:          break;
 17870  003936  D024               	goto	u14320
 17871  003938                     l14705:
 17872                           
 17873                           ;../sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 17874  003938  EE20 F002          	lfsr	2,2
 17875  00393C  500E               	movf	placeTimer@t^0,w,c
 17876  00393E  26D9               	addwf	fsr2l,f,c
 17877  003940  500F               	movf	(placeTimer@t+1)^0,w,c
 17878  003942  22DA               	addwfc	fsr2h,f,c
 17879  003944  50DE               	movf	postinc2,w,c
 17880  003946  5E08               	subwf	placeTimer@timeout^0,f,c
 17881  003948  50DE               	movf	postinc2,w,c
 17882  00394A  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
 17883  00394C  50DE               	movf	postinc2,w,c
 17884  00394E  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
 17885  003950  50DD               	movf	postdec2,w,c
 17886  003952  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
 17887                           
 17888                           ;../sys/sys_src/sysTimer.c: 163:       prev = t;
 17889  003954  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
 17890  00395A  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
 17891                           
 17892                           ;../sys/sys_src/sysTimer.c: 164:     }
 17893  003960  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
 17894  003966  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
 17895  00396C  006F FF78  F00E    	movff	postinc2,placeTimer@t
 17896  003972  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
 17897  003978                     l14709:
 17898  003978  500E               	movf	placeTimer@t^0,w,c
 17899  00397A  100F               	iorwf	(placeTimer@t+1)^0,w,c
 17900  00397C  A4D8               	btfss	status,2,c
 17901  00397E  D7BD               	goto	l14699
 17902  003980                     u14320:
 17903                           
 17904                           ;../sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 17905  003980  EE20 F002          	lfsr	2,2
 17906  003984  5002               	movf	placeTimer@timer^0,w,c
 17907  003986  26D9               	addwf	fsr2l,f,c
 17908  003988  5003               	movf	(placeTimer@timer+1)^0,w,c
 17909  00398A  22DA               	addwfc	fsr2h,f,c
 17910  00398C  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
 17911  003992  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
 17912  003998  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
 17913  00399E  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
 17914                           
 17915                           ;../sys/sys_src/sysTimer.c: 168:     if (prev)
 17916  0039A4  500C               	movf	placeTimer@prev^0,w,c
 17917  0039A6  100D               	iorwf	(placeTimer@prev+1)^0,w,c
 17918  0039A8  B4D8               	btfsc	status,2,c
 17919  0039AA  D01F               	goto	l14719
 17920                           
 17921                           ;../sys/sys_src/sysTimer.c: 169:     {;../sys/sys_src/sysTimer.c: 170:       timer->next
      +                           = prev->next;
 17922  0039AC  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 17923  0039B2  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 17924  0039B8  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
 17925  0039BE  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
 17926  0039C4  006F FF7B FFE6     	movff	postinc2,postinc1
 17927  0039CA  006F FF77 FFE5     	movff	postdec2,postdec1
 17928                           
 17929                           ;../sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 17930  0039D0  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 17931  0039D6  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 17932  0039DC  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
 17933  0039E2  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
 17934                           
 17935                           ;../sys/sys_src/sysTimer.c: 172:     }
 17936  0039E8  0012               	return	
 17937  0039EA                     l14719:
 17938                           
 17939                           ;../sys/sys_src/sysTimer.c: 174:     {;../sys/sys_src/sysTimer.c: 175:       timer->next
      +                           = timers;
 17940  0039EA  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 17941  0039F0  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 17942  0039F6  0060  F383  FFDE   	movff	_timers,postinc2
 17943  0039FC  0060  F387  FFDD   	movff	_timers+1,postdec2
 17944  003A02                     l14721:
 17945                           
 17946                           ;../sys/sys_src/sysTimer.c: 176:       timers = timer;
 17947  003A02  0060  F008  F0E0   	movff	placeTimer@timer,_timers
 17948  003A08  0060  F00C  F0E1   	movff	placeTimer@timer+1,_timers+1
 17949  003A0E  0012               	return	
 17950  003A10                     l14723:
 17951                           
 17952                           ; BSR set to: 0
 17953                           ;../sys/sys_src/sysTimer.c: 180:   {;../sys/sys_src/sysTimer.c: 181:     timer->next = (
      +                          (void*)0);
 17954  003A10  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 17955  003A16  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 17956  003A1C  0E00               	movlw	0
 17957  003A1E  6EDE               	movwf	postinc2,c
 17958  003A20  0E00               	movlw	0
 17959  003A22  6EDD               	movwf	postdec2,c
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;../sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 17963  003A24  EE20 F006          	lfsr	2,6
 17964  003A28  5002               	movf	placeTimer@timer^0,w,c
 17965  003A2A  26D9               	addwf	fsr2l,f,c
 17966  003A2C  5003               	movf	(placeTimer@timer+1)^0,w,c
 17967  003A2E  22DA               	addwfc	fsr2h,f,c
 17968  003A30  EE10 F002          	lfsr	1,2
 17969  003A34  5002               	movf	placeTimer@timer^0,w,c
 17970  003A36  26E1               	addwf	fsr1l,f,c
 17971  003A38  5003               	movf	(placeTimer@timer+1)^0,w,c
 17972  003A3A  22E2               	addwfc	fsr1h,f,c
 17973  003A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 17974  003A42  006F FF7B FFE6     	movff	postinc2,postinc1
 17975  003A48  006F FF7B FFE6     	movff	postinc2,postinc1
 17976  003A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 17977  003A54  D7D6               	goto	l14721
 17978  003A56                     __end_of_placeTimer:
 17979                           	opt callstack 0
 17980                           
 17981 ;; *************** function _SYS_TimerStarted *****************
 17982 ;; Defined at:
 17983 ;;		line 102 in file "../sys/sys_src/sysTimer.c"
 17984 ;; Parameters:    Size  Location     Type
 17985 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 17986 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
 17989 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17990 ;; Return value:  Size  Location     Type
 17991 ;;                  1    wreg      _Bool 
 17992 ;; Registers used:
 17993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17994 ;; Tracked objects:
 17995 ;;		On entry : 0/0
 17996 ;;		On exit  : 0/0
 17997 ;;		Unchanged: 0/0
 17998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18002 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18003 ;;Total ram usage:        4 bytes
 18004 ;; Hardware stack levels used:    1
 18005 ;; Hardware stack levels required when called:    7
 18006 ;; This function calls:
 18007 ;;		Nothing
 18008 ;; This function is called by:
 18009 ;;		_SYS_TimerStart
 18010 ;; This function uses a non-reentrant model
 18011 ;;
 18012                           
 18013                           	psect	text109
 18014  007F1A                     __ptext109:
 18015                           	opt callstack 0
 18016  007F1A                     _SYS_TimerStarted:
 18017                           	opt callstack 19
 18018                           
 18019                           ;../sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 103: {;../sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t;
      +                           t = t->next)
 18020                           
 18021                           ;incstack = 0
 18022  007F1A  0060  F380  F004   	movff	_timers,SYS_TimerStarted@t
 18023  007F20  0060  F384  F005   	movff	_timers+1,SYS_TimerStarted@t+1
 18024  007F26  D015               	goto	l14685
 18025  007F28                     l14677:
 18026                           
 18027                           ;../sys/sys_src/sysTimer.c: 105:     if (t == timer)
 18028  007F28  5002               	movf	SYS_TimerStarted@timer^0,w,c
 18029  007F2A  1804               	xorwf	SYS_TimerStarted@t^0,w,c
 18030  007F2C  E106               	bnz	l14683
 18031  007F2E  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
 18032  007F30  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
 18033  007F32  A4D8               	btfss	status,2,c
 18034  007F34  D002               	goto	l14683
 18035                           
 18036                           ;../sys/sys_src/sysTimer.c: 106:       return 1;
 18037  007F36  0E01               	movlw	1
 18038  007F38  0012               	return	
 18039  007F3A                     l14683:
 18040  007F3A  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 18041  007F40  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 18042  007F46  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
 18043  007F4C  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
 18044  007F52                     l14685:
 18045  007F52  5004               	movf	SYS_TimerStarted@t^0,w,c
 18046  007F54  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
 18047  007F56  A4D8               	btfss	status,2,c
 18048  007F58  D7E7               	goto	l14677
 18049                           
 18050                           ;../sys/sys_src/sysTimer.c: 107:   return 0;
 18051  007F5A  0E00               	movlw	0
 18052  007F5C  0012               	return		;funcret
 18053  007F5E                     __end_of_SYS_TimerStarted:
 18054                           	opt callstack 0
 18055                           
 18056 ;; *************** function _nwkRouteFrameReceived *****************
 18057 ;; Defined at:
 18058 ;;		line 194 in file "../nwk/nwk_src/nwkRoute.c"
 18059 ;; Parameters:    Size  Location     Type
 18060 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
 18061 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18062 ;; Auto vars:     Size  Location     Type
 18063 ;;  discovery       1   16[COMRAM] _Bool 
 18064 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
 18065 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18066 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
 18067 ;;		 -> nwkRouteTable(70), NULL(0), 
 18068 ;; Return value:  Size  Location     Type
 18069 ;;                  1    wreg      void 
 18070 ;; Registers used:
 18071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18072 ;; Tracked objects:
 18073 ;;		On entry : 3F/1
 18074 ;;		On exit  : 0/0
 18075 ;;		Unchanged: 0/0
 18076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18078 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18080 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18081 ;;Total ram usage:       12 bytes
 18082 ;; Hardware stack levels used:    1
 18083 ;; Hardware stack levels required when called:    8
 18084 ;; This function calls:
 18085 ;;		_NWK_RouteFindEntry
 18086 ;;		_NWK_RouteNewEntry
 18087 ;; This function is called by:
 18088 ;;		_nwkRxHandleReceivedFrame
 18089 ;; This function uses a non-reentrant model
 18090 ;;
 18091                           
 18092                           	psect	text110
 18093  0036D4                     __ptext110:
 18094                           	opt callstack 0
 18095  0036D4                     _nwkRouteFrameReceived:
 18096                           	opt callstack 18
 18097                           
 18098                           ; BSR set to: 1
 18099                           ;../nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);../nwk/nw
      +                          k_src/nwkRoute.c: 195: {;../nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &f
      +                          rame->header;
 18100                           
 18101                           ;incstack = 0
 18102  0036D4  0E02               	movlw	2
 18103  0036D6  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
 18104  0036D8  6E15               	movwf	nwkRouteFrameReceived@header^0,c
 18105  0036DA  0E00               	movlw	0
 18106  0036DC  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
 18107  0036DE  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
 18108                           
 18109                           ; BSR set to: 1
 18110                           ;../nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;../nwk/nwk_src/nwkRoute
      +                          .c: 200:   if ((header->macSrcAddr & 0x8000) &&
 18111  0036E0  EE20 F007          	lfsr	2,7
 18112  0036E4  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18113  0036E6  26D9               	addwf	fsr2l,f,c
 18114  0036E8  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18115  0036EA  22DA               	addwfc	fsr2h,f,c
 18116  0036EC  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
 18117  0036F2  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
 18118  0036F8  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
 18119  0036FA  D015               	goto	l15001
 18120                           
 18121                           ; BSR set to: 1
 18122  0036FC  EE20 F00B          	lfsr	2,11
 18123  003700  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18124  003702  26D9               	addwf	fsr2l,f,c
 18125  003704  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18126  003706  22DA               	addwfc	fsr2h,f,c
 18127  003708  EE10 F007          	lfsr	1,7
 18128  00370C  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18129  00370E  26E1               	addwf	fsr1l,f,c
 18130  003710  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18131  003712  22E2               	addwfc	fsr1h,f,c
 18132  003714  50DE               	movf	postinc2,w,c
 18133  003716  18E6               	xorwf	postinc1,w,c
 18134  003718  E105               	bnz	u14520
 18135  00371A  50DE               	movf	postinc2,w,c
 18136  00371C  18E6               	xorwf	postinc1,w,c
 18137  00371E  A4D8               	btfss	status,2,c
 18138  003720  0012               	return	
 18139  003722  D001               	goto	l15001
 18140  003724                     u14520:
 18141  003724  0012               	return	
 18142  003726                     l15001:
 18143                           
 18144                           ; BSR set to: 1
 18145                           ;../nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
 18146  003726  EE20 F003          	lfsr	2,3
 18147  00372A  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18148  00372C  26D9               	addwf	fsr2l,f,c
 18149  00372E  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18150  003730  22DA               	addwfc	fsr2h,f,c
 18151  003732  28DE               	incf	postinc2,w,c
 18152  003734  E103               	bnz	l15005
 18153  003736  28DE               	incf	postinc2,w,c
 18154  003738  B4D8               	btfsc	status,2,c
 18155  00373A  0012               	return	
 18156  00373C                     l15005:
 18157                           
 18158                           ; BSR set to: 1
 18159                           ;../nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 18160  00373C  EE20 F00B          	lfsr	2,11
 18161  003740  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18162  003742  26D9               	addwf	fsr2l,f,c
 18163  003744  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18164  003746  22DA               	addwfc	fsr2h,f,c
 18165  003748  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 18166  00374E  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 18167  003754  0E00               	movlw	0
 18168  003756  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 18169  003758  EC32  F03B         	call	_NWK_RouteFindEntry	;wreg free
 18170  00375C  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 18171  003762  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 18172                           
 18173                           ;../nwk/nwk_src/nwkRoute.c: 209:   if (entry)
 18174  003768  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18175  00376A  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18176  00376C  B4D8               	btfsc	status,2,c
 18177  00376E  D067               	goto	l15027
 18178                           
 18179                           ;../nwk/nwk_src/nwkRoute.c: 210:   {;../nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery
      +                           = (0xffff == header->macDstAddr &&
 18180  003770  0E00               	movlw	0
 18181  003772  6E12               	movwf	_nwkRouteFrameReceived$4119^0,c
 18182  003774  EE20 F005          	lfsr	2,5
 18183  003778  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18184  00377A  26D9               	addwf	fsr2l,f,c
 18185  00377C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18186  00377E  22DA               	addwfc	fsr2h,f,c
 18187  003780  28DE               	incf	postinc2,w,c
 18188  003782  E113               	bnz	l1933
 18189  003784  28DE               	incf	postinc2,w,c
 18190  003786  A4D8               	btfss	status,2,c
 18191  003788  D010               	goto	l1933
 18192  00378A  EE20 F00D          	lfsr	2,13
 18193  00378E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18194  003790  26D9               	addwf	fsr2l,f,c
 18195  003792  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18196  003794  22DA               	addwfc	fsr2h,f,c
 18197  003796  0101               	movlb	1	; () banked
 18198  003798  5100               	movf	_nwkIb& (0+255),w,b
 18199  00379A  18DE               	xorwf	postinc2,w,c
 18200  00379C  E106               	bnz	l1933
 18201  00379E  5101               	movf	(_nwkIb+1)& (0+255),w,b
 18202  0037A0  18DE               	xorwf	postinc2,w,c
 18203  0037A2  A4D8               	btfss	status,2,c
 18204  0037A4  D002               	goto	l1933
 18205                           
 18206                           ; BSR set to: 1
 18207  0037A6  0E01               	movlw	1
 18208  0037A8  6E12               	movwf	_nwkRouteFrameReceived$4119^0,c
 18209  0037AA                     l1933:
 18210  0037AA  5012               	movf	_nwkRouteFrameReceived$4119^0,w,c
 18211  0037AC  B4D8               	btfsc	status,2,c
 18212  0037AE  D002               	goto	u14570
 18213  0037B0  0E01               	movlw	1
 18214  0037B2  D001               	goto	u14580
 18215  0037B4                     u14570:
 18216  0037B4  0E00               	movlw	0
 18217  0037B6                     u14580:
 18218  0037B6  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
 18219                           
 18220                           ;../nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && fr
      +                          ame->rx.lqi > entry->lqi) || discovery)
 18221  0037B8  EE20 F007          	lfsr	2,7
 18222  0037BC  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18223  0037BE  26D9               	addwf	fsr2l,f,c
 18224  0037C0  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18225  0037C2  22DA               	addwfc	fsr2h,f,c
 18226  0037C4  EE10 F003          	lfsr	1,3
 18227  0037C8  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18228  0037CA  26E1               	addwf	fsr1l,f,c
 18229  0037CC  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18230  0037CE  22E2               	addwfc	fsr1h,f,c
 18231  0037D0  50DE               	movf	postinc2,w,c
 18232  0037D2  18E6               	xorwf	postinc1,w,c
 18233  0037D4  E104               	bnz	u14590
 18234  0037D6  50DE               	movf	postinc2,w,c
 18235  0037D8  18E6               	xorwf	postinc1,w,c
 18236  0037DA  B4D8               	btfsc	status,2,c
 18237  0037DC  D010               	goto	u14600
 18238  0037DE                     u14590:
 18239  0037DE  EE20 F083          	lfsr	2,131
 18240  0037E2  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 18241  0037E4  26D9               	addwf	fsr2l,f,c
 18242  0037E6  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 18243  0037E8  22DA               	addwfc	fsr2h,f,c
 18244  0037EA  EE10 F006          	lfsr	1,6
 18245  0037EE  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18246  0037F0  26E1               	addwf	fsr1l,f,c
 18247  0037F2  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18248  0037F4  22E2               	addwfc	fsr1h,f,c
 18249  0037F6  50DE               	movf	postinc2,w,c
 18250  0037F8  5CE6               	subwf	postinc1,w,c
 18251  0037FA  A0D8               	btfss	status,0,c
 18252  0037FC  D003               	goto	u14610
 18253  0037FE                     u14600:
 18254  0037FE  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
 18255  003800  B4D8               	btfsc	status,2,c
 18256  003802  D049               	goto	l15033
 18257  003804                     u14610:
 18258                           
 18259                           ;../nwk/nwk_src/nwkRoute.c: 215:     {;../nwk/nwk_src/nwkRoute.c: 216:       entry->next
      +                          HopAddr = header->macSrcAddr;
 18260  003804  EE20 F007          	lfsr	2,7
 18261  003808  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18262  00380A  26D9               	addwf	fsr2l,f,c
 18263  00380C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18264  00380E  22DA               	addwfc	fsr2h,f,c
 18265  003810  EE10 F003          	lfsr	1,3
 18266  003814  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18267  003816  26E1               	addwf	fsr1l,f,c
 18268  003818  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18269  00381A  22E2               	addwfc	fsr1h,f,c
 18270  00381C  006F FF7B FFE6     	movff	postinc2,postinc1
 18271  003822  006F FF77 FFE5     	movff	postdec2,postdec1
 18272                           
 18273                           ;../nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
 18274  003828  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 18275  00382E  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 18276  003834  50DF               	movf	indf2,w,c
 18277  003836  0B0F               	andlw	-241
 18278  003838  0930               	iorlw	48
 18279  00383A  6EDF               	movwf	indf2,c
 18280  00383C  D02C               	goto	l15033
 18281  00383E                     l15027:
 18282                           
 18283                           ;../nwk/nwk_src/nwkRoute.c: 221:   {;../nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_Rou
      +                          teNewEntry();
 18284  00383E  EC12  F031         	call	_NWK_RouteNewEntry	;wreg free
 18285  003842  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 18286  003848  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 18287                           
 18288                           ;../nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
 18289  00384E  EE20 F00B          	lfsr	2,11
 18290  003852  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18291  003854  26D9               	addwf	fsr2l,f,c
 18292  003856  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18293  003858  22DA               	addwfc	fsr2h,f,c
 18294  00385A  EE10 F001          	lfsr	1,1
 18295  00385E  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18296  003860  26E1               	addwf	fsr1l,f,c
 18297  003862  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18298  003864  22E2               	addwfc	fsr1h,f,c
 18299  003866  006F FF7B FFE6     	movff	postinc2,postinc1
 18300  00386C  006F FF77 FFE5     	movff	postdec2,postdec1
 18301                           
 18302                           ;../nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
 18303  003872  EE20 F007          	lfsr	2,7
 18304  003876  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 18305  003878  26D9               	addwf	fsr2l,f,c
 18306  00387A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 18307  00387C  22DA               	addwfc	fsr2h,f,c
 18308  00387E  EE10 F003          	lfsr	1,3
 18309  003882  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18310  003884  26E1               	addwf	fsr1l,f,c
 18311  003886  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18312  003888  22E2               	addwfc	fsr1h,f,c
 18313  00388A  006F FF7B FFE6     	movff	postinc2,postinc1
 18314  003890  006F FF77 FFE5     	movff	postdec2,postdec1
 18315  003896                     l15033:
 18316                           
 18317                           ;../nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
 18318  003896  EE20 F083          	lfsr	2,131
 18319  00389A  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 18320  00389C  26D9               	addwf	fsr2l,f,c
 18321  00389E  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 18322  0038A0  22DA               	addwfc	fsr2h,f,c
 18323  0038A2  EE10 F006          	lfsr	1,6
 18324  0038A6  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 18325  0038A8  26E1               	addwf	fsr1l,f,c
 18326  0038AA  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 18327  0038AC  22E2               	addwfc	fsr1h,f,c
 18328  0038AE  006F FF7F FFE7     	movff	indf2,indf1
 18329  0038B4  0012               	return		;funcret
 18330  0038B6                     __end_of_nwkRouteFrameReceived:
 18331                           	opt callstack 0
 18332                           
 18333 ;; *************** function _NWK_RouteNewEntry *****************
 18334 ;; Defined at:
 18335 ;;		line 105 in file "../nwk/nwk_src/nwkRoute.c"
 18336 ;; Parameters:    Size  Location     Type
 18337 ;;		None
 18338 ;; Auto vars:     Size  Location     Type
 18339 ;;  i               1    5[COMRAM] unsigned char 
 18340 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
 18341 ;;		 -> nwkRouteTable(70), NULL(0), 
 18342 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
 18343 ;;		 -> nwkRouteTable(70), 
 18344 ;; Return value:  Size  Location     Type
 18345 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 18346 ;; Registers used:
 18347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18348 ;; Tracked objects:
 18349 ;;		On entry : 0/1
 18350 ;;		On exit  : 0/0
 18351 ;;		Unchanged: 0/0
 18352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18354 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18355 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18356 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18357 ;;Total ram usage:        9 bytes
 18358 ;; Hardware stack levels used:    1
 18359 ;; Hardware stack levels required when called:    7
 18360 ;; This function calls:
 18361 ;;		Nothing
 18362 ;; This function is called by:
 18363 ;;		_nwkRouteFrameReceived
 18364 ;; This function uses a non-reentrant model
 18365 ;;
 18366                           
 18367                           	psect	text111
 18368  006224                     __ptext111:
 18369                           	opt callstack 0
 18370  006224                     _NWK_RouteNewEntry:
 18371                           	opt callstack 18
 18372                           
 18373                           ;../nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 18374                           
 18375                           ;incstack = 0
 18376  006224  0E84               	movlw	low _nwkRouteTable
 18377  006226  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
 18378  006228  0E02               	movlw	high _nwkRouteTable
 18379  00622A  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
 18380                           
 18381                           ;../nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
 18382  00622C  0E00               	movlw	0
 18383  00622E  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
 18384  006230  0E00               	movlw	0
 18385  006232  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
 18386                           
 18387                           ;../nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
 18388  006234  0E00               	movlw	0
 18389  006236  6E06               	movwf	NWK_RouteNewEntry@i^0,c
 18390  006238                     l14839:
 18391                           
 18392                           ;../nwk/nwk_src/nwkRoute.c: 111:   {;../nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed
      +                          )
 18393  006238  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 18394  00623E  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 18395  006244  B0DF               	btfsc	indf2,0,c
 18396  006246  D02A               	goto	l14853
 18397                           
 18398                           ;../nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
 18399  006248  EE20 F005          	lfsr	2,5
 18400  00624C  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 18401  00624E  26D9               	addwf	fsr2l,f,c
 18402  006250  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 18403  006252  22DA               	addwfc	fsr2h,f,c
 18404  006254  50DF               	movf	indf2,w,c
 18405  006256  A4D8               	btfss	status,2,c
 18406  006258  D007               	goto	l14847
 18407                           
 18408                           ;../nwk/nwk_src/nwkRoute.c: 116:     {;../nwk/nwk_src/nwkRoute.c: 117:       entry = ite
      +                          r;
 18409  00625A  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 18410  006260  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 18411                           
 18412                           ;../nwk/nwk_src/nwkRoute.c: 118:       break;
 18413  006266  D022               	goto	u14480
 18414  006268                     l14847:
 18415                           
 18416                           ;../nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank
      +                          )
 18417  006268  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18418  00626A  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18419  00626C  B4D8               	btfsc	status,2,c
 18420  00626E  D010               	goto	u14470
 18421  006270  EE20 F005          	lfsr	2,5
 18422  006274  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18423  006276  26D9               	addwf	fsr2l,f,c
 18424  006278  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18425  00627A  22DA               	addwfc	fsr2h,f,c
 18426  00627C  EE10 F005          	lfsr	1,5
 18427  006280  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 18428  006282  26E1               	addwf	fsr1l,f,c
 18429  006284  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 18430  006286  22E2               	addwfc	fsr1h,f,c
 18431  006288  50DE               	movf	postinc2,w,c
 18432  00628A  5CE6               	subwf	postinc1,w,c
 18433  00628C  B0D8               	btfsc	status,0,c
 18434  00628E  D006               	goto	l14853
 18435  006290                     u14470:
 18436                           
 18437                           ;../nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
 18438  006290  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 18439  006296  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 18440  00629C                     l14853:
 18441  00629C  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
 18442  00629E  0E07               	movlw	7
 18443  0062A0  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
 18444  0062A2  0E00               	movlw	0
 18445  0062A4  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
 18446  0062A6  0E09               	movlw	9
 18447  0062A8  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
 18448  0062AA  D7C6               	goto	l14839
 18449  0062AC                     u14480:
 18450                           
 18451                           ;../nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
 18452  0062AC  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 18453  0062B2  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 18454  0062B8  92DF               	bcf	indf2,1,c
 18455                           
 18456                           ;../nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
 18457  0062BA  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 18458  0062C0  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 18459  0062C6  50DF               	movf	indf2,w,c
 18460  0062C8  0B0F               	andlw	-241
 18461  0062CA  0930               	iorlw	48
 18462  0062CC  6EDF               	movwf	indf2,c
 18463                           
 18464                           ;../nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
 18465  0062CE  EE20 F005          	lfsr	2,5
 18466  0062D2  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 18467  0062D4  26D9               	addwf	fsr2l,f,c
 18468  0062D6  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 18469  0062D8  22DA               	addwfc	fsr2h,f,c
 18470  0062DA  0E80               	movlw	128
 18471  0062DC  6EDF               	movwf	indf2,c
 18472                           
 18473                           ;../nwk/nwk_src/nwkRoute.c: 129:   return entry;
 18474  0062DE  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 18475  0062E4  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 18476  0062EA  0012               	return		;funcret
 18477  0062EC                     __end_of_NWK_RouteNewEntry:
 18478                           	opt callstack 0
 18479                           
 18480 ;; *************** function _nwkRxHandleIndication *****************
 18481 ;; Defined at:
 18482 ;;		line 453 in file "../nwk/nwk_src/nwkRx.c"
 18483 ;; Parameters:    Size  Location     Type
 18484 ;;  frame           2  117[BANK0 ] PTR struct NwkFrame_t
 18485 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18486 ;; Auto vars:     Size  Location     Type
 18487 ;;  ack             1  121[BANK0 ] _Bool 
 18488 ;; Return value:  Size  Location     Type
 18489 ;;                  1    wreg      void 
 18490 ;; Registers used:
 18491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18492 ;; Tracked objects:
 18493 ;;		On entry : 2/1
 18494 ;;		On exit  : 0/0
 18495 ;;		Unchanged: 0/0
 18496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18497 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18500 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18501 ;;Total ram usage:        5 bytes
 18502 ;; Hardware stack levels used:    1
 18503 ;; Hardware stack levels required when called:   18
 18504 ;; This function calls:
 18505 ;;		_nwkRxIndicateFrame
 18506 ;;		_nwkRxSendAck
 18507 ;; This function is called by:
 18508 ;;		_nwkRxTaskHandler
 18509 ;; This function uses a non-reentrant model
 18510 ;;
 18511                           
 18512                           	psect	text112
 18513  005FC0                     __ptext112:
 18514                           	opt callstack 0
 18515  005FC0                     _nwkRxHandleIndication:
 18516                           	opt callstack 9
 18517                           
 18518                           ;../nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkRx.c: 454: {;../nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;../nwk/nwk_src/nwkRx
      +                          .c: 457:   nwkRxAckControl = 0;
 18519                           
 18520                           ;incstack = 0
 18521  005FC0  0E00               	movlw	0
 18522  005FC2  0101               	movlb	1	; () banked
 18523  005FC4  6F61               	movwf	_nwkRxAckControl& (0+255),b
 18524                           
 18525                           ; BSR set to: 1
 18526                           ;../nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 18527  005FC6  0060  F354  F0BB   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 18528  005FCC  0060  F358  F0BC   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 18529  005FD2  EC74  F018         	call	_nwkRxIndicateFrame	;wreg free
 18530  005FD6  0100               	movlb	0	; () banked
 18531  005FD8  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18532                           
 18533                           ; BSR set to: 0
 18534                           ;../nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 18535  005FDA  EE20 F00B          	lfsr	2,11
 18536  005FDE  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18537  005FE0  26D9               	addwf	fsr2l,f,c
 18538  005FE2  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18539  005FE4  22DA               	addwfc	fsr2h,f,c
 18540  005FE6  B0DF               	btfsc	indf2,0,c
 18541  005FE8  D002               	goto	l15757
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;../nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 18545  005FEA  0E00               	movlw	0
 18546  005FEC  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18547  005FEE                     l15757:
 18548                           
 18549                           ; BSR set to: 0
 18550                           ;../nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 18551  005FEE  EE20 F007          	lfsr	2,7
 18552  005FF2  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18553  005FF4  26D9               	addwf	fsr2l,f,c
 18554  005FF6  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18555  005FF8  22DA               	addwfc	fsr2h,f,c
 18556  005FFA  28DE               	incf	postinc2,w,c
 18557  005FFC  E11C               	bnz	l15765
 18558  005FFE  28DE               	incf	postinc2,w,c
 18559  006000  A4D8               	btfss	status,2,c
 18560  006002  D019               	goto	l15765
 18561                           
 18562                           ; BSR set to: 0
 18563  006004  EE20 F00F          	lfsr	2,15
 18564  006008  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18565  00600A  26D9               	addwf	fsr2l,f,c
 18566  00600C  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18567  00600E  22DA               	addwfc	fsr2h,f,c
 18568  006010  0101               	movlb	1	; () banked
 18569  006012  5100               	movf	_nwkIb& (0+255),w,b
 18570  006014  18DE               	xorwf	postinc2,w,c
 18571  006016  E10F               	bnz	l15765
 18572  006018  5101               	movf	(_nwkIb+1)& (0+255),w,b
 18573  00601A  18DE               	xorwf	postinc2,w,c
 18574  00601C  A4D8               	btfss	status,2,c
 18575  00601E  D00B               	goto	l15765
 18576                           
 18577                           ; BSR set to: 1
 18578  006020  0100               	movlb	0	; () banked
 18579  006022  EE20 F00B          	lfsr	2,11
 18580  006026  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18581  006028  26D9               	addwf	fsr2l,f,c
 18582  00602A  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18583  00602C  22DA               	addwfc	fsr2h,f,c
 18584  00602E  B6DF               	btfsc	indf2,3,c
 18585  006030  D002               	goto	l15765
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;../nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 18589  006032  0E01               	movlw	1
 18590  006034  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18591  006036                     l15765:
 18592                           
 18593                           ;../nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 18594  006036  0100               	movlb	0	; () banked
 18595  006038  EE20 F005          	lfsr	2,5
 18596  00603C  51D5               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 18597  00603E  26D9               	addwf	fsr2l,f,c
 18598  006040  51D6               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 18599  006042  22DA               	addwfc	fsr2h,f,c
 18600  006044  28DE               	incf	postinc2,w,c
 18601  006046  E105               	bnz	l15769
 18602  006048  28DE               	incf	postinc2,w,c
 18603  00604A  A4D8               	btfss	status,2,c
 18604  00604C  D002               	goto	l15769
 18605                           
 18606                           ; BSR set to: 0
 18607                           ;../nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 18608  00604E  0E00               	movlw	0
 18609  006050  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18610  006052                     l15769:
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;../nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 18614  006052  0101               	movlb	1	; () banked
 18615  006054  2900               	incf	_nwkIb& (0+255),w,b
 18616  006056  E106               	bnz	l2184
 18617  006058  2901               	incf	(_nwkIb+1)& (0+255),w,b
 18618  00605A  A4D8               	btfss	status,2,c
 18619  00605C  D003               	goto	l2184
 18620                           
 18621                           ; BSR set to: 1
 18622                           ;../nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 18623  00605E  0E00               	movlw	0
 18624  006060  0100               	movlb	0	; () banked
 18625  006062  6FD9               	movwf	nwkRxHandleIndication@ack& (0+255),b
 18626  006064                     l2184:
 18627                           
 18628                           ;../nwk/nwk_src/nwkRx.c: 474:   if (ack)
 18629  006064  0100               	movlb	0	; () banked
 18630  006066  51D9               	movf	nwkRxHandleIndication@ack& (0+255),w,b
 18631  006068  B4D8               	btfsc	status,2,c
 18632  00606A  D008               	goto	l15775
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;../nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 18636  00606C  0060  F354  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 18637  006072  0060  F358  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 18638  006078  ECB6  F029         	call	_nwkRxSendAck	;wreg free
 18639  00607C                     l15775:
 18640                           
 18641                           ;../nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 18642  00607C  0060  F357  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 18643  006082  0060  F35B  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 18644  006088  0E24               	movlw	36
 18645  00608A  6EDF               	movwf	indf2,c
 18646  00608C  0012               	return		;funcret
 18647  00608E                     __end_of_nwkRxHandleIndication:
 18648                           	opt callstack 0
 18649                           
 18650 ;; *************** function _nwkRxSendAck *****************
 18651 ;; Defined at:
 18652 ;;		line 136 in file "../nwk/nwk_src/nwkRx.c"
 18653 ;; Parameters:    Size  Location     Type
 18654 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
 18655 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18656 ;; Auto vars:     Size  Location     Type
 18657 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
 18658 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18659 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
 18660 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18661 ;; Return value:  Size  Location     Type
 18662 ;;                  1    wreg      void 
 18663 ;; Registers used:
 18664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18665 ;; Tracked objects:
 18666 ;;		On entry : 3F/0
 18667 ;;		On exit  : 0/0
 18668 ;;		Unchanged: 0/0
 18669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18671 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18674 ;;Total ram usage:        6 bytes
 18675 ;; Hardware stack levels used:    1
 18676 ;; Hardware stack levels required when called:   11
 18677 ;; This function calls:
 18678 ;;		_nwkFrameAlloc
 18679 ;;		_nwkFrameCommandInit
 18680 ;;		_nwkTxFrame
 18681 ;; This function is called by:
 18682 ;;		_nwkRxHandleIndication
 18683 ;; This function uses a non-reentrant model
 18684 ;;
 18685                           
 18686                           	psect	text113
 18687  00536C                     __ptext113:
 18688                           	opt callstack 0
 18689  00536C                     _nwkRxSendAck:
 18690                           	opt callstack 15
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;../nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkRx.c: 137: {;../nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;../nwk/nwk_src/nwkRx.c:
      +                           139:   NwkCommandAck_t *command;;../nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack 
      +                          = nwkFrameAlloc()))
 18694                           
 18695                           ;incstack = 0
 18696  00536C  ECF0  F032         	call	_nwkFrameAlloc	;wreg free
 18697  005370  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 18698  005376  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 18699  00537C  502E               	movf	nwkRxSendAck@ack^0,w,c
 18700  00537E  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
 18701  005380  B4D8               	btfsc	status,2,c
 18702  005382  0012               	return	
 18703                           
 18704                           ;../nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 18705  005384  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 18706  00538A  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 18707  005390  EC34  F040         	call	_nwkFrameCommandInit	;wreg free
 18708                           
 18709                           ; BSR set to: 1
 18710                           ;../nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 18711  005394  EE20 F001          	lfsr	2,1
 18712  005398  502E               	movf	nwkRxSendAck@ack^0,w,c
 18713  00539A  26D9               	addwf	fsr2l,f,c
 18714  00539C  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18715  00539E  22DA               	addwfc	fsr2h,f,c
 18716  0053A0  0E03               	movlw	3
 18717  0053A2  26DF               	addwf	indf2,f,c
 18718                           
 18719                           ; BSR set to: 1
 18720                           ;../nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
 18721  0053A4  EE20 F087          	lfsr	2,135
 18722  0053A8  502E               	movf	nwkRxSendAck@ack^0,w,c
 18723  0053AA  26D9               	addwf	fsr2l,f,c
 18724  0053AC  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18725  0053AE  22DA               	addwfc	fsr2h,f,c
 18726  0053B0  0E00               	movlw	0
 18727  0053B2  6EDE               	movwf	postinc2,c
 18728  0053B4  0E00               	movlw	0
 18729  0053B6  6EDD               	movwf	postdec2,c
 18730                           
 18731                           ; BSR set to: 1
 18732                           ;../nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.secur
      +                          ity;
 18733  0053B8  EE20 F00B          	lfsr	2,11
 18734  0053BC  502A               	movf	nwkRxSendAck@frame^0,w,c
 18735  0053BE  26D9               	addwf	fsr2l,f,c
 18736  0053C0  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18737  0053C2  22DA               	addwfc	fsr2h,f,c
 18738  0053C4  EE10 F00B          	lfsr	1,11
 18739  0053C8  502E               	movf	nwkRxSendAck@ack^0,w,c
 18740  0053CA  26E1               	addwf	fsr1l,f,c
 18741  0053CC  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18742  0053CE  22E2               	addwfc	fsr1h,f,c
 18743  0053D0  B2DF               	btfsc	indf2,1,c
 18744  0053D2  D002               	bra	u14695
 18745  0053D4  92E7               	bcf	indf1,1,c
 18746  0053D6  D001               	bra	u14696
 18747  0053D8                     u14695:
 18748  0053D8  82E7               	bsf	indf1,1,c
 18749  0053DA                     u14696:
 18750                           
 18751                           ;../nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 18752  0053DA  EE20 F00D          	lfsr	2,13
 18753  0053DE  502A               	movf	nwkRxSendAck@frame^0,w,c
 18754  0053E0  26D9               	addwf	fsr2l,f,c
 18755  0053E2  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18756  0053E4  22DA               	addwfc	fsr2h,f,c
 18757  0053E6  EE10 F00F          	lfsr	1,15
 18758  0053EA  502E               	movf	nwkRxSendAck@ack^0,w,c
 18759  0053EC  26E1               	addwf	fsr1l,f,c
 18760  0053EE  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18761  0053F0  22E2               	addwfc	fsr1h,f,c
 18762  0053F2  006F FF7B FFE6     	movff	postinc2,postinc1
 18763  0053F8  006F FF77 FFE5     	movff	postdec2,postdec1
 18764                           
 18765                           ;../nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 18766  0053FE  EE20 F081          	lfsr	2,129
 18767  005402  502E               	movf	nwkRxSendAck@ack^0,w,c
 18768  005404  26D9               	addwf	fsr2l,f,c
 18769  005406  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 18770  005408  22DA               	addwfc	fsr2h,f,c
 18771  00540A  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
 18772  005410  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
 18773                           
 18774                           ;../nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 18775  005416  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
 18776  00541C  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 18777  005422  0E00               	movlw	0
 18778  005424  6EDF               	movwf	indf2,c
 18779                           
 18780                           ;../nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 18781  005426  EE20 F002          	lfsr	2,2
 18782  00542A  502C               	movf	nwkRxSendAck@command^0,w,c
 18783  00542C  26D9               	addwf	fsr2l,f,c
 18784  00542E  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 18785  005430  22DA               	addwfc	fsr2h,f,c
 18786  005432  0060  F587  FFDF   	movff	_nwkRxAckControl,indf2
 18787                           
 18788                           ;../nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 18789  005438  EE20 F00C          	lfsr	2,12
 18790  00543C  502A               	movf	nwkRxSendAck@frame^0,w,c
 18791  00543E  26D9               	addwf	fsr2l,f,c
 18792  005440  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 18793  005442  22DA               	addwfc	fsr2h,f,c
 18794  005444  EE10 F001          	lfsr	1,1
 18795  005448  502C               	movf	nwkRxSendAck@command^0,w,c
 18796  00544A  26E1               	addwf	fsr1l,f,c
 18797  00544C  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 18798  00544E  22E2               	addwfc	fsr1h,f,c
 18799  005450  006F FF7F FFE7     	movff	indf2,indf1
 18800                           
 18801                           ;../nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 18802  005456  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 18803  00545C  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 18804  005462  ECF0  F01D         	call	_nwkTxFrame	;wreg free
 18805  005466  0012               	return		;funcret
 18806  005468                     __end_of_nwkRxSendAck:
 18807                           	opt callstack 0
 18808                           
 18809 ;; *************** function _nwkRxIndicateFrame *****************
 18810 ;; Defined at:
 18811 ;;		line 423 in file "../nwk/nwk_src/nwkRx.c"
 18812 ;; Parameters:    Size  Location     Type
 18813 ;;  frame           2   91[BANK0 ] PTR struct NwkFrame_t
 18814 ;;		 -> nwkFrameFrames(685), NULL(0), 
 18815 ;; Auto vars:     Size  Location     Type
 18816 ;;  ind            12  105[BANK0 ] struct NWK_DataInd_t
 18817 ;;  header          2  103[BANK0 ] PTR __pack struct NwkFra
 18818 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 18819 ;; Return value:  Size  Location     Type
 18820 ;;                  1    wreg      _Bool 
 18821 ;; Registers used:
 18822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18823 ;; Tracked objects:
 18824 ;;		On entry : 3F/1
 18825 ;;		On exit  : 0/0
 18826 ;;		Unchanged: 0/0
 18827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18829 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18830 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18831 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18832 ;;Total ram usage:       26 bytes
 18833 ;; Hardware stack levels used:    1
 18834 ;; Hardware stack levels required when called:   17
 18835 ;; This function calls:
 18836 ;;		_appDataInd
 18837 ;;		_nwkRxServiceDataInd
 18838 ;;		nwkFrame@nwkFramePayloadSize
 18839 ;; This function is called by:
 18840 ;;		_nwkRxHandleIndication
 18841 ;; This function uses a non-reentrant model
 18842 ;;
 18843                           
 18844                           	psect	text114
 18845  0030E8                     __ptext114:
 18846                           	opt callstack 0
 18847  0030E8                     _nwkRxIndicateFrame:
 18848                           	opt callstack 9
 18849                           
 18850                           ; BSR set to: 1
 18851                           ;../nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);../nwk/
      +                          nwk_src/nwkRx.c: 424: {;../nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 18852                           
 18853                           ;incstack = 0
 18854  0030E8  0E02               	movlw	2
 18855  0030EA  0100               	movlb	0	; () banked
 18856  0030EC  25BB               	addwf	nwkRxIndicateFrame@frame& (0+255),w,b
 18857  0030EE  6FC7               	movwf	nwkRxIndicateFrame@header& (0+255),b
 18858  0030F0  0E00               	movlw	0
 18859  0030F2  21BC               	addwfc	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18860  0030F4  6FC8               	movwf	(nwkRxIndicateFrame@header+1)& (0+255),b
 18861                           
 18862                           ; BSR set to: 0
 18863                           ;../nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;../nwk/nwk_src/nwkRx.c: 428:   if (((
      +                          void*)0) == nwkIb.endpoint[header->nwkDstEndpoint])
 18864  0030F6  EE20 F00F          	lfsr	2,15
 18865  0030FA  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18866  0030FC  26D9               	addwf	fsr2l,f,c
 18867  0030FE  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18868  003100  22DA               	addwfc	fsr2h,f,c
 18869  003102  38DF               	swapf	223,w,c
 18870  003104  0B0F               	andlw	15
 18871  003106  6FBD               	movwf	??_nwkRxIndicateFrame& (0+255),b
 18872  003108  51BD               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 18873  00310A  0D02               	mullw	2
 18874  00310C  0E06               	movlw	low (_nwkIb+6)
 18875  00310E  24F3               	addwf	243,w,c
 18876  003110  6ED9               	movwf	fsr2l,c
 18877  003112  0E01               	movlw	high (_nwkIb+6)
 18878  003114  20F4               	addwfc	prodh,w,c
 18879  003116  6EDA               	movwf	fsr2h,c
 18880  003118  50DE               	movf	postinc2,w,c
 18881  00311A  10DE               	iorwf	postinc2,w,c
 18882  00311C  A4D8               	btfss	status,2,c
 18883  00311E  D002               	goto	l15213
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;../nwk/nwk_src/nwkRx.c: 429:     return 0;
 18887  003120  0E00               	movlw	0
 18888  003122  0012               	return	
 18889  003124                     l15213:
 18890                           
 18891                           ; BSR set to: 0
 18892                           ;../nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 18893  003124  EE20 F00B          	lfsr	2,11
 18894  003128  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18895  00312A  26D9               	addwf	fsr2l,f,c
 18896  00312C  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18897  00312E  22DA               	addwfc	fsr2h,f,c
 18898  003130  006F FF78  F0C9    	movff	postinc2,nwkRxIndicateFrame@ind
 18899  003136  006F FF74  F0CA    	movff	postdec2,nwkRxIndicateFrame@ind+1
 18900                           
 18901                           ;../nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 18902  00313C  EE20 F00D          	lfsr	2,13
 18903  003140  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18904  003142  26D9               	addwf	fsr2l,f,c
 18905  003144  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18906  003146  22DA               	addwfc	fsr2h,f,c
 18907  003148  006F FF78  F0CB    	movff	postinc2,nwkRxIndicateFrame@ind+2
 18908  00314E  006F FF74  F0CC    	movff	postdec2,nwkRxIndicateFrame@ind+3
 18909                           
 18910                           ;../nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 18911  003154  EE20 F00F          	lfsr	2,15
 18912  003158  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18913  00315A  26D9               	addwf	fsr2l,f,c
 18914  00315C  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18915  00315E  22DA               	addwfc	fsr2h,f,c
 18916  003160  50DF               	movf	223,w,c
 18917  003162  0B0F               	andlw	15
 18918  003164  6FCD               	movwf	(nwkRxIndicateFrame@ind+4)& (0+255),b
 18919                           
 18920                           ;../nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 18921  003166  EE20 F00F          	lfsr	2,15
 18922  00316A  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18923  00316C  26D9               	addwf	fsr2l,f,c
 18924  00316E  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18925  003170  22DA               	addwfc	fsr2h,f,c
 18926  003172  38DF               	swapf	223,w,c
 18927  003174  0B0F               	andlw	15
 18928  003176  6FCE               	movwf	(nwkRxIndicateFrame@ind+5)& (0+255),b
 18929                           
 18930                           ;../nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 18931  003178  EE20 F081          	lfsr	2,129
 18932  00317C  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18933  00317E  26D9               	addwf	fsr2l,f,c
 18934  003180  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18935  003182  22DA               	addwfc	fsr2h,f,c
 18936  003184  006F FF78  F0D0    	movff	postinc2,nwkRxIndicateFrame@ind+7
 18937  00318A  006F FF74  F0D1    	movff	postdec2,nwkRxIndicateFrame@ind+8
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;../nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 18941  003190  0060  F2EC  F002   	movff	nwkRxIndicateFrame@frame,nwkFrame@nwkFramePayloadSize@frame_4705
 18942  003196  0060  F2F0  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFrame@nwkFramePayloadSize@frame_4705+1
 18943  00319C  EC7E  F043         	call	nwkFrame@nwkFramePayloadSize	;wreg free
 18944  0031A0  6FD2               	movwf	(nwkRxIndicateFrame@ind+9)& (0+255),b
 18945                           
 18946                           ; BSR set to: 0
 18947                           ;../nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 18948  0031A2  EE20 F083          	lfsr	2,131
 18949  0031A6  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18950  0031A8  26D9               	addwf	fsr2l,f,c
 18951  0031AA  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18952  0031AC  22DA               	addwfc	fsr2h,f,c
 18953  0031AE  50DF               	movf	indf2,w,c
 18954  0031B0  6FD3               	movwf	(nwkRxIndicateFrame@ind+10)& (0+255),b
 18955                           
 18956                           ; BSR set to: 0
 18957                           ;../nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 18958  0031B2  EE20 F084          	lfsr	2,132
 18959  0031B6  51BB               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 18960  0031B8  26D9               	addwf	fsr2l,f,c
 18961  0031BA  51BC               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 18962  0031BC  22DA               	addwfc	fsr2h,f,c
 18963  0031BE  50DF               	movf	indf2,w,c
 18964  0031C0  6FD4               	movwf	(nwkRxIndicateFrame@ind+11)& (0+255),b
 18965                           
 18966                           ; BSR set to: 0
 18967                           ;../nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_
      +                          ACK_REQUESTED : 0;
 18968  0031C2  EE20 F009          	lfsr	2,9
 18969  0031C6  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18970  0031C8  26D9               	addwf	fsr2l,f,c
 18971  0031CA  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18972  0031CC  22DA               	addwfc	fsr2h,f,c
 18973  0031CE  0E00               	movlw	0
 18974  0031D0  B0DF               	btfsc	indf2,0,c
 18975  0031D2  0E01               	movlw	1
 18976  0031D4  6FCF               	movwf	(nwkRxIndicateFrame@ind+6)& (0+255),b
 18977                           
 18978                           ; BSR set to: 0
 18979                           ;../nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_S
      +                          ECURED : 0;
 18980  0031D6  EE20 F009          	lfsr	2,9
 18981  0031DA  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 18982  0031DC  26D9               	addwf	fsr2l,f,c
 18983  0031DE  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 18984  0031E0  22DA               	addwfc	fsr2h,f,c
 18985  0031E2  B2DF               	btfsc	indf2,1,c
 18986  0031E4  D002               	goto	l15227
 18987                           
 18988                           ; BSR set to: 0
 18989  0031E6  0E00               	movlw	0
 18990  0031E8  D001               	goto	L16
 18991  0031EA                     l15227:
 18992                           
 18993                           ; BSR set to: 0
 18994  0031EA  0E02               	movlw	2
 18995  0031EC                     L16:
 18996  0031EC  6FC1               	movwf	_nwkRxIndicateFrame$5152& (0+255),b
 18997                           
 18998                           ; BSR set to: 0
 18999  0031EE  51C1               	movf	_nwkRxIndicateFrame$5152& (0+255),w,b
 19000  0031F0  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19001                           
 19002                           ; BSR set to: 0
 19003                           ;../nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_
      +                          LINK_LOCAL : 0;
 19004  0031F2  EE20 F009          	lfsr	2,9
 19005  0031F6  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19006  0031F8  26D9               	addwf	fsr2l,f,c
 19007  0031FA  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19008  0031FC  22DA               	addwfc	fsr2h,f,c
 19009  0031FE  B4DF               	btfsc	indf2,2,c
 19010  003200  D002               	goto	l15235
 19011                           
 19012                           ; BSR set to: 0
 19013  003202  0E00               	movlw	0
 19014  003204  D001               	goto	L17
 19015  003206                     l15235:
 19016                           
 19017                           ; BSR set to: 0
 19018  003206  0E20               	movlw	32
 19019  003208                     L17:
 19020  003208  6FC2               	movwf	_nwkRxIndicateFrame$5153& (0+255),b
 19021                           
 19022                           ; BSR set to: 0
 19023  00320A  51C2               	movf	_nwkRxIndicateFrame$5153& (0+255),w,b
 19024  00320C  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19025                           
 19026                           ; BSR set to: 0
 19027                           ;../nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_
      +                          MULTICAST : 0;
 19028  00320E  EE20 F009          	lfsr	2,9
 19029  003212  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19030  003214  26D9               	addwf	fsr2l,f,c
 19031  003216  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19032  003218  22DA               	addwfc	fsr2h,f,c
 19033  00321A  B6DF               	btfsc	indf2,3,c
 19034  00321C  D002               	goto	l15243
 19035                           
 19036                           ; BSR set to: 0
 19037  00321E  0E00               	movlw	0
 19038  003220  D001               	goto	L18
 19039  003222                     l15243:
 19040                           
 19041                           ; BSR set to: 0
 19042  003222  0E40               	movlw	64
 19043  003224                     L18:
 19044  003224  6FC3               	movwf	_nwkRxIndicateFrame$5154& (0+255),b
 19045                           
 19046                           ; BSR set to: 0
 19047  003226  51C3               	movf	_nwkRxIndicateFrame$5154& (0+255),w,b
 19048  003228  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19049                           
 19050                           ; BSR set to: 0
 19051                           ;../nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_
      +                          OPT_BROADCAST : 0;
 19052  00322A  EE20 F00D          	lfsr	2,13
 19053  00322E  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19054  003230  26D9               	addwf	fsr2l,f,c
 19055  003232  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19056  003234  22DA               	addwfc	fsr2h,f,c
 19057  003236  28DE               	incf	postinc2,w,c
 19058  003238  E103               	bnz	u14860
 19059  00323A  28DE               	incf	postinc2,w,c
 19060  00323C  B4D8               	btfsc	status,2,c
 19061  00323E  D002               	goto	l15251
 19062  003240                     u14860:
 19063                           
 19064                           ; BSR set to: 0
 19065  003240  0E00               	movlw	0
 19066  003242  D001               	goto	L19
 19067  003244                     l15251:
 19068                           
 19069                           ; BSR set to: 0
 19070  003244  0E04               	movlw	4
 19071  003246                     L19:
 19072  003246  6FC4               	movwf	_nwkRxIndicateFrame$5155& (0+255),b
 19073                           
 19074                           ; BSR set to: 0
 19075  003248  51C4               	movf	_nwkRxIndicateFrame$5155& (0+255),w,b
 19076  00324A  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19077                           
 19078                           ; BSR set to: 0
 19079                           ;../nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr
      +                          ) ? NWK_IND_OPT_LOCAL : 0;
 19080  00324C  EE20 F007          	lfsr	2,7
 19081  003250  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19082  003252  26D9               	addwf	fsr2l,f,c
 19083  003254  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19084  003256  22DA               	addwfc	fsr2h,f,c
 19085  003258  EE10 F00B          	lfsr	1,11
 19086  00325C  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19087  00325E  26E1               	addwf	fsr1l,f,c
 19088  003260  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19089  003262  22E2               	addwfc	fsr1h,f,c
 19090  003264  50DE               	movf	postinc2,w,c
 19091  003266  18E6               	xorwf	postinc1,w,c
 19092  003268  E104               	bnz	u14870
 19093  00326A  50DE               	movf	postinc2,w,c
 19094  00326C  18E6               	xorwf	postinc1,w,c
 19095  00326E  B4D8               	btfsc	status,2,c
 19096  003270  D002               	goto	l15259
 19097  003272                     u14870:
 19098                           
 19099                           ; BSR set to: 0
 19100  003272  0E00               	movlw	0
 19101  003274  D001               	goto	L20
 19102  003276                     l15259:
 19103                           
 19104                           ; BSR set to: 0
 19105  003276  0E08               	movlw	8
 19106  003278                     L20:
 19107  003278  6FC5               	movwf	_nwkRxIndicateFrame$5156& (0+255),b
 19108                           
 19109                           ; BSR set to: 0
 19110  00327A  51C5               	movf	_nwkRxIndicateFrame$5156& (0+255),w,b
 19111  00327C  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19112                           
 19113                           ; BSR set to: 0
 19114                           ;../nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND
      +                          _OPT_BROADCAST_PAN_ID : 0;
 19115  00327E  EE20 F003          	lfsr	2,3
 19116  003282  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19117  003284  26D9               	addwf	fsr2l,f,c
 19118  003286  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19119  003288  22DA               	addwfc	fsr2h,f,c
 19120  00328A  28DE               	incf	postinc2,w,c
 19121  00328C  E103               	bnz	u14880
 19122  00328E  28DE               	incf	postinc2,w,c
 19123  003290  B4D8               	btfsc	status,2,c
 19124  003292  D002               	goto	l15267
 19125  003294                     u14880:
 19126                           
 19127                           ; BSR set to: 0
 19128  003294  0E00               	movlw	0
 19129  003296  D001               	goto	L21
 19130  003298                     l15267:
 19131                           
 19132                           ; BSR set to: 0
 19133  003298  0E10               	movlw	16
 19134  00329A                     L21:
 19135  00329A  6FC6               	movwf	_nwkRxIndicateFrame$5157& (0+255),b
 19136                           
 19137                           ; BSR set to: 0
 19138  00329C  51C6               	movf	_nwkRxIndicateFrame$5157& (0+255),w,b
 19139  00329E  13CF               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 19140                           
 19141                           ; BSR set to: 0
 19142                           ;../nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 19143  0032A0  0EC9               	movlw	low nwkRxIndicateFrame@ind
 19144  0032A2  6F76               	movwf	nwkRxServiceDataInd@ind& (0+255),b
 19145  0032A4  EE20 F00F          	lfsr	2,15
 19146  0032A8  51C7               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 19147  0032AA  26D9               	addwf	fsr2l,f,c
 19148  0032AC  51C8               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 19149  0032AE  22DA               	addwfc	fsr2h,f,c
 19150  0032B0  38DF               	swapf	223,w,c
 19151  0032B2  0B0F               	andlw	15
 19152  0032B4  6FBD               	movwf	??_nwkRxIndicateFrame& (0+255),b
 19153  0032B6  51BD               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 19154  0032B8  0D02               	mullw	2
 19155  0032BA  0E06               	movlw	low (_nwkIb+6)
 19156  0032BC  24F3               	addwf	243,w,c
 19157  0032BE  6ED9               	movwf	fsr2l,c
 19158  0032C0  0E01               	movlw	high (_nwkIb+6)
 19159  0032C2  20F4               	addwfc	prodh,w,c
 19160  0032C4  6EDA               	movwf	fsr2h,c
 19161  0032C6  006F FF78  F0BE    	movff	postinc2,??_nwkRxIndicateFrame+1
 19162  0032CC  006F FF74  F0BF    	movff	postdec2,??_nwkRxIndicateFrame+2
 19163  0032D2  D801               	call	u14898
 19164  0032D4  0012               	return	
 19165  0032D6                     u14898:
 19166  0032D6  0005               	push	
 19167  0032D8  6EFA               	movwf	pclath,c
 19168  0032DA  51BE               	movf	(??_nwkRxIndicateFrame+1)& (0+255),w,b
 19169  0032DC  6EFD               	movwf	tosl,c
 19170  0032DE  51BF               	movf	(??_nwkRxIndicateFrame+2)& (0+255),w,b
 19171  0032E0  6EFE               	movwf	tosh,c
 19172  0032E2  6AFF               	clrf	tosu,c
 19173  0032E4  50FA               	movf	pclath,w,c
 19174  0032E6  0012               	return		;indir
 19175  0032E8                     __end_of_nwkRxIndicateFrame:
 19176                           	opt callstack 0
 19177                           
 19178 ;; *************** function nwkFrame@nwkFramePayloadSize *****************
 19179 ;; Defined at:
 19180 ;;		line 134 in file "../nwk/nwk_inc\nwkFrame.h"
 19181 ;; Parameters:    Size  Location     Type
 19182 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 19183 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;		None
 19186 ;; Return value:  Size  Location     Type
 19187 ;;                  1    wreg      unsigned char 
 19188 ;; Registers used:
 19189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19190 ;; Tracked objects:
 19191 ;;		On entry : 3F/0
 19192 ;;		On exit  : 3F/0
 19193 ;;		Unchanged: 3F/0
 19194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19199 ;;Total ram usage:        4 bytes
 19200 ;; Hardware stack levels used:    1
 19201 ;; Hardware stack levels required when called:    7
 19202 ;; This function calls:
 19203 ;;		Nothing
 19204 ;; This function is called by:
 19205 ;;		_nwkRxIndicateFrame
 19206 ;; This function uses a non-reentrant model
 19207 ;;
 19208                           
 19209                           	psect	text115
 19210  0086FC                     __ptext115:
 19211                           	opt callstack 0
 19212  0086FC                     nwkFrame@nwkFramePayloadSize:
 19213                           	opt callstack 18
 19214                           
 19215                           ; BSR set to: 0
 19216                           
 19217                           ;incstack = 0
 19218  0086FC  EE20 F081          	lfsr	2,129
 19219  008700  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 19220  008702  26D9               	addwf	fsr2l,f,c
 19221  008704  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4705+1)^0,w,c
 19222  008706  22DA               	addwfc	fsr2h,f,c
 19223  008708  50DF               	movf	indf2,w,c
 19224  00870A  6E04               	movwf	??strspn@nwkFrame@nwkFramePayloadSize^0,c
 19225  00870C  EE20 F001          	lfsr	2,1
 19226  008710  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 19227  008712  26D9               	addwf	fsr2l,f,c
 19228  008714  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4705+1)^0,w,c
 19229  008716  22DA               	addwfc	fsr2h,f,c
 19230  008718  50DF               	movf	indf2,w,c
 19231  00871A  6E05               	movwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,c
 19232  00871C  5004               	movf	??strspn@nwkFrame@nwkFramePayloadSize^0,w,c
 19233  00871E  5C05               	subwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,w,c
 19234  008720  2402               	addwf	nwkFrame@nwkFramePayloadSize@frame_4705^0,w,c
 19235  008722  0F02               	addlw	2
 19236                           
 19237                           ; BSR set to: 0
 19238  008724  0012               	return		;funcret
 19239  008726                     __end_ofnwkFrame@nwkFramePayloadSize:
 19240                           	opt callstack 0
 19241                           
 19242 ;; *************** function _appDataInd *****************
 19243 ;; Defined at:
 19244 ;;		line 45 in file "../app/app_src/application.c"
 19245 ;; Parameters:    Size  Location     Type
 19246 ;;  ind             1   22[BANK0 ] PTR struct NWK_DataInd_t
 19247 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19248 ;; Auto vars:     Size  Location     Type
 19249 ;;  i               1   90[BANK0 ] unsigned char 
 19250 ;;  data           65   23[BANK0 ] unsigned char [65]
 19251 ;;  dataptr         2   88[BANK0 ] PTR unsigned char 
 19252 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19253 ;; Return value:  Size  Location     Type
 19254 ;;                  1    wreg      _Bool 
 19255 ;; Registers used:
 19256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19257 ;; Tracked objects:
 19258 ;;		On entry : 3F/0
 19259 ;;		On exit  : 3F/1
 19260 ;;		Unchanged: 0/0
 19261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19262 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19263 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19265 ;;      Totals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19266 ;;Total ram usage:       69 bytes
 19267 ;; Hardware stack levels used:    1
 19268 ;; Hardware stack levels required when called:   16
 19269 ;; This function calls:
 19270 ;;		_memset
 19271 ;;		_printf
 19272 ;; This function is called by:
 19273 ;;		_bootLoadApplication
 19274 ;;		_nwkRxIndicateFrame
 19275 ;; This function uses a non-reentrant model
 19276 ;;
 19277                           
 19278                           	psect	text116
 19279  0071D4                     __ptext116:
 19280                           	opt callstack 0
 19281  0071D4                     _appDataInd:
 19282                           	opt callstack 9
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;../app/app_src/application.c: 45: static _Bool appDataInd(NWK_DataInd_t *ind);../app/ap
      +                          p_src/application.c: 46: {;../app/app_src/application.c: 48:     uint8_t data[64 + 1];;.
      +                          ./app/app_src/application.c: 49:     uint8_t* dataptr = ind->data;
 19286                           
 19287                           ; BSR set to: 0
 19288                           ;incstack = 0
 19289  0071D4  5176               	movf	appDataInd@ind& (0+255),w,b
 19290  0071D6  6ED9               	movwf	fsr2l,c
 19291  0071D8  6ADA               	clrf	fsr2h,c
 19292  0071DA  0E07               	movlw	7
 19293  0071DC  26D9               	addwf	fsr2l,f,c
 19294  0071DE  006F FF78  F0B8    	movff	postinc2,appDataInd@dataptr
 19295  0071E4  006F FF74  F0B9    	movff	postdec2,appDataInd@dataptr+1
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;../app/app_src/application.c: 50:     memset(data, 0 , sizeof(data));
 19299  0071EA  0E77               	movlw	low appDataInd@data
 19300  0071EC  6E02               	movwf	memset@dest^0,c
 19301  0071EE  6A03               	clrf	(memset@dest+1)^0,c
 19302  0071F0  0E00               	movlw	0
 19303  0071F2  6E05               	movwf	(memset@c+1)^0,c
 19304  0071F4  0E00               	movlw	0
 19305  0071F6  6E04               	movwf	memset@c^0,c
 19306  0071F8  0E00               	movlw	0
 19307  0071FA  6E07               	movwf	(memset@n+1)^0,c
 19308  0071FC  0E41               	movlw	65
 19309  0071FE  6E06               	movwf	memset@n^0,c
 19310  007200  EC32  F022         	call	_memset	;wreg free
 19311                           
 19312                           ;../app/app_src/application.c: 51:     for(uint8_t i = 0; i < 64; i++){
 19313  007204  0E00               	movlw	0
 19314  007206  0100               	movlb	0	; () banked
 19315  007208  6FBA               	movwf	appDataInd@i& (0+255),b
 19316  00720A                     l14739:
 19317                           
 19318                           ; BSR set to: 0
 19319                           ;../app/app_src/application.c: 52:         data[i] = *dataptr++;
 19320  00720A  0060  F2E3  FFD9   	movff	appDataInd@dataptr,fsr2l
 19321  007210  0060  F2E7  FFDA   	movff	appDataInd@dataptr+1,fsr2h
 19322  007216  51BA               	movf	appDataInd@i& (0+255),w,b
 19323  007218  0F77               	addlw	low appDataInd@data
 19324  00721A  6EE1               	movwf	fsr1l,c
 19325  00721C  6AE2               	clrf	fsr1h,c
 19326  00721E  006F FF7F FFE7     	movff	indf2,indf1
 19327                           
 19328                           ; BSR set to: 0
 19329  007224  4BB8               	infsnz	appDataInd@dataptr& (0+255),f,b
 19330  007226  2BB9               	incf	(appDataInd@dataptr+1)& (0+255),f,b
 19331                           
 19332                           ; BSR set to: 0
 19333                           ;../app/app_src/application.c: 53:     }
 19334  007228  2BBA               	incf	appDataInd@i& (0+255),f,b
 19335                           
 19336                           ; BSR set to: 0
 19337  00722A  0E3F               	movlw	63
 19338  00722C  65BA               	cpfsgt	appDataInd@i& (0+255),b
 19339  00722E  D7ED               	goto	l14739
 19340                           
 19341                           ; BSR set to: 0
 19342                           ;../app/app_src/application.c: 54:     printf("RX:%04X:%s\r\n", ind->srcAddr, data);
 19343  007230  0E8D               	movlw	low STR_1
 19344  007232  6E55               	movwf	printf@fmt^0,c
 19345  007234  0EFE               	movlw	high STR_1
 19346  007236  6E56               	movwf	(printf@fmt+1)^0,c
 19347  007238  5176               	movf	appDataInd@ind& (0+255),w,b
 19348  00723A  6ED9               	movwf	fsr2l,c
 19349  00723C  6ADA               	clrf	fsr2h,c
 19350  00723E  006F FF78  F057    	movff	postinc2,?_printf+2
 19351  007244  006F FF74  F058    	movff	postdec2,?_printf+3
 19352  00724A  0E77               	movlw	low appDataInd@data
 19353  00724C  6E59               	movwf	(?_printf+4)^0,c
 19354  00724E  EC3E  F044         	call	_printf	;wreg free
 19355                           
 19356                           ; BSR set to: 1
 19357                           ;../app/app_src/application.c: 55:     return 1;
 19358  007252  0E01               	movlw	1
 19359                           
 19360                           ; BSR set to: 1
 19361  007254  0012               	return		;funcret
 19362  007256                     __end_of_appDataInd:
 19363                           	opt callstack 0
 19364                           
 19365 ;; *************** function _nwkRxServiceDataInd *****************
 19366 ;; Defined at:
 19367 ;;		line 257 in file "../nwk/nwk_src/nwkRx.c"
 19368 ;; Parameters:    Size  Location     Type
 19369 ;;  ind             1   22[BANK0 ] PTR struct NWK_DataInd_t
 19370 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19371 ;; Auto vars:     Size  Location     Type
 19372 ;;		None
 19373 ;; Return value:  Size  Location     Type
 19374 ;;                  1    wreg      _Bool 
 19375 ;; Registers used:
 19376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19377 ;; Tracked objects:
 19378 ;;		On entry : 3F/0
 19379 ;;		On exit  : 0/0
 19380 ;;		Unchanged: 0/0
 19381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19382 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19384 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19385 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19386 ;;Total ram usage:        5 bytes
 19387 ;; Hardware stack levels used:    1
 19388 ;; Hardware stack levels required when called:   10
 19389 ;; This function calls:
 19390 ;;		_nwkRouteErrorReceived
 19391 ;;		_nwkTxAckReceived
 19392 ;; This function is called by:
 19393 ;;		_nwkRxInit
 19394 ;;		_nwkRxIndicateFrame
 19395 ;; This function uses a non-reentrant model
 19396 ;;
 19397                           
 19398                           	psect	text117
 19399  007520                     __ptext117:
 19400                           	opt callstack 0
 19401  007520                     _nwkRxServiceDataInd:
 19402                           	opt callstack 15
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;../nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);../nw
      +                          k/nwk_src/nwkRx.c: 258: {;../nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 19406                           
 19407                           ; BSR set to: 1
 19408                           ;incstack = 0
 19409  007520  5176               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 19410  007522  6ED9               	movwf	fsr2l,c
 19411  007524  6ADA               	clrf	fsr2h,c
 19412  007526  0E09               	movlw	9
 19413  007528  26D9               	addwf	fsr2l,f,c
 19414  00752A  50DF               	movf	indf2,w,c
 19415  00752C  A4D8               	btfss	status,2,c
 19416  00752E  D00E               	goto	l14897
 19417  007530                     u14500:
 19418                           
 19419                           ; BSR set to: 0
 19420                           ;../nwk/nwk_src/nwkRx.c: 265:     return 0;
 19421  007530  0E00               	movlw	0
 19422  007532  0012               	return	
 19423  007534                     l14883:
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;../nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 19427  007534  0060  F1D8  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 19428  00753A  ECD6  F031         	call	_nwkTxAckReceived	;wreg free
 19429  00753E  0012               	return	
 19430  007540                     l14887:
 19431                           
 19432                           ; BSR set to: 0
 19433                           ;../nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 19434  007540  0060  F1D8  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 19435  007546  EC13  F03D         	call	_nwkRouteErrorReceived	;wreg free
 19436  00754A  0012               	return	
 19437  00754C                     l14897:
 19438                           
 19439                           ; BSR set to: 0
 19440  00754C  5176               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 19441  00754E  6ED9               	movwf	fsr2l,c
 19442  007550  6ADA               	clrf	fsr2h,c
 19443  007552  0E07               	movlw	7
 19444  007554  26D9               	addwf	fsr2l,f,c
 19445  007556  006F FF78  F077    	movff	postinc2,??_nwkRxServiceDataInd
 19446  00755C  006F FF74  F078    	movff	postdec2,??_nwkRxServiceDataInd+1
 19447  007562  0060  F1DF  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 19448  007568  0060  F1E3  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 19449  00756E  50DF               	movf	indf2,w,c
 19450  007570  6F79               	movwf	(??_nwkRxServiceDataInd+2)& (0+255),b
 19451  007572  6B7A               	clrf	(??_nwkRxServiceDataInd+3)& (0+255),b
 19452                           
 19453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19454                           ; Switch size 1, requested type "simple"
 19455                           ; Number of cases is 1, Range of values is 0 to 0
 19456                           ; switch strategies available:
 19457                           ; Name         Instructions Cycles
 19458                           ; simple_byte            4     3 (average)
 19459                           ;	Chosen strategy is simple_byte
 19460  007574  517A               	movf	(??_nwkRxServiceDataInd+3)& (0+255),w,b
 19461  007576  0A00               	xorlw	0	; case 0
 19462  007578  A4D8               	btfss	status,2,c
 19463  00757A  D7DA               	goto	u14500
 19464                           
 19465                           ; BSR set to: 0
 19466                           ; Switch size 1, requested type "simple"
 19467                           ; Number of cases is 2, Range of values is 0 to 1
 19468                           ; switch strategies available:
 19469                           ; Name         Instructions Cycles
 19470                           ; simple_byte            7     4 (average)
 19471                           ;	Chosen strategy is simple_byte
 19472  00757C  5179               	movf	(??_nwkRxServiceDataInd+2)& (0+255),w,b
 19473  00757E  0A00               	xorlw	0	; case 0
 19474  007580  B4D8               	btfsc	status,2,c
 19475  007582  D7D8               	goto	l14883
 19476  007584  0A01               	xorlw	1	; case 1
 19477  007586  B4D8               	btfsc	status,2,c
 19478  007588  D7DB               	goto	l14887
 19479  00758A  D7D2               	goto	u14500
 19480  00758C                     __end_of_nwkRxServiceDataInd:
 19481                           	opt callstack 0
 19482                           
 19483 ;; *************** function _nwkTxAckReceived *****************
 19484 ;; Defined at:
 19485 ;;		line 182 in file "../nwk/nwk_src/nwkTx.c"
 19486 ;; Parameters:    Size  Location     Type
 19487 ;;  ind             1    7[COMRAM] PTR struct NWK_DataInd_t
 19488 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19489 ;; Auto vars:     Size  Location     Type
 19490 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 19491 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19492 ;;  command         2   10[COMRAM] PTR __pack struct NwkCom
 19493 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 19494 ;; Return value:  Size  Location     Type
 19495 ;;                  1    wreg      _Bool 
 19496 ;; Registers used:
 19497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19498 ;; Tracked objects:
 19499 ;;		On entry : 3F/0
 19500 ;;		On exit  : 0/0
 19501 ;;		Unchanged: 0/0
 19502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19503 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19504 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19506 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19507 ;;Total ram usage:        7 bytes
 19508 ;; Hardware stack levels used:    1
 19509 ;; Hardware stack levels required when called:    8
 19510 ;; This function calls:
 19511 ;;		_nwkFrameNext
 19512 ;; This function is called by:
 19513 ;;		_nwkRxServiceDataInd
 19514 ;; This function uses a non-reentrant model
 19515 ;;
 19516                           
 19517                           	psect	text118
 19518  0063AC                     __ptext118:
 19519                           	opt callstack 0
 19520  0063AC                     _nwkTxAckReceived:
 19521                           	opt callstack 16
 19522                           
 19523                           ; BSR set to: 0
 19524                           ;../nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);../nwk/nwk_src/
      +                          nwkTx.c: 183: {;../nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck
      +                          _t *)ind->data;
 19525                           
 19526                           ;incstack = 0
 19527  0063AC  5008               	movf	nwkTxAckReceived@ind^0,w,c
 19528  0063AE  6ED9               	movwf	fsr2l,c
 19529  0063B0  6ADA               	clrf	fsr2h,c
 19530  0063B2  0E07               	movlw	7
 19531  0063B4  26D9               	addwf	fsr2l,f,c
 19532  0063B6  006F FF78  F00B    	movff	postinc2,nwkTxAckReceived@command
 19533  0063BC  006F FF74  F00C    	movff	postdec2,nwkTxAckReceived@command+1
 19534                           
 19535                           ; BSR set to: 0
 19536                           ;../nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
 19537  0063C2  0E00               	movlw	0
 19538  0063C4  6E0D               	movwf	nwkTxAckReceived@frame^0,c
 19539  0063C6  0E00               	movlw	0
 19540  0063C8  6E0E               	movwf	(nwkTxAckReceived@frame+1)^0,c
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;../nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 19544  0063CA  5008               	movf	nwkTxAckReceived@ind^0,w,c
 19545  0063CC  6ED9               	movwf	fsr2l,c
 19546  0063CE  6ADA               	clrf	fsr2h,c
 19547  0063D0  0E09               	movlw	9
 19548  0063D2  26D9               	addwf	fsr2l,f,c
 19549  0063D4  0E03               	movlw	3
 19550  0063D6  18DE               	xorwf	postinc2,w,c
 19551  0063D8  B4D8               	btfsc	status,2,c
 19552  0063DA  D035               	goto	l14657
 19553  0063DC                     u14230:
 19554                           
 19555                           ;../nwk/nwk_src/nwkTx.c: 188:     return 0;
 19556  0063DC  0E00               	movlw	0
 19557  0063DE  0012               	return	
 19558  0063E0                     l14645:
 19559                           
 19560                           ;../nwk/nwk_src/nwkTx.c: 191:   {;../nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state && frame->header.nwkSeq == command->seq)
 19561  0063E0  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 19562  0063E6  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 19563  0063EC  0E16               	movlw	22
 19564  0063EE  18DE               	xorwf	postinc2,w,c
 19565  0063F0  A4D8               	btfss	status,2,c
 19566  0063F2  D029               	goto	l14657
 19567  0063F4  EE20 F001          	lfsr	2,1
 19568  0063F8  500B               	movf	nwkTxAckReceived@command^0,w,c
 19569  0063FA  26D9               	addwf	fsr2l,f,c
 19570  0063FC  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 19571  0063FE  22DA               	addwfc	fsr2h,f,c
 19572  006400  EE10 F00C          	lfsr	1,12
 19573  006404  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19574  006406  26E1               	addwf	fsr1l,f,c
 19575  006408  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 19576  00640A  22E2               	addwfc	fsr1h,f,c
 19577  00640C  50DE               	movf	postinc2,w,c
 19578  00640E  18E6               	xorwf	postinc1,w,c
 19579  006410  A4D8               	btfss	status,2,c
 19580  006412  D019               	goto	l14657
 19581                           
 19582                           ;../nwk/nwk_src/nwkTx.c: 193:     {;../nwk/nwk_src/nwkTx.c: 194:       frame->state = NW
      +                          K_TX_STATE_CONFIRM;
 19583  006414  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 19584  00641A  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 19585  006420  0E17               	movlw	23
 19586  006422  6EDF               	movwf	indf2,c
 19587                           
 19588                           ;../nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 19589  006424  EE20 F002          	lfsr	2,2
 19590  006428  500B               	movf	nwkTxAckReceived@command^0,w,c
 19591  00642A  26D9               	addwf	fsr2l,f,c
 19592  00642C  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 19593  00642E  22DA               	addwfc	fsr2h,f,c
 19594  006430  EE10 F086          	lfsr	1,134
 19595  006434  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19596  006436  26E1               	addwf	fsr1l,f,c
 19597  006438  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 19598  00643A  22E2               	addwfc	fsr1h,f,c
 19599  00643C  006F FF7F FFE7     	movff	indf2,indf1
 19600                           
 19601                           ;../nwk/nwk_src/nwkTx.c: 196:       return 1;
 19602  006442  0E01               	movlw	1
 19603  006444  0012               	return	
 19604  006446                     l14657:
 19605                           
 19606                           ;../nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 19607  006446  0060  F034  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 19608  00644C  0060  F038  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 19609  006452  EC98  F037         	call	_nwkFrameNext	;wreg free
 19610  006456  0060  F008  F00D   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 19611  00645C  0060  F00C  F00E   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 19612  006462  500D               	movf	nwkTxAckReceived@frame^0,w,c
 19613  006464  100E               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
 19614  006466  B4D8               	btfsc	status,2,c
 19615  006468  D7B9               	goto	u14230
 19616  00646A  D7BA               	goto	l14645
 19617  00646C                     __end_of_nwkTxAckReceived:
 19618                           	opt callstack 0
 19619                           
 19620 ;; *************** function _nwkFrameNext *****************
 19621 ;; Defined at:
 19622 ;;		line 111 in file "../nwk/nwk_src/nwkFrame.c"
 19623 ;; Parameters:    Size  Location     Type
 19624 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 19625 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19626 ;; Auto vars:     Size  Location     Type
 19627 ;;		None
 19628 ;; Return value:  Size  Location     Type
 19629 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
 19630 ;; Registers used:
 19631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19632 ;; Tracked objects:
 19633 ;;		On entry : 0/0
 19634 ;;		On exit  : 0/0
 19635 ;;		Unchanged: 0/0
 19636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19641 ;;Total ram usage:        6 bytes
 19642 ;; Hardware stack levels used:    1
 19643 ;; Hardware stack levels required when called:    7
 19644 ;; This function calls:
 19645 ;;		Nothing
 19646 ;; This function is called by:
 19647 ;;		_nwkRxTaskHandler
 19648 ;;		_nwkTxAckReceived
 19649 ;;		_nwkTxAckWaitTimerHandler
 19650 ;;		_nwkTxDelayTimerHandler
 19651 ;;		_nwkTxTaskHandler
 19652 ;; This function uses a non-reentrant model
 19653 ;;
 19654                           
 19655                           	psect	text119
 19656  006F30                     __ptext119:
 19657                           	opt callstack 0
 19658  006F30                     _nwkFrameNext:
 19659                           	opt callstack 20
 19660                           
 19661                           ;../nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 112: {;../nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
 19662                           
 19663                           ;incstack = 0
 19664  006F30  5002               	movf	nwkFrameNext@frame^0,w,c
 19665  006F32  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
 19666  006F34  A4D8               	btfss	status,2,c
 19667  006F36  D026               	goto	l14503
 19668                           
 19669                           ;../nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 19670  006F38  0EBD               	movlw	low _nwkFrameFrames
 19671  006F3A  6E02               	movwf	nwkFrameNext@frame^0,c
 19672  006F3C  0E05               	movlw	high _nwkFrameFrames
 19673  006F3E  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
 19674                           
 19675                           ;../nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 19676                           
 19677                           ;../nwk/nwk_src/nwkFrame.c: 116:     frame++;
 19678  006F40  0EAD               	movlw	173
 19679  006F42  6E04               	movwf	??_nwkFrameNext^0,c
 19680  006F44  0E02               	movlw	2
 19681  006F46  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 19682  006F48  0EBD               	movlw	low _nwkFrameFrames
 19683  006F4A  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 19684  006F4C  0E05               	movlw	high _nwkFrameFrames
 19685  006F4E  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 19686  006F50  5004               	movf	??_nwkFrameNext^0,w,c
 19687  006F52  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 19688  006F54  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 19689  006F56  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 19690  006F58  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 19691  006F5A  5C02               	subwf	nwkFrameNext@frame^0,w,c
 19692  006F5C  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 19693  006F5E  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 19694  006F60  B0D8               	btfsc	status,0,c
 19695  006F62  D026               	goto	u14040
 19696  006F64                     l14497:
 19697                           
 19698                           ;../nwk/nwk_src/nwkFrame.c: 119:   {;../nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_S
      +                          TATE_FREE != frame->state)
 19699  006F64  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
 19700  006F6A  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 19701  006F70  50DF               	movf	indf2,w,c
 19702  006F72  B4D8               	btfsc	status,2,c
 19703  006F74  D007               	goto	l14503
 19704                           
 19705                           ;../nwk/nwk_src/nwkFrame.c: 121:       return frame;
 19706  006F76  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
 19707  006F7C  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 19708  006F82  0012               	return	
 19709  006F84                     l14503:
 19710                           
 19711                           ;../nwk/nwk_src/nwkFrame.c: 122:   }
 19712  006F84  0E89               	movlw	137
 19713  006F86  2602               	addwf	nwkFrameNext@frame^0,f,c
 19714  006F88  0E00               	movlw	0
 19715  006F8A  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 19716  006F8C  0EAD               	movlw	173
 19717  006F8E  6E04               	movwf	??_nwkFrameNext^0,c
 19718  006F90  0E02               	movlw	2
 19719  006F92  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 19720  006F94  0EBD               	movlw	low _nwkFrameFrames
 19721  006F96  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 19722  006F98  0E05               	movlw	high _nwkFrameFrames
 19723  006F9A  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 19724  006F9C  5004               	movf	??_nwkFrameNext^0,w,c
 19725  006F9E  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 19726  006FA0  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 19727  006FA2  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 19728  006FA4  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 19729  006FA6  5C02               	subwf	nwkFrameNext@frame^0,w,c
 19730  006FA8  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 19731  006FAA  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 19732  006FAC  A0D8               	btfss	status,0,c
 19733  006FAE  D7DA               	goto	l14497
 19734  006FB0                     u14040:
 19735                           
 19736                           ;../nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
 19737  006FB0  0E00               	movlw	0
 19738  006FB2  6E02               	movwf	?_nwkFrameNext^0,c
 19739  006FB4  0E00               	movlw	0
 19740  006FB6  6E03               	movwf	(?_nwkFrameNext+1)^0,c
 19741  006FB8  0012               	return		;funcret
 19742  006FBA                     __end_of_nwkFrameNext:
 19743                           	opt callstack 0
 19744                           
 19745 ;; *************** function _nwkRouteErrorReceived *****************
 19746 ;; Defined at:
 19747 ;;		line 344 in file "../nwk/nwk_src/nwkRoute.c"
 19748 ;; Parameters:    Size  Location     Type
 19749 ;;  ind             1   12[COMRAM] PTR struct NWK_DataInd_t
 19750 ;;		 -> nwkRxIndicateFrame@ind(12), 
 19751 ;; Auto vars:     Size  Location     Type
 19752 ;;  command         2   14[COMRAM] PTR __pack struct NwkCom
 19753 ;;		 -> nwkFrameFrames(685), NULL(0), 
 19754 ;; Return value:  Size  Location     Type
 19755 ;;                  1    wreg      _Bool 
 19756 ;; Registers used:
 19757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19758 ;; Tracked objects:
 19759 ;;		On entry : 3F/0
 19760 ;;		On exit  : 0/0
 19761 ;;		Unchanged: 0/0
 19762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19763 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19767 ;;Total ram usage:        4 bytes
 19768 ;; Hardware stack levels used:    1
 19769 ;; Hardware stack levels required when called:    9
 19770 ;; This function calls:
 19771 ;;		_nwkRouteRemove
 19772 ;; This function is called by:
 19773 ;;		_nwkRxServiceDataInd
 19774 ;; This function uses a non-reentrant model
 19775 ;;
 19776                           
 19777                           	psect	text120
 19778  007A26                     __ptext120:
 19779                           	opt callstack 0
 19780  007A26                     _nwkRouteErrorReceived:
 19781                           	opt callstack 15
 19782                           
 19783                           ; BSR set to: 0
 19784                           ;../nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);../nwk/
      +                          nwk_src/nwkRoute.c: 345: {;../nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *com
      +                          mand = (NwkCommandRouteError_t *)ind->data;
 19785                           
 19786                           ;incstack = 0
 19787  007A26  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 19788  007A28  6ED9               	movwf	fsr2l,c
 19789  007A2A  6ADA               	clrf	fsr2h,c
 19790  007A2C  0E07               	movlw	7
 19791  007A2E  26D9               	addwf	fsr2l,f,c
 19792  007A30  006F FF78  F00F    	movff	postinc2,nwkRouteErrorReceived@command
 19793  007A36  006F FF74  F010    	movff	postdec2,nwkRouteErrorReceived@command+1
 19794                           
 19795                           ;../nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 19796  007A3C  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 19797  007A3E  6ED9               	movwf	fsr2l,c
 19798  007A40  6ADA               	clrf	fsr2h,c
 19799  007A42  0E09               	movlw	9
 19800  007A44  26D9               	addwf	fsr2l,f,c
 19801  007A46  0E06               	movlw	6
 19802  007A48  18DE               	xorwf	postinc2,w,c
 19803  007A4A  B4D8               	btfsc	status,2,c
 19804  007A4C  D002               	goto	l14629
 19805                           
 19806                           ; BSR set to: 0
 19807                           ;../nwk/nwk_src/nwkRoute.c: 349:     return 0;
 19808  007A4E  0E00               	movlw	0
 19809  007A50  0012               	return	
 19810  007A52                     l14629:
 19811                           
 19812                           ; BSR set to: 0
 19813                           ;../nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
 19814  007A52  EE20 F003          	lfsr	2,3
 19815  007A56  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 19816  007A58  26D9               	addwf	fsr2l,f,c
 19817  007A5A  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 19818  007A5C  22DA               	addwfc	fsr2h,f,c
 19819  007A5E  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 19820  007A64  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 19821  007A6A  EE20 F005          	lfsr	2,5
 19822  007A6E  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 19823  007A70  26D9               	addwf	fsr2l,f,c
 19824  007A72  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 19825  007A74  22DA               	addwfc	fsr2h,f,c
 19826  007A76  50DF               	movf	indf2,w,c
 19827  007A78  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 19828  007A7A  EC4C  F041         	call	_nwkRouteRemove	;wreg free
 19829                           
 19830                           ;../nwk/nwk_src/nwkRoute.c: 353:   return 1;
 19831  007A7E  0E01               	movlw	1
 19832  007A80  0012               	return		;funcret
 19833  007A82                     __end_of_nwkRouteErrorReceived:
 19834                           	opt callstack 0
 19835                           
 19836 ;; *************** function _nwkRouteRemove *****************
 19837 ;; Defined at:
 19838 ;;		line 183 in file "../nwk/nwk_src/nwkRoute.c"
 19839 ;; Parameters:    Size  Location     Type
 19840 ;;  dst             2    7[COMRAM] unsigned short 
 19841 ;;  multicast       1    9[COMRAM] unsigned char 
 19842 ;; Auto vars:     Size  Location     Type
 19843 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 19844 ;;		 -> nwkRouteTable(70), NULL(0), 
 19845 ;; Return value:  Size  Location     Type
 19846 ;;                  1    wreg      void 
 19847 ;; Registers used:
 19848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19849 ;; Tracked objects:
 19850 ;;		On entry : 3E/1
 19851 ;;		On exit  : 0/0
 19852 ;;		Unchanged: 0/0
 19853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19854 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19855 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19857 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19858 ;;Total ram usage:        5 bytes
 19859 ;; Hardware stack levels used:    1
 19860 ;; Hardware stack levels required when called:    8
 19861 ;; This function calls:
 19862 ;;		_NWK_RouteFindEntry
 19863 ;;		_NWK_RouteFreeEntry
 19864 ;; This function is called by:
 19865 ;;		_nwkRouteErrorReceived
 19866 ;;		_nwkRxRejectDuplicate
 19867 ;; This function uses a non-reentrant model
 19868 ;;
 19869                           
 19870                           	psect	text121
 19871  008298                     __ptext121:
 19872                           	opt callstack 0
 19873  008298                     _nwkRouteRemove:
 19874                           	opt callstack 17
 19875                           
 19876                           ;../nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);..
      +                          /nwk/nwk_src/nwkRoute.c: 184: {;../nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t 
      +                          *entry;;../nwk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
 19877                           
 19878                           ;incstack = 0
 19879  008298  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 19880  00829E  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 19881  0082A4  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 19882  0082AA  EC32  F03B         	call	_NWK_RouteFindEntry	;wreg free
 19883  0082AE  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 19884  0082B4  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 19885                           
 19886                           ;../nwk/nwk_src/nwkRoute.c: 188:   if (entry)
 19887  0082BA  500B               	movf	nwkRouteRemove@entry^0,w,c
 19888  0082BC  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
 19889  0082BE  B4D8               	btfsc	status,2,c
 19890  0082C0  0012               	return	
 19891                           
 19892                           ;../nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
 19893  0082C2  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 19894  0082C8  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 19895  0082CE  EC6A  F042         	call	_NWK_RouteFreeEntry	;wreg free
 19896  0082D2  0012               	return		;funcret
 19897  0082D4                     __end_of_nwkRouteRemove:
 19898                           	opt callstack 0
 19899                           
 19900 ;; *************** function _NWK_RouteFreeEntry *****************
 19901 ;; Defined at:
 19902 ;;		line 134 in file "../nwk/nwk_src/nwkRoute.c"
 19903 ;; Parameters:    Size  Location     Type
 19904 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
 19905 ;;		 -> nwkRouteTable(70), NULL(0), 
 19906 ;; Auto vars:     Size  Location     Type
 19907 ;;		None
 19908 ;; Return value:  Size  Location     Type
 19909 ;;                  1    wreg      void 
 19910 ;; Registers used:
 19911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19912 ;; Tracked objects:
 19913 ;;		On entry : 0/1
 19914 ;;		On exit  : 0/0
 19915 ;;		Unchanged: 0/0
 19916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19921 ;;Total ram usage:        2 bytes
 19922 ;; Hardware stack levels used:    1
 19923 ;; Hardware stack levels required when called:    7
 19924 ;; This function calls:
 19925 ;;		Nothing
 19926 ;; This function is called by:
 19927 ;;		_nwkRouteRemove
 19928 ;;		_nwkRouteFrameSent
 19929 ;; This function uses a non-reentrant model
 19930 ;;
 19931                           
 19932                           	psect	text122
 19933  0084D4                     __ptext122:
 19934                           	opt callstack 0
 19935  0084D4                     _NWK_RouteFreeEntry:
 19936                           	opt callstack 19
 19937                           
 19938                           ;../nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);.
      +                          ./nwk/nwk_src/nwkRoute.c: 135: {;../nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
 19939                           
 19940                           ;incstack = 0
 19941  0084D4  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 19942  0084DA  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 19943  0084E0  B0DF               	btfsc	indf2,0,c
 19944  0084E2  0012               	return	
 19945                           
 19946                           ;../nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
 19947  0084E4  EE20 F001          	lfsr	2,1
 19948  0084E8  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 19949  0084EA  26D9               	addwf	fsr2l,f,c
 19950  0084EC  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 19951  0084EE  22DA               	addwfc	fsr2h,f,c
 19952  0084F0  0EFF               	movlw	255
 19953  0084F2  6EDE               	movwf	postinc2,c
 19954  0084F4  0EFF               	movlw	255
 19955  0084F6  6EDD               	movwf	postdec2,c
 19956                           
 19957                           ;../nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
 19958  0084F8  EE20 F005          	lfsr	2,5
 19959  0084FC  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 19960  0084FE  26D9               	addwf	fsr2l,f,c
 19961  008500  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 19962  008502  22DA               	addwfc	fsr2h,f,c
 19963  008504  0E00               	movlw	0
 19964  008506  6EDF               	movwf	indf2,c
 19965  008508  0012               	return		;funcret
 19966  00850A                     __end_of_NWK_RouteFreeEntry:
 19967                           	opt callstack 0
 19968                           
 19969 ;; *************** function _printf *****************
 19970 ;; Defined at:
 19971 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 19972 ;; Parameters:    Size  Location     Type
 19973 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
 19974 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 19975 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 19976 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 19977 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 19978 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 19979 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 19980 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 19981 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 19982 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 19983 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 19984 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 19985 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 19986 ;; Auto vars:     Size  Location     Type
 19987 ;;  ret             2    0        int 
 19988 ;;  ap              1   92[COMRAM] PTR void [1]
 19989 ;;		 -> ?_printf(2), 
 19990 ;; Return value:  Size  Location     Type
 19991 ;;                  2   84[COMRAM] int 
 19992 ;; Registers used:
 19993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19994 ;; Tracked objects:
 19995 ;;		On entry : 0/0
 19996 ;;		On exit  : 3F/1
 19997 ;;		Unchanged: 0/0
 19998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19999 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20000 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20002 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20003 ;;Total ram usage:        9 bytes
 20004 ;; Hardware stack levels used:    1
 20005 ;; Hardware stack levels required when called:   15
 20006 ;; This function calls:
 20007 ;;		_vfprintf
 20008 ;; This function is called by:
 20009 ;;		_appDataInd
 20010 ;;		_cmdSend
 20011 ;;		_cmdBcast
 20012 ;;		_cmdAddr
 20013 ;;		_cmdSetAddr
 20014 ;;		_cmdNaddr
 20015 ;;		_cmdSetNaddr
 20016 ;;		_cmdMac
 20017 ;;		_cmdSetSink
 20018 ;;		_cmdSetAES
 20019 ;;		_cmdGetCAD
 20020 ;;		_cmdRstCAD
 20021 ;;		_cmdGetMode
 20022 ;;		_cmdGetRFCH
 20023 ;;		_cmdSetRFCH
 20024 ;;		_cmdGetTX
 20025 ;;		_cmdSetTX
 20026 ;;		_cmdGetCADRSSI
 20027 ;;		_cmdSetCADRSSI
 20028 ;;		_cmdSetParity
 20029 ;;		_cmdBootLoad
 20030 ;;		_cmdGetSF
 20031 ;;		_cmdSetSF
 20032 ;;		_print_hop_table
 20033 ;;		_set_hop_table_ttl
 20034 ;;		_executeATCommand
 20035 ;;		_sendInfo
 20036 ;; This function uses a non-reentrant model
 20037 ;;
 20038                           
 20039                           	psect	text123
 20040  00887C                     __ptext123:
 20041                           	opt callstack 0
 20042  00887C                     _printf:
 20043                           	opt callstack 12
 20044                           
 20045                           ;incstack = 0
 20046  00887C  0E57               	movlw	low (?_printf+2)
 20047  00887E  6E5D               	movwf	printf@ap^0,c
 20048  008880  0E00               	movlw	0
 20049  008882  6E4E               	movwf	vfprintf@fp^0,c
 20050  008884  0E00               	movlw	0
 20051  008886  6E4F               	movwf	(vfprintf@fp+1)^0,c
 20052  008888  0060  F154  F050   	movff	printf@fmt,vfprintf@fmt
 20053  00888E  0060  F158  F051   	movff	printf@fmt+1,vfprintf@fmt+1
 20054  008894  0E5D               	movlw	low printf@ap
 20055  008896  6E52               	movwf	vfprintf@ap^0,c
 20056  008898  EC97  F03B         	call	_vfprintf	;wreg free
 20057                           
 20058                           ; BSR set to: 1
 20059  00889C  0012               	return		;funcret
 20060  00889E                     __end_of_printf:
 20061                           	opt callstack 0
 20062                           
 20063 ;; *************** function _vfprintf *****************
 20064 ;; Defined at:
 20065 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
 20068 ;;		 -> NULL(0), 
 20069 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
 20070 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 20071 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 20072 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 20073 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 20074 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 20075 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 20076 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 20077 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 20078 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 20079 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 20080 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 20081 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 20082 ;;  ap              1   81[COMRAM] PTR PTR void 
 20083 ;;		 -> printf@ap(1), 
 20084 ;; Auto vars:     Size  Location     Type
 20085 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 20086 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 20087 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 20088 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 20089 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 20090 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 20091 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 20092 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 20093 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 20094 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 20095 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 20096 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 20097 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 20098 ;; Return value:  Size  Location     Type
 20099 ;;                  2   77[COMRAM] int 
 20100 ;; Registers used:
 20101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20102 ;; Tracked objects:
 20103 ;;		On entry : 0/0
 20104 ;;		On exit  : 3F/1
 20105 ;;		Unchanged: 0/0
 20106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20107 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20110 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20111 ;;Total ram usage:        7 bytes
 20112 ;; Hardware stack levels used:    1
 20113 ;; Hardware stack levels required when called:   14
 20114 ;; This function calls:
 20115 ;;		_vfpfcnvrt
 20116 ;; This function is called by:
 20117 ;;		_printf
 20118 ;; This function uses a non-reentrant model
 20119 ;;
 20120                           
 20121                           	psect	text124
 20122  00772E                     __ptext124:
 20123                           	opt callstack 0
 20124  00772E                     _vfprintf:
 20125                           	opt callstack 12
 20126                           
 20127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 20128                           
 20129                           ; BSR set to: 1
 20130                           ;incstack = 0
 20131  00772E  0060  F140  F053   	movff	vfprintf@fmt,vfprintf@cfmt
 20132  007734  0060  F144  F054   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 20133                           
 20134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 20135  00773A  0E00               	movlw	0
 20136  00773C  0101               	movlb	1	; () banked
 20137  00773E  6F5A               	movwf	(_nout+1)& (0+255),b
 20138  007740  0E00               	movlw	0
 20139  007742  6F59               	movwf	_nout& (0+255),b
 20140                           
 20141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 20142  007744  D012               	goto	l14555
 20143  007746                     l14553:
 20144                           
 20145                           ; BSR set to: 1
 20146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 20147  007746  0060  F138  F046   	movff	vfprintf@fp,vfpfcnvrt@fp
 20148  00774C  0060  F13C  F047   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 20149  007752  0E53               	movlw	low vfprintf@cfmt
 20150  007754  6E48               	movwf	vfpfcnvrt@fmt^0,c
 20151  007756  0060  F148  F049   	movff	vfprintf@ap,vfpfcnvrt@ap
 20152  00775C  EC20  F003         	call	_vfpfcnvrt	;wreg free
 20153  007760  5046               	movf	?_vfpfcnvrt^0,w,c
 20154  007762  0101               	movlb	1	; () banked
 20155  007764  2759               	addwf	_nout& (0+255),f,b
 20156  007766  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
 20157  007768  235A               	addwfc	(_nout+1)& (0+255),f,b
 20158  00776A                     l14555:
 20159                           
 20160                           ; BSR set to: 1
 20161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 20162  00776A  0060  F14F  FFF6   	movff	vfprintf@cfmt,tblptrl
 20163  007770  0060  F153  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 20164  007776                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20165  007776  6AF8               	clrf	tblptru,c
 20166  007778                     	endif
 20167  007778                     	if	0	;tblptru may be non-zero
 20168  007778                     	endif
 20169  007778  0008               	tblrd		*
 20170  00777A  50F5               	movf	tablat,w,c
 20171  00777C  0900               	iorlw	0
 20172  00777E  A4D8               	btfss	status,2,c
 20173  007780  D7E2               	goto	l14553
 20174                           
 20175                           ; BSR set to: 1
 20176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 20177  007782  0060  F564  F04E   	movff	_nout,?_vfprintf
 20178  007788  0060  F568  F04F   	movff	_nout+1,?_vfprintf+1
 20179                           
 20180                           ; BSR set to: 1
 20181  00778E  0012               	return		;funcret
 20182  007790                     __end_of_vfprintf:
 20183                           	opt callstack 0
 20184                           
 20185 ;; *************** function _vfpfcnvrt *****************
 20186 ;; Defined at:
 20187 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20188 ;; Parameters:    Size  Location     Type
 20189 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
 20190 ;;		 -> NULL(0), 
 20191 ;;  fmt             1   71[COMRAM] PTR PTR unsigned char 
 20192 ;;		 -> vfprintf@cfmt(2), 
 20193 ;;  ap              1   72[COMRAM] PTR PTR void 
 20194 ;;		 -> printf@ap(1), 
 20195 ;; Auto vars:     Size  Location     Type
 20196 ;;  llu             8   14[BANK0 ] unsigned long long 
 20197 ;;  ll              8    0[BANK0 ] long long 
 20198 ;;  f               4    0        long long 
 20199 ;;  vp              3    0        PTR void 
 20200 ;;  ct              3    0        unsigned char [3]
 20201 ;;  done            2   10[BANK0 ] int 
 20202 ;;  i               2    0        int 
 20203 ;;  cp              1    9[BANK0 ] PTR unsigned char 
 20204 ;;		 -> ?_printf(2), appDataInd@data(65), 
 20205 ;;  c               1    8[BANK0 ] unsigned char 
 20206 ;; Return value:  Size  Location     Type
 20207 ;;                  2   69[COMRAM] int 
 20208 ;; Registers used:
 20209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/1
 20212 ;;		On exit  : 0/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20216 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20217 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20218 ;;      Totals:         8      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20219 ;;Total ram usage:       30 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:   13
 20222 ;; This function calls:
 20223 ;;		_atoi
 20224 ;;		_dtoa
 20225 ;;		_fputc
 20226 ;;		_isdigit
 20227 ;;		_stoa
 20228 ;;		_utoa
 20229 ;;		_xtoa
 20230 ;; This function is called by:
 20231 ;;		_vfprintf
 20232 ;; This function uses a non-reentrant model
 20233 ;;
 20234                           
 20235                           	psect	text125
 20236  000640                     __ptext125:
 20237                           	opt callstack 0
 20238  000640                     _vfpfcnvrt:
 20239                           	opt callstack 12
 20240                           
 20241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 20242                           
 20243                           ; BSR set to: 1
 20244                           ;incstack = 0
 20245  000640  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20246  000642  6ED9               	movwf	fsr2l,c
 20247  000644  6ADA               	clrf	fsr2h,c
 20248  000646  006F FF7B FFF6     	movff	postinc2,tblptrl
 20249  00064C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20250  000652                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20251  000652  6AF8               	clrf	tblptru,c
 20252  000654                     	endif
 20253  000654                     	if	0	;tblptru may be non-zero
 20254  000654                     	endif
 20255  000654  0008               	tblrd		*
 20256  000656  50F5               	movf	tablat,w,c
 20257  000658  0A25               	xorlw	37
 20258  00065A  A4D8               	btfss	status,2,c
 20259  00065C  D24C               	goto	l14475
 20260                           
 20261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 20262  00065E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20263  000660  6ED9               	movwf	fsr2l,c
 20264  000662  6ADA               	clrf	fsr2h,c
 20265  000664  2ADE               	incf	postinc2,f,c
 20266  000666  0E00               	movlw	0
 20267  000668  22DD               	addwfc	postdec2,f,c
 20268                           
 20269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 20270  00066A  0E00               	movlw	0
 20271  00066C  0100               	movlb	0	; () banked
 20272  00066E  6FDB               	movwf	(_width+1)& (0+255),b
 20273  000670  0E00               	movlw	0
 20274  000672  6FDA               	movwf	_width& (0+255),b
 20275  000674  C0DA  F0DE         	movff	_width,_flags
 20276  000678  C0DB  F0DF         	movff	_width+1,_flags+1
 20277                           
 20278                           ; BSR set to: 0
 20279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 20280  00067C  69DC               	setf	_prec& (0+255),b
 20281  00067E  69DD               	setf	(_prec+1)& (0+255),b
 20282                           
 20283                           ; BSR set to: 0
 20284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 20285  000680  0E00               	movlw	0
 20286  000682  6F6B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 20287  000684  0E00               	movlw	0
 20288  000686  D013               	goto	L22
 20289  000688                     l14363:
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 20293  000688  81DE               	bsf	_flags& (0+255),0,b
 20294  00068A                     l14365:
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 20298  00068A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20299  00068C  6ED9               	movwf	fsr2l,c
 20300  00068E  6ADA               	clrf	fsr2h,c
 20301  000690  2ADE               	incf	postinc2,f,c
 20302  000692  0E00               	movlw	0
 20303  000694  22DD               	addwfc	postdec2,f,c
 20304                           
 20305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 20306  000696  D030               	goto	l14389
 20307  000698                     l14367:
 20308                           
 20309                           ; BSR set to: 0
 20310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 20311  000698  83DE               	bsf	_flags& (0+255),1,b
 20312  00069A  D7F7               	goto	l14365
 20313  00069C                     l14371:
 20314                           
 20315                           ; BSR set to: 0
 20316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 20317  00069C  85DE               	bsf	_flags& (0+255),2,b
 20318  00069E  D7F5               	goto	l14365
 20319  0006A0                     l14375:
 20320                           
 20321                           ; BSR set to: 0
 20322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 20323  0006A0  87DE               	bsf	_flags& (0+255),3,b
 20324  0006A2  D7F3               	goto	l14365
 20325  0006A4                     l14379:
 20326                           
 20327                           ; BSR set to: 0
 20328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 20329  0006A4  89DE               	bsf	_flags& (0+255),4,b
 20330  0006A6  D7F1               	goto	l14365
 20331  0006A8                     l14383:
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 20335  0006A8  0E00               	movlw	0
 20336  0006AA  6F6B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 20337  0006AC  0E01               	movlw	1
 20338  0006AE                     L22:
 20339  0006AE  6F6A               	movwf	vfpfcnvrt@done& (0+255),b
 20340                           
 20341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 20342  0006B0  D023               	goto	l14389
 20343  0006B2                     l14387:
 20344                           
 20345                           ; BSR set to: 0
 20346  0006B2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20347  0006B4  6ED9               	movwf	fsr2l,c
 20348  0006B6  6ADA               	clrf	fsr2h,c
 20349  0006B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20350  0006BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20351  0006C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20352  0006C4  6AF8               	clrf	tblptru,c
 20353  0006C6                     	endif
 20354  0006C6                     	if	0	;tblptru may be non-zero
 20355  0006C6                     	endif
 20356  0006C6  0008               	tblrd		*
 20357  0006C8  50F5               	movf	tablat,w,c
 20358  0006CA  6E4A               	movwf	??_vfpfcnvrt^0,c
 20359  0006CC  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
 20360                           
 20361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20362                           ; Switch size 1, requested type "simple"
 20363                           ; Number of cases is 1, Range of values is 0 to 0
 20364                           ; switch strategies available:
 20365                           ; Name         Instructions Cycles
 20366                           ; simple_byte            4     3 (average)
 20367                           ;	Chosen strategy is simple_byte
 20368  0006CE  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 20369  0006D0  0A00               	xorlw	0	; case 0
 20370  0006D2  A4D8               	btfss	status,2,c
 20371  0006D4  D7E9               	goto	l14383
 20372                           
 20373                           ; BSR set to: 0
 20374                           ; Switch size 1, requested type "simple"
 20375                           ; Number of cases is 5, Range of values is 32 to 48
 20376                           ; switch strategies available:
 20377                           ; Name         Instructions Cycles
 20378                           ; simple_byte           16     9 (average)
 20379                           ;	Chosen strategy is simple_byte
 20380  0006D6  504A               	movf	??_vfpfcnvrt^0,w,c
 20381  0006D8  0A20               	xorlw	32	; case 32
 20382  0006DA  B4D8               	btfsc	status,2,c
 20383  0006DC  D7E1               	goto	l14375
 20384  0006DE  0A03               	xorlw	3	; case 35
 20385  0006E0  B4D8               	btfsc	status,2,c
 20386  0006E2  D7E0               	goto	l14379
 20387  0006E4  0A08               	xorlw	8	; case 43
 20388  0006E6  B4D8               	btfsc	status,2,c
 20389  0006E8  D7D9               	goto	l14371
 20390  0006EA  0A06               	xorlw	6	; case 45
 20391  0006EC  B4D8               	btfsc	status,2,c
 20392  0006EE  D7CC               	goto	l14363
 20393  0006F0  0A1D               	xorlw	29	; case 48
 20394  0006F2  B4D8               	btfsc	status,2,c
 20395  0006F4  D7D1               	goto	l14367
 20396  0006F6  D7D8               	goto	l14383
 20397  0006F8                     l14389:
 20398                           
 20399                           ; BSR set to: 0
 20400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 20401  0006F8  516A               	movf	vfpfcnvrt@done& (0+255),w,b
 20402  0006FA  116B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 20403  0006FC  B4D8               	btfsc	status,2,c
 20404  0006FE  D7D9               	goto	l14387
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 20408  000700  B1DE               	btfsc	_flags& (0+255),0,b
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 20412  000702  93DE               	bcf	_flags& (0+255),1,b
 20413                           
 20414                           ; BSR set to: 0
 20415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 20416  000704  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20417  000706  6ED9               	movwf	fsr2l,c
 20418  000708  6ADA               	clrf	fsr2h,c
 20419  00070A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20420  000710  006F FF77 FFF7     	movff	postdec2,tblptrh
 20421  000716                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20422  000716  6AF8               	clrf	tblptru,c
 20423  000718                     	endif
 20424  000718                     	if	0	;tblptru may be non-zero
 20425  000718                     	endif
 20426  000718  0008               	tblrd		*
 20427  00071A  50F5               	movf	tablat,w,c
 20428  00071C  0A2A               	xorlw	42
 20429  00071E  A4D8               	btfss	status,2,c
 20430  000720  D01C               	goto	l14403
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 20434  000722  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20435  000724  6ED9               	movwf	fsr2l,c
 20436  000726  6ADA               	clrf	fsr2h,c
 20437  000728  2ADE               	incf	postinc2,f,c
 20438  00072A  0E00               	movlw	0
 20439  00072C  22DD               	addwfc	postdec2,f,c
 20440                           
 20441                           ; BSR set to: 0
 20442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 20443  00072E  5049               	movf	vfpfcnvrt@ap^0,w,c
 20444  000730  6ED9               	movwf	fsr2l,c
 20445  000732  6ADA               	clrf	fsr2h,c
 20446  000734  0E02               	movlw	2
 20447  000736  26DF               	addwf	indf2,f,c
 20448  000738  5CDF               	subwf	indf2,w,c
 20449  00073A  6ED9               	movwf	fsr2l,c
 20450  00073C  6ADA               	clrf	fsr2h,c
 20451  00073E  006F FF78  F0DA    	movff	postinc2,_width
 20452  000744  006F FF78  F0DB    	movff	postinc2,_width+1
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 20456  00074A  AFDB               	btfss	(_width+1)& (0+255),7,b
 20457  00074C  D044               	goto	u13930
 20458                           
 20459                           ; BSR set to: 0
 20460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 20461  00074E  81DE               	bsf	_flags& (0+255),0,b
 20462                           
 20463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 20464  000750  6DDA               	negf	_width& (0+255),b
 20465  000752  1FDB               	comf	(_width+1)& (0+255),f,b
 20466  000754  B0D8               	btfsc	status,0,c
 20467  000756  2BDB               	incf	(_width+1)& (0+255),f,b
 20468  000758  D03E               	goto	u13930
 20469  00075A                     l14403:
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 20473  00075A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20474  00075C  6ED9               	movwf	fsr2l,c
 20475  00075E  6ADA               	clrf	fsr2h,c
 20476  000760  006F FF78  F009    	movff	postinc2,atoi@s
 20477  000766  006F FF74  F00A    	movff	postdec2,atoi@s+1
 20478  00076C  EC6D  F01F         	call	_atoi	;wreg free
 20479  000770  0060  F024  F0DA   	movff	?_atoi,_width
 20480  000776  0060  F028  F0DB   	movff	?_atoi+1,_width+1
 20481                           
 20482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 20483  00077C  D006               	goto	l14407
 20484  00077E                     l14405:
 20485                           
 20486                           ; BSR set to: 0
 20487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 20488  00077E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20489  000780  6ED9               	movwf	fsr2l,c
 20490  000782  6ADA               	clrf	fsr2h,c
 20491  000784  2ADE               	incf	postinc2,f,c
 20492  000786  0E00               	movlw	0
 20493  000788  22DD               	addwfc	postdec2,f,c
 20494  00078A                     l14407:
 20495  00078A  0ED0               	movlw	208
 20496  00078C  6E4A               	movwf	??_vfpfcnvrt^0,c
 20497  00078E  0EFF               	movlw	255
 20498  000790  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
 20499  000792  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20500  000794  6ED9               	movwf	fsr2l,c
 20501  000796  6ADA               	clrf	fsr2h,c
 20502  000798  006F FF7B FFF6     	movff	postinc2,tblptrl
 20503  00079E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20504  0007A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20505  0007A4  6AF8               	clrf	tblptru,c
 20506  0007A6                     	endif
 20507  0007A6                     	if	0	;tblptru may be non-zero
 20508  0007A6                     	endif
 20509  0007A6  0008               	tblrd		*
 20510  0007A8  50F5               	movf	tablat,w,c
 20511  0007AA  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
 20512  0007AC  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
 20513  0007AE  504A               	movf	??_vfpfcnvrt^0,w,c
 20514  0007B0  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
 20515  0007B2  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 20516  0007B4  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 20517  0007B6  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
 20518  0007B8  E106               	bnz	u13910
 20519  0007BA  0E0A               	movlw	10
 20520  0007BC  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
 20521  0007BE  B0D8               	btfsc	status,0,c
 20522  0007C0  D002               	goto	u13910
 20523  0007C2  0E01               	movlw	1
 20524  0007C4  D001               	goto	u13920
 20525  0007C6                     u13910:
 20526  0007C6  0E00               	movlw	0
 20527  0007C8                     u13920:
 20528  0007C8  0100               	movlb	0	; () banked
 20529  0007CA  6F6C               	movwf	_vfpfcnvrt$7242& (0+255),b
 20530  0007CC  6B6D               	clrf	(_vfpfcnvrt$7242+1)& (0+255),b
 20531                           
 20532                           ; BSR set to: 0
 20533  0007CE  516C               	movf	_vfpfcnvrt$7242& (0+255),w,b
 20534  0007D0  116D               	iorwf	(_vfpfcnvrt$7242+1)& (0+255),w,b
 20535  0007D2  A4D8               	btfss	status,2,c
 20536  0007D4  D7D4               	goto	l14405
 20537  0007D6                     u13930:
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20541  0007D6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20542  0007D8  6ED9               	movwf	fsr2l,c
 20543  0007DA  6ADA               	clrf	fsr2h,c
 20544  0007DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20545  0007E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20546  0007E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20547  0007E8  6AF8               	clrf	tblptru,c
 20548  0007EA                     	endif
 20549  0007EA                     	if	0	;tblptru may be non-zero
 20550  0007EA                     	endif
 20551  0007EA  0008               	tblrd		*
 20552  0007EC  50F5               	movf	tablat,w,c
 20553  0007EE  0A64               	xorlw	100
 20554  0007F0  B4D8               	btfsc	status,2,c
 20555  0007F2  D00F               	goto	u13950
 20556                           
 20557                           ; BSR set to: 0
 20558  0007F4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20559  0007F6  6ED9               	movwf	fsr2l,c
 20560  0007F8  6ADA               	clrf	fsr2h,c
 20561  0007FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20562  000800  006F FF77 FFF7     	movff	postdec2,tblptrh
 20563  000806                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20564  000806  6AF8               	clrf	tblptru,c
 20565  000808                     	endif
 20566  000808                     	if	0	;tblptru may be non-zero
 20567  000808                     	endif
 20568  000808  0008               	tblrd		*
 20569  00080A  50F5               	movf	tablat,w,c
 20570  00080C  0A69               	xorlw	105
 20571  00080E  A4D8               	btfss	status,2,c
 20572  000810  D044               	goto	l14425
 20573  000812                     u13950:
 20574                           
 20575                           ; BSR set to: 0
 20576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20577  000812  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20578  000814  6ED9               	movwf	fsr2l,c
 20579  000816  6ADA               	clrf	fsr2h,c
 20580  000818  2ADE               	incf	postinc2,f,c
 20581  00081A  0E00               	movlw	0
 20582  00081C  22DD               	addwfc	postdec2,f,c
 20583                           
 20584                           ; BSR set to: 0
 20585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20586  00081E  5049               	movf	vfpfcnvrt@ap^0,w,c
 20587  000820  6ED9               	movwf	fsr2l,c
 20588  000822  6ADA               	clrf	fsr2h,c
 20589  000824  50DF               	movf	indf2,w,c
 20590  000826  2ADF               	incf	indf2,f,c
 20591  000828  2ADF               	incf	indf2,f,c
 20592  00082A  6ED9               	movwf	fsr2l,c
 20593  00082C  6ADA               	clrf	fsr2h,c
 20594  00082E  006F FF78  F060    	movff	postinc2,vfpfcnvrt@ll
 20595  000834  006F FF74  F061    	movff	postdec2,vfpfcnvrt@ll+1
 20596  00083A  0E00               	movlw	0
 20597  00083C  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 20598  00083E  0EFF               	movlw	-1
 20599  000840  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 20600  000842  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 20601  000844  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 20602  000846  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 20603  000848  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 20604  00084A  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20608  00084C  0060  F118  F01F   	movff	vfpfcnvrt@fp,dtoa@fp
 20609  000852  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 20610  000858  0060  F180  F021   	movff	vfpfcnvrt@ll,dtoa@d
 20611  00085E  0060  F184  F022   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 20612  000864  0060  F188  F023   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 20613  00086A  0060  F18C  F024   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 20614  000870  0060  F190  F025   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 20615  000876  0060  F194  F026   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 20616  00087C  0060  F198  F027   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 20617  000882  0060  F19C  F028   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 20618  000888  EC48  F010         	call	_dtoa	;wreg free
 20619  00088C  0060  F07C  F046   	movff	?_dtoa,?_vfpfcnvrt
 20620  000892  0060  F080  F047   	movff	?_dtoa+1,?_vfpfcnvrt+1
 20621  000898  0012               	return	
 20622  00089A                     l14425:
 20623                           
 20624                           ; BSR set to: 0
 20625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 20626  00089A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20627  00089C  6ED9               	movwf	fsr2l,c
 20628  00089E  6ADA               	clrf	fsr2h,c
 20629  0008A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 20630  0008A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 20631  0008AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20632  0008AC  6AF8               	clrf	tblptru,c
 20633  0008AE                     	endif
 20634  0008AE                     	if	0	;tblptru may be non-zero
 20635  0008AE                     	endif
 20636  0008AE  0008               	tblrd		*
 20637  0008B0  50F5               	movf	tablat,w,c
 20638  0008B2  0A73               	xorlw	115
 20639  0008B4  A4D8               	btfss	status,2,c
 20640  0008B6  D022               	goto	l14435
 20641                           
 20642                           ; BSR set to: 0
 20643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 20644  0008B8  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20645  0008BA  6ED9               	movwf	fsr2l,c
 20646  0008BC  6ADA               	clrf	fsr2h,c
 20647  0008BE  2ADE               	incf	postinc2,f,c
 20648  0008C0  0E00               	movlw	0
 20649  0008C2  22DD               	addwfc	postdec2,f,c
 20650                           
 20651                           ; BSR set to: 0
 20652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20653  0008C4  5049               	movf	vfpfcnvrt@ap^0,w,c
 20654  0008C6  6ED9               	movwf	fsr2l,c
 20655  0008C8  6ADA               	clrf	fsr2h,c
 20656  0008CA  2ADF               	incf	indf2,f,c
 20657  0008CC  04DF               	decf	indf2,w,c
 20658  0008CE  6ED9               	movwf	fsr2l,c
 20659  0008D0  6ADA               	clrf	fsr2h,c
 20660  0008D2  006F FF78  F069    	movff	postinc2,vfpfcnvrt@cp
 20661                           
 20662                           ; BSR set to: 0
 20663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 20664  0008D8  0060  F118  F00D   	movff	vfpfcnvrt@fp,stoa@fp
 20665  0008DE  0060  F11C  F00E   	movff	vfpfcnvrt@fp+1,stoa@fp+1
 20666  0008E4  0060  F1A4  F00F   	movff	vfpfcnvrt@cp,stoa@s
 20667  0008EA  ECDC  F022         	call	_stoa	;wreg free
 20668  0008EE  0060  F034  F046   	movff	?_stoa,?_vfpfcnvrt
 20669  0008F4  0060  F038  F047   	movff	?_stoa+1,?_vfpfcnvrt+1
 20670  0008FA  0012               	return	
 20671  0008FC                     l14435:
 20672                           
 20673                           ; BSR set to: 0
 20674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 20675  0008FC  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20676  0008FE  6ED9               	movwf	fsr2l,c
 20677  000900  6ADA               	clrf	fsr2h,c
 20678  000902  006F FF7B FFF6     	movff	postinc2,tblptrl
 20679  000908  006F FF77 FFF7     	movff	postdec2,tblptrh
 20680  00090E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20681  00090E  6AF8               	clrf	tblptru,c
 20682  000910                     	endif
 20683  000910                     	if	0	;tblptru may be non-zero
 20684  000910                     	endif
 20685  000910  0008               	tblrd		*
 20686  000912  50F5               	movf	tablat,w,c
 20687  000914  0A75               	xorlw	117
 20688  000916  A4D8               	btfss	status,2,c
 20689  000918  D047               	goto	l14445
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 20693  00091A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20694  00091C  6ED9               	movwf	fsr2l,c
 20695  00091E  6ADA               	clrf	fsr2h,c
 20696  000920  2ADE               	incf	postinc2,f,c
 20697  000922  0E00               	movlw	0
 20698  000924  22DD               	addwfc	postdec2,f,c
 20699                           
 20700                           ; BSR set to: 0
 20701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20702  000926  5049               	movf	vfpfcnvrt@ap^0,w,c
 20703  000928  6ED9               	movwf	fsr2l,c
 20704  00092A  6ADA               	clrf	fsr2h,c
 20705  00092C  50DF               	movf	indf2,w,c
 20706  00092E  2ADF               	incf	indf2,f,c
 20707  000930  2ADF               	incf	indf2,f,c
 20708  000932  6ED9               	movwf	fsr2l,c
 20709  000934  6ADA               	clrf	fsr2h,c
 20710  000936  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 20711  00093C  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 20712  000942  0060  F128  F06E   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 20713  000948  0060  F12C  F06F   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 20714  00094E  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 20715  000950  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 20716  000952  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 20717  000954  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 20718  000956  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 20719  000958  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 20720                           
 20721                           ; BSR set to: 0
 20722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 20723  00095A  0060  F118  F01F   	movff	vfpfcnvrt@fp,utoa@fp
 20724  000960  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,utoa@fp+1
 20725  000966  0060  F1B8  F021   	movff	vfpfcnvrt@llu,utoa@d
 20726  00096C  0060  F1BC  F022   	movff	vfpfcnvrt@llu+1,utoa@d+1
 20727  000972  0060  F1C0  F023   	movff	vfpfcnvrt@llu+2,utoa@d+2
 20728  000978  0060  F1C4  F024   	movff	vfpfcnvrt@llu+3,utoa@d+3
 20729  00097E  0060  F1C8  F025   	movff	vfpfcnvrt@llu+4,utoa@d+4
 20730  000984  0060  F1CC  F026   	movff	vfpfcnvrt@llu+5,utoa@d+5
 20731  00098A  0060  F1D0  F027   	movff	vfpfcnvrt@llu+6,utoa@d+6
 20732  000990  0060  F1D4  F028   	movff	vfpfcnvrt@llu+7,utoa@d+7
 20733  000996  EC6A  F016         	call	_utoa	;wreg free
 20734  00099A  0060  F07C  F046   	movff	?_utoa,?_vfpfcnvrt
 20735  0009A0  0060  F080  F047   	movff	?_utoa+1,?_vfpfcnvrt+1
 20736  0009A6  0012               	return	
 20737  0009A8                     l14445:
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 20741  0009A8  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20742  0009AA  6ED9               	movwf	fsr2l,c
 20743  0009AC  6ADA               	clrf	fsr2h,c
 20744  0009AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 20745  0009B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 20746  0009BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20747  0009BA  6AF8               	clrf	tblptru,c
 20748  0009BC                     	endif
 20749  0009BC                     	if	0	;tblptru may be non-zero
 20750  0009BC                     	endif
 20751  0009BC  0008               	tblrd		*
 20752  0009BE  50F5               	movf	tablat,w,c
 20753  0009C0  0A78               	xorlw	120
 20754  0009C2  B4D8               	btfsc	status,2,c
 20755  0009C4  D00F               	goto	u13990
 20756                           
 20757                           ; BSR set to: 0
 20758  0009C6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20759  0009C8  6ED9               	movwf	fsr2l,c
 20760  0009CA  6ADA               	clrf	fsr2h,c
 20761  0009CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20762  0009D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20763  0009D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20764  0009D8  6AF8               	clrf	tblptru,c
 20765  0009DA                     	endif
 20766  0009DA                     	if	0	;tblptru may be non-zero
 20767  0009DA                     	endif
 20768  0009DA  0008               	tblrd		*
 20769  0009DC  50F5               	movf	tablat,w,c
 20770  0009DE  0A58               	xorlw	88
 20771  0009E0  A4D8               	btfss	status,2,c
 20772  0009E2  D058               	goto	l14459
 20773  0009E4                     u13990:
 20774                           
 20775                           ; BSR set to: 0
 20776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 20777  0009E4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20778  0009E6  6ED9               	movwf	fsr2l,c
 20779  0009E8  6ADA               	clrf	fsr2h,c
 20780  0009EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 20781  0009F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20782  0009F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20783  0009F6  6AF8               	clrf	tblptru,c
 20784  0009F8                     	endif
 20785  0009F8                     	if	0	;tblptru may be non-zero
 20786  0009F8                     	endif
 20787  0009F8  0008               	tblrd		*
 20788  0009FA  006F FFD4  F068    	movff	tablat,vfpfcnvrt@c
 20789                           
 20790                           ; BSR set to: 0
 20791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 20792  000A00  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20793  000A02  6ED9               	movwf	fsr2l,c
 20794  000A04  6ADA               	clrf	fsr2h,c
 20795  000A06  2ADE               	incf	postinc2,f,c
 20796  000A08  0E00               	movlw	0
 20797  000A0A  22DD               	addwfc	postdec2,f,c
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20801  000A0C  5049               	movf	vfpfcnvrt@ap^0,w,c
 20802  000A0E  6ED9               	movwf	fsr2l,c
 20803  000A10  6ADA               	clrf	fsr2h,c
 20804  000A12  50DF               	movf	indf2,w,c
 20805  000A14  2ADF               	incf	indf2,f,c
 20806  000A16  2ADF               	incf	indf2,f,c
 20807  000A18  6ED9               	movwf	fsr2l,c
 20808  000A1A  6ADA               	clrf	fsr2h,c
 20809  000A1C  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 20810  000A22  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 20811  000A28  0060  F128  F06E   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 20812  000A2E  0060  F12C  F06F   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 20813  000A34  6B70               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 20814  000A36  6B71               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 20815  000A38  6B72               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 20816  000A3A  6B73               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 20817  000A3C  6B74               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 20818  000A3E  6B75               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 20822  000A40  0060  F118  F01F   	movff	vfpfcnvrt@fp,xtoa@fp
 20823  000A46  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 20824  000A4C  0060  F1B8  F021   	movff	vfpfcnvrt@llu,xtoa@d
 20825  000A52  0060  F1BC  F022   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 20826  000A58  0060  F1C0  F023   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 20827  000A5E  0060  F1C4  F024   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 20828  000A64  0060  F1C8  F025   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 20829  000A6A  0060  F1CC  F026   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 20830  000A70  0060  F1D0  F027   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 20831  000A76  0060  F1D4  F028   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 20832  000A7C  0060  F1A0  F029   	movff	vfpfcnvrt@c,xtoa@x
 20833  000A82  ECA0  F011         	call	_xtoa	;wreg free
 20834  000A86  0060  F07C  F046   	movff	?_xtoa,?_vfpfcnvrt
 20835  000A8C  0060  F080  F047   	movff	?_xtoa+1,?_vfpfcnvrt+1
 20836  000A92  0012               	return	
 20837  000A94                     l14459:
 20838                           
 20839                           ; BSR set to: 0
 20840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 20841  000A94  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20842  000A96  6ED9               	movwf	fsr2l,c
 20843  000A98  6ADA               	clrf	fsr2h,c
 20844  000A9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20845  000AA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 20846  000AA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20847  000AA6  6AF8               	clrf	tblptru,c
 20848  000AA8                     	endif
 20849  000AA8                     	if	0	;tblptru may be non-zero
 20850  000AA8                     	endif
 20851  000AA8  0008               	tblrd		*
 20852  000AAA  50F5               	movf	tablat,w,c
 20853  000AAC  0A25               	xorlw	37
 20854  000AAE  A4D8               	btfss	status,2,c
 20855  000AB0  D017               	goto	l14469
 20856                           
 20857                           ; BSR set to: 0
 20858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 20859  000AB2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20860  000AB4  6ED9               	movwf	fsr2l,c
 20861  000AB6  6ADA               	clrf	fsr2h,c
 20862  000AB8  2ADE               	incf	postinc2,f,c
 20863  000ABA  0E00               	movlw	0
 20864  000ABC  22DD               	addwfc	postdec2,f,c
 20865                           
 20866                           ; BSR set to: 0
 20867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 20868  000ABE  0E00               	movlw	0
 20869  000AC0  6E05               	movwf	(fputc@c+1)^0,c
 20870  000AC2  0E25               	movlw	37
 20871  000AC4  6E04               	movwf	fputc@c^0,c
 20872  000AC6  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 20873  000ACC  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 20874  000AD2  ECC6  F03A         	call	_fputc	;wreg free
 20875  000AD6                     l14465:
 20876                           
 20877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 20878  000AD6  0E00               	movlw	0
 20879  000AD8  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 20880  000ADA  0E01               	movlw	1
 20881  000ADC  6E46               	movwf	?_vfpfcnvrt^0,c
 20882  000ADE  0012               	return	
 20883  000AE0                     l14469:
 20884                           
 20885                           ; BSR set to: 0
 20886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 20887  000AE0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20888  000AE2  6ED9               	movwf	fsr2l,c
 20889  000AE4  6ADA               	clrf	fsr2h,c
 20890  000AE6  2ADE               	incf	postinc2,f,c
 20891  000AE8  0E00               	movlw	0
 20892  000AEA  22DD               	addwfc	postdec2,f,c
 20893                           
 20894                           ; BSR set to: 0
 20895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 20896  000AEC  0E00               	movlw	0
 20897  000AEE  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 20898  000AF0  0E00               	movlw	0
 20899  000AF2  6E46               	movwf	?_vfpfcnvrt^0,c
 20900  000AF4  0012               	return	
 20901  000AF6                     l14475:
 20902                           
 20903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 20904  000AF6  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20905  000AF8  6ED9               	movwf	fsr2l,c
 20906  000AFA  6ADA               	clrf	fsr2h,c
 20907  000AFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20908  000B02  006F FF77 FFF7     	movff	postdec2,tblptrh
 20909  000B08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20910  000B08  6AF8               	clrf	tblptru,c
 20911  000B0A                     	endif
 20912  000B0A                     	if	0	;tblptru may be non-zero
 20913  000B0A                     	endif
 20914  000B0A  0008               	tblrd		*
 20915  000B0C  50F5               	movf	tablat,w,c
 20916  000B0E  6E04               	movwf	fputc@c^0,c
 20917  000B10  6A05               	clrf	(fputc@c+1)^0,c
 20918  000B12  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 20919  000B18  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 20920  000B1E  ECC6  F03A         	call	_fputc	;wreg free
 20921                           
 20922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 20923  000B22  5048               	movf	vfpfcnvrt@fmt^0,w,c
 20924  000B24  6ED9               	movwf	fsr2l,c
 20925  000B26  6ADA               	clrf	fsr2h,c
 20926  000B28  2ADE               	incf	postinc2,f,c
 20927  000B2A  0E00               	movlw	0
 20928  000B2C  22DD               	addwfc	postdec2,f,c
 20929  000B2E  D7D3               	goto	l14465
 20930  000B30                     __end_of_vfpfcnvrt:
 20931                           	opt callstack 0
 20932                           
 20933 ;; *************** function _xtoa *****************
 20934 ;; Defined at:
 20935 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 20936 ;; Parameters:    Size  Location     Type
 20937 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 20938 ;;		 -> NULL(0), 
 20939 ;;  d               8   32[COMRAM] unsigned long long 
 20940 ;;  x               1   40[COMRAM] unsigned char 
 20941 ;; Auto vars:     Size  Location     Type
 20942 ;;  n               8   57[COMRAM] unsigned long long 
 20943 ;;  c               2   67[COMRAM] int 
 20944 ;;  i               2   65[COMRAM] int 
 20945 ;;  w               2   55[COMRAM] int 
 20946 ;;  p               2   53[COMRAM] int 
 20947 ;; Return value:  Size  Location     Type
 20948 ;;                  2   30[COMRAM] int 
 20949 ;; Registers used:
 20950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20951 ;; Tracked objects:
 20952 ;;		On entry : 3F/0
 20953 ;;		On exit  : 0/0
 20954 ;;		Unchanged: 0/0
 20955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20956 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20957 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20958 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20959 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20960 ;;Total ram usage:       39 bytes
 20961 ;; Hardware stack levels used:    1
 20962 ;; Hardware stack levels required when called:   12
 20963 ;; This function calls:
 20964 ;;		_isalpha
 20965 ;;		_isupper
 20966 ;;		_pad
 20967 ;;		_toupper
 20968 ;; This function is called by:
 20969 ;;		_vfpfcnvrt
 20970 ;; This function uses a non-reentrant model
 20971 ;;
 20972                           
 20973                           	psect	text126
 20974  002340                     __ptext126:
 20975                           	opt callstack 0
 20976  002340                     _xtoa:
 20977                           	opt callstack 12
 20978                           
 20979                           ; BSR set to: 0
 20980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 20981                           
 20982                           ;incstack = 0
 20983  002340  AFDD               	btfss	(_prec+1)& (0+255),7,b
 20984                           
 20985                           ; BSR set to: 0
 20986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 20987  002342  93DE               	bcf	_flags& (0+255),1,b
 20988                           
 20989                           ; BSR set to: 0
 20990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 20991  002344  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 20992  002346  D005               	goto	u13570
 20993  002348  51DD               	movf	(_prec+1)& (0+255),w,b
 20994  00234A  E108               	bnz	l3127
 20995  00234C  05DC               	decf	_prec& (0+255),w,b
 20996  00234E  B0D8               	btfsc	status,0,c
 20997  002350  D005               	goto	l3127
 20998  002352                     u13570:
 20999                           
 21000                           ; BSR set to: 0
 21001  002352  0E00               	movlw	0
 21002  002354  6E37               	movwf	(xtoa@p+1)^0,c
 21003  002356  0E01               	movlw	1
 21004  002358  6E36               	movwf	xtoa@p^0,c
 21005  00235A  D006               	goto	l3129
 21006  00235C                     l3127:
 21007                           
 21008                           ; BSR set to: 0
 21009  00235C  0060  F370  F036   	movff	_prec,xtoa@p
 21010  002362  0060  F374  F037   	movff	_prec+1,xtoa@p+1
 21011  002368                     l3129:
 21012                           
 21013                           ; BSR set to: 0
 21014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 21015  002368  0060  F368  F038   	movff	_width,xtoa@w
 21016  00236E  0060  F36C  F039   	movff	_width+1,xtoa@w+1
 21017                           
 21018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 21019  002374  A9DE               	btfss	_flags& (0+255),4,b
 21020  002376  D004               	goto	l14217
 21021                           
 21022                           ; BSR set to: 0
 21023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 21024  002378  0EFE               	movlw	254
 21025  00237A  2638               	addwf	xtoa@w^0,f,c
 21026  00237C  0EFF               	movlw	255
 21027  00237E  2239               	addwfc	(xtoa@w+1)^0,f,c
 21028  002380                     l14217:
 21029                           
 21030                           ; BSR set to: 0
 21031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 21032  002380  0060  F084  F03A   	movff	xtoa@d,xtoa@n
 21033  002386  0060  F088  F03B   	movff	xtoa@d+1,xtoa@n+1
 21034  00238C  0060  F08C  F03C   	movff	xtoa@d+2,xtoa@n+2
 21035  002392  0060  F090  F03D   	movff	xtoa@d+3,xtoa@n+3
 21036  002398  0060  F094  F03E   	movff	xtoa@d+4,xtoa@n+4
 21037  00239E  0060  F098  F03F   	movff	xtoa@d+5,xtoa@n+5
 21038  0023A4  0060  F09C  F040   	movff	xtoa@d+6,xtoa@n+6
 21039  0023AA  0060  F0A0  F041   	movff	xtoa@d+7,xtoa@n+7
 21040                           
 21041                           ; BSR set to: 0
 21042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 21043  0023B0  0E00               	movlw	0
 21044  0023B2  6E43               	movwf	(xtoa@i+1)^0,c
 21045  0023B4  0E1F               	movlw	31
 21046  0023B6  6E42               	movwf	xtoa@i^0,c
 21047                           
 21048                           ; BSR set to: 0
 21049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 21050  0023B8  0E00               	movlw	0
 21051  0023BA  0101               	movlb	1	; () banked
 21052  0023BC  6F94               	movwf	(_dbuf+31)& (0+255),b
 21053                           
 21054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21055  0023BE  D0A8               	goto	l14253
 21056  0023C0                     l14223:
 21057                           
 21058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 21059  0023C0  0642               	decf	xtoa@i^0,f,c
 21060  0023C2  A0D8               	btfss	status,0,c
 21061  0023C4  0643               	decf	(xtoa@i+1)^0,f,c
 21062                           
 21063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 21064  0023C6  0E0F               	movlw	15
 21065  0023C8  143A               	andwf	xtoa@n^0,w,c
 21066  0023CA  6E44               	movwf	xtoa@c^0,c
 21067  0023CC  6A45               	clrf	(xtoa@c+1)^0,c
 21068                           
 21069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 21070  0023CE  BE45               	btfsc	(xtoa@c+1)^0,7,c
 21071  0023D0  D008               	goto	l14231
 21072  0023D2  5045               	movf	(xtoa@c+1)^0,w,c
 21073  0023D4  E104               	bnz	u13590
 21074  0023D6  0E0A               	movlw	10
 21075  0023D8  5C44               	subwf	xtoa@c^0,w,c
 21076  0023DA  A0D8               	btfss	status,0,c
 21077  0023DC  D002               	goto	l14231
 21078  0023DE                     u13590:
 21079  0023DE  0E57               	movlw	87
 21080  0023E0  D001               	goto	L23
 21081  0023E2                     l14231:
 21082  0023E2  0E30               	movlw	48
 21083  0023E4                     L23:
 21084  0023E4  2444               	addwf	xtoa@c^0,w,c
 21085  0023E6  6E44               	movwf	xtoa@c^0,c
 21086  0023E8  0E00               	movlw	0
 21087  0023EA  2045               	addwfc	(xtoa@c+1)^0,w,c
 21088  0023EC  6E45               	movwf	(xtoa@c+1)^0,c
 21089                           
 21090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 21091  0023EE  0EBF               	movlw	191
 21092  0023F0  6E2A               	movwf	??_xtoa^0,c
 21093  0023F2  0EFF               	movlw	255
 21094  0023F4  6E2B               	movwf	(??_xtoa+1)^0,c
 21095  0023F6  5029               	movf	xtoa@x^0,w,c
 21096  0023F8  6E2C               	movwf	(??_xtoa+2)^0,c
 21097  0023FA  6A2D               	clrf	(??_xtoa+3)^0,c
 21098  0023FC  502A               	movf	??_xtoa^0,w,c
 21099  0023FE  262C               	addwf	(??_xtoa+2)^0,f,c
 21100  002400  502B               	movf	(??_xtoa+1)^0,w,c
 21101  002402  222D               	addwfc	(??_xtoa+3)^0,f,c
 21102  002404  502D               	movf	(??_xtoa+3)^0,w,c
 21103  002406  E106               	bnz	u13600
 21104  002408  0E1A               	movlw	26
 21105  00240A  5C2C               	subwf	(??_xtoa+2)^0,w,c
 21106  00240C  B0D8               	btfsc	status,0,c
 21107  00240E  D002               	goto	u13600
 21108  002410  0E01               	movlw	1
 21109  002412  D001               	goto	u13610
 21110  002414                     u13600:
 21111  002414  0E00               	movlw	0
 21112  002416                     u13610:
 21113  002416  6E32               	movwf	_xtoa$7227^0,c
 21114  002418  6A33               	clrf	(_xtoa$7227+1)^0,c
 21115  00241A  5032               	movf	_xtoa$7227^0,w,c
 21116  00241C  1033               	iorwf	(_xtoa$7227+1)^0,w,c
 21117  00241E  B4D8               	btfsc	status,2,c
 21118  002420  D02B               	goto	l14245
 21119  002422  0E9F               	movlw	159
 21120  002424  6E2A               	movwf	??_xtoa^0,c
 21121  002426  0EFF               	movlw	255
 21122  002428  6E2B               	movwf	(??_xtoa+1)^0,c
 21123  00242A  0E20               	movlw	32
 21124  00242C  1044               	iorwf	xtoa@c^0,w,c
 21125  00242E  6E2C               	movwf	(??_xtoa+2)^0,c
 21126  002430  0E00               	movlw	0
 21127  002432  1045               	iorwf	(xtoa@c+1)^0,w,c
 21128  002434  6E2D               	movwf	(??_xtoa+3)^0,c
 21129  002436  502A               	movf	??_xtoa^0,w,c
 21130  002438  262C               	addwf	(??_xtoa+2)^0,f,c
 21131  00243A  502B               	movf	(??_xtoa+1)^0,w,c
 21132  00243C  222D               	addwfc	(??_xtoa+3)^0,f,c
 21133  00243E  502D               	movf	(??_xtoa+3)^0,w,c
 21134  002440  E106               	bnz	u13630
 21135  002442  0E1A               	movlw	26
 21136  002444  5C2C               	subwf	(??_xtoa+2)^0,w,c
 21137  002446  B0D8               	btfsc	status,0,c
 21138  002448  D002               	goto	u13630
 21139  00244A  0E01               	movlw	1
 21140  00244C  D001               	goto	u13640
 21141  00244E                     u13630:
 21142  00244E  0E00               	movlw	0
 21143  002450                     u13640:
 21144  002450  6E34               	movwf	_xtoa$7228^0,c
 21145  002452  6A35               	clrf	(_xtoa$7228+1)^0,c
 21146  002454  5034               	movf	_xtoa$7228^0,w,c
 21147  002456  1035               	iorwf	(_xtoa$7228+1)^0,w,c
 21148  002458  B4D8               	btfsc	status,2,c
 21149  00245A  D00E               	goto	l14245
 21150                           
 21151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 21152  00245C  0060  F110  F008   	movff	xtoa@c,toupper@c
 21153  002462  0060  F114  F009   	movff	xtoa@c+1,toupper@c+1
 21154  002468  ECEC  F03D         	call	_toupper	;wreg free
 21155  00246C  0060  F020  F044   	movff	?_toupper,xtoa@c
 21156  002472  0060  F024  F045   	movff	?_toupper+1,xtoa@c+1
 21157  002478                     l14245:
 21158                           
 21159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 21160  002478  0E75               	movlw	low _dbuf
 21161  00247A  2442               	addwf	xtoa@i^0,w,c
 21162  00247C  6ED9               	movwf	fsr2l,c
 21163  00247E  0E01               	movlw	high _dbuf
 21164  002480  2043               	addwfc	(xtoa@i+1)^0,w,c
 21165  002482  6EDA               	movwf	fsr2h,c
 21166  002484  0060  F113  FFDF   	movff	xtoa@c,indf2
 21167                           
 21168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 21169  00248A  0636               	decf	xtoa@p^0,f,c
 21170  00248C  A0D8               	btfss	status,0,c
 21171  00248E  0637               	decf	(xtoa@p+1)^0,f,c
 21172                           
 21173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 21174  002490  0638               	decf	xtoa@w^0,f,c
 21175  002492  A0D8               	btfss	status,0,c
 21176  002494  0639               	decf	(xtoa@w+1)^0,f,c
 21177                           
 21178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 21179  002496  0060  F0E8  F02A   	movff	xtoa@n,??_xtoa
 21180  00249C  0060  F0EC  F02B   	movff	xtoa@n+1,??_xtoa+1
 21181  0024A2  0060  F0F0  F02C   	movff	xtoa@n+2,??_xtoa+2
 21182  0024A8  0060  F0F4  F02D   	movff	xtoa@n+3,??_xtoa+3
 21183  0024AE  0060  F0F8  F02E   	movff	xtoa@n+4,??_xtoa+4
 21184  0024B4  0060  F0FC  F02F   	movff	xtoa@n+5,??_xtoa+5
 21185  0024BA  0060  F100  F030   	movff	xtoa@n+6,??_xtoa+6
 21186  0024C0  0060  F104  F031   	movff	xtoa@n+7,??_xtoa+7
 21187  0024C6  0E05               	movlw	5
 21188  0024C8  D009               	goto	u13660
 21189  0024CA                     u13665:
 21190  0024CA  90D8               	bcf	status,0,c
 21191  0024CC  3231               	rrcf	(??_xtoa+7)^0,f,c
 21192  0024CE  3230               	rrcf	(??_xtoa+6)^0,f,c
 21193  0024D0  322F               	rrcf	(??_xtoa+5)^0,f,c
 21194  0024D2  322E               	rrcf	(??_xtoa+4)^0,f,c
 21195  0024D4  322D               	rrcf	(??_xtoa+3)^0,f,c
 21196  0024D6  322C               	rrcf	(??_xtoa+2)^0,f,c
 21197  0024D8  322B               	rrcf	(??_xtoa+1)^0,f,c
 21198  0024DA  322A               	rrcf	??_xtoa^0,f,c
 21199  0024DC                     u13660:
 21200  0024DC  2EE8               	decfsz	wreg,f,c
 21201  0024DE  D7F5               	goto	u13665
 21202  0024E0  0060  F0A8  F03A   	movff	??_xtoa,xtoa@n
 21203  0024E6  0060  F0AC  F03B   	movff	??_xtoa+1,xtoa@n+1
 21204  0024EC  0060  F0B0  F03C   	movff	??_xtoa+2,xtoa@n+2
 21205  0024F2  0060  F0B4  F03D   	movff	??_xtoa+3,xtoa@n+3
 21206  0024F8  0060  F0B8  F03E   	movff	??_xtoa+4,xtoa@n+4
 21207  0024FE  0060  F0BC  F03F   	movff	??_xtoa+5,xtoa@n+5
 21208  002504  0060  F0C0  F040   	movff	??_xtoa+6,xtoa@n+6
 21209  00250A  0060  F0C4  F041   	movff	??_xtoa+7,xtoa@n+7
 21210  002510                     l14253:
 21211                           
 21212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21213  002510  BE43               	btfsc	(xtoa@i+1)^0,7,c
 21214  002512  D021               	goto	u13710
 21215  002514  5043               	movf	(xtoa@i+1)^0,w,c
 21216  002516  E104               	bnz	u13670
 21217  002518  0E02               	movlw	2
 21218  00251A  5C42               	subwf	xtoa@i^0,w,c
 21219  00251C  A0D8               	btfss	status,0,c
 21220  00251E  D01B               	goto	u13710
 21221  002520                     u13670:
 21222  002520  503A               	movf	xtoa@n^0,w,c
 21223  002522  103B               	iorwf	(xtoa@n+1)^0,w,c
 21224  002524  103C               	iorwf	(xtoa@n+2)^0,w,c
 21225  002526  103D               	iorwf	(xtoa@n+3)^0,w,c
 21226  002528  103E               	iorwf	(xtoa@n+4)^0,w,c
 21227  00252A  103F               	iorwf	(xtoa@n+5)^0,w,c
 21228  00252C  1040               	iorwf	(xtoa@n+6)^0,w,c
 21229  00252E  1041               	iorwf	(xtoa@n+7)^0,w,c
 21230  002530  A4D8               	btfss	status,2,c
 21231  002532  D746               	goto	l14223
 21232  002534  BE37               	btfsc	(xtoa@p+1)^0,7,c
 21233  002536  D005               	goto	u13690
 21234  002538  5037               	movf	(xtoa@p+1)^0,w,c
 21235  00253A  E102               	bnz	u13691
 21236  00253C  0436               	decf	xtoa@p^0,w,c
 21237  00253E  B0D8               	btfsc	status,0,c
 21238  002540                     u13691:
 21239  002540  D73F               	goto	l14223
 21240  002542                     u13690:
 21241  002542  BE39               	btfsc	(xtoa@w+1)^0,7,c
 21242  002544  D008               	goto	u13710
 21243  002546  5039               	movf	(xtoa@w+1)^0,w,c
 21244  002548  E103               	bnz	u13700
 21245  00254A  0438               	decf	xtoa@w^0,w,c
 21246  00254C  A0D8               	btfss	status,0,c
 21247  00254E  D003               	goto	u13710
 21248  002550                     u13700:
 21249  002550  0100               	movlb	0	; () banked
 21250  002552  B3DE               	btfsc	_flags& (0+255),1,b
 21251  002554  D735               	goto	l14223
 21252  002556                     u13710:
 21253                           
 21254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 21255  002556  0100               	movlb	0	; () banked
 21256  002558  A9DE               	btfss	_flags& (0+255),4,b
 21257  00255A  D017               	goto	l14269
 21258                           
 21259                           ; BSR set to: 0
 21260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 21261  00255C  0642               	decf	xtoa@i^0,f,c
 21262  00255E  A0D8               	btfss	status,0,c
 21263  002560  0643               	decf	(xtoa@i+1)^0,f,c
 21264                           
 21265                           ; BSR set to: 0
 21266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 21267  002562  0E75               	movlw	low _dbuf
 21268  002564  2442               	addwf	xtoa@i^0,w,c
 21269  002566  6ED9               	movwf	fsr2l,c
 21270  002568  0E01               	movlw	high _dbuf
 21271  00256A  2043               	addwfc	(xtoa@i+1)^0,w,c
 21272  00256C  6EDA               	movwf	fsr2h,c
 21273  00256E  0060  F0A7  FFDF   	movff	xtoa@x,indf2
 21274                           
 21275                           ; BSR set to: 0
 21276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 21277  002574  0642               	decf	xtoa@i^0,f,c
 21278  002576  A0D8               	btfss	status,0,c
 21279  002578  0643               	decf	(xtoa@i+1)^0,f,c
 21280                           
 21281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 21282  00257A  0E75               	movlw	low _dbuf
 21283  00257C  2442               	addwf	xtoa@i^0,w,c
 21284  00257E  6ED9               	movwf	fsr2l,c
 21285  002580  0E01               	movlw	high _dbuf
 21286  002582  2043               	addwfc	(xtoa@i+1)^0,w,c
 21287  002584  6EDA               	movwf	fsr2h,c
 21288  002586  0E30               	movlw	48
 21289  002588  6EDF               	movwf	indf2,c
 21290  00258A                     l14269:
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 21294  00258A  0060  F07C  F014   	movff	xtoa@fp,pad@fp
 21295  002590  0060  F080  F015   	movff	xtoa@fp+1,pad@fp+1
 21296  002596  0E75               	movlw	low _dbuf
 21297  002598  2442               	addwf	xtoa@i^0,w,c
 21298  00259A  6E16               	movwf	pad@buf^0,c
 21299  00259C  0E01               	movlw	high _dbuf
 21300  00259E  2043               	addwfc	(xtoa@i+1)^0,w,c
 21301  0025A0  6E17               	movwf	(pad@buf+1)^0,c
 21302  0025A2  0060  F0E0  F018   	movff	xtoa@w,pad@p
 21303  0025A8  0060  F0E4  F019   	movff	xtoa@w+1,pad@p+1
 21304  0025AE  EC95  F032         	call	_pad	;wreg free
 21305  0025B2  0060  F050  F01F   	movff	?_pad,?_xtoa
 21306  0025B8  0060  F054  F020   	movff	?_pad+1,?_xtoa+1
 21307  0025BE  0012               	return		;funcret
 21308  0025C0                     __end_of_xtoa:
 21309                           	opt callstack 0
 21310                           
 21311 ;; *************** function _toupper *****************
 21312 ;; Defined at:
 21313 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 21314 ;; Parameters:    Size  Location     Type
 21315 ;;  c               2    7[COMRAM] int 
 21316 ;; Auto vars:     Size  Location     Type
 21317 ;;		None
 21318 ;; Return value:  Size  Location     Type
 21319 ;;                  2    7[COMRAM] int 
 21320 ;; Registers used:
 21321 ;;		wreg, status,2, status,0
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/0
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21330 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21331 ;;Total ram usage:        8 bytes
 21332 ;; Hardware stack levels used:    1
 21333 ;; Hardware stack levels required when called:    8
 21334 ;; This function calls:
 21335 ;;		_islower
 21336 ;; This function is called by:
 21337 ;;		_xtoa
 21338 ;;		___strtoxl
 21339 ;; This function uses a non-reentrant model
 21340 ;;
 21341                           
 21342                           	psect	text127
 21343  007BD8                     __ptext127:
 21344                           	opt callstack 0
 21345  007BD8                     _toupper:
 21346                           	opt callstack 15
 21347                           
 21348                           ;incstack = 0
 21349  007BD8  0E9F               	movlw	159
 21350  007BDA  6E0A               	movwf	??_toupper^0,c
 21351  007BDC  0EFF               	movlw	255
 21352  007BDE  6E0B               	movwf	(??_toupper+1)^0,c
 21353  007BE0  0060  F020  F00C   	movff	toupper@c,??_toupper+2
 21354  007BE6  0060  F024  F00D   	movff	toupper@c+1,??_toupper+3
 21355  007BEC  500A               	movf	??_toupper^0,w,c
 21356  007BEE  260C               	addwf	(??_toupper+2)^0,f,c
 21357  007BF0  500B               	movf	(??_toupper+1)^0,w,c
 21358  007BF2  220D               	addwfc	(??_toupper+3)^0,f,c
 21359  007BF4  500D               	movf	(??_toupper+3)^0,w,c
 21360  007BF6  E106               	bnz	u12980
 21361  007BF8  0E1A               	movlw	26
 21362  007BFA  5C0C               	subwf	(??_toupper+2)^0,w,c
 21363  007BFC  B0D8               	btfsc	status,0,c
 21364  007BFE  D002               	goto	u12980
 21365  007C00  0E01               	movlw	1
 21366  007C02  D001               	goto	u12990
 21367  007C04                     u12980:
 21368  007C04  0E00               	movlw	0
 21369  007C06                     u12990:
 21370  007C06  6E0E               	movwf	_toupper$7868^0,c
 21371  007C08  6A0F               	clrf	(_toupper$7868+1)^0,c
 21372  007C0A  500E               	movf	_toupper$7868^0,w,c
 21373  007C0C  100F               	iorwf	(_toupper$7868+1)^0,w,c
 21374  007C0E  B4D8               	btfsc	status,2,c
 21375  007C10  D005               	goto	l4032
 21376  007C12  0E5F               	movlw	95
 21377  007C14  1408               	andwf	toupper@c^0,w,c
 21378  007C16  6E08               	movwf	?_toupper^0,c
 21379  007C18  6A09               	clrf	(?_toupper+1)^0,c
 21380  007C1A  0012               	return	
 21381  007C1C                     l4032:
 21382  007C1C  0060  F020  F008   	movff	toupper@c,?_toupper
 21383  007C22  0060  F024  F009   	movff	toupper@c+1,?_toupper+1
 21384  007C28  0012               	return		;funcret
 21385  007C2A                     __end_of_toupper:
 21386                           	opt callstack 0
 21387                           
 21388 ;; *************** function _islower *****************
 21389 ;; Defined at:
 21390 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 21391 ;; Parameters:    Size  Location     Type
 21392 ;;  c               2    1[COMRAM] int 
 21393 ;; Auto vars:     Size  Location     Type
 21394 ;;		None
 21395 ;; Return value:  Size  Location     Type
 21396 ;;                  2    1[COMRAM] int 
 21397 ;; Registers used:
 21398 ;;		wreg, status,2, status,0
 21399 ;; Tracked objects:
 21400 ;;		On entry : 0/0
 21401 ;;		On exit  : 0/0
 21402 ;;		Unchanged: 0/0
 21403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21408 ;;Total ram usage:        6 bytes
 21409 ;; Hardware stack levels used:    1
 21410 ;; Hardware stack levels required when called:    7
 21411 ;; This function calls:
 21412 ;;		Nothing
 21413 ;; This function is called by:
 21414 ;;		_toupper
 21415 ;; This function uses a non-reentrant model
 21416 ;;
 21417                           
 21418                           	psect	text128
 21419  008576                     __ptext128:
 21420                           	opt callstack 0
 21421  008576                     _islower:
 21422                           	opt callstack 15
 21423                           
 21424                           ;incstack = 0
 21425  008576  0E9F               	movlw	159
 21426  008578  6E04               	movwf	??_islower^0,c
 21427  00857A  0EFF               	movlw	255
 21428  00857C  6E05               	movwf	(??_islower+1)^0,c
 21429  00857E  0060  F008  F006   	movff	islower@c,??_islower+2
 21430  008584  0060  F00C  F007   	movff	islower@c+1,??_islower+3
 21431  00858A  5004               	movf	??_islower^0,w,c
 21432  00858C  2606               	addwf	(??_islower+2)^0,f,c
 21433  00858E  5005               	movf	(??_islower+1)^0,w,c
 21434  008590  2207               	addwfc	(??_islower+3)^0,f,c
 21435  008592  5007               	movf	(??_islower+3)^0,w,c
 21436  008594  E106               	bnz	u12870
 21437  008596  0E1A               	movlw	26
 21438  008598  5C06               	subwf	(??_islower+2)^0,w,c
 21439  00859A  B0D8               	btfsc	status,0,c
 21440  00859C  D002               	goto	u12870
 21441  00859E  0E01               	movlw	1
 21442  0085A0  D001               	goto	u12880
 21443  0085A2                     u12870:
 21444  0085A2  0E00               	movlw	0
 21445  0085A4                     u12880:
 21446  0085A4  6E02               	movwf	?_islower^0,c
 21447  0085A6  6A03               	clrf	(?_islower+1)^0,c
 21448  0085A8  0012               	return		;funcret
 21449  0085AA                     __end_of_islower:
 21450                           	opt callstack 0
 21451                           
 21452 ;; *************** function _isupper *****************
 21453 ;; Defined at:
 21454 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 21455 ;; Parameters:    Size  Location     Type
 21456 ;;  c               2    1[COMRAM] int 
 21457 ;; Auto vars:     Size  Location     Type
 21458 ;;		None
 21459 ;; Return value:  Size  Location     Type
 21460 ;;                  2    1[COMRAM] int 
 21461 ;; Registers used:
 21462 ;;		wreg, status,2, status,0
 21463 ;; Tracked objects:
 21464 ;;		On entry : 0/0
 21465 ;;		On exit  : 0/0
 21466 ;;		Unchanged: 0/0
 21467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21472 ;;Total ram usage:        6 bytes
 21473 ;; Hardware stack levels used:    1
 21474 ;; Hardware stack levels required when called:    7
 21475 ;; This function calls:
 21476 ;;		Nothing
 21477 ;; This function is called by:
 21478 ;;		_xtoa
 21479 ;; This function uses a non-reentrant model
 21480 ;;
 21481                           
 21482                           	psect	text129
 21483  0085AA                     __ptext129:
 21484                           	opt callstack 0
 21485  0085AA                     _isupper:
 21486                           	opt callstack 16
 21487                           
 21488                           ;incstack = 0
 21489  0085AA  0EBF               	movlw	191
 21490  0085AC  6E04               	movwf	??_isupper^0,c
 21491  0085AE  0EFF               	movlw	255
 21492  0085B0  6E05               	movwf	(??_isupper+1)^0,c
 21493  0085B2  0060  F008  F006   	movff	isupper@c,??_isupper+2
 21494  0085B8  0060  F00C  F007   	movff	isupper@c+1,??_isupper+3
 21495  0085BE  5004               	movf	??_isupper^0,w,c
 21496  0085C0  2606               	addwf	(??_isupper+2)^0,f,c
 21497  0085C2  5005               	movf	(??_isupper+1)^0,w,c
 21498  0085C4  2207               	addwfc	(??_isupper+3)^0,f,c
 21499  0085C6  5007               	movf	(??_isupper+3)^0,w,c
 21500  0085C8  E106               	bnz	u12940
 21501  0085CA  0E1A               	movlw	26
 21502  0085CC  5C06               	subwf	(??_isupper+2)^0,w,c
 21503  0085CE  B0D8               	btfsc	status,0,c
 21504  0085D0  D002               	goto	u12940
 21505  0085D2  0E01               	movlw	1
 21506  0085D4  D001               	goto	u12950
 21507  0085D6                     u12940:
 21508  0085D6  0E00               	movlw	0
 21509  0085D8                     u12950:
 21510  0085D8  6E02               	movwf	?_isupper^0,c
 21511  0085DA  6A03               	clrf	(?_isupper+1)^0,c
 21512  0085DC  0012               	return		;funcret
 21513  0085DE                     __end_of_isupper:
 21514                           	opt callstack 0
 21515                           
 21516 ;; *************** function _isalpha *****************
 21517 ;; Defined at:
 21518 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 21519 ;; Parameters:    Size  Location     Type
 21520 ;;  c               2    1[COMRAM] int 
 21521 ;; Auto vars:     Size  Location     Type
 21522 ;;		None
 21523 ;; Return value:  Size  Location     Type
 21524 ;;                  2    1[COMRAM] int 
 21525 ;; Registers used:
 21526 ;;		wreg, status,2, status,0
 21527 ;; Tracked objects:
 21528 ;;		On entry : 0/0
 21529 ;;		On exit  : 0/0
 21530 ;;		Unchanged: 0/0
 21531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21535 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21536 ;;Total ram usage:        6 bytes
 21537 ;; Hardware stack levels used:    1
 21538 ;; Hardware stack levels required when called:    7
 21539 ;; This function calls:
 21540 ;;		Nothing
 21541 ;; This function is called by:
 21542 ;;		_xtoa
 21543 ;;		___strtoxl
 21544 ;; This function uses a non-reentrant model
 21545 ;;
 21546                           
 21547                           	psect	text130
 21548  0085DE                     __ptext130:
 21549                           	opt callstack 0
 21550  0085DE                     _isalpha:
 21551                           	opt callstack 16
 21552                           
 21553                           ;incstack = 0
 21554  0085DE  0E9F               	movlw	159
 21555  0085E0  6E04               	movwf	??_isalpha^0,c
 21556  0085E2  0EFF               	movlw	255
 21557  0085E4  6E05               	movwf	(??_isalpha+1)^0,c
 21558  0085E6  0E20               	movlw	32
 21559  0085E8  1002               	iorwf	isalpha@c^0,w,c
 21560  0085EA  6E06               	movwf	(??_isalpha+2)^0,c
 21561  0085EC  0E00               	movlw	0
 21562  0085EE  1003               	iorwf	(isalpha@c+1)^0,w,c
 21563  0085F0  6E07               	movwf	(??_isalpha+3)^0,c
 21564  0085F2  5004               	movf	??_isalpha^0,w,c
 21565  0085F4  2606               	addwf	(??_isalpha+2)^0,f,c
 21566  0085F6  5005               	movf	(??_isalpha+1)^0,w,c
 21567  0085F8  2207               	addwfc	(??_isalpha+3)^0,f,c
 21568  0085FA  5007               	movf	(??_isalpha+3)^0,w,c
 21569  0085FC  E106               	bnz	u12960
 21570  0085FE  0E1A               	movlw	26
 21571  008600  5C06               	subwf	(??_isalpha+2)^0,w,c
 21572  008602  B0D8               	btfsc	status,0,c
 21573  008604  D002               	goto	u12960
 21574  008606  0E01               	movlw	1
 21575  008608  D001               	goto	u12970
 21576  00860A                     u12960:
 21577  00860A  0E00               	movlw	0
 21578  00860C                     u12970:
 21579  00860C  6E02               	movwf	?_isalpha^0,c
 21580  00860E  6A03               	clrf	(?_isalpha+1)^0,c
 21581  008610  0012               	return		;funcret
 21582  008612                     __end_of_isalpha:
 21583                           	opt callstack 0
 21584                           
 21585 ;; *************** function _utoa *****************
 21586 ;; Defined at:
 21587 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 21588 ;; Parameters:    Size  Location     Type
 21589 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 21590 ;;		 -> NULL(0), 
 21591 ;;  d               8   32[COMRAM] unsigned long long 
 21592 ;; Auto vars:     Size  Location     Type
 21593 ;;  n               8   52[COMRAM] unsigned long long 
 21594 ;;  i               2   60[COMRAM] int 
 21595 ;;  w               2   50[COMRAM] int 
 21596 ;;  p               2   48[COMRAM] int 
 21597 ;; Return value:  Size  Location     Type
 21598 ;;                  2   30[COMRAM] int 
 21599 ;; Registers used:
 21600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21601 ;; Tracked objects:
 21602 ;;		On entry : 3F/0
 21603 ;;		On exit  : 0/0
 21604 ;;		Unchanged: 0/0
 21605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21606 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21607 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21608 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21609 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21610 ;;Total ram usage:       32 bytes
 21611 ;; Hardware stack levels used:    1
 21612 ;; Hardware stack levels required when called:   12
 21613 ;; This function calls:
 21614 ;;		___lodiv
 21615 ;;		___lomod
 21616 ;;		_pad
 21617 ;; This function is called by:
 21618 ;;		_vfpfcnvrt
 21619 ;; This function uses a non-reentrant model
 21620 ;;
 21621                           
 21622                           	psect	text131
 21623  002CD4                     __ptext131:
 21624                           	opt callstack 0
 21625  002CD4                     _utoa:
 21626                           	opt callstack 12
 21627                           
 21628                           ; BSR set to: 0
 21629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 21630                           
 21631                           ;incstack = 0
 21632  002CD4  AFDD               	btfss	(_prec+1)& (0+255),7,b
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 21636  002CD6  93DE               	bcf	_flags& (0+255),1,b
 21637                           
 21638                           ; BSR set to: 0
 21639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 21640  002CD8  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 21641  002CDA  D005               	goto	u13500
 21642  002CDC  51DD               	movf	(_prec+1)& (0+255),w,b
 21643  002CDE  E108               	bnz	l3112
 21644  002CE0  05DC               	decf	_prec& (0+255),w,b
 21645  002CE2  B0D8               	btfsc	status,0,c
 21646  002CE4  D005               	goto	l3112
 21647  002CE6                     u13500:
 21648                           
 21649                           ; BSR set to: 0
 21650  002CE6  0E00               	movlw	0
 21651  002CE8  6E32               	movwf	(utoa@p+1)^0,c
 21652  002CEA  0E01               	movlw	1
 21653  002CEC  6E31               	movwf	utoa@p^0,c
 21654  002CEE  D006               	goto	l3114
 21655  002CF0                     l3112:
 21656                           
 21657                           ; BSR set to: 0
 21658  002CF0  0060  F370  F031   	movff	_prec,utoa@p
 21659  002CF6  0060  F374  F032   	movff	_prec+1,utoa@p+1
 21660  002CFC                     l3114:
 21661                           
 21662                           ; BSR set to: 0
 21663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 21664  002CFC  0060  F368  F033   	movff	_width,utoa@w
 21665  002D02  0060  F36C  F034   	movff	_width+1,utoa@w+1
 21666                           
 21667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 21668  002D08  0060  F084  F035   	movff	utoa@d,utoa@n
 21669  002D0E  0060  F088  F036   	movff	utoa@d+1,utoa@n+1
 21670  002D14  0060  F08C  F037   	movff	utoa@d+2,utoa@n+2
 21671  002D1A  0060  F090  F038   	movff	utoa@d+3,utoa@n+3
 21672  002D20  0060  F094  F039   	movff	utoa@d+4,utoa@n+4
 21673  002D26  0060  F098  F03A   	movff	utoa@d+5,utoa@n+5
 21674  002D2C  0060  F09C  F03B   	movff	utoa@d+6,utoa@n+6
 21675  002D32  0060  F0A0  F03C   	movff	utoa@d+7,utoa@n+7
 21676                           
 21677                           ; BSR set to: 0
 21678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 21679  002D38  0E00               	movlw	0
 21680  002D3A  6E3E               	movwf	(utoa@i+1)^0,c
 21681  002D3C  0E1F               	movlw	31
 21682  002D3E  6E3D               	movwf	utoa@i^0,c
 21683                           
 21684                           ; BSR set to: 0
 21685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 21686  002D40  0E00               	movlw	0
 21687  002D42  0101               	movlb	1	; () banked
 21688  002D44  6F94               	movwf	(_dbuf+31)& (0+255),b
 21689                           
 21690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21691  002D46  D096               	goto	l14193
 21692  002D48                     l14183:
 21693                           
 21694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 21695  002D48  063D               	decf	utoa@i^0,f,c
 21696  002D4A  A0D8               	btfss	status,0,c
 21697  002D4C  063E               	decf	(utoa@i+1)^0,f,c
 21698                           
 21699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 21700  002D4E  0E75               	movlw	low _dbuf
 21701  002D50  243D               	addwf	utoa@i^0,w,c
 21702  002D52  6ED9               	movwf	fsr2l,c
 21703  002D54  0E01               	movlw	high _dbuf
 21704  002D56  203E               	addwfc	(utoa@i+1)^0,w,c
 21705  002D58  6EDA               	movwf	fsr2h,c
 21706  002D5A  0060  F0D4  F002   	movff	utoa@n,___lomod@dividend
 21707  002D60  0060  F0D8  F003   	movff	utoa@n+1,___lomod@dividend+1
 21708  002D66  0060  F0DC  F004   	movff	utoa@n+2,___lomod@dividend+2
 21709  002D6C  0060  F0E0  F005   	movff	utoa@n+3,___lomod@dividend+3
 21710  002D72  0060  F0E4  F006   	movff	utoa@n+4,___lomod@dividend+4
 21711  002D78  0060  F0E8  F007   	movff	utoa@n+5,___lomod@dividend+5
 21712  002D7E  0060  F0EC  F008   	movff	utoa@n+6,___lomod@dividend+6
 21713  002D84  0060  F0F0  F009   	movff	utoa@n+7,___lomod@dividend+7
 21714  002D8A  0E0A               	movlw	10
 21715  002D8C  6E0A               	movwf	___lomod@divisor^0,c
 21716  002D8E  0E00               	movlw	0
 21717  002D90  6E0B               	movwf	(___lomod@divisor+1)^0,c
 21718  002D92  0E00               	movlw	0
 21719  002D94  6E0C               	movwf	(___lomod@divisor+2)^0,c
 21720  002D96  0E00               	movlw	0
 21721  002D98  6E0D               	movwf	(___lomod@divisor+3)^0,c
 21722  002D9A  0E00               	movlw	0
 21723  002D9C  6E0E               	movwf	(___lomod@divisor+4)^0,c
 21724  002D9E  0E00               	movlw	0
 21725  002DA0  6E0F               	movwf	(___lomod@divisor+5)^0,c
 21726  002DA2  0E00               	movlw	0
 21727  002DA4  6E10               	movwf	(___lomod@divisor+6)^0,c
 21728  002DA6  0E00               	movlw	0
 21729  002DA8  6E11               	movwf	(___lomod@divisor+7)^0,c
 21730  002DAA  EC36  F032         	call	___lomod	;wreg free
 21731  002DAE  0060  F008  F029   	movff	?___lomod,??_utoa
 21732  002DB4  0060  F00C  F02A   	movff	?___lomod+1,??_utoa+1
 21733  002DBA  0060  F010  F02B   	movff	?___lomod+2,??_utoa+2
 21734  002DC0  0060  F014  F02C   	movff	?___lomod+3,??_utoa+3
 21735  002DC6  0060  F018  F02D   	movff	?___lomod+4,??_utoa+4
 21736  002DCC  0060  F01C  F02E   	movff	?___lomod+5,??_utoa+5
 21737  002DD2  0060  F020  F02F   	movff	?___lomod+6,??_utoa+6
 21738  002DD8  0060  F024  F030   	movff	?___lomod+7,??_utoa+7
 21739  002DDE  5029               	movf	??_utoa^0,w,c
 21740  002DE0  0F30               	addlw	48
 21741  002DE2  6EDF               	movwf	indf2,c
 21742                           
 21743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 21744  002DE4  0631               	decf	utoa@p^0,f,c
 21745  002DE6  A0D8               	btfss	status,0,c
 21746  002DE8  0632               	decf	(utoa@p+1)^0,f,c
 21747                           
 21748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 21749  002DEA  0633               	decf	utoa@w^0,f,c
 21750  002DEC  A0D8               	btfss	status,0,c
 21751  002DEE  0634               	decf	(utoa@w+1)^0,f,c
 21752                           
 21753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 21754  002DF0  0060  F0D4  F002   	movff	utoa@n,___lodiv@dividend
 21755  002DF6  0060  F0D8  F003   	movff	utoa@n+1,___lodiv@dividend+1
 21756  002DFC  0060  F0DC  F004   	movff	utoa@n+2,___lodiv@dividend+2
 21757  002E02  0060  F0E0  F005   	movff	utoa@n+3,___lodiv@dividend+3
 21758  002E08  0060  F0E4  F006   	movff	utoa@n+4,___lodiv@dividend+4
 21759  002E0E  0060  F0E8  F007   	movff	utoa@n+5,___lodiv@dividend+5
 21760  002E14  0060  F0EC  F008   	movff	utoa@n+6,___lodiv@dividend+6
 21761  002E1A  0060  F0F0  F009   	movff	utoa@n+7,___lodiv@dividend+7
 21762  002E20  0E0A               	movlw	10
 21763  002E22  6E0A               	movwf	___lodiv@divisor^0,c
 21764  002E24  0E00               	movlw	0
 21765  002E26  6E0B               	movwf	(___lodiv@divisor+1)^0,c
 21766  002E28  0E00               	movlw	0
 21767  002E2A  6E0C               	movwf	(___lodiv@divisor+2)^0,c
 21768  002E2C  0E00               	movlw	0
 21769  002E2E  6E0D               	movwf	(___lodiv@divisor+3)^0,c
 21770  002E30  0E00               	movlw	0
 21771  002E32  6E0E               	movwf	(___lodiv@divisor+4)^0,c
 21772  002E34  0E00               	movlw	0
 21773  002E36  6E0F               	movwf	(___lodiv@divisor+5)^0,c
 21774  002E38  0E00               	movlw	0
 21775  002E3A  6E10               	movwf	(___lodiv@divisor+6)^0,c
 21776  002E3C  0E00               	movlw	0
 21777  002E3E  6E11               	movwf	(___lodiv@divisor+7)^0,c
 21778  002E40  ECF1  F02C         	call	___lodiv	;wreg free
 21779  002E44  0060  F008  F035   	movff	?___lodiv,utoa@n
 21780  002E4A  0060  F00C  F036   	movff	?___lodiv+1,utoa@n+1
 21781  002E50  0060  F010  F037   	movff	?___lodiv+2,utoa@n+2
 21782  002E56  0060  F014  F038   	movff	?___lodiv+3,utoa@n+3
 21783  002E5C  0060  F018  F039   	movff	?___lodiv+4,utoa@n+4
 21784  002E62  0060  F01C  F03A   	movff	?___lodiv+5,utoa@n+5
 21785  002E68  0060  F020  F03B   	movff	?___lodiv+6,utoa@n+6
 21786  002E6E  0060  F024  F03C   	movff	?___lodiv+7,utoa@n+7
 21787  002E74                     l14193:
 21788                           
 21789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21790  002E74  503D               	movf	utoa@i^0,w,c
 21791  002E76  103E               	iorwf	(utoa@i+1)^0,w,c
 21792  002E78  B4D8               	btfsc	status,2,c
 21793  002E7A  D01B               	goto	u13550
 21794  002E7C  5035               	movf	utoa@n^0,w,c
 21795  002E7E  1036               	iorwf	(utoa@n+1)^0,w,c
 21796  002E80  1037               	iorwf	(utoa@n+2)^0,w,c
 21797  002E82  1038               	iorwf	(utoa@n+3)^0,w,c
 21798  002E84  1039               	iorwf	(utoa@n+4)^0,w,c
 21799  002E86  103A               	iorwf	(utoa@n+5)^0,w,c
 21800  002E88  103B               	iorwf	(utoa@n+6)^0,w,c
 21801  002E8A  103C               	iorwf	(utoa@n+7)^0,w,c
 21802  002E8C  A4D8               	btfss	status,2,c
 21803  002E8E  D75C               	goto	l14183
 21804  002E90  BE32               	btfsc	(utoa@p+1)^0,7,c
 21805  002E92  D005               	goto	u13530
 21806  002E94  5032               	movf	(utoa@p+1)^0,w,c
 21807  002E96  E102               	bnz	u13531
 21808  002E98  0431               	decf	utoa@p^0,w,c
 21809  002E9A  B0D8               	btfsc	status,0,c
 21810  002E9C                     u13531:
 21811  002E9C  D755               	goto	l14183
 21812  002E9E                     u13530:
 21813  002E9E  BE34               	btfsc	(utoa@w+1)^0,7,c
 21814  002EA0  D008               	goto	u13550
 21815  002EA2  5034               	movf	(utoa@w+1)^0,w,c
 21816  002EA4  E103               	bnz	u13540
 21817  002EA6  0433               	decf	utoa@w^0,w,c
 21818  002EA8  A0D8               	btfss	status,0,c
 21819  002EAA  D003               	goto	u13550
 21820  002EAC                     u13540:
 21821  002EAC  0100               	movlb	0	; () banked
 21822  002EAE  B3DE               	btfsc	_flags& (0+255),1,b
 21823  002EB0  D74B               	goto	l14183
 21824  002EB2                     u13550:
 21825                           
 21826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 21827  002EB2  0060  F07C  F014   	movff	utoa@fp,pad@fp
 21828  002EB8  0060  F080  F015   	movff	utoa@fp+1,pad@fp+1
 21829  002EBE  0E75               	movlw	low _dbuf
 21830  002EC0  243D               	addwf	utoa@i^0,w,c
 21831  002EC2  6E16               	movwf	pad@buf^0,c
 21832  002EC4  0E01               	movlw	high _dbuf
 21833  002EC6  203E               	addwfc	(utoa@i+1)^0,w,c
 21834  002EC8  6E17               	movwf	(pad@buf+1)^0,c
 21835  002ECA  0060  F0CC  F018   	movff	utoa@w,pad@p
 21836  002ED0  0060  F0D0  F019   	movff	utoa@w+1,pad@p+1
 21837  002ED6  EC95  F032         	call	_pad	;wreg free
 21838  002EDA  0060  F050  F01F   	movff	?_pad,?_utoa
 21839  002EE0  0060  F054  F020   	movff	?_pad+1,?_utoa+1
 21840  002EE6  0012               	return		;funcret
 21841  002EE8                     __end_of_utoa:
 21842                           	opt callstack 0
 21843                           
 21844 ;; *************** function ___lomod *****************
 21845 ;; Defined at:
 21846 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 21847 ;; Parameters:    Size  Location     Type
 21848 ;;  dividend        8    1[COMRAM] unsigned long long 
 21849 ;;  divisor         8    9[COMRAM] unsigned long long 
 21850 ;; Auto vars:     Size  Location     Type
 21851 ;;  counter         1   17[COMRAM] unsigned char 
 21852 ;; Return value:  Size  Location     Type
 21853 ;;                  8    1[COMRAM] unsigned long long 
 21854 ;; Registers used:
 21855 ;;		wreg, status,2, status,0
 21856 ;; Tracked objects:
 21857 ;;		On entry : 0/1
 21858 ;;		On exit  : 0/0
 21859 ;;		Unchanged: 0/0
 21860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21861 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21864 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21865 ;;Total ram usage:       17 bytes
 21866 ;; Hardware stack levels used:    1
 21867 ;; Hardware stack levels required when called:    7
 21868 ;; This function calls:
 21869 ;;		Nothing
 21870 ;; This function is called by:
 21871 ;;		_utoa
 21872 ;; This function uses a non-reentrant model
 21873 ;;
 21874                           
 21875                           	psect	text132
 21876  00646C                     __ptext132:
 21877                           	opt callstack 0
 21878  00646C                     ___lomod:
 21879                           	opt callstack 16
 21880                           
 21881                           ;incstack = 0
 21882  00646C  500A               	movf	___lomod@divisor^0,w,c
 21883  00646E  100B               	iorwf	(___lomod@divisor+1)^0,w,c
 21884  006470  100C               	iorwf	(___lomod@divisor+2)^0,w,c
 21885  006472  100D               	iorwf	(___lomod@divisor+3)^0,w,c
 21886  006474  100E               	iorwf	(___lomod@divisor+4)^0,w,c
 21887  006476  100F               	iorwf	(___lomod@divisor+5)^0,w,c
 21888  006478  1010               	iorwf	(___lomod@divisor+6)^0,w,c
 21889  00647A  1011               	iorwf	(___lomod@divisor+7)^0,w,c
 21890  00647C  B4D8               	btfsc	status,2,c
 21891  00647E  D03C               	goto	l3644
 21892  006480  0E01               	movlw	1
 21893  006482  6E12               	movwf	___lomod@counter^0,c
 21894  006484  D00A               	goto	l14045
 21895  006486                     l14043:
 21896  006486  90D8               	bcf	status,0,c
 21897  006488  360A               	rlcf	___lomod@divisor^0,f,c
 21898  00648A  360B               	rlcf	(___lomod@divisor+1)^0,f,c
 21899  00648C  360C               	rlcf	(___lomod@divisor+2)^0,f,c
 21900  00648E  360D               	rlcf	(___lomod@divisor+3)^0,f,c
 21901  006490  360E               	rlcf	(___lomod@divisor+4)^0,f,c
 21902  006492  360F               	rlcf	(___lomod@divisor+5)^0,f,c
 21903  006494  3610               	rlcf	(___lomod@divisor+6)^0,f,c
 21904  006496  3611               	rlcf	(___lomod@divisor+7)^0,f,c
 21905  006498  2A12               	incf	___lomod@counter^0,f,c
 21906  00649A                     l14045:
 21907  00649A  AE11               	btfss	(___lomod@divisor+7)^0,7,c
 21908  00649C  D7F4               	goto	l14043
 21909  00649E                     u13210:
 21910  00649E  500A               	movf	___lomod@divisor^0,w,c
 21911  0064A0  5C02               	subwf	___lomod@dividend^0,w,c
 21912  0064A2  500B               	movf	(___lomod@divisor+1)^0,w,c
 21913  0064A4  5803               	subwfb	(___lomod@dividend+1)^0,w,c
 21914  0064A6  500C               	movf	(___lomod@divisor+2)^0,w,c
 21915  0064A8  5804               	subwfb	(___lomod@dividend+2)^0,w,c
 21916  0064AA  500D               	movf	(___lomod@divisor+3)^0,w,c
 21917  0064AC  5805               	subwfb	(___lomod@dividend+3)^0,w,c
 21918  0064AE  500E               	movf	(___lomod@divisor+4)^0,w,c
 21919  0064B0  5806               	subwfb	(___lomod@dividend+4)^0,w,c
 21920  0064B2  500F               	movf	(___lomod@divisor+5)^0,w,c
 21921  0064B4  5807               	subwfb	(___lomod@dividend+5)^0,w,c
 21922  0064B6  5010               	movf	(___lomod@divisor+6)^0,w,c
 21923  0064B8  5808               	subwfb	(___lomod@dividend+6)^0,w,c
 21924  0064BA  5011               	movf	(___lomod@divisor+7)^0,w,c
 21925  0064BC  5809               	subwfb	(___lomod@dividend+7)^0,w,c
 21926  0064BE  A0D8               	btfss	status,0,c
 21927  0064C0  D010               	goto	l14051
 21928  0064C2  500A               	movf	___lomod@divisor^0,w,c
 21929  0064C4  5E02               	subwf	___lomod@dividend^0,f,c
 21930  0064C6  500B               	movf	(___lomod@divisor+1)^0,w,c
 21931  0064C8  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
 21932  0064CA  500C               	movf	(___lomod@divisor+2)^0,w,c
 21933  0064CC  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
 21934  0064CE  500D               	movf	(___lomod@divisor+3)^0,w,c
 21935  0064D0  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
 21936  0064D2  500E               	movf	(___lomod@divisor+4)^0,w,c
 21937  0064D4  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
 21938  0064D6  500F               	movf	(___lomod@divisor+5)^0,w,c
 21939  0064D8  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
 21940  0064DA  5010               	movf	(___lomod@divisor+6)^0,w,c
 21941  0064DC  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
 21942  0064DE  5011               	movf	(___lomod@divisor+7)^0,w,c
 21943  0064E0  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
 21944  0064E2                     l14051:
 21945  0064E2  90D8               	bcf	status,0,c
 21946  0064E4  3211               	rrcf	(___lomod@divisor+7)^0,f,c
 21947  0064E6  3210               	rrcf	(___lomod@divisor+6)^0,f,c
 21948  0064E8  320F               	rrcf	(___lomod@divisor+5)^0,f,c
 21949  0064EA  320E               	rrcf	(___lomod@divisor+4)^0,f,c
 21950  0064EC  320D               	rrcf	(___lomod@divisor+3)^0,f,c
 21951  0064EE  320C               	rrcf	(___lomod@divisor+2)^0,f,c
 21952  0064F0  320B               	rrcf	(___lomod@divisor+1)^0,f,c
 21953  0064F2  320A               	rrcf	___lomod@divisor^0,f,c
 21954  0064F4  2E12               	decfsz	___lomod@counter^0,f,c
 21955  0064F6  D7D3               	goto	u13210
 21956  0064F8                     l3644:
 21957  0064F8  0060  F008  F002   	movff	___lomod@dividend,?___lomod
 21958  0064FE  0060  F00C  F003   	movff	___lomod@dividend+1,?___lomod+1
 21959  006504  0060  F010  F004   	movff	___lomod@dividend+2,?___lomod+2
 21960  00650A  0060  F014  F005   	movff	___lomod@dividend+3,?___lomod+3
 21961  006510  0060  F018  F006   	movff	___lomod@dividend+4,?___lomod+4
 21962  006516  0060  F01C  F007   	movff	___lomod@dividend+5,?___lomod+5
 21963  00651C  0060  F020  F008   	movff	___lomod@dividend+6,?___lomod+6
 21964  006522  0060  F024  F009   	movff	___lomod@dividend+7,?___lomod+7
 21965  006528  0012               	return		;funcret
 21966  00652A                     __end_of___lomod:
 21967                           	opt callstack 0
 21968                           
 21969 ;; *************** function ___lodiv *****************
 21970 ;; Defined at:
 21971 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 21972 ;; Parameters:    Size  Location     Type
 21973 ;;  dividend        8    1[COMRAM] unsigned long long 
 21974 ;;  divisor         8    9[COMRAM] unsigned long long 
 21975 ;; Auto vars:     Size  Location     Type
 21976 ;;  quotient        8   17[COMRAM] unsigned long long 
 21977 ;;  counter         1   25[COMRAM] unsigned char 
 21978 ;; Return value:  Size  Location     Type
 21979 ;;                  8    1[COMRAM] unsigned long long 
 21980 ;; Registers used:
 21981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21982 ;; Tracked objects:
 21983 ;;		On entry : 0/1
 21984 ;;		On exit  : 0/0
 21985 ;;		Unchanged: 0/0
 21986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21987 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21988 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21990 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21991 ;;Total ram usage:       25 bytes
 21992 ;; Hardware stack levels used:    1
 21993 ;; Hardware stack levels required when called:    7
 21994 ;; This function calls:
 21995 ;;		Nothing
 21996 ;; This function is called by:
 21997 ;;		_utoa
 21998 ;; This function uses a non-reentrant model
 21999 ;;
 22000                           
 22001                           	psect	text133
 22002  0059E2                     __ptext133:
 22003                           	opt callstack 0
 22004  0059E2                     ___lodiv:
 22005                           	opt callstack 16
 22006                           
 22007                           ;incstack = 0
 22008  0059E2  EE20  F012         	lfsr	2,___lodiv@quotient
 22009  0059E6  0E07               	movlw	7
 22010  0059E8                     u13161:
 22011  0059E8  6ADE               	clrf	postinc2,c
 22012  0059EA  06E8               	decf	wreg,f,c
 22013  0059EC  E2FD               	bc	u13161
 22014  0059EE  500A               	movf	___lodiv@divisor^0,w,c
 22015  0059F0  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
 22016  0059F2  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
 22017  0059F4  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
 22018  0059F6  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
 22019  0059F8  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
 22020  0059FA  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
 22021  0059FC  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
 22022  0059FE  B4D8               	btfsc	status,2,c
 22023  005A00  D046               	goto	l3634
 22024  005A02  0E01               	movlw	1
 22025  005A04  6E1A               	movwf	___lodiv@counter^0,c
 22026  005A06  D00A               	goto	l14025
 22027  005A08                     l14023:
 22028  005A08  90D8               	bcf	status,0,c
 22029  005A0A  360A               	rlcf	___lodiv@divisor^0,f,c
 22030  005A0C  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
 22031  005A0E  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
 22032  005A10  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
 22033  005A12  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
 22034  005A14  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
 22035  005A16  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
 22036  005A18  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
 22037  005A1A  2A1A               	incf	___lodiv@counter^0,f,c
 22038  005A1C                     l14025:
 22039  005A1C  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
 22040  005A1E  D7F4               	goto	l14023
 22041  005A20                     u13180:
 22042  005A20  90D8               	bcf	status,0,c
 22043  005A22  3612               	rlcf	___lodiv@quotient^0,f,c
 22044  005A24  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
 22045  005A26  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
 22046  005A28  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
 22047  005A2A  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
 22048  005A2C  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
 22049  005A2E  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
 22050  005A30  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
 22051  005A32  500A               	movf	___lodiv@divisor^0,w,c
 22052  005A34  5C02               	subwf	___lodiv@dividend^0,w,c
 22053  005A36  500B               	movf	(___lodiv@divisor+1)^0,w,c
 22054  005A38  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
 22055  005A3A  500C               	movf	(___lodiv@divisor+2)^0,w,c
 22056  005A3C  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
 22057  005A3E  500D               	movf	(___lodiv@divisor+3)^0,w,c
 22058  005A40  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
 22059  005A42  500E               	movf	(___lodiv@divisor+4)^0,w,c
 22060  005A44  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
 22061  005A46  500F               	movf	(___lodiv@divisor+5)^0,w,c
 22062  005A48  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
 22063  005A4A  5010               	movf	(___lodiv@divisor+6)^0,w,c
 22064  005A4C  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
 22065  005A4E  5011               	movf	(___lodiv@divisor+7)^0,w,c
 22066  005A50  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
 22067  005A52  A0D8               	btfss	status,0,c
 22068  005A54  D011               	goto	l14035
 22069  005A56  500A               	movf	___lodiv@divisor^0,w,c
 22070  005A58  5E02               	subwf	___lodiv@dividend^0,f,c
 22071  005A5A  500B               	movf	(___lodiv@divisor+1)^0,w,c
 22072  005A5C  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
 22073  005A5E  500C               	movf	(___lodiv@divisor+2)^0,w,c
 22074  005A60  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
 22075  005A62  500D               	movf	(___lodiv@divisor+3)^0,w,c
 22076  005A64  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
 22077  005A66  500E               	movf	(___lodiv@divisor+4)^0,w,c
 22078  005A68  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
 22079  005A6A  500F               	movf	(___lodiv@divisor+5)^0,w,c
 22080  005A6C  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
 22081  005A6E  5010               	movf	(___lodiv@divisor+6)^0,w,c
 22082  005A70  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
 22083  005A72  5011               	movf	(___lodiv@divisor+7)^0,w,c
 22084  005A74  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
 22085  005A76  8012               	bsf	___lodiv@quotient^0,0,c
 22086  005A78                     l14035:
 22087  005A78  90D8               	bcf	status,0,c
 22088  005A7A  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
 22089  005A7C  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
 22090  005A7E  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
 22091  005A80  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
 22092  005A82  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
 22093  005A84  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
 22094  005A86  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
 22095  005A88  320A               	rrcf	___lodiv@divisor^0,f,c
 22096  005A8A  2E1A               	decfsz	___lodiv@counter^0,f,c
 22097  005A8C  D7C9               	goto	u13180
 22098  005A8E                     l3634:
 22099  005A8E  0060  F048  F002   	movff	___lodiv@quotient,?___lodiv
 22100  005A94  0060  F04C  F003   	movff	___lodiv@quotient+1,?___lodiv+1
 22101  005A9A  0060  F050  F004   	movff	___lodiv@quotient+2,?___lodiv+2
 22102  005AA0  0060  F054  F005   	movff	___lodiv@quotient+3,?___lodiv+3
 22103  005AA6  0060  F058  F006   	movff	___lodiv@quotient+4,?___lodiv+4
 22104  005AAC  0060  F05C  F007   	movff	___lodiv@quotient+5,?___lodiv+5
 22105  005AB2  0060  F060  F008   	movff	___lodiv@quotient+6,?___lodiv+6
 22106  005AB8  0060  F064  F009   	movff	___lodiv@quotient+7,?___lodiv+7
 22107  005ABE  0012               	return		;funcret
 22108  005AC0                     __end_of___lodiv:
 22109                           	opt callstack 0
 22110                           
 22111 ;; *************** function _stoa *****************
 22112 ;; Defined at:
 22113 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22114 ;; Parameters:    Size  Location     Type
 22115 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 22116 ;;		 -> NULL(0), 
 22117 ;;  s               1   14[COMRAM] PTR unsigned char 
 22118 ;;		 -> ?_printf(2), appDataInd@data(65), 
 22119 ;; Auto vars:     Size  Location     Type
 22120 ;;  nuls            7   16[COMRAM] unsigned char [7]
 22121 ;;  l               2   30[COMRAM] int 
 22122 ;;  p               2   28[COMRAM] int 
 22123 ;;  w               2   25[COMRAM] int 
 22124 ;;  i               2   23[COMRAM] int 
 22125 ;;  cp              1   27[COMRAM] PTR unsigned char 
 22126 ;;		 -> ?_printf(2), stoa@nuls(7), appDataInd@data(65), 
 22127 ;; Return value:  Size  Location     Type
 22128 ;;                  2   12[COMRAM] int 
 22129 ;; Registers used:
 22130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22131 ;; Tracked objects:
 22132 ;;		On entry : 3F/0
 22133 ;;		On exit  : 0/0
 22134 ;;		Unchanged: 0/0
 22135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22136 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22137 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22139 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22140 ;;Total ram usage:       20 bytes
 22141 ;; Hardware stack levels used:    1
 22142 ;; Hardware stack levels required when called:   10
 22143 ;; This function calls:
 22144 ;;		_fputc
 22145 ;;		_strlen
 22146 ;; This function is called by:
 22147 ;;		_vfpfcnvrt
 22148 ;; This function uses a non-reentrant model
 22149 ;;
 22150                           
 22151                           	psect	text134
 22152  0045B8                     __ptext134:
 22153                           	opt callstack 0
 22154  0045B8                     _stoa:
 22155                           	opt callstack 14
 22156                           
 22157                           ; BSR set to: 0
 22158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 22159                           
 22160                           ;incstack = 0
 22161  0045B8  EE20  F1EE         	lfsr	2,stoa@F1139
 22162  0045BC  EE10  F011         	lfsr	1,stoa@nuls
 22163  0045C0  0E06               	movlw	6
 22164  0045C2                     u13401:
 22165  0045C2  006F FF6F FFE3     	movff	plusw2,plusw1
 22166  0045C8  06E8               	decf	wreg,f,c
 22167  0045CA  E2FB               	bc	u13401
 22168                           
 22169                           ; BSR set to: 0
 22170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 22171  0045CC  0060  F03C  F01C   	movff	stoa@s,stoa@cp
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 22175  0045D2  501C               	movf	stoa@cp^0,w,c
 22176  0045D4  A4D8               	btfss	status,2,c
 22177  0045D6  D002               	goto	l14137
 22178                           
 22179                           ; BSR set to: 0
 22180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 22181  0045D8  0E11               	movlw	low stoa@nuls
 22182  0045DA  6E1C               	movwf	stoa@cp^0,c
 22183  0045DC                     l14137:
 22184                           
 22185                           ; BSR set to: 0
 22186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 22187  0045DC  0060  F070  F002   	movff	stoa@cp,strlen@s
 22188  0045E2  6A03               	clrf	(strlen@s+1)^0,c
 22189  0045E4  EC3E  F03E         	call	_strlen	;wreg free
 22190  0045E8  0060  F008  F01F   	movff	?_strlen,stoa@l
 22191  0045EE  0060  F00C  F020   	movff	?_strlen+1,stoa@l+1
 22192                           
 22193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 22194  0045F4  0060  F370  F01D   	movff	_prec,stoa@p
 22195  0045FA  0060  F374  F01E   	movff	_prec+1,stoa@p+1
 22196                           
 22197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 22198  004600  BE1E               	btfsc	(stoa@p+1)^0,7,c
 22199  004602  D010               	goto	l3093
 22200  004604  501F               	movf	stoa@l^0,w,c
 22201  004606  5C1D               	subwf	stoa@p^0,w,c
 22202  004608  501E               	movf	(stoa@p+1)^0,w,c
 22203  00460A  0A80               	xorlw	128
 22204  00460C  6E10               	movwf	??_stoa^0,c
 22205  00460E  5020               	movf	(stoa@l+1)^0,w,c
 22206  004610  0A80               	xorlw	128
 22207  004612  5810               	subwfb	??_stoa^0,w,c
 22208  004614  B0D8               	btfsc	status,0,c
 22209  004616  D006               	goto	l3093
 22210  004618  0060  F074  F01F   	movff	stoa@p,stoa@l
 22211  00461E  0060  F078  F020   	movff	stoa@p+1,stoa@l+1
 22212  004624                     l3093:
 22213                           
 22214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 22215  004624  0060  F07C  F01D   	movff	stoa@l,stoa@p
 22216  00462A  0060  F080  F01E   	movff	stoa@l+1,stoa@p+1
 22217                           
 22218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 22219  004630  0060  F368  F01A   	movff	_width,stoa@w
 22220  004636  0060  F36C  F01B   	movff	_width+1,stoa@w+1
 22221                           
 22222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 22223  00463C  0100               	movlb	0	; () banked
 22224  00463E  A1DE               	btfss	_flags& (0+255),0,b
 22225  004640  D00F               	goto	l14151
 22226  004642  D018               	goto	u13450
 22227  004644                     l14147:
 22228                           
 22229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 22230  004644  0E00               	movlw	0
 22231  004646  6E05               	movwf	(fputc@c+1)^0,c
 22232  004648  0E20               	movlw	32
 22233  00464A  6E04               	movwf	fputc@c^0,c
 22234  00464C  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22235  004652  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22236  004658  ECC6  F03A         	call	_fputc	;wreg free
 22237                           
 22238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 22239  00465C  4A1F               	infsnz	stoa@l^0,f,c
 22240  00465E  2A20               	incf	(stoa@l+1)^0,f,c
 22241  004660                     l14151:
 22242                           
 22243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 22244  004660  501A               	movf	stoa@w^0,w,c
 22245  004662  5C1F               	subwf	stoa@l^0,w,c
 22246  004664  5020               	movf	(stoa@l+1)^0,w,c
 22247  004666  0A80               	xorlw	128
 22248  004668  6E10               	movwf	??_stoa^0,c
 22249  00466A  501B               	movf	(stoa@w+1)^0,w,c
 22250  00466C  0A80               	xorlw	128
 22251  00466E  5810               	subwfb	??_stoa^0,w,c
 22252  004670  A0D8               	btfss	status,0,c
 22253  004672  D7E8               	goto	l14147
 22254  004674                     u13450:
 22255                           
 22256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 22257  004674  0E00               	movlw	0
 22258  004676  6E19               	movwf	(stoa@i+1)^0,c
 22259  004678  0E00               	movlw	0
 22260  00467A  6E18               	movwf	stoa@i^0,c
 22261                           
 22262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 22263  00467C  D013               	goto	l14161
 22264  00467E                     l14155:
 22265                           
 22266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 22267  00467E  501C               	movf	stoa@cp^0,w,c
 22268  004680  6ED9               	movwf	fsr2l,c
 22269  004682  6ADA               	clrf	fsr2h,c
 22270  004684  50DF               	movf	indf2,w,c
 22271  004686  6E10               	movwf	??_stoa^0,c
 22272  004688  5010               	movf	??_stoa^0,w,c
 22273  00468A  6E04               	movwf	fputc@c^0,c
 22274  00468C  6A05               	clrf	(fputc@c+1)^0,c
 22275  00468E  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22276  004694  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22277  00469A  ECC6  F03A         	call	_fputc	;wreg free
 22278                           
 22279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 22280  00469E  2A1C               	incf	stoa@cp^0,f,c
 22281                           
 22282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 22283  0046A0  4A18               	infsnz	stoa@i^0,f,c
 22284  0046A2  2A19               	incf	(stoa@i+1)^0,f,c
 22285  0046A4                     l14161:
 22286                           
 22287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 22288  0046A4  501D               	movf	stoa@p^0,w,c
 22289  0046A6  5C18               	subwf	stoa@i^0,w,c
 22290  0046A8  5019               	movf	(stoa@i+1)^0,w,c
 22291  0046AA  0A80               	xorlw	128
 22292  0046AC  6E10               	movwf	??_stoa^0,c
 22293  0046AE  501E               	movf	(stoa@p+1)^0,w,c
 22294  0046B0  0A80               	xorlw	128
 22295  0046B2  5810               	subwfb	??_stoa^0,w,c
 22296  0046B4  A0D8               	btfss	status,0,c
 22297  0046B6  D7E3               	goto	l14155
 22298                           
 22299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 22300  0046B8  0100               	movlb	0	; () banked
 22301  0046BA  B1DE               	btfsc	_flags& (0+255),0,b
 22302  0046BC  D00F               	goto	l14169
 22303  0046BE  D018               	goto	u13480
 22304  0046C0                     l14165:
 22305                           
 22306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 22307  0046C0  0E00               	movlw	0
 22308  0046C2  6E05               	movwf	(fputc@c+1)^0,c
 22309  0046C4  0E20               	movlw	32
 22310  0046C6  6E04               	movwf	fputc@c^0,c
 22311  0046C8  0060  F034  F006   	movff	stoa@fp,fputc@fp
 22312  0046CE  0060  F038  F007   	movff	stoa@fp+1,fputc@fp+1
 22313  0046D4  ECC6  F03A         	call	_fputc	;wreg free
 22314                           
 22315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 22316  0046D8  4A1F               	infsnz	stoa@l^0,f,c
 22317  0046DA  2A20               	incf	(stoa@l+1)^0,f,c
 22318  0046DC                     l14169:
 22319                           
 22320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 22321  0046DC  501A               	movf	stoa@w^0,w,c
 22322  0046DE  5C1F               	subwf	stoa@l^0,w,c
 22323  0046E0  5020               	movf	(stoa@l+1)^0,w,c
 22324  0046E2  0A80               	xorlw	128
 22325  0046E4  6E10               	movwf	??_stoa^0,c
 22326  0046E6  501B               	movf	(stoa@w+1)^0,w,c
 22327  0046E8  0A80               	xorlw	128
 22328  0046EA  5810               	subwfb	??_stoa^0,w,c
 22329  0046EC  A0D8               	btfss	status,0,c
 22330  0046EE  D7E8               	goto	l14165
 22331  0046F0                     u13480:
 22332                           
 22333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 22334                           
 22335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 586:     }
 22336  0046F0  0060  F07C  F00D   	movff	stoa@l,?_stoa
 22337  0046F6  0060  F080  F00E   	movff	stoa@l+1,?_stoa+1
 22338  0046FC  0012               	return		;funcret
 22339  0046FE                     __end_of_stoa:
 22340                           	opt callstack 0
 22341                           
 22342 ;; *************** function _dtoa *****************
 22343 ;; Defined at:
 22344 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22345 ;; Parameters:    Size  Location     Type
 22346 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 22347 ;;		 -> NULL(0), 
 22348 ;;  d               8   32[COMRAM] long long 
 22349 ;; Auto vars:     Size  Location     Type
 22350 ;;  n               8   56[COMRAM] long long 
 22351 ;;  i               2   64[COMRAM] int 
 22352 ;;  s               2   54[COMRAM] int 
 22353 ;;  w               2   52[COMRAM] int 
 22354 ;;  p               2   50[COMRAM] int 
 22355 ;; Return value:  Size  Location     Type
 22356 ;;                  2   30[COMRAM] int 
 22357 ;; Registers used:
 22358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22359 ;; Tracked objects:
 22360 ;;		On entry : 3F/0
 22361 ;;		On exit  : 0/0
 22362 ;;		Unchanged: 0/0
 22363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22364 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22365 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22366 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22367 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22368 ;;Total ram usage:       36 bytes
 22369 ;; Hardware stack levels used:    1
 22370 ;; Hardware stack levels required when called:   12
 22371 ;; This function calls:
 22372 ;;		___aodiv
 22373 ;;		___aomod
 22374 ;;		_abs
 22375 ;;		_pad
 22376 ;; This function is called by:
 22377 ;;		_vfpfcnvrt
 22378 ;; This function uses a non-reentrant model
 22379 ;;
 22380                           
 22381                           	psect	text135
 22382  002090                     __ptext135:
 22383                           	opt callstack 0
 22384  002090                     _dtoa:
 22385                           	opt callstack 12
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 22389                           
 22390                           ;incstack = 0
 22391  002090  0060  F084  F039   	movff	dtoa@d,dtoa@n
 22392  002096  0060  F088  F03A   	movff	dtoa@d+1,dtoa@n+1
 22393  00209C  0060  F08C  F03B   	movff	dtoa@d+2,dtoa@n+2
 22394  0020A2  0060  F090  F03C   	movff	dtoa@d+3,dtoa@n+3
 22395  0020A8  0060  F094  F03D   	movff	dtoa@d+4,dtoa@n+4
 22396  0020AE  0060  F098  F03E   	movff	dtoa@d+5,dtoa@n+5
 22397  0020B4  0060  F09C  F03F   	movff	dtoa@d+6,dtoa@n+6
 22398  0020BA  0060  F0A0  F040   	movff	dtoa@d+7,dtoa@n+7
 22399                           
 22400                           ; BSR set to: 0
 22401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 22402  0020C0  AE40               	btfss	(dtoa@n+7)^0,7,c
 22403  0020C2  D002               	goto	u13250
 22404  0020C4  0E01               	movlw	1
 22405  0020C6  D001               	goto	u13260
 22406  0020C8                     u13250:
 22407  0020C8  0E00               	movlw	0
 22408  0020CA                     u13260:
 22409  0020CA  6E37               	movwf	dtoa@s^0,c
 22410  0020CC  6A38               	clrf	(dtoa@s+1)^0,c
 22411                           
 22412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 22413  0020CE  5037               	movf	dtoa@s^0,w,c
 22414  0020D0  1038               	iorwf	(dtoa@s+1)^0,w,c
 22415  0020D2  B4D8               	btfsc	status,2,c
 22416  0020D4  D010               	goto	l14073
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 22420  0020D6  1E40               	comf	(dtoa@n+7)^0,f,c
 22421  0020D8  1E3F               	comf	(dtoa@n+6)^0,f,c
 22422  0020DA  1E3E               	comf	(dtoa@n+5)^0,f,c
 22423  0020DC  1E3D               	comf	(dtoa@n+4)^0,f,c
 22424  0020DE  1E3C               	comf	(dtoa@n+3)^0,f,c
 22425  0020E0  1E3B               	comf	(dtoa@n+2)^0,f,c
 22426  0020E2  1E3A               	comf	(dtoa@n+1)^0,f,c
 22427  0020E4  6C39               	negf	dtoa@n^0,c
 22428  0020E6  0E00               	movlw	0
 22429  0020E8  223A               	addwfc	(dtoa@n+1)^0,f,c
 22430  0020EA  223B               	addwfc	(dtoa@n+2)^0,f,c
 22431  0020EC  223C               	addwfc	(dtoa@n+3)^0,f,c
 22432  0020EE  223D               	addwfc	(dtoa@n+4)^0,f,c
 22433  0020F0  223E               	addwfc	(dtoa@n+5)^0,f,c
 22434  0020F2  223F               	addwfc	(dtoa@n+6)^0,f,c
 22435  0020F4  2240               	addwfc	(dtoa@n+7)^0,f,c
 22436  0020F6                     l14073:
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 22440  0020F6  AFDD               	btfss	(_prec+1)& (0+255),7,b
 22441                           
 22442                           ; BSR set to: 0
 22443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 22444  0020F8  93DE               	bcf	_flags& (0+255),1,b
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 22448  0020FA  BFDD               	btfsc	(_prec+1)& (0+255),7,b
 22449  0020FC  D005               	goto	u13290
 22450  0020FE  51DD               	movf	(_prec+1)& (0+255),w,b
 22451  002100  E108               	bnz	l3064
 22452  002102  05DC               	decf	_prec& (0+255),w,b
 22453  002104  B0D8               	btfsc	status,0,c
 22454  002106  D005               	goto	l3064
 22455  002108                     u13290:
 22456                           
 22457                           ; BSR set to: 0
 22458  002108  0E00               	movlw	0
 22459  00210A  6E34               	movwf	(dtoa@p+1)^0,c
 22460  00210C  0E01               	movlw	1
 22461  00210E  6E33               	movwf	dtoa@p^0,c
 22462  002110  D006               	goto	l3066
 22463  002112                     l3064:
 22464                           
 22465                           ; BSR set to: 0
 22466  002112  0060  F370  F033   	movff	_prec,dtoa@p
 22467  002118  0060  F374  F034   	movff	_prec+1,dtoa@p+1
 22468  00211E                     l3066:
 22469                           
 22470                           ; BSR set to: 0
 22471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 22472  00211E  0060  F368  F035   	movff	_width,dtoa@w
 22473  002124  0060  F36C  F036   	movff	_width+1,dtoa@w+1
 22474                           
 22475                           ; BSR set to: 0
 22476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 22477  00212A  5037               	movf	dtoa@s^0,w,c
 22478  00212C  1038               	iorwf	(dtoa@s+1)^0,w,c
 22479  00212E  A4D8               	btfss	status,2,c
 22480  002130  D002               	goto	u13310
 22481                           
 22482                           ; BSR set to: 0
 22483  002132  A5DE               	btfss	_flags& (0+255),2,b
 22484  002134  D003               	goto	l14087
 22485  002136                     u13310:
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 22489  002136  0635               	decf	dtoa@w^0,f,c
 22490  002138  A0D8               	btfss	status,0,c
 22491  00213A  0636               	decf	(dtoa@w+1)^0,f,c
 22492  00213C                     l14087:
 22493                           
 22494                           ; BSR set to: 0
 22495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 22496  00213C  0E00               	movlw	0
 22497  00213E  6E42               	movwf	(dtoa@i+1)^0,c
 22498  002140  0E1F               	movlw	31
 22499  002142  6E41               	movwf	dtoa@i^0,c
 22500                           
 22501                           ; BSR set to: 0
 22502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 22503  002144  0E00               	movlw	0
 22504  002146  0101               	movlb	1	; () banked
 22505  002148  6F94               	movwf	(_dbuf+31)& (0+255),b
 22506                           
 22507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22508  00214A  D09E               	goto	l14101
 22509  00214C                     l14091:
 22510                           
 22511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 22512  00214C  0641               	decf	dtoa@i^0,f,c
 22513  00214E  A0D8               	btfss	status,0,c
 22514  002150  0642               	decf	(dtoa@i+1)^0,f,c
 22515                           
 22516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 22517  002152  0E75               	movlw	low _dbuf
 22518  002154  2441               	addwf	dtoa@i^0,w,c
 22519  002156  6ED9               	movwf	fsr2l,c
 22520  002158  0E01               	movlw	high _dbuf
 22521  00215A  2042               	addwfc	(dtoa@i+1)^0,w,c
 22522  00215C  6EDA               	movwf	fsr2h,c
 22523  00215E  0060  F0E4  F002   	movff	dtoa@n,___aomod@dividend
 22524  002164  0060  F0E8  F003   	movff	dtoa@n+1,___aomod@dividend+1
 22525  00216A  0060  F0EC  F004   	movff	dtoa@n+2,___aomod@dividend+2
 22526  002170  0060  F0F0  F005   	movff	dtoa@n+3,___aomod@dividend+3
 22527  002176  0060  F0F4  F006   	movff	dtoa@n+4,___aomod@dividend+4
 22528  00217C  0060  F0F8  F007   	movff	dtoa@n+5,___aomod@dividend+5
 22529  002182  0060  F0FC  F008   	movff	dtoa@n+6,___aomod@dividend+6
 22530  002188  0060  F100  F009   	movff	dtoa@n+7,___aomod@dividend+7
 22531  00218E  0E0A               	movlw	10
 22532  002190  6E0A               	movwf	___aomod@divisor^0,c
 22533  002192  0E00               	movlw	0
 22534  002194  6E0B               	movwf	(___aomod@divisor+1)^0,c
 22535  002196  0E00               	movlw	0
 22536  002198  6E0C               	movwf	(___aomod@divisor+2)^0,c
 22537  00219A  0E00               	movlw	0
 22538  00219C  6E0D               	movwf	(___aomod@divisor+3)^0,c
 22539  00219E  0E00               	movlw	0
 22540  0021A0  6E0E               	movwf	(___aomod@divisor+4)^0,c
 22541  0021A2  0E00               	movlw	0
 22542  0021A4  6E0F               	movwf	(___aomod@divisor+5)^0,c
 22543  0021A6  0E00               	movlw	0
 22544  0021A8  6E10               	movwf	(___aomod@divisor+6)^0,c
 22545  0021AA  0E00               	movlw	0
 22546  0021AC  6E11               	movwf	(___aomod@divisor+7)^0,c
 22547  0021AE  EC21  F024         	call	___aomod	;wreg free
 22548  0021B2  0060  F008  F029   	movff	?___aomod,??_dtoa
 22549  0021B8  0060  F00C  F02A   	movff	?___aomod+1,??_dtoa+1
 22550  0021BE  0060  F010  F02B   	movff	?___aomod+2,??_dtoa+2
 22551  0021C4  0060  F014  F02C   	movff	?___aomod+3,??_dtoa+3
 22552  0021CA  0060  F018  F02D   	movff	?___aomod+4,??_dtoa+4
 22553  0021D0  0060  F01C  F02E   	movff	?___aomod+5,??_dtoa+5
 22554  0021D6  0060  F020  F02F   	movff	?___aomod+6,??_dtoa+6
 22555  0021DC  0060  F024  F030   	movff	?___aomod+7,??_dtoa+7
 22556  0021E2  0060  F0A4  F014   	movff	??_dtoa,abs@a
 22557  0021E8  0060  F0AC  F015   	movff	??_dtoa+2,abs@a+1
 22558  0021EE  ECD1  F040         	call	_abs	;wreg free
 22559  0021F2  5014               	movf	?_abs^0,w,c
 22560  0021F4  0F30               	addlw	48
 22561  0021F6  6EDF               	movwf	indf2,c
 22562                           
 22563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 22564  0021F8  0633               	decf	dtoa@p^0,f,c
 22565  0021FA  A0D8               	btfss	status,0,c
 22566  0021FC  0634               	decf	(dtoa@p+1)^0,f,c
 22567                           
 22568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 22569  0021FE  0635               	decf	dtoa@w^0,f,c
 22570  002200  A0D8               	btfss	status,0,c
 22571  002202  0636               	decf	(dtoa@w+1)^0,f,c
 22572                           
 22573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 22574  002204  0060  F0E4  F002   	movff	dtoa@n,___aodiv@dividend
 22575  00220A  0060  F0E8  F003   	movff	dtoa@n+1,___aodiv@dividend+1
 22576  002210  0060  F0EC  F004   	movff	dtoa@n+2,___aodiv@dividend+2
 22577  002216  0060  F0F0  F005   	movff	dtoa@n+3,___aodiv@dividend+3
 22578  00221C  0060  F0F4  F006   	movff	dtoa@n+4,___aodiv@dividend+4
 22579  002222  0060  F0F8  F007   	movff	dtoa@n+5,___aodiv@dividend+5
 22580  002228  0060  F0FC  F008   	movff	dtoa@n+6,___aodiv@dividend+6
 22581  00222E  0060  F100  F009   	movff	dtoa@n+7,___aodiv@dividend+7
 22582  002234  0E0A               	movlw	10
 22583  002236  6E0A               	movwf	___aodiv@divisor^0,c
 22584  002238  0E00               	movlw	0
 22585  00223A  6E0B               	movwf	(___aodiv@divisor+1)^0,c
 22586  00223C  0E00               	movlw	0
 22587  00223E  6E0C               	movwf	(___aodiv@divisor+2)^0,c
 22588  002240  0E00               	movlw	0
 22589  002242  6E0D               	movwf	(___aodiv@divisor+3)^0,c
 22590  002244  0E00               	movlw	0
 22591  002246  6E0E               	movwf	(___aodiv@divisor+4)^0,c
 22592  002248  0E00               	movlw	0
 22593  00224A  6E0F               	movwf	(___aodiv@divisor+5)^0,c
 22594  00224C  0E00               	movlw	0
 22595  00224E  6E10               	movwf	(___aodiv@divisor+6)^0,c
 22596  002250  0E00               	movlw	0
 22597  002252  6E11               	movwf	(___aodiv@divisor+7)^0,c
 22598  002254  EC86  F021         	call	___aodiv	;wreg free
 22599  002258  0060  F008  F039   	movff	?___aodiv,dtoa@n
 22600  00225E  0060  F00C  F03A   	movff	?___aodiv+1,dtoa@n+1
 22601  002264  0060  F010  F03B   	movff	?___aodiv+2,dtoa@n+2
 22602  00226A  0060  F014  F03C   	movff	?___aodiv+3,dtoa@n+3
 22603  002270  0060  F018  F03D   	movff	?___aodiv+4,dtoa@n+4
 22604  002276  0060  F01C  F03E   	movff	?___aodiv+5,dtoa@n+5
 22605  00227C  0060  F020  F03F   	movff	?___aodiv+6,dtoa@n+6
 22606  002282  0060  F024  F040   	movff	?___aodiv+7,dtoa@n+7
 22607  002288                     l14101:
 22608                           
 22609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22610  002288  BE42               	btfsc	(dtoa@i+1)^0,7,c
 22611  00228A  D020               	goto	u13360
 22612  00228C  5042               	movf	(dtoa@i+1)^0,w,c
 22613  00228E  E103               	bnz	u13320
 22614  002290  0441               	decf	dtoa@i^0,w,c
 22615  002292  A0D8               	btfss	status,0,c
 22616  002294  D01B               	goto	u13360
 22617  002296                     u13320:
 22618  002296  5039               	movf	dtoa@n^0,w,c
 22619  002298  103A               	iorwf	(dtoa@n+1)^0,w,c
 22620  00229A  103B               	iorwf	(dtoa@n+2)^0,w,c
 22621  00229C  103C               	iorwf	(dtoa@n+3)^0,w,c
 22622  00229E  103D               	iorwf	(dtoa@n+4)^0,w,c
 22623  0022A0  103E               	iorwf	(dtoa@n+5)^0,w,c
 22624  0022A2  103F               	iorwf	(dtoa@n+6)^0,w,c
 22625  0022A4  1040               	iorwf	(dtoa@n+7)^0,w,c
 22626  0022A6  A4D8               	btfss	status,2,c
 22627  0022A8  D751               	goto	l14091
 22628  0022AA  BE34               	btfsc	(dtoa@p+1)^0,7,c
 22629  0022AC  D005               	goto	u13340
 22630  0022AE  5034               	movf	(dtoa@p+1)^0,w,c
 22631  0022B0  E102               	bnz	u13341
 22632  0022B2  0433               	decf	dtoa@p^0,w,c
 22633  0022B4  B0D8               	btfsc	status,0,c
 22634  0022B6                     u13341:
 22635  0022B6  D74A               	goto	l14091
 22636  0022B8                     u13340:
 22637  0022B8  BE36               	btfsc	(dtoa@w+1)^0,7,c
 22638  0022BA  D008               	goto	u13360
 22639  0022BC  5036               	movf	(dtoa@w+1)^0,w,c
 22640  0022BE  E103               	bnz	u13350
 22641  0022C0  0435               	decf	dtoa@w^0,w,c
 22642  0022C2  A0D8               	btfss	status,0,c
 22643  0022C4  D003               	goto	u13360
 22644  0022C6                     u13350:
 22645  0022C6  0100               	movlb	0	; () banked
 22646  0022C8  B3DE               	btfsc	_flags& (0+255),1,b
 22647  0022CA  D740               	goto	l14091
 22648  0022CC                     u13360:
 22649                           
 22650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 22651  0022CC  5037               	movf	dtoa@s^0,w,c
 22652  0022CE  1038               	iorwf	(dtoa@s+1)^0,w,c
 22653  0022D0  A4D8               	btfss	status,2,c
 22654  0022D2  D003               	goto	u13380
 22655  0022D4  0100               	movlb	0	; () banked
 22656  0022D6  A5DE               	btfss	_flags& (0+255),2,b
 22657  0022D8  D018               	goto	l14125
 22658  0022DA                     u13380:
 22659                           
 22660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 22661  0022DA  0641               	decf	dtoa@i^0,f,c
 22662  0022DC  A0D8               	btfss	status,0,c
 22663  0022DE  0642               	decf	(dtoa@i+1)^0,f,c
 22664                           
 22665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 22666  0022E0  5037               	movf	dtoa@s^0,w,c
 22667  0022E2  1038               	iorwf	(dtoa@s+1)^0,w,c
 22668  0022E4  A4D8               	btfss	status,2,c
 22669  0022E6  D004               	goto	l14121
 22670  0022E8  0E00               	movlw	0
 22671  0022EA  6E32               	movwf	(_dtoa$7199+1)^0,c
 22672  0022EC  0E2B               	movlw	43
 22673  0022EE  D003               	goto	L24
 22674  0022F0                     l14121:
 22675  0022F0  0E00               	movlw	0
 22676  0022F2  6E32               	movwf	(_dtoa$7199+1)^0,c
 22677  0022F4  0E2D               	movlw	45
 22678  0022F6                     L24:
 22679  0022F6  6E31               	movwf	_dtoa$7199^0,c
 22680  0022F8  0E75               	movlw	low _dbuf
 22681  0022FA  2441               	addwf	dtoa@i^0,w,c
 22682  0022FC  6ED9               	movwf	fsr2l,c
 22683  0022FE  0E01               	movlw	high _dbuf
 22684  002300  2042               	addwfc	(dtoa@i+1)^0,w,c
 22685  002302  6EDA               	movwf	fsr2h,c
 22686  002304  0060  F0C7  FFDF   	movff	_dtoa$7199,indf2
 22687  00230A                     l14125:
 22688                           
 22689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 22690  00230A  0060  F07C  F014   	movff	dtoa@fp,pad@fp
 22691  002310  0060  F080  F015   	movff	dtoa@fp+1,pad@fp+1
 22692  002316  0E75               	movlw	low _dbuf
 22693  002318  2441               	addwf	dtoa@i^0,w,c
 22694  00231A  6E16               	movwf	pad@buf^0,c
 22695  00231C  0E01               	movlw	high _dbuf
 22696  00231E  2042               	addwfc	(dtoa@i+1)^0,w,c
 22697  002320  6E17               	movwf	(pad@buf+1)^0,c
 22698  002322  0060  F0D4  F018   	movff	dtoa@w,pad@p
 22699  002328  0060  F0D8  F019   	movff	dtoa@w+1,pad@p+1
 22700  00232E  EC95  F032         	call	_pad	;wreg free
 22701  002332  0060  F050  F01F   	movff	?_pad,?_dtoa
 22702  002338  0060  F054  F020   	movff	?_pad+1,?_dtoa+1
 22703  00233E  0012               	return		;funcret
 22704  002340                     __end_of_dtoa:
 22705                           	opt callstack 0
 22706                           
 22707 ;; *************** function _pad *****************
 22708 ;; Defined at:
 22709 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 22710 ;; Parameters:    Size  Location     Type
 22711 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 22712 ;;		 -> NULL(0), 
 22713 ;;  buf             2   21[COMRAM] PTR unsigned char 
 22714 ;;		 -> dbuf(32), 
 22715 ;;  p               2   23[COMRAM] int 
 22716 ;; Auto vars:     Size  Location     Type
 22717 ;;  w               2   28[COMRAM] int 
 22718 ;;  i               2   26[COMRAM] int 
 22719 ;; Return value:  Size  Location     Type
 22720 ;;                  2   19[COMRAM] int 
 22721 ;; Registers used:
 22722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22723 ;; Tracked objects:
 22724 ;;		On entry : 0/0
 22725 ;;		On exit  : 0/0
 22726 ;;		Unchanged: 0/0
 22727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22728 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22729 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22731 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22732 ;;Total ram usage:       11 bytes
 22733 ;; Hardware stack levels used:    1
 22734 ;; Hardware stack levels required when called:   11
 22735 ;; This function calls:
 22736 ;;		_fputc
 22737 ;;		_fputs
 22738 ;;		_strlen
 22739 ;; This function is called by:
 22740 ;;		_dtoa
 22741 ;;		_utoa
 22742 ;;		_xtoa
 22743 ;; This function uses a non-reentrant model
 22744 ;;
 22745                           
 22746                           	psect	text136
 22747  00652A                     __ptext136:
 22748                           	opt callstack 0
 22749  00652A                     _pad:
 22750                           	opt callstack 12
 22751                           
 22752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 22753                           
 22754                           ;incstack = 0
 22755  00652A  0100               	movlb	0	; () banked
 22756  00652C  A1DE               	btfss	_flags& (0+255),0,b
 22757  00652E  D00E               	goto	l13887
 22758                           
 22759                           ; BSR set to: 0
 22760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 22761  006530  0060  F058  F00D   	movff	pad@buf,fputs@s
 22762  006536  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 22763  00653C  0060  F050  F00F   	movff	pad@fp,fputs@fp
 22764  006542  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 22765  006548  ECB2  F040         	call	_fputs	;wreg free
 22766  00654C                     l13887:
 22767                           
 22768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 22769  00654C  BE19               	btfsc	(pad@p+1)^0,7,c
 22770  00654E  D007               	goto	l13891
 22771  006550  0060  F060  F01D   	movff	pad@p,pad@w
 22772  006556  0060  F064  F01E   	movff	pad@p+1,pad@w+1
 22773  00655C  D004               	goto	l3053
 22774  00655E                     l13891:
 22775  00655E  0E00               	movlw	0
 22776  006560  6E1E               	movwf	(pad@w+1)^0,c
 22777  006562  0E00               	movlw	0
 22778  006564  6E1D               	movwf	pad@w^0,c
 22779  006566                     l3053:
 22780                           
 22781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 22782  006566  0E00               	movlw	0
 22783  006568  6E1C               	movwf	(pad@i+1)^0,c
 22784  00656A  0E00               	movlw	0
 22785  00656C  6E1B               	movwf	pad@i^0,c
 22786                           
 22787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 22788  00656E  D00E               	goto	l13897
 22789  006570                     l13893:
 22790                           
 22791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 22792  006570  0E00               	movlw	0
 22793  006572  6E05               	movwf	(fputc@c+1)^0,c
 22794  006574  0E20               	movlw	32
 22795  006576  6E04               	movwf	fputc@c^0,c
 22796  006578  0060  F050  F006   	movff	pad@fp,fputc@fp
 22797  00657E  0060  F054  F007   	movff	pad@fp+1,fputc@fp+1
 22798  006584  ECC6  F03A         	call	_fputc	;wreg free
 22799                           
 22800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 22801  006588  4A1B               	infsnz	pad@i^0,f,c
 22802  00658A  2A1C               	incf	(pad@i+1)^0,f,c
 22803  00658C                     l13897:
 22804                           
 22805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 22806  00658C  501D               	movf	pad@w^0,w,c
 22807  00658E  5C1B               	subwf	pad@i^0,w,c
 22808  006590  501C               	movf	(pad@i+1)^0,w,c
 22809  006592  0A80               	xorlw	128
 22810  006594  6E1A               	movwf	??_pad^0,c
 22811  006596  501E               	movf	(pad@w+1)^0,w,c
 22812  006598  0A80               	xorlw	128
 22813  00659A  581A               	subwfb	??_pad^0,w,c
 22814  00659C  A0D8               	btfss	status,0,c
 22815  00659E  D7E8               	goto	l13893
 22816                           
 22817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 22818  0065A0  0100               	movlb	0	; () banked
 22819  0065A2  B1DE               	btfsc	_flags& (0+255),0,b
 22820  0065A4  D00E               	goto	l13901
 22821                           
 22822                           ; BSR set to: 0
 22823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 22824  0065A6  0060  F058  F00D   	movff	pad@buf,fputs@s
 22825  0065AC  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 22826  0065B2  0060  F050  F00F   	movff	pad@fp,fputs@fp
 22827  0065B8  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 22828  0065BE  ECB2  F040         	call	_fputs	;wreg free
 22829  0065C2                     l13901:
 22830                           
 22831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 22832  0065C2  0060  F058  F002   	movff	pad@buf,strlen@s
 22833  0065C8  0060  F05C  F003   	movff	pad@buf+1,strlen@s+1
 22834  0065CE  EC3E  F03E         	call	_strlen	;wreg free
 22835  0065D2  501D               	movf	pad@w^0,w,c
 22836  0065D4  2402               	addwf	?_strlen^0,w,c
 22837  0065D6  6E14               	movwf	?_pad^0,c
 22838  0065D8  501E               	movf	(pad@w+1)^0,w,c
 22839  0065DA  2003               	addwfc	(?_strlen+1)^0,w,c
 22840  0065DC  6E15               	movwf	(?_pad+1)^0,c
 22841  0065DE  0012               	return		;funcret
 22842  0065E0                     __end_of_pad:
 22843                           	opt callstack 0
 22844                           
 22845 ;; *************** function _strlen *****************
 22846 ;; Defined at:
 22847 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 22848 ;; Parameters:    Size  Location     Type
 22849 ;;  s               2    1[COMRAM] PTR const unsigned char 
 22850 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_129(10), 
 22851 ;;		 -> STR_127(10), STR_125(6), STR_123(6), STR_121(7), 
 22852 ;;		 -> STR_119(5), STR_117(7), STR_115(7), STR_113(6), 
 22853 ;;		 -> STR_111(9), STR_109(8), STR_107(8), STR_105(7), 
 22854 ;;		 -> STR_103(6), STR_101(3), STR_99(9), STR_97(7), 
 22855 ;;		 -> STR_95(7), STR_93(10), STR_91(10), STR_89(15), 
 22856 ;;		 -> STR_87(13), STR_85(9), STR_83(7), STR_81(7), 
 22857 ;;		 -> STR_79(10), STR_77(7), STR_75(8), STR_73(11), 
 22858 ;;		 -> STR_71(5), STR_69(5), STR_67(7), STR_65(9), 
 22859 ;;		 -> STR_63(7), STR_57(2), STR_55(2), STR_54(2), 
 22860 ;;		 -> STR_51(6), STR_49(6), STR_47(5), STR_43(2), 
 22861 ;;		 -> STR_38(2), STR_34(2), STR_25(2), STR_22(2), 
 22862 ;;		 -> STR_16(2), STR_12(2), atCommand(80), NULL(0), 
 22863 ;;		 -> STR_7(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 22864 ;; Auto vars:     Size  Location     Type
 22865 ;;  a               2    3[COMRAM] PTR const unsigned char 
 22866 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_129(10), 
 22867 ;;		 -> STR_127(10), STR_125(6), STR_123(6), STR_121(7), 
 22868 ;;		 -> STR_119(5), STR_117(7), STR_115(7), STR_113(6), 
 22869 ;;		 -> STR_111(9), STR_109(8), STR_107(8), STR_105(7), 
 22870 ;;		 -> STR_103(6), STR_101(3), STR_99(9), STR_97(7), 
 22871 ;;		 -> STR_95(7), STR_93(10), STR_91(10), STR_89(15), 
 22872 ;;		 -> STR_87(13), STR_85(9), STR_83(7), STR_81(7), 
 22873 ;;		 -> STR_79(10), STR_77(7), STR_75(8), STR_73(11), 
 22874 ;;		 -> STR_71(5), STR_69(5), STR_67(7), STR_65(9), 
 22875 ;;		 -> STR_63(7), STR_57(2), STR_55(2), STR_54(2), 
 22876 ;;		 -> STR_51(6), STR_49(6), STR_47(5), STR_43(2), 
 22877 ;;		 -> STR_38(2), STR_34(2), STR_25(2), STR_22(2), 
 22878 ;;		 -> STR_16(2), STR_12(2), atCommand(80), NULL(0), 
 22879 ;;		 -> STR_7(2), STR_3(2), STR_2(2), appDataInd@data(65), 
 22880 ;; Return value:  Size  Location     Type
 22881 ;;                  2    1[COMRAM] unsigned int 
 22882 ;; Registers used:
 22883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22884 ;; Tracked objects:
 22885 ;;		On entry : 0/0
 22886 ;;		On exit  : 0/0
 22887 ;;		Unchanged: 0/0
 22888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22893 ;;Total ram usage:        4 bytes
 22894 ;; Hardware stack levels used:    1
 22895 ;; Hardware stack levels required when called:    7
 22896 ;; This function calls:
 22897 ;;		Nothing
 22898 ;; This function is called by:
 22899 ;;		_cmdSend
 22900 ;;		_cmdBcast
 22901 ;;		_cmdSetAES
 22902 ;;		_pad
 22903 ;;		_stoa
 22904 ;;		_strstr
 22905 ;; This function uses a non-reentrant model
 22906 ;;
 22907                           
 22908                           	psect	text137
 22909  007C7C                     __ptext137:
 22910                           	opt callstack 0
 22911  007C7C                     _strlen:
 22912                           	opt callstack 20
 22913                           
 22914                           ;incstack = 0
 22915  007C7C  0060  F008  F004   	movff	strlen@s,strlen@a
 22916  007C82  0060  F00C  F005   	movff	strlen@s+1,strlen@a+1
 22917  007C88  D002               	goto	l13865
 22918  007C8A                     l13863:
 22919  007C8A  4A02               	infsnz	strlen@s^0,f,c
 22920  007C8C  2A03               	incf	(strlen@s+1)^0,f,c
 22921  007C8E                     l13865:
 22922  007C8E  0060  F00B  FFF6   	movff	strlen@s,tblptrl
 22923  007C94  0060  F00F  FFF7   	movff	strlen@s+1,tblptrh
 22924  007C9A  0E00               	movlw	low (__mediumconst shr (0+16))
 22925  007C9C  6EF8               	movwf	tblptru,c
 22926  007C9E  0E0F               	movlw	(high __ramtop+-1)
 22927  007CA0  64F7               	cpfsgt	tblptrh,c
 22928  007CA2  D003               	bra	u12847
 22929  007CA4  0008               	tblrd		*
 22930  007CA6  50F5               	movf	tablat,w,c
 22931  007CA8  D007               	bra	u12840
 22932  007CAA                     u12847:
 22933  007CAA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22934  007CB0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22935  007CB6  50EF               	movf	indf0,w,c
 22936  007CB8                     u12840:
 22937  007CB8  0900               	iorlw	0
 22938  007CBA  A4D8               	btfss	status,2,c
 22939  007CBC  D7E6               	goto	l13863
 22940  007CBE  5004               	movf	strlen@a^0,w,c
 22941  007CC0  5C02               	subwf	strlen@s^0,w,c
 22942  007CC2  6E02               	movwf	?_strlen^0,c
 22943  007CC4  5005               	movf	(strlen@a+1)^0,w,c
 22944  007CC6  5803               	subwfb	(strlen@s+1)^0,w,c
 22945  007CC8  6E03               	movwf	(?_strlen+1)^0,c
 22946  007CCA  0012               	return		;funcret
 22947  007CCC                     __end_of_strlen:
 22948                           	opt callstack 0
 22949                           
 22950 ;; *************** function _fputs *****************
 22951 ;; Defined at:
 22952 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 22953 ;; Parameters:    Size  Location     Type
 22954 ;;  s               2   12[COMRAM] PTR const unsigned char 
 22955 ;;		 -> dbuf(32), 
 22956 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 22957 ;;		 -> NULL(0), 
 22958 ;; Auto vars:     Size  Location     Type
 22959 ;;  i               2   17[COMRAM] int 
 22960 ;;  c               1   16[COMRAM] unsigned char 
 22961 ;; Return value:  Size  Location     Type
 22962 ;;                  2   12[COMRAM] int 
 22963 ;; Registers used:
 22964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22965 ;; Tracked objects:
 22966 ;;		On entry : 3F/0
 22967 ;;		On exit  : 0/0
 22968 ;;		Unchanged: 0/0
 22969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22971 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22973 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22974 ;;Total ram usage:        7 bytes
 22975 ;; Hardware stack levels used:    1
 22976 ;; Hardware stack levels required when called:   10
 22977 ;; This function calls:
 22978 ;;		_fputc
 22979 ;; This function is called by:
 22980 ;;		_pad
 22981 ;; This function uses a non-reentrant model
 22982 ;;
 22983                           
 22984                           	psect	text138
 22985  008164                     __ptext138:
 22986                           	opt callstack 0
 22987  008164                     _fputs:
 22988                           	opt callstack 12
 22989                           
 22990                           ; BSR set to: 0
 22991                           
 22992                           ;incstack = 0
 22993  008164  0E00               	movlw	0
 22994  008166  6E13               	movwf	(fputs@i+1)^0,c
 22995  008168  0E00               	movlw	0
 22996  00816A  6E12               	movwf	fputs@i^0,c
 22997  00816C  D00E               	goto	l13877
 22998  00816E                     l13873:
 22999  00816E  0060  F044  F004   	movff	fputs@c,fputc@c
 23000  008174  6A05               	clrf	(fputc@c+1)^0,c
 23001  008176  0060  F03C  F006   	movff	fputs@fp,fputc@fp
 23002  00817C  0060  F040  F007   	movff	fputs@fp+1,fputc@fp+1
 23003  008182  ECC6  F03A         	call	_fputc	;wreg free
 23004  008186  4A12               	infsnz	fputs@i^0,f,c
 23005  008188  2A13               	incf	(fputs@i+1)^0,f,c
 23006  00818A                     l13877:
 23007  00818A  5012               	movf	fputs@i^0,w,c
 23008  00818C  240D               	addwf	fputs@s^0,w,c
 23009  00818E  6ED9               	movwf	fsr2l,c
 23010  008190  5013               	movf	(fputs@i+1)^0,w,c
 23011  008192  200E               	addwfc	(fputs@s+1)^0,w,c
 23012  008194  6EDA               	movwf	fsr2h,c
 23013  008196  50DF               	movf	indf2,w,c
 23014  008198  6E11               	movwf	fputs@c^0,c
 23015  00819A  5011               	movf	fputs@c^0,w,c
 23016  00819C  B4D8               	btfsc	status,2,c
 23017  00819E  0012               	return	
 23018  0081A0  D7E6               	goto	l13873
 23019  0081A2                     __end_of_fputs:
 23020                           	opt callstack 0
 23021                           
 23022 ;; *************** function _fputc *****************
 23023 ;; Defined at:
 23024 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 23025 ;; Parameters:    Size  Location     Type
 23026 ;;  c               2    3[COMRAM] int 
 23027 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 23028 ;;		 -> NULL(0), 
 23029 ;; Auto vars:     Size  Location     Type
 23030 ;;		None
 23031 ;; Return value:  Size  Location     Type
 23032 ;;                  2    3[COMRAM] int 
 23033 ;; Registers used:
 23034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23035 ;; Tracked objects:
 23036 ;;		On entry : 0/0
 23037 ;;		On exit  : 0/0
 23038 ;;		Unchanged: 0/0
 23039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23042 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23043 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23044 ;;Total ram usage:        9 bytes
 23045 ;; Hardware stack levels used:    1
 23046 ;; Hardware stack levels required when called:    9
 23047 ;; This function calls:
 23048 ;;		_putch
 23049 ;; This function is called by:
 23050 ;;		_pad
 23051 ;;		_stoa
 23052 ;;		_vfpfcnvrt
 23053 ;;		_fputs
 23054 ;; This function uses a non-reentrant model
 23055 ;;
 23056                           
 23057                           	psect	text139
 23058  00758C                     __ptext139:
 23059                           	opt callstack 0
 23060  00758C                     _fputc:
 23061                           	opt callstack 12
 23062                           
 23063                           ;incstack = 0
 23064  00758C  5006               	movf	fputc@fp^0,w,c
 23065  00758E  1007               	iorwf	(fputc@fp+1)^0,w,c
 23066  007590  B4D8               	btfsc	status,2,c
 23067  007592  D004               	goto	u12810
 23068  007594  5006               	movf	fputc@fp^0,w,c
 23069  007596  1007               	iorwf	(fputc@fp+1)^0,w,c
 23070  007598  A4D8               	btfss	status,2,c
 23071  00759A  D004               	goto	l13853
 23072  00759C                     u12810:
 23073  00759C  5004               	movf	fputc@c^0,w,c
 23074  00759E  EC9D  F046         	call	_putch
 23075  0075A2  0012               	return	
 23076  0075A4                     l13853:
 23077  0075A4  EE20 F004          	lfsr	2,4
 23078  0075A8  5006               	movf	fputc@fp^0,w,c
 23079  0075AA  26D9               	addwf	fsr2l,f,c
 23080  0075AC  5007               	movf	(fputc@fp+1)^0,w,c
 23081  0075AE  22DA               	addwfc	fsr2h,f,c
 23082  0075B0  50DE               	movf	postinc2,w,c
 23083  0075B2  10DE               	iorwf	postinc2,w,c
 23084  0075B4  B4D8               	btfsc	status,2,c
 23085  0075B6  D016               	goto	u12830
 23086  0075B8  EE20 F004          	lfsr	2,4
 23087  0075BC  5006               	movf	fputc@fp^0,w,c
 23088  0075BE  26D9               	addwf	fsr2l,f,c
 23089  0075C0  5007               	movf	(fputc@fp+1)^0,w,c
 23090  0075C2  22DA               	addwfc	fsr2h,f,c
 23091  0075C4  EE10 F002          	lfsr	1,2
 23092  0075C8  5006               	movf	fputc@fp^0,w,c
 23093  0075CA  26E1               	addwf	fsr1l,f,c
 23094  0075CC  5007               	movf	(fputc@fp+1)^0,w,c
 23095  0075CE  22E2               	addwfc	fsr1h,f,c
 23096  0075D0  50DE               	movf	postinc2,w,c
 23097  0075D2  5CE6               	subwf	postinc1,w,c
 23098  0075D4  50E6               	movf	postinc1,w,c
 23099  0075D6  0A80               	xorlw	128
 23100  0075D8  6E0C               	movwf	(??_fputc+4)^0,c
 23101  0075DA  50DE               	movf	postinc2,w,c
 23102  0075DC  0A80               	xorlw	128
 23103  0075DE  580C               	subwfb	(??_fputc+4)^0,w,c
 23104  0075E0  B0D8               	btfsc	status,0,c
 23105  0075E2  0012               	return	
 23106  0075E4                     u12830:
 23107  0075E4  EE20 F002          	lfsr	2,2
 23108  0075E8  5006               	movf	fputc@fp^0,w,c
 23109  0075EA  26D9               	addwf	fsr2l,f,c
 23110  0075EC  5007               	movf	(fputc@fp+1)^0,w,c
 23111  0075EE  22DA               	addwfc	fsr2h,f,c
 23112  0075F0  2ADE               	incf	postinc2,f,c
 23113  0075F2  0E00               	movlw	0
 23114  0075F4  22DD               	addwfc	postdec2,f,c
 23115  0075F6  0012               	return		;funcret
 23116  0075F8                     __end_of_fputc:
 23117                           	opt callstack 0
 23118                           
 23119 ;; *************** function _putch *****************
 23120 ;; Defined at:
 23121 ;;		line 242 in file "mcc_generated_files/uart1.c"
 23122 ;; Parameters:    Size  Location     Type
 23123 ;;  txData          1    wreg     unsigned char 
 23124 ;; Auto vars:     Size  Location     Type
 23125 ;;  txData          1    2[COMRAM] unsigned char 
 23126 ;; Return value:  Size  Location     Type
 23127 ;;                  1    wreg      void 
 23128 ;; Registers used:
 23129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23130 ;; Tracked objects:
 23131 ;;		On entry : 0/0
 23132 ;;		On exit  : 3F/39
 23133 ;;		Unchanged: 0/0
 23134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23139 ;;Total ram usage:        1 bytes
 23140 ;; Hardware stack levels used:    1
 23141 ;; Hardware stack levels required when called:    8
 23142 ;; This function calls:
 23143 ;;		_UART1_Write
 23144 ;; This function is called by:
 23145 ;;		_fputc
 23146 ;; This function uses a non-reentrant model
 23147 ;;
 23148                           
 23149                           	psect	text140
 23150  008D3A                     __ptext140:
 23151                           	opt callstack 0
 23152  008D3A                     _putch:
 23153                           	opt callstack 12
 23154                           
 23155                           ;incstack = 0
 23156                           ;putch@txData stored from wreg
 23157  008D3A  6E03               	movwf	putch@txData^0,c
 23158                           
 23159                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 23160  008D3C  5003               	movf	putch@txData^0,w,c
 23161  008D3E  ECAF  F03F         	call	_UART1_Write
 23162                           
 23163                           ; BSR set to: 57
 23164  008D42  0012               	return		;funcret
 23165  008D44                     __end_of_putch:
 23166                           	opt callstack 0
 23167                           
 23168 ;; *************** function _UART1_Write *****************
 23169 ;; Defined at:
 23170 ;;		line 210 in file "mcc_generated_files/uart1.c"
 23171 ;; Parameters:    Size  Location     Type
 23172 ;;  txData          1    wreg     unsigned char 
 23173 ;; Auto vars:     Size  Location     Type
 23174 ;;  txData          1    1[COMRAM] unsigned char 
 23175 ;; Return value:  Size  Location     Type
 23176 ;;                  1    wreg      void 
 23177 ;; Registers used:
 23178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23179 ;; Tracked objects:
 23180 ;;		On entry : 0/0
 23181 ;;		On exit  : 3F/39
 23182 ;;		Unchanged: 0/0
 23183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23188 ;;Total ram usage:        1 bytes
 23189 ;; Hardware stack levels used:    1
 23190 ;; Hardware stack levels required when called:    7
 23191 ;; This function calls:
 23192 ;;		Nothing
 23193 ;; This function is called by:
 23194 ;;		_putch
 23195 ;; This function uses a non-reentrant model
 23196 ;;
 23197                           
 23198                           	psect	text141
 23199  007F5E                     __ptext141:
 23200                           	opt callstack 0
 23201  007F5E                     _UART1_Write:
 23202                           	opt callstack 12
 23203                           
 23204                           ; BSR set to: 57
 23205                           ;incstack = 0
 23206                           ;UART1_Write@txData stored from wreg
 23207  007F5E  6E02               	movwf	UART1_Write@txData^0,c
 23208  007F60                     
 23209                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 23210                           
 23211                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 23212  007F60  0101               	movlb	1	; () banked
 23213  007F62  51ED               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 23214  007F64  B4D8               	btfsc	status,2,c
 23215  007F66  D7FC               	goto	l13827
 23216                           
 23217                           ; BSR set to: 1
 23218                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 23219  007F68  0139               	movlb	57	; () banked
 23220  007F6A  B993               	btfsc	147,4,b	;volatile
 23221  007F6C  D004               	goto	l1395
 23222                           
 23223                           ; BSR set to: 57
 23224                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 23225  007F6E  0060  F00B  FDEA   	movff	UART1_Write@txData,15850	;volatile
 23226                           
 23227                           ;mcc_generated_files/uart1.c: 223:     }
 23228  007F74  D013               	goto	l13843
 23229  007F76                     l1395:
 23230                           
 23231                           ; BSR set to: 57
 23232                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 23233  007F76  9993               	bcf	147,4,b	;volatile
 23234                           
 23235                           ; BSR set to: 57
 23236                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 23237  007F78  0E00               	movlw	low _uart1TxBuffer
 23238  007F7A  0100               	movlb	0	; () banked
 23239  007F7C  25E9               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 23240  007F7E  6ED9               	movwf	fsr2l,c
 23241  007F80  6ADA               	clrf	fsr2h,c
 23242  007F82  0E03               	movlw	high _uart1TxBuffer
 23243  007F84  22DA               	addwfc	fsr2h,f,c
 23244  007F86  0060  F00B  FFDF   	movff	UART1_Write@txData,indf2
 23245                           
 23246                           ; BSR set to: 0
 23247  007F8C  2BE9               	incf	_uart1TxHead& (0+255),f,b	;volatile
 23248                           
 23249                           ; BSR set to: 0
 23250                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 23251  007F8E  0E3F               	movlw	63
 23252  007F90  65E9               	cpfsgt	_uart1TxHead& (0+255),b
 23253  007F92  D002               	goto	l13841
 23254                           
 23255                           ; BSR set to: 0
 23256                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 23257  007F94  0E00               	movlw	0
 23258  007F96  6FE9               	movwf	_uart1TxHead& (0+255),b	;volatile
 23259  007F98                     l13841:
 23260                           
 23261                           ; BSR set to: 0
 23262                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 23263  007F98  0101               	movlb	1	; () banked
 23264  007F9A  07ED               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 23265  007F9C                     l13843:
 23266                           
 23267                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 23268  007F9C  0139               	movlb	57	; () banked
 23269  007F9E  8993               	bsf	147,4,b	;volatile
 23270                           
 23271                           ; BSR set to: 57
 23272  007FA0  0012               	return		;funcret
 23273  007FA2                     __end_of_UART1_Write:
 23274                           	opt callstack 0
 23275                           
 23276 ;; *************** function _abs *****************
 23277 ;; Defined at:
 23278 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 23279 ;; Parameters:    Size  Location     Type
 23280 ;;  a               2   19[COMRAM] int 
 23281 ;; Auto vars:     Size  Location     Type
 23282 ;;		None
 23283 ;; Return value:  Size  Location     Type
 23284 ;;                  2   19[COMRAM] int 
 23285 ;; Registers used:
 23286 ;;		wreg, status,2, status,0
 23287 ;; Tracked objects:
 23288 ;;		On entry : 0/1
 23289 ;;		On exit  : 0/0
 23290 ;;		Unchanged: 0/0
 23291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23295 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23296 ;;Total ram usage:        4 bytes
 23297 ;; Hardware stack levels used:    1
 23298 ;; Hardware stack levels required when called:    7
 23299 ;; This function calls:
 23300 ;;		Nothing
 23301 ;; This function is called by:
 23302 ;;		_dtoa
 23303 ;; This function uses a non-reentrant model
 23304 ;;
 23305                           
 23306                           	psect	text142
 23307  0081A2                     __ptext142:
 23308                           	opt callstack 0
 23309  0081A2                     _abs:
 23310                           	opt callstack 16
 23311                           
 23312                           ; BSR set to: 57
 23313                           ;incstack = 0
 23314  0081A2  BE15               	btfsc	(abs@a+1)^0,7,c
 23315  0081A4  D005               	goto	u12930
 23316  0081A6  5015               	movf	(abs@a+1)^0,w,c
 23317  0081A8  E114               	bnz	l3871
 23318  0081AA  0414               	decf	abs@a^0,w,c
 23319  0081AC  B0D8               	btfsc	status,0,c
 23320  0081AE  D011               	goto	l3871
 23321  0081B0                     u12930:
 23322  0081B0  0060  F050  F016   	movff	abs@a,??_abs
 23323  0081B6  0060  F054  F017   	movff	abs@a+1,??_abs+1
 23324  0081BC  1E16               	comf	??_abs^0,f,c
 23325  0081BE  1E17               	comf	(??_abs+1)^0,f,c
 23326  0081C0  4A16               	infsnz	??_abs^0,f,c
 23327  0081C2  2A17               	incf	(??_abs+1)^0,f,c
 23328  0081C4  0060  F058  F014   	movff	??_abs,?_abs
 23329  0081CA  0060  F05C  F015   	movff	??_abs+1,?_abs+1
 23330  0081D0  0012               	return	
 23331  0081D2                     l3871:
 23332  0081D2  0060  F050  F014   	movff	abs@a,?_abs
 23333  0081D8  0060  F054  F015   	movff	abs@a+1,?_abs+1
 23334  0081DE  0012               	return		;funcret
 23335  0081E0                     __end_of_abs:
 23336                           	opt callstack 0
 23337                           
 23338 ;; *************** function ___aomod *****************
 23339 ;; Defined at:
 23340 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 23341 ;; Parameters:    Size  Location     Type
 23342 ;;  dividend        8    1[COMRAM] long long 
 23343 ;;  divisor         8    9[COMRAM] long long 
 23344 ;; Auto vars:     Size  Location     Type
 23345 ;;  sign            1   18[COMRAM] unsigned char 
 23346 ;;  counter         1   17[COMRAM] unsigned char 
 23347 ;; Return value:  Size  Location     Type
 23348 ;;                  8    1[COMRAM] long long 
 23349 ;; Registers used:
 23350 ;;		wreg, status,2, status,0
 23351 ;; Tracked objects:
 23352 ;;		On entry : 0/1
 23353 ;;		On exit  : 0/0
 23354 ;;		Unchanged: 0/0
 23355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23356 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23359 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23360 ;;Total ram usage:       18 bytes
 23361 ;; Hardware stack levels used:    1
 23362 ;; Hardware stack levels required when called:    7
 23363 ;; This function calls:
 23364 ;;		Nothing
 23365 ;; This function is called by:
 23366 ;;		_dtoa
 23367 ;; This function uses a non-reentrant model
 23368 ;;
 23369                           
 23370                           	psect	text143
 23371  004842                     __ptext143:
 23372                           	opt callstack 0
 23373  004842                     ___aomod:
 23374                           	opt callstack 16
 23375                           
 23376                           ;incstack = 0
 23377  004842  0E00               	movlw	0
 23378  004844  6E13               	movwf	___aomod@sign^0,c
 23379  004846  AE09               	btfss	(___aomod@dividend+7)^0,7,c
 23380  004848  D012               	goto	l13989
 23381  00484A  1E09               	comf	(___aomod@dividend+7)^0,f,c
 23382  00484C  1E08               	comf	(___aomod@dividend+6)^0,f,c
 23383  00484E  1E07               	comf	(___aomod@dividend+5)^0,f,c
 23384  004850  1E06               	comf	(___aomod@dividend+4)^0,f,c
 23385  004852  1E05               	comf	(___aomod@dividend+3)^0,f,c
 23386  004854  1E04               	comf	(___aomod@dividend+2)^0,f,c
 23387  004856  1E03               	comf	(___aomod@dividend+1)^0,f,c
 23388  004858  6C02               	negf	___aomod@dividend^0,c
 23389  00485A  0E00               	movlw	0
 23390  00485C  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 23391  00485E  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 23392  004860  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 23393  004862  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 23394  004864  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 23395  004866  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 23396  004868  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 23397  00486A  0E01               	movlw	1
 23398  00486C  6E13               	movwf	___aomod@sign^0,c
 23399  00486E                     l13989:
 23400  00486E  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 23401  004870  D010               	goto	l13993
 23402  004872  1E11               	comf	(___aomod@divisor+7)^0,f,c
 23403  004874  1E10               	comf	(___aomod@divisor+6)^0,f,c
 23404  004876  1E0F               	comf	(___aomod@divisor+5)^0,f,c
 23405  004878  1E0E               	comf	(___aomod@divisor+4)^0,f,c
 23406  00487A  1E0D               	comf	(___aomod@divisor+3)^0,f,c
 23407  00487C  1E0C               	comf	(___aomod@divisor+2)^0,f,c
 23408  00487E  1E0B               	comf	(___aomod@divisor+1)^0,f,c
 23409  004880  6C0A               	negf	___aomod@divisor^0,c
 23410  004882  0E00               	movlw	0
 23411  004884  220B               	addwfc	(___aomod@divisor+1)^0,f,c
 23412  004886  220C               	addwfc	(___aomod@divisor+2)^0,f,c
 23413  004888  220D               	addwfc	(___aomod@divisor+3)^0,f,c
 23414  00488A  220E               	addwfc	(___aomod@divisor+4)^0,f,c
 23415  00488C  220F               	addwfc	(___aomod@divisor+5)^0,f,c
 23416  00488E  2210               	addwfc	(___aomod@divisor+6)^0,f,c
 23417  004890  2211               	addwfc	(___aomod@divisor+7)^0,f,c
 23418  004892                     l13993:
 23419  004892  500A               	movf	___aomod@divisor^0,w,c
 23420  004894  100B               	iorwf	(___aomod@divisor+1)^0,w,c
 23421  004896  100C               	iorwf	(___aomod@divisor+2)^0,w,c
 23422  004898  100D               	iorwf	(___aomod@divisor+3)^0,w,c
 23423  00489A  100E               	iorwf	(___aomod@divisor+4)^0,w,c
 23424  00489C  100F               	iorwf	(___aomod@divisor+5)^0,w,c
 23425  00489E  1010               	iorwf	(___aomod@divisor+6)^0,w,c
 23426  0048A0  1011               	iorwf	(___aomod@divisor+7)^0,w,c
 23427  0048A2  B4D8               	btfsc	status,2,c
 23428  0048A4  D03C               	goto	l14009
 23429  0048A6  0E01               	movlw	1
 23430  0048A8  6E12               	movwf	___aomod@counter^0,c
 23431  0048AA  D00A               	goto	l13999
 23432  0048AC                     l13997:
 23433  0048AC  90D8               	bcf	status,0,c
 23434  0048AE  360A               	rlcf	___aomod@divisor^0,f,c
 23435  0048B0  360B               	rlcf	(___aomod@divisor+1)^0,f,c
 23436  0048B2  360C               	rlcf	(___aomod@divisor+2)^0,f,c
 23437  0048B4  360D               	rlcf	(___aomod@divisor+3)^0,f,c
 23438  0048B6  360E               	rlcf	(___aomod@divisor+4)^0,f,c
 23439  0048B8  360F               	rlcf	(___aomod@divisor+5)^0,f,c
 23440  0048BA  3610               	rlcf	(___aomod@divisor+6)^0,f,c
 23441  0048BC  3611               	rlcf	(___aomod@divisor+7)^0,f,c
 23442  0048BE  2A12               	incf	___aomod@counter^0,f,c
 23443  0048C0                     l13999:
 23444  0048C0  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 23445  0048C2  D7F4               	goto	l13997
 23446  0048C4                     u13130:
 23447  0048C4  500A               	movf	___aomod@divisor^0,w,c
 23448  0048C6  5C02               	subwf	___aomod@dividend^0,w,c
 23449  0048C8  500B               	movf	(___aomod@divisor+1)^0,w,c
 23450  0048CA  5803               	subwfb	(___aomod@dividend+1)^0,w,c
 23451  0048CC  500C               	movf	(___aomod@divisor+2)^0,w,c
 23452  0048CE  5804               	subwfb	(___aomod@dividend+2)^0,w,c
 23453  0048D0  500D               	movf	(___aomod@divisor+3)^0,w,c
 23454  0048D2  5805               	subwfb	(___aomod@dividend+3)^0,w,c
 23455  0048D4  500E               	movf	(___aomod@divisor+4)^0,w,c
 23456  0048D6  5806               	subwfb	(___aomod@dividend+4)^0,w,c
 23457  0048D8  500F               	movf	(___aomod@divisor+5)^0,w,c
 23458  0048DA  5807               	subwfb	(___aomod@dividend+5)^0,w,c
 23459  0048DC  5010               	movf	(___aomod@divisor+6)^0,w,c
 23460  0048DE  5808               	subwfb	(___aomod@dividend+6)^0,w,c
 23461  0048E0  5011               	movf	(___aomod@divisor+7)^0,w,c
 23462  0048E2  5809               	subwfb	(___aomod@dividend+7)^0,w,c
 23463  0048E4  A0D8               	btfss	status,0,c
 23464  0048E6  D010               	goto	l14005
 23465  0048E8  500A               	movf	___aomod@divisor^0,w,c
 23466  0048EA  5E02               	subwf	___aomod@dividend^0,f,c
 23467  0048EC  500B               	movf	(___aomod@divisor+1)^0,w,c
 23468  0048EE  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
 23469  0048F0  500C               	movf	(___aomod@divisor+2)^0,w,c
 23470  0048F2  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
 23471  0048F4  500D               	movf	(___aomod@divisor+3)^0,w,c
 23472  0048F6  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
 23473  0048F8  500E               	movf	(___aomod@divisor+4)^0,w,c
 23474  0048FA  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
 23475  0048FC  500F               	movf	(___aomod@divisor+5)^0,w,c
 23476  0048FE  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
 23477  004900  5010               	movf	(___aomod@divisor+6)^0,w,c
 23478  004902  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
 23479  004904  5011               	movf	(___aomod@divisor+7)^0,w,c
 23480  004906  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
 23481  004908                     l14005:
 23482  004908  90D8               	bcf	status,0,c
 23483  00490A  3211               	rrcf	(___aomod@divisor+7)^0,f,c
 23484  00490C  3210               	rrcf	(___aomod@divisor+6)^0,f,c
 23485  00490E  320F               	rrcf	(___aomod@divisor+5)^0,f,c
 23486  004910  320E               	rrcf	(___aomod@divisor+4)^0,f,c
 23487  004912  320D               	rrcf	(___aomod@divisor+3)^0,f,c
 23488  004914  320C               	rrcf	(___aomod@divisor+2)^0,f,c
 23489  004916  320B               	rrcf	(___aomod@divisor+1)^0,f,c
 23490  004918  320A               	rrcf	___aomod@divisor^0,f,c
 23491  00491A  2E12               	decfsz	___aomod@counter^0,f,c
 23492  00491C  D7D3               	goto	u13130
 23493  00491E                     l14009:
 23494  00491E  5013               	movf	___aomod@sign^0,w,c
 23495  004920  B4D8               	btfsc	status,2,c
 23496  004922  D010               	goto	l14013
 23497  004924  1E09               	comf	(___aomod@dividend+7)^0,f,c
 23498  004926  1E08               	comf	(___aomod@dividend+6)^0,f,c
 23499  004928  1E07               	comf	(___aomod@dividend+5)^0,f,c
 23500  00492A  1E06               	comf	(___aomod@dividend+4)^0,f,c
 23501  00492C  1E05               	comf	(___aomod@dividend+3)^0,f,c
 23502  00492E  1E04               	comf	(___aomod@dividend+2)^0,f,c
 23503  004930  1E03               	comf	(___aomod@dividend+1)^0,f,c
 23504  004932  6C02               	negf	___aomod@dividend^0,c
 23505  004934  0E00               	movlw	0
 23506  004936  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 23507  004938  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 23508  00493A  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 23509  00493C  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 23510  00493E  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 23511  004940  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 23512  004942  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 23513  004944                     l14013:
 23514  004944  0060  F008  F002   	movff	___aomod@dividend,?___aomod
 23515  00494A  0060  F00C  F003   	movff	___aomod@dividend+1,?___aomod+1
 23516  004950  0060  F010  F004   	movff	___aomod@dividend+2,?___aomod+2
 23517  004956  0060  F014  F005   	movff	___aomod@dividend+3,?___aomod+3
 23518  00495C  0060  F018  F006   	movff	___aomod@dividend+4,?___aomod+4
 23519  004962  0060  F01C  F007   	movff	___aomod@dividend+5,?___aomod+5
 23520  004968  0060  F020  F008   	movff	___aomod@dividend+6,?___aomod+6
 23521  00496E  0060  F024  F009   	movff	___aomod@dividend+7,?___aomod+7
 23522  004974  0012               	return		;funcret
 23523  004976                     __end_of___aomod:
 23524                           	opt callstack 0
 23525                           
 23526 ;; *************** function ___aodiv *****************
 23527 ;; Defined at:
 23528 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 23529 ;; Parameters:    Size  Location     Type
 23530 ;;  dividend        8    1[COMRAM] long long 
 23531 ;;  divisor         8    9[COMRAM] long long 
 23532 ;; Auto vars:     Size  Location     Type
 23533 ;;  quotient        8   19[COMRAM] long long 
 23534 ;;  sign            1   18[COMRAM] unsigned char 
 23535 ;;  counter         1   17[COMRAM] unsigned char 
 23536 ;; Return value:  Size  Location     Type
 23537 ;;                  8    1[COMRAM] long long 
 23538 ;; Registers used:
 23539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23540 ;; Tracked objects:
 23541 ;;		On entry : 0/1
 23542 ;;		On exit  : 0/0
 23543 ;;		Unchanged: 0/0
 23544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23545 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23546 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23548 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23549 ;;Total ram usage:       26 bytes
 23550 ;; Hardware stack levels used:    1
 23551 ;; Hardware stack levels required when called:    7
 23552 ;; This function calls:
 23553 ;;		Nothing
 23554 ;; This function is called by:
 23555 ;;		_dtoa
 23556 ;; This function uses a non-reentrant model
 23557 ;;
 23558                           
 23559                           	psect	text144
 23560  00430C                     __ptext144:
 23561                           	opt callstack 0
 23562  00430C                     ___aodiv:
 23563                           	opt callstack 16
 23564                           
 23565                           ;incstack = 0
 23566  00430C  0E00               	movlw	0
 23567  00430E  6E13               	movwf	___aodiv@sign^0,c
 23568  004310  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 23569  004312  D012               	goto	l13945
 23570  004314  1E11               	comf	(___aodiv@divisor+7)^0,f,c
 23571  004316  1E10               	comf	(___aodiv@divisor+6)^0,f,c
 23572  004318  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
 23573  00431A  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
 23574  00431C  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
 23575  00431E  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
 23576  004320  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
 23577  004322  6C0A               	negf	___aodiv@divisor^0,c
 23578  004324  0E00               	movlw	0
 23579  004326  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
 23580  004328  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
 23581  00432A  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
 23582  00432C  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
 23583  00432E  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
 23584  004330  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
 23585  004332  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
 23586  004334  0E01               	movlw	1
 23587  004336  6E13               	movwf	___aodiv@sign^0,c
 23588  004338                     l13945:
 23589  004338  AE09               	btfss	(___aodiv@dividend+7)^0,7,c
 23590  00433A  D012               	goto	l13951
 23591  00433C  1E09               	comf	(___aodiv@dividend+7)^0,f,c
 23592  00433E  1E08               	comf	(___aodiv@dividend+6)^0,f,c
 23593  004340  1E07               	comf	(___aodiv@dividend+5)^0,f,c
 23594  004342  1E06               	comf	(___aodiv@dividend+4)^0,f,c
 23595  004344  1E05               	comf	(___aodiv@dividend+3)^0,f,c
 23596  004346  1E04               	comf	(___aodiv@dividend+2)^0,f,c
 23597  004348  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 23598  00434A  6C02               	negf	___aodiv@dividend^0,c
 23599  00434C  0E00               	movlw	0
 23600  00434E  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 23601  004350  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 23602  004352  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 23603  004354  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 23604  004356  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 23605  004358  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 23606  00435A  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 23607  00435C  0E01               	movlw	1
 23608  00435E  1A13               	xorwf	___aodiv@sign^0,f,c
 23609  004360                     l13951:
 23610  004360  EE20  F014         	lfsr	2,___aodiv@quotient
 23611  004364  0E07               	movlw	7
 23612  004366                     u13051:
 23613  004366  6ADE               	clrf	postinc2,c
 23614  004368  06E8               	decf	wreg,f,c
 23615  00436A  E2FD               	bc	u13051
 23616  00436C  500A               	movf	___aodiv@divisor^0,w,c
 23617  00436E  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 23618  004370  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 23619  004372  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 23620  004374  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 23621  004376  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 23622  004378  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 23623  00437A  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 23624  00437C  B4D8               	btfsc	status,2,c
 23625  00437E  D046               	goto	l13973
 23626  004380  0E01               	movlw	1
 23627  004382  6E12               	movwf	___aodiv@counter^0,c
 23628  004384  D00A               	goto	l13959
 23629  004386                     l13957:
 23630  004386  90D8               	bcf	status,0,c
 23631  004388  360A               	rlcf	___aodiv@divisor^0,f,c
 23632  00438A  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 23633  00438C  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 23634  00438E  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 23635  004390  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 23636  004392  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 23637  004394  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 23638  004396  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 23639  004398  2A12               	incf	___aodiv@counter^0,f,c
 23640  00439A                     l13959:
 23641  00439A  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 23642  00439C  D7F4               	goto	l13957
 23643  00439E                     u13070:
 23644  00439E  90D8               	bcf	status,0,c
 23645  0043A0  3614               	rlcf	___aodiv@quotient^0,f,c
 23646  0043A2  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 23647  0043A4  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 23648  0043A6  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 23649  0043A8  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 23650  0043AA  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 23651  0043AC  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 23652  0043AE  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 23653  0043B0  500A               	movf	___aodiv@divisor^0,w,c
 23654  0043B2  5C02               	subwf	___aodiv@dividend^0,w,c
 23655  0043B4  500B               	movf	(___aodiv@divisor+1)^0,w,c
 23656  0043B6  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 23657  0043B8  500C               	movf	(___aodiv@divisor+2)^0,w,c
 23658  0043BA  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 23659  0043BC  500D               	movf	(___aodiv@divisor+3)^0,w,c
 23660  0043BE  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 23661  0043C0  500E               	movf	(___aodiv@divisor+4)^0,w,c
 23662  0043C2  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 23663  0043C4  500F               	movf	(___aodiv@divisor+5)^0,w,c
 23664  0043C6  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 23665  0043C8  5010               	movf	(___aodiv@divisor+6)^0,w,c
 23666  0043CA  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 23667  0043CC  5011               	movf	(___aodiv@divisor+7)^0,w,c
 23668  0043CE  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 23669  0043D0  A0D8               	btfss	status,0,c
 23670  0043D2  D011               	goto	l13969
 23671  0043D4  500A               	movf	___aodiv@divisor^0,w,c
 23672  0043D6  5E02               	subwf	___aodiv@dividend^0,f,c
 23673  0043D8  500B               	movf	(___aodiv@divisor+1)^0,w,c
 23674  0043DA  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 23675  0043DC  500C               	movf	(___aodiv@divisor+2)^0,w,c
 23676  0043DE  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 23677  0043E0  500D               	movf	(___aodiv@divisor+3)^0,w,c
 23678  0043E2  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 23679  0043E4  500E               	movf	(___aodiv@divisor+4)^0,w,c
 23680  0043E6  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 23681  0043E8  500F               	movf	(___aodiv@divisor+5)^0,w,c
 23682  0043EA  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 23683  0043EC  5010               	movf	(___aodiv@divisor+6)^0,w,c
 23684  0043EE  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 23685  0043F0  5011               	movf	(___aodiv@divisor+7)^0,w,c
 23686  0043F2  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 23687  0043F4  8014               	bsf	___aodiv@quotient^0,0,c
 23688  0043F6                     l13969:
 23689  0043F6  90D8               	bcf	status,0,c
 23690  0043F8  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 23691  0043FA  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 23692  0043FC  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 23693  0043FE  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 23694  004400  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 23695  004402  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 23696  004404  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 23697  004406  320A               	rrcf	___aodiv@divisor^0,f,c
 23698  004408  2E12               	decfsz	___aodiv@counter^0,f,c
 23699  00440A  D7C9               	goto	u13070
 23700  00440C                     l13973:
 23701  00440C  5013               	movf	___aodiv@sign^0,w,c
 23702  00440E  B4D8               	btfsc	status,2,c
 23703  004410  D010               	goto	l13977
 23704  004412  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 23705  004414  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 23706  004416  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 23707  004418  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 23708  00441A  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 23709  00441C  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 23710  00441E  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 23711  004420  6C14               	negf	___aodiv@quotient^0,c
 23712  004422  0E00               	movlw	0
 23713  004424  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 23714  004426  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 23715  004428  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 23716  00442A  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 23717  00442C  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 23718  00442E  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 23719  004430  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 23720  004432                     l13977:
 23721  004432  0060  F050  F002   	movff	___aodiv@quotient,?___aodiv
 23722  004438  0060  F054  F003   	movff	___aodiv@quotient+1,?___aodiv+1
 23723  00443E  0060  F058  F004   	movff	___aodiv@quotient+2,?___aodiv+2
 23724  004444  0060  F05C  F005   	movff	___aodiv@quotient+3,?___aodiv+3
 23725  00444A  0060  F060  F006   	movff	___aodiv@quotient+4,?___aodiv+4
 23726  004450  0060  F064  F007   	movff	___aodiv@quotient+5,?___aodiv+5
 23727  004456  0060  F068  F008   	movff	___aodiv@quotient+6,?___aodiv+6
 23728  00445C  0060  F06C  F009   	movff	___aodiv@quotient+7,?___aodiv+7
 23729  004462  0012               	return		;funcret
 23730  004464                     __end_of___aodiv:
 23731                           	opt callstack 0
 23732                           
 23733 ;; *************** function _atoi *****************
 23734 ;; Defined at:
 23735 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 23736 ;; Parameters:    Size  Location     Type
 23737 ;;  s               2    8[COMRAM] PTR const unsigned char 
 23738 ;;		 -> STR_135(5), STR_134(8), STR_133(28), STR_132(26), 
 23739 ;;		 -> STR_131(12), STR_130(12), STR_61(5), STR_60(12), 
 23740 ;;		 -> STR_59(5), STR_58(12), STR_56(8), STR_53(5), 
 23741 ;;		 -> STR_52(12), STR_45(5), STR_44(12), STR_42(13), 
 23742 ;;		 -> STR_41(5), STR_40(12), STR_39(12), STR_37(14), 
 23743 ;;		 -> STR_36(5), STR_35(12), STR_33(13), STR_32(18), 
 23744 ;;		 -> STR_31(18), STR_30(5), STR_29(21), STR_28(5), 
 23745 ;;		 -> STR_27(12), STR_26(12), STR_24(12), STR_23(12), 
 23746 ;;		 -> STR_21(5), STR_20(3), STR_19(5), STR_18(5), 
 23747 ;;		 -> STR_17(5), STR_15(13), STR_14(12), STR_13(5), 
 23748 ;;		 -> STR_11(16), STR_10(8), STR_9(12), STR_8(12), 
 23749 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_1(13), 
 23750 ;; Auto vars:     Size  Location     Type
 23751 ;;  n               2   21[COMRAM] int 
 23752 ;;  neg             2   14[COMRAM] int 
 23753 ;; Return value:  Size  Location     Type
 23754 ;;                  2    8[COMRAM] int 
 23755 ;; Registers used:
 23756 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23757 ;; Tracked objects:
 23758 ;;		On entry : 3F/0
 23759 ;;		On exit  : 0/0
 23760 ;;		Unchanged: 0/0
 23761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23763 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23765 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23766 ;;Total ram usage:       15 bytes
 23767 ;; Hardware stack levels used:    1
 23768 ;; Hardware stack levels required when called:    8
 23769 ;; This function calls:
 23770 ;;		___wmul
 23771 ;;		_isdigit
 23772 ;;		_isspace
 23773 ;; This function is called by:
 23774 ;;		_vfpfcnvrt
 23775 ;; This function uses a non-reentrant model
 23776 ;;
 23777                           
 23778                           	psect	text145
 23779  003EDA                     __ptext145:
 23780                           	opt callstack 0
 23781  003EDA                     _atoi:
 23782                           	opt callstack 16
 23783                           
 23784                           ; BSR set to: 0
 23785                           
 23786                           ;incstack = 0
 23787  003EDA  0E00               	movlw	0
 23788  003EDC  6E17               	movwf	(atoi@n+1)^0,c
 23789  003EDE  0E00               	movlw	0
 23790  003EE0  6E16               	movwf	atoi@n^0,c
 23791  003EE2  0E00               	movlw	0
 23792  003EE4  6E10               	movwf	(atoi@neg+1)^0,c
 23793  003EE6  0E00               	movlw	0
 23794  003EE8  6E0F               	movwf	atoi@neg^0,c
 23795  003EEA  D002               	goto	l14277
 23796  003EEC                     l14275:
 23797                           
 23798                           ; BSR set to: 0
 23799  003EEC  4A09               	infsnz	atoi@s^0,f,c
 23800  003EEE  2A0A               	incf	(atoi@s+1)^0,f,c
 23801  003EF0                     l14277:
 23802                           
 23803                           ; BSR set to: 0
 23804  003EF0  0E01               	movlw	1
 23805  003EF2  6E15               	movwf	_atoi$7703^0,c
 23806                           
 23807                           ; BSR set to: 0
 23808  003EF4  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23809  003EFA  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23810  003F00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23811  003F00  6AF8               	clrf	tblptru,c
 23812  003F02                     	endif
 23813  003F02                     	if	0	;tblptru may be non-zero
 23814  003F02                     	endif
 23815  003F02  0008               	tblrd		*
 23816  003F04  50F5               	movf	tablat,w,c
 23817  003F06  0A20               	xorlw	32
 23818  003F08  B4D8               	btfsc	status,2,c
 23819  003F0A  D01B               	goto	l14285
 23820                           
 23821                           ; BSR set to: 0
 23822  003F0C  0EF7               	movlw	247
 23823  003F0E  6E0B               	movwf	??_atoi^0,c
 23824  003F10  0EFF               	movlw	255
 23825  003F12  6E0C               	movwf	(??_atoi+1)^0,c
 23826  003F14  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23827  003F1A  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23828  003F20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23829  003F20  6AF8               	clrf	tblptru,c
 23830  003F22                     	endif
 23831  003F22                     	if	0	;tblptru may be non-zero
 23832  003F22                     	endif
 23833  003F22  0008               	tblrd		*
 23834  003F24  50F5               	movf	tablat,w,c
 23835  003F26  6E0D               	movwf	(??_atoi+2)^0,c
 23836  003F28  6A0E               	clrf	(??_atoi+3)^0,c
 23837  003F2A  500B               	movf	??_atoi^0,w,c
 23838  003F2C  260D               	addwf	(??_atoi+2)^0,f,c
 23839  003F2E  500C               	movf	(??_atoi+1)^0,w,c
 23840  003F30  220E               	addwfc	(??_atoi+3)^0,f,c
 23841  003F32  500E               	movf	(??_atoi+3)^0,w,c
 23842  003F34  E104               	bnz	u13740
 23843  003F36  0E05               	movlw	5
 23844  003F38  5C0D               	subwf	(??_atoi+2)^0,w,c
 23845  003F3A  A0D8               	btfss	status,0,c
 23846  003F3C  D002               	goto	l14285
 23847  003F3E                     u13740:
 23848                           
 23849                           ; BSR set to: 0
 23850  003F3E  0E00               	movlw	0
 23851  003F40  6E15               	movwf	_atoi$7703^0,c
 23852  003F42                     l14285:
 23853                           
 23854                           ; BSR set to: 0
 23855  003F42  0060  F054  F011   	movff	_atoi$7703,_atoi$7702
 23856  003F48  6A12               	clrf	(_atoi$7702+1)^0,c
 23857                           
 23858                           ; BSR set to: 0
 23859  003F4A  5011               	movf	_atoi$7702^0,w,c
 23860  003F4C  1012               	iorwf	(_atoi$7702+1)^0,w,c
 23861  003F4E  B4D8               	btfsc	status,2,c
 23862  003F50  D008               	goto	l14295
 23863  003F52  D7CC               	goto	l14275
 23864  003F54                     l14291:
 23865                           
 23866                           ; BSR set to: 0
 23867  003F54  0E00               	movlw	0
 23868  003F56  6E10               	movwf	(atoi@neg+1)^0,c
 23869  003F58  0E01               	movlw	1
 23870  003F5A  6E0F               	movwf	atoi@neg^0,c
 23871  003F5C                     l14293:
 23872  003F5C  4A09               	infsnz	atoi@s^0,f,c
 23873  003F5E  2A0A               	incf	(atoi@s+1)^0,f,c
 23874  003F60  D036               	goto	l14301
 23875  003F62                     l14295:
 23876                           
 23877                           ; BSR set to: 0
 23878  003F62  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23879  003F68  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23880  003F6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23881  003F6E  6AF8               	clrf	tblptru,c
 23882  003F70                     	endif
 23883  003F70                     	if	0	;tblptru may be non-zero
 23884  003F70                     	endif
 23885  003F70  0008               	tblrd		*
 23886  003F72  50F5               	movf	tablat,w,c
 23887  003F74  6E0B               	movwf	??_atoi^0,c
 23888  003F76  6A0C               	clrf	(??_atoi+1)^0,c
 23889                           
 23890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23891                           ; Switch size 1, requested type "simple"
 23892                           ; Number of cases is 1, Range of values is 0 to 0
 23893                           ; switch strategies available:
 23894                           ; Name         Instructions Cycles
 23895                           ; simple_byte            4     3 (average)
 23896                           ;	Chosen strategy is simple_byte
 23897  003F78  500C               	movf	(??_atoi+1)^0,w,c
 23898  003F7A  0A00               	xorlw	0	; case 0
 23899  003F7C  A4D8               	btfss	status,2,c
 23900  003F7E  D027               	goto	l14301
 23901                           
 23902                           ; BSR set to: 0
 23903                           ; Switch size 1, requested type "simple"
 23904                           ; Number of cases is 2, Range of values is 43 to 45
 23905                           ; switch strategies available:
 23906                           ; Name         Instructions Cycles
 23907                           ; simple_byte            7     4 (average)
 23908                           ;	Chosen strategy is simple_byte
 23909  003F80  500B               	movf	??_atoi^0,w,c
 23910  003F82  0A2B               	xorlw	43	; case 43
 23911  003F84  B4D8               	btfsc	status,2,c
 23912  003F86  D7EA               	goto	l14293
 23913  003F88  0A06               	xorlw	6	; case 45
 23914  003F8A  B4D8               	btfsc	status,2,c
 23915  003F8C  D7E3               	goto	l14291
 23916  003F8E  D01F               	goto	l14301
 23917  003F90                     l14297:
 23918  003F90  0060  F058  F002   	movff	atoi@n,___wmul@multiplier
 23919  003F96  0060  F05C  F003   	movff	atoi@n+1,___wmul@multiplier+1
 23920  003F9C  0E00               	movlw	0
 23921  003F9E  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 23922  003FA0  0E0A               	movlw	10
 23923  003FA2  6E04               	movwf	___wmul@multiplicand^0,c
 23924  003FA4  EC3C  F043         	call	___wmul	;wreg free
 23925  003FA8  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23926  003FAE  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23927  003FB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23928  003FB4  6AF8               	clrf	tblptru,c
 23929  003FB6                     	endif
 23930  003FB6                     	if	0	;tblptru may be non-zero
 23931  003FB6                     	endif
 23932  003FB6  0008               	tblrd		*
 23933  003FB8  50F5               	movf	tablat,w,c
 23934  003FBA  5E02               	subwf	?___wmul^0,f,c
 23935  003FBC  0E00               	movlw	0
 23936  003FBE  5A03               	subwfb	(?___wmul+1)^0,f,c
 23937  003FC0  0E30               	movlw	48
 23938  003FC2  2402               	addwf	?___wmul^0,w,c
 23939  003FC4  6E16               	movwf	atoi@n^0,c
 23940  003FC6  0E00               	movlw	0
 23941  003FC8  2003               	addwfc	(?___wmul+1)^0,w,c
 23942  003FCA  6E17               	movwf	(atoi@n+1)^0,c
 23943  003FCC  D7C7               	goto	l14293
 23944  003FCE                     l14301:
 23945  003FCE  0ED0               	movlw	208
 23946  003FD0  6E0B               	movwf	??_atoi^0,c
 23947  003FD2  0EFF               	movlw	255
 23948  003FD4  6E0C               	movwf	(??_atoi+1)^0,c
 23949  003FD6  0060  F027  FFF6   	movff	atoi@s,tblptrl
 23950  003FDC  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 23951  003FE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23952  003FE2  6AF8               	clrf	tblptru,c
 23953  003FE4                     	endif
 23954  003FE4                     	if	0	;tblptru may be non-zero
 23955  003FE4                     	endif
 23956  003FE4  0008               	tblrd		*
 23957  003FE6  50F5               	movf	tablat,w,c
 23958  003FE8  6E0D               	movwf	(??_atoi+2)^0,c
 23959  003FEA  6A0E               	clrf	(??_atoi+3)^0,c
 23960  003FEC  500B               	movf	??_atoi^0,w,c
 23961  003FEE  260D               	addwf	(??_atoi+2)^0,f,c
 23962  003FF0  500C               	movf	(??_atoi+1)^0,w,c
 23963  003FF2  220E               	addwfc	(??_atoi+3)^0,f,c
 23964  003FF4  500E               	movf	(??_atoi+3)^0,w,c
 23965  003FF6  E106               	bnz	u13760
 23966  003FF8  0E0A               	movlw	10
 23967  003FFA  5C0D               	subwf	(??_atoi+2)^0,w,c
 23968  003FFC  B0D8               	btfsc	status,0,c
 23969  003FFE  D002               	goto	u13760
 23970  004000  0E01               	movlw	1
 23971  004002  D001               	goto	u13770
 23972  004004                     u13760:
 23973  004004  0E00               	movlw	0
 23974  004006                     u13770:
 23975  004006  6E13               	movwf	_atoi$7704^0,c
 23976  004008  6A14               	clrf	(_atoi$7704+1)^0,c
 23977  00400A  5013               	movf	_atoi$7704^0,w,c
 23978  00400C  1014               	iorwf	(_atoi$7704+1)^0,w,c
 23979  00400E  A4D8               	btfss	status,2,c
 23980  004010  D7BF               	goto	l14297
 23981  004012  500F               	movf	atoi@neg^0,w,c
 23982  004014  1010               	iorwf	(atoi@neg+1)^0,w,c
 23983  004016  A4D8               	btfss	status,2,c
 23984  004018  D011               	goto	l3902
 23985  00401A  0060  F058  F00B   	movff	atoi@n,??_atoi
 23986  004020  0060  F05C  F00C   	movff	atoi@n+1,??_atoi+1
 23987  004026  1E0B               	comf	??_atoi^0,f,c
 23988  004028  1E0C               	comf	(??_atoi+1)^0,f,c
 23989  00402A  4A0B               	infsnz	??_atoi^0,f,c
 23990  00402C  2A0C               	incf	(??_atoi+1)^0,f,c
 23991  00402E  0060  F02C  F009   	movff	??_atoi,?_atoi
 23992  004034  0060  F030  F00A   	movff	??_atoi+1,?_atoi+1
 23993  00403A  0012               	return	
 23994  00403C                     l3902:
 23995  00403C  0060  F058  F009   	movff	atoi@n,?_atoi
 23996  004042  0060  F05C  F00A   	movff	atoi@n+1,?_atoi+1
 23997  004048  0012               	return		;funcret
 23998  00404A                     __end_of_atoi:
 23999                           	opt callstack 0
 24000                           
 24001 ;; *************** function _isspace *****************
 24002 ;; Defined at:
 24003 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 24004 ;; Parameters:    Size  Location     Type
 24005 ;;  c               2    1[COMRAM] int 
 24006 ;; Auto vars:     Size  Location     Type
 24007 ;;		None
 24008 ;; Return value:  Size  Location     Type
 24009 ;;                  2    1[COMRAM] int 
 24010 ;; Registers used:
 24011 ;;		wreg, status,2, status,0
 24012 ;; Tracked objects:
 24013 ;;		On entry : 0/0
 24014 ;;		On exit  : 0/0
 24015 ;;		Unchanged: 0/0
 24016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24019 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24020 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24021 ;;Total ram usage:        7 bytes
 24022 ;; Hardware stack levels used:    1
 24023 ;; Hardware stack levels required when called:    7
 24024 ;; This function calls:
 24025 ;;		Nothing
 24026 ;; This function is called by:
 24027 ;;		_atoi
 24028 ;;		___strtoxl
 24029 ;; This function uses a non-reentrant model
 24030 ;;
 24031                           
 24032                           	psect	text146
 24033  007FA2                     __ptext146:
 24034                           	opt callstack 0
 24035  007FA2                     _isspace:
 24036                           	opt callstack 16
 24037                           
 24038                           ;incstack = 0
 24039  007FA2  0E01               	movlw	1
 24040  007FA4  6E08               	movwf	_isspace$7729^0,c
 24041  007FA6  0E20               	movlw	32
 24042  007FA8  1802               	xorwf	isspace@c^0,w,c
 24043  007FAA  1003               	iorwf	(isspace@c+1)^0,w,c
 24044  007FAC  B4D8               	btfsc	status,2,c
 24045  007FAE  D016               	goto	l14063
 24046  007FB0  0EF7               	movlw	247
 24047  007FB2  6E04               	movwf	??_isspace^0,c
 24048  007FB4  0EFF               	movlw	255
 24049  007FB6  6E05               	movwf	(??_isspace+1)^0,c
 24050  007FB8  0060  F008  F006   	movff	isspace@c,??_isspace+2
 24051  007FBE  0060  F00C  F007   	movff	isspace@c+1,??_isspace+3
 24052  007FC4  5004               	movf	??_isspace^0,w,c
 24053  007FC6  2606               	addwf	(??_isspace+2)^0,f,c
 24054  007FC8  5005               	movf	(??_isspace+1)^0,w,c
 24055  007FCA  2207               	addwfc	(??_isspace+3)^0,f,c
 24056  007FCC  5007               	movf	(??_isspace+3)^0,w,c
 24057  007FCE  E104               	bnz	u13240
 24058  007FD0  0E05               	movlw	5
 24059  007FD2  5C06               	subwf	(??_isspace+2)^0,w,c
 24060  007FD4  A0D8               	btfss	status,0,c
 24061  007FD6  D002               	goto	l14063
 24062  007FD8                     u13240:
 24063  007FD8  0E00               	movlw	0
 24064  007FDA  6E08               	movwf	_isspace$7729^0,c
 24065  007FDC                     l14063:
 24066  007FDC  0060  F020  F002   	movff	_isspace$7729,?_isspace
 24067  007FE2  6A03               	clrf	(?_isspace+1)^0,c
 24068  007FE4  0012               	return		;funcret
 24069  007FE6                     __end_of_isspace:
 24070                           	opt callstack 0
 24071                           
 24072 ;; *************** function _isdigit *****************
 24073 ;; Defined at:
 24074 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 24075 ;; Parameters:    Size  Location     Type
 24076 ;;  c               2    1[COMRAM] int 
 24077 ;; Auto vars:     Size  Location     Type
 24078 ;;		None
 24079 ;; Return value:  Size  Location     Type
 24080 ;;                  2    1[COMRAM] int 
 24081 ;; Registers used:
 24082 ;;		wreg, status,2, status,0
 24083 ;; Tracked objects:
 24084 ;;		On entry : 0/0
 24085 ;;		On exit  : 0/0
 24086 ;;		Unchanged: 0/0
 24087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24091 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24092 ;;Total ram usage:        6 bytes
 24093 ;; Hardware stack levels used:    1
 24094 ;; Hardware stack levels required when called:    7
 24095 ;; This function calls:
 24096 ;;		Nothing
 24097 ;; This function is called by:
 24098 ;;		_vfpfcnvrt
 24099 ;;		_atoi
 24100 ;;		___strtoxl
 24101 ;; This function uses a non-reentrant model
 24102 ;;
 24103                           
 24104                           	psect	text147
 24105  008612                     __ptext147:
 24106                           	opt callstack 0
 24107  008612                     _isdigit:
 24108                           	opt callstack 17
 24109                           
 24110                           ;incstack = 0
 24111  008612  0ED0               	movlw	208
 24112  008614  6E04               	movwf	??_isdigit^0,c
 24113  008616  0EFF               	movlw	255
 24114  008618  6E05               	movwf	(??_isdigit+1)^0,c
 24115  00861A  0060  F008  F006   	movff	isdigit@c,??_isdigit+2
 24116  008620  0060  F00C  F007   	movff	isdigit@c+1,??_isdigit+3
 24117  008626  5004               	movf	??_isdigit^0,w,c
 24118  008628  2606               	addwf	(??_isdigit+2)^0,f,c
 24119  00862A  5005               	movf	(??_isdigit+1)^0,w,c
 24120  00862C  2207               	addwfc	(??_isdigit+3)^0,f,c
 24121  00862E  5007               	movf	(??_isdigit+3)^0,w,c
 24122  008630  E106               	bnz	u13010
 24123  008632  0E0A               	movlw	10
 24124  008634  5C06               	subwf	(??_isdigit+2)^0,w,c
 24125  008636  B0D8               	btfsc	status,0,c
 24126  008638  D002               	goto	u13010
 24127  00863A  0E01               	movlw	1
 24128  00863C  D001               	goto	u13020
 24129  00863E                     u13010:
 24130  00863E  0E00               	movlw	0
 24131  008640                     u13020:
 24132  008640  6E02               	movwf	?_isdigit^0,c
 24133  008642  6A03               	clrf	(?_isdigit+1)^0,c
 24134  008644  0012               	return		;funcret
 24135  008646                     __end_of_isdigit:
 24136                           	opt callstack 0
 24137                           
 24138 ;; *************** function ___wmul *****************
 24139 ;; Defined at:
 24140 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 24141 ;; Parameters:    Size  Location     Type
 24142 ;;  multiplier      2    1[COMRAM] unsigned int 
 24143 ;;  multiplicand    2    3[COMRAM] unsigned int 
 24144 ;; Auto vars:     Size  Location     Type
 24145 ;;  product         2    5[COMRAM] unsigned int 
 24146 ;; Return value:  Size  Location     Type
 24147 ;;                  2    1[COMRAM] unsigned int 
 24148 ;; Registers used:
 24149 ;;		wreg, status,2, status,0, prodl, prodh
 24150 ;; Tracked objects:
 24151 ;;		On entry : 0/0
 24152 ;;		On exit  : 0/0
 24153 ;;		Unchanged: 0/0
 24154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24159 ;;Total ram usage:        6 bytes
 24160 ;; Hardware stack levels used:    1
 24161 ;; Hardware stack levels required when called:    7
 24162 ;; This function calls:
 24163 ;;		Nothing
 24164 ;; This function is called by:
 24165 ;;		_atoi
 24166 ;;		_CircularBufferPushBack
 24167 ;;		_CircularBufferPopFront
 24168 ;; This function uses a non-reentrant model
 24169 ;;
 24170                           
 24171                           	psect	text148
 24172  008678                     __ptext148:
 24173                           	opt callstack 0
 24174  008678                     ___wmul:
 24175                           	opt callstack 19
 24176                           
 24177                           ;incstack = 0
 24178  008678  5002               	movf	___wmul@multiplier^0,w,c
 24179  00867A  0204               	mulwf	___wmul@multiplicand^0,c
 24180  00867C  006F FFCC  F006    	movff	prodl,___wmul@product
 24181  008682  006F FFD0  F007    	movff	prodh,___wmul@product+1
 24182  008688  5002               	movf	___wmul@multiplier^0,w,c
 24183  00868A  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 24184  00868C  50F3               	movf	243,w,c
 24185  00868E  2607               	addwf	(___wmul@product+1)^0,f,c
 24186  008690  5003               	movf	(___wmul@multiplier+1)^0,w,c
 24187  008692  0204               	mulwf	___wmul@multiplicand^0,c
 24188  008694  50F3               	movf	243,w,c
 24189  008696  2607               	addwf	(___wmul@product+1)^0,f,c
 24190  008698  0060  F018  F002   	movff	___wmul@product,?___wmul
 24191  00869E  0060  F01C  F003   	movff	___wmul@product+1,?___wmul+1
 24192  0086A4  0012               	return		;funcret
 24193  0086A6                     __end_of___wmul:
 24194                           	opt callstack 0
 24195                           
 24196 ;; *************** function _nwkRouteFrame *****************
 24197 ;; Defined at:
 24198 ;;		line 299 in file "../nwk/nwk_src/nwkRoute.c"
 24199 ;; Parameters:    Size  Location     Type
 24200 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
 24201 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24202 ;; Auto vars:     Size  Location     Type
 24203 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
 24204 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24205 ;; Return value:  Size  Location     Type
 24206 ;;                  1    wreg      void 
 24207 ;; Registers used:
 24208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24209 ;; Tracked objects:
 24210 ;;		On entry : 2/1
 24211 ;;		On exit  : 3F/1
 24212 ;;		Unchanged: 0/0
 24213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24217 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24218 ;;Total ram usage:        4 bytes
 24219 ;; Hardware stack levels used:    1
 24220 ;; Hardware stack levels required when called:   12
 24221 ;; This function calls:
 24222 ;;		_NWK_RouteNextHop
 24223 ;;		_nwkFrameFree
 24224 ;;		_nwkRouteSendRouteError
 24225 ;;		_nwkTxFrame
 24226 ;; This function is called by:
 24227 ;;		_nwkRxTaskHandler
 24228 ;; This function uses a non-reentrant model
 24229 ;;
 24230                           
 24231                           	psect	text149
 24232  005D4A                     __ptext149:
 24233                           	opt callstack 0
 24234  005D4A                     _nwkRouteFrame:
 24235                           	opt callstack 15
 24236                           
 24237                           ;../nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kRoute.c: 300: {;../nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 24238                           
 24239                           ;incstack = 0
 24240  005D4A  0E02               	movlw	2
 24241  005D4C  2433               	addwf	nwkRouteFrame@frame^0,w,c
 24242  005D4E  6E35               	movwf	nwkRouteFrame@header^0,c
 24243  005D50  0E00               	movlw	0
 24244  005D52  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
 24245  005D54  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
 24246                           
 24247                           ;../nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, he
      +                          ader->nwkFcf.multicast))
 24248  005D56  EE20 F00D          	lfsr	2,13
 24249  005D5A  5035               	movf	nwkRouteFrame@header^0,w,c
 24250  005D5C  26D9               	addwf	fsr2l,f,c
 24251  005D5E  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24252  005D60  22DA               	addwfc	fsr2h,f,c
 24253  005D62  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 24254  005D68  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 24255  005D6E  EE20 F009          	lfsr	2,9
 24256  005D72  5035               	movf	nwkRouteFrame@header^0,w,c
 24257  005D74  26D9               	addwf	fsr2l,f,c
 24258  005D76  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24259  005D78  22DA               	addwfc	fsr2h,f,c
 24260  005D7A  0E00               	movlw	0
 24261  005D7C  B6DF               	btfsc	indf2,3,c
 24262  005D7E  0E01               	movlw	1
 24263  005D80  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 24264  005D82  EC00  F03F         	call	_NWK_RouteNextHop	;wreg free
 24265  005D86  2808               	incf	?_NWK_RouteNextHop^0,w,c
 24266  005D88  E103               	bnz	u15680
 24267  005D8A  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
 24268  005D8C  B4D8               	btfsc	status,2,c
 24269  005D8E  D01B               	goto	l15655
 24270  005D90                     u15680:
 24271                           
 24272                           ;../nwk/nwk_src/nwkRoute.c: 304:   {;../nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confi
      +                          rm = ((void*)0);
 24273  005D90  EE20 F087          	lfsr	2,135
 24274  005D94  5033               	movf	nwkRouteFrame@frame^0,w,c
 24275  005D96  26D9               	addwf	fsr2l,f,c
 24276  005D98  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24277  005D9A  22DA               	addwfc	fsr2h,f,c
 24278  005D9C  0E00               	movlw	0
 24279  005D9E  6EDE               	movwf	postinc2,c
 24280  005DA0  0E00               	movlw	0
 24281  005DA2  6EDD               	movwf	postdec2,c
 24282                           
 24283                           ;../nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 24284  005DA4  EE20 F086          	lfsr	2,134
 24285  005DA8  5033               	movf	nwkRouteFrame@frame^0,w,c
 24286  005DAA  26D9               	addwf	fsr2l,f,c
 24287  005DAC  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24288  005DAE  22DA               	addwfc	fsr2h,f,c
 24289  005DB0  0E02               	movlw	2
 24290  005DB2  6EDF               	movwf	indf2,c
 24291                           
 24292                           ;../nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
 24293  005DB4  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 24294  005DBA  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 24295  005DC0  ECF0  F01D         	call	_nwkTxFrame	;wreg free
 24296                           
 24297                           ;../nwk/nwk_src/nwkRoute.c: 308:   }
 24298  005DC4  0012               	return	
 24299  005DC6                     l15655:
 24300                           
 24301                           ;../nwk/nwk_src/nwkRoute.c: 310:   {;../nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRou
      +                          teError(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 24302  005DC6  EE20 F00B          	lfsr	2,11
 24303  005DCA  5035               	movf	nwkRouteFrame@header^0,w,c
 24304  005DCC  26D9               	addwf	fsr2l,f,c
 24305  005DCE  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24306  005DD0  22DA               	addwfc	fsr2h,f,c
 24307  005DD2  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
 24308  005DD8  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
 24309  005DDE  EE20 F00D          	lfsr	2,13
 24310  005DE2  5035               	movf	nwkRouteFrame@header^0,w,c
 24311  005DE4  26D9               	addwf	fsr2l,f,c
 24312  005DE6  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24313  005DE8  22DA               	addwfc	fsr2h,f,c
 24314  005DEA  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
 24315  005DF0  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
 24316  005DF6  EE20 F009          	lfsr	2,9
 24317  005DFA  5035               	movf	nwkRouteFrame@header^0,w,c
 24318  005DFC  26D9               	addwf	fsr2l,f,c
 24319  005DFE  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24320  005E00  22DA               	addwfc	fsr2h,f,c
 24321  005E02  0E00               	movlw	0
 24322  005E04  B6DF               	btfsc	indf2,3,c
 24323  005E06  0E01               	movlw	1
 24324  005E08  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
 24325  005E0A  EC81  F02C         	call	_nwkRouteSendRouteError	;wreg free
 24326                           
 24327                           ;../nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
 24328  005E0E  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 24329  005E14  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 24330  005E1A  EC4D  F045         	call	_nwkFrameFree	;wreg free
 24331                           
 24332                           ; BSR set to: 1
 24333  005E1E  0012               	return		;funcret
 24334  005E20                     __end_of_nwkRouteFrame:
 24335                           	opt callstack 0
 24336                           
 24337 ;; *************** function _nwkRouteSendRouteError *****************
 24338 ;; Defined at:
 24339 ;;		line 318 in file "../nwk/nwk_src/nwkRoute.c"
 24340 ;; Parameters:    Size  Location     Type
 24341 ;;  src             2   41[COMRAM] unsigned short 
 24342 ;;  dst             2   43[COMRAM] unsigned short 
 24343 ;;  multicast       1   45[COMRAM] unsigned char 
 24344 ;; Auto vars:     Size  Location     Type
 24345 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
 24346 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24347 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
 24348 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24349 ;; Return value:  Size  Location     Type
 24350 ;;                  1    wreg      void 
 24351 ;; Registers used:
 24352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24353 ;; Tracked objects:
 24354 ;;		On entry : 0/1
 24355 ;;		On exit  : 0/0
 24356 ;;		Unchanged: 0/0
 24357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24358 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24361 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24362 ;;Total ram usage:        9 bytes
 24363 ;; Hardware stack levels used:    1
 24364 ;; Hardware stack levels required when called:   11
 24365 ;; This function calls:
 24366 ;;		_nwkFrameAlloc
 24367 ;;		_nwkFrameCommandInit
 24368 ;;		_nwkTxFrame
 24369 ;; This function is called by:
 24370 ;;		_nwkRouteFrame
 24371 ;; This function uses a non-reentrant model
 24372 ;;
 24373                           
 24374                           	psect	text150
 24375  005902                     __ptext150:
 24376                           	opt callstack 0
 24377  005902                     _nwkRouteSendRouteError:
 24378                           	opt callstack 15
 24379                           
 24380                           ;../nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16
      +                          _t dst, uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 319: {;../nwk/nwk_src/nwkRoute.c: 
      +                          320:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *comm
      +                          and;;../nwk/nwk_src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24381                           
 24382                           ; BSR set to: 1
 24383                           ;incstack = 0
 24384  005902  ECF0  F032         	call	_nwkFrameAlloc	;wreg free
 24385  005906  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 24386  00590C  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 24387  005912  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24388  005914  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24389  005916  B4D8               	btfsc	status,2,c
 24390  005918  0012               	return	
 24391                           
 24392                           ;../nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
 24393  00591A  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 24394  005920  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 24395  005926  EC34  F040         	call	_nwkFrameCommandInit	;wreg free
 24396                           
 24397                           ; BSR set to: 1
 24398                           ;../nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
 24399  00592A  EE20 F001          	lfsr	2,1
 24400  00592E  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24401  005930  26D9               	addwf	fsr2l,f,c
 24402  005932  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24403  005934  22DA               	addwfc	fsr2h,f,c
 24404  005936  0E06               	movlw	6
 24405  005938  26DF               	addwf	indf2,f,c
 24406                           
 24407                           ; BSR set to: 1
 24408                           ;../nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
 24409  00593A  EE20 F087          	lfsr	2,135
 24410  00593E  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24411  005940  26D9               	addwf	fsr2l,f,c
 24412  005942  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24413  005944  22DA               	addwfc	fsr2h,f,c
 24414  005946  0E00               	movlw	0
 24415  005948  6EDE               	movwf	postinc2,c
 24416  00594A  0E00               	movlw	0
 24417  00594C  6EDD               	movwf	postdec2,c
 24418                           
 24419                           ; BSR set to: 1
 24420                           ;../nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
 24421  00594E  EE20 F00F          	lfsr	2,15
 24422  005952  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24423  005954  26D9               	addwf	fsr2l,f,c
 24424  005956  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24425  005958  22DA               	addwfc	fsr2h,f,c
 24426  00595A  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24427  005960  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24428                           
 24429                           ; BSR set to: 1
 24430                           ;../nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
 24431  005966  EE20 F081          	lfsr	2,129
 24432  00596A  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 24433  00596C  26D9               	addwf	fsr2l,f,c
 24434  00596E  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 24435  005970  22DA               	addwfc	fsr2h,f,c
 24436  005972  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
 24437  005978  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
 24438                           
 24439                           ; BSR set to: 1
 24440                           ;../nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
 24441  00597E  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 24442  005984  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 24443  00598A  0E01               	movlw	1
 24444  00598C  6EDF               	movwf	indf2,c
 24445                           
 24446                           ; BSR set to: 1
 24447                           ;../nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
 24448  00598E  EE20 F001          	lfsr	2,1
 24449  005992  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24450  005994  26D9               	addwf	fsr2l,f,c
 24451  005996  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24452  005998  22DA               	addwfc	fsr2h,f,c
 24453  00599A  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 24454  0059A0  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 24455                           
 24456                           ; BSR set to: 1
 24457                           ;../nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
 24458  0059A6  EE20 F003          	lfsr	2,3
 24459  0059AA  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24460  0059AC  26D9               	addwf	fsr2l,f,c
 24461  0059AE  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24462  0059B0  22DA               	addwfc	fsr2h,f,c
 24463  0059B2  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 24464  0059B8  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 24465                           
 24466                           ; BSR set to: 1
 24467                           ;../nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
 24468  0059BE  EE20 F005          	lfsr	2,5
 24469  0059C2  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 24470  0059C4  26D9               	addwf	fsr2l,f,c
 24471  0059C6  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 24472  0059C8  22DA               	addwfc	fsr2h,f,c
 24473  0059CA  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 24474                           
 24475                           ; BSR set to: 1
 24476                           ;../nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
 24477  0059D0  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 24478  0059D6  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 24479  0059DC  ECF0  F01D         	call	_nwkTxFrame	;wreg free
 24480  0059E0  0012               	return		;funcret
 24481  0059E2                     __end_of_nwkRouteSendRouteError:
 24482                           	opt callstack 0
 24483                           
 24484 ;; *************** function _nwkFrameCommandInit *****************
 24485 ;; Defined at:
 24486 ;;		line 131 in file "../nwk/nwk_src/nwkFrame.c"
 24487 ;; Parameters:    Size  Location     Type
 24488 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24489 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24490 ;; Auto vars:     Size  Location     Type
 24491 ;;		None
 24492 ;; Return value:  Size  Location     Type
 24493 ;;                  1    wreg      void 
 24494 ;; Registers used:
 24495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24496 ;; Tracked objects:
 24497 ;;		On entry : 0/0
 24498 ;;		On exit  : 3F/1
 24499 ;;		Unchanged: 0/0
 24500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24505 ;;Total ram usage:        2 bytes
 24506 ;; Hardware stack levels used:    1
 24507 ;; Hardware stack levels required when called:    7
 24508 ;; This function calls:
 24509 ;;		Nothing
 24510 ;; This function is called by:
 24511 ;;		_nwkRouteSendRouteError
 24512 ;;		_nwkRxSendAck
 24513 ;; This function uses a non-reentrant model
 24514 ;;
 24515                           
 24516                           	psect	text151
 24517  008068                     __ptext151:
 24518                           	opt callstack 0
 24519  008068                     _nwkFrameCommandInit:
 24520                           	opt callstack 18
 24521                           
 24522                           ;../nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 132: {;../nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_
      +                          STATUS;
 24523                           
 24524                           ;incstack = 0
 24525  008068  EE20 F083          	lfsr	2,131
 24526  00806C  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24527  00806E  26D9               	addwf	fsr2l,f,c
 24528  008070  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24529  008072  22DA               	addwfc	fsr2h,f,c
 24530  008074  0E00               	movlw	0
 24531  008076  6EDF               	movwf	indf2,c
 24532                           
 24533                           ;../nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 24534  008078  0101               	movlb	1	; () banked
 24535  00807A  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 24536  00807C  EE20 F00C          	lfsr	2,12
 24537  008080  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24538  008082  26D9               	addwf	fsr2l,f,c
 24539  008084  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24540  008086  22DA               	addwfc	fsr2h,f,c
 24541  008088  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 24542                           
 24543                           ;../nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 24544  00808E  EE20 F00D          	lfsr	2,13
 24545  008092  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 24546  008094  26D9               	addwf	fsr2l,f,c
 24547  008096  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 24548  008098  22DA               	addwfc	fsr2h,f,c
 24549  00809A  0060  F403  FFDE   	movff	_nwkIb,postinc2
 24550  0080A0  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 24551                           
 24552                           ; BSR set to: 1
 24553  0080A6  0012               	return		;funcret
 24554  0080A8                     __end_of_nwkFrameCommandInit:
 24555                           	opt callstack 0
 24556                           
 24557 ;; *************** function _nwkFrameFree *****************
 24558 ;; Defined at:
 24559 ;;		line 100 in file "../nwk/nwk_src/nwkFrame.c"
 24560 ;; Parameters:    Size  Location     Type
 24561 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24562 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24563 ;; Auto vars:     Size  Location     Type
 24564 ;;		None
 24565 ;; Return value:  Size  Location     Type
 24566 ;;                  1    wreg      void 
 24567 ;; Registers used:
 24568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24569 ;; Tracked objects:
 24570 ;;		On entry : 0/1
 24571 ;;		On exit  : 3F/1
 24572 ;;		Unchanged: 0/0
 24573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24578 ;;Total ram usage:        2 bytes
 24579 ;; Hardware stack levels used:    1
 24580 ;; Hardware stack levels required when called:    7
 24581 ;; This function calls:
 24582 ;;		Nothing
 24583 ;; This function is called by:
 24584 ;;		_nwkDataReqTxConf
 24585 ;;		_nwkRouteFrame
 24586 ;;		_nwkRxTaskHandler
 24587 ;;		_nwkTxTaskHandler
 24588 ;; This function uses a non-reentrant model
 24589 ;;
 24590                           
 24591                           	psect	text152
 24592  008A9A                     __ptext152:
 24593                           	opt callstack 0
 24594  008A9A                     _nwkFrameFree:
 24595                           	opt callstack 20
 24596                           
 24597                           ;../nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);../nwk/nwk_src/nwk
      +                          Frame.c: 101: {;../nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 24598                           
 24599                           ; BSR set to: 1
 24600                           ;incstack = 0
 24601  008A9A  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
 24602  008AA0  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 24603  008AA6  0E00               	movlw	0
 24604  008AA8  6EDF               	movwf	indf2,c
 24605                           
 24606                           ;../nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 24607  008AAA  0101               	movlb	1	; () banked
 24608  008AAC  0726               	decf	(_nwkIb+38)& (0+255),f,b
 24609  008AAE  A0D8               	btfss	status,0,c
 24610  008AB0  0727               	decf	(_nwkIb+39)& (0+255),f,b
 24611                           
 24612                           ; BSR set to: 1
 24613  008AB2  0012               	return		;funcret
 24614  008AB4                     __end_of_nwkFrameFree:
 24615                           	opt callstack 0
 24616                           
 24617 ;; *************** function _nwkDataReqTaskHandler *****************
 24618 ;; Defined at:
 24619 ;;		line 209 in file "../nwk/nwk_src/nwkDataReq.c"
 24620 ;; Parameters:    Size  Location     Type
 24621 ;;		None
 24622 ;; Auto vars:     Size  Location     Type
 24623 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
 24624 ;;		 -> NULL(0), tx_buffer(524), 
 24625 ;; Return value:  Size  Location     Type
 24626 ;;                  1    wreg      void 
 24627 ;; Registers used:
 24628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24629 ;; Tracked objects:
 24630 ;;		On entry : 0/1
 24631 ;;		On exit  : 0/0
 24632 ;;		Unchanged: 0/0
 24633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24638 ;;Total ram usage:        4 bytes
 24639 ;; Hardware stack levels used:    1
 24640 ;; Hardware stack levels required when called:   12
 24641 ;; This function calls:
 24642 ;;		_nwkDataReqConfirm
 24643 ;;		_nwkDataReqSendFrame
 24644 ;; This function is called by:
 24645 ;;		_NWK_TaskHandler
 24646 ;; This function uses a non-reentrant model
 24647 ;;
 24648                           
 24649                           	psect	text153
 24650  007256                     __ptext153:
 24651                           	opt callstack 0
 24652  007256                     _nwkDataReqTaskHandler:
 24653                           	opt callstack 16
 24654                           
 24655                           ;../nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req
      +                           = req->next)
 24656                           
 24657                           ; BSR set to: 1
 24658                           ;incstack = 0
 24659  007256  0060  F388  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 24660  00725C  0060  F38C  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 24661  007262  D035               	goto	l16371
 24662  007264                     l16353:
 24663                           
 24664                           ;../nwk/nwk_src/nwkDataReq.c: 216:       {;../nwk/nwk_src/nwkDataReq.c: 217:         nwk
      +                          DataReqSendFrame(req);
 24665  007264  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 24666  00726A  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 24667  007270  ECAF  F00E         	call	_nwkDataReqSendFrame	;wreg free
 24668  007274  0012               	return	
 24669  007276                     l16359:
 24670                           
 24671                           ;../nwk/nwk_src/nwkDataReq.c: 225:       {;../nwk/nwk_src/nwkDataReq.c: 226:         nwk
      +                          DataReqConfirm(req);
 24672  007276  0060  F0CC  F009   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 24673  00727C  0060  F0D0  F00A   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 24674  007282  EC9D  F02B         	call	_nwkDataReqConfirm	;wreg free
 24675  007286  0012               	return	
 24676  007288                     l16367:
 24677  007288  EE20 F004          	lfsr	2,4
 24678  00728C  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24679  00728E  26D9               	addwf	fsr2l,f,c
 24680  007290  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24681  007292  22DA               	addwfc	fsr2h,f,c
 24682  007294  50DF               	movf	indf2,w,c
 24683  007296  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
 24684  007298  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
 24685                           
 24686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24687                           ; Switch size 1, requested type "simple"
 24688                           ; Number of cases is 1, Range of values is 0 to 0
 24689                           ; switch strategies available:
 24690                           ; Name         Instructions Cycles
 24691                           ; simple_byte            4     3 (average)
 24692                           ;	Chosen strategy is simple_byte
 24693  00729A  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
 24694  00729C  0A00               	xorlw	0	; case 0
 24695  00729E  A4D8               	btfss	status,2,c
 24696  0072A0  D00A               	goto	l16369
 24697                           
 24698                           ; Switch size 1, requested type "simple"
 24699                           ; Number of cases is 3, Range of values is 0 to 2
 24700                           ; switch strategies available:
 24701                           ; Name         Instructions Cycles
 24702                           ; simple_byte           10     6 (average)
 24703                           ;	Chosen strategy is simple_byte
 24704  0072A2  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
 24705  0072A4  0A00               	xorlw	0	; case 0
 24706  0072A6  B4D8               	btfsc	status,2,c
 24707  0072A8  D7DD               	goto	l16353
 24708  0072AA  0A01               	xorlw	1	; case 1
 24709  0072AC  B4D8               	btfsc	status,2,c
 24710  0072AE  D003               	goto	l16369
 24711  0072B0  0A03               	xorlw	3	; case 2
 24712  0072B2  B4D8               	btfsc	status,2,c
 24713  0072B4  D7E0               	goto	l16359
 24714  0072B6                     l16369:
 24715                           
 24716                           ;../nwk/nwk_src/nwkDataReq.c: 233:   }
 24717  0072B6  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 24718  0072BC  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 24719  0072C2  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
 24720  0072C8  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
 24721  0072CE                     l16371:
 24722  0072CE  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 24723  0072D0  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
 24724  0072D2  B4D8               	btfsc	status,2,c
 24725  0072D4  0012               	return	
 24726  0072D6  D7D8               	goto	l16367
 24727  0072D8                     __end_of_nwkDataReqTaskHandler:
 24728                           	opt callstack 0
 24729                           
 24730 ;; *************** function _nwkDataReqSendFrame *****************
 24731 ;; Defined at:
 24732 ;;		line 111 in file "../nwk/nwk_src/nwkDataReq.c"
 24733 ;; Parameters:    Size  Location     Type
 24734 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
 24735 ;;		 -> NULL(0), tx_buffer(524), 
 24736 ;; Auto vars:     Size  Location     Type
 24737 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
 24738 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24739 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
 24740 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24741 ;; Return value:  Size  Location     Type
 24742 ;;                  1    wreg      void 
 24743 ;; Registers used:
 24744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24745 ;; Tracked objects:
 24746 ;;		On entry : 0/1
 24747 ;;		On exit  : 0/0
 24748 ;;		Unchanged: 0/0
 24749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24751 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24753 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24754 ;;Total ram usage:        7 bytes
 24755 ;; Hardware stack levels used:    1
 24756 ;; Hardware stack levels required when called:   11
 24757 ;; This function calls:
 24758 ;;		_memcpy
 24759 ;;		_nwkFrameAlloc
 24760 ;;		_nwkTxFrame
 24761 ;; This function is called by:
 24762 ;;		_nwkDataReqTaskHandler
 24763 ;; This function uses a non-reentrant model
 24764 ;;
 24765                           
 24766                           	psect	text154
 24767  001D5E                     __ptext154:
 24768                           	opt callstack 0
 24769  001D5E                     _nwkDataReqSendFrame:
 24770                           	opt callstack 16
 24771                           
 24772                           ;../nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);.
      +                          ./nwk/nwk_src/nwkDataReq.c: 112: {;../nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame
      +                          ;;../nwk/nwk_src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24773                           
 24774                           ;incstack = 0
 24775  001D5E  ECF0  F032         	call	_nwkFrameAlloc	;wreg free
 24776  001D62  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 24777  001D68  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 24778  001D6E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24779  001D70  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24780  001D72  A4D8               	btfss	status,2,c
 24781  001D74  D011               	goto	l15585
 24782                           
 24783                           ;../nwk/nwk_src/nwkDataReq.c: 116:   {;../nwk/nwk_src/nwkDataReq.c: 117:     req->state 
      +                          = NWK_DATA_REQ_STATE_CONFIRM;
 24784  001D76  EE20 F004          	lfsr	2,4
 24785  001D7A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24786  001D7C  26D9               	addwf	fsr2l,f,c
 24787  001D7E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24788  001D80  22DA               	addwfc	fsr2h,f,c
 24789  001D82  0E02               	movlw	2
 24790  001D84  6EDF               	movwf	indf2,c
 24791                           
 24792                           ;../nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 24793  001D86  EE20 F011          	lfsr	2,17
 24794  001D8A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24795  001D8C  26D9               	addwf	fsr2l,f,c
 24796  001D8E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24797  001D90  22DA               	addwfc	fsr2h,f,c
 24798  001D92  0E02               	movlw	2
 24799  001D94  6EDF               	movwf	indf2,c
 24800  001D96  0012               	return	
 24801  001D98                     l15585:
 24802                           
 24803                           ;../nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 24804  001D98  EE20 F002          	lfsr	2,2
 24805  001D9C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24806  001D9E  26D9               	addwf	fsr2l,f,c
 24807  001DA0  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24808  001DA2  22DA               	addwfc	fsr2h,f,c
 24809  001DA4  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 24810  001DAA  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 24811                           
 24812                           ;../nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 24813  001DB0  EE20 F004          	lfsr	2,4
 24814  001DB4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24815  001DB6  26D9               	addwf	fsr2l,f,c
 24816  001DB8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24817  001DBA  22DA               	addwfc	fsr2h,f,c
 24818  001DBC  0E01               	movlw	1
 24819  001DBE  6EDF               	movwf	indf2,c
 24820                           
 24821                           ;../nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 24822  001DC0  EE20 F087          	lfsr	2,135
 24823  001DC4  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24824  001DC6  26D9               	addwf	fsr2l,f,c
 24825  001DC8  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24826  001DCA  22DA               	addwfc	fsr2h,f,c
 24827  001DCC  0E4A               	movlw	low _nwkDataReqTxConf
 24828  001DCE  6EDE               	movwf	postinc2,c
 24829  001DD0  0E69               	movlw	high _nwkDataReqTxConf
 24830  001DD2  6EDD               	movwf	postdec2,c
 24831                           
 24832                           ;../nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAS
      +                          T_PAN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 24833  001DD4  EE20 F086          	lfsr	2,134
 24834  001DD8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24835  001DDA  26D9               	addwf	fsr2l,f,c
 24836  001DDC  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24837  001DDE  22DA               	addwfc	fsr2h,f,c
 24838  001DE0  EE10 F009          	lfsr	1,9
 24839  001DE4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24840  001DE6  26E1               	addwf	fsr1l,f,c
 24841  001DE8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24842  001DEA  22E2               	addwfc	fsr1h,f,c
 24843  001DEC  A4E7               	btfss	indf1,2,c
 24844  001DEE  D002               	goto	u15510
 24845  001DF0  0E01               	movlw	1
 24846  001DF2  D001               	goto	u15520
 24847  001DF4                     u15510:
 24848  001DF4  0E00               	movlw	0
 24849  001DF6                     u15520:
 24850  001DF6  6EDF               	movwf	indf2,c
 24851                           
 24852                           ;../nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NW
      +                          K_OPT_ACK_REQUEST ? 1 : 0;
 24853  001DF8  EE20 F009          	lfsr	2,9
 24854  001DFC  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24855  001DFE  26D9               	addwf	fsr2l,f,c
 24856  001E00  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24857  001E02  22DA               	addwfc	fsr2h,f,c
 24858  001E04  A0DF               	btfss	indf2,0,c
 24859  001E06  D003               	goto	u15530
 24860  001E08  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24861  001E0A  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24862  001E0C  D001               	goto	u15548
 24863  001E0E                     u15530:
 24864  001E0E  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24865  001E10                     u15548:
 24866  001E10  EE20 F00B          	lfsr	2,11
 24867  001E14  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24868  001E16  26D9               	addwf	fsr2l,f,c
 24869  001E18  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24870  001E1A  22DA               	addwfc	fsr2h,f,c
 24871  001E1C  50DF               	movf	indf2,w,c
 24872  001E1E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24873  001E20  0BFE               	andlw	-2
 24874  001E22  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24875  001E24  6EDF               	movwf	indf2,c
 24876                           
 24877                           ;../nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK
      +                          _OPT_LINK_LOCAL ? 1 : 0;
 24878  001E26  EE20 F009          	lfsr	2,9
 24879  001E2A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24880  001E2C  26D9               	addwf	fsr2l,f,c
 24881  001E2E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24882  001E30  22DA               	addwfc	fsr2h,f,c
 24883  001E32  A6DF               	btfss	indf2,3,c
 24884  001E34  D003               	goto	u15550
 24885  001E36  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24886  001E38  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24887  001E3A  D001               	goto	u15568
 24888  001E3C                     u15550:
 24889  001E3C  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24890  001E3E                     u15568:
 24891  001E3E  EE20 F00B          	lfsr	2,11
 24892  001E42  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24893  001E44  26D9               	addwf	fsr2l,f,c
 24894  001E46  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24895  001E48  22DA               	addwfc	fsr2h,f,c
 24896  001E4A  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24897  001E4C  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24898  001E4E  50DF               	movf	indf2,w,c
 24899  001E50  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24900  001E52  0BFB               	andlw	-5
 24901  001E54  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24902  001E56  6EDF               	movwf	indf2,c
 24903                           
 24904                           ;../nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK
      +                          _OPT_MULTICAST ? 1 : 0;
 24905  001E58  EE20 F009          	lfsr	2,9
 24906  001E5C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24907  001E5E  26D9               	addwf	fsr2l,f,c
 24908  001E60  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24909  001E62  22DA               	addwfc	fsr2h,f,c
 24910  001E64  A8DF               	btfss	indf2,4,c
 24911  001E66  D003               	goto	u15570
 24912  001E68  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24913  001E6A  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 24914  001E6C  D001               	goto	u15588
 24915  001E6E                     u15570:
 24916  001E6E  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 24917  001E70                     u15588:
 24918  001E70  EE20 F00B          	lfsr	2,11
 24919  001E74  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24920  001E76  26D9               	addwf	fsr2l,f,c
 24921  001E78  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24922  001E7A  22DA               	addwfc	fsr2h,f,c
 24923  001E7C  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24924  001E7E  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24925  001E80  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 24926  001E82  50DF               	movf	indf2,w,c
 24927  001E84  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24928  001E86  0BF7               	andlw	-9
 24929  001E88  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24930  001E8A  6EDF               	movwf	indf2,c
 24931                           
 24932                           ;../nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 24933  001E8C  EE20 F00B          	lfsr	2,11
 24934  001E90  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24935  001E92  26D9               	addwf	fsr2l,f,c
 24936  001E94  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24937  001E96  22DA               	addwfc	fsr2h,f,c
 24938  001E98  A6DF               	btfss	indf2,3,c
 24939  001E9A  D06C               	goto	l1775
 24940                           
 24941                           ;../nwk/nwk_src/nwkDataReq.c: 139:   {;../nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMul
      +                          ticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 24942  001E9C  EE20 F081          	lfsr	2,129
 24943  001EA0  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 24944  001EA2  26D9               	addwf	fsr2l,f,c
 24945  001EA4  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 24946  001EA6  22DA               	addwfc	fsr2h,f,c
 24947  001EA8  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 24948  001EAE  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 24949                           
 24950                           ;../nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 24951  001EB4  EE20 F00A          	lfsr	2,10
 24952  001EB8  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24953  001EBA  26D9               	addwf	fsr2l,f,c
 24954  001EBC  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24955  001EBE  22DA               	addwfc	fsr2h,f,c
 24956  001EC0  50DF               	movf	indf2,w,c
 24957  001EC2  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24958  001EC4  EE20 F001          	lfsr	2,1
 24959  001EC8  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 24960  001ECA  26D9               	addwf	fsr2l,f,c
 24961  001ECC  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 24962  001ECE  22DA               	addwfc	fsr2h,f,c
 24963  001ED0  50DF               	movf	indf2,w,c
 24964  001ED2  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24965  001ED4  0BF0               	andlw	-16
 24966  001ED6  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24967  001ED8  6EDF               	movwf	indf2,c
 24968                           
 24969                           ;../nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 24970  001EDA  EE20 F00A          	lfsr	2,10
 24971  001EDE  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24972  001EE0  26D9               	addwf	fsr2l,f,c
 24973  001EE2  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24974  001EE4  22DA               	addwfc	fsr2h,f,c
 24975  001EE6  50DF               	movf	indf2,w,c
 24976  001EE8  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24977  001EEA  EE20 F001          	lfsr	2,1
 24978  001EEE  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 24979  001EF0  26D9               	addwf	fsr2l,f,c
 24980  001EF2  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 24981  001EF4  22DA               	addwfc	fsr2h,f,c
 24982  001EF6  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 24983  001EF8  50DF               	movf	indf2,w,c
 24984  001EFA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24985  001EFC  0B0F               	andlw	-241
 24986  001EFE  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 24987  001F00  6EDF               	movwf	indf2,c
 24988                           
 24989                           ;../nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 24990  001F02  EE20 F00B          	lfsr	2,11
 24991  001F06  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 24992  001F08  26D9               	addwf	fsr2l,f,c
 24993  001F0A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 24994  001F0C  22DA               	addwfc	fsr2h,f,c
 24995  001F0E  50DF               	movf	indf2,w,c
 24996  001F10  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 24997  001F12  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 24998  001F18  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 24999  001F1E  50DF               	movf	indf2,w,c
 25000  001F20  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25001  001F22  0BF0               	andlw	-16
 25002  001F24  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25003  001F26  6EDF               	movwf	indf2,c
 25004                           
 25005                           ;../nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadi
      +                          us;
 25006  001F28  EE20 F00B          	lfsr	2,11
 25007  001F2C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25008  001F2E  26D9               	addwf	fsr2l,f,c
 25009  001F30  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25010  001F32  22DA               	addwfc	fsr2h,f,c
 25011  001F34  50DF               	movf	indf2,w,c
 25012  001F36  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25013  001F38  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 25014  001F3E  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 25015  001F44  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25016  001F46  50DF               	movf	indf2,w,c
 25017  001F48  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25018  001F4A  0B0F               	andlw	-241
 25019  001F4C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25020  001F4E  6EDF               	movwf	indf2,c
 25021                           
 25022                           ;../nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_
      +                          t);
 25023  001F50  EE20 F081          	lfsr	2,129
 25024  001F54  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25025  001F56  26D9               	addwf	fsr2l,f,c
 25026  001F58  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25027  001F5A  22DA               	addwfc	fsr2h,f,c
 25028  001F5C  0E02               	movlw	2
 25029  001F5E  26DE               	addwf	postinc2,f,c
 25030  001F60  0E00               	movlw	0
 25031  001F62  22DD               	addwfc	postdec2,f,c
 25032                           
 25033                           ;../nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 25034  001F64  EE20 F001          	lfsr	2,1
 25035  001F68  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25036  001F6A  26D9               	addwf	fsr2l,f,c
 25037  001F6C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25038  001F6E  22DA               	addwfc	fsr2h,f,c
 25039  001F70  0E02               	movlw	2
 25040  001F72  26DF               	addwf	indf2,f,c
 25041  001F74                     l1775:
 25042                           
 25043                           ;../nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 25044  001F74  0101               	movlb	1	; () banked
 25045  001F76  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 25046  001F78  EE20 F00C          	lfsr	2,12
 25047  001F7C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25048  001F7E  26D9               	addwf	fsr2l,f,c
 25049  001F80  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25050  001F82  22DA               	addwfc	fsr2h,f,c
 25051  001F84  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 25052                           
 25053                           ;../nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
 25054  001F8A  EE20 F00D          	lfsr	2,13
 25055  001F8E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25056  001F90  26D9               	addwf	fsr2l,f,c
 25057  001F92  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25058  001F94  22DA               	addwfc	fsr2h,f,c
 25059  001F96  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25060  001F9C  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25061                           
 25062                           ; BSR set to: 1
 25063                           ;../nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
 25064  001FA2  EE20 F005          	lfsr	2,5
 25065  001FA6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25066  001FA8  26D9               	addwf	fsr2l,f,c
 25067  001FAA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25068  001FAC  22DA               	addwfc	fsr2h,f,c
 25069  001FAE  EE10 F00F          	lfsr	1,15
 25070  001FB2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25071  001FB4  26E1               	addwf	fsr1l,f,c
 25072  001FB6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25073  001FB8  22E2               	addwfc	fsr1h,f,c
 25074  001FBA  006F FF7B FFE6     	movff	postinc2,postinc1
 25075  001FC0  006F FF77 FFE5     	movff	postdec2,postdec1
 25076                           
 25077                           ; BSR set to: 1
 25078                           ;../nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 25079  001FC6  EE20 F008          	lfsr	2,8
 25080  001FCA  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25081  001FCC  26D9               	addwf	fsr2l,f,c
 25082  001FCE  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25083  001FD0  22DA               	addwfc	fsr2h,f,c
 25084  001FD2  50DF               	movf	indf2,w,c
 25085  001FD4  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25086  001FD6  EE20 F011          	lfsr	2,17
 25087  001FDA  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25088  001FDC  26D9               	addwf	fsr2l,f,c
 25089  001FDE  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25090  001FE0  22DA               	addwfc	fsr2h,f,c
 25091  001FE2  50DF               	movf	indf2,w,c
 25092  001FE4  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25093  001FE6  0BF0               	andlw	-16
 25094  001FE8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25095  001FEA  6EDF               	movwf	indf2,c
 25096                           
 25097                           ; BSR set to: 1
 25098                           ;../nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 25099  001FEC  EE20 F007          	lfsr	2,7
 25100  001FF0  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25101  001FF2  26D9               	addwf	fsr2l,f,c
 25102  001FF4  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25103  001FF6  22DA               	addwfc	fsr2h,f,c
 25104  001FF8  50DF               	movf	indf2,w,c
 25105  001FFA  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25106  001FFC  EE20 F011          	lfsr	2,17
 25107  002000  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25108  002002  26D9               	addwf	fsr2l,f,c
 25109  002004  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25110  002006  22DA               	addwfc	fsr2h,f,c
 25111  002008  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25112  00200A  50DF               	movf	indf2,w,c
 25113  00200C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25114  00200E  0B0F               	andlw	-241
 25115  002010  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25116  002012  6EDF               	movwf	indf2,c
 25117                           
 25118                           ; BSR set to: 1
 25119                           ;../nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
 25120  002014  EE20 F081          	lfsr	2,129
 25121  002018  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25122  00201A  26D9               	addwf	fsr2l,f,c
 25123  00201C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25124  00201E  22DA               	addwfc	fsr2h,f,c
 25125  002020  006F FF78  F008    	movff	postinc2,memcpy@d1
 25126  002026  006F FF74  F009    	movff	postdec2,memcpy@d1+1
 25127  00202C  EE20 F00C          	lfsr	2,12
 25128  002030  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25129  002032  26D9               	addwf	fsr2l,f,c
 25130  002034  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25131  002036  22DA               	addwfc	fsr2h,f,c
 25132  002038  006F FF78  F00A    	movff	postinc2,memcpy@s1
 25133  00203E  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 25134  002044  EE20 F00E          	lfsr	2,14
 25135  002048  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25136  00204A  26D9               	addwf	fsr2l,f,c
 25137  00204C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25138  00204E  22DA               	addwfc	fsr2h,f,c
 25139  002050  50DF               	movf	indf2,w,c
 25140  002052  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25141  002054  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25142  002056  6E0C               	movwf	memcpy@n^0,c
 25143  002058  6A0D               	clrf	(memcpy@n+1)^0,c
 25144  00205A  ECEA  F039         	call	_memcpy	;wreg free
 25145                           
 25146                           ;../nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
 25147  00205E  EE20 F00E          	lfsr	2,14
 25148  002062  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25149  002064  26D9               	addwf	fsr2l,f,c
 25150  002066  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25151  002068  22DA               	addwfc	fsr2h,f,c
 25152  00206A  50DF               	movf	indf2,w,c
 25153  00206C  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25154  00206E  EE20 F001          	lfsr	2,1
 25155  002072  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25156  002074  26D9               	addwf	fsr2l,f,c
 25157  002076  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25158  002078  22DA               	addwfc	fsr2h,f,c
 25159  00207A  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25160  00207C  26DF               	addwf	indf2,f,c
 25161                           
 25162                           ;../nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
 25163  00207E  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 25164  002084  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 25165  00208A  ECF0  F01D         	call	_nwkTxFrame	;wreg free
 25166  00208E  0012               	return		;funcret
 25167  002090                     __end_of_nwkDataReqSendFrame:
 25168                           	opt callstack 0
 25169                           
 25170 ;; *************** function _nwkTxFrame *****************
 25171 ;; Defined at:
 25172 ;;		line 109 in file "../nwk/nwk_src/nwkTx.c"
 25173 ;; Parameters:    Size  Location     Type
 25174 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 25175 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25176 ;; Auto vars:     Size  Location     Type
 25177 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
 25178 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25179 ;; Return value:  Size  Location     Type
 25180 ;;                  1    wreg      void 
 25181 ;; Registers used:
 25182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25183 ;; Tracked objects:
 25184 ;;		On entry : 0/1
 25185 ;;		On exit  : 3F/1
 25186 ;;		Unchanged: 0/0
 25187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25191 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25192 ;;Total ram usage:        6 bytes
 25193 ;; Hardware stack levels used:    1
 25194 ;; Hardware stack levels required when called:   10
 25195 ;; This function calls:
 25196 ;;		_nwkRoutePrepareTx
 25197 ;;		_rand
 25198 ;; This function is called by:
 25199 ;;		_nwkDataReqSendFrame
 25200 ;;		_nwkRouteFrame
 25201 ;;		_nwkRouteSendRouteError
 25202 ;;		_nwkRxSendAck
 25203 ;; This function uses a non-reentrant model
 25204 ;;
 25205                           
 25206                           	psect	text155
 25207  003BE0                     __ptext155:
 25208                           	opt callstack 0
 25209  003BE0                     _nwkTxFrame:
 25210                           	opt callstack 15
 25211                           
 25212                           ;../nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);../nwk/nwk_src/nwkTx.c:
      +                           110: {;../nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 25213                           
 25214                           ;incstack = 0
 25215  003BE0  0E02               	movlw	2
 25216  003BE2  2424               	addwf	nwkTxFrame@frame^0,w,c
 25217  003BE4  6E28               	movwf	nwkTxFrame@header^0,c
 25218  003BE6  0E00               	movlw	0
 25219  003BE8  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
 25220  003BEA  6E29               	movwf	(nwkTxFrame@header+1)^0,c
 25221                           
 25222                           ;../nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 25223  003BEC  EE20 F086          	lfsr	2,134
 25224  003BF0  5024               	movf	nwkTxFrame@frame^0,w,c
 25225  003BF2  26D9               	addwf	fsr2l,f,c
 25226  003BF4  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25227  003BF6  22DA               	addwfc	fsr2h,f,c
 25228  003BF8  A2DF               	btfss	indf2,1,c
 25229  003BFA  D000               	goto	u14390
 25230  003BFC                     u14390:
 25231                           
 25232                           ;../nwk/nwk_src/nwkTx.c: 118:   {;../nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_
      +                          TX_STATE_DELAY;
 25233                           
 25234                           ;../nwk/nwk_src/nwkTx.c: 116:   }
 25235                           
 25236                           ;../nwk/nwk_src/nwkTx.c: 114:   {;../nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX
      +                          _STATE_DELAY;
 25237  003BFC  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 25238  003C02  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 25239  003C08  0E12               	movlw	18
 25240  003C0A  6EDF               	movwf	indf2,c
 25241                           
 25242                           ;../nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 25243  003C0C  EE20 F083          	lfsr	2,131
 25244  003C10  5024               	movf	nwkTxFrame@frame^0,w,c
 25245  003C12  26D9               	addwf	fsr2l,f,c
 25246  003C14  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25247  003C16  22DA               	addwfc	fsr2h,f,c
 25248  003C18  0E00               	movlw	0
 25249  003C1A  6EDF               	movwf	indf2,c
 25250                           
 25251                           ;../nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 25252  003C1C  EE20 F086          	lfsr	2,134
 25253  003C20  5024               	movf	nwkTxFrame@frame^0,w,c
 25254  003C22  26D9               	addwf	fsr2l,f,c
 25255  003C24  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25256  003C26  22DA               	addwfc	fsr2h,f,c
 25257  003C28  A0DF               	btfss	indf2,0,c
 25258  003C2A  D00B               	goto	l14807
 25259                           
 25260                           ;../nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 25261  003C2C  EE20 F003          	lfsr	2,3
 25262  003C30  5028               	movf	nwkTxFrame@header^0,w,c
 25263  003C32  26D9               	addwf	fsr2l,f,c
 25264  003C34  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25265  003C36  22DA               	addwfc	fsr2h,f,c
 25266  003C38  0EFF               	movlw	255
 25267  003C3A  6EDE               	movwf	postinc2,c
 25268  003C3C  0EFF               	movlw	255
 25269  003C3E  6EDD               	movwf	postdec2,c
 25270  003C40  D00C               	goto	l2293
 25271  003C42                     l14807:
 25272                           
 25273                           ;../nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 25274  003C42  EE20 F003          	lfsr	2,3
 25275  003C46  5028               	movf	nwkTxFrame@header^0,w,c
 25276  003C48  26D9               	addwf	fsr2l,f,c
 25277  003C4A  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25278  003C4C  22DA               	addwfc	fsr2h,f,c
 25279  003C4E  0060  F40B  FFDE   	movff	_nwkIb+2,postinc2
 25280  003C54  0060  F40F  FFDD   	movff	_nwkIb+3,postdec2
 25281  003C5A                     l2293:
 25282                           
 25283                           ;../nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK
      +                          ) &&
 25284  003C5A  EE20 F086          	lfsr	2,134
 25285  003C5E  5024               	movf	nwkTxFrame@frame^0,w,c
 25286  003C60  26D9               	addwf	fsr2l,f,c
 25287  003C62  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25288  003C64  22DA               	addwfc	fsr2h,f,c
 25289  003C66  B4DF               	btfsc	indf2,2,c
 25290  003C68  D011               	goto	l14813
 25291  003C6A  EE20 F086          	lfsr	2,134
 25292  003C6E  5024               	movf	nwkTxFrame@frame^0,w,c
 25293  003C70  26D9               	addwf	fsr2l,f,c
 25294  003C72  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25295  003C74  22DA               	addwfc	fsr2h,f,c
 25296  003C76  B0DF               	btfsc	indf2,0,c
 25297  003C78  D009               	goto	l14813
 25298                           
 25299                           ;../nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 25300  003C7A  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 25301  003C80  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 25302  003C86  ECAE  F028         	call	_nwkRoutePrepareTx	;wreg free
 25303  003C8A  D012               	goto	l14815
 25304  003C8C                     l14813:
 25305                           
 25306                           ;../nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 25307  003C8C  EE20 F00D          	lfsr	2,13
 25308  003C90  5028               	movf	nwkTxFrame@header^0,w,c
 25309  003C92  26D9               	addwf	fsr2l,f,c
 25310  003C94  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25311  003C96  22DA               	addwfc	fsr2h,f,c
 25312  003C98  EE10 F005          	lfsr	1,5
 25313  003C9C  5028               	movf	nwkTxFrame@header^0,w,c
 25314  003C9E  26E1               	addwf	fsr1l,f,c
 25315  003CA0  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25316  003CA2  22E2               	addwfc	fsr1h,f,c
 25317  003CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 25318  003CAA  006F FF77 FFE5     	movff	postdec2,postdec1
 25319  003CB0                     l14815:
 25320                           
 25321                           ;../nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 25322  003CB0  EE20 F007          	lfsr	2,7
 25323  003CB4  5028               	movf	nwkTxFrame@header^0,w,c
 25324  003CB6  26D9               	addwf	fsr2l,f,c
 25325  003CB8  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25326  003CBA  22DA               	addwfc	fsr2h,f,c
 25327  003CBC  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25328  003CC2  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25329                           
 25330                           ;../nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 25331  003CC8  0101               	movlb	1	; () banked
 25332  003CCA  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 25333  003CCC  EE20 F002          	lfsr	2,2
 25334  003CD0  5028               	movf	nwkTxFrame@header^0,w,c
 25335  003CD2  26D9               	addwf	fsr2l,f,c
 25336  003CD4  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25337  003CD6  22DA               	addwfc	fsr2h,f,c
 25338  003CD8  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 25339                           
 25340                           ; BSR set to: 1
 25341                           ;../nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 25342  003CDE  EE20 F005          	lfsr	2,5
 25343  003CE2  5028               	movf	nwkTxFrame@header^0,w,c
 25344  003CE4  26D9               	addwf	fsr2l,f,c
 25345  003CE6  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25346  003CE8  22DA               	addwfc	fsr2h,f,c
 25347  003CEA  28DE               	incf	postinc2,w,c
 25348  003CEC  E124               	bnz	l14825
 25349  003CEE  28DE               	incf	postinc2,w,c
 25350  003CF0  A4D8               	btfss	status,2,c
 25351  003CF2  D021               	goto	l14825
 25352                           
 25353                           ; BSR set to: 1
 25354                           ;../nwk/nwk_src/nwkTx.c: 146:   {;../nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x88
      +                          41;
 25355  003CF4  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25356  003CFA  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25357  003D00  0E41               	movlw	65
 25358  003D02  6EDE               	movwf	postinc2,c
 25359  003D04  0E88               	movlw	136
 25360  003D06  6EDD               	movwf	postdec2,c
 25361                           
 25362                           ; BSR set to: 1
 25363                           ;../nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 25364  003D08  EC27  F028         	call	_rand	;wreg free
 25365  003D0C  0E07               	movlw	7
 25366  003D0E  161A               	andwf	?_rand^0,f,c
 25367  003D10  0E00               	movlw	0
 25368  003D12  161B               	andwf	(?_rand+1)^0,f,c
 25369  003D14  0E01               	movlw	1
 25370  003D16  261A               	addwf	?_rand^0,f,c
 25371  003D18  0E00               	movlw	0
 25372  003D1A  221B               	addwfc	(?_rand+1)^0,f,c
 25373  003D1C  EE20 F084          	lfsr	2,132
 25374  003D20  5024               	movf	nwkTxFrame@frame^0,w,c
 25375  003D22  26D9               	addwf	fsr2l,f,c
 25376  003D24  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25377  003D26  22DA               	addwfc	fsr2h,f,c
 25378  003D28  0060  F06B  FFDE   	movff	?_rand,postinc2
 25379  003D2E  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 25380                           
 25381                           ;../nwk/nwk_src/nwkTx.c: 149:   }
 25382  003D34  0012               	return	
 25383  003D36                     l14825:
 25384                           
 25385                           ; BSR set to: 1
 25386                           ;../nwk/nwk_src/nwkTx.c: 151:   {;../nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x88
      +                          61;
 25387  003D36  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25388  003D3C  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25389  003D42  0E61               	movlw	97
 25390  003D44  6EDE               	movwf	postinc2,c
 25391  003D46  0E88               	movlw	136
 25392  003D48  6EDD               	movwf	postdec2,c
 25393                           
 25394                           ; BSR set to: 1
 25395                           ;../nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 25396  003D4A  EE20 F084          	lfsr	2,132
 25397  003D4E  5024               	movf	nwkTxFrame@frame^0,w,c
 25398  003D50  26D9               	addwf	fsr2l,f,c
 25399  003D52  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25400  003D54  22DA               	addwfc	fsr2h,f,c
 25401  003D56  0E00               	movlw	0
 25402  003D58  6EDE               	movwf	postinc2,c
 25403  003D5A  0E00               	movlw	0
 25404  003D5C  6EDD               	movwf	postdec2,c
 25405                           
 25406                           ; BSR set to: 1
 25407  003D5E  0012               	return		;funcret
 25408  003D60                     __end_of_nwkTxFrame:
 25409                           	opt callstack 0
 25410                           
 25411 ;; *************** function _rand *****************
 25412 ;; Defined at:
 25413 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 25414 ;; Parameters:    Size  Location     Type
 25415 ;;		None
 25416 ;; Auto vars:     Size  Location     Type
 25417 ;;		None
 25418 ;; Return value:  Size  Location     Type
 25419 ;;                  2   25[COMRAM] int 
 25420 ;; Registers used:
 25421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25422 ;; Tracked objects:
 25423 ;;		On entry : 0/1
 25424 ;;		On exit  : 3F/1
 25425 ;;		Unchanged: 0/0
 25426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25429 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25430 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25431 ;;Total ram usage:       10 bytes
 25432 ;; Hardware stack levels used:    1
 25433 ;; Hardware stack levels required when called:    8
 25434 ;; This function calls:
 25435 ;;		___omul
 25436 ;; This function is called by:
 25437 ;;		_nwkTxFrame
 25438 ;;		_nwkTxBroadcastFrame
 25439 ;; This function uses a non-reentrant model
 25440 ;;
 25441                           
 25442                           	psect	text156
 25443  00504E                     __ptext156:
 25444                           	opt callstack 0
 25445  00504E                     _rand:
 25446                           	opt callstack 17
 25447                           
 25448                           ; BSR set to: 1
 25449                           ;incstack = 0
 25450  00504E  0060  F748  F002   	movff	_seed,___omul@multiplier
 25451  005054  0060  F74C  F003   	movff	_seed+1,___omul@multiplier+1
 25452  00505A  0060  F750  F004   	movff	_seed+2,___omul@multiplier+2
 25453  005060  0060  F754  F005   	movff	_seed+3,___omul@multiplier+3
 25454  005066  0060  F758  F006   	movff	_seed+4,___omul@multiplier+4
 25455  00506C  0060  F75C  F007   	movff	_seed+5,___omul@multiplier+5
 25456  005072  0060  F760  F008   	movff	_seed+6,___omul@multiplier+6
 25457  005078  0060  F764  F009   	movff	_seed+7,___omul@multiplier+7
 25458  00507E  0E2D               	movlw	45
 25459  005080  6E0A               	movwf	___omul@multiplicand^0,c
 25460  005082  0E7F               	movlw	127
 25461  005084  6E0B               	movwf	(___omul@multiplicand+1)^0,c
 25462  005086  0E95               	movlw	149
 25463  005088  6E0C               	movwf	(___omul@multiplicand+2)^0,c
 25464  00508A  0E4C               	movlw	76
 25465  00508C  6E0D               	movwf	(___omul@multiplicand+3)^0,c
 25466  00508E  0E2D               	movlw	45
 25467  005090  6E0E               	movwf	(___omul@multiplicand+4)^0,c
 25468  005092  0EF4               	movlw	244
 25469  005094  6E0F               	movwf	(___omul@multiplicand+5)^0,c
 25470  005096  0E51               	movlw	81
 25471  005098  6E10               	movwf	(___omul@multiplicand+6)^0,c
 25472  00509A  0E58               	movlw	88
 25473  00509C  6E11               	movwf	(___omul@multiplicand+7)^0,c
 25474  00509E  EC98  F035         	call	___omul	;wreg free
 25475  0050A2  0060  F008  F01C   	movff	?___omul,??_rand
 25476  0050A8  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
 25477  0050AE  0060  F010  F01E   	movff	?___omul+2,??_rand+2
 25478  0050B4  0060  F014  F01F   	movff	?___omul+3,??_rand+3
 25479  0050BA  0060  F018  F020   	movff	?___omul+4,??_rand+4
 25480  0050C0  0060  F01C  F021   	movff	?___omul+5,??_rand+5
 25481  0050C6  0060  F020  F022   	movff	?___omul+6,??_rand+6
 25482  0050CC  0060  F024  F023   	movff	?___omul+7,??_rand+7
 25483  0050D2  0E01               	movlw	1
 25484  0050D4  241C               	addwf	??_rand^0,w,c
 25485  0050D6  0101               	movlb	1	; () banked
 25486  0050D8  6FD2               	movwf	_seed& (0+255),b
 25487  0050DA  0E00               	movlw	0
 25488  0050DC  201D               	addwfc	(??_rand+1)^0,w,c
 25489  0050DE  6FD3               	movwf	(_seed+1)& (0+255),b
 25490  0050E0  0E00               	movlw	0
 25491  0050E2  201E               	addwfc	(??_rand+2)^0,w,c
 25492  0050E4  6FD4               	movwf	(_seed+2)& (0+255),b
 25493  0050E6  0E00               	movlw	0
 25494  0050E8  201F               	addwfc	(??_rand+3)^0,w,c
 25495  0050EA  6FD5               	movwf	(_seed+3)& (0+255),b
 25496  0050EC  0E00               	movlw	0
 25497  0050EE  2020               	addwfc	(??_rand+4)^0,w,c
 25498  0050F0  6FD6               	movwf	(_seed+4)& (0+255),b
 25499  0050F2  0E00               	movlw	0
 25500  0050F4  2021               	addwfc	(??_rand+5)^0,w,c
 25501  0050F6  6FD7               	movwf	(_seed+5)& (0+255),b
 25502  0050F8  0E00               	movlw	0
 25503  0050FA  2022               	addwfc	(??_rand+6)^0,w,c
 25504  0050FC  6FD8               	movwf	(_seed+6)& (0+255),b
 25505  0050FE  0E00               	movlw	0
 25506  005100  2023               	addwfc	(??_rand+7)^0,w,c
 25507  005102  6FD9               	movwf	(_seed+7)& (0+255),b
 25508                           
 25509                           ; BSR set to: 1
 25510  005104  0060  F748  F01C   	movff	_seed,??_rand
 25511  00510A  0060  F74C  F01D   	movff	_seed+1,??_rand+1
 25512  005110  0060  F750  F01E   	movff	_seed+2,??_rand+2
 25513  005116  0060  F754  F01F   	movff	_seed+3,??_rand+3
 25514  00511C  0060  F758  F020   	movff	_seed+4,??_rand+4
 25515  005122  0060  F75C  F021   	movff	_seed+5,??_rand+5
 25516  005128  0060  F760  F022   	movff	_seed+6,??_rand+6
 25517  00512E  0060  F764  F023   	movff	_seed+7,??_rand+7
 25518  005134  0E32               	movlw	50
 25519  005136  D009               	goto	u14270
 25520  005138                     u14275:
 25521  005138  90D8               	bcf	status,0,c
 25522  00513A  3223               	rrcf	(??_rand+7)^0,f,c
 25523  00513C  3222               	rrcf	(??_rand+6)^0,f,c
 25524  00513E  3221               	rrcf	(??_rand+5)^0,f,c
 25525  005140  3220               	rrcf	(??_rand+4)^0,f,c
 25526  005142  321F               	rrcf	(??_rand+3)^0,f,c
 25527  005144  321E               	rrcf	(??_rand+2)^0,f,c
 25528  005146  321D               	rrcf	(??_rand+1)^0,f,c
 25529  005148  321C               	rrcf	??_rand^0,f,c
 25530  00514A                     u14270:
 25531  00514A  2EE8               	decfsz	wreg,f,c
 25532  00514C  D7F5               	goto	u14275
 25533  00514E  0060  F070  F01A   	movff	??_rand,?_rand
 25534  005154  0060  F078  F01B   	movff	??_rand+2,?_rand+1
 25535                           
 25536                           ; BSR set to: 1
 25537  00515A  0012               	return		;funcret
 25538  00515C                     __end_of_rand:
 25539                           	opt callstack 0
 25540                           
 25541 ;; *************** function ___omul *****************
 25542 ;; Defined at:
 25543 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 25544 ;; Parameters:    Size  Location     Type
 25545 ;;  multiplier      8    1[COMRAM] unsigned long long 
 25546 ;;  multiplicand    8    9[COMRAM] unsigned long long 
 25547 ;; Auto vars:     Size  Location     Type
 25548 ;;  product         8   17[COMRAM] unsigned long long 
 25549 ;; Return value:  Size  Location     Type
 25550 ;;                  8    1[COMRAM] unsigned long long 
 25551 ;; Registers used:
 25552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25553 ;; Tracked objects:
 25554 ;;		On entry : 0/1
 25555 ;;		On exit  : 0/0
 25556 ;;		Unchanged: 0/0
 25557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25558 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25559 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25561 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25562 ;;Total ram usage:       24 bytes
 25563 ;; Hardware stack levels used:    1
 25564 ;; Hardware stack levels required when called:    7
 25565 ;; This function calls:
 25566 ;;		Nothing
 25567 ;; This function is called by:
 25568 ;;		_rand
 25569 ;; This function uses a non-reentrant model
 25570 ;;
 25571                           
 25572                           	psect	text157
 25573  006B30                     __ptext157:
 25574                           	opt callstack 0
 25575  006B30                     ___omul:
 25576                           	opt callstack 17
 25577                           
 25578                           ; BSR set to: 1
 25579                           ;incstack = 0
 25580  006B30  EE20  F012         	lfsr	2,___omul@product
 25581  006B34  0E07               	movlw	7
 25582  006B36                     u14101:
 25583  006B36  6ADE               	clrf	postinc2,c
 25584  006B38  06E8               	decf	wreg,f,c
 25585  006B3A  E2FD               	bc	u14101
 25586  006B3C                     l14559:
 25587  006B3C  A002               	btfss	___omul@multiplier^0,0,c
 25588  006B3E  D010               	goto	l14563
 25589  006B40  500A               	movf	___omul@multiplicand^0,w,c
 25590  006B42  2612               	addwf	___omul@product^0,f,c
 25591  006B44  500B               	movf	(___omul@multiplicand+1)^0,w,c
 25592  006B46  2213               	addwfc	(___omul@product+1)^0,f,c
 25593  006B48  500C               	movf	(___omul@multiplicand+2)^0,w,c
 25594  006B4A  2214               	addwfc	(___omul@product+2)^0,f,c
 25595  006B4C  500D               	movf	(___omul@multiplicand+3)^0,w,c
 25596  006B4E  2215               	addwfc	(___omul@product+3)^0,f,c
 25597  006B50  500E               	movf	(___omul@multiplicand+4)^0,w,c
 25598  006B52  2216               	addwfc	(___omul@product+4)^0,f,c
 25599  006B54  500F               	movf	(___omul@multiplicand+5)^0,w,c
 25600  006B56  2217               	addwfc	(___omul@product+5)^0,f,c
 25601  006B58  5010               	movf	(___omul@multiplicand+6)^0,w,c
 25602  006B5A  2218               	addwfc	(___omul@product+6)^0,f,c
 25603  006B5C  5011               	movf	(___omul@multiplicand+7)^0,w,c
 25604  006B5E  2219               	addwfc	(___omul@product+7)^0,f,c
 25605  006B60                     l14563:
 25606  006B60  90D8               	bcf	status,0,c
 25607  006B62  360A               	rlcf	___omul@multiplicand^0,f,c
 25608  006B64  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 25609  006B66  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 25610  006B68  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 25611  006B6A  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 25612  006B6C  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 25613  006B6E  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 25614  006B70  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 25615  006B72  90D8               	bcf	status,0,c
 25616  006B74  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 25617  006B76  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 25618  006B78  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 25619  006B7A  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 25620  006B7C  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 25621  006B7E  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 25622  006B80  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 25623  006B82  3202               	rrcf	___omul@multiplier^0,f,c
 25624  006B84  5002               	movf	___omul@multiplier^0,w,c
 25625  006B86  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 25626  006B88  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 25627  006B8A  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 25628  006B8C  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 25629  006B8E  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 25630  006B90  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 25631  006B92  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 25632  006B94  A4D8               	btfss	status,2,c
 25633  006B96  D7D2               	goto	l14559
 25634  006B98  0060  F048  F002   	movff	___omul@product,?___omul
 25635  006B9E  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 25636  006BA4  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 25637  006BAA  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 25638  006BB0  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 25639  006BB6  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 25640  006BBC  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 25641  006BC2  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 25642  006BC8  0012               	return		;funcret
 25643  006BCA                     __end_of___omul:
 25644                           	opt callstack 0
 25645                           
 25646 ;; *************** function _nwkRoutePrepareTx *****************
 25647 ;; Defined at:
 25648 ;;		line 264 in file "../nwk/nwk_src/nwkRoute.c"
 25649 ;; Parameters:    Size  Location     Type
 25650 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 25651 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25652 ;; Auto vars:     Size  Location     Type
 25653 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 25654 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25655 ;; Return value:  Size  Location     Type
 25656 ;;                  1    wreg      void 
 25657 ;; Registers used:
 25658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25659 ;; Tracked objects:
 25660 ;;		On entry : 0/1
 25661 ;;		On exit  : 0/0
 25662 ;;		Unchanged: 0/0
 25663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25668 ;;Total ram usage:        6 bytes
 25669 ;; Hardware stack levels used:    1
 25670 ;; Hardware stack levels required when called:    9
 25671 ;; This function calls:
 25672 ;;		_NWK_GroupIsMember
 25673 ;;		_NWK_RouteNextHop
 25674 ;; This function is called by:
 25675 ;;		_nwkTxFrame
 25676 ;; This function uses a non-reentrant model
 25677 ;;
 25678                           
 25679                           	psect	text158
 25680  00515C                     __ptext158:
 25681                           	opt callstack 0
 25682  00515C                     _nwkRoutePrepareTx:
 25683                           	opt callstack 15
 25684                           
 25685                           ;../nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 265: {;../nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 25686                           
 25687                           ;incstack = 0
 25688  00515C  0E02               	movlw	2
 25689  00515E  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 25690  005160  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 25691  005162  0E00               	movlw	0
 25692  005164  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 25693  005166  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 25694                           
 25695                           ;../nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 25696  005168  EE20 F00D          	lfsr	2,13
 25697  00516C  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25698  00516E  26D9               	addwf	fsr2l,f,c
 25699  005170  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25700  005172  22DA               	addwfc	fsr2h,f,c
 25701  005174  28DE               	incf	postinc2,w,c
 25702  005176  E10E               	bnz	l14611
 25703  005178  28DE               	incf	postinc2,w,c
 25704  00517A  A4D8               	btfss	status,2,c
 25705  00517C  D00B               	goto	l14611
 25706                           
 25707                           ;../nwk/nwk_src/nwkRoute.c: 269:   {;../nwk/nwk_src/nwkRoute.c: 270:     header->macDstA
      +                          ddr = 0xffff;
 25708  00517E  EE20 F005          	lfsr	2,5
 25709  005182  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25710  005184  26D9               	addwf	fsr2l,f,c
 25711  005186  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25712  005188  22DA               	addwfc	fsr2h,f,c
 25713  00518A  0EFF               	movlw	255
 25714  00518C  6EDE               	movwf	postinc2,c
 25715  00518E  0EFF               	movlw	255
 25716  005190  6EDD               	movwf	postdec2,c
 25717                           
 25718                           ;../nwk/nwk_src/nwkRoute.c: 271:   }
 25719  005192  0012               	return	
 25720  005194                     l14611:
 25721  005194  EE20 F009          	lfsr	2,9
 25722  005198  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25723  00519A  26D9               	addwf	fsr2l,f,c
 25724  00519C  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25725  00519E  22DA               	addwfc	fsr2h,f,c
 25726  0051A0  A4DF               	btfss	indf2,2,c
 25727  0051A2  D013               	goto	l14615
 25728                           
 25729                           ;../nwk/nwk_src/nwkRoute.c: 274:   {;../nwk/nwk_src/nwkRoute.c: 275:     header->macDstA
      +                          ddr = header->nwkDstAddr;
 25730  0051A4  EE20 F00D          	lfsr	2,13
 25731  0051A8  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25732  0051AA  26D9               	addwf	fsr2l,f,c
 25733  0051AC  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25734  0051AE  22DA               	addwfc	fsr2h,f,c
 25735  0051B0  EE10 F005          	lfsr	1,5
 25736  0051B4  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25737  0051B6  26E1               	addwf	fsr1l,f,c
 25738  0051B8  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25739  0051BA  22E2               	addwfc	fsr1h,f,c
 25740  0051BC  006F FF7B FFE6     	movff	postinc2,postinc1
 25741  0051C2  006F FF77 FFE5     	movff	postdec2,postdec1
 25742                           
 25743                           ;../nwk/nwk_src/nwkRoute.c: 276:   }
 25744  0051C8  0012               	return	
 25745  0051CA                     l14615:
 25746  0051CA  EE20 F009          	lfsr	2,9
 25747  0051CE  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25748  0051D0  26D9               	addwf	fsr2l,f,c
 25749  0051D2  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25750  0051D4  22DA               	addwfc	fsr2h,f,c
 25751  0051D6  A6DF               	btfss	indf2,3,c
 25752  0051D8  D023               	goto	l14621
 25753  0051DA  EE20 F00D          	lfsr	2,13
 25754  0051DE  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25755  0051E0  26D9               	addwf	fsr2l,f,c
 25756  0051E2  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25757  0051E4  22DA               	addwfc	fsr2h,f,c
 25758  0051E6  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 25759  0051EC  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 25760  0051F2  EC23  F043         	call	_NWK_GroupIsMember	;wreg free
 25761  0051F6  0900               	iorlw	0
 25762  0051F8  B4D8               	btfsc	status,2,c
 25763  0051FA  D012               	goto	l14621
 25764                           
 25765                           ;../nwk/nwk_src/nwkRoute.c: 280:   {;../nwk/nwk_src/nwkRoute.c: 281:     header->macDstA
      +                          ddr = 0xffff;
 25766  0051FC  EE20 F005          	lfsr	2,5
 25767  005200  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25768  005202  26D9               	addwf	fsr2l,f,c
 25769  005204  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25770  005206  22DA               	addwfc	fsr2h,f,c
 25771  005208  0EFF               	movlw	255
 25772  00520A  6EDE               	movwf	postinc2,c
 25773  00520C  0EFF               	movlw	255
 25774  00520E  6EDD               	movwf	postdec2,c
 25775                           
 25776                           ;../nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 25777  005210  EE20 F009          	lfsr	2,9
 25778  005214  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25779  005216  26D9               	addwf	fsr2l,f,c
 25780  005218  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25781  00521A  22DA               	addwfc	fsr2h,f,c
 25782  00521C  84DF               	bsf	indf2,2,c
 25783                           
 25784                           ;../nwk/nwk_src/nwkRoute.c: 283:   }
 25785  00521E  0012               	return	
 25786  005220                     l14621:
 25787                           
 25788                           ;../nwk/nwk_src/nwkRoute.c: 287:   {;../nwk/nwk_src/nwkRoute.c: 288:     header->macDstA
      +                          ddr = NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 25789  005220  EE20 F00D          	lfsr	2,13
 25790  005224  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25791  005226  26D9               	addwf	fsr2l,f,c
 25792  005228  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25793  00522A  22DA               	addwfc	fsr2h,f,c
 25794  00522C  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 25795  005232  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 25796  005238  EE20 F009          	lfsr	2,9
 25797  00523C  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25798  00523E  26D9               	addwf	fsr2l,f,c
 25799  005240  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25800  005242  22DA               	addwfc	fsr2h,f,c
 25801  005244  0E00               	movlw	0
 25802  005246  B6DF               	btfsc	indf2,3,c
 25803  005248  0E01               	movlw	1
 25804  00524A  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 25805  00524C  EC00  F03F         	call	_NWK_RouteNextHop	;wreg free
 25806  005250  EE20 F005          	lfsr	2,5
 25807  005254  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 25808  005256  26D9               	addwf	fsr2l,f,c
 25809  005258  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 25810  00525A  22DA               	addwfc	fsr2h,f,c
 25811  00525C  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 25812  005262  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 25813  005268  0012               	return		;funcret
 25814  00526A                     __end_of_nwkRoutePrepareTx:
 25815                           	opt callstack 0
 25816                           
 25817 ;; *************** function _NWK_RouteNextHop *****************
 25818 ;; Defined at:
 25819 ;;		line 144 in file "../nwk/nwk_src/nwkRoute.c"
 25820 ;; Parameters:    Size  Location     Type
 25821 ;;  dst             2    7[COMRAM] unsigned short 
 25822 ;;  multicast       1    9[COMRAM] unsigned char 
 25823 ;; Auto vars:     Size  Location     Type
 25824 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 25825 ;;		 -> nwkRouteTable(70), NULL(0), 
 25826 ;; Return value:  Size  Location     Type
 25827 ;;                  2    7[COMRAM] unsigned short 
 25828 ;; Registers used:
 25829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25830 ;; Tracked objects:
 25831 ;;		On entry : 0/1
 25832 ;;		On exit  : 0/0
 25833 ;;		Unchanged: 0/0
 25834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25835 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25838 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25839 ;;Total ram usage:        5 bytes
 25840 ;; Hardware stack levels used:    1
 25841 ;; Hardware stack levels required when called:    8
 25842 ;; This function calls:
 25843 ;;		_NWK_RouteFindEntry
 25844 ;; This function is called by:
 25845 ;;		_nwkRoutePrepareTx
 25846 ;;		_nwkRouteFrame
 25847 ;; This function uses a non-reentrant model
 25848 ;;
 25849                           
 25850                           	psect	text159
 25851  007E00                     __ptext159:
 25852                           	opt callstack 0
 25853  007E00                     _NWK_RouteNextHop:
 25854                           	opt callstack 15
 25855                           
 25856                           ;../nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multica
      +                          st);../nwk/nwk_src/nwkRoute.c: 145: {;../nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEn
      +                          try_t *entry;;../nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicas
      +                          t);
 25857                           
 25858                           ;incstack = 0
 25859  007E00  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 25860  007E06  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 25861  007E0C  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 25862  007E12  EC32  F03B         	call	_NWK_RouteFindEntry	;wreg free
 25863  007E16  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 25864  007E1C  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 25865                           
 25866                           ;../nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 25867  007E22  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 25868  007E24  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 25869  007E26  B4D8               	btfsc	status,2,c
 25870  007E28  D00D               	goto	l1913
 25871                           
 25872                           ;../nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 25873  007E2A  EE20 F003          	lfsr	2,3
 25874  007E2E  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 25875  007E30  26D9               	addwf	fsr2l,f,c
 25876  007E32  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 25877  007E34  22DA               	addwfc	fsr2h,f,c
 25878  007E36  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 25879  007E3C  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 25880  007E42  0012               	return	
 25881  007E44                     l1913:
 25882                           
 25883                           ;../nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 25884  007E44  6808               	setf	?_NWK_RouteNextHop^0,c
 25885  007E46  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 25886  007E48  0012               	return		;funcret
 25887  007E4A                     __end_of_NWK_RouteNextHop:
 25888                           	opt callstack 0
 25889                           
 25890 ;; *************** function _NWK_RouteFindEntry *****************
 25891 ;; Defined at:
 25892 ;;		line 91 in file "../nwk/nwk_src/nwkRoute.c"
 25893 ;; Parameters:    Size  Location     Type
 25894 ;;  dst             2    1[COMRAM] unsigned short 
 25895 ;;  multicast       1    3[COMRAM] unsigned char 
 25896 ;; Auto vars:     Size  Location     Type
 25897 ;;  i               1    6[COMRAM] unsigned char 
 25898 ;; Return value:  Size  Location     Type
 25899 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 25900 ;; Registers used:
 25901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25902 ;; Tracked objects:
 25903 ;;		On entry : 0/1
 25904 ;;		On exit  : 0/0
 25905 ;;		Unchanged: 0/0
 25906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25907 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25911 ;;Total ram usage:        6 bytes
 25912 ;; Hardware stack levels used:    1
 25913 ;; Hardware stack levels required when called:    7
 25914 ;; This function calls:
 25915 ;;		Nothing
 25916 ;; This function is called by:
 25917 ;;		_NWK_RouteNextHop
 25918 ;;		_nwkRouteRemove
 25919 ;;		_nwkRouteFrameReceived
 25920 ;;		_nwkRouteFrameSent
 25921 ;; This function uses a non-reentrant model
 25922 ;;
 25923                           
 25924                           	psect	text160
 25925  007664                     __ptext160:
 25926                           	opt callstack 0
 25927  007664                     _NWK_RouteFindEntry:
 25928                           	opt callstack 19
 25929                           
 25930                           ;../nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, 
      +                          uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 92: {;../nwk/nwk_src/nwkRoute.c: 93:   for
      +                           (uint8_t i = 0; i < 10; i++)
 25931                           
 25932                           ;incstack = 0
 25933  007664  0E00               	movlw	0
 25934  007666  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 25935  007668                     l14331:
 25936                           
 25937                           ;../nwk/nwk_src/nwkRoute.c: 94:   {;../nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable
      +                          [i].dstAddr == dst &&
 25938  007668  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25939  00766A  0D07               	mullw	7
 25940  00766C  0E85               	movlw	low (_nwkRouteTable+1)
 25941  00766E  24F3               	addwf	243,w,c
 25942  007670  6ED9               	movwf	fsr2l,c
 25943  007672  0E02               	movlw	high (_nwkRouteTable+1)
 25944  007674  20F4               	addwfc	prodh,w,c
 25945  007676  6EDA               	movwf	fsr2h,c
 25946  007678  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 25947  00767A  18DE               	xorwf	postinc2,w,c
 25948  00767C  E11E               	bnz	l14339
 25949  00767E  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 25950  007680  18DE               	xorwf	postinc2,w,c
 25951  007682  A4D8               	btfss	status,2,c
 25952  007684  D01A               	goto	l14339
 25953  007686  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25954  007688  0D07               	mullw	7
 25955  00768A  0E84               	movlw	low _nwkRouteTable
 25956  00768C  24F3               	addwf	243,w,c
 25957  00768E  6ED9               	movwf	fsr2l,c
 25958  007690  0E02               	movlw	high _nwkRouteTable
 25959  007692  20F4               	addwfc	prodh,w,c
 25960  007694  6EDA               	movwf	fsr2h,c
 25961  007696  0102               	movlb	2	; () banked
 25962  007698  A2DF               	btfss	indf2,1,c
 25963  00769A  D002               	goto	u13820
 25964  00769C  0E01               	movlw	1
 25965  00769E  D001               	goto	u13826
 25966  0076A0                     u13820:
 25967  0076A0  0E00               	movlw	0
 25968  0076A2                     u13826:
 25969  0076A2  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 25970  0076A4  A4D8               	btfss	status,2,c
 25971  0076A6  D009               	goto	l14339
 25972                           
 25973                           ; BSR set to: 2
 25974                           ;../nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 25975  0076A8  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 25976  0076AA  0D07               	mullw	7
 25977  0076AC  0E84               	movlw	low _nwkRouteTable
 25978  0076AE  24F3               	addwf	243,w,c
 25979  0076B0  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 25980  0076B2  0E02               	movlw	high _nwkRouteTable
 25981  0076B4  20F4               	addwfc	prodh,w,c
 25982  0076B6  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 25983  0076B8  0012               	return	
 25984  0076BA                     l14339:
 25985                           
 25986                           ;../nwk/nwk_src/nwkRoute.c: 98:   }
 25987  0076BA  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 25988  0076BC  0E09               	movlw	9
 25989  0076BE  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 25990  0076C0  D7D3               	goto	l14331
 25991                           
 25992                           ;../nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 25993  0076C2  0E00               	movlw	0
 25994  0076C4  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 25995  0076C6  0E00               	movlw	0
 25996  0076C8  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 25997  0076CA  0012               	return		;funcret
 25998  0076CC                     __end_of_NWK_RouteFindEntry:
 25999                           	opt callstack 0
 26000                           
 26001 ;; *************** function _NWK_GroupIsMember *****************
 26002 ;; Defined at:
 26003 ;;		line 101 in file "../nwk/nwk_src/nwkGroup.c"
 26004 ;; Parameters:    Size  Location     Type
 26005 ;;  group           2    1[COMRAM] unsigned short 
 26006 ;; Auto vars:     Size  Location     Type
 26007 ;;  i               1    5[COMRAM] unsigned char 
 26008 ;; Return value:  Size  Location     Type
 26009 ;;                  1    wreg      _Bool 
 26010 ;; Registers used:
 26011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26012 ;; Tracked objects:
 26013 ;;		On entry : 0/1
 26014 ;;		On exit  : 0/0
 26015 ;;		Unchanged: 0/0
 26016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26020 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26021 ;;Total ram usage:        5 bytes
 26022 ;; Hardware stack levels used:    1
 26023 ;; Hardware stack levels required when called:    7
 26024 ;; This function calls:
 26025 ;;		Nothing
 26026 ;; This function is called by:
 26027 ;;		_nwkRoutePrepareTx
 26028 ;;		_nwkRxHandleReceivedFrame
 26029 ;; This function uses a non-reentrant model
 26030 ;;
 26031                           
 26032                           	psect	text161
 26033  008646                     __ptext161:
 26034                           	opt callstack 0
 26035  008646                     _NWK_GroupIsMember:
 26036                           	opt callstack 19
 26037                           
 26038                           ;../nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);../nwk/nwk_src/
      +                          nwkGroup.c: 102: {;../nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 26039                           
 26040                           ;incstack = 0
 26041  008646  0E00               	movlw	0
 26042  008648  6E06               	movwf	NWK_GroupIsMember@i^0,c
 26043  00864A                     l14515:
 26044                           
 26045                           ;../nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 26046  00864A  5006               	movf	NWK_GroupIsMember@i^0,w,c
 26047  00864C  0D02               	mullw	2
 26048  00864E  0E00               	movlw	low _nwkGroups
 26049  008650  24F3               	addwf	243,w,c
 26050  008652  6ED9               	movwf	fsr2l,c
 26051  008654  0E02               	movlw	high _nwkGroups
 26052  008656  20F4               	addwfc	prodh,w,c
 26053  008658  6EDA               	movwf	fsr2h,c
 26054  00865A  5002               	movf	NWK_GroupIsMember@group^0,w,c
 26055  00865C  18DE               	xorwf	postinc2,w,c
 26056  00865E  E106               	bnz	l14521
 26057  008660  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 26058  008662  18DE               	xorwf	postinc2,w,c
 26059  008664  A4D8               	btfss	status,2,c
 26060  008666  D002               	goto	l14521
 26061                           
 26062                           ;../nwk/nwk_src/nwkGroup.c: 105:       return 1;
 26063  008668  0E01               	movlw	1
 26064  00866A  0012               	return	
 26065  00866C                     l14521:
 26066  00866C  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 26067  00866E  0E09               	movlw	9
 26068  008670  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 26069  008672  D7EB               	goto	l14515
 26070                           
 26071                           ;../nwk/nwk_src/nwkGroup.c: 106:   return 0;
 26072  008674  0E00               	movlw	0
 26073  008676  0012               	return		;funcret
 26074  008678                     __end_of_NWK_GroupIsMember:
 26075                           	opt callstack 0
 26076                           
 26077 ;; *************** function _nwkFrameAlloc *****************
 26078 ;; Defined at:
 26079 ;;		line 80 in file "../nwk/nwk_src/nwkFrame.c"
 26080 ;; Parameters:    Size  Location     Type
 26081 ;;		None
 26082 ;; Auto vars:     Size  Location     Type
 26083 ;;  i               1   17[COMRAM] unsigned char 
 26084 ;; Return value:  Size  Location     Type
 26085 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 26086 ;; Registers used:
 26087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26088 ;; Tracked objects:
 26089 ;;		On entry : 0/1
 26090 ;;		On exit  : 0/0
 26091 ;;		Unchanged: 0/0
 26092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26096 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26097 ;;Total ram usage:        5 bytes
 26098 ;; Hardware stack levels used:    1
 26099 ;; Hardware stack levels required when called:    8
 26100 ;; This function calls:
 26101 ;;		_memset
 26102 ;; This function is called by:
 26103 ;;		_nwkDataReqSendFrame
 26104 ;;		_nwkRouteSendRouteError
 26105 ;;		_PHY_DataInd
 26106 ;;		_nwkRxSendAck
 26107 ;;		_nwkTxBroadcastFrame
 26108 ;; This function uses a non-reentrant model
 26109 ;;
 26110                           
 26111                           	psect	text162
 26112  0065E0                     __ptext162:
 26113                           	opt callstack 0
 26114  0065E0                     _nwkFrameAlloc:
 26115                           	opt callstack 17
 26116                           
 26117                           ;../nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 26118                           
 26119                           ;incstack = 0
 26120  0065E0  0E00               	movlw	0
 26121  0065E2  6E12               	movwf	nwkFrameAlloc@i^0,c
 26122  0065E4                     l14771:
 26123                           
 26124                           ;../nwk/nwk_src/nwkFrame.c: 83:   {;../nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STA
      +                          TE_FREE == nwkFrameFrames[i].state)
 26125  0065E4  5012               	movf	nwkFrameAlloc@i^0,w,c
 26126  0065E6  0D89               	mullw	137
 26127  0065E8  0EBD               	movlw	low _nwkFrameFrames
 26128  0065EA  24F3               	addwf	243,w,c
 26129  0065EC  6ED9               	movwf	fsr2l,c
 26130  0065EE  0E05               	movlw	high _nwkFrameFrames
 26131  0065F0  20F4               	addwfc	prodh,w,c
 26132  0065F2  6EDA               	movwf	fsr2h,c
 26133  0065F4  50DF               	movf	indf2,w,c
 26134  0065F6  A4D8               	btfss	status,2,c
 26135  0065F8  D044               	goto	l14785
 26136                           
 26137                           ;../nwk/nwk_src/nwkFrame.c: 85:     {;../nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFr
      +                          ameFrames[i], 0, sizeof(NwkFrame_t));
 26138  0065FA  5012               	movf	nwkFrameAlloc@i^0,w,c
 26139  0065FC  0D89               	mullw	137
 26140  0065FE  0EBD               	movlw	low _nwkFrameFrames
 26141  006600  24F3               	addwf	243,w,c
 26142  006602  6E02               	movwf	memset@dest^0,c
 26143  006604  0E05               	movlw	high _nwkFrameFrames
 26144  006606  20F4               	addwfc	prodh,w,c
 26145  006608  6E03               	movwf	(memset@dest+1)^0,c
 26146  00660A  0E00               	movlw	0
 26147  00660C  6E05               	movwf	(memset@c+1)^0,c
 26148  00660E  0E00               	movlw	0
 26149  006610  6E04               	movwf	memset@c^0,c
 26150  006612  0E00               	movlw	0
 26151  006614  6E07               	movwf	(memset@n+1)^0,c
 26152  006616  0E89               	movlw	137
 26153  006618  6E06               	movwf	memset@n^0,c
 26154  00661A  EC32  F022         	call	_memset	;wreg free
 26155                           
 26156                           ;../nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 26157  00661E  5012               	movf	nwkFrameAlloc@i^0,w,c
 26158  006620  0D89               	mullw	137
 26159  006622  0EBE               	movlw	low (_nwkFrameFrames+1)
 26160  006624  24F3               	addwf	243,w,c
 26161  006626  6ED9               	movwf	fsr2l,c
 26162  006628  0E05               	movlw	high (_nwkFrameFrames+1)
 26163  00662A  20F4               	addwfc	prodh,w,c
 26164  00662C  6EDA               	movwf	fsr2h,c
 26165  00662E  0E10               	movlw	16
 26166  006630  6EDF               	movwf	indf2,c
 26167                           
 26168                           ;../nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data
      +                           + sizeof(NwkFrameHeader_t);
 26169  006632  5012               	movf	nwkFrameAlloc@i^0,w,c
 26170  006634  0D89               	mullw	137
 26171  006636  0EBD               	movlw	low _nwkFrameFrames
 26172  006638  6E10               	movwf	??_nwkFrameAlloc^0,c
 26173  00663A  0E05               	movlw	high _nwkFrameFrames
 26174  00663C  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 26175  00663E  0E12               	movlw	18
 26176  006640  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26177  006642  0E00               	movlw	0
 26178  006644  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26179  006646  50F3               	movf	243,w,c
 26180  006648  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26181  00664A  50F4               	movf	244,w,c
 26182  00664C  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26183  00664E  5012               	movf	nwkFrameAlloc@i^0,w,c
 26184  006650  0D89               	mullw	137
 26185  006652  0E3E               	movlw	low (_nwkFrameFrames+129)
 26186  006654  24F3               	addwf	243,w,c
 26187  006656  6ED9               	movwf	fsr2l,c
 26188  006658  0E06               	movlw	high (_nwkFrameFrames+129)
 26189  00665A  20F4               	addwfc	prodh,w,c
 26190  00665C  6EDA               	movwf	fsr2h,c
 26191  00665E  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 26192  006664  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 26193                           
 26194                           ;../nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 26195  00666A  0101               	movlb	1	; () banked
 26196  00666C  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 26197  00666E  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 26198                           
 26199                           ; BSR set to: 1
 26200                           ;../nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 26201  006670  5012               	movf	nwkFrameAlloc@i^0,w,c
 26202  006672  0D89               	mullw	137
 26203  006674  0EBD               	movlw	low _nwkFrameFrames
 26204  006676  24F3               	addwf	243,w,c
 26205  006678  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26206  00667A  0E05               	movlw	high _nwkFrameFrames
 26207  00667C  20F4               	addwfc	prodh,w,c
 26208  00667E  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26209  006680  0012               	return	
 26210  006682                     l14785:
 26211                           
 26212                           ;../nwk/nwk_src/nwkFrame.c: 92:   }
 26213  006682  2A12               	incf	nwkFrameAlloc@i^0,f,c
 26214  006684  0E04               	movlw	4
 26215  006686  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 26216  006688  D7AD               	goto	l14771
 26217                           
 26218                           ;../nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 26219  00668A  0E00               	movlw	0
 26220  00668C  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26221  00668E  0E00               	movlw	0
 26222  006690  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26223  006692  0012               	return		;funcret
 26224  006694                     __end_of_nwkFrameAlloc:
 26225                           	opt callstack 0
 26226                           
 26227 ;; *************** function _memset *****************
 26228 ;; Defined at:
 26229 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 26230 ;; Parameters:    Size  Location     Type
 26231 ;;  dest            2    1[COMRAM] PTR void 
 26232 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 26233 ;;		 -> appDataInd@data(65), 
 26234 ;;  c               2    3[COMRAM] int 
 26235 ;;  n               2    5[COMRAM] unsigned int 
 26236 ;; Auto vars:     Size  Location     Type
 26237 ;;  s               2   11[COMRAM] PTR unsigned char 
 26238 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer(524), 
 26239 ;;		 -> appDataInd@data(65), 
 26240 ;;  k               2    9[COMRAM] unsigned int 
 26241 ;; Return value:  Size  Location     Type
 26242 ;;                  2    1[COMRAM] PTR void 
 26243 ;; Registers used:
 26244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26245 ;; Tracked objects:
 26246 ;;		On entry : 0/0
 26247 ;;		On exit  : 0/0
 26248 ;;		Unchanged: 0/0
 26249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26250 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26251 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26253 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26254 ;;Total ram usage:       12 bytes
 26255 ;; Hardware stack levels used:    1
 26256 ;; Hardware stack levels required when called:    7
 26257 ;; This function calls:
 26258 ;;		Nothing
 26259 ;; This function is called by:
 26260 ;;		_appDataInd
 26261 ;;		_cmdSend
 26262 ;;		_cmdBcast
 26263 ;;		_cmdSetTX
 26264 ;;		_processATCommand
 26265 ;;		_nwkFrameAlloc
 26266 ;; This function uses a non-reentrant model
 26267 ;;
 26268                           
 26269                           	psect	text163
 26270  004464                     __ptext163:
 26271                           	opt callstack 0
 26272  004464                     _memset:
 26273                           	opt callstack 22
 26274                           
 26275                           ;incstack = 0
 26276  004464  0060  F008  F00C   	movff	memset@dest,memset@s
 26277  00446A  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 26278  004470  5006               	movf	memset@n^0,w,c
 26279  004472  1007               	iorwf	(memset@n+1)^0,w,c
 26280  004474  B4D8               	btfsc	status,2,c
 26281  004476  0012               	return	
 26282  004478  0060  F033  FFD9   	movff	memset@s,fsr2l
 26283  00447E  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26284  004484  0060  F013  FFDF   	movff	memset@c,indf2
 26285  00448A  5006               	movf	memset@n^0,w,c
 26286  00448C  240C               	addwf	memset@s^0,w,c
 26287  00448E  6E08               	movwf	??_memset^0,c
 26288  004490  5007               	movf	(memset@n+1)^0,w,c
 26289  004492  200D               	addwfc	(memset@s+1)^0,w,c
 26290  004494  6E09               	movwf	(??_memset+1)^0,c
 26291  004496  0EFF               	movlw	255
 26292  004498  2408               	addwf	??_memset^0,w,c
 26293  00449A  6ED9               	movwf	fsr2l,c
 26294  00449C  0EFF               	movlw	255
 26295  00449E  2009               	addwfc	(??_memset+1)^0,w,c
 26296  0044A0  6EDA               	movwf	fsr2h,c
 26297  0044A2  0060  F013  FFDF   	movff	memset@c,indf2
 26298  0044A8  5007               	movf	(memset@n+1)^0,w,c
 26299  0044AA  E104               	bnz	l14577
 26300  0044AC  0E03               	movlw	3
 26301  0044AE  5C06               	subwf	memset@n^0,w,c
 26302  0044B0  A0D8               	btfss	status,0,c
 26303  0044B2  0012               	return	
 26304  0044B4                     l14577:
 26305  0044B4  EE20 F001          	lfsr	2,1
 26306  0044B8  500C               	movf	memset@s^0,w,c
 26307  0044BA  26D9               	addwf	fsr2l,f,c
 26308  0044BC  500D               	movf	(memset@s+1)^0,w,c
 26309  0044BE  22DA               	addwfc	fsr2h,f,c
 26310  0044C0  0060  F013  FFDF   	movff	memset@c,indf2
 26311  0044C6  EE20 F002          	lfsr	2,2
 26312  0044CA  500C               	movf	memset@s^0,w,c
 26313  0044CC  26D9               	addwf	fsr2l,f,c
 26314  0044CE  500D               	movf	(memset@s+1)^0,w,c
 26315  0044D0  22DA               	addwfc	fsr2h,f,c
 26316  0044D2  0060  F013  FFDF   	movff	memset@c,indf2
 26317  0044D8  5006               	movf	memset@n^0,w,c
 26318  0044DA  240C               	addwf	memset@s^0,w,c
 26319  0044DC  6E08               	movwf	??_memset^0,c
 26320  0044DE  5007               	movf	(memset@n+1)^0,w,c
 26321  0044E0  200D               	addwfc	(memset@s+1)^0,w,c
 26322  0044E2  6E09               	movwf	(??_memset+1)^0,c
 26323  0044E4  0EFE               	movlw	254
 26324  0044E6  2408               	addwf	??_memset^0,w,c
 26325  0044E8  6ED9               	movwf	fsr2l,c
 26326  0044EA  0EFF               	movlw	255
 26327  0044EC  2009               	addwfc	(??_memset+1)^0,w,c
 26328  0044EE  6EDA               	movwf	fsr2h,c
 26329  0044F0  0060  F013  FFDF   	movff	memset@c,indf2
 26330  0044F6  5006               	movf	memset@n^0,w,c
 26331  0044F8  240C               	addwf	memset@s^0,w,c
 26332  0044FA  6E08               	movwf	??_memset^0,c
 26333  0044FC  5007               	movf	(memset@n+1)^0,w,c
 26334  0044FE  200D               	addwfc	(memset@s+1)^0,w,c
 26335  004500  6E09               	movwf	(??_memset+1)^0,c
 26336  004502  0EFD               	movlw	253
 26337  004504  2408               	addwf	??_memset^0,w,c
 26338  004506  6ED9               	movwf	fsr2l,c
 26339  004508  0EFF               	movlw	255
 26340  00450A  2009               	addwfc	(??_memset+1)^0,w,c
 26341  00450C  6EDA               	movwf	fsr2h,c
 26342  00450E  0060  F013  FFDF   	movff	memset@c,indf2
 26343  004514  5007               	movf	(memset@n+1)^0,w,c
 26344  004516  E104               	bnz	l14583
 26345  004518  0E07               	movlw	7
 26346  00451A  5C06               	subwf	memset@n^0,w,c
 26347  00451C  A0D8               	btfss	status,0,c
 26348  00451E  0012               	return	
 26349  004520                     l14583:
 26350  004520  EE20 F003          	lfsr	2,3
 26351  004524  500C               	movf	memset@s^0,w,c
 26352  004526  26D9               	addwf	fsr2l,f,c
 26353  004528  500D               	movf	(memset@s+1)^0,w,c
 26354  00452A  22DA               	addwfc	fsr2h,f,c
 26355  00452C  0060  F013  FFDF   	movff	memset@c,indf2
 26356  004532  5006               	movf	memset@n^0,w,c
 26357  004534  240C               	addwf	memset@s^0,w,c
 26358  004536  6E08               	movwf	??_memset^0,c
 26359  004538  5007               	movf	(memset@n+1)^0,w,c
 26360  00453A  200D               	addwfc	(memset@s+1)^0,w,c
 26361  00453C  6E09               	movwf	(??_memset+1)^0,c
 26362  00453E  0EFC               	movlw	252
 26363  004540  2408               	addwf	??_memset^0,w,c
 26364  004542  6ED9               	movwf	fsr2l,c
 26365  004544  0EFF               	movlw	255
 26366  004546  2009               	addwfc	(??_memset+1)^0,w,c
 26367  004548  6EDA               	movwf	fsr2h,c
 26368  00454A  0060  F013  FFDF   	movff	memset@c,indf2
 26369  004550  5007               	movf	(memset@n+1)^0,w,c
 26370  004552  E104               	bnz	l14589
 26371  004554  0E09               	movlw	9
 26372  004556  5C06               	subwf	memset@n^0,w,c
 26373  004558  A0D8               	btfss	status,0,c
 26374  00455A  0012               	return	
 26375  00455C                     l14589:
 26376  00455C  0060  F030  F008   	movff	memset@s,??_memset
 26377  004562  0060  F034  F009   	movff	memset@s+1,??_memset+1
 26378  004568  1E08               	comf	??_memset^0,f,c
 26379  00456A  1E09               	comf	(??_memset+1)^0,f,c
 26380  00456C  4A08               	infsnz	??_memset^0,f,c
 26381  00456E  2A09               	incf	(??_memset+1)^0,f,c
 26382  004570  0E03               	movlw	3
 26383  004572  1408               	andwf	??_memset^0,w,c
 26384  004574  6E0A               	movwf	memset@k^0,c
 26385  004576  6A0B               	clrf	(memset@k+1)^0,c
 26386  004578  500A               	movf	memset@k^0,w,c
 26387  00457A  260C               	addwf	memset@s^0,f,c
 26388  00457C  500B               	movf	(memset@k+1)^0,w,c
 26389  00457E  220D               	addwfc	(memset@s+1)^0,f,c
 26390  004580  500A               	movf	memset@k^0,w,c
 26391  004582  5E06               	subwf	memset@n^0,f,c
 26392  004584  500B               	movf	(memset@k+1)^0,w,c
 26393  004586  5A07               	subwfb	(memset@n+1)^0,f,c
 26394  004588  0EFC               	movlw	252
 26395  00458A  1606               	andwf	memset@n^0,f,c
 26396  00458C  0EFF               	movlw	255
 26397  00458E  1607               	andwf	(memset@n+1)^0,f,c
 26398  004590  D00E               	goto	l14597
 26399  004592                     l14591:
 26400  004592  0060  F033  FFD9   	movff	memset@s,fsr2l
 26401  004598  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26402  00459E  0060  F013  FFDF   	movff	memset@c,indf2
 26403  0045A4  0606               	decf	memset@n^0,f,c
 26404  0045A6  A0D8               	btfss	status,0,c
 26405  0045A8  0607               	decf	(memset@n+1)^0,f,c
 26406  0045AA  4A0C               	infsnz	memset@s^0,f,c
 26407  0045AC  2A0D               	incf	(memset@s+1)^0,f,c
 26408  0045AE                     l14597:
 26409  0045AE  5006               	movf	memset@n^0,w,c
 26410  0045B0  1007               	iorwf	(memset@n+1)^0,w,c
 26411  0045B2  B4D8               	btfsc	status,2,c
 26412  0045B4  0012               	return	
 26413  0045B6  D7ED               	goto	l14591
 26414  0045B8                     __end_of_memset:
 26415                           	opt callstack 0
 26416                           
 26417 ;; *************** function _memcpy *****************
 26418 ;; Defined at:
 26419 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 26420 ;; Parameters:    Size  Location     Type
 26421 ;;  d1              2    7[COMRAM] PTR void 
 26422 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26423 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26424 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 26425 ;;		 -> tx_buffer(524), 
 26426 ;;  s1              2    9[COMRAM] PTR const void 
 26427 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26428 ;;		 -> ledqueue(96), STR_55(2), STR_54(2), cmdSetAES@AESstr(32), 
 26429 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 26430 ;;  n               2   11[COMRAM] unsigned int 
 26431 ;; Auto vars:     Size  Location     Type
 26432 ;;  s               2   16[COMRAM] PTR const unsigned char 
 26433 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 26434 ;;		 -> ledqueue(96), STR_55(2), STR_54(2), cmdSetAES@AESstr(32), 
 26435 ;;		 -> atCommand(80), NULL(0), tx_buffer(524), 
 26436 ;;  d               2   14[COMRAM] PTR unsigned char 
 26437 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 26438 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
 26439 ;;		 -> cmdSetAES@temp(3), cmdSetAES@AESstr(32), NULL(0), cmdSend@destaddr(5), 
 26440 ;;		 -> tx_buffer(524), 
 26441 ;;  tmp             1   13[COMRAM] unsigned char 
 26442 ;; Return value:  Size  Location     Type
 26443 ;;                  2    7[COMRAM] PTR void 
 26444 ;; Registers used:
 26445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26446 ;; Tracked objects:
 26447 ;;		On entry : 0/0
 26448 ;;		On exit  : 0/0
 26449 ;;		Unchanged: 0/0
 26450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26451 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26452 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26454 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26455 ;;Total ram usage:       11 bytes
 26456 ;; Hardware stack levels used:    1
 26457 ;; Hardware stack levels required when called:    7
 26458 ;; This function calls:
 26459 ;;		Nothing
 26460 ;; This function is called by:
 26461 ;;		_cmdSend
 26462 ;;		_cmdBcast
 26463 ;;		_cmdSetAES
 26464 ;;		_cmdSetRFCH
 26465 ;;		_cmdSetTX
 26466 ;;		_cmdSetCADRSSI
 26467 ;;		_cmdSetSF
 26468 ;;		_CircularBufferPushBack
 26469 ;;		_nwkDataReqSendFrame
 26470 ;;		_PHY_DataInd
 26471 ;;		_nwkTxBroadcastFrame
 26472 ;;		_CircularBufferPopFront
 26473 ;; This function uses a non-reentrant model
 26474 ;;
 26475                           
 26476                           	psect	text164
 26477  0073D4                     __ptext164:
 26478                           	opt callstack 0
 26479  0073D4                     _memcpy:
 26480                           	opt callstack 19
 26481                           
 26482                           ;incstack = 0
 26483  0073D4  0060  F028  F011   	movff	memcpy@s1,memcpy@s
 26484  0073DA  0060  F02C  F012   	movff	memcpy@s1+1,memcpy@s+1
 26485  0073E0  0060  F020  F00F   	movff	memcpy@d1,memcpy@d
 26486  0073E6  0060  F024  F010   	movff	memcpy@d1+1,memcpy@d+1
 26487  0073EC  D023               	goto	l14763
 26488  0073EE                     l14755:
 26489  0073EE  0060  F047  FFF6   	movff	memcpy@s,tblptrl
 26490  0073F4  0060  F04B  FFF7   	movff	memcpy@s+1,tblptrh
 26491  0073FA  0E00               	movlw	low (__mediumconst shr (0+16))
 26492  0073FC  6EF8               	movwf	tblptru,c
 26493  0073FE  0E0F               	movlw	(high __ramtop+-1)
 26494  007400  64F7               	cpfsgt	tblptrh,c
 26495  007402  D003               	bra	u14357
 26496  007404  0008               	tblrd		*
 26497  007406  50F5               	movf	tablat,w,c
 26498  007408  D007               	bra	u14350
 26499  00740A                     u14357:
 26500  00740A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 26501  007410  006F FFDF FFEA     	movff	tblptrh,fsr0h
 26502  007416  50EF               	movf	indf0,w,c
 26503  007418                     u14350:
 26504  007418  6E0E               	movwf	memcpy@tmp^0,c
 26505  00741A  4A11               	infsnz	memcpy@s^0,f,c
 26506  00741C  2A12               	incf	(memcpy@s+1)^0,f,c
 26507  00741E  0060  F03F  FFD9   	movff	memcpy@d,fsr2l
 26508  007424  0060  F043  FFDA   	movff	memcpy@d+1,fsr2h
 26509  00742A  0060  F03B  FFDF   	movff	memcpy@tmp,indf2
 26510  007430  4A0F               	infsnz	memcpy@d^0,f,c
 26511  007432  2A10               	incf	(memcpy@d+1)^0,f,c
 26512  007434                     l14763:
 26513  007434  060C               	decf	memcpy@n^0,f,c
 26514  007436  A0D8               	btfss	status,0,c
 26515  007438  060D               	decf	(memcpy@n+1)^0,f,c
 26516  00743A  280C               	incf	memcpy@n^0,w,c
 26517  00743C  E1D8               	bnz	l14755
 26518  00743E  280D               	incf	(memcpy@n+1)^0,w,c
 26519  007440  B4D8               	btfsc	status,2,c
 26520  007442  0012               	return	
 26521  007444  D7D4               	goto	l14755
 26522  007446                     __end_of_memcpy:
 26523                           	opt callstack 0
 26524                           
 26525 ;; *************** function _nwkDataReqConfirm *****************
 26526 ;; Defined at:
 26527 ;;		line 188 in file "../nwk/nwk_src/nwkDataReq.c"
 26528 ;; Parameters:    Size  Location     Type
 26529 ;;  req             2    8[COMRAM] PTR struct NWK_DataReq_t
 26530 ;;		 -> NULL(0), tx_buffer(524), 
 26531 ;; Auto vars:     Size  Location     Type
 26532 ;;  prev            2   12[COMRAM] PTR struct NWK_DataReq_t
 26533 ;;		 -> NULL(0), tx_buffer(524), 
 26534 ;; Return value:  Size  Location     Type
 26535 ;;                  1    wreg      void 
 26536 ;; Registers used:
 26537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26538 ;; Tracked objects:
 26539 ;;		On entry : 0/1
 26540 ;;		On exit  : 0/0
 26541 ;;		Unchanged: 0/0
 26542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26547 ;;Total ram usage:        6 bytes
 26548 ;; Hardware stack levels used:    1
 26549 ;; Hardware stack levels required when called:    9
 26550 ;; This function calls:
 26551 ;;		_appDataConf
 26552 ;; This function is called by:
 26553 ;;		_nwkDataReqTaskHandler
 26554 ;; This function uses a non-reentrant model
 26555 ;;
 26556                           
 26557                           	psect	text165
 26558  00573A                     __ptext165:
 26559                           	opt callstack 0
 26560  00573A                     _nwkDataReqConfirm:
 26561                           	opt callstack 18
 26562                           
 26563                           ;../nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);../
      +                          nwk/nwk_src/nwkDataReq.c: 189: {;../nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue
      +                           == req)
 26564                           
 26565                           ;incstack = 0
 26566  00573A  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26567  00573C  0100               	movlb	0	; () banked
 26568  00573E  19E2               	xorwf	_nwkDataReqQueue& (0+255),w,b
 26569  005740  E111               	bnz	l11605
 26570  005742  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26571  005744  19E3               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 26572  005746  A4D8               	btfss	status,2,c
 26573  005748  D00D               	goto	l11605
 26574                           
 26575                           ; BSR set to: 0
 26576                           ;../nwk/nwk_src/nwkDataReq.c: 191:   {;../nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQ
      +                          ueue = nwkDataReqQueue->next;
 26577  00574A  0060  F38B  FFD9   	movff	_nwkDataReqQueue,fsr2l
 26578  005750  0060  F38F  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 26579  005756  006F FF78  F0E2    	movff	postinc2,_nwkDataReqQueue
 26580  00575C  006F FF74  F0E3    	movff	postdec2,_nwkDataReqQueue+1
 26581                           
 26582                           ;../nwk/nwk_src/nwkDataReq.c: 193:   }
 26583  005762  D03E               	goto	l11613
 26584  005764                     l11605:
 26585                           
 26586                           ; BSR set to: 0
 26587                           ;../nwk/nwk_src/nwkDataReq.c: 195:   {;../nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq
      +                          _t *prev = nwkDataReqQueue;
 26588  005764  0060  F388  F00D   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 26589  00576A  0060  F38C  F00E   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 26590                           
 26591                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26592  005770  D00C               	goto	l11609
 26593  005772                     l11607:
 26594                           
 26595                           ;../nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 26596  005772  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26597  005778  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26598  00577E  006F FF78  F00D    	movff	postinc2,nwkDataReqConfirm@prev
 26599  005784  006F FF74  F00E    	movff	postdec2,nwkDataReqConfirm@prev+1
 26600  00578A                     l11609:
 26601                           
 26602                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 26603  00578A  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26604  005790  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26605  005796  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26606  005798  18DE               	xorwf	postinc2,w,c
 26607  00579A  E1EB               	bnz	l11607
 26608  00579C  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26609  00579E  18DE               	xorwf	postinc2,w,c
 26610  0057A0  A4D8               	btfss	status,2,c
 26611  0057A2  D7E7               	goto	l11607
 26612                           
 26613                           ;../nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 26614  0057A4  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 26615  0057AA  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 26616  0057B0  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 26617  0057B6  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 26618  0057BC  0060  F02F  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 26619  0057C2  0060  F033  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 26620  0057C8  0060  F037  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 26621  0057CE  0060  F03B  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 26622  0057D4  006F FF7B FFE6     	movff	postinc2,postinc1
 26623  0057DA  006F FF77 FFE5     	movff	postdec2,postdec1
 26624  0057E0                     l11613:
 26625                           
 26626                           ;../nwk/nwk_src/nwkDataReq.c: 202:   nwkIb.lock--;
 26627  0057E0  0101               	movlb	1	; () banked
 26628  0057E2  0726               	decf	(_nwkIb+38)& (0+255),f,b
 26629  0057E4  A0D8               	btfss	status,0,c
 26630  0057E6  0727               	decf	(_nwkIb+39)& (0+255),f,b
 26631                           
 26632                           ; BSR set to: 1
 26633                           ;../nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 26634  0057E8  0060  F024  F007   	movff	nwkDataReqConfirm@req,appDataConf@req
 26635  0057EE  0060  F028  F008   	movff	nwkDataReqConfirm@req+1,appDataConf@req+1
 26636  0057F4  EE20 F00F          	lfsr	2,15
 26637  0057F8  5009               	movf	nwkDataReqConfirm@req^0,w,c
 26638  0057FA  26D9               	addwf	fsr2l,f,c
 26639  0057FC  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 26640  0057FE  22DA               	addwfc	fsr2h,f,c
 26641  005800  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 26642  005806  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 26643  00580C  D801               	call	u10528
 26644  00580E  0012               	return	
 26645  005810                     u10528:
 26646  005810  0005               	push	
 26647  005812  6EFA               	movwf	pclath,c
 26648  005814  500B               	movf	??_nwkDataReqConfirm^0,w,c
 26649  005816  6EFD               	movwf	tosl,c
 26650  005818  500C               	movf	(??_nwkDataReqConfirm+1)^0,w,c
 26651  00581A  6EFE               	movwf	tosh,c
 26652  00581C  6AFF               	clrf	tosu,c
 26653  00581E  50FA               	movf	pclath,w,c
 26654  005820  0012               	return		;indir
 26655  005822                     __end_of_nwkDataReqConfirm:
 26656                           	opt callstack 0
 26657                           
 26658 ;; *************** function _appDataConf *****************
 26659 ;; Defined at:
 26660 ;;		line 33 in file "../app/app_src/application.c"
 26661 ;; Parameters:    Size  Location     Type
 26662 ;;  req             2    6[COMRAM] PTR struct NWK_DataReq_t
 26663 ;;		 -> NULL(0), tx_buffer(524), 
 26664 ;; Auto vars:     Size  Location     Type
 26665 ;;		None
 26666 ;; Return value:  Size  Location     Type
 26667 ;;                  1    wreg      void 
 26668 ;; Registers used:
 26669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26670 ;; Tracked objects:
 26671 ;;		On entry : 3F/1
 26672 ;;		On exit  : 0/0
 26673 ;;		Unchanged: 0/0
 26674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26679 ;;Total ram usage:        2 bytes
 26680 ;; Hardware stack levels used:    1
 26681 ;; Hardware stack levels required when called:    8
 26682 ;; This function calls:
 26683 ;;		_free_tx_buffer
 26684 ;; This function is called by:
 26685 ;;		_cmdSend
 26686 ;;		_cmdBcast
 26687 ;;		_nwkDataReqConfirm
 26688 ;; This function uses a non-reentrant model
 26689 ;;
 26690                           
 26691                           	psect	text166
 26692  00889E                     __ptext166:
 26693                           	opt callstack 0
 26694  00889E                     _appDataConf:
 26695                           	opt callstack 18
 26696                           
 26697                           ; BSR set to: 1
 26698                           ;../app/app_src/application.c: 33: void appDataConf(NWK_DataReq_t *req);../app/app_src/a
      +                          pplication.c: 34: {;../app/app_src/application.c: 35:  if (NWK_SUCCESS_STATUS == req->st
      +                          atus){
 26699                           
 26700                           ;incstack = 0
 26701  00889E  EE20 F011          	lfsr	2,17
 26702  0088A2  5007               	movf	appDataConf@req^0,w,c
 26703  0088A4  26D9               	addwf	fsr2l,f,c
 26704  0088A6  5008               	movf	(appDataConf@req+1)^0,w,c
 26705  0088A8  22DA               	addwfc	fsr2h,f,c
 26706  0088AA  50DF               	movf	indf2,w,c
 26707                           
 26708                           ; BSR set to: 1
 26709                           
 26710                           ;../app/app_src/application.c: 38:  else{
 26711                           
 26712                           ;../app/app_src/application.c: 37:  }
 26713                           
 26714                           ; BSR set to: 1
 26715  0088AC  F000               	nop		;# 
 26716                           
 26717                           ;../app/app_src/application.c: 42:  free_tx_buffer(req);
 26718  0088AE  0060  F01C  F002   	movff	appDataConf@req,free_tx_buffer@req
 26719  0088B4  0060  F020  F003   	movff	appDataConf@req+1,free_tx_buffer@req+1
 26720  0088BA  EC66  F03E         	call	_free_tx_buffer	;wreg free
 26721  0088BE  0012               	return		;funcret
 26722  0088C0                     __end_of_appDataConf:
 26723                           	opt callstack 0
 26724                           
 26725 ;; *************** function _free_tx_buffer *****************
 26726 ;; Defined at:
 26727 ;;		line 70 in file "../app/app_src/application.c"
 26728 ;; Parameters:    Size  Location     Type
 26729 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 26730 ;;		 -> NULL(0), tx_buffer(524), 
 26731 ;; Auto vars:     Size  Location     Type
 26732 ;;  buf_id          1    5[COMRAM] unsigned char 
 26733 ;; Return value:  Size  Location     Type
 26734 ;;                  1    wreg      void 
 26735 ;; Registers used:
 26736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26737 ;; Tracked objects:
 26738 ;;		On entry : 0/1
 26739 ;;		On exit  : 0/0
 26740 ;;		Unchanged: 0/0
 26741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26745 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26746 ;;Total ram usage:        5 bytes
 26747 ;; Hardware stack levels used:    1
 26748 ;; Hardware stack levels required when called:    7
 26749 ;; This function calls:
 26750 ;;		Nothing
 26751 ;; This function is called by:
 26752 ;;		_appDataConf
 26753 ;; This function uses a non-reentrant model
 26754 ;;
 26755                           
 26756                           	psect	text167
 26757  007CCC                     __ptext167:
 26758                           	opt callstack 0
 26759  007CCC                     _free_tx_buffer:
 26760                           	opt callstack 18
 26761                           
 26762                           ;../app/app_src/application.c: 71:     uint8_t buf_id = 0;
 26763                           
 26764                           ;incstack = 0
 26765  007CCC  0E00               	movlw	0
 26766  007CCE  6E06               	movwf	free_tx_buffer@buf_id^0,c
 26767                           
 26768                           ;../app/app_src/application.c: 73:     while(buf_id < 4){
 26769  007CD0  D020               	goto	l9913
 26770  007CD2                     l9905:
 26771                           
 26772                           ;../app/app_src/application.c: 74:         if(req == &tx_buffer[buf_id].nwkDataReq){
 26773  007CD2  5006               	movf	free_tx_buffer@buf_id^0,w,c
 26774  007CD4  0D83               	mullw	131
 26775  007CD6  0E6A               	movlw	low _tx_buffer
 26776  007CD8  6E04               	movwf	??_free_tx_buffer^0,c
 26777  007CDA  0E08               	movlw	high _tx_buffer
 26778  007CDC  6E05               	movwf	(??_free_tx_buffer+1)^0,c
 26779  007CDE  0E03               	movlw	3
 26780  007CE0  2604               	addwf	??_free_tx_buffer^0,f,c
 26781  007CE2  0E00               	movlw	0
 26782  007CE4  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 26783  007CE6  50F3               	movf	243,w,c
 26784  007CE8  2604               	addwf	??_free_tx_buffer^0,f,c
 26785  007CEA  50F4               	movf	244,w,c
 26786  007CEC  2205               	addwfc	(??_free_tx_buffer+1)^0,f,c
 26787  007CEE  5004               	movf	??_free_tx_buffer^0,w,c
 26788  007CF0  1802               	xorwf	free_tx_buffer@req^0,w,c
 26789  007CF2  E10E               	bnz	l9911
 26790  007CF4  5005               	movf	(??_free_tx_buffer+1)^0,w,c
 26791  007CF6  1803               	xorwf	(free_tx_buffer@req+1)^0,w,c
 26792  007CF8  A4D8               	btfss	status,2,c
 26793  007CFA  D00A               	goto	l9911
 26794                           
 26795                           ;../app/app_src/application.c: 76:             tx_buffer[buf_id].free = 1;
 26796  007CFC  5006               	movf	free_tx_buffer@buf_id^0,w,c
 26797  007CFE  0D83               	mullw	131
 26798  007D00  0E6A               	movlw	low _tx_buffer
 26799  007D02  24F3               	addwf	243,w,c
 26800  007D04  6ED9               	movwf	fsr2l,c
 26801  007D06  0E08               	movlw	high _tx_buffer
 26802  007D08  20F4               	addwfc	prodh,w,c
 26803  007D0A  6EDA               	movwf	fsr2h,c
 26804  007D0C  84DF               	bsf	indf2,2,c
 26805  007D0E  0012               	return	
 26806  007D10                     l9911:
 26807                           
 26808                           ;../app/app_src/application.c: 79:         buf_id++;
 26809  007D10  2A06               	incf	free_tx_buffer@buf_id^0,f,c
 26810  007D12                     l9913:
 26811                           
 26812                           ;../app/app_src/application.c: 73:     while(buf_id < 4){
 26813  007D12  0E03               	movlw	3
 26814  007D14  6406               	cpfsgt	free_tx_buffer@buf_id^0,c
 26815  007D16  D7DD               	goto	l9905
 26816  007D18  0012               	return	
 26817  007D1A                     __end_of_free_tx_buffer:
 26818                           	opt callstack 0
 26819                           
 26820 ;; *************** function _SYS_Init *****************
 26821 ;; Defined at:
 26822 ;;		line 58 in file "../sys/sys_src/sys.c"
 26823 ;; Parameters:    Size  Location     Type
 26824 ;;		None
 26825 ;; Auto vars:     Size  Location     Type
 26826 ;;		None
 26827 ;; Return value:  Size  Location     Type
 26828 ;;                  1    wreg      void 
 26829 ;; Registers used:
 26830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26831 ;; Tracked objects:
 26832 ;;		On entry : 3B/3D
 26833 ;;		On exit  : 3F/2
 26834 ;;		Unchanged: 0/0
 26835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26840 ;;Total ram usage:        0 bytes
 26841 ;; Hardware stack levels used:    1
 26842 ;; Hardware stack levels required when called:   15
 26843 ;; This function calls:
 26844 ;;		_NWK_Init
 26845 ;;		_PHY_Init
 26846 ;;		_SYS_TimerInit
 26847 ;; This function is called by:
 26848 ;;		_main
 26849 ;; This function uses a non-reentrant model
 26850 ;;
 26851                           
 26852                           	psect	text168
 26853  008CAA                     __ptext168:
 26854                           	opt callstack 0
 26855  008CAA                     _SYS_Init:
 26856                           	opt callstack 15
 26857                           
 26858                           ;../sys/sys_src/sys.c: 60:   SYS_TimerInit();
 26859                           
 26860                           ;incstack = 0
 26861  008CAA  EC8C  F046         	call	_SYS_TimerInit	;wreg free
 26862                           
 26863                           ; BSR set to: 0
 26864                           ;../sys/sys_src/sys.c: 61:   PHY_Init();
 26865  008CAE  ECAF  F046         	call	_PHY_Init	;wreg free
 26866                           
 26867                           ; BSR set to: 1
 26868                           ;../sys/sys_src/sys.c: 62:   NWK_Init();
 26869  008CB2  EC6D  F03D         	call	_NWK_Init	;wreg free
 26870                           
 26871                           ; BSR set to: 2
 26872  008CB6  0012               	return		;funcret
 26873  008CB8                     __end_of_SYS_Init:
 26874                           	opt callstack 0
 26875                           
 26876 ;; *************** function _SYS_TimerInit *****************
 26877 ;; Defined at:
 26878 ;;		line 63 in file "../sys/sys_src/sysTimer.c"
 26879 ;; Parameters:    Size  Location     Type
 26880 ;;		None
 26881 ;; Auto vars:     Size  Location     Type
 26882 ;;		None
 26883 ;; Return value:  Size  Location     Type
 26884 ;;                  1    wreg      void 
 26885 ;; Registers used:
 26886 ;;		wreg, status,2, status,0
 26887 ;; Tracked objects:
 26888 ;;		On entry : 3B/3D
 26889 ;;		On exit  : 3F/0
 26890 ;;		Unchanged: 0/0
 26891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26896 ;;Total ram usage:        0 bytes
 26897 ;; Hardware stack levels used:    1
 26898 ;; Hardware stack levels required when called:    7
 26899 ;; This function calls:
 26900 ;;		Nothing
 26901 ;; This function is called by:
 26902 ;;		_SYS_Init
 26903 ;; This function uses a non-reentrant model
 26904 ;;
 26905                           
 26906                           	psect	text169
 26907  008D18                     __ptext169:
 26908                           	opt callstack 0
 26909  008D18                     _SYS_TimerInit:
 26910                           	opt callstack 22
 26911                           
 26912                           ;../sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 26913                           
 26914                           ; BSR set to: 2
 26915                           ;incstack = 0
 26916  008D18  0E00               	movlw	0
 26917  008D1A  0100               	movlb	0	; () banked
 26918  008D1C  6FE0               	movwf	_timers& (0+255),b
 26919  008D1E  0E00               	movlw	0
 26920  008D20  6FE1               	movwf	(_timers+1)& (0+255),b
 26921                           
 26922                           ; BSR set to: 0
 26923  008D22  0012               	return		;funcret
 26924  008D24                     __end_of_SYS_TimerInit:
 26925                           	opt callstack 0
 26926                           
 26927 ;; *************** function _PHY_Init *****************
 26928 ;; Defined at:
 26929 ;;		line 810 in file "../phy/sx1216/phy_src/phy.c"
 26930 ;; Parameters:    Size  Location     Type
 26931 ;;		None
 26932 ;; Auto vars:     Size  Location     Type
 26933 ;;		None
 26934 ;; Return value:  Size  Location     Type
 26935 ;;                  1    wreg      void 
 26936 ;; Registers used:
 26937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26938 ;; Tracked objects:
 26939 ;;		On entry : 3F/0
 26940 ;;		On exit  : 3F/1
 26941 ;;		Unchanged: 0/0
 26942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26947 ;;Total ram usage:        0 bytes
 26948 ;; Hardware stack levels used:    1
 26949 ;; Hardware stack levels required when called:   14
 26950 ;; This function calls:
 26951 ;;		_initRadio
 26952 ;; This function is called by:
 26953 ;;		_SYS_Init
 26954 ;; This function uses a non-reentrant model
 26955 ;;
 26956                           
 26957                           	psect	text170
 26958  008D5E                     __ptext170:
 26959                           	opt callstack 0
 26960  008D5E                     _PHY_Init:
 26961                           	opt callstack 15
 26962                           
 26963                           ; BSR set to: 0
 26964                           ;../phy/sx1216/phy_src/phy.c: 811:     initRadio();
 26965                           
 26966                           ; BSR set to: 0
 26967                           ;incstack = 0
 26968  008D5E  ECD7  F020         	call	_initRadio	;wreg free
 26969                           
 26970                           ; BSR set to: 1
 26971  008D62  0012               	return		;funcret
 26972  008D64                     __end_of_PHY_Init:
 26973                           	opt callstack 0
 26974                           
 26975 ;; *************** function _initRadio *****************
 26976 ;; Defined at:
 26977 ;;		line 444 in file "../phy/sx1216/phy_src/phy.c"
 26978 ;; Parameters:    Size  Location     Type
 26979 ;;		None
 26980 ;; Auto vars:     Size  Location     Type
 26981 ;;  BWset           4    0        unsigned long 
 26982 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 26983 ;;  version         1   54[COMRAM] unsigned char 
 26984 ;; Return value:  Size  Location     Type
 26985 ;;                  1    wreg      void 
 26986 ;; Registers used:
 26987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26988 ;; Tracked objects:
 26989 ;;		On entry : 0/0
 26990 ;;		On exit  : 3F/1
 26991 ;;		Unchanged: 0/0
 26992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26994 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26996 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26997 ;;Total ram usage:        7 bytes
 26998 ;; Hardware stack levels used:    1
 26999 ;; Hardware stack levels required when called:   13
 27000 ;; This function calls:
 27001 ;;		_SX1276Read
 27002 ;;		_SX1276Write
 27003 ;;		_computeFRF
 27004 ;;		_enableCrc
 27005 ;;		_explicitHeaderMode
 27006 ;;		_receive
 27007 ;;		_setCodingRate4
 27008 ;;		_setFrequency
 27009 ;;		_setPreambleLength
 27010 ;;		_setSignalBandwidth
 27011 ;;		_setSpreadingFactor
 27012 ;;		_setTxPower
 27013 ;;		_srand
 27014 ;; This function is called by:
 27015 ;;		_cmdSetNaddr
 27016 ;;		_cmdSetRFCH
 27017 ;;		_cmdSetTX
 27018 ;;		_cmdSetCADRSSI
 27019 ;;		_cmdSetSF
 27020 ;;		_radio_engine
 27021 ;;		_PHY_Init
 27022 ;; This function uses a non-reentrant model
 27023 ;;
 27024                           
 27025                           	psect	text171
 27026  0041AE                     __ptext171:
 27027                           	opt callstack 0
 27028  0041AE                     _initRadio:
 27029                           	opt callstack 14
 27030                           
 27031                           ; BSR set to: 1
 27032                           ;incstack = 0
 27033                           ;../phy/sx1216/phy_src/phy.c: 446:     uint8_t version;;../phy/sx1216/phy_src/phy.c: 447
      +                          :     uint32_t BWset;;../phy/sx1216/phy_src/phy.c: 448:     uint16_t wideRSSI;;../phy/sx
      +                          1216/phy_src/phy.c: 450:     do { LATCbits.LATC5 = 0; } while(0);
 27034  0041AE  9ABC               	bcf	188,5,c	;volatile
 27035                           
 27036                           ;../phy/sx1216/phy_src/phy.c: 451:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27037  0041B0  0E09               	movlw	9
 27038  0041B2  6E34               	movwf	(??_initRadio+1)^0,c
 27039  0041B4  0E1E               	movlw	30
 27040  0041B6  6E33               	movwf	??_initRadio^0,c
 27041  0041B8  0EE4               	movlw	228
 27042  0041BA                     u17407:
 27043  0041BA  2EE8               	decfsz	wreg,f,c
 27044  0041BC  D7FE               	bra	u17407
 27045  0041BE  2E33               	decfsz	??_initRadio^0,f,c
 27046  0041C0  D7FC               	bra	u17407
 27047  0041C2  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27048  0041C4  D7FA               	bra	u17407
 27049  0041C6  D000               	nop2	
 27050  0041C8  8ABC               	bsf	188,5,c	;volatile
 27051                           
 27052                           ;../phy/sx1216/phy_src/phy.c: 453:     computeFRF();
 27053  0041CA  EC2B  F01D         	call	_computeFRF	;wreg free
 27054                           
 27055                           ;../phy/sx1216/phy_src/phy.c: 454:     _delay((unsigned long)((500)*(64000000/4000.0)));
 27056  0041CE  0E29               	movlw	41
 27057  0041D0  6E34               	movwf	(??_initRadio+1)^0,c
 27058  0041D2  0E96               	movlw	150
 27059  0041D4  6E33               	movwf	??_initRadio^0,c
 27060  0041D6  0E7F               	movlw	127
 27061  0041D8                     u17417:
 27062  0041D8  2EE8               	decfsz	wreg,f,c
 27063  0041DA  D7FE               	bra	u17417
 27064  0041DC  2E33               	decfsz	??_initRadio^0,f,c
 27065  0041DE  D7FC               	bra	u17417
 27066  0041E0  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27067  0041E2  D7FA               	bra	u17417
 27068  0041E4  F000               	nop	
 27069                           
 27070                           ;../phy/sx1216/phy_src/phy.c: 456:     version = SX1276Read(0x42);
 27071  0041E6  0E42               	movlw	66
 27072  0041E8  ECDE  F045         	call	_SX1276Read
 27073  0041EC  6E37               	movwf	initRadio@version^0,c
 27074                           
 27075                           ; BSR set to: 61
 27076                           ;../phy/sx1216/phy_src/phy.c: 457:     version++;
 27077  0041EE  2A37               	incf	initRadio@version^0,f,c
 27078                           
 27079                           ; BSR set to: 61
 27080                           ;../phy/sx1216/phy_src/phy.c: 458:     SX1276Write(0x01,0x00);
 27081  0041F0  0E00               	movlw	0
 27082  0041F2  6E0F               	movwf	SX1276Write@data^0,c
 27083  0041F4  0E01               	movlw	1
 27084  0041F6  ECFC  F045         	call	_SX1276Write
 27085                           
 27086                           ; BSR set to: 61
 27087                           ;../phy/sx1216/phy_src/phy.c: 459:     SX1276Write(0x01,0x80);
 27088  0041FA  0E80               	movlw	128
 27089  0041FC  6E0F               	movwf	SX1276Write@data^0,c
 27090  0041FE  0E01               	movlw	1
 27091  004200  ECFC  F045         	call	_SX1276Write
 27092                           
 27093                           ; BSR set to: 61
 27094                           ;../phy/sx1216/phy_src/phy.c: 461:     setFrequency(fhssList[0]);
 27095  004204  0EC9               	movlw	low _fhssList
 27096  004206  6EF6               	movwf	tblptrl,c
 27097  004208                     	if	1	;There is more than 1 active tblptr byte
 27098  004208  0EFC               	movlw	high _fhssList
 27099  00420A  6EF7               	movwf	tblptrh,c
 27100  00420C                     	endif
 27101  00420C                     	if	1	;There are 3 active tblptr bytes
 27102  00420C  0E00               	movlw	low (_fhssList shr (0+16))
 27103  00420E  6EF8               	movwf	tblptru,c
 27104  004210                     	endif
 27105  004210  0009               	tblrd		*+
 27106  004212  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 27107  004218  0009               	tblrd		*+
 27108  00421A  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 27109  004220  0009               	tblrd		*+
 27110  004222  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 27111  004228  000A               	tblrd		*-
 27112  00422A  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 27113  004230  EC51  F025         	call	_setFrequency	;wreg free
 27114                           
 27115                           ; BSR set to: 61
 27116                           ;../phy/sx1216/phy_src/phy.c: 462:     setSpreadingFactor(7);
 27117  004234  0E07               	movlw	7
 27118  004236  EC35  F029         	call	_setSpreadingFactor
 27119                           
 27120                           ;../phy/sx1216/phy_src/phy.c: 463:     setTxPower(13);
 27121  00423A  0E0D               	movlw	13
 27122  00423C  EC93  F043         	call	_setTxPower
 27123                           
 27124                           ; BSR set to: 61
 27125                           ;../phy/sx1216/phy_src/phy.c: 464:     setSignalBandwidth(500E3);
 27126  004240  0E20               	movlw	32
 27127  004242  6E23               	movwf	setSignalBandwidth@sbw^0,c
 27128  004244  0EA1               	movlw	161
 27129  004246  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 27130  004248  0E07               	movlw	7
 27131  00424A  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 27132  00424C  0E00               	movlw	0
 27133  00424E  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 27134  004250  ECAF  F007         	call	_setSignalBandwidth	;wreg free
 27135                           
 27136                           ;../phy/sx1216/phy_src/phy.c: 465:     explicitHeaderMode();
 27137  004254  EC9A  F045         	call	_explicitHeaderMode	;wreg free
 27138                           
 27139                           ; BSR set to: 61
 27140                           ;../phy/sx1216/phy_src/phy.c: 466:     setCodingRate4(4);
 27141  004258  0E04               	movlw	4
 27142  00425A  EC85  F042         	call	_setCodingRate4
 27143                           
 27144                           ; BSR set to: 61
 27145                           ;../phy/sx1216/phy_src/phy.c: 467:     setPreambleLength(12);
 27146  00425E  0E00               	movlw	0
 27147  004260  6E12               	movwf	(setPreambleLength@length+1)^0,c
 27148  004262  0E0C               	movlw	12
 27149  004264  6E11               	movwf	setPreambleLength@length^0,c
 27150  004266  EC67  F045         	call	_setPreambleLength	;wreg free
 27151                           
 27152                           ; BSR set to: 61
 27153                           ;../phy/sx1216/phy_src/phy.c: 468:     enableCrc();
 27154  00426A  ECF3  F045         	call	_enableCrc	;wreg free
 27155                           
 27156                           ; BSR set to: 61
 27157                           ;../phy/sx1216/phy_src/phy.c: 469:     SX1276Write(0x0E, 0x0);
 27158  00426E  0E00               	movlw	0
 27159  004270  6E0F               	movwf	SX1276Write@data^0,c
 27160  004272  0E0E               	movlw	14
 27161  004274  ECFC  F045         	call	_SX1276Write
 27162                           
 27163                           ; BSR set to: 61
 27164                           ;../phy/sx1216/phy_src/phy.c: 470:     SX1276Write(0x0F, 0);
 27165  004278  0E00               	movlw	0
 27166  00427A  6E0F               	movwf	SX1276Write@data^0,c
 27167  00427C  0E0F               	movlw	15
 27168  00427E  ECFC  F045         	call	_SX1276Write
 27169                           
 27170                           ; BSR set to: 61
 27171                           ;../phy/sx1216/phy_src/phy.c: 473:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 27172  004282  0E0C               	movlw	12
 27173  004284  ECDE  F045         	call	_SX1276Read
 27174  004288  0903               	iorlw	3
 27175  00428A  6E0F               	movwf	SX1276Write@data^0,c
 27176  00428C  0E0C               	movlw	12
 27177  00428E  ECFC  F045         	call	_SX1276Write
 27178                           
 27179                           ; BSR set to: 61
 27180                           ;../phy/sx1216/phy_src/phy.c: 476:     SX1276Write(0x26, 0x04);
 27181  004292  0E04               	movlw	4
 27182  004294  6E0F               	movwf	SX1276Write@data^0,c
 27183  004296  0E26               	movlw	38
 27184  004298  ECFC  F045         	call	_SX1276Write
 27185                           
 27186                           ; BSR set to: 61
 27187                           ;../phy/sx1216/phy_src/phy.c: 479:     SX1276Write(0x36,0x02);
 27188  00429C  0E02               	movlw	2
 27189  00429E  6E0F               	movwf	SX1276Write@data^0,c
 27190  0042A0  0E36               	movlw	54
 27191  0042A2  ECFC  F045         	call	_SX1276Write
 27192                           
 27193                           ; BSR set to: 61
 27194                           ;../phy/sx1216/phy_src/phy.c: 480:     SX1276Write(0x3A,0x64);
 27195  0042A6  0E64               	movlw	100
 27196  0042A8  6E0F               	movwf	SX1276Write@data^0,c
 27197  0042AA  0E3A               	movlw	58
 27198  0042AC  ECFC  F045         	call	_SX1276Write
 27199                           
 27200                           ; BSR set to: 61
 27201                           ;../phy/sx1216/phy_src/phy.c: 492:     SX1276Write(0x1F,255);
 27202  0042B0  0EFF               	movlw	255
 27203  0042B2  6E0F               	movwf	SX1276Write@data^0,c
 27204  0042B4  0E1F               	movlw	31
 27205  0042B6  ECFC  F045         	call	_SX1276Write
 27206                           
 27207                           ; BSR set to: 61
 27208                           ;../phy/sx1216/phy_src/phy.c: 494:     receive(0);
 27209  0042BA  0E00               	movlw	0
 27210  0042BC  ECF0  F040         	call	_receive
 27211                           
 27212                           ; BSR set to: 61
 27213                           ;../phy/sx1216/phy_src/phy.c: 496:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27214  0042C0  0E09               	movlw	9
 27215  0042C2  6E34               	movwf	(??_initRadio+1)^0,c
 27216  0042C4  0E1E               	movlw	30
 27217  0042C6  6E33               	movwf	??_initRadio^0,c
 27218  0042C8  0EE4               	movlw	228
 27219  0042CA                     u17427:
 27220  0042CA  2EE8               	decfsz	wreg,f,c
 27221  0042CC  D7FE               	bra	u17427
 27222  0042CE  2E33               	decfsz	??_initRadio^0,f,c
 27223  0042D0  D7FC               	bra	u17427
 27224  0042D2  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27225  0042D4  D7FA               	bra	u17427
 27226  0042D6  D000               	nop2	
 27227                           
 27228                           ;../phy/sx1216/phy_src/phy.c: 498:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2
      +                          C);
 27229  0042D8  0E2C               	movlw	44
 27230  0042DA  ECDE  F045         	call	_SX1276Read
 27231  0042DE  6E33               	movwf	??_initRadio^0,c
 27232  0042E0  0E2C               	movlw	44
 27233  0042E2  ECDE  F045         	call	_SX1276Read
 27234  0042E6  6E34               	movwf	(??_initRadio+1)^0,c
 27235  0042E8  5034               	movf	(??_initRadio+1)^0,w,c
 27236  0042EA  6E36               	movwf	(??_initRadio+3)^0,c
 27237  0042EC  6A35               	clrf	(??_initRadio+2)^0,c
 27238  0042EE  5033               	movf	??_initRadio^0,w,c
 27239  0042F0  2435               	addwf	(??_initRadio+2)^0,w,c
 27240  0042F2  6E38               	movwf	initRadio@wideRSSI^0,c
 27241  0042F4  0E00               	movlw	0
 27242  0042F6  2036               	addwfc	(??_initRadio+3)^0,w,c
 27243  0042F8  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 27244                           
 27245                           ; BSR set to: 61
 27246                           ;../phy/sx1216/phy_src/phy.c: 500:     srand(wideRSSI);
 27247  0042FA  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 27248  004300  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 27249  004306  EC17  F042         	call	_srand	;wreg free
 27250                           
 27251                           ; BSR set to: 1
 27252  00430A  0012               	return		;funcret
 27253  00430C                     __end_of_initRadio:
 27254                           	opt callstack 0
 27255                           
 27256 ;; *************** function _srand *****************
 27257 ;; Defined at:
 27258 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 27259 ;; Parameters:    Size  Location     Type
 27260 ;;  s               2    1[COMRAM] unsigned int 
 27261 ;; Auto vars:     Size  Location     Type
 27262 ;;		None
 27263 ;; Return value:  Size  Location     Type
 27264 ;;                  1    wreg      void 
 27265 ;; Registers used:
 27266 ;;		wreg, status,2, status,0
 27267 ;; Tracked objects:
 27268 ;;		On entry : 3F/3D
 27269 ;;		On exit  : 3F/1
 27270 ;;		Unchanged: 0/0
 27271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27274 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27275 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27276 ;;Total ram usage:        6 bytes
 27277 ;; Hardware stack levels used:    1
 27278 ;; Hardware stack levels required when called:    7
 27279 ;; This function calls:
 27280 ;;		Nothing
 27281 ;; This function is called by:
 27282 ;;		_initRadio
 27283 ;; This function uses a non-reentrant model
 27284 ;;
 27285                           
 27286                           	psect	text172
 27287  00842E                     __ptext172:
 27288                           	opt callstack 0
 27289  00842E                     _srand:
 27290                           	opt callstack 19
 27291                           
 27292                           ; BSR set to: 61
 27293                           
 27294                           ; BSR set to: 1
 27295                           ;incstack = 0
 27296  00842E  0EFF               	movlw	255
 27297  008430  6E04               	movwf	??_srand^0,c
 27298  008432  0EFF               	movlw	255
 27299  008434  6E05               	movwf	(??_srand+1)^0,c
 27300  008436  0060  F008  F006   	movff	srand@s,??_srand+2
 27301  00843C  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 27302  008442  5004               	movf	??_srand^0,w,c
 27303  008444  2606               	addwf	(??_srand+2)^0,f,c
 27304  008446  5005               	movf	(??_srand+1)^0,w,c
 27305  008448  2207               	addwfc	(??_srand+3)^0,f,c
 27306  00844A  0060  F018  F1D2   	movff	??_srand+2,_seed
 27307  008450  0060  F01C  F1D3   	movff	??_srand+3,_seed+1
 27308  008456  0101               	movlb	1	; () banked
 27309  008458  6BD4               	clrf	(_seed+2)& (0+255),b
 27310  00845A  6BD5               	clrf	(_seed+3)& (0+255),b
 27311  00845C  6BD6               	clrf	(_seed+4)& (0+255),b
 27312  00845E  6BD7               	clrf	(_seed+5)& (0+255),b
 27313  008460  6BD8               	clrf	(_seed+6)& (0+255),b
 27314  008462  6BD9               	clrf	(_seed+7)& (0+255),b
 27315                           
 27316                           ; BSR set to: 1
 27317  008464  0012               	return		;funcret
 27318  008466                     __end_of_srand:
 27319                           	opt callstack 0
 27320                           
 27321 ;; *************** function _setTxPower *****************
 27322 ;; Defined at:
 27323 ;;		line 139 in file "../phy/sx1216/phy_src/phy.c"
 27324 ;; Parameters:    Size  Location     Type
 27325 ;;  power           1    wreg     unsigned char 
 27326 ;; Auto vars:     Size  Location     Type
 27327 ;;  power           1   16[COMRAM] unsigned char 
 27328 ;; Return value:  Size  Location     Type
 27329 ;;                  1    wreg      void 
 27330 ;; Registers used:
 27331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27332 ;; Tracked objects:
 27333 ;;		On entry : 0/3D
 27334 ;;		On exit  : 3F/3D
 27335 ;;		Unchanged: 0/0
 27336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27340 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27341 ;;Total ram usage:        1 bytes
 27342 ;; Hardware stack levels used:    1
 27343 ;; Hardware stack levels required when called:   11
 27344 ;; This function calls:
 27345 ;;		_SX1276Write
 27346 ;; This function is called by:
 27347 ;;		_initRadio
 27348 ;; This function uses a non-reentrant model
 27349 ;;
 27350                           
 27351                           	psect	text173
 27352  008726                     __ptext173:
 27353                           	opt callstack 0
 27354  008726                     _setTxPower:
 27355                           	opt callstack 15
 27356                           
 27357                           ; BSR set to: 1
 27358                           ;incstack = 0
 27359                           ;setTxPower@power stored from wreg
 27360  008726  6E11               	movwf	setTxPower@power^0,c
 27361                           
 27362                           ;../phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);../phy/sx1216/phy_src/
      +                          phy.c: 140: {;../phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 27363  008728  0E02               	movlw	2
 27364  00872A  6011               	cpfslt	setTxPower@power^0,c
 27365  00872C  D002               	goto	l11035
 27366                           
 27367                           ;../phy/sx1216/phy_src/phy.c: 142:     {;../phy/sx1216/phy_src/phy.c: 143:         power
      +                           = 2;
 27368  00872E  0E02               	movlw	2
 27369  008730  6E11               	movwf	setTxPower@power^0,c
 27370  008732                     l11035:
 27371                           
 27372                           ;../phy/sx1216/phy_src/phy.c: 145:     if(power > 5)
 27373  008732  0E05               	movlw	5
 27374  008734  6411               	cpfsgt	setTxPower@power^0,c
 27375  008736  D002               	goto	l11039
 27376                           
 27377                           ;../phy/sx1216/phy_src/phy.c: 146:     {;../phy/sx1216/phy_src/phy.c: 147:         power
      +                           = 5;
 27378  008738  0E05               	movlw	5
 27379  00873A  6E11               	movwf	setTxPower@power^0,c
 27380  00873C                     l11039:
 27381                           
 27382                           ;../phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 27383  00873C  5011               	movf	setTxPower@power^0,w,c
 27384  00873E  0FFE               	addlw	254
 27385  008740  6E11               	movwf	setTxPower@power^0,c
 27386                           
 27387                           ;../phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 27388  008742  5011               	movf	setTxPower@power^0,w,c
 27389  008744  09F0               	iorlw	240
 27390  008746  6E0F               	movwf	SX1276Write@data^0,c
 27391  008748  0E09               	movlw	9
 27392  00874A  ECFC  F045         	call	_SX1276Write
 27393                           
 27394                           ; BSR set to: 61
 27395  00874E  0012               	return		;funcret
 27396  008750                     __end_of_setTxPower:
 27397                           	opt callstack 0
 27398                           
 27399 ;; *************** function _setSpreadingFactor *****************
 27400 ;; Defined at:
 27401 ;;		line 198 in file "../phy/sx1216/phy_src/phy.c"
 27402 ;; Parameters:    Size  Location     Type
 27403 ;;  sf              1    wreg     unsigned char 
 27404 ;; Auto vars:     Size  Location     Type
 27405 ;;  sf              1   42[COMRAM] unsigned char 
 27406 ;; Return value:  Size  Location     Type
 27407 ;;                  1    wreg      void 
 27408 ;; Registers used:
 27409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27410 ;; Tracked objects:
 27411 ;;		On entry : 3F/3D
 27412 ;;		On exit  : 0/0
 27413 ;;		Unchanged: 0/0
 27414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27416 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27418 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27419 ;;Total ram usage:        9 bytes
 27420 ;; Hardware stack levels used:    1
 27421 ;; Hardware stack levels required when called:   12
 27422 ;; This function calls:
 27423 ;;		_SX1276Read
 27424 ;;		_SX1276Write
 27425 ;;		___lldiv
 27426 ;;		_getSignalBandwidth
 27427 ;;		_getSpreadingFactor
 27428 ;; This function is called by:
 27429 ;;		_initRadio
 27430 ;; This function uses a non-reentrant model
 27431 ;;
 27432                           
 27433                           	psect	text174
 27434  00526A                     __ptext174:
 27435                           	opt callstack 0
 27436  00526A                     _setSpreadingFactor:
 27437                           	opt callstack 14
 27438                           
 27439                           ; BSR set to: 61
 27440                           ;incstack = 0
 27441                           ;setSpreadingFactor@sf stored from wreg
 27442  00526A  6E2B               	movwf	setSpreadingFactor@sf^0,c
 27443                           
 27444                           ;../phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);../phy/sx1216/phy
      +                          _src/phy.c: 199: {;../phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 27445  00526C  0E07               	movlw	7
 27446  00526E  602B               	cpfslt	setSpreadingFactor@sf^0,c
 27447  005270  D002               	goto	l15279
 27448                           
 27449                           ;../phy/sx1216/phy_src/phy.c: 201:     {;../phy/sx1216/phy_src/phy.c: 202:         sf = 
      +                          7;
 27450  005272  0E07               	movlw	7
 27451  005274  D004               	goto	L25
 27452  005276                     l15279:
 27453  005276  0E0C               	movlw	12
 27454  005278  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 27455  00527A  D002               	goto	l15283
 27456                           
 27457                           ;../phy/sx1216/phy_src/phy.c: 205:     {;../phy/sx1216/phy_src/phy.c: 206:         sf = 
      +                          12;
 27458  00527C  0E0C               	movlw	12
 27459  00527E                     L25:
 27460  00527E  6E2B               	movwf	setSpreadingFactor@sf^0,c
 27461  005280                     l15283:
 27462                           
 27463                           ;../phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 27464  005280  0EC3               	movlw	195
 27465  005282  6E0F               	movwf	SX1276Write@data^0,c
 27466  005284  0E31               	movlw	49
 27467  005286  ECFC  F045         	call	_SX1276Write
 27468                           
 27469                           ; BSR set to: 61
 27470                           ;../phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 27471  00528A  0E0A               	movlw	10
 27472  00528C  6E0F               	movwf	SX1276Write@data^0,c
 27473  00528E  0E37               	movlw	55
 27474  005290  ECFC  F045         	call	_SX1276Write
 27475                           
 27476                           ; BSR set to: 61
 27477                           ;../phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((s
      +                          f << 4) & 0xf0));
 27478  005294  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 27479  00529A  3A23               	swapf	??_setSpreadingFactor^0,f,c
 27480  00529C  0EF0               	movlw	240
 27481  00529E  1623               	andwf	??_setSpreadingFactor^0,f,c
 27482  0052A0  0EF0               	movlw	240
 27483  0052A2  1623               	andwf	??_setSpreadingFactor^0,f,c
 27484  0052A4  0E1E               	movlw	30
 27485  0052A6  ECDE  F045         	call	_SX1276Read
 27486  0052AA  0B0F               	andlw	15
 27487  0052AC  1023               	iorwf	??_setSpreadingFactor^0,w,c
 27488  0052AE  6E0F               	movwf	SX1276Write@data^0,c
 27489  0052B0  0E1E               	movlw	30
 27490  0052B2  ECFC  F045         	call	_SX1276Write
 27491                           
 27492                           ; BSR set to: 61
 27493                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 27494  0052B6  EC5A  F045         	call	_getSpreadingFactor	;wreg free
 27495  0052BA  0E01               	movlw	1
 27496  0052BC  6E23               	movwf	??_setSpreadingFactor^0,c
 27497  0052BE  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 27498  0052C0  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 27499  0052C2  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 27500  0052C4  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27501  0052C6  D005               	goto	u14920
 27502  0052C8                     u14925:
 27503  0052C8  90D8               	bcf	status,0,c
 27504  0052CA  3623               	rlcf	??_setSpreadingFactor^0,f,c
 27505  0052CC  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 27506  0052CE  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 27507  0052D0  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 27508  0052D2                     u14920:
 27509  0052D2  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27510  0052D4  D7F9               	goto	u14925
 27511  0052D6  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 27512  0052DC  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 27513  0052E2  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 27514  0052E8  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 27515  0052EE  EC79  F026         	call	_getSignalBandwidth	;wreg free
 27516  0052F2  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27517  0052F8  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27518  0052FE  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27519  005304  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27520  00530A  ECDD  F037         	call	___lldiv	;wreg free
 27521  00530E  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$8634
 27522  005314  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$8634+1
 27523  00531A  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$8634+2
 27524  005320  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$8634+3
 27525                           
 27526                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 27527  005326  0EE8               	movlw	232
 27528  005328  6E16               	movwf	___lldiv@dividend^0,c
 27529  00532A  0E03               	movlw	3
 27530  00532C  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27531  00532E  0E00               	movlw	0
 27532  005330  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27533  005332  0E00               	movlw	0
 27534  005334  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27535  005336  0060  F09C  F01A   	movff	_setSpreadingFactor$8634,___lldiv@divisor
 27536  00533C  0060  F0A0  F01B   	movff	_setSpreadingFactor$8634+1,___lldiv@divisor+1
 27537  005342  0060  F0A4  F01C   	movff	_setSpreadingFactor$8634+2,___lldiv@divisor+2
 27538  005348  0060  F0A8  F01D   	movff	_setSpreadingFactor$8634+3,___lldiv@divisor+3
 27539  00534E  ECDD  F037         	call	___lldiv	;wreg free
 27540  005352  0060  F058  F14E   	movff	?___lldiv,_symbolDuration
 27541  005358  0060  F05C  F14F   	movff	?___lldiv+1,_symbolDuration+1
 27542  00535E  0060  F060  F150   	movff	?___lldiv+2,_symbolDuration+2
 27543  005364  0060  F064  F151   	movff	?___lldiv+3,_symbolDuration+3
 27544  00536A  0012               	return		;funcret
 27545  00536C                     __end_of_setSpreadingFactor:
 27546                           	opt callstack 0
 27547                           
 27548 ;; *************** function _setSignalBandwidth *****************
 27549 ;; Defined at:
 27550 ;;		line 223 in file "../phy/sx1216/phy_src/phy.c"
 27551 ;; Parameters:    Size  Location     Type
 27552 ;;  sbw             4   34[COMRAM] unsigned long 
 27553 ;; Auto vars:     Size  Location     Type
 27554 ;;  bw              4   46[COMRAM] unsigned long 
 27555 ;; Return value:  Size  Location     Type
 27556 ;;                  1    wreg      void 
 27557 ;; Registers used:
 27558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27559 ;; Tracked objects:
 27560 ;;		On entry : 3F/3D
 27561 ;;		On exit  : 0/0
 27562 ;;		Unchanged: 0/0
 27563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27565 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27566 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27567 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27568 ;;Total ram usage:       16 bytes
 27569 ;; Hardware stack levels used:    1
 27570 ;; Hardware stack levels required when called:   12
 27571 ;; This function calls:
 27572 ;;		_SX1276Read
 27573 ;;		_SX1276Write
 27574 ;;		___flge
 27575 ;;		___lldiv
 27576 ;;		___xxtofl
 27577 ;;		_getSignalBandwidth
 27578 ;;		_getSpreadingFactor
 27579 ;; This function is called by:
 27580 ;;		_initRadio
 27581 ;; This function uses a non-reentrant model
 27582 ;;
 27583                           
 27584                           	psect	text175
 27585  000F5E                     __ptext175:
 27586                           	opt callstack 0
 27587  000F5E                     _setSignalBandwidth:
 27588                           	opt callstack 14
 27589                           
 27590                           ; BSR set to: 61
 27591                           ;../phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);../phy/sx1216/p
      +                          hy_src/phy.c: 224: {;../phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;../phy/sx1216/phy_
      +                          src/phy.c: 227:   if (sbw <= 7.8E3) {
 27592                           
 27593                           ;incstack = 0
 27594  000F5E  0E00               	movlw	0
 27595  000F60  6E10               	movwf	___flge@ff1^0,c
 27596  000F62  0EC0               	movlw	192
 27597  000F64  6E11               	movwf	(___flge@ff1+1)^0,c
 27598  000F66  0EF3               	movlw	243
 27599  000F68  6E12               	movwf	(___flge@ff1+2)^0,c
 27600  000F6A  0E45               	movlw	69
 27601  000F6C  6E13               	movwf	(___flge@ff1+3)^0,c
 27602  000F6E  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27603  000F74  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27604  000F7A  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27605  000F80  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27606  000F86  0E00               	movlw	0
 27607  000F88  EC25  F020         	call	___xxtofl
 27608  000F8C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27609  000F92  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27610  000F98  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27611  000F9E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27612  000FA4  EC78  F02F         	call	___flge	;wreg free
 27613  000FA8  A0D8               	btfss	status,0,c
 27614  000FAA  D002               	goto	l15297
 27615                           
 27616                           ;../phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 27617  000FAC  0E00               	movlw	0
 27618  000FAE  D149               	goto	L26
 27619  000FB0                     l15297:
 27620  000FB0  0E00               	movlw	0
 27621  000FB2  6E10               	movwf	___flge@ff1^0,c
 27622  000FB4  0E80               	movlw	128
 27623  000FB6  6E11               	movwf	(___flge@ff1+1)^0,c
 27624  000FB8  0E22               	movlw	34
 27625  000FBA  6E12               	movwf	(___flge@ff1+2)^0,c
 27626  000FBC  0E46               	movlw	70
 27627  000FBE  6E13               	movwf	(___flge@ff1+3)^0,c
 27628  000FC0  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27629  000FC6  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27630  000FCC  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27631  000FD2  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27632  000FD8  0E00               	movlw	0
 27633  000FDA  EC25  F020         	call	___xxtofl
 27634  000FDE  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27635  000FE4  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27636  000FEA  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27637  000FF0  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27638  000FF6  EC78  F02F         	call	___flge	;wreg free
 27639  000FFA  A0D8               	btfss	status,0,c
 27640  000FFC  D002               	goto	l15301
 27641                           
 27642                           ;../phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 27643  000FFE  0E01               	movlw	1
 27644  001000  D120               	goto	L26
 27645  001002                     l15301:
 27646  001002  0E00               	movlw	0
 27647  001004  6E10               	movwf	___flge@ff1^0,c
 27648  001006  0EC0               	movlw	192
 27649  001008  6E11               	movwf	(___flge@ff1+1)^0,c
 27650  00100A  0E73               	movlw	115
 27651  00100C  6E12               	movwf	(___flge@ff1+2)^0,c
 27652  00100E  0E46               	movlw	70
 27653  001010  6E13               	movwf	(___flge@ff1+3)^0,c
 27654  001012  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27655  001018  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27656  00101E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27657  001024  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27658  00102A  0E00               	movlw	0
 27659  00102C  EC25  F020         	call	___xxtofl
 27660  001030  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27661  001036  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27662  00103C  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27663  001042  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27664  001048  EC78  F02F         	call	___flge	;wreg free
 27665  00104C  A0D8               	btfss	status,0,c
 27666  00104E  D002               	goto	l15305
 27667                           
 27668                           ;../phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 27669  001050  0E02               	movlw	2
 27670  001052  D0F7               	goto	L26
 27671  001054                     l15305:
 27672  001054  0E00               	movlw	0
 27673  001056  6E10               	movwf	___flge@ff1^0,c
 27674  001058  0E80               	movlw	128
 27675  00105A  6E11               	movwf	(___flge@ff1+1)^0,c
 27676  00105C  0EA2               	movlw	162
 27677  00105E  6E12               	movwf	(___flge@ff1+2)^0,c
 27678  001060  0E46               	movlw	70
 27679  001062  6E13               	movwf	(___flge@ff1+3)^0,c
 27680  001064  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27681  00106A  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27682  001070  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27683  001076  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27684  00107C  0E00               	movlw	0
 27685  00107E  EC25  F020         	call	___xxtofl
 27686  001082  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27687  001088  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27688  00108E  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27689  001094  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27690  00109A  EC78  F02F         	call	___flge	;wreg free
 27691  00109E  A0D8               	btfss	status,0,c
 27692  0010A0  D002               	goto	l15309
 27693                           
 27694                           ;../phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 27695  0010A2  0E03               	movlw	3
 27696  0010A4  D0CE               	goto	L26
 27697  0010A6                     l15309:
 27698  0010A6  0E00               	movlw	0
 27699  0010A8  6E10               	movwf	___flge@ff1^0,c
 27700  0010AA  0E24               	movlw	36
 27701  0010AC  6E11               	movwf	(___flge@ff1+1)^0,c
 27702  0010AE  0EF4               	movlw	244
 27703  0010B0  6E12               	movwf	(___flge@ff1+2)^0,c
 27704  0010B2  0E46               	movlw	70
 27705  0010B4  6E13               	movwf	(___flge@ff1+3)^0,c
 27706  0010B6  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27707  0010BC  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27708  0010C2  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27709  0010C8  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27710  0010CE  0E00               	movlw	0
 27711  0010D0  EC25  F020         	call	___xxtofl
 27712  0010D4  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27713  0010DA  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27714  0010E0  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27715  0010E6  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27716  0010EC  EC78  F02F         	call	___flge	;wreg free
 27717  0010F0  A0D8               	btfss	status,0,c
 27718  0010F2  D002               	goto	l15313
 27719                           
 27720                           ;../phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 27721  0010F4  0E04               	movlw	4
 27722  0010F6  D0A5               	goto	L26
 27723  0010F8                     l15313:
 27724  0010F8  0E00               	movlw	0
 27725  0010FA  6E10               	movwf	___flge@ff1^0,c
 27726  0010FC  0EE4               	movlw	228
 27727  0010FE  6E11               	movwf	(___flge@ff1+1)^0,c
 27728  001100  0E22               	movlw	34
 27729  001102  6E12               	movwf	(___flge@ff1+2)^0,c
 27730  001104  0E47               	movlw	71
 27731  001106  6E13               	movwf	(___flge@ff1+3)^0,c
 27732  001108  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27733  00110E  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27734  001114  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27735  00111A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27736  001120  0E00               	movlw	0
 27737  001122  EC25  F020         	call	___xxtofl
 27738  001126  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27739  00112C  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27740  001132  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27741  001138  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27742  00113E  EC78  F02F         	call	___flge	;wreg free
 27743  001142  A0D8               	btfss	status,0,c
 27744  001144  D002               	goto	l15317
 27745                           
 27746                           ;../phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 27747  001146  0E05               	movlw	5
 27748  001148  D07C               	goto	L26
 27749  00114A                     l15317:
 27750  00114A  0E00               	movlw	0
 27751  00114C  6E10               	movwf	___flge@ff1^0,c
 27752  00114E  0E24               	movlw	36
 27753  001150  6E11               	movwf	(___flge@ff1+1)^0,c
 27754  001152  0E74               	movlw	116
 27755  001154  6E12               	movwf	(___flge@ff1+2)^0,c
 27756  001156  0E47               	movlw	71
 27757  001158  6E13               	movwf	(___flge@ff1+3)^0,c
 27758  00115A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27759  001160  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27760  001166  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27761  00116C  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27762  001172  0E00               	movlw	0
 27763  001174  EC25  F020         	call	___xxtofl
 27764  001178  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27765  00117E  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27766  001184  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27767  00118A  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27768  001190  EC78  F02F         	call	___flge	;wreg free
 27769  001194  A0D8               	btfss	status,0,c
 27770  001196  D002               	goto	l15321
 27771                           
 27772                           ;../phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 27773  001198  0E06               	movlw	6
 27774  00119A  D053               	goto	L26
 27775  00119C                     l15321:
 27776  00119C  0E00               	movlw	0
 27777  00119E  6E10               	movwf	___flge@ff1^0,c
 27778  0011A0  0E24               	movlw	36
 27779  0011A2  6E11               	movwf	(___flge@ff1+1)^0,c
 27780  0011A4  0EF4               	movlw	244
 27781  0011A6  6E12               	movwf	(___flge@ff1+2)^0,c
 27782  0011A8  0E47               	movlw	71
 27783  0011AA  6E13               	movwf	(___flge@ff1+3)^0,c
 27784  0011AC  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27785  0011B2  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27786  0011B8  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27787  0011BE  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27788  0011C4  0E00               	movlw	0
 27789  0011C6  EC25  F020         	call	___xxtofl
 27790  0011CA  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27791  0011D0  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27792  0011D6  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27793  0011DC  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27794  0011E2  EC78  F02F         	call	___flge	;wreg free
 27795  0011E6  A0D8               	btfss	status,0,c
 27796  0011E8  D002               	goto	l15325
 27797                           
 27798                           ;../phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 27799  0011EA  0E07               	movlw	7
 27800  0011EC  D02A               	goto	L26
 27801  0011EE                     l15325:
 27802  0011EE  0E00               	movlw	0
 27803  0011F0  6E10               	movwf	___flge@ff1^0,c
 27804  0011F2  0E24               	movlw	36
 27805  0011F4  6E11               	movwf	(___flge@ff1+1)^0,c
 27806  0011F6  0E74               	movlw	116
 27807  0011F8  6E12               	movwf	(___flge@ff1+2)^0,c
 27808  0011FA  0E48               	movlw	72
 27809  0011FC  6E13               	movwf	(___flge@ff1+3)^0,c
 27810  0011FE  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 27811  001204  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 27812  00120A  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 27813  001210  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 27814  001216  0E00               	movlw	0
 27815  001218  EC25  F020         	call	___xxtofl
 27816  00121C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 27817  001222  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 27818  001228  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 27819  00122E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 27820  001234  EC78  F02F         	call	___flge	;wreg free
 27821  001238  A0D8               	btfss	status,0,c
 27822  00123A  D002               	goto	l15329
 27823                           
 27824                           ;../phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 27825  00123C  0E08               	movlw	8
 27826  00123E  D001               	goto	L26
 27827  001240                     l15329:
 27828                           
 27829                           ;../phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 27830  001240  0E09               	movlw	9
 27831  001242                     L26:
 27832  001242  6E2F               	movwf	setSignalBandwidth@bw^0,c
 27833  001244  0E00               	movlw	0
 27834  001246  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 27835  001248  0E00               	movlw	0
 27836  00124A  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 27837  00124C  0E00               	movlw	0
 27838  00124E  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 27839                           
 27840                           ;../phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw <
      +                          < 4));
 27841  001250  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 27842  001256  3A27               	swapf	??_setSignalBandwidth^0,f,c
 27843  001258  0EF0               	movlw	240
 27844  00125A  1627               	andwf	??_setSignalBandwidth^0,f,c
 27845  00125C  0E1D               	movlw	29
 27846  00125E  ECDE  F045         	call	_SX1276Read
 27847  001262  0B0F               	andlw	15
 27848  001264  1027               	iorwf	??_setSignalBandwidth^0,w,c
 27849  001266  6E0F               	movwf	SX1276Write@data^0,c
 27850  001268  0E1D               	movlw	29
 27851  00126A  ECFC  F045         	call	_SX1276Write
 27852                           
 27853                           ; BSR set to: 61
 27854                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 27855  00126E  EC5A  F045         	call	_getSpreadingFactor	;wreg free
 27856  001272  0E01               	movlw	1
 27857  001274  6E27               	movwf	??_setSignalBandwidth^0,c
 27858  001276  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 27859  001278  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 27860  00127A  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 27861  00127C  2A0F               	incf	?_getSpreadingFactor^0,f,c
 27862  00127E  D005               	goto	u15020
 27863  001280                     u15025:
 27864  001280  90D8               	bcf	status,0,c
 27865  001282  3627               	rlcf	??_setSignalBandwidth^0,f,c
 27866  001284  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 27867  001286  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 27868  001288  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 27869  00128A                     u15020:
 27870  00128A  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 27871  00128C  D7F9               	goto	u15025
 27872  00128E  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 27873  001294  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 27874  00129A  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 27875  0012A0  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 27876  0012A6  EC79  F026         	call	_getSignalBandwidth	;wreg free
 27877  0012AA  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 27878  0012B0  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 27879  0012B6  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 27880  0012BC  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 27881  0012C2  ECDD  F037         	call	___lldiv	;wreg free
 27882  0012C6  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$8635
 27883  0012CC  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$8635+1
 27884  0012D2  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$8635+2
 27885  0012D8  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$8635+3
 27886                           
 27887                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 27888  0012DE  0EE8               	movlw	232
 27889  0012E0  6E16               	movwf	___lldiv@dividend^0,c
 27890  0012E2  0E03               	movlw	3
 27891  0012E4  6E17               	movwf	(___lldiv@dividend+1)^0,c
 27892  0012E6  0E00               	movlw	0
 27893  0012E8  6E18               	movwf	(___lldiv@dividend+2)^0,c
 27894  0012EA  0E00               	movlw	0
 27895  0012EC  6E19               	movwf	(___lldiv@dividend+3)^0,c
 27896  0012EE  0060  F0AC  F01A   	movff	_setSignalBandwidth$8635,___lldiv@divisor
 27897  0012F4  0060  F0B0  F01B   	movff	_setSignalBandwidth$8635+1,___lldiv@divisor+1
 27898  0012FA  0060  F0B4  F01C   	movff	_setSignalBandwidth$8635+2,___lldiv@divisor+2
 27899  001300  0060  F0B8  F01D   	movff	_setSignalBandwidth$8635+3,___lldiv@divisor+3
 27900  001306  ECDD  F037         	call	___lldiv	;wreg free
 27901  00130A  0060  F058  F14E   	movff	?___lldiv,_symbolDuration
 27902  001310  0060  F05C  F14F   	movff	?___lldiv+1,_symbolDuration+1
 27903  001316  0060  F060  F150   	movff	?___lldiv+2,_symbolDuration+2
 27904  00131C  0060  F064  F151   	movff	?___lldiv+3,_symbolDuration+3
 27905  001322  0012               	return		;funcret
 27906  001324                     __end_of_setSignalBandwidth:
 27907                           	opt callstack 0
 27908                           
 27909 ;; *************** function _getSpreadingFactor *****************
 27910 ;; Defined at:
 27911 ;;		line 261 in file "../phy/sx1216/phy_src/phy.c"
 27912 ;; Parameters:    Size  Location     Type
 27913 ;;		None
 27914 ;; Auto vars:     Size  Location     Type
 27915 ;;		None
 27916 ;; Return value:  Size  Location     Type
 27917 ;;                  4   14[COMRAM] unsigned long 
 27918 ;; Registers used:
 27919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27920 ;; Tracked objects:
 27921 ;;		On entry : 3F/3D
 27922 ;;		On exit  : 3F/3D
 27923 ;;		Unchanged: 0/0
 27924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27928 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27929 ;;Total ram usage:        5 bytes
 27930 ;; Hardware stack levels used:    1
 27931 ;; Hardware stack levels required when called:   11
 27932 ;; This function calls:
 27933 ;;		_SX1276Read
 27934 ;; This function is called by:
 27935 ;;		_setSpreadingFactor
 27936 ;;		_setSignalBandwidth
 27937 ;; This function uses a non-reentrant model
 27938 ;;
 27939                           
 27940                           	psect	text176
 27941  008AB4                     __ptext176:
 27942                           	opt callstack 0
 27943  008AB4                     _getSpreadingFactor:
 27944                           	opt callstack 14
 27945                           
 27946                           ; BSR set to: 61
 27947                           ;../phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 27948                           
 27949                           ;incstack = 0
 27950  008AB4  0E1E               	movlw	30
 27951  008AB6  ECDE  F045         	call	_SX1276Read
 27952  008ABA  6E13               	movwf	??_getSpreadingFactor^0,c
 27953  008ABC  3A13               	swapf	??_getSpreadingFactor^0,f,c
 27954  008ABE  0E0F               	movlw	15
 27955  008AC0  1613               	andwf	??_getSpreadingFactor^0,f,c
 27956  008AC2  5013               	movf	??_getSpreadingFactor^0,w,c
 27957  008AC4  6E0F               	movwf	?_getSpreadingFactor^0,c
 27958  008AC6  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 27959  008AC8  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 27960  008ACA  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 27961                           
 27962                           ; BSR set to: 61
 27963  008ACC  0012               	return		;funcret
 27964  008ACE                     __end_of_getSpreadingFactor:
 27965                           	opt callstack 0
 27966                           
 27967 ;; *************** function _getSignalBandwidth *****************
 27968 ;; Defined at:
 27969 ;;		line 272 in file "../phy/sx1216/phy_src/phy.c"
 27970 ;; Parameters:    Size  Location     Type
 27971 ;;		None
 27972 ;; Auto vars:     Size  Location     Type
 27973 ;;  bw              1   20[COMRAM] unsigned char 
 27974 ;; Return value:  Size  Location     Type
 27975 ;;                  4   14[COMRAM] unsigned long 
 27976 ;; Registers used:
 27977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27978 ;; Tracked objects:
 27979 ;;		On entry : 3F/3D
 27980 ;;		On exit  : 3F/3D
 27981 ;;		Unchanged: 0/0
 27982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27986 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27987 ;;Total ram usage:        7 bytes
 27988 ;; Hardware stack levels used:    1
 27989 ;; Hardware stack levels required when called:   11
 27990 ;; This function calls:
 27991 ;;		_SX1276Read
 27992 ;; This function is called by:
 27993 ;;		_setSpreadingFactor
 27994 ;;		_setSignalBandwidth
 27995 ;; This function uses a non-reentrant model
 27996 ;;
 27997                           
 27998                           	psect	text177
 27999  004CF2                     __ptext177:
 28000                           	opt callstack 0
 28001  004CF2                     _getSignalBandwidth:
 28002                           	opt callstack 14
 28003                           
 28004                           ; BSR set to: 61
 28005                           ;../phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 28006                           
 28007                           ; BSR set to: 61
 28008                           ;incstack = 0
 28009  004CF2  0E1D               	movlw	29
 28010  004CF4  ECDE  F045         	call	_SX1276Read
 28011  004CF8  6E13               	movwf	??_getSignalBandwidth^0,c
 28012  004CFA  3813               	swapf	??_getSignalBandwidth^0,w,c
 28013  004CFC  0B0F               	andlw	15
 28014  004CFE  6E15               	movwf	getSignalBandwidth@bw^0,c
 28015                           
 28016                           ;../phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 28017  004D00  D05A               	goto	l14947
 28018  004D02                     l14905:
 28019                           
 28020                           ; BSR set to: 61
 28021  004D02  0E78               	movlw	120
 28022  004D04  6E0F               	movwf	?_getSignalBandwidth^0,c
 28023  004D06  0E1E               	movlw	30
 28024  004D08  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28025  004D0A  0E00               	movlw	0
 28026  004D0C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28027  004D0E  0E00               	movlw	0
 28028  004D10  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28029  004D12  0012               	return	
 28030  004D14                     l14909:
 28031                           
 28032                           ; BSR set to: 61
 28033  004D14  0EA0               	movlw	160
 28034  004D16  6E0F               	movwf	?_getSignalBandwidth^0,c
 28035  004D18  0E28               	movlw	40
 28036  004D1A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28037  004D1C  0E00               	movlw	0
 28038  004D1E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28039  004D20  0E00               	movlw	0
 28040  004D22  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28041  004D24  0012               	return	
 28042  004D26                     l14913:
 28043                           
 28044                           ; BSR set to: 61
 28045  004D26  0EF0               	movlw	240
 28046  004D28  6E0F               	movwf	?_getSignalBandwidth^0,c
 28047  004D2A  0E3C               	movlw	60
 28048  004D2C  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28049  004D2E  0E00               	movlw	0
 28050  004D30  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28051  004D32  0E00               	movlw	0
 28052  004D34  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28053  004D36  0012               	return	
 28054  004D38                     l14917:
 28055                           
 28056                           ; BSR set to: 61
 28057  004D38  0E40               	movlw	64
 28058  004D3A  6E0F               	movwf	?_getSignalBandwidth^0,c
 28059  004D3C  0E51               	movlw	81
 28060  004D3E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28061  004D40  0E00               	movlw	0
 28062  004D42  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28063  004D44  0E00               	movlw	0
 28064  004D46  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28065  004D48  0012               	return	
 28066  004D4A                     l14921:
 28067                           
 28068                           ; BSR set to: 61
 28069  004D4A  0E12               	movlw	18
 28070  004D4C  6E0F               	movwf	?_getSignalBandwidth^0,c
 28071  004D4E  0E7A               	movlw	122
 28072  004D50  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28073  004D52  0E00               	movlw	0
 28074  004D54  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28075  004D56  0E00               	movlw	0
 28076  004D58  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28077  004D5A  0012               	return	
 28078  004D5C                     l14925:
 28079                           
 28080                           ; BSR set to: 61
 28081  004D5C  0EE4               	movlw	228
 28082  004D5E  6E0F               	movwf	?_getSignalBandwidth^0,c
 28083  004D60  0EA2               	movlw	162
 28084  004D62  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28085  004D64  0E00               	movlw	0
 28086  004D66  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28087  004D68  0E00               	movlw	0
 28088  004D6A  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28089  004D6C  0012               	return	
 28090  004D6E                     l14929:
 28091                           
 28092                           ; BSR set to: 61
 28093  004D6E  0E24               	movlw	36
 28094  004D70  6E0F               	movwf	?_getSignalBandwidth^0,c
 28095  004D72  0EF4               	movlw	244
 28096  004D74  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28097  004D76  0E00               	movlw	0
 28098  004D78  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28099  004D7A  0E00               	movlw	0
 28100  004D7C  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28101  004D7E  0012               	return	
 28102  004D80                     l14933:
 28103                           
 28104                           ; BSR set to: 61
 28105  004D80  0E48               	movlw	72
 28106  004D82  6E0F               	movwf	?_getSignalBandwidth^0,c
 28107  004D84  0EE8               	movlw	232
 28108  004D86  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28109  004D88  0E01               	movlw	1
 28110  004D8A  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28111  004D8C  0E00               	movlw	0
 28112  004D8E  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28113  004D90  0012               	return	
 28114  004D92                     l14937:
 28115                           
 28116                           ; BSR set to: 61
 28117  004D92  0E90               	movlw	144
 28118  004D94  6E0F               	movwf	?_getSignalBandwidth^0,c
 28119  004D96  0ED0               	movlw	208
 28120  004D98  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28121  004D9A  0E03               	movlw	3
 28122  004D9C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28123  004D9E  0E00               	movlw	0
 28124  004DA0  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28125  004DA2  0012               	return	
 28126  004DA4                     l14941:
 28127                           
 28128                           ; BSR set to: 61
 28129  004DA4  0E20               	movlw	32
 28130  004DA6  6E0F               	movwf	?_getSignalBandwidth^0,c
 28131  004DA8  0EA1               	movlw	161
 28132  004DAA  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28133  004DAC  0E07               	movlw	7
 28134  004DAE  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28135  004DB0  0E00               	movlw	0
 28136  004DB2  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28137  004DB4  0012               	return	
 28138  004DB6                     l14947:
 28139                           
 28140                           ; BSR set to: 61
 28141  004DB6  5015               	movf	getSignalBandwidth@bw^0,w,c
 28142  004DB8  6E13               	movwf	??_getSignalBandwidth^0,c
 28143  004DBA  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 28144                           
 28145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28146                           ; Switch size 1, requested type "simple"
 28147                           ; Number of cases is 1, Range of values is 0 to 0
 28148                           ; switch strategies available:
 28149                           ; Name         Instructions Cycles
 28150                           ; simple_byte            4     3 (average)
 28151                           ;	Chosen strategy is simple_byte
 28152  004DBC  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 28153  004DBE  0A00               	xorlw	0	; case 0
 28154  004DC0  A4D8               	btfss	status,2,c
 28155  004DC2  D01F               	goto	l14949
 28156                           
 28157                           ; BSR set to: 61
 28158                           ; Switch size 1, requested type "simple"
 28159                           ; Number of cases is 10, Range of values is 0 to 9
 28160                           ; switch strategies available:
 28161                           ; Name         Instructions Cycles
 28162                           ; simple_byte           31    16 (average)
 28163                           ;	Chosen strategy is simple_byte
 28164  004DC4  5013               	movf	??_getSignalBandwidth^0,w,c
 28165  004DC6  0A00               	xorlw	0	; case 0
 28166  004DC8  B4D8               	btfsc	status,2,c
 28167  004DCA  D79B               	goto	l14905
 28168  004DCC  0A01               	xorlw	1	; case 1
 28169  004DCE  B4D8               	btfsc	status,2,c
 28170  004DD0  D7A1               	goto	l14909
 28171  004DD2  0A03               	xorlw	3	; case 2
 28172  004DD4  B4D8               	btfsc	status,2,c
 28173  004DD6  D7A7               	goto	l14913
 28174  004DD8  0A01               	xorlw	1	; case 3
 28175  004DDA  B4D8               	btfsc	status,2,c
 28176  004DDC  D7AD               	goto	l14917
 28177  004DDE  0A07               	xorlw	7	; case 4
 28178  004DE0  B4D8               	btfsc	status,2,c
 28179  004DE2  D7B3               	goto	l14921
 28180  004DE4  0A01               	xorlw	1	; case 5
 28181  004DE6  B4D8               	btfsc	status,2,c
 28182  004DE8  D7B9               	goto	l14925
 28183  004DEA  0A03               	xorlw	3	; case 6
 28184  004DEC  B4D8               	btfsc	status,2,c
 28185  004DEE  D7BF               	goto	l14929
 28186  004DF0  0A01               	xorlw	1	; case 7
 28187  004DF2  B4D8               	btfsc	status,2,c
 28188  004DF4  D7C5               	goto	l14933
 28189  004DF6  0A0F               	xorlw	15	; case 8
 28190  004DF8  B4D8               	btfsc	status,2,c
 28191  004DFA  D7CB               	goto	l14937
 28192  004DFC  0A01               	xorlw	1	; case 9
 28193  004DFE  B4D8               	btfsc	status,2,c
 28194  004E00  D7D1               	goto	l14941
 28195  004E02                     l14949:
 28196                           
 28197                           ; BSR set to: 61
 28198                           ;../phy/sx1216/phy_src/phy.c: 287:   return 0;
 28199  004E02  0E00               	movlw	0
 28200  004E04  6E0F               	movwf	?_getSignalBandwidth^0,c
 28201  004E06  0E00               	movlw	0
 28202  004E08  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28203  004E0A  0E00               	movlw	0
 28204  004E0C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28205  004E0E  0E00               	movlw	0
 28206  004E10  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28207                           
 28208                           ; BSR set to: 61
 28209  004E12  0012               	return		;funcret
 28210  004E14                     __end_of_getSignalBandwidth:
 28211                           	opt callstack 0
 28212                           
 28213 ;; *************** function ___xxtofl *****************
 28214 ;; Defined at:
 28215 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 28216 ;; Parameters:    Size  Location     Type
 28217 ;;  sign            1    wreg     unsigned char 
 28218 ;;  val             4    1[COMRAM] long 
 28219 ;; Auto vars:     Size  Location     Type
 28220 ;;  sign            1    9[COMRAM] unsigned char 
 28221 ;;  arg             4   11[COMRAM] unsigned long 
 28222 ;;  exp             1   10[COMRAM] unsigned char 
 28223 ;; Return value:  Size  Location     Type
 28224 ;;                  4    1[COMRAM] unsigned char 
 28225 ;; Registers used:
 28226 ;;		wreg, status,2, status,0
 28227 ;; Tracked objects:
 28228 ;;		On entry : 0/1
 28229 ;;		On exit  : 0/0
 28230 ;;		Unchanged: 0/0
 28231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28233 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28234 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28235 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28236 ;;Total ram usage:       14 bytes
 28237 ;; Hardware stack levels used:    1
 28238 ;; Hardware stack levels required when called:    7
 28239 ;; This function calls:
 28240 ;;		Nothing
 28241 ;; This function is called by:
 28242 ;;		_setSignalBandwidth
 28243 ;;		_get_lqi
 28244 ;; This function uses a non-reentrant model
 28245 ;;
 28246                           
 28247                           	psect	text178
 28248  00404A                     __ptext178:
 28249                           	opt callstack 0
 28250  00404A                     ___xxtofl:
 28251                           	opt callstack 18
 28252                           
 28253                           ; BSR set to: 61
 28254                           ;incstack = 0
 28255                           ;___xxtofl@sign stored from wreg
 28256  00404A  6E0A               	movwf	___xxtofl@sign^0,c
 28257  00404C  500A               	movf	___xxtofl@sign^0,w,c
 28258  00404E  A4D8               	btfss	status,2,c
 28259  004050  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28260  004052  D022               	goto	l3851
 28261  004054  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 28262  00405A  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 28263  004060  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 28264  004066  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 28265  00406C  1E06               	comf	??___xxtofl^0,f,c
 28266  00406E  1E07               	comf	(??___xxtofl+1)^0,f,c
 28267  004070  1E08               	comf	(??___xxtofl+2)^0,f,c
 28268  004072  1E09               	comf	(??___xxtofl+3)^0,f,c
 28269  004074  2A06               	incf	??___xxtofl^0,f,c
 28270  004076  0E00               	movlw	0
 28271  004078  2207               	addwfc	(??___xxtofl+1)^0,f,c
 28272  00407A  2208               	addwfc	(??___xxtofl+2)^0,f,c
 28273  00407C  2209               	addwfc	(??___xxtofl+3)^0,f,c
 28274  00407E  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 28275  004084  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 28276  00408A  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 28277  004090  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 28278  004096  D00C               	goto	l10609
 28279  004098                     l3851:
 28280  004098  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 28281  00409E  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 28282  0040A4  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 28283  0040AA  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 28284  0040B0                     l10609:
 28285  0040B0  5002               	movf	___xxtofl@val^0,w,c
 28286  0040B2  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 28287  0040B4  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 28288  0040B6  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 28289  0040B8  A4D8               	btfss	status,2,c
 28290  0040BA  D009               	goto	l10615
 28291  0040BC  0E00               	movlw	0
 28292  0040BE  6E02               	movwf	?___xxtofl^0,c
 28293  0040C0  0E00               	movlw	0
 28294  0040C2  6E03               	movwf	(?___xxtofl+1)^0,c
 28295  0040C4  0E00               	movlw	0
 28296  0040C6  6E04               	movwf	(?___xxtofl+2)^0,c
 28297  0040C8  0E00               	movlw	0
 28298  0040CA  6E05               	movwf	(?___xxtofl+3)^0,c
 28299  0040CC  0012               	return	
 28300  0040CE                     l10615:
 28301  0040CE  0E96               	movlw	150
 28302  0040D0  6E0B               	movwf	___xxtofl@exp^0,c
 28303  0040D2  D006               	goto	l10619
 28304  0040D4                     l10617:
 28305  0040D4  2A0B               	incf	___xxtofl@exp^0,f,c
 28306  0040D6  90D8               	bcf	status,0,c
 28307  0040D8  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28308  0040DA  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28309  0040DC  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28310  0040DE  320C               	rrcf	___xxtofl@arg^0,f,c
 28311  0040E0                     l10619:
 28312  0040E0  0E00               	movlw	0
 28313  0040E2  140C               	andwf	___xxtofl@arg^0,w,c
 28314  0040E4  6E06               	movwf	??___xxtofl^0,c
 28315  0040E6  0E00               	movlw	0
 28316  0040E8  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28317  0040EA  6E07               	movwf	(??___xxtofl+1)^0,c
 28318  0040EC  0E00               	movlw	0
 28319  0040EE  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28320  0040F0  6E08               	movwf	(??___xxtofl+2)^0,c
 28321  0040F2  0EFE               	movlw	254
 28322  0040F4  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28323  0040F6  6E09               	movwf	(??___xxtofl+3)^0,c
 28324  0040F8  5006               	movf	??___xxtofl^0,w,c
 28325  0040FA  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28326  0040FC  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28327  0040FE  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28328  004100  B4D8               	btfsc	status,2,c
 28329  004102  D00D               	goto	l3858
 28330  004104  D7E7               	goto	l10617
 28331  004106                     l10621:
 28332  004106  2A0B               	incf	___xxtofl@exp^0,f,c
 28333  004108  0E01               	movlw	1
 28334  00410A  260C               	addwf	___xxtofl@arg^0,f,c
 28335  00410C  0E00               	movlw	0
 28336  00410E  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 28337  004110  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 28338  004112  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 28339  004114  90D8               	bcf	status,0,c
 28340  004116  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28341  004118  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28342  00411A  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28343  00411C  320C               	rrcf	___xxtofl@arg^0,f,c
 28344  00411E                     l3858:
 28345  00411E  0E00               	movlw	0
 28346  004120  140C               	andwf	___xxtofl@arg^0,w,c
 28347  004122  6E06               	movwf	??___xxtofl^0,c
 28348  004124  0E00               	movlw	0
 28349  004126  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28350  004128  6E07               	movwf	(??___xxtofl+1)^0,c
 28351  00412A  0E00               	movlw	0
 28352  00412C  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28353  00412E  6E08               	movwf	(??___xxtofl+2)^0,c
 28354  004130  0EFF               	movlw	255
 28355  004132  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28356  004134  6E09               	movwf	(??___xxtofl+3)^0,c
 28357  004136  5006               	movf	??___xxtofl^0,w,c
 28358  004138  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28359  00413A  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28360  00413C  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28361  00413E  B4D8               	btfsc	status,2,c
 28362  004140  D007               	goto	l10629
 28363  004142  D7E1               	goto	l10621
 28364  004144                     l10627:
 28365  004144  060B               	decf	___xxtofl@exp^0,f,c
 28366  004146  90D8               	bcf	status,0,c
 28367  004148  360C               	rlcf	___xxtofl@arg^0,f,c
 28368  00414A  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 28369  00414C  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 28370  00414E  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 28371  004150                     l10629:
 28372  004150  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 28373  004152  D003               	goto	u8990
 28374  004154  0E02               	movlw	2
 28375  004156  600B               	cpfslt	___xxtofl@exp^0,c
 28376  004158  D7F5               	goto	l10627
 28377  00415A                     u8990:
 28378  00415A  A00B               	btfss	___xxtofl@exp^0,0,c
 28379  00415C  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 28380  00415E  90D8               	bcf	status,0,c
 28381  004160  320B               	rrcf	___xxtofl@exp^0,f,c
 28382  004162  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 28383  004168  6A07               	clrf	(??___xxtofl+1)^0,c
 28384  00416A  6A08               	clrf	(??___xxtofl+2)^0,c
 28385  00416C  6A09               	clrf	(??___xxtofl+3)^0,c
 28386  00416E  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 28387  004174  6A08               	clrf	(??___xxtofl+2)^0,c
 28388  004176  6A07               	clrf	(??___xxtofl+1)^0,c
 28389  004178  6A06               	clrf	??___xxtofl^0,c
 28390  00417A  5006               	movf	??___xxtofl^0,w,c
 28391  00417C  120C               	iorwf	___xxtofl@arg^0,f,c
 28392  00417E  5007               	movf	(??___xxtofl+1)^0,w,c
 28393  004180  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 28394  004182  5008               	movf	(??___xxtofl+2)^0,w,c
 28395  004184  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 28396  004186  5009               	movf	(??___xxtofl+3)^0,w,c
 28397  004188  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 28398  00418A  500A               	movf	___xxtofl@sign^0,w,c
 28399  00418C  A4D8               	btfss	status,2,c
 28400  00418E  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28401  004190  D001               	goto	l10645
 28402  004192  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 28403  004194                     l10645:
 28404  004194  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 28405  00419A  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 28406  0041A0  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 28407  0041A6  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 28408  0041AC  0012               	return		;funcret
 28409  0041AE                     __end_of___xxtofl:
 28410                           	opt callstack 0
 28411                           
 28412 ;; *************** function ___flge *****************
 28413 ;; Defined at:
 28414 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 28415 ;; Parameters:    Size  Location     Type
 28416 ;;  ff1             4   15[COMRAM] unsigned char 
 28417 ;;  ff2             4   19[COMRAM] unsigned char 
 28418 ;; Auto vars:     Size  Location     Type
 28419 ;;		None
 28420 ;; Return value:  Size  Location     Type
 28421 ;;		None               void
 28422 ;; Registers used:
 28423 ;;		wreg, status,2, status,0
 28424 ;; Tracked objects:
 28425 ;;		On entry : 0/3D
 28426 ;;		On exit  : 0/0
 28427 ;;		Unchanged: 0/0
 28428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28429 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28432 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28433 ;;Total ram usage:       12 bytes
 28434 ;; Hardware stack levels used:    1
 28435 ;; Hardware stack levels required when called:    7
 28436 ;; This function calls:
 28437 ;;		Nothing
 28438 ;; This function is called by:
 28439 ;;		_setSignalBandwidth
 28440 ;; This function uses a non-reentrant model
 28441 ;;
 28442                           
 28443                           	psect	text179
 28444  005EF0                     __ptext179:
 28445                           	opt callstack 0
 28446  005EF0                     ___flge:
 28447                           	opt callstack 18
 28448                           
 28449                           ;incstack = 0
 28450  005EF0  0E00               	movlw	0
 28451  005EF2  1410               	andwf	___flge@ff1^0,w,c
 28452  005EF4  6E18               	movwf	??___flge^0,c
 28453  005EF6  0E00               	movlw	0
 28454  005EF8  1411               	andwf	(___flge@ff1+1)^0,w,c
 28455  005EFA  6E19               	movwf	(??___flge+1)^0,c
 28456  005EFC  0E80               	movlw	128
 28457  005EFE  1412               	andwf	(___flge@ff1+2)^0,w,c
 28458  005F00  6E1A               	movwf	(??___flge+2)^0,c
 28459  005F02  0E7F               	movlw	127
 28460  005F04  1413               	andwf	(___flge@ff1+3)^0,w,c
 28461  005F06  6E1B               	movwf	(??___flge+3)^0,c
 28462  005F08  5018               	movf	??___flge^0,w,c
 28463  005F0A  1019               	iorwf	(??___flge+1)^0,w,c
 28464  005F0C  101A               	iorwf	(??___flge+2)^0,w,c
 28465  005F0E  101B               	iorwf	(??___flge+3)^0,w,c
 28466  005F10  A4D8               	btfss	status,2,c
 28467  005F12  D008               	goto	l10525
 28468  005F14  0E00               	movlw	0
 28469  005F16  6E10               	movwf	___flge@ff1^0,c
 28470  005F18  0E00               	movlw	0
 28471  005F1A  6E11               	movwf	(___flge@ff1+1)^0,c
 28472  005F1C  0E00               	movlw	0
 28473  005F1E  6E12               	movwf	(___flge@ff1+2)^0,c
 28474  005F20  0E00               	movlw	0
 28475  005F22  6E13               	movwf	(___flge@ff1+3)^0,c
 28476  005F24                     l10525:
 28477  005F24  0E00               	movlw	0
 28478  005F26  1414               	andwf	___flge@ff2^0,w,c
 28479  005F28  6E18               	movwf	??___flge^0,c
 28480  005F2A  0E00               	movlw	0
 28481  005F2C  1415               	andwf	(___flge@ff2+1)^0,w,c
 28482  005F2E  6E19               	movwf	(??___flge+1)^0,c
 28483  005F30  0E80               	movlw	128
 28484  005F32  1416               	andwf	(___flge@ff2+2)^0,w,c
 28485  005F34  6E1A               	movwf	(??___flge+2)^0,c
 28486  005F36  0E7F               	movlw	127
 28487  005F38  1417               	andwf	(___flge@ff2+3)^0,w,c
 28488  005F3A  6E1B               	movwf	(??___flge+3)^0,c
 28489  005F3C  5018               	movf	??___flge^0,w,c
 28490  005F3E  1019               	iorwf	(??___flge+1)^0,w,c
 28491  005F40  101A               	iorwf	(??___flge+2)^0,w,c
 28492  005F42  101B               	iorwf	(??___flge+3)^0,w,c
 28493  005F44  A4D8               	btfss	status,2,c
 28494  005F46  D008               	goto	l10529
 28495  005F48  0E00               	movlw	0
 28496  005F4A  6E14               	movwf	___flge@ff2^0,c
 28497  005F4C  0E00               	movlw	0
 28498  005F4E  6E15               	movwf	(___flge@ff2+1)^0,c
 28499  005F50  0E00               	movlw	0
 28500  005F52  6E16               	movwf	(___flge@ff2+2)^0,c
 28501  005F54  0E00               	movlw	0
 28502  005F56  6E17               	movwf	(___flge@ff2+3)^0,c
 28503  005F58                     l10529:
 28504  005F58  AE13               	btfss	(___flge@ff1+3)^0,7,c
 28505  005F5A  D009               	goto	l10533
 28506  005F5C  6C10               	negf	___flge@ff1^0,c
 28507  005F5E  1E11               	comf	(___flge@ff1+1)^0,f,c
 28508  005F60  B0D8               	btfsc	status,0,c
 28509  005F62  2A11               	incf	(___flge@ff1+1)^0,f,c
 28510  005F64  1E12               	comf	(___flge@ff1+2)^0,f,c
 28511  005F66  B0D8               	btfsc	status,0,c
 28512  005F68  2A12               	incf	(___flge@ff1+2)^0,f,c
 28513  005F6A  0E80               	movlw	128
 28514  005F6C  5613               	subfwb	(___flge@ff1+3)^0,f,c
 28515  005F6E                     l10533:
 28516  005F6E  AE17               	btfss	(___flge@ff2+3)^0,7,c
 28517  005F70  D009               	goto	l3461
 28518  005F72  6C14               	negf	___flge@ff2^0,c
 28519  005F74  1E15               	comf	(___flge@ff2+1)^0,f,c
 28520  005F76  B0D8               	btfsc	status,0,c
 28521  005F78  2A15               	incf	(___flge@ff2+1)^0,f,c
 28522  005F7A  1E16               	comf	(___flge@ff2+2)^0,f,c
 28523  005F7C  B0D8               	btfsc	status,0,c
 28524  005F7E  2A16               	incf	(___flge@ff2+2)^0,f,c
 28525  005F80  0E80               	movlw	128
 28526  005F82  5617               	subfwb	(___flge@ff2+3)^0,f,c
 28527  005F84                     l3461:
 28528  005F84  0E00               	movlw	0
 28529  005F86  1A10               	xorwf	___flge@ff1^0,f,c
 28530  005F88  0E00               	movlw	0
 28531  005F8A  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 28532  005F8C  0E00               	movlw	0
 28533  005F8E  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 28534  005F90  0E80               	movlw	128
 28535  005F92  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 28536  005F94  0E00               	movlw	0
 28537  005F96  1A14               	xorwf	___flge@ff2^0,f,c
 28538  005F98  0E00               	movlw	0
 28539  005F9A  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 28540  005F9C  0E00               	movlw	0
 28541  005F9E  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 28542  005FA0  0E80               	movlw	128
 28543  005FA2  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 28544  005FA4  5014               	movf	___flge@ff2^0,w,c
 28545  005FA6  5C10               	subwf	___flge@ff1^0,w,c
 28546  005FA8  5015               	movf	(___flge@ff2+1)^0,w,c
 28547  005FAA  5811               	subwfb	(___flge@ff1+1)^0,w,c
 28548  005FAC  5016               	movf	(___flge@ff2+2)^0,w,c
 28549  005FAE  5812               	subwfb	(___flge@ff1+2)^0,w,c
 28550  005FB0  5017               	movf	(___flge@ff2+3)^0,w,c
 28551  005FB2  5813               	subwfb	(___flge@ff1+3)^0,w,c
 28552  005FB4  B0D8               	btfsc	status,0,c
 28553  005FB6  D002               	goto	l10539
 28554  005FB8  90D8               	bcf	status,0,c
 28555  005FBA  0012               	return	
 28556  005FBC                     l10539:
 28557  005FBC  80D8               	bsf	status,0,c
 28558  005FBE  0012               	return		;funcret
 28559  005FC0                     __end_of___flge:
 28560                           	opt callstack 0
 28561                           
 28562 ;; *************** function _setPreambleLength *****************
 28563 ;; Defined at:
 28564 ;;		line 316 in file "../phy/sx1216/phy_src/phy.c"
 28565 ;; Parameters:    Size  Location     Type
 28566 ;;  length          2   16[COMRAM] unsigned short 
 28567 ;; Auto vars:     Size  Location     Type
 28568 ;;		None
 28569 ;; Return value:  Size  Location     Type
 28570 ;;                  1    wreg      void 
 28571 ;; Registers used:
 28572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28573 ;; Tracked objects:
 28574 ;;		On entry : 3F/3D
 28575 ;;		On exit  : 3F/3D
 28576 ;;		Unchanged: 0/0
 28577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28582 ;;Total ram usage:        2 bytes
 28583 ;; Hardware stack levels used:    1
 28584 ;; Hardware stack levels required when called:   11
 28585 ;; This function calls:
 28586 ;;		_SX1276Write
 28587 ;; This function is called by:
 28588 ;;		_initRadio
 28589 ;; This function uses a non-reentrant model
 28590 ;;
 28591                           
 28592                           	psect	text180
 28593  008ACE                     __ptext180:
 28594                           	opt callstack 0
 28595  008ACE                     _setPreambleLength:
 28596                           	opt callstack 15
 28597                           
 28598                           ; BSR set to: 61
 28599                           ;../phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);../phy/sx1216
      +                          /phy_src/phy.c: 317: {;../phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(l
      +                          ength >> 8));
 28600                           
 28601                           ;incstack = 0
 28602  008ACE  0060  F048  F00F   	movff	setPreambleLength@length+1,SX1276Write@data
 28603  008AD4  0E20               	movlw	32
 28604  008AD6  ECFC  F045         	call	_SX1276Write
 28605                           
 28606                           ;../phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 28607  008ADA  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 28608  008AE0  0E21               	movlw	33
 28609  008AE2  ECFC  F045         	call	_SX1276Write
 28610                           
 28611                           ; BSR set to: 61
 28612  008AE6  0012               	return		;funcret
 28613  008AE8                     __end_of_setPreambleLength:
 28614                           	opt callstack 0
 28615                           
 28616 ;; *************** function _setFrequency *****************
 28617 ;; Defined at:
 28618 ;;		line 160 in file "../phy/sx1216/phy_src/phy.c"
 28619 ;; Parameters:    Size  Location     Type
 28620 ;;  frequency       4   34[COMRAM] unsigned long 
 28621 ;; Auto vars:     Size  Location     Type
 28622 ;;  num             4   42[COMRAM] unsigned long 
 28623 ;;  num_mod         4   38[COMRAM] unsigned long 
 28624 ;; Return value:  Size  Location     Type
 28625 ;;                  4   34[COMRAM] unsigned long 
 28626 ;; Registers used:
 28627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28628 ;; Tracked objects:
 28629 ;;		On entry : 0/0
 28630 ;;		On exit  : 3F/3D
 28631 ;;		Unchanged: 0/0
 28632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28634 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28636 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28637 ;;Total ram usage:       12 bytes
 28638 ;; Hardware stack levels used:    1
 28639 ;; Hardware stack levels required when called:   11
 28640 ;; This function calls:
 28641 ;;		_SX1276Write
 28642 ;;		___lldiv
 28643 ;;		___llmod
 28644 ;; This function is called by:
 28645 ;;		_initRadio
 28646 ;;		_PHY_SetChannel
 28647 ;; This function uses a non-reentrant model
 28648 ;;
 28649                           
 28650                           	psect	text181
 28651  004AA2                     __ptext181:
 28652                           	opt callstack 0
 28653  004AA2                     _setFrequency:
 28654                           	opt callstack 15
 28655                           
 28656                           ;../phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);../phy/sx12
      +                          16/phy_src/phy.c: 161: {;../phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;..
      +                          /phy/sx1216/phy_src/phy.c: 170:     num = frequency / 15625;
 28657                           
 28658                           ; BSR set to: 61
 28659                           ;incstack = 0
 28660  004AA2  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 28661  004AA8  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 28662  004AAE  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 28663  004AB4  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 28664  004ABA  0E09               	movlw	9
 28665  004ABC  6E1A               	movwf	___lldiv@divisor^0,c
 28666  004ABE  0E3D               	movlw	61
 28667  004AC0  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28668  004AC2  0E00               	movlw	0
 28669  004AC4  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28670  004AC6  0E00               	movlw	0
 28671  004AC8  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28672  004ACA  ECDD  F037         	call	___lldiv	;wreg free
 28673  004ACE  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 28674  004AD4  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 28675  004ADA  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 28676  004AE0  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 28677                           
 28678                           ;../phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 28679  004AE6  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 28680  004AEC  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 28681  004AF2  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 28682  004AF8  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 28683  004AFE  0E09               	movlw	9
 28684  004B00  6E06               	movwf	___llmod@divisor^0,c
 28685  004B02  0E3D               	movlw	61
 28686  004B04  6E07               	movwf	(___llmod@divisor+1)^0,c
 28687  004B06  0E00               	movlw	0
 28688  004B08  6E08               	movwf	(___llmod@divisor+2)^0,c
 28689  004B0A  0E00               	movlw	0
 28690  004B0C  6E09               	movwf	(___llmod@divisor+3)^0,c
 28691  004B0E  EC23  F03A         	call	___llmod	;wreg free
 28692  004B12  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 28693  004B18  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 28694  004B1E  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 28695  004B24  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 28696                           
 28697                           ;../phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 28698  004B2A  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 28699  004B30  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 28700  004B36  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 28701  004B3C  6A2B               	clrf	setFrequency@num^0,c
 28702                           
 28703                           ;../phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 28704  004B3E  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 28705  004B44  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 28706  004B4A  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 28707  004B50  6A27               	clrf	setFrequency@num_mod^0,c
 28708                           
 28709                           ;../phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 28710  004B52  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 28711  004B58  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 28712  004B5E  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 28713  004B64  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 28714  004B6A  0E09               	movlw	9
 28715  004B6C  6E1A               	movwf	___lldiv@divisor^0,c
 28716  004B6E  0E3D               	movlw	61
 28717  004B70  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 28718  004B72  0E00               	movlw	0
 28719  004B74  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 28720  004B76  0E00               	movlw	0
 28721  004B78  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 28722  004B7A  ECDD  F037         	call	___lldiv	;wreg free
 28723  004B7E  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 28724  004B84  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 28725  004B8A  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 28726  004B90  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 28727                           
 28728                           ;../phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 28729  004B96  5027               	movf	setFrequency@num_mod^0,w,c
 28730  004B98  262B               	addwf	setFrequency@num^0,f,c
 28731  004B9A  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 28732  004B9C  222C               	addwfc	(setFrequency@num+1)^0,f,c
 28733  004B9E  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 28734  004BA0  222D               	addwfc	(setFrequency@num+2)^0,f,c
 28735  004BA2  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 28736  004BA4  222E               	addwfc	(setFrequency@num+3)^0,f,c
 28737                           
 28738                           ;../phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 28739  004BA6  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 28740  004BAC  0E06               	movlw	6
 28741  004BAE  ECFC  F045         	call	_SX1276Write
 28742                           
 28743                           ; BSR set to: 61
 28744                           ;../phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 28745  004BB2  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 28746  004BB8  0E07               	movlw	7
 28747  004BBA  ECFC  F045         	call	_SX1276Write
 28748                           
 28749                           ; BSR set to: 61
 28750                           ;../phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 28751  004BBE  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 28752  004BC4  0E08               	movlw	8
 28753  004BC6  ECFC  F045         	call	_SX1276Write
 28754                           
 28755                           ; BSR set to: 61
 28756  004BCA  0012               	return		;funcret
 28757  004BCC                     __end_of_setFrequency:
 28758                           	opt callstack 0
 28759                           
 28760 ;; *************** function _setCodingRate4 *****************
 28761 ;; Defined at:
 28762 ;;		line 297 in file "../phy/sx1216/phy_src/phy.c"
 28763 ;; Parameters:    Size  Location     Type
 28764 ;;  denominator     1    wreg     unsigned char 
 28765 ;; Auto vars:     Size  Location     Type
 28766 ;;  denominator     1   18[COMRAM] unsigned char 
 28767 ;;  cr              1   17[COMRAM] unsigned char 
 28768 ;; Return value:  Size  Location     Type
 28769 ;;                  1    wreg      void 
 28770 ;; Registers used:
 28771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28772 ;; Tracked objects:
 28773 ;;		On entry : 3F/3D
 28774 ;;		On exit  : 3F/3D
 28775 ;;		Unchanged: 0/0
 28776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28780 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28781 ;;Total ram usage:        3 bytes
 28782 ;; Hardware stack levels used:    1
 28783 ;; Hardware stack levels required when called:   11
 28784 ;; This function calls:
 28785 ;;		_SX1276Read
 28786 ;;		_SX1276Write
 28787 ;; This function is called by:
 28788 ;;		_initRadio
 28789 ;; This function uses a non-reentrant model
 28790 ;;
 28791                           
 28792                           	psect	text182
 28793  00850A                     __ptext182:
 28794                           	opt callstack 0
 28795  00850A                     _setCodingRate4:
 28796                           	opt callstack 15
 28797                           
 28798                           ; BSR set to: 61
 28799                           ;incstack = 0
 28800                           ;setCodingRate4@denominator stored from wreg
 28801  00850A  6E13               	movwf	setCodingRate4@denominator^0,c
 28802                           
 28803                           ;../phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);../phy/sx121
      +                          6/phy_src/phy.c: 298: {;../phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 28804  00850C  0E05               	movlw	5
 28805  00850E  6013               	cpfslt	setCodingRate4@denominator^0,c
 28806  008510  D002               	goto	l15341
 28807                           
 28808                           ;../phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 28809  008512  0E05               	movlw	5
 28810  008514  D004               	goto	L27
 28811  008516                     l15341:
 28812  008516  0E08               	movlw	8
 28813  008518  6413               	cpfsgt	setCodingRate4@denominator^0,c
 28814  00851A  D002               	goto	l15345
 28815                           
 28816                           ;../phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 28817  00851C  0E08               	movlw	8
 28818  00851E                     L27:
 28819  00851E  6E13               	movwf	setCodingRate4@denominator^0,c
 28820  008520                     l15345:
 28821                           
 28822                           ;../phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 28823  008520  5013               	movf	setCodingRate4@denominator^0,w,c
 28824  008522  0FFC               	addlw	252
 28825  008524  6E12               	movwf	setCodingRate4@cr^0,c
 28826                           
 28827                           ;../phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr <
      +                          < 1));
 28828  008526  90D8               	bcf	status,0,c
 28829  008528  3412               	rlcf	setCodingRate4@cr^0,w,c
 28830  00852A  6E11               	movwf	??_setCodingRate4^0,c
 28831  00852C  0E1D               	movlw	29
 28832  00852E  ECDE  F045         	call	_SX1276Read
 28833  008532  0BF1               	andlw	241
 28834  008534  1011               	iorwf	??_setCodingRate4^0,w,c
 28835  008536  6E0F               	movwf	SX1276Write@data^0,c
 28836  008538  0E1D               	movlw	29
 28837  00853A  ECFC  F045         	call	_SX1276Write
 28838                           
 28839                           ; BSR set to: 61
 28840  00853E  0012               	return		;funcret
 28841  008540                     __end_of_setCodingRate4:
 28842                           	opt callstack 0
 28843                           
 28844 ;; *************** function _receive *****************
 28845 ;; Defined at:
 28846 ;;		line 402 in file "../phy/sx1216/phy_src/phy.c"
 28847 ;; Parameters:    Size  Location     Type
 28848 ;;  size            1    wreg     unsigned char 
 28849 ;; Auto vars:     Size  Location     Type
 28850 ;;  size            1   16[COMRAM] unsigned char 
 28851 ;; Return value:  Size  Location     Type
 28852 ;;                  1    wreg      void 
 28853 ;; Registers used:
 28854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28855 ;; Tracked objects:
 28856 ;;		On entry : 0/3D
 28857 ;;		On exit  : 3F/3D
 28858 ;;		Unchanged: 0/0
 28859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28864 ;;Total ram usage:        1 bytes
 28865 ;; Hardware stack levels used:    1
 28866 ;; Hardware stack levels required when called:   12
 28867 ;; This function calls:
 28868 ;;		_SX1276Write
 28869 ;;		_explicitHeaderMode
 28870 ;;		_implicitHeaderMode
 28871 ;; This function is called by:
 28872 ;;		_initRadio
 28873 ;;		_DIO0_Receive_ISR
 28874 ;;		_radio_engine
 28875 ;;		_PHY_SetRxState
 28876 ;; This function uses a non-reentrant model
 28877 ;;
 28878                           
 28879                           	psect	text183
 28880  0081E0                     __ptext183:
 28881                           	opt callstack 0
 28882  0081E0                     _receive:
 28883                           	opt callstack 14
 28884                           
 28885                           ; BSR set to: 61
 28886                           ;incstack = 0
 28887                           ;receive@size stored from wreg
 28888  0081E0  6E11               	movwf	receive@size^0,c
 28889                           
 28890                           ;../phy/sx1216/phy_src/phy.c: 402: void receive(uint8_t size);../phy/sx1216/phy_src/phy.
      +                          c: 403: {;../phy/sx1216/phy_src/phy.c: 404:   if (size > 0) {
 28891  0081E2  5011               	movf	receive@size^0,w,c
 28892  0081E4  B4D8               	btfsc	status,2,c
 28893  0081E6  D009               	goto	l15355
 28894                           
 28895                           ;../phy/sx1216/phy_src/phy.c: 405:     implicitHeaderMode();
 28896  0081E8  EC8E  F045         	call	_implicitHeaderMode	;wreg free
 28897                           
 28898                           ;../phy/sx1216/phy_src/phy.c: 407:     SX1276Write(0x22, size & 0xff);
 28899  0081EC  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 28900  0081F2  0E22               	movlw	34
 28901  0081F4  ECFC  F045         	call	_SX1276Write
 28902                           
 28903                           ;../phy/sx1216/phy_src/phy.c: 408:   } else {
 28904  0081F8  D002               	goto	l2571
 28905  0081FA                     l15355:
 28906                           
 28907                           ;../phy/sx1216/phy_src/phy.c: 409:     explicitHeaderMode();
 28908  0081FA  EC9A  F045         	call	_explicitHeaderMode	;wreg free
 28909  0081FE                     l2571:
 28910                           
 28911                           ; BSR set to: 61
 28912                           ;../phy/sx1216/phy_src/phy.c: 412:   SX1276Write(0x0D, 0);
 28913  0081FE  0E00               	movlw	0
 28914  008200  6E0F               	movwf	SX1276Write@data^0,c
 28915  008202  0E0D               	movlw	13
 28916  008204  ECFC  F045         	call	_SX1276Write
 28917                           
 28918                           ;../phy/sx1216/phy_src/phy.c: 413:   SX1276Write(0x12, 0xFF);
 28919  008208  0EFF               	movlw	255
 28920  00820A  6E0F               	movwf	SX1276Write@data^0,c
 28921  00820C  0E12               	movlw	18
 28922  00820E  ECFC  F045         	call	_SX1276Write
 28923                           
 28924                           ;../phy/sx1216/phy_src/phy.c: 414:   SX1276Write(0x01,0x80 | 0x05);
 28925  008212  0E85               	movlw	133
 28926  008214  6E0F               	movwf	SX1276Write@data^0,c
 28927  008216  0E01               	movlw	1
 28928  008218  ECFC  F045         	call	_SX1276Write
 28929                           
 28930                           ; BSR set to: 61
 28931  00821C  0012               	return		;funcret
 28932  00821E                     __end_of_receive:
 28933                           	opt callstack 0
 28934                           
 28935 ;; *************** function _implicitHeaderMode *****************
 28936 ;; Defined at:
 28937 ;;		line 388 in file "../phy/sx1216/phy_src/phy.c"
 28938 ;; Parameters:    Size  Location     Type
 28939 ;;		None
 28940 ;; Auto vars:     Size  Location     Type
 28941 ;;		None
 28942 ;; Return value:  Size  Location     Type
 28943 ;;                  1    wreg      void 
 28944 ;; Registers used:
 28945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28946 ;; Tracked objects:
 28947 ;;		On entry : 0/3D
 28948 ;;		On exit  : 3F/3D
 28949 ;;		Unchanged: 0/0
 28950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28955 ;;Total ram usage:        0 bytes
 28956 ;; Hardware stack levels used:    1
 28957 ;; Hardware stack levels required when called:   11
 28958 ;; This function calls:
 28959 ;;		_SX1276Read
 28960 ;;		_SX1276Write
 28961 ;; This function is called by:
 28962 ;;		_receive
 28963 ;; This function uses a non-reentrant model
 28964 ;;
 28965                           
 28966                           	psect	text184
 28967  008B1C                     __ptext184:
 28968                           	opt callstack 0
 28969  008B1C                     _implicitHeaderMode:
 28970                           	opt callstack 14
 28971                           
 28972                           ;../phy/sx1216/phy_src/phy.c: 390:   _implicitHeaderMode = 1;
 28973                           
 28974                           ; BSR set to: 61
 28975                           ;incstack = 0
 28976  008B1C  0E01               	movlw	1
 28977  008B1E  0101               	movlb	1	; () banked
 28978  008B20  6F6C               	movwf	__implicitHeaderMode& (0+255),b
 28979                           
 28980                           ; BSR set to: 1
 28981                           ;../phy/sx1216/phy_src/phy.c: 392:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 28982  008B22  0E1D               	movlw	29
 28983  008B24  ECDE  F045         	call	_SX1276Read
 28984  008B28  0901               	iorlw	1
 28985  008B2A  6E0F               	movwf	SX1276Write@data^0,c
 28986  008B2C  0E1D               	movlw	29
 28987  008B2E  ECFC  F045         	call	_SX1276Write
 28988                           
 28989                           ; BSR set to: 61
 28990  008B32  0012               	return		;funcret
 28991  008B34                     __end_of_implicitHeaderMode:
 28992                           	opt callstack 0
 28993                           
 28994 ;; *************** function _explicitHeaderMode *****************
 28995 ;; Defined at:
 28996 ;;		line 374 in file "../phy/sx1216/phy_src/phy.c"
 28997 ;; Parameters:    Size  Location     Type
 28998 ;;		None
 28999 ;; Auto vars:     Size  Location     Type
 29000 ;;		None
 29001 ;; Return value:  Size  Location     Type
 29002 ;;                  1    wreg      void 
 29003 ;; Registers used:
 29004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29005 ;; Tracked objects:
 29006 ;;		On entry : 0/3D
 29007 ;;		On exit  : 3F/3D
 29008 ;;		Unchanged: 0/0
 29009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29014 ;;Total ram usage:        0 bytes
 29015 ;; Hardware stack levels used:    1
 29016 ;; Hardware stack levels required when called:   11
 29017 ;; This function calls:
 29018 ;;		_SX1276Read
 29019 ;;		_SX1276Write
 29020 ;; This function is called by:
 29021 ;;		_receive
 29022 ;;		_initRadio
 29023 ;;		_PHY_DataReq
 29024 ;; This function uses a non-reentrant model
 29025 ;;
 29026                           
 29027                           	psect	text185
 29028  008B34                     __ptext185:
 29029                           	opt callstack 0
 29030  008B34                     _explicitHeaderMode:
 29031                           	opt callstack 14
 29032                           
 29033                           ;../phy/sx1216/phy_src/phy.c: 376:   _implicitHeaderMode = 0;
 29034                           
 29035                           ; BSR set to: 61
 29036                           ;incstack = 0
 29037  008B34  0E00               	movlw	0
 29038  008B36  0101               	movlb	1	; () banked
 29039  008B38  6F6C               	movwf	__implicitHeaderMode& (0+255),b
 29040                           
 29041                           ; BSR set to: 1
 29042                           ;../phy/sx1216/phy_src/phy.c: 378:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 29043  008B3A  0E1D               	movlw	29
 29044  008B3C  ECDE  F045         	call	_SX1276Read
 29045  008B40  0BFE               	andlw	254
 29046  008B42  6E0F               	movwf	SX1276Write@data^0,c
 29047  008B44  0E1D               	movlw	29
 29048  008B46  ECFC  F045         	call	_SX1276Write
 29049                           
 29050                           ; BSR set to: 61
 29051  008B4A  0012               	return		;funcret
 29052  008B4C                     __end_of_explicitHeaderMode:
 29053                           	opt callstack 0
 29054                           
 29055 ;; *************** function _enableCrc *****************
 29056 ;; Defined at:
 29057 ;;		line 351 in file "../phy/sx1216/phy_src/phy.c"
 29058 ;; Parameters:    Size  Location     Type
 29059 ;;		None
 29060 ;; Auto vars:     Size  Location     Type
 29061 ;;		None
 29062 ;; Return value:  Size  Location     Type
 29063 ;;                  1    wreg      void 
 29064 ;; Registers used:
 29065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29066 ;; Tracked objects:
 29067 ;;		On entry : 3F/3D
 29068 ;;		On exit  : 3F/3D
 29069 ;;		Unchanged: 0/0
 29070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29075 ;;Total ram usage:        0 bytes
 29076 ;; Hardware stack levels used:    1
 29077 ;; Hardware stack levels required when called:   11
 29078 ;; This function calls:
 29079 ;;		_SX1276Read
 29080 ;;		_SX1276Write
 29081 ;; This function is called by:
 29082 ;;		_initRadio
 29083 ;; This function uses a non-reentrant model
 29084 ;;
 29085                           
 29086                           	psect	text186
 29087  008BE6                     __ptext186:
 29088                           	opt callstack 0
 29089  008BE6                     _enableCrc:
 29090                           	opt callstack 15
 29091                           
 29092                           ; BSR set to: 61
 29093                           ;../phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 29094                           
 29095                           ; BSR set to: 61
 29096                           ;incstack = 0
 29097  008BE6  0E1E               	movlw	30
 29098  008BE8  ECDE  F045         	call	_SX1276Read
 29099  008BEC  0904               	iorlw	4
 29100  008BEE  6E0F               	movwf	SX1276Write@data^0,c
 29101  008BF0  0E1E               	movlw	30
 29102  008BF2  ECFC  F045         	call	_SX1276Write
 29103                           
 29104                           ; BSR set to: 61
 29105  008BF6  0012               	return		;funcret
 29106  008BF8                     __end_of_enableCrc:
 29107                           	opt callstack 0
 29108                           
 29109 ;; *************** function _SX1276Write *****************
 29110 ;; Defined at:
 29111 ;;		line 45 in file "../phy/sx1216/phy_src/phy.c"
 29112 ;; Parameters:    Size  Location     Type
 29113 ;;  addr            1    wreg     unsigned char 
 29114 ;;  data            1   14[COMRAM] unsigned char 
 29115 ;; Auto vars:     Size  Location     Type
 29116 ;;  addr            1   15[COMRAM] unsigned char 
 29117 ;; Return value:  Size  Location     Type
 29118 ;;                  1    wreg      void 
 29119 ;; Registers used:
 29120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29121 ;; Tracked objects:
 29122 ;;		On entry : 0/0
 29123 ;;		On exit  : 3F/3D
 29124 ;;		Unchanged: 0/0
 29125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29126 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29130 ;;Total ram usage:        2 bytes
 29131 ;; Hardware stack levels used:    1
 29132 ;; Hardware stack levels required when called:   10
 29133 ;; This function calls:
 29134 ;;		_SX1276WriteBuffer
 29135 ;; This function is called by:
 29136 ;;		_idle
 29137 ;;		_setTxPower
 29138 ;;		_setFrequency
 29139 ;;		_setSpreadingFactor
 29140 ;;		_setSignalBandwidth
 29141 ;;		_setCodingRate4
 29142 ;;		_setPreambleLength
 29143 ;;		_setSyncWord
 29144 ;;		_enableCrc
 29145 ;;		_explicitHeaderMode
 29146 ;;		_implicitHeaderMode
 29147 ;;		_receive
 29148 ;;		_initRadio
 29149 ;;		_cad
 29150 ;;		_start_radio_cad
 29151 ;;		_DIO0_Receive_ISR
 29152 ;;		_PHY_DataReq
 29153 ;; This function uses a non-reentrant model
 29154 ;;
 29155                           
 29156                           	psect	text187
 29157  008BF8                     __ptext187:
 29158                           	opt callstack 0
 29159  008BF8                     _SX1276Write:
 29160                           	opt callstack 15
 29161                           
 29162                           ; BSR set to: 61
 29163                           ;incstack = 0
 29164                           ;SX1276Write@addr stored from wreg
 29165  008BF8  6E10               	movwf	SX1276Write@addr^0,c
 29166                           
 29167                           ;../phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );
      +                          ../phy/sx1216/phy_src/phy.c: 46: {;../phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffe
      +                          r( addr, &data, 1 );
 29168  008BFA  0E0F               	movlw	low SX1276Write@data
 29169  008BFC  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 29170  008BFE  0E01               	movlw	1
 29171  008C00  6E0A               	movwf	SX1276WriteBuffer@size^0,c
 29172  008C02  5010               	movf	SX1276Write@addr^0,w,c
 29173  008C04  EC09  F044         	call	_SX1276WriteBuffer
 29174                           
 29175                           ; BSR set to: 61
 29176  008C08  0012               	return		;funcret
 29177  008C0A                     __end_of_SX1276Write:
 29178                           	opt callstack 0
 29179                           
 29180 ;; *************** function _SX1276WriteBuffer *****************
 29181 ;; Defined at:
 29182 ;;		line 75 in file "../phy/sx1216/phy_src/phy.c"
 29183 ;; Parameters:    Size  Location     Type
 29184 ;;  addr            1    wreg     unsigned char 
 29185 ;;  buffer          1    8[COMRAM] PTR unsigned char 
 29186 ;;		 -> SX1276Write@data(1), 
 29187 ;;  size            1    9[COMRAM] unsigned char 
 29188 ;; Auto vars:     Size  Location     Type
 29189 ;;  addr            1   10[COMRAM] unsigned char 
 29190 ;;  i               1    0        unsigned char 
 29191 ;; Return value:  Size  Location     Type
 29192 ;;                  1    wreg      void 
 29193 ;; Registers used:
 29194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29195 ;; Tracked objects:
 29196 ;;		On entry : 0/0
 29197 ;;		On exit  : 3F/3D
 29198 ;;		Unchanged: 0/0
 29199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29204 ;;Total ram usage:        3 bytes
 29205 ;; Hardware stack levels used:    1
 29206 ;; Hardware stack levels required when called:    9
 29207 ;; This function calls:
 29208 ;;		_SPI1_ExchangeByte
 29209 ;;		_SPI1_WriteBlock
 29210 ;; This function is called by:
 29211 ;;		_SX1276Write
 29212 ;; This function uses a non-reentrant model
 29213 ;;
 29214                           
 29215                           	psect	text188
 29216  008812                     __ptext188:
 29217                           	opt callstack 0
 29218  008812                     _SX1276WriteBuffer:
 29219                           	opt callstack 15
 29220                           
 29221                           ; BSR set to: 61
 29222                           ;incstack = 0
 29223                           ;SX1276WriteBuffer@addr stored from wreg
 29224  008812  6E0B               	movwf	SX1276WriteBuffer@addr^0,c
 29225                           
 29226                           ;../phy/sx1216/phy_src/phy.c: 75: static void SX1276WriteBuffer( uint8_t addr, uint8_t *
      +                          buffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 76: {;../phy/sx1216/phy_src/phy.c: 7
      +                          7:     uint8_t i;;../phy/sx1216/phy_src/phy.c: 79:     do { LATCbits.LATC6 = 0; } while(
      +                          0);
 29227  008814  9CBC               	bcf	188,6,c	;volatile
 29228                           
 29229                           ;../phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 29230  008816  500B               	movf	SX1276WriteBuffer@addr^0,w,c
 29231  008818  0980               	iorlw	128
 29232  00881A  EC74  F045         	call	_SPI1_ExchangeByte
 29233                           
 29234                           ; BSR set to: 61
 29235                           ;../phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 29236  00881E  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 29237  008824  6A04               	clrf	(SPI1_WriteBlock@block+1)^0,c
 29238  008826  0060  F028  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 29239  00882C  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 29240  00882E  ECA0  F042         	call	_SPI1_WriteBlock	;wreg free
 29241                           
 29242                           ; BSR set to: 61
 29243  008832  8CBC               	bsf	188,6,c	;volatile
 29244                           
 29245                           ; BSR set to: 61
 29246  008834  0012               	return		;funcret
 29247  008836                     __end_of_SX1276WriteBuffer:
 29248                           	opt callstack 0
 29249                           
 29250 ;; *************** function _SPI1_WriteBlock *****************
 29251 ;; Defined at:
 29252 ;;		line 121 in file "mcc_generated_files/spi1.c"
 29253 ;; Parameters:    Size  Location     Type
 29254 ;;  block           2    2[COMRAM] PTR void 
 29255 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29256 ;;  blockSize       2    4[COMRAM] unsigned int 
 29257 ;; Auto vars:     Size  Location     Type
 29258 ;;  data            2    6[COMRAM] PTR unsigned char 
 29259 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29260 ;; Return value:  Size  Location     Type
 29261 ;;                  1    wreg      void 
 29262 ;; Registers used:
 29263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29264 ;; Tracked objects:
 29265 ;;		On entry : 3F/3D
 29266 ;;		On exit  : 3F/3D
 29267 ;;		Unchanged: 0/0
 29268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29273 ;;Total ram usage:        6 bytes
 29274 ;; Hardware stack levels used:    1
 29275 ;; Hardware stack levels required when called:    8
 29276 ;; This function calls:
 29277 ;;		_SPI1_ExchangeByte
 29278 ;; This function is called by:
 29279 ;;		_SX1276WriteBuffer
 29280 ;;		_PHY_DataReq
 29281 ;; This function uses a non-reentrant model
 29282 ;;
 29283                           
 29284                           	psect	text189
 29285  008540                     __ptext189:
 29286                           	opt callstack 0
 29287  008540                     _SPI1_WriteBlock:
 29288                           	opt callstack 15
 29289                           
 29290                           ; BSR set to: 61
 29291                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 29292                           
 29293                           ; BSR set to: 61
 29294                           ;incstack = 0
 29295  008540  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 29296  008546  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 29297                           
 29298                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29299  00854C  D00B               	goto	l9481
 29300  00854E                     l9477:
 29301                           
 29302                           ; BSR set to: 61
 29303                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 29304  00854E  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 29305  008554  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 29306  00855A  50DF               	movf	indf2,w,c
 29307  00855C  EC74  F045         	call	_SPI1_ExchangeByte
 29308                           
 29309                           ; BSR set to: 61
 29310  008560  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 29311  008562  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 29312  008564                     l9481:
 29313                           
 29314                           ; BSR set to: 61
 29315                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29316  008564  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 29317  008566  A0D8               	btfss	status,0,c
 29318  008568  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 29319  00856A  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 29320  00856C  E1F0               	bnz	l9477
 29321  00856E  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 29322  008570  B4D8               	btfsc	status,2,c
 29323  008572  0012               	return	
 29324  008574  D7EC               	goto	l9477
 29325  008576                     __end_of_SPI1_WriteBlock:
 29326                           	opt callstack 0
 29327                           
 29328 ;; *************** function _SX1276Read *****************
 29329 ;; Defined at:
 29330 ;;		line 32 in file "../phy/sx1216/phy_src/phy.c"
 29331 ;; Parameters:    Size  Location     Type
 29332 ;;  addr            1    wreg     unsigned char 
 29333 ;; Auto vars:     Size  Location     Type
 29334 ;;  addr            1   12[COMRAM] unsigned char 
 29335 ;;  data            1   13[COMRAM] unsigned char 
 29336 ;; Return value:  Size  Location     Type
 29337 ;;                  1    wreg      unsigned char 
 29338 ;; Registers used:
 29339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29340 ;; Tracked objects:
 29341 ;;		On entry : 0/39
 29342 ;;		On exit  : 3F/3D
 29343 ;;		Unchanged: 0/0
 29344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29349 ;;Total ram usage:        2 bytes
 29350 ;; Hardware stack levels used:    1
 29351 ;; Hardware stack levels required when called:   10
 29352 ;; This function calls:
 29353 ;;		_SX1276ReadBuffer
 29354 ;; This function is called by:
 29355 ;;		_setSpreadingFactor
 29356 ;;		_setSignalBandwidth
 29357 ;;		_getSpreadingFactor
 29358 ;;		_getSignalBandwidth
 29359 ;;		_setCodingRate4
 29360 ;;		_enableCrc
 29361 ;;		_explicitHeaderMode
 29362 ;;		_implicitHeaderMode
 29363 ;;		_initRadio
 29364 ;;		_cad
 29365 ;;		_DIO0_Receive_ISR
 29366 ;;		_radio_engine
 29367 ;; This function uses a non-reentrant model
 29368 ;;
 29369                           
 29370                           	psect	text190
 29371  008BBC                     __ptext190:
 29372                           	opt callstack 0
 29373  008BBC                     _SX1276Read:
 29374                           	opt callstack 14
 29375                           
 29376                           ; BSR set to: 61
 29377                           ;incstack = 0
 29378                           ;SX1276Read@addr stored from wreg
 29379  008BBC  6E0D               	movwf	SX1276Read@addr^0,c
 29380                           
 29381                           ;../phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );../phy/sx121
      +                          6/phy_src/phy.c: 33: {;../phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;../phy/sx1216/
      +                          phy_src/phy.c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 29382  008BBE  0E0E               	movlw	low SX1276Read@data
 29383  008BC0  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 29384  008BC2  6A0A               	clrf	(SX1276ReadBuffer@buffer+1)^0,c
 29385  008BC4  0E01               	movlw	1
 29386  008BC6  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 29387  008BC8  500D               	movf	SX1276Read@addr^0,w,c
 29388  008BCA  ECD0  F043         	call	_SX1276ReadBuffer
 29389                           
 29390                           ; BSR set to: 61
 29391                           ;../phy/sx1216/phy_src/phy.c: 36:     return data;
 29392  008BCE  500E               	movf	SX1276Read@data^0,w,c
 29393                           
 29394                           ; BSR set to: 61
 29395  008BD0  0012               	return		;funcret
 29396  008BD2                     __end_of_SX1276Read:
 29397                           	opt callstack 0
 29398                           
 29399 ;; *************** function _SX1276ReadBuffer *****************
 29400 ;; Defined at:
 29401 ;;		line 57 in file "../phy/sx1216/phy_src/phy.c"
 29402 ;; Parameters:    Size  Location     Type
 29403 ;;  addr            1    wreg     unsigned char 
 29404 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 29405 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29406 ;;  size            1   10[COMRAM] unsigned char 
 29407 ;; Auto vars:     Size  Location     Type
 29408 ;;  addr            1   11[COMRAM] unsigned char 
 29409 ;;  i               1    0        unsigned char 
 29410 ;; Return value:  Size  Location     Type
 29411 ;;                  1    wreg      void 
 29412 ;; Registers used:
 29413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29414 ;; Tracked objects:
 29415 ;;		On entry : 0/3D
 29416 ;;		On exit  : 3F/3D
 29417 ;;		Unchanged: 0/0
 29418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29419 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29423 ;;Total ram usage:        4 bytes
 29424 ;; Hardware stack levels used:    1
 29425 ;; Hardware stack levels required when called:    9
 29426 ;; This function calls:
 29427 ;;		_SPI1_ExchangeByte
 29428 ;;		_SPI1_ReadBlock
 29429 ;; This function is called by:
 29430 ;;		_SX1276Read
 29431 ;;		_DIO0_Receive_ISR
 29432 ;; This function uses a non-reentrant model
 29433 ;;
 29434                           
 29435                           	psect	text191
 29436  0087A0                     __ptext191:
 29437                           	opt callstack 0
 29438  0087A0                     _SX1276ReadBuffer:
 29439                           	opt callstack 14
 29440                           
 29441                           ; BSR set to: 61
 29442                           ;incstack = 0
 29443                           ;SX1276ReadBuffer@addr stored from wreg
 29444  0087A0  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 29445                           
 29446                           ;../phy/sx1216/phy_src/phy.c: 57: static void SX1276ReadBuffer( uint8_t addr, uint8_t *b
      +                          uffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 58: {;../phy/sx1216/phy_src/phy.c: 59
      +                          :     uint8_t i;;../phy/sx1216/phy_src/phy.c: 61:     do { LATCbits.LATC6 = 0; } while(0
      +                          );
 29447  0087A2  9CBC               	bcf	188,6,c	;volatile
 29448                           
 29449                           ;../phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 29450  0087A4  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 29451  0087A6  0B7F               	andlw	127
 29452  0087A8  EC74  F045         	call	_SPI1_ExchangeByte
 29453                           
 29454                           ; BSR set to: 61
 29455                           ;../phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 29456  0087AC  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 29457  0087B2  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 29458  0087B8  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 29459  0087BE  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 29460  0087C0  EC33  F042         	call	_SPI1_ReadBlock	;wreg free
 29461                           
 29462                           ; BSR set to: 61
 29463  0087C4  8CBC               	bsf	188,6,c	;volatile
 29464                           
 29465                           ; BSR set to: 61
 29466  0087C6  0012               	return		;funcret
 29467  0087C8                     __end_of_SX1276ReadBuffer:
 29468                           	opt callstack 0
 29469                           
 29470 ;; *************** function _SPI1_ReadBlock *****************
 29471 ;; Defined at:
 29472 ;;		line 130 in file "mcc_generated_files/spi1.c"
 29473 ;; Parameters:    Size  Location     Type
 29474 ;;  block           2    2[COMRAM] PTR void 
 29475 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29476 ;;  blockSize       2    4[COMRAM] unsigned int 
 29477 ;; Auto vars:     Size  Location     Type
 29478 ;;  data            2    6[COMRAM] PTR unsigned char 
 29479 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 29480 ;; Return value:  Size  Location     Type
 29481 ;;                  1    wreg      void 
 29482 ;; Registers used:
 29483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29484 ;; Tracked objects:
 29485 ;;		On entry : 3F/3D
 29486 ;;		On exit  : 3F/3D
 29487 ;;		Unchanged: 0/0
 29488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29493 ;;Total ram usage:        6 bytes
 29494 ;; Hardware stack levels used:    1
 29495 ;; Hardware stack levels required when called:    8
 29496 ;; This function calls:
 29497 ;;		_SPI1_ExchangeByte
 29498 ;; This function is called by:
 29499 ;;		_SX1276ReadBuffer
 29500 ;; This function uses a non-reentrant model
 29501 ;;
 29502                           
 29503                           	psect	text192
 29504  008466                     __ptext192:
 29505                           	opt callstack 0
 29506  008466                     _SPI1_ReadBlock:
 29507                           	opt callstack 14
 29508                           
 29509                           ; BSR set to: 61
 29510                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 29511                           
 29512                           ; BSR set to: 61
 29513                           ;incstack = 0
 29514  008466  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 29515  00846C  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 29516                           
 29517                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29518  008472  D00C               	goto	l14323
 29519  008474                     l14319:
 29520                           
 29521                           ; BSR set to: 61
 29522                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 29523  008474  0E00               	movlw	0
 29524  008476  EC74  F045         	call	_SPI1_ExchangeByte
 29525  00847A  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 29526  008480  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 29527  008486  6EDF               	movwf	indf2,c
 29528                           
 29529                           ; BSR set to: 61
 29530  008488  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 29531  00848A  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 29532  00848C                     l14323:
 29533                           
 29534                           ; BSR set to: 61
 29535                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 29536  00848C  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 29537  00848E  A0D8               	btfss	status,0,c
 29538  008490  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 29539  008492  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 29540  008494  E1EF               	bnz	l14319
 29541  008496  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 29542  008498  B4D8               	btfsc	status,2,c
 29543  00849A  0012               	return	
 29544  00849C  D7EB               	goto	l14319
 29545  00849E                     __end_of_SPI1_ReadBlock:
 29546                           	opt callstack 0
 29547                           
 29548 ;; *************** function _SPI1_ExchangeByte *****************
 29549 ;; Defined at:
 29550 ;;		line 100 in file "mcc_generated_files/spi1.c"
 29551 ;; Parameters:    Size  Location     Type
 29552 ;;  data            1    wreg     unsigned char 
 29553 ;; Auto vars:     Size  Location     Type
 29554 ;;  data            1    1[COMRAM] unsigned char 
 29555 ;; Return value:  Size  Location     Type
 29556 ;;                  1    wreg      unsigned char 
 29557 ;; Registers used:
 29558 ;;		wreg, status,2
 29559 ;; Tracked objects:
 29560 ;;		On entry : 0/3D
 29561 ;;		On exit  : 3F/3D
 29562 ;;		Unchanged: 0/0
 29563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29568 ;;Total ram usage:        1 bytes
 29569 ;; Hardware stack levels used:    1
 29570 ;; Hardware stack levels required when called:    7
 29571 ;; This function calls:
 29572 ;;		Nothing
 29573 ;; This function is called by:
 29574 ;;		_SPI1_WriteBlock
 29575 ;;		_SPI1_ReadBlock
 29576 ;;		_SX1276ReadBuffer
 29577 ;;		_SX1276WriteBuffer
 29578 ;;		_PHY_DataReq
 29579 ;; This function uses a non-reentrant model
 29580 ;;
 29581                           
 29582                           	psect	text193
 29583  008AE8                     __ptext193:
 29584                           	opt callstack 0
 29585  008AE8                     _SPI1_ExchangeByte:
 29586                           	opt callstack 15
 29587                           
 29588                           ; BSR set to: 61
 29589                           ;incstack = 0
 29590                           ;SPI1_ExchangeByte@data stored from wreg
 29591  008AE8  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 29592                           
 29593                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 29594  008AEA  0E01               	movlw	1
 29595  008AEC  013D               	movlb	61	; () banked
 29596  008AEE  6F12               	movwf	18,b	;volatile
 29597                           
 29598                           ; BSR set to: 61
 29599                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 29600  008AF0  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 29601  008AF6                     l1040:
 29602  008AF6  0139               	movlb	57	; () banked
 29603  008AF8  A9A2               	btfss	162,4,b	;volatile
 29604  008AFA  D7FD               	goto	l1040
 29605                           
 29606                           ; BSR set to: 57
 29607                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 29608  008AFC  013D               	movlb	61	; () banked
 29609  008AFE  5110               	movf	16,w,b	;volatile
 29610                           
 29611                           ; BSR set to: 61
 29612  008B00  0012               	return		;funcret
 29613  008B02                     __end_of_SPI1_ExchangeByte:
 29614                           	opt callstack 0
 29615                           
 29616 ;; *************** function _computeFRF *****************
 29617 ;; Defined at:
 29618 ;;		line 705 in file "../phy/sx1216/phy_src/phy.c"
 29619 ;; Parameters:    Size  Location     Type
 29620 ;;		None
 29621 ;; Auto vars:     Size  Location     Type
 29622 ;;  num             4   42[COMRAM] unsigned long 
 29623 ;;  num_mod         4   38[COMRAM] unsigned long 
 29624 ;;  frequency       4   34[COMRAM] unsigned long 
 29625 ;;  i               1   46[COMRAM] unsigned char 
 29626 ;; Return value:  Size  Location     Type
 29627 ;;                  1    wreg      void 
 29628 ;; Registers used:
 29629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29630 ;; Tracked objects:
 29631 ;;		On entry : 0/0
 29632 ;;		On exit  : 0/0
 29633 ;;		Unchanged: 0/0
 29634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29636 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29638 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29639 ;;Total ram usage:       13 bytes
 29640 ;; Hardware stack levels used:    1
 29641 ;; Hardware stack levels required when called:    8
 29642 ;; This function calls:
 29643 ;;		___lldiv
 29644 ;;		___llmod
 29645 ;; This function is called by:
 29646 ;;		_initRadio
 29647 ;; This function uses a non-reentrant model
 29648 ;;
 29649                           
 29650                           	psect	text194
 29651  003A56                     __ptext194:
 29652                           	opt callstack 0
 29653  003A56                     _computeFRF:
 29654                           	opt callstack 18
 29655                           
 29656                           ;../phy/sx1216/phy_src/phy.c: 707:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 29657                           
 29658                           ; BSR set to: 61
 29659                           ;incstack = 0
 29660  003A56  0E00               	movlw	0
 29661  003A58  6E2F               	movwf	computeFRF@i^0,c
 29662  003A5A                     l11149:
 29663                           
 29664                           ;../phy/sx1216/phy_src/phy.c: 708:     {;../phy/sx1216/phy_src/phy.c: 709:         uint3
      +                          2_t num, num_mod, frequency;;../phy/sx1216/phy_src/phy.c: 710:         frequency = fhssL
      +                          ist[i];
 29665  003A5A  502F               	movf	computeFRF@i^0,w,c
 29666  003A5C  0D04               	mullw	4
 29667  003A5E  0EC9               	movlw	low _fhssList
 29668  003A60  24F3               	addwf	243,w,c
 29669  003A62  6EF6               	movwf	tblptrl,c
 29670  003A64  0EFC               	movlw	high _fhssList
 29671  003A66  20F4               	addwfc	244,w,c
 29672  003A68  6EF7               	movwf	tblptrh,c
 29673  003A6A                     	if	1	;There are 3 active tblptr bytes
 29674  003A6A  6AF8               	clrf	tblptru,c
 29675  003A6C  0E00               	movlw	low (__mediumconst shr (0+16))
 29676  003A6E  22F8               	addwfc	tblptru,f,c
 29677  003A70                     	endif
 29678  003A70  0009               	tblrd		*+
 29679  003A72  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 29680  003A78  0009               	tblrd		*+
 29681  003A7A  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 29682  003A80  0009               	tblrd		*+
 29683  003A82  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 29684  003A88  000A               	tblrd		*-
 29685  003A8A  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 29686                           
 29687                           ;../phy/sx1216/phy_src/phy.c: 717:         num = frequency / 15625;
 29688  003A90  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 29689  003A96  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 29690  003A9C  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 29691  003AA2  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 29692  003AA8  0E09               	movlw	9
 29693  003AAA  6E1A               	movwf	___lldiv@divisor^0,c
 29694  003AAC  0E3D               	movlw	61
 29695  003AAE  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29696  003AB0  0E00               	movlw	0
 29697  003AB2  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29698  003AB4  0E00               	movlw	0
 29699  003AB6  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29700  003AB8  ECDD  F037         	call	___lldiv	;wreg free
 29701  003ABC  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 29702  003AC2  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 29703  003AC8  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 29704  003ACE  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 29705                           
 29706                           ;../phy/sx1216/phy_src/phy.c: 718:         num_mod = frequency % 15625;
 29707  003AD4  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 29708  003ADA  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 29709  003AE0  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 29710  003AE6  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 29711  003AEC  0E09               	movlw	9
 29712  003AEE  6E06               	movwf	___llmod@divisor^0,c
 29713  003AF0  0E3D               	movlw	61
 29714  003AF2  6E07               	movwf	(___llmod@divisor+1)^0,c
 29715  003AF4  0E00               	movlw	0
 29716  003AF6  6E08               	movwf	(___llmod@divisor+2)^0,c
 29717  003AF8  0E00               	movlw	0
 29718  003AFA  6E09               	movwf	(___llmod@divisor+3)^0,c
 29719  003AFC  EC23  F03A         	call	___llmod	;wreg free
 29720  003B00  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 29721  003B06  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 29722  003B0C  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 29723  003B12  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 29724                           
 29725                           ;../phy/sx1216/phy_src/phy.c: 722:         num <<= 8;
 29726  003B18  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 29727  003B1E  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 29728  003B24  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 29729  003B2A  6A2B               	clrf	computeFRF@num^0,c
 29730                           
 29731                           ;../phy/sx1216/phy_src/phy.c: 723:         num_mod <<= 8;
 29732  003B2C  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 29733  003B32  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 29734  003B38  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 29735  003B3E  6A27               	clrf	computeFRF@num_mod^0,c
 29736                           
 29737                           ;../phy/sx1216/phy_src/phy.c: 727:         num_mod = num_mod / 15625;
 29738  003B40  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 29739  003B46  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 29740  003B4C  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 29741  003B52  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 29742  003B58  0E09               	movlw	9
 29743  003B5A  6E1A               	movwf	___lldiv@divisor^0,c
 29744  003B5C  0E3D               	movlw	61
 29745  003B5E  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29746  003B60  0E00               	movlw	0
 29747  003B62  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29748  003B64  0E00               	movlw	0
 29749  003B66  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29750  003B68  ECDD  F037         	call	___lldiv	;wreg free
 29751  003B6C  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 29752  003B72  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 29753  003B78  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 29754  003B7E  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 29755                           
 29756                           ;../phy/sx1216/phy_src/phy.c: 728:         num += num_mod;
 29757  003B84  5027               	movf	computeFRF@num_mod^0,w,c
 29758  003B86  262B               	addwf	computeFRF@num^0,f,c
 29759  003B88  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 29760  003B8A  222C               	addwfc	(computeFRF@num+1)^0,f,c
 29761  003B8C  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 29762  003B8E  222D               	addwfc	(computeFRF@num+2)^0,f,c
 29763  003B90  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 29764  003B92  222E               	addwfc	(computeFRF@num+3)^0,f,c
 29765                           
 29766                           ;../phy/sx1216/phy_src/phy.c: 730:         fhssReg[i][0] = (num >> 16);
 29767  003B94  502F               	movf	computeFRF@i^0,w,c
 29768  003B96  0D03               	mullw	3
 29769  003B98  0E00               	movlw	low _fhssReg
 29770  003B9A  24F3               	addwf	243,w,c
 29771  003B9C  6ED9               	movwf	fsr2l,c
 29772  003B9E  0E05               	movlw	high _fhssReg
 29773  003BA0  20F4               	addwfc	prodh,w,c
 29774  003BA2  6EDA               	movwf	fsr2h,c
 29775  003BA4  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 29776                           
 29777                           ;../phy/sx1216/phy_src/phy.c: 731:         fhssReg[i][1] = (num >> 8);
 29778  003BAA  502F               	movf	computeFRF@i^0,w,c
 29779  003BAC  0D03               	mullw	3
 29780  003BAE  0E01               	movlw	low (_fhssReg+1)
 29781  003BB0  24F3               	addwf	243,w,c
 29782  003BB2  6ED9               	movwf	fsr2l,c
 29783  003BB4  0E05               	movlw	high (_fhssReg+1)
 29784  003BB6  20F4               	addwfc	prodh,w,c
 29785  003BB8  6EDA               	movwf	fsr2h,c
 29786  003BBA  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 29787                           
 29788                           ;../phy/sx1216/phy_src/phy.c: 732:         fhssReg[i][2] = (num);
 29789  003BC0  502F               	movf	computeFRF@i^0,w,c
 29790  003BC2  0D03               	mullw	3
 29791  003BC4  0E02               	movlw	low (_fhssReg+2)
 29792  003BC6  24F3               	addwf	243,w,c
 29793  003BC8  6ED9               	movwf	fsr2l,c
 29794  003BCA  0E05               	movlw	high (_fhssReg+2)
 29795  003BCC  20F4               	addwfc	prodh,w,c
 29796  003BCE  6EDA               	movwf	fsr2h,c
 29797  003BD0  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 29798                           
 29799                           ;../phy/sx1216/phy_src/phy.c: 733:     }
 29800  003BD6  2A2F               	incf	computeFRF@i^0,f,c
 29801  003BD8  0E3E               	movlw	62
 29802  003BDA  642F               	cpfsgt	computeFRF@i^0,c
 29803  003BDC  D73E               	goto	l11149
 29804  003BDE  0012               	return	
 29805  003BE0                     __end_of_computeFRF:
 29806                           	opt callstack 0
 29807                           
 29808 ;; *************** function ___llmod *****************
 29809 ;; Defined at:
 29810 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 29811 ;; Parameters:    Size  Location     Type
 29812 ;;  dividend        4    1[COMRAM] unsigned long 
 29813 ;;  divisor         4    5[COMRAM] unsigned long 
 29814 ;; Auto vars:     Size  Location     Type
 29815 ;;  counter         1    9[COMRAM] unsigned char 
 29816 ;; Return value:  Size  Location     Type
 29817 ;;                  4    1[COMRAM] unsigned long 
 29818 ;; Registers used:
 29819 ;;		wreg, status,2, status,0
 29820 ;; Tracked objects:
 29821 ;;		On entry : 0/0
 29822 ;;		On exit  : 0/0
 29823 ;;		Unchanged: 0/0
 29824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29828 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29829 ;;Total ram usage:        9 bytes
 29830 ;; Hardware stack levels used:    1
 29831 ;; Hardware stack levels required when called:    7
 29832 ;; This function calls:
 29833 ;;		Nothing
 29834 ;; This function is called by:
 29835 ;;		_setFrequency
 29836 ;;		_computeFRF
 29837 ;; This function uses a non-reentrant model
 29838 ;;
 29839                           
 29840                           	psect	text195
 29841  007446                     __ptext195:
 29842                           	opt callstack 0
 29843  007446                     ___llmod:
 29844                           	opt callstack 18
 29845                           
 29846                           ;incstack = 0
 29847  007446  5006               	movf	___llmod@divisor^0,w,c
 29848  007448  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 29849  00744A  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 29850  00744C  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 29851  00744E  B4D8               	btfsc	status,2,c
 29852  007450  D024               	goto	l3616
 29853  007452  0E01               	movlw	1
 29854  007454  6E0A               	movwf	___llmod@counter^0,c
 29855  007456  D006               	goto	l10593
 29856  007458                     l10591:
 29857  007458  90D8               	bcf	status,0,c
 29858  00745A  3606               	rlcf	___llmod@divisor^0,f,c
 29859  00745C  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 29860  00745E  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 29861  007460  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 29862  007462  2A0A               	incf	___llmod@counter^0,f,c
 29863  007464                     l10593:
 29864  007464  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 29865  007466  D7F8               	goto	l10591
 29866  007468                     u8910:
 29867  007468  5006               	movf	___llmod@divisor^0,w,c
 29868  00746A  5C02               	subwf	___llmod@dividend^0,w,c
 29869  00746C  5007               	movf	(___llmod@divisor+1)^0,w,c
 29870  00746E  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 29871  007470  5008               	movf	(___llmod@divisor+2)^0,w,c
 29872  007472  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 29873  007474  5009               	movf	(___llmod@divisor+3)^0,w,c
 29874  007476  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 29875  007478  A0D8               	btfss	status,0,c
 29876  00747A  D008               	goto	l10599
 29877  00747C  5006               	movf	___llmod@divisor^0,w,c
 29878  00747E  5E02               	subwf	___llmod@dividend^0,f,c
 29879  007480  5007               	movf	(___llmod@divisor+1)^0,w,c
 29880  007482  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 29881  007484  5008               	movf	(___llmod@divisor+2)^0,w,c
 29882  007486  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 29883  007488  5009               	movf	(___llmod@divisor+3)^0,w,c
 29884  00748A  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 29885  00748C                     l10599:
 29886  00748C  90D8               	bcf	status,0,c
 29887  00748E  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 29888  007490  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 29889  007492  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 29890  007494  3206               	rrcf	___llmod@divisor^0,f,c
 29891  007496  2E0A               	decfsz	___llmod@counter^0,f,c
 29892  007498  D7E7               	goto	u8910
 29893  00749A                     l3616:
 29894  00749A  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 29895  0074A0  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 29896  0074A6  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 29897  0074AC  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 29898  0074B2  0012               	return		;funcret
 29899  0074B4                     __end_of___llmod:
 29900                           	opt callstack 0
 29901                           
 29902 ;; *************** function ___lldiv *****************
 29903 ;; Defined at:
 29904 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 29905 ;; Parameters:    Size  Location     Type
 29906 ;;  dividend        4   21[COMRAM] unsigned long 
 29907 ;;  divisor         4   25[COMRAM] unsigned long 
 29908 ;; Auto vars:     Size  Location     Type
 29909 ;;  quotient        4   29[COMRAM] unsigned long 
 29910 ;;  counter         1   33[COMRAM] unsigned char 
 29911 ;; Return value:  Size  Location     Type
 29912 ;;                  4   21[COMRAM] unsigned long 
 29913 ;; Registers used:
 29914 ;;		wreg, status,2, status,0
 29915 ;; Tracked objects:
 29916 ;;		On entry : 0/3D
 29917 ;;		On exit  : 0/0
 29918 ;;		Unchanged: 0/0
 29919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29920 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29921 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29923 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29924 ;;Total ram usage:       13 bytes
 29925 ;; Hardware stack levels used:    1
 29926 ;; Hardware stack levels required when called:    7
 29927 ;; This function calls:
 29928 ;;		Nothing
 29929 ;; This function is called by:
 29930 ;;		_setFrequency
 29931 ;;		_setSpreadingFactor
 29932 ;;		_setSignalBandwidth
 29933 ;;		_computeFRF
 29934 ;; This function uses a non-reentrant model
 29935 ;;
 29936                           
 29937                           	psect	text196
 29938  006FBA                     __ptext196:
 29939                           	opt callstack 0
 29940  006FBA                     ___lldiv:
 29941                           	opt callstack 18
 29942                           
 29943                           ;incstack = 0
 29944  006FBA  0E00               	movlw	0
 29945  006FBC  6E1E               	movwf	___lldiv@quotient^0,c
 29946  006FBE  0E00               	movlw	0
 29947  006FC0  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 29948  006FC2  0E00               	movlw	0
 29949  006FC4  6E20               	movwf	(___lldiv@quotient+2)^0,c
 29950  006FC6  0E00               	movlw	0
 29951  006FC8  6E21               	movwf	(___lldiv@quotient+3)^0,c
 29952  006FCA  501A               	movf	___lldiv@divisor^0,w,c
 29953  006FCC  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 29954  006FCE  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 29955  006FD0  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 29956  006FD2  B4D8               	btfsc	status,2,c
 29957  006FD4  D02A               	goto	l3223
 29958  006FD6  0E01               	movlw	1
 29959  006FD8  6E22               	movwf	___lldiv@counter^0,c
 29960  006FDA  D006               	goto	l10175
 29961  006FDC                     l10173:
 29962  006FDC  90D8               	bcf	status,0,c
 29963  006FDE  361A               	rlcf	___lldiv@divisor^0,f,c
 29964  006FE0  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 29965  006FE2  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 29966  006FE4  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 29967  006FE6  2A22               	incf	___lldiv@counter^0,f,c
 29968  006FE8                     l10175:
 29969  006FE8  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 29970  006FEA  D7F8               	goto	l10173
 29971  006FEC                     u8190:
 29972  006FEC  90D8               	bcf	status,0,c
 29973  006FEE  361E               	rlcf	___lldiv@quotient^0,f,c
 29974  006FF0  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 29975  006FF2  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 29976  006FF4  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 29977  006FF6  501A               	movf	___lldiv@divisor^0,w,c
 29978  006FF8  5C16               	subwf	___lldiv@dividend^0,w,c
 29979  006FFA  501B               	movf	(___lldiv@divisor+1)^0,w,c
 29980  006FFC  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 29981  006FFE  501C               	movf	(___lldiv@divisor+2)^0,w,c
 29982  007000  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 29983  007002  501D               	movf	(___lldiv@divisor+3)^0,w,c
 29984  007004  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 29985  007006  A0D8               	btfss	status,0,c
 29986  007008  D009               	goto	l10185
 29987  00700A  501A               	movf	___lldiv@divisor^0,w,c
 29988  00700C  5E16               	subwf	___lldiv@dividend^0,f,c
 29989  00700E  501B               	movf	(___lldiv@divisor+1)^0,w,c
 29990  007010  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 29991  007012  501C               	movf	(___lldiv@divisor+2)^0,w,c
 29992  007014  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 29993  007016  501D               	movf	(___lldiv@divisor+3)^0,w,c
 29994  007018  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 29995  00701A  801E               	bsf	___lldiv@quotient^0,0,c
 29996  00701C                     l10185:
 29997  00701C  90D8               	bcf	status,0,c
 29998  00701E  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 29999  007020  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 30000  007022  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 30001  007024  321A               	rrcf	___lldiv@divisor^0,f,c
 30002  007026  2E22               	decfsz	___lldiv@counter^0,f,c
 30003  007028  D7E1               	goto	u8190
 30004  00702A                     l3223:
 30005  00702A  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 30006  007030  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 30007  007036  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 30008  00703C  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 30009  007042  0012               	return		;funcret
 30010  007044                     __end_of___lldiv:
 30011                           	opt callstack 0
 30012                           
 30013 ;; *************** function _NWK_Init *****************
 30014 ;; Defined at:
 30015 ;;		line 70 in file "../nwk/nwk_src/nwk.c"
 30016 ;; Parameters:    Size  Location     Type
 30017 ;;		None
 30018 ;; Auto vars:     Size  Location     Type
 30019 ;;  i               1    5[COMRAM] unsigned char 
 30020 ;; Return value:  Size  Location     Type
 30021 ;;                  1    wreg      void 
 30022 ;; Registers used:
 30023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30024 ;; Tracked objects:
 30025 ;;		On entry : 3F/1
 30026 ;;		On exit  : 3F/2
 30027 ;;		Unchanged: 0/0
 30028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30033 ;;Total ram usage:        1 bytes
 30034 ;; Hardware stack levels used:    1
 30035 ;; Hardware stack levels required when called:    9
 30036 ;; This function calls:
 30037 ;;		_nwkDataReqInit
 30038 ;;		_nwkFrameInit
 30039 ;;		_nwkGroupInit
 30040 ;;		_nwkRouteInit
 30041 ;;		_nwkRxInit
 30042 ;;		_nwkTxInit
 30043 ;; This function is called by:
 30044 ;;		_SYS_Init
 30045 ;; This function uses a non-reentrant model
 30046 ;;
 30047                           
 30048                           	psect	text197
 30049  007ADA                     __ptext197:
 30050                           	opt callstack 0
 30051  007ADA                     _NWK_Init:
 30052                           	opt callstack 20
 30053                           
 30054                           ; BSR set to: 1
 30055                           ;../nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 30056                           
 30057                           ;incstack = 0
 30058  007ADA  0E00               	movlw	0
 30059  007ADC  6F04               	movwf	(_nwkIb+4)& (0+255),b
 30060                           
 30061                           ;../nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 30062  007ADE  0E00               	movlw	0
 30063  007AE0  6F05               	movwf	(_nwkIb+5)& (0+255),b
 30064                           
 30065                           ;../nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 30066  007AE2  0E00               	movlw	0
 30067  007AE4  6F01               	movwf	(_nwkIb+1)& (0+255),b
 30068  007AE6  0E00               	movlw	0
 30069  007AE8  6F00               	movwf	_nwkIb& (0+255),b
 30070                           
 30071                           ;../nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 30072  007AEA  0E00               	movlw	0
 30073  007AEC  6F27               	movwf	(_nwkIb+39)& (0+255),b
 30074  007AEE  0E00               	movlw	0
 30075  007AF0  6F26               	movwf	(_nwkIb+38)& (0+255),b
 30076                           
 30077                           ;../nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 30078  007AF2  0E00               	movlw	0
 30079  007AF4  6E06               	movwf	NWK_Init@i^0,c
 30080  007AF6                     l16667:
 30081                           
 30082                           ; BSR set to: 1
 30083                           ;../nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 30084  007AF6  5006               	movf	NWK_Init@i^0,w,c
 30085  007AF8  0D02               	mullw	2
 30086  007AFA  0E06               	movlw	low (_nwkIb+6)
 30087  007AFC  24F3               	addwf	243,w,c
 30088  007AFE  6ED9               	movwf	fsr2l,c
 30089  007B00  0E01               	movlw	high (_nwkIb+6)
 30090  007B02  20F4               	addwfc	prodh,w,c
 30091  007B04  6EDA               	movwf	fsr2h,c
 30092  007B06  0E00               	movlw	0
 30093  007B08  6EDE               	movwf	postinc2,c
 30094  007B0A  0E00               	movlw	0
 30095  007B0C  6EDD               	movwf	postdec2,c
 30096                           
 30097                           ; BSR set to: 1
 30098  007B0E  2A06               	incf	NWK_Init@i^0,f,c
 30099                           
 30100                           ; BSR set to: 1
 30101  007B10  0E0F               	movlw	15
 30102  007B12  6406               	cpfsgt	NWK_Init@i^0,c
 30103  007B14  D7F0               	goto	l16667
 30104                           
 30105                           ; BSR set to: 1
 30106                           ;../nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 30107  007B16  ECF3  F03F         	call	_nwkTxInit	;wreg free
 30108                           
 30109                           ; BSR set to: 1
 30110                           ;../nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 30111  007B1A  ECDA  F03E         	call	_nwkRxInit	;wreg free
 30112                           
 30113                           ;../nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 30114  007B1E  EC60  F044         	call	_nwkFrameInit	;wreg free
 30115                           
 30116                           ;../nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 30117  007B22  EC92  F046         	call	_nwkDataReqInit	;wreg free
 30118                           
 30119                           ; BSR set to: 0
 30120                           ;../nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 30121  007B26  EC8D  F03E         	call	_nwkRouteInit	;wreg free
 30122                           
 30123                           ; BSR set to: 2
 30124                           ;../nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 30125  007B2A  ECE4  F043         	call	_nwkGroupInit	;wreg free
 30126                           
 30127                           ; BSR set to: 2
 30128  007B2E  0012               	return		;funcret
 30129  007B30                     __end_of_NWK_Init:
 30130                           	opt callstack 0
 30131                           
 30132 ;; *************** function _nwkTxInit *****************
 30133 ;; Defined at:
 30134 ;;		line 94 in file "../nwk/nwk_src/nwkTx.c"
 30135 ;; Parameters:    Size  Location     Type
 30136 ;;		None
 30137 ;; Auto vars:     Size  Location     Type
 30138 ;;		None
 30139 ;; Return value:  Size  Location     Type
 30140 ;;                  1    wreg      void 
 30141 ;; Registers used:
 30142 ;;		wreg, status,2, status,0
 30143 ;; Tracked objects:
 30144 ;;		On entry : 3F/1
 30145 ;;		On exit  : 3F/1
 30146 ;;		Unchanged: 0/0
 30147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30152 ;;Total ram usage:        0 bytes
 30153 ;; Hardware stack levels used:    1
 30154 ;; Hardware stack levels required when called:    7
 30155 ;; This function calls:
 30156 ;;		Nothing
 30157 ;; This function is called by:
 30158 ;;		_NWK_Init
 30159 ;; This function uses a non-reentrant model
 30160 ;;
 30161                           
 30162                           	psect	text198
 30163  007FE6                     __ptext198:
 30164                           	opt callstack 0
 30165  007FE6                     _nwkTxInit:
 30166                           	opt callstack 21
 30167                           
 30168                           ; BSR set to: 1
 30169                           ;../nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 30170                           
 30171                           ; BSR set to: 2
 30172                           ;incstack = 0
 30173  007FE6  0E00               	movlw	0
 30174  007FE8  6F5B               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 30175  007FEA  0E00               	movlw	0
 30176  007FEC  6F5C               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 30177                           
 30178                           ; BSR set to: 1
 30179                           ;../nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 30180  007FEE  0EC8               	movlw	200
 30181  007FF0  6FA8               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 30182  007FF2  0E00               	movlw	0
 30183  007FF4  6FA9               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 30184  007FF6  0E00               	movlw	0
 30185  007FF8  6FAA               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 30186  007FFA  0E00               	movlw	0
 30187  007FFC  6FAB               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 30188                           
 30189                           ; BSR set to: 1
 30190                           ;../nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30191  007FFE  0E00               	movlw	0
 30192  008000  6FAC               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 30193                           
 30194                           ;../nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 30195  008002  0E8A               	movlw	low _nwkTxAckWaitTimerHandler
 30196  008004  6FAD               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 30197  008006  0E6D               	movlw	high _nwkTxAckWaitTimerHandler
 30198  008008  6FAE               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 30199                           
 30200                           ; BSR set to: 1
 30201                           ;../nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 30202  00800A  0E14               	movlw	20
 30203  00800C  6F9B               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 30204  00800E  0E00               	movlw	0
 30205  008010  6F9C               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 30206  008012  0E00               	movlw	0
 30207  008014  6F9D               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 30208  008016  0E00               	movlw	0
 30209  008018  6F9E               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 30210                           
 30211                           ; BSR set to: 1
 30212                           ;../nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30213  00801A  0E00               	movlw	0
 30214  00801C  6F9F               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 30215                           
 30216                           ;../nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 30217  00801E  0E1A               	movlw	low _nwkTxDelayTimerHandler
 30218  008020  6FA0               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 30219  008022  0E6E               	movlw	high _nwkTxDelayTimerHandler
 30220  008024  6FA1               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 30221                           
 30222                           ; BSR set to: 1
 30223  008026  0012               	return		;funcret
 30224  008028                     __end_of_nwkTxInit:
 30225                           	opt callstack 0
 30226                           
 30227 ;; *************** function _nwkRxInit *****************
 30228 ;; Defined at:
 30229 ;;		line 102 in file "../nwk/nwk_src/nwkRx.c"
 30230 ;; Parameters:    Size  Location     Type
 30231 ;;		None
 30232 ;; Auto vars:     Size  Location     Type
 30233 ;;  i               1    4[COMRAM] unsigned char 
 30234 ;; Return value:  Size  Location     Type
 30235 ;;                  1    wreg      void 
 30236 ;; Registers used:
 30237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30238 ;; Tracked objects:
 30239 ;;		On entry : 3F/1
 30240 ;;		On exit  : 0/0
 30241 ;;		Unchanged: 0/0
 30242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30247 ;;Total ram usage:        1 bytes
 30248 ;; Hardware stack levels used:    1
 30249 ;; Hardware stack levels required when called:    8
 30250 ;; This function calls:
 30251 ;;		_NWK_OpenEndpoint
 30252 ;; This function is called by:
 30253 ;;		_NWK_Init
 30254 ;; This function uses a non-reentrant model
 30255 ;;
 30256                           
 30257                           	psect	text199
 30258  007DB4                     __ptext199:
 30259                           	opt callstack 0
 30260  007DB4                     _nwkRxInit:
 30261                           	opt callstack 20
 30262                           
 30263                           ; BSR set to: 1
 30264                           ;../nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 30265                           
 30266                           ; BSR set to: 1
 30267                           ;incstack = 0
 30268  007DB4  0E00               	movlw	0
 30269  007DB6  6E05               	movwf	nwkRxInit@i^0,c
 30270  007DB8                     l16259:
 30271                           
 30272                           ; BSR set to: 1
 30273                           ;../nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 30274  007DB8  5005               	movf	nwkRxInit@i^0,w,c
 30275  007DBA  0D05               	mullw	5
 30276  007DBC  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 30277  007DBE  24F3               	addwf	243,w,c
 30278  007DC0  6ED9               	movwf	fsr2l,c
 30279  007DC2  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 30280  007DC4  20F4               	addwfc	prodh,w,c
 30281  007DC6  6EDA               	movwf	fsr2h,c
 30282  007DC8  0E00               	movlw	0
 30283  007DCA  6EDF               	movwf	indf2,c
 30284                           
 30285                           ; BSR set to: 1
 30286  007DCC  2A05               	incf	nwkRxInit@i^0,f,c
 30287                           
 30288                           ; BSR set to: 1
 30289  007DCE  0E09               	movlw	9
 30290  007DD0  6405               	cpfsgt	nwkRxInit@i^0,c
 30291  007DD2  D7F2               	goto	l16259
 30292                           
 30293                           ; BSR set to: 1
 30294                           ;../nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 30295  007DD4  0E88               	movlw	136
 30296  007DD6  6FB5               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 30297  007DD8  0E13               	movlw	19
 30298  007DDA  6FB6               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 30299  007DDC  0E00               	movlw	0
 30300  007DDE  6FB7               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 30301  007DE0  0E00               	movlw	0
 30302  007DE2  6FB8               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 30303                           
 30304                           ;../nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_M
      +                          ODE;
 30305  007DE4  0E00               	movlw	0
 30306  007DE6  6FB9               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 30307                           
 30308                           ; BSR set to: 1
 30309                           ;../nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateRej
      +                          ectionTimerHandler;
 30310  007DE8  0E84               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 30311  007DEA  6FBA               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 30312  007DEC  0E7B               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 30313  007DEE  6FBB               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 30314                           
 30315                           ; BSR set to: 1
 30316                           ;../nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 30317  007DF0  0E20               	movlw	low _nwkRxServiceDataInd
 30318  007DF2  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 30319  007DF4  0E75               	movlw	high _nwkRxServiceDataInd
 30320  007DF6  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 30321  007DF8  0E00               	movlw	0
 30322  007DFA  ECB5  F044         	call	_NWK_OpenEndpoint
 30323  007DFE  0012               	return		;funcret
 30324  007E00                     __end_of_nwkRxInit:
 30325                           	opt callstack 0
 30326                           
 30327 ;; *************** function _NWK_OpenEndpoint *****************
 30328 ;; Defined at:
 30329 ;;		line 127 in file "../nwk/nwk_src/nwk.c"
 30330 ;; Parameters:    Size  Location     Type
 30331 ;;  id              1    wreg     unsigned char 
 30332 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 30333 ;;		 -> nwkRxServiceDataInd(1), appDataInd(1), 
 30334 ;; Auto vars:     Size  Location     Type
 30335 ;;  id              1    3[COMRAM] unsigned char 
 30336 ;; Return value:  Size  Location     Type
 30337 ;;                  1    wreg      void 
 30338 ;; Registers used:
 30339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30340 ;; Tracked objects:
 30341 ;;		On entry : 3/3D
 30342 ;;		On exit  : 0/0
 30343 ;;		Unchanged: 0/0
 30344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30348 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30349 ;;Total ram usage:        3 bytes
 30350 ;; Hardware stack levels used:    1
 30351 ;; Hardware stack levels required when called:    7
 30352 ;; This function calls:
 30353 ;;		Nothing
 30354 ;; This function is called by:
 30355 ;;		_bootLoadApplication
 30356 ;;		_nwkRxInit
 30357 ;; This function uses a non-reentrant model
 30358 ;;
 30359                           
 30360                           	psect	text200
 30361  00896A                     __ptext200:
 30362                           	opt callstack 0
 30363  00896A                     _NWK_OpenEndpoint:
 30364                           	opt callstack 22
 30365                           
 30366                           ;incstack = 0
 30367                           ;NWK_OpenEndpoint@id stored from wreg
 30368  00896A  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 30369                           
 30370                           ;../nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataI
      +                          nd_t *ind));../nwk/nwk_src/nwk.c: 128: {;../nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id]
      +                           = handler;
 30371  00896C  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 30372  00896E  0D02               	mullw	2
 30373  008970  0E06               	movlw	low (_nwkIb+6)
 30374  008972  24F3               	addwf	243,w,c
 30375  008974  6ED9               	movwf	fsr2l,c
 30376  008976  0E01               	movlw	high (_nwkIb+6)
 30377  008978  20F4               	addwfc	prodh,w,c
 30378  00897A  6EDA               	movwf	fsr2h,c
 30379  00897C  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 30380  008982  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 30381  008988  0012               	return		;funcret
 30382  00898A                     __end_of_NWK_OpenEndpoint:
 30383                           	opt callstack 0
 30384                           
 30385 ;; *************** function _nwkRouteInit *****************
 30386 ;; Defined at:
 30387 ;;		line 79 in file "../nwk/nwk_src/nwkRoute.c"
 30388 ;; Parameters:    Size  Location     Type
 30389 ;;		None
 30390 ;; Auto vars:     Size  Location     Type
 30391 ;;  i               1    1[COMRAM] unsigned char 
 30392 ;; Return value:  Size  Location     Type
 30393 ;;                  1    wreg      void 
 30394 ;; Registers used:
 30395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30396 ;; Tracked objects:
 30397 ;;		On entry : 3F/0
 30398 ;;		On exit  : 3F/2
 30399 ;;		Unchanged: 0/0
 30400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30405 ;;Total ram usage:        1 bytes
 30406 ;; Hardware stack levels used:    1
 30407 ;; Hardware stack levels required when called:    7
 30408 ;; This function calls:
 30409 ;;		Nothing
 30410 ;; This function is called by:
 30411 ;;		_NWK_Init
 30412 ;; This function uses a non-reentrant model
 30413 ;;
 30414                           
 30415                           	psect	text201
 30416  007D1A                     __ptext201:
 30417                           	opt callstack 0
 30418  007D1A                     _nwkRouteInit:
 30419                           	opt callstack 21
 30420                           
 30421                           ; BSR set to: 0
 30422                           ;../nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 30423                           
 30424                           ;incstack = 0
 30425  007D1A  0E00               	movlw	0
 30426  007D1C  6E02               	movwf	nwkRouteInit@i^0,c
 30427  007D1E                     l12385:
 30428                           
 30429                           ;../nwk/nwk_src/nwkRoute.c: 82:   {;../nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].
      +                          dstAddr = 0xffff;
 30430  007D1E  5002               	movf	nwkRouteInit@i^0,w,c
 30431  007D20  0D07               	mullw	7
 30432  007D22  0E85               	movlw	low (_nwkRouteTable+1)
 30433  007D24  24F3               	addwf	243,w,c
 30434  007D26  6ED9               	movwf	fsr2l,c
 30435  007D28  0E02               	movlw	high (_nwkRouteTable+1)
 30436  007D2A  20F4               	addwfc	prodh,w,c
 30437  007D2C  6EDA               	movwf	fsr2h,c
 30438  007D2E  0EFF               	movlw	255
 30439  007D30  6EDE               	movwf	postinc2,c
 30440  007D32  0EFF               	movlw	255
 30441  007D34  6EDD               	movwf	postdec2,c
 30442                           
 30443                           ;../nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 30444  007D36  5002               	movf	nwkRouteInit@i^0,w,c
 30445  007D38  0D07               	mullw	7
 30446  007D3A  0E84               	movlw	low _nwkRouteTable
 30447  007D3C  24F3               	addwf	243,w,c
 30448  007D3E  6ED9               	movwf	fsr2l,c
 30449  007D40  0E02               	movlw	high _nwkRouteTable
 30450  007D42  20F4               	addwfc	prodh,w,c
 30451  007D44  6EDA               	movwf	fsr2h,c
 30452  007D46  0102               	movlb	2	; () banked
 30453  007D48  90DF               	bcf	indf2,0,c
 30454                           
 30455                           ;../nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 30456  007D4A  5002               	movf	nwkRouteInit@i^0,w,c
 30457  007D4C  0D07               	mullw	7
 30458  007D4E  0E89               	movlw	low (_nwkRouteTable+5)
 30459  007D50  24F3               	addwf	243,w,c
 30460  007D52  6ED9               	movwf	fsr2l,c
 30461  007D54  0E02               	movlw	high (_nwkRouteTable+5)
 30462  007D56  20F4               	addwfc	prodh,w,c
 30463  007D58  6EDA               	movwf	fsr2h,c
 30464  007D5A  0E00               	movlw	0
 30465  007D5C  6EDF               	movwf	indf2,c
 30466                           
 30467                           ; BSR set to: 2
 30468                           ;../nwk/nwk_src/nwkRoute.c: 86:   }
 30469  007D5E  2A02               	incf	nwkRouteInit@i^0,f,c
 30470                           
 30471                           ; BSR set to: 2
 30472  007D60  0E09               	movlw	9
 30473  007D62  6402               	cpfsgt	nwkRouteInit@i^0,c
 30474  007D64  D7DC               	goto	l12385
 30475  007D66  0012               	return	
 30476  007D68                     __end_of_nwkRouteInit:
 30477                           	opt callstack 0
 30478                           
 30479 ;; *************** function _nwkGroupInit *****************
 30480 ;; Defined at:
 30481 ;;		line 70 in file "../nwk/nwk_src/nwkGroup.c"
 30482 ;; Parameters:    Size  Location     Type
 30483 ;;		None
 30484 ;; Auto vars:     Size  Location     Type
 30485 ;;  i               1    1[COMRAM] unsigned char 
 30486 ;; Return value:  Size  Location     Type
 30487 ;;                  1    wreg      void 
 30488 ;; Registers used:
 30489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30490 ;; Tracked objects:
 30491 ;;		On entry : 3F/2
 30492 ;;		On exit  : 3F/2
 30493 ;;		Unchanged: 3F/0
 30494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30499 ;;Total ram usage:        1 bytes
 30500 ;; Hardware stack levels used:    1
 30501 ;; Hardware stack levels required when called:    7
 30502 ;; This function calls:
 30503 ;;		Nothing
 30504 ;; This function is called by:
 30505 ;;		_NWK_Init
 30506 ;; This function uses a non-reentrant model
 30507 ;;
 30508                           
 30509                           	psect	text202
 30510  0087C8                     __ptext202:
 30511                           	opt callstack 0
 30512  0087C8                     _nwkGroupInit:
 30513                           	opt callstack 21
 30514                           
 30515                           ; BSR set to: 2
 30516                           ;../nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 30517                           
 30518                           ; BSR set to: 2
 30519                           ;incstack = 0
 30520  0087C8  0E00               	movlw	0
 30521  0087CA  6E02               	movwf	nwkGroupInit@i^0,c
 30522  0087CC                     l12397:
 30523                           
 30524                           ; BSR set to: 2
 30525                           ;../nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 30526  0087CC  5002               	movf	nwkGroupInit@i^0,w,c
 30527  0087CE  0D02               	mullw	2
 30528  0087D0  0E00               	movlw	low _nwkGroups
 30529  0087D2  24F3               	addwf	243,w,c
 30530  0087D4  6ED9               	movwf	fsr2l,c
 30531  0087D6  0E02               	movlw	high _nwkGroups
 30532  0087D8  20F4               	addwfc	prodh,w,c
 30533  0087DA  6EDA               	movwf	fsr2h,c
 30534  0087DC  0EFF               	movlw	255
 30535  0087DE  6EDE               	movwf	postinc2,c
 30536  0087E0  0EFF               	movlw	255
 30537  0087E2  6EDD               	movwf	postdec2,c
 30538                           
 30539                           ; BSR set to: 2
 30540  0087E4  2A02               	incf	nwkGroupInit@i^0,f,c
 30541                           
 30542                           ; BSR set to: 2
 30543  0087E6  0E09               	movlw	9
 30544  0087E8  6402               	cpfsgt	nwkGroupInit@i^0,c
 30545  0087EA  D7F0               	goto	l12397
 30546  0087EC  0012               	return	
 30547  0087EE                     __end_of_nwkGroupInit:
 30548                           	opt callstack 0
 30549                           
 30550 ;; *************** function _nwkFrameInit *****************
 30551 ;; Defined at:
 30552 ;;		line 70 in file "../nwk/nwk_src/nwkFrame.c"
 30553 ;; Parameters:    Size  Location     Type
 30554 ;;		None
 30555 ;; Auto vars:     Size  Location     Type
 30556 ;;  i               1    1[COMRAM] unsigned char 
 30557 ;; Return value:  Size  Location     Type
 30558 ;;                  1    wreg      void 
 30559 ;; Registers used:
 30560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30561 ;; Tracked objects:
 30562 ;;		On entry : 0/1
 30563 ;;		On exit  : 0/0
 30564 ;;		Unchanged: 0/0
 30565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30570 ;;Total ram usage:        1 bytes
 30571 ;; Hardware stack levels used:    1
 30572 ;; Hardware stack levels required when called:    7
 30573 ;; This function calls:
 30574 ;;		Nothing
 30575 ;; This function is called by:
 30576 ;;		_NWK_Init
 30577 ;; This function uses a non-reentrant model
 30578 ;;
 30579                           
 30580                           	psect	text203
 30581  0088C0                     __ptext203:
 30582                           	opt callstack 0
 30583  0088C0                     _nwkFrameInit:
 30584                           	opt callstack 21
 30585                           
 30586                           ;../nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 30587                           
 30588                           ; BSR set to: 2
 30589                           ;incstack = 0
 30590  0088C0  0E00               	movlw	0
 30591  0088C2  6E02               	movwf	nwkFrameInit@i^0,c
 30592  0088C4                     l12371:
 30593                           
 30594                           ;../nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 30595  0088C4  5002               	movf	nwkFrameInit@i^0,w,c
 30596  0088C6  0D89               	mullw	137
 30597  0088C8  0EBD               	movlw	low _nwkFrameFrames
 30598  0088CA  24F3               	addwf	243,w,c
 30599  0088CC  6ED9               	movwf	fsr2l,c
 30600  0088CE  0E05               	movlw	high _nwkFrameFrames
 30601  0088D0  20F4               	addwfc	prodh,w,c
 30602  0088D2  6EDA               	movwf	fsr2h,c
 30603  0088D4  0E00               	movlw	0
 30604  0088D6  6EDF               	movwf	indf2,c
 30605  0088D8  2A02               	incf	nwkFrameInit@i^0,f,c
 30606  0088DA  0E04               	movlw	4
 30607  0088DC  6402               	cpfsgt	nwkFrameInit@i^0,c
 30608  0088DE  D7F2               	goto	l12371
 30609  0088E0  0012               	return	
 30610  0088E2                     __end_of_nwkFrameInit:
 30611                           	opt callstack 0
 30612                           
 30613 ;; *************** function _nwkDataReqInit *****************
 30614 ;; Defined at:
 30615 ;;		line 78 in file "../nwk/nwk_src/nwkDataReq.c"
 30616 ;; Parameters:    Size  Location     Type
 30617 ;;		None
 30618 ;; Auto vars:     Size  Location     Type
 30619 ;;		None
 30620 ;; Return value:  Size  Location     Type
 30621 ;;                  1    wreg      void 
 30622 ;; Registers used:
 30623 ;;		wreg, status,2, status,0
 30624 ;; Tracked objects:
 30625 ;;		On entry : 0/1
 30626 ;;		On exit  : 3F/0
 30627 ;;		Unchanged: 0/0
 30628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30633 ;;Total ram usage:        0 bytes
 30634 ;; Hardware stack levels used:    1
 30635 ;; Hardware stack levels required when called:    7
 30636 ;; This function calls:
 30637 ;;		Nothing
 30638 ;; This function is called by:
 30639 ;;		_NWK_Init
 30640 ;; This function uses a non-reentrant model
 30641 ;;
 30642                           
 30643                           	psect	text204
 30644  008D24                     __ptext204:
 30645                           	opt callstack 0
 30646  008D24                     _nwkDataReqInit:
 30647                           	opt callstack 21
 30648                           
 30649                           ;../nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 30650                           
 30651                           ;incstack = 0
 30652  008D24  0E00               	movlw	0
 30653  008D26  0100               	movlb	0	; () banked
 30654  008D28  6FE2               	movwf	_nwkDataReqQueue& (0+255),b
 30655  008D2A  0E00               	movlw	0
 30656  008D2C  6FE3               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 30657                           
 30658                           ; BSR set to: 0
 30659  008D2E  0012               	return		;funcret
 30660  008D30                     __end_of_nwkDataReqInit:
 30661                           	opt callstack 0
 30662                           
 30663 ;; *************** function _SYSTEM_Initialize *****************
 30664 ;; Defined at:
 30665 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30666 ;; Parameters:    Size  Location     Type
 30667 ;;		None
 30668 ;; Auto vars:     Size  Location     Type
 30669 ;;		None
 30670 ;; Return value:  Size  Location     Type
 30671 ;;                  1    wreg      void 
 30672 ;; Registers used:
 30673 ;;		wreg, status,2, status,0, cstack
 30674 ;; Tracked objects:
 30675 ;;		On entry : 0/0
 30676 ;;		On exit  : 3F/3D
 30677 ;;		Unchanged: 0/0
 30678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30683 ;;Total ram usage:        0 bytes
 30684 ;; Hardware stack levels used:    1
 30685 ;; Hardware stack levels required when called:    9
 30686 ;; This function calls:
 30687 ;;		_CRC_Initialize
 30688 ;;		_INTERRUPT_Initialize
 30689 ;;		_OSCILLATOR_Initialize
 30690 ;;		_PIN_MANAGER_Initialize
 30691 ;;		_PMD_Initialize
 30692 ;;		_SPI1_Initialize
 30693 ;;		_TMR0_Initialize
 30694 ;;		_UART1_Initialize
 30695 ;; This function is called by:
 30696 ;;		_main
 30697 ;; This function uses a non-reentrant model
 30698 ;;
 30699                           
 30700                           	psect	text205
 30701  0088E2                     __ptext205:
 30702                           	opt callstack 0
 30703  0088E2                     _SYSTEM_Initialize:
 30704                           	opt callstack 21
 30705                           
 30706                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30707                           
 30708                           ; BSR set to: 0
 30709                           ;incstack = 0
 30710  0088E2  EC54  F040         	call	_INTERRUPT_Initialize	;wreg free
 30711                           
 30712                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30713  0088E6  EC82  F044         	call	_PMD_Initialize	;wreg free
 30714                           
 30715                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30716  0088EA  EC22  F038         	call	_PIN_MANAGER_Initialize	;wreg free
 30717                           
 30718                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30719  0088EE  ECA6  F045         	call	_OSCILLATOR_Initialize	;wreg free
 30720                           
 30721                           ; BSR set to: 57
 30722                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 30723  0088F2  ECFC  F03A         	call	_CRC_Initialize	;wreg free
 30724                           
 30725                           ; BSR set to: 1
 30726                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 30727  0088F6  EC0F  F041         	call	_TMR0_Initialize	;wreg free
 30728                           
 30729                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 30730  0088FA  EC50  F034         	call	_UART1_Initialize	;wreg free
 30731                           
 30732                           ; BSR set to: 57
 30733                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 30734  0088FE  EC81  F045         	call	_SPI1_Initialize	;wreg free
 30735                           
 30736                           ; BSR set to: 61
 30737  008902  0012               	return		;funcret
 30738  008904                     __end_of_SYSTEM_Initialize:
 30739                           	opt callstack 0
 30740                           
 30741 ;; *************** function _UART1_Initialize *****************
 30742 ;; Defined at:
 30743 ;;		line 95 in file "mcc_generated_files/uart1.c"
 30744 ;; Parameters:    Size  Location     Type
 30745 ;;		None
 30746 ;; Auto vars:     Size  Location     Type
 30747 ;;		None
 30748 ;; Return value:  Size  Location     Type
 30749 ;;                  1    wreg      void 
 30750 ;; Registers used:
 30751 ;;		wreg, status,2, status,0, cstack
 30752 ;; Tracked objects:
 30753 ;;		On entry : 3B/39
 30754 ;;		On exit  : 3F/39
 30755 ;;		Unchanged: 0/0
 30756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30761 ;;Total ram usage:        0 bytes
 30762 ;; Hardware stack levels used:    1
 30763 ;; Hardware stack levels required when called:    8
 30764 ;; This function calls:
 30765 ;;		_UART1_SetErrorHandler
 30766 ;;		_UART1_SetFramingErrorHandler
 30767 ;;		_UART1_SetOverrunErrorHandler
 30768 ;;		_UART1_SetRxInterruptHandler
 30769 ;;		_UART1_SetTxInterruptHandler
 30770 ;; This function is called by:
 30771 ;;		_SYSTEM_Initialize
 30772 ;; This function uses a non-reentrant model
 30773 ;;
 30774                           
 30775                           	psect	text206
 30776  0068A0                     __ptext206:
 30777                           	opt callstack 0
 30778  0068A0                     _UART1_Initialize:
 30779                           	opt callstack 21
 30780                           
 30781                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 30782                           
 30783                           ; BSR set to: 61
 30784                           ;incstack = 0
 30785  0068A0  0139               	movlb	57	; () banked
 30786  0068A2  9793               	bcf	147,3,b	;volatile
 30787                           
 30788                           ; BSR set to: 57
 30789                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30790  0068A4  0ECA               	movlw	low _UART1_Receive_ISR
 30791  0068A6  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 30792  0068A8  0E6B               	movlw	high _UART1_Receive_ISR
 30793  0068AA  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 30794  0068AC  EC63  F046         	call	_UART1_SetRxInterruptHandler	;wreg free
 30795                           
 30796                           ; BSR set to: 57
 30797                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 30798  0068B0  9993               	bcf	147,4,b	;volatile
 30799                           
 30800                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 30801  0068B2  0EBC               	movlw	low _UART1_Transmit_ISR
 30802  0068B4  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 30803  0068B6  0E83               	movlw	high _UART1_Transmit_ISR
 30804  0068B8  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 30805  0068BA  EC5C  F046         	call	_UART1_SetTxInterruptHandler	;wreg free
 30806                           
 30807                           ; BSR set to: 57
 30808                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 30809  0068BE  0E00               	movlw	0
 30810  0068C0  013D               	movlb	61	; () banked
 30811  0068C2  6FEC               	movwf	236,b	;volatile
 30812                           
 30813                           ; BSR set to: 61
 30814                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 30815  0068C4  0E00               	movlw	0
 30816  0068C6  6FED               	movwf	237,b	;volatile
 30817                           
 30818                           ; BSR set to: 61
 30819                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 30820  0068C8  0E00               	movlw	0
 30821  0068CA  6FEE               	movwf	238,b	;volatile
 30822                           
 30823                           ; BSR set to: 61
 30824                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 30825  0068CC  0E00               	movlw	0
 30826  0068CE  6FEF               	movwf	239,b	;volatile
 30827                           
 30828                           ; BSR set to: 61
 30829                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 30830  0068D0  0E00               	movlw	0
 30831  0068D2  6FF0               	movwf	240,b	;volatile
 30832                           
 30833                           ; BSR set to: 61
 30834                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 30835  0068D4  0E00               	movlw	0
 30836  0068D6  6FF1               	movwf	241,b	;volatile
 30837                           
 30838                           ; BSR set to: 61
 30839                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 30840  0068D8  0EB3               	movlw	179
 30841  0068DA  6FF2               	movwf	242,b	;volatile
 30842                           
 30843                           ; BSR set to: 61
 30844                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 30845  0068DC  0E00               	movlw	0
 30846  0068DE  6FF3               	movwf	243,b	;volatile
 30847                           
 30848                           ; BSR set to: 61
 30849                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 30850  0068E0  0E82               	movlw	130
 30851  0068E2  6FF4               	movwf	244,b	;volatile
 30852                           
 30853                           ; BSR set to: 61
 30854                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 30855  0068E4  0E40               	movlw	64
 30856  0068E6  6FF5               	movwf	245,b	;volatile
 30857                           
 30858                           ; BSR set to: 61
 30859                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 30860  0068E8  0E03               	movlw	3
 30861  0068EA  6FF6               	movwf	246,b	;volatile
 30862                           
 30863                           ; BSR set to: 61
 30864                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 30865  0068EC  0E00               	movlw	0
 30866  0068EE  6FF7               	movwf	247,b	;volatile
 30867                           
 30868                           ; BSR set to: 61
 30869                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 30870  0068F0  0E00               	movlw	0
 30871  0068F2  6FF8               	movwf	248,b	;volatile
 30872                           
 30873                           ; BSR set to: 61
 30874                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 30875  0068F4  0E00               	movlw	0
 30876  0068F6  6FF9               	movwf	249,b	;volatile
 30877                           
 30878                           ; BSR set to: 61
 30879                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 30880  0068F8  0E00               	movlw	0
 30881  0068FA  6FFA               	movwf	250,b	;volatile
 30882                           
 30883                           ; BSR set to: 61
 30884                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 30885  0068FC  0E84               	movlw	low _UART1_DefaultFramingErrorHandler
 30886  0068FE  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 30887  006900  0E8D               	movlw	high _UART1_DefaultFramingErrorHandler
 30888  006902  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 30889  006904  EC71  F046         	call	_UART1_SetFramingErrorHandler	;wreg free
 30890                           
 30891                           ; BSR set to: 61
 30892                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 30893  006908  0E82               	movlw	low _UART1_DefaultOverrunErrorHandler
 30894  00690A  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 30895  00690C  0E8D               	movlw	high _UART1_DefaultOverrunErrorHandler
 30896  00690E  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 30897  006910  EC6A  F046         	call	_UART1_SetOverrunErrorHandler	;wreg free
 30898                           
 30899                           ; BSR set to: 61
 30900                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 30901  006914  0E64               	movlw	low _UART1_DefaultErrorHandler
 30902  006916  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 30903  006918  0E8D               	movlw	high _UART1_DefaultErrorHandler
 30904  00691A  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 30905  00691C  EC78  F046         	call	_UART1_SetErrorHandler	;wreg free
 30906                           
 30907                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 30908  006920  0E00               	movlw	0
 30909  006922  0101               	movlb	1	; () banked
 30910  006924  6F62               	movwf	_uart1RxLastError& (0+255),b	;volatile
 30911                           
 30912                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 30913  006926  0E00               	movlw	0
 30914  006928  0100               	movlb	0	; () banked
 30915  00692A  6FE9               	movwf	_uart1TxHead& (0+255),b	;volatile
 30916                           
 30917                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 30918  00692C  0E00               	movlw	0
 30919  00692E  6FE8               	movwf	_uart1TxTail& (0+255),b	;volatile
 30920                           
 30921                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 30922  006930  0E40               	movlw	64
 30923  006932  0101               	movlb	1	; () banked
 30924  006934  6FED               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 30925                           
 30926                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 30927  006936  0E00               	movlw	0
 30928  006938  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 30929                           
 30930                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 30931  00693A  0E00               	movlw	0
 30932  00693C  0100               	movlb	0	; () banked
 30933  00693E  6FE7               	movwf	_uart1RxTail& (0+255),b	;volatile
 30934                           
 30935                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 30936  006940  0E00               	movlw	0
 30937  006942  6FE6               	movwf	_uart1RxCount& (0+255),b	;volatile
 30938                           
 30939                           ; BSR set to: 0
 30940                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 30941  006944  0139               	movlb	57	; () banked
 30942  006946  8793               	bsf	147,3,b	;volatile
 30943                           
 30944                           ; BSR set to: 57
 30945  006948  0012               	return		;funcret
 30946  00694A                     __end_of_UART1_Initialize:
 30947                           	opt callstack 0
 30948                           
 30949 ;; *************** function _UART1_SetTxInterruptHandler *****************
 30950 ;; Defined at:
 30951 ;;		line 352 in file "mcc_generated_files/uart1.c"
 30952 ;; Parameters:    Size  Location     Type
 30953 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 30954 ;;		 -> UART1_Transmit_ISR(1), 
 30955 ;; Auto vars:     Size  Location     Type
 30956 ;;		None
 30957 ;; Return value:  Size  Location     Type
 30958 ;;                  1    wreg      void 
 30959 ;; Registers used:
 30960 ;;		wreg, status,2, status,0
 30961 ;; Tracked objects:
 30962 ;;		On entry : 3F/39
 30963 ;;		On exit  : 3F/39
 30964 ;;		Unchanged: 3E/0
 30965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30970 ;;Total ram usage:        2 bytes
 30971 ;; Hardware stack levels used:    1
 30972 ;; Hardware stack levels required when called:    7
 30973 ;; This function calls:
 30974 ;;		Nothing
 30975 ;; This function is called by:
 30976 ;;		_UART1_Initialize
 30977 ;; This function uses a non-reentrant model
 30978 ;;
 30979                           
 30980                           	psect	text207
 30981  008CB8                     __ptext207:
 30982                           	opt callstack 0
 30983  008CB8                     _UART1_SetTxInterruptHandler:
 30984                           	opt callstack 21
 30985                           
 30986                           ; BSR set to: 57
 30987                           ;mcc_generated_files/uart1.c: 353:     UART1_TxInterruptHandler = InterruptHandler;
 30988                           
 30989                           ; BSR set to: 57
 30990                           ;incstack = 0
 30991  008CB8  0060  F008  F1E9   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 30992  008CBE  0060  F00C  F1EA   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 30993                           
 30994                           ; BSR set to: 57
 30995  008CC4  0012               	return		;funcret
 30996  008CC6                     __end_of_UART1_SetTxInterruptHandler:
 30997                           	opt callstack 0
 30998                           
 30999 ;; *************** function _UART1_SetRxInterruptHandler *****************
 31000 ;; Defined at:
 31001 ;;		line 348 in file "mcc_generated_files/uart1.c"
 31002 ;; Parameters:    Size  Location     Type
 31003 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31004 ;;		 -> UART1_Receive_ISR(1), 
 31005 ;; Auto vars:     Size  Location     Type
 31006 ;;		None
 31007 ;; Return value:  Size  Location     Type
 31008 ;;                  1    wreg      void 
 31009 ;; Registers used:
 31010 ;;		wreg, status,2, status,0
 31011 ;; Tracked objects:
 31012 ;;		On entry : 3F/39
 31013 ;;		On exit  : 3F/39
 31014 ;;		Unchanged: 3E/0
 31015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31020 ;;Total ram usage:        2 bytes
 31021 ;; Hardware stack levels used:    1
 31022 ;; Hardware stack levels required when called:    7
 31023 ;; This function calls:
 31024 ;;		Nothing
 31025 ;; This function is called by:
 31026 ;;		_UART1_Initialize
 31027 ;; This function uses a non-reentrant model
 31028 ;;
 31029                           
 31030                           	psect	text208
 31031  008CC6                     __ptext208:
 31032                           	opt callstack 0
 31033  008CC6                     _UART1_SetRxInterruptHandler:
 31034                           	opt callstack 21
 31035                           
 31036                           ; BSR set to: 57
 31037                           ;mcc_generated_files/uart1.c: 349:     UART1_RxInterruptHandler = InterruptHandler;
 31038                           
 31039                           ; BSR set to: 57
 31040                           ;incstack = 0
 31041  008CC6  0060  F008  F1EB   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 31042  008CCC  0060  F00C  F1EC   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 31043                           
 31044                           ; BSR set to: 57
 31045  008CD2  0012               	return		;funcret
 31046  008CD4                     __end_of_UART1_SetRxInterruptHandler:
 31047                           	opt callstack 0
 31048                           
 31049 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 31050 ;; Defined at:
 31051 ;;		line 338 in file "mcc_generated_files/uart1.c"
 31052 ;; Parameters:    Size  Location     Type
 31053 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31054 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 31055 ;; Auto vars:     Size  Location     Type
 31056 ;;		None
 31057 ;; Return value:  Size  Location     Type
 31058 ;;                  1    wreg      void 
 31059 ;; Registers used:
 31060 ;;		wreg, status,2, status,0
 31061 ;; Tracked objects:
 31062 ;;		On entry : 3F/3D
 31063 ;;		On exit  : 3F/3D
 31064 ;;		Unchanged: 3E/0
 31065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31070 ;;Total ram usage:        2 bytes
 31071 ;; Hardware stack levels used:    1
 31072 ;; Hardware stack levels required when called:    7
 31073 ;; This function calls:
 31074 ;;		Nothing
 31075 ;; This function is called by:
 31076 ;;		_UART1_Initialize
 31077 ;; This function uses a non-reentrant model
 31078 ;;
 31079                           
 31080                           	psect	text209
 31081  008CD4                     __ptext209:
 31082                           	opt callstack 0
 31083  008CD4                     _UART1_SetOverrunErrorHandler:
 31084                           	opt callstack 21
 31085                           
 31086                           ; BSR set to: 61
 31087                           ;mcc_generated_files/uart1.c: 339:     UART1_OverrunErrorHandler = interruptHandler;
 31088                           
 31089                           ; BSR set to: 57
 31090                           ;incstack = 0
 31091  008CD4  0060  F008  F1E1   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 31092  008CDA  0060  F00C  F1E2   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 31093                           
 31094                           ; BSR set to: 61
 31095  008CE0  0012               	return		;funcret
 31096  008CE2                     __end_of_UART1_SetOverrunErrorHandler:
 31097                           	opt callstack 0
 31098                           
 31099 ;; *************** function _UART1_SetFramingErrorHandler *****************
 31100 ;; Defined at:
 31101 ;;		line 334 in file "mcc_generated_files/uart1.c"
 31102 ;; Parameters:    Size  Location     Type
 31103 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31104 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 31105 ;; Auto vars:     Size  Location     Type
 31106 ;;		None
 31107 ;; Return value:  Size  Location     Type
 31108 ;;                  1    wreg      void 
 31109 ;; Registers used:
 31110 ;;		wreg, status,2, status,0
 31111 ;; Tracked objects:
 31112 ;;		On entry : 3F/3D
 31113 ;;		On exit  : 3F/3D
 31114 ;;		Unchanged: 3E/0
 31115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31120 ;;Total ram usage:        2 bytes
 31121 ;; Hardware stack levels used:    1
 31122 ;; Hardware stack levels required when called:    7
 31123 ;; This function calls:
 31124 ;;		Nothing
 31125 ;; This function is called by:
 31126 ;;		_UART1_Initialize
 31127 ;; This function uses a non-reentrant model
 31128 ;;
 31129                           
 31130                           	psect	text210
 31131  008CE2                     __ptext210:
 31132                           	opt callstack 0
 31133  008CE2                     _UART1_SetFramingErrorHandler:
 31134                           	opt callstack 21
 31135                           
 31136                           ; BSR set to: 61
 31137                           ;mcc_generated_files/uart1.c: 335:     UART1_FramingErrorHandler = interruptHandler;
 31138                           
 31139                           ; BSR set to: 61
 31140                           ;incstack = 0
 31141  008CE2  0060  F008  F1E3   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 31142  008CE8  0060  F00C  F1E4   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 31143                           
 31144                           ; BSR set to: 61
 31145  008CEE  0012               	return		;funcret
 31146  008CF0                     __end_of_UART1_SetFramingErrorHandler:
 31147                           	opt callstack 0
 31148                           
 31149 ;; *************** function _UART1_SetErrorHandler *****************
 31150 ;; Defined at:
 31151 ;;		line 342 in file "mcc_generated_files/uart1.c"
 31152 ;; Parameters:    Size  Location     Type
 31153 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31154 ;;		 -> UART1_DefaultErrorHandler(1), 
 31155 ;; Auto vars:     Size  Location     Type
 31156 ;;		None
 31157 ;; Return value:  Size  Location     Type
 31158 ;;                  1    wreg      void 
 31159 ;; Registers used:
 31160 ;;		wreg, status,2, status,0
 31161 ;; Tracked objects:
 31162 ;;		On entry : 3F/3D
 31163 ;;		On exit  : 3F/3D
 31164 ;;		Unchanged: 3E/0
 31165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31170 ;;Total ram usage:        2 bytes
 31171 ;; Hardware stack levels used:    1
 31172 ;; Hardware stack levels required when called:    7
 31173 ;; This function calls:
 31174 ;;		Nothing
 31175 ;; This function is called by:
 31176 ;;		_UART1_Initialize
 31177 ;; This function uses a non-reentrant model
 31178 ;;
 31179                           
 31180                           	psect	text211
 31181  008CF0                     __ptext211:
 31182                           	opt callstack 0
 31183  008CF0                     _UART1_SetErrorHandler:
 31184                           	opt callstack 21
 31185                           
 31186                           ; BSR set to: 61
 31187                           ;mcc_generated_files/uart1.c: 343:     UART1_ErrorHandler = interruptHandler;
 31188                           
 31189                           ; BSR set to: 61
 31190                           ;incstack = 0
 31191  008CF0  0060  F008  F1DF   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 31192  008CF6  0060  F00C  F1E0   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 31193                           
 31194                           ; BSR set to: 61
 31195  008CFC  0012               	return		;funcret
 31196  008CFE                     __end_of_UART1_SetErrorHandler:
 31197                           	opt callstack 0
 31198                           
 31199 ;; *************** function _TMR0_Initialize *****************
 31200 ;; Defined at:
 31201 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 31202 ;; Parameters:    Size  Location     Type
 31203 ;;		None
 31204 ;; Auto vars:     Size  Location     Type
 31205 ;;		None
 31206 ;; Return value:  Size  Location     Type
 31207 ;;                  1    wreg      void 
 31208 ;; Registers used:
 31209 ;;		wreg, status,2, status,0, cstack
 31210 ;; Tracked objects:
 31211 ;;		On entry : 3F/1
 31212 ;;		On exit  : 3B/39
 31213 ;;		Unchanged: 0/0
 31214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31219 ;;Total ram usage:        2 bytes
 31220 ;; Hardware stack levels used:    1
 31221 ;; Hardware stack levels required when called:    8
 31222 ;; This function calls:
 31223 ;;		_TMR0_SetInterruptHandler
 31224 ;; This function is called by:
 31225 ;;		_SYSTEM_Initialize
 31226 ;; This function uses a non-reentrant model
 31227 ;;
 31228                           
 31229                           	psect	text212
 31230  00821E                     __ptext212:
 31231                           	opt callstack 0
 31232  00821E                     _TMR0_Initialize:
 31233                           	opt callstack 21
 31234                           
 31235                           ; BSR set to: 1
 31236                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 31237                           
 31238                           ; BSR set to: 61
 31239                           ;incstack = 0
 31240  00821E  0E40               	movlw	64
 31241  008220  6EB9               	movwf	185,c	;volatile
 31242                           
 31243                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 31244  008222  0EC1               	movlw	193
 31245  008224  6EB7               	movwf	183,c	;volatile
 31246                           
 31247                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 31248  008226  0E80               	movlw	128
 31249  008228  6EB6               	movwf	182,c	;volatile
 31250                           
 31251                           ; BSR set to: 1
 31252                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 31253  00822A  50B6               	movf	182,w,c	;volatile
 31254  00822C  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 31255  008232  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 31256  008234  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 31257  00823A  6A04               	clrf	??_TMR0_Initialize^0,c
 31258  00823C  1004               	iorwf	??_TMR0_Initialize^0,w,c
 31259  00823E  6FE7               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 31260  008240  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 31261  008242  6FE8               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 31262                           
 31263                           ; BSR set to: 1
 31264                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 31265  008244  0139               	movlb	57	; () banked
 31266  008246  9FA3               	bcf	163,7,b	;volatile
 31267                           
 31268                           ; BSR set to: 57
 31269                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 31270  008248  8F93               	bsf	147,7,b	;volatile
 31271                           
 31272                           ; BSR set to: 57
 31273                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 31274  00824A  0E7C               	movlw	low _TMR0_DefaultInterruptHandler
 31275  00824C  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 31276  00824E  0E8D               	movlw	high _TMR0_DefaultInterruptHandler
 31277  008250  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 31278  008252  EC7F  F046         	call	_TMR0_SetInterruptHandler	;wreg free
 31279                           
 31280                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 31281  008256  0E90               	movlw	144
 31282  008258  6EB8               	movwf	184,c	;volatile
 31283  00825A  0012               	return		;funcret
 31284  00825C                     __end_of_TMR0_Initialize:
 31285                           	opt callstack 0
 31286                           
 31287 ;; *************** function _TMR0_SetInterruptHandler *****************
 31288 ;; Defined at:
 31289 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 31290 ;; Parameters:    Size  Location     Type
 31291 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31292 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 31293 ;; Auto vars:     Size  Location     Type
 31294 ;;		None
 31295 ;; Return value:  Size  Location     Type
 31296 ;;                  1    wreg      void 
 31297 ;; Registers used:
 31298 ;;		wreg, status,2, status,0
 31299 ;; Tracked objects:
 31300 ;;		On entry : 3B/3D
 31301 ;;		On exit  : 3B/39
 31302 ;;		Unchanged: 3A/0
 31303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31308 ;;Total ram usage:        2 bytes
 31309 ;; Hardware stack levels used:    1
 31310 ;; Hardware stack levels required when called:    7
 31311 ;; This function calls:
 31312 ;;		Nothing
 31313 ;; This function is called by:
 31314 ;;		_TMR0_Initialize
 31315 ;;		_main
 31316 ;; This function uses a non-reentrant model
 31317 ;;
 31318                           
 31319                           	psect	text213
 31320  008CFE                     __ptext213:
 31321                           	opt callstack 0
 31322  008CFE                     _TMR0_SetInterruptHandler:
 31323                           	opt callstack 23
 31324                           
 31325                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 31326                           
 31327                           ;incstack = 0
 31328  008CFE  0060  F008  F1E5   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 31329  008D04  0060  F00C  F1E6   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 31330  008D0A  0012               	return		;funcret
 31331  008D0C                     __end_of_TMR0_SetInterruptHandler:
 31332                           	opt callstack 0
 31333                           
 31334 ;; *************** function _SPI1_Initialize *****************
 31335 ;; Defined at:
 31336 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31337 ;; Parameters:    Size  Location     Type
 31338 ;;		None
 31339 ;; Auto vars:     Size  Location     Type
 31340 ;;		None
 31341 ;; Return value:  Size  Location     Type
 31342 ;;                  1    wreg      void 
 31343 ;; Registers used:
 31344 ;;		wreg, status,2
 31345 ;; Tracked objects:
 31346 ;;		On entry : 3F/39
 31347 ;;		On exit  : 3F/3D
 31348 ;;		Unchanged: 0/0
 31349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31354 ;;Total ram usage:        0 bytes
 31355 ;; Hardware stack levels used:    1
 31356 ;; Hardware stack levels required when called:    7
 31357 ;; This function calls:
 31358 ;;		Nothing
 31359 ;; This function is called by:
 31360 ;;		_SYSTEM_Initialize
 31361 ;; This function uses a non-reentrant model
 31362 ;;
 31363                           
 31364                           	psect	text214
 31365  008B02                     __ptext214:
 31366                           	opt callstack 0
 31367  008B02                     _SPI1_Initialize:
 31368                           	opt callstack 22
 31369                           
 31370                           ; BSR set to: 57
 31371                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 31372                           
 31373                           ;incstack = 0
 31374  008B02  0E82               	movlw	130
 31375  008B04  013D               	movlb	61	; () banked
 31376  008B06  6F14               	movwf	20,b	;volatile
 31377                           
 31378                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 31379  008B08  0EC0               	movlw	192
 31380  008B0A  6F15               	movwf	21,b	;volatile
 31381                           
 31382                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 31383  008B0C  0E03               	movlw	3
 31384  008B0E  6F16               	movwf	22,b	;volatile
 31385                           
 31386                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 31387  008B10  0E01               	movlw	1
 31388  008B12  6F1C               	movwf	28,b	;volatile
 31389                           
 31390                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 31391  008B14  0E03               	movlw	3
 31392  008B16  6F19               	movwf	25,b	;volatile
 31393                           
 31394                           ; BSR set to: 61
 31395                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB2 = 0;
 31396  008B18  94C3               	bcf	195,2,c	;volatile
 31397                           
 31398                           ; BSR set to: 61
 31399  008B1A  0012               	return		;funcret
 31400  008B1C                     __end_of_SPI1_Initialize:
 31401                           	opt callstack 0
 31402                           
 31403 ;; *************** function _PMD_Initialize *****************
 31404 ;; Defined at:
 31405 ;;		line 76 in file "mcc_generated_files/mcc.c"
 31406 ;; Parameters:    Size  Location     Type
 31407 ;;		None
 31408 ;; Auto vars:     Size  Location     Type
 31409 ;;		None
 31410 ;; Return value:  Size  Location     Type
 31411 ;;                  1    wreg      void 
 31412 ;; Registers used:
 31413 ;;		wreg, status,2
 31414 ;; Tracked objects:
 31415 ;;		On entry : 3F/39
 31416 ;;		On exit  : 3F/39
 31417 ;;		Unchanged: 0/0
 31418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31423 ;;Total ram usage:        0 bytes
 31424 ;; Hardware stack levels used:    1
 31425 ;; Hardware stack levels required when called:    7
 31426 ;; This function calls:
 31427 ;;		Nothing
 31428 ;; This function is called by:
 31429 ;;		_SYSTEM_Initialize
 31430 ;; This function uses a non-reentrant model
 31431 ;;
 31432                           
 31433                           	psect	text215
 31434  008904                     __ptext215:
 31435                           	opt callstack 0
 31436  008904                     _PMD_Initialize:
 31437                           	opt callstack 22
 31438                           
 31439                           ; BSR set to: 57
 31440                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 31441                           
 31442                           ; BSR set to: 61
 31443                           ;incstack = 0
 31444  008904  0E00               	movlw	0
 31445  008906  6FC0               	movwf	192,b	;volatile
 31446                           
 31447                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 31448  008908  0E00               	movlw	0
 31449  00890A  6FC1               	movwf	193,b	;volatile
 31450                           
 31451                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 31452  00890C  0E00               	movlw	0
 31453  00890E  6FC2               	movwf	194,b	;volatile
 31454                           
 31455                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 31456  008910  0E00               	movlw	0
 31457  008912  6FC3               	movwf	195,b	;volatile
 31458                           
 31459                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 31460  008914  0E00               	movlw	0
 31461  008916  6FC4               	movwf	196,b	;volatile
 31462                           
 31463                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 31464  008918  0E00               	movlw	0
 31465  00891A  6FC5               	movwf	197,b	;volatile
 31466                           
 31467                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 31468  00891C  0E00               	movlw	0
 31469  00891E  6FC6               	movwf	198,b	;volatile
 31470                           
 31471                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 31472  008920  0E00               	movlw	0
 31473  008922  6FC7               	movwf	199,b	;volatile
 31474                           
 31475                           ; BSR set to: 57
 31476  008924  0012               	return		;funcret
 31477  008926                     __end_of_PMD_Initialize:
 31478                           	opt callstack 0
 31479                           
 31480 ;; *************** function _PIN_MANAGER_Initialize *****************
 31481 ;; Defined at:
 31482 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 31483 ;; Parameters:    Size  Location     Type
 31484 ;;		None
 31485 ;; Auto vars:     Size  Location     Type
 31486 ;;		None
 31487 ;; Return value:  Size  Location     Type
 31488 ;;                  1    wreg      void 
 31489 ;; Registers used:
 31490 ;;		wreg, status,2
 31491 ;; Tracked objects:
 31492 ;;		On entry : 3F/39
 31493 ;;		On exit  : 3F/3A
 31494 ;;		Unchanged: 0/0
 31495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31500 ;;Total ram usage:        0 bytes
 31501 ;; Hardware stack levels used:    1
 31502 ;; Hardware stack levels required when called:    7
 31503 ;; This function calls:
 31504 ;;		Nothing
 31505 ;; This function is called by:
 31506 ;;		_SYSTEM_Initialize
 31507 ;; This function uses a non-reentrant model
 31508 ;;
 31509                           
 31510                           	psect	text216
 31511  007044                     __ptext216:
 31512                           	opt callstack 0
 31513  007044                     _PIN_MANAGER_Initialize:
 31514                           	opt callstack 22
 31515                           
 31516                           ; BSR set to: 57
 31517                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 31518                           
 31519                           ; BSR set to: 57
 31520                           ;incstack = 0
 31521  007044  0E08               	movlw	8
 31522  007046  6EBA               	movwf	186,c	;volatile
 31523                           
 31524                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 31525  007048  0E00               	movlw	0
 31526  00704A  6EBB               	movwf	187,c	;volatile
 31527                           
 31528                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 31529  00704C  0E40               	movlw	64
 31530  00704E  6EBC               	movwf	188,c	;volatile
 31531                           
 31532                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 31533  007050  0EF7               	movlw	247
 31534  007052  6EC2               	movwf	194,c	;volatile
 31535                           
 31536                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 31537  007054  0EFE               	movlw	254
 31538  007056  6EC3               	movwf	195,c	;volatile
 31539                           
 31540                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 31541  007058  0E1C               	movlw	28
 31542  00705A  6EC4               	movwf	196,c	;volatile
 31543                           
 31544                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 31545  00705C  0E29               	movlw	41
 31546  00705E  013A               	movlb	58	; () banked
 31547  007060  6F60               	movwf	96,b	;volatile
 31548                           
 31549                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 31550  007062  0ECD               	movlw	205
 31551  007064  6F50               	movwf	80,b	;volatile
 31552                           
 31553                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF2;
 31554  007066  0EF2               	movlw	242
 31555  007068  6F40               	movwf	64,b	;volatile
 31556                           
 31557                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 31558  00706A  0E00               	movlw	0
 31559  00706C  6F81               	movwf	129,b	;volatile
 31560                           
 31561                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 31562  00706E  0E00               	movlw	0
 31563  007070  6F51               	movwf	81,b	;volatile
 31564                           
 31565                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 31566  007072  0E00               	movlw	0
 31567  007074  6F41               	movwf	65,b	;volatile
 31568                           
 31569                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 31570  007076  0E08               	movlw	8
 31571  007078  6F61               	movwf	97,b	;volatile
 31572                           
 31573                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 31574  00707A  0E00               	movlw	0
 31575  00707C  6F5A               	movwf	90,b	;volatile
 31576                           
 31577                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 31578  00707E  0E00               	movlw	0
 31579  007080  6F5B               	movwf	91,b	;volatile
 31580                           
 31581                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 31582  007082  0E00               	movlw	0
 31583  007084  6F6A               	movwf	106,b	;volatile
 31584                           
 31585                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 31586  007086  0E00               	movlw	0
 31587  007088  6F6B               	movwf	107,b	;volatile
 31588                           
 31589                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 31590  00708A  0E00               	movlw	0
 31591  00708C  6F42               	movwf	66,b	;volatile
 31592                           
 31593                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x06;
 31594  00708E  0E06               	movlw	6
 31595  007090  6F52               	movwf	82,b	;volatile
 31596                           
 31597                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x18;
 31598  007092  0E18               	movlw	24
 31599  007094  6F62               	movwf	98,b	;volatile
 31600                           
 31601                           ; BSR set to: 58
 31602                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 31603  007096  6943               	setf	67,b	;volatile
 31604                           
 31605                           ; BSR set to: 58
 31606                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 31607  007098  6953               	setf	83,b	;volatile
 31608                           
 31609                           ; BSR set to: 58
 31610                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 31611  00709A  6963               	setf	99,b	;volatile
 31612                           
 31613                           ; BSR set to: 58
 31614                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 31615  00709C  6944               	setf	68,b	;volatile
 31616                           
 31617                           ; BSR set to: 58
 31618                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 31619  00709E  6954               	setf	84,b	;volatile
 31620                           
 31621                           ; BSR set to: 58
 31622                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 31623  0070A0  6964               	setf	100,b	;volatile
 31624                           
 31625                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 31626  0070A2  0E08               	movlw	8
 31627  0070A4  6F84               	movwf	132,b	;volatile
 31628                           
 31629                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 31630  0070A6  0E13               	movlw	19
 31631  0070A8  6F10               	movwf	16,b	;volatile
 31632                           
 31633                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 31634  0070AA  0E17               	movlw	23
 31635  0070AC  6FDE               	movwf	222,b	;volatile
 31636                           
 31637                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 31638  0070AE  0E05               	movlw	5
 31639  0070B0  6FE0               	movwf	224,b	;volatile
 31640                           
 31641                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 31642  0070B2  0E1F               	movlw	31
 31643  0070B4  6F08               	movwf	8,b	;volatile
 31644                           
 31645                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 31646  0070B6  0E14               	movlw	20
 31647  0070B8  6F11               	movwf	17,b	;volatile
 31648                           
 31649                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 31650  0070BA  0E12               	movlw	18
 31651  0070BC  6FE5               	movwf	229,b	;volatile
 31652                           
 31653                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 31654  0070BE  0E1F               	movlw	31
 31655  0070C0  6FE6               	movwf	230,b	;volatile
 31656                           
 31657                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 31658  0070C2  0E1E               	movlw	30
 31659  0070C4  6F17               	movwf	23,b	;volatile
 31660                           
 31661                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 31662  0070C6  0E09               	movlw	9
 31663  0070C8  6FDF               	movwf	223,b	;volatile
 31664                           
 31665                           ; BSR set to: 58
 31666  0070CA  0012               	return		;funcret
 31667  0070CC                     __end_of_PIN_MANAGER_Initialize:
 31668                           	opt callstack 0
 31669                           
 31670 ;; *************** function _OSCILLATOR_Initialize *****************
 31671 ;; Defined at:
 31672 ;;		line 62 in file "mcc_generated_files/mcc.c"
 31673 ;; Parameters:    Size  Location     Type
 31674 ;;		None
 31675 ;; Auto vars:     Size  Location     Type
 31676 ;;		None
 31677 ;; Return value:  Size  Location     Type
 31678 ;;                  1    wreg      void 
 31679 ;; Registers used:
 31680 ;;		wreg, status,2
 31681 ;; Tracked objects:
 31682 ;;		On entry : 3F/3A
 31683 ;;		On exit  : 3F/39
 31684 ;;		Unchanged: 0/0
 31685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31690 ;;Total ram usage:        0 bytes
 31691 ;; Hardware stack levels used:    1
 31692 ;; Hardware stack levels required when called:    7
 31693 ;; This function calls:
 31694 ;;		Nothing
 31695 ;; This function is called by:
 31696 ;;		_SYSTEM_Initialize
 31697 ;; This function uses a non-reentrant model
 31698 ;;
 31699                           
 31700                           	psect	text217
 31701  008B4C                     __ptext217:
 31702                           	opt callstack 0
 31703  008B4C                     _OSCILLATOR_Initialize:
 31704                           	opt callstack 22
 31705                           
 31706                           ; BSR set to: 58
 31707                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 31708                           
 31709                           ; BSR set to: 58
 31710                           ;incstack = 0
 31711  008B4C  0E60               	movlw	96
 31712  008B4E  0139               	movlb	57	; () banked
 31713  008B50  6FD9               	movwf	217,b	;volatile
 31714                           
 31715                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 31716  008B52  0E00               	movlw	0
 31717  008B54  6FDB               	movwf	219,b	;volatile
 31718                           
 31719                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 31720  008B56  0E00               	movlw	0
 31721  008B58  6FDD               	movwf	221,b	;volatile
 31722                           
 31723                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 31724  008B5A  0E08               	movlw	8
 31725  008B5C  6FDF               	movwf	223,b	;volatile
 31726                           
 31727                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 31728  008B5E  0E00               	movlw	0
 31729  008B60  6FDE               	movwf	222,b	;volatile
 31730                           
 31731                           ; BSR set to: 57
 31732  008B62  0012               	return		;funcret
 31733  008B64                     __end_of_OSCILLATOR_Initialize:
 31734                           	opt callstack 0
 31735                           
 31736 ;; *************** function _INTERRUPT_Initialize *****************
 31737 ;; Defined at:
 31738 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31739 ;; Parameters:    Size  Location     Type
 31740 ;;		None
 31741 ;; Auto vars:     Size  Location     Type
 31742 ;;  state           1    1[COMRAM] _Bool 
 31743 ;; Return value:  Size  Location     Type
 31744 ;;                  1    wreg      void 
 31745 ;; Registers used:
 31746 ;;		wreg, status,2
 31747 ;; Tracked objects:
 31748 ;;		On entry : 0/0
 31749 ;;		On exit  : 3F/39
 31750 ;;		Unchanged: 0/0
 31751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31756 ;;Total ram usage:        1 bytes
 31757 ;; Hardware stack levels used:    1
 31758 ;; Hardware stack levels required when called:    7
 31759 ;; This function calls:
 31760 ;;		Nothing
 31761 ;; This function is called by:
 31762 ;;		_SYSTEM_Initialize
 31763 ;; This function uses a non-reentrant model
 31764 ;;
 31765                           
 31766                           	psect	text218
 31767  0080A8                     __ptext218:
 31768                           	opt callstack 0
 31769  0080A8                     _INTERRUPT_Initialize:
 31770                           	opt callstack 22
 31771                           
 31772                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31773                           
 31774                           ; BSR set to: 57
 31775                           ;incstack = 0
 31776  0080A8  8AD2               	bsf	210,5,c	;volatile
 31777                           
 31778                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31779  0080AA  0E00               	movlw	0
 31780  0080AC  BED2               	btfsc	16338,7,c	;volatile
 31781  0080AE  0E01               	movlw	1
 31782  0080B0  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 31783                           
 31784                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31785  0080B2  9ED2               	bcf	16338,7,c	;volatile
 31786                           
 31787                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31788  0080B4  0E55               	movlw	85
 31789  0080B6  6ED4               	movwf	212,c	;volatile
 31790                           
 31791                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31792  0080B8  0EAA               	movlw	170
 31793  0080BA  6ED4               	movwf	212,c	;volatile
 31794                           
 31795                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31796  0080BC  90D4               	bcf	212,0,c	;volatile
 31797                           
 31798                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 31799  0080BE  0E00               	movlw	0
 31800  0080C0  6ED7               	movwf	215,c	;volatile
 31801                           
 31802                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 31803  0080C2  0E00               	movlw	0
 31804  0080C4  6ED6               	movwf	214,c	;volatile
 31805                           
 31806                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 31807  0080C6  0E08               	movlw	8
 31808  0080C8  6ED5               	movwf	213,c	;volatile
 31809                           
 31810                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31811  0080CA  0E55               	movlw	85
 31812  0080CC  6ED4               	movwf	212,c	;volatile
 31813                           
 31814                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31815  0080CE  0EAA               	movlw	170
 31816  0080D0  6ED4               	movwf	212,c	;volatile
 31817                           
 31818                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31819  0080D2  80D4               	bsf	212,0,c	;volatile
 31820                           
 31821                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31822  0080D4  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 31823  0080D6  D002               	bra	u5885
 31824  0080D8  9ED2               	bcf	16338,7,c	;volatile
 31825  0080DA  D001               	bra	u5886
 31826  0080DC                     u5885:
 31827  0080DC  8ED2               	bsf	16338,7,c	;volatile
 31828  0080DE                     u5886:
 31829                           
 31830                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 31831  0080DE  0139               	movlb	57	; () banked
 31832  0080E0  8983               	bsf	131,4,b	;volatile
 31833                           
 31834                           ; BSR set to: 57
 31835                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 31836  0080E2  8783               	bsf	131,3,b	;volatile
 31837                           
 31838                           ; BSR set to: 57
 31839                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 31840  0080E4  9F83               	bcf	131,7,b	;volatile
 31841                           
 31842                           ; BSR set to: 57
 31843  0080E6  0012               	return		;funcret
 31844  0080E8                     __end_of_INTERRUPT_Initialize:
 31845                           	opt callstack 0
 31846                           
 31847 ;; *************** function _CRC_Initialize *****************
 31848 ;; Defined at:
 31849 ;;		line 76 in file "mcc_generated_files/crc.c"
 31850 ;; Parameters:    Size  Location     Type
 31851 ;;		None
 31852 ;; Auto vars:     Size  Location     Type
 31853 ;;  seed            2    4[COMRAM] unsigned short 
 31854 ;;  poly            2    2[COMRAM] unsigned short 
 31855 ;; Return value:  Size  Location     Type
 31856 ;;                  1    wreg      void 
 31857 ;; Registers used:
 31858 ;;		wreg, status,2, status,0
 31859 ;; Tracked objects:
 31860 ;;		On entry : 3F/39
 31861 ;;		On exit  : 3F/1
 31862 ;;		Unchanged: 0/0
 31863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31865 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31867 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31868 ;;Total ram usage:        5 bytes
 31869 ;; Hardware stack levels used:    1
 31870 ;; Hardware stack levels required when called:    7
 31871 ;; This function calls:
 31872 ;;		Nothing
 31873 ;; This function is called by:
 31874 ;;		_SYSTEM_Initialize
 31875 ;; This function uses a non-reentrant model
 31876 ;;
 31877                           
 31878                           	psect	text219
 31879  0075F8                     __ptext219:
 31880                           	opt callstack 0
 31881  0075F8                     _CRC_Initialize:
 31882                           	opt callstack 22
 31883                           
 31884                           ; BSR set to: 57
 31885                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 31886                           
 31887                           ; BSR set to: 57
 31888                           ;incstack = 0
 31889  0075F8  0E80               	movlw	128
 31890  0075FA  6F68               	movwf	104,b	;volatile
 31891                           
 31892                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 31893  0075FC  0E7F               	movlw	127
 31894  0075FE  6F69               	movwf	105,b	;volatile
 31895                           
 31896                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 31897  007600  0E00               	movlw	0
 31898  007602  6F62               	movwf	98,b	;volatile
 31899                           
 31900                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 31901  007604  0E00               	movlw	0
 31902  007606  6F63               	movwf	99,b	;volatile
 31903                           
 31904                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 31905  007608  0E00               	movlw	0
 31906  00760A  6F7C               	movwf	124,b	;volatile
 31907                           
 31908                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 31909  00760C  0E00               	movlw	0
 31910  00760E  6F78               	movwf	120,b	;volatile
 31911                           
 31912                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 31913  007610  0E00               	movlw	0
 31914  007612  6F77               	movwf	119,b	;volatile
 31915                           
 31916                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 31917  007614  0E00               	movlw	0
 31918  007616  6F76               	movwf	118,b	;volatile
 31919                           
 31920                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 31921  007618  0E3F               	movlw	63
 31922  00761A  6F7B               	movwf	123,b	;volatile
 31923                           
 31924                           ; BSR set to: 57
 31925                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 31926  00761C  697A               	setf	122,b	;volatile
 31927                           
 31928                           ; BSR set to: 57
 31929                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 31930  00761E  6979               	setf	121,b	;volatile
 31931                           
 31932                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 31933  007620  0E00               	movlw	0
 31934  007622  6F7D               	movwf	125,b	;volatile
 31935                           
 31936                           ;mcc_generated_files/crc.c: 106:     poly = 32773;
 31937  007624  0E80               	movlw	128
 31938  007626  6E04               	movwf	(CRC_Initialize@poly+1)^0,c
 31939  007628  0E05               	movlw	5
 31940  00762A  6E03               	movwf	CRC_Initialize@poly^0,c
 31941                           
 31942                           ; BSR set to: 57
 31943                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 31944  00762C  0060  F013  F967   	movff	CRC_Initialize@poly+1,14695	;volatile
 31945                           
 31946                           ; BSR set to: 57
 31947                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 31948  007632  0E05               	movlw	5
 31949  007634  6F66               	movwf	102,b	;volatile
 31950                           
 31951                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 31952  007636  0E00               	movlw	0
 31953  007638  6E06               	movwf	(CRC_Initialize@seed+1)^0,c
 31954  00763A  0E00               	movlw	0
 31955  00763C  6E05               	movwf	CRC_Initialize@seed^0,c
 31956                           
 31957                           ; BSR set to: 57
 31958                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 31959  00763E  0060  F01B  F963   	movff	CRC_Initialize@seed+1,14691	;volatile
 31960                           
 31961                           ; BSR set to: 57
 31962                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 31963  007644  0E00               	movlw	0
 31964  007646  6F62               	movwf	98,b	;volatile
 31965                           
 31966                           ; BSR set to: 57
 31967                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 31968  007648  3969               	swapf	105,w,b	;volatile
 31969  00764A  0B0F               	andlw	15
 31970  00764C  6E02               	movwf	??_CRC_Initialize^0,c
 31971  00764E  2802               	incf	??_CRC_Initialize^0,w,c
 31972  007650  0101               	movlb	1	; () banked
 31973  007652  6FDA               	movwf	_crcObj& (0+255),b
 31974                           
 31975                           ; BSR set to: 1
 31976                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 31977  007654  0139               	movlb	57	; () banked
 31978  007656  5169               	movf	105,w,b	;volatile
 31979  007658  0B0F               	andlw	15
 31980  00765A  6E02               	movwf	??_CRC_Initialize^0,c
 31981  00765C  2802               	incf	??_CRC_Initialize^0,w,c
 31982  00765E  0101               	movlb	1	; () banked
 31983  007660  6FDB               	movwf	(_crcObj+1)& (0+255),b
 31984                           
 31985                           ; BSR set to: 1
 31986  007662  0012               	return		;funcret
 31987  007664                     __end_of_CRC_Initialize:
 31988                           	opt callstack 0
 31989                           
 31990 ;; *************** function _TMR0_ISR *****************
 31991 ;; Defined at:
 31992 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 31993 ;; Parameters:    Size  Location     Type
 31994 ;;		None
 31995 ;; Auto vars:     Size  Location     Type
 31996 ;;		None
 31997 ;; Return value:  Size  Location     Type
 31998 ;;                  1    wreg      void 
 31999 ;; Registers used:
 32000 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32001 ;; Tracked objects:
 32002 ;;		On entry : 0/0
 32003 ;;		On exit  : 0/0
 32004 ;;		Unchanged: 0/0
 32005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32010 ;;Total ram usage:        1 bytes
 32011 ;; Hardware stack levels used:    1
 32012 ;; Hardware stack levels required when called:    6
 32013 ;; This function calls:
 32014 ;;		_TMR0_CallBack
 32015 ;; This function is called by:
 32016 ;;		Interrupt level 1
 32017 ;; This function uses a non-reentrant model
 32018 ;;
 32019                           
 32020                           	psect	text220
 32021  008928                     __ptext220:
 32022                           	opt callstack 0
 32023  008928                     _TMR0_ISR:
 32024                           	opt callstack 9
 32025                           
 32026                           ; BSR set to: 1
 32027                           ;incstack = 0
 32028  008928  006F FF60  F001    	movff	status,??_TMR0_ISR
 32029                           
 32030                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 32031  00892E  0139               	movlb	57	; () banked
 32032  008930  9FA3               	bcf	163,7,b	;volatile
 32033                           
 32034                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 32035  008932  0060  F7A3  FFB7   	movff	_timer0ReloadVal16bit+1,16311	;volatile
 32036                           
 32037                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 32038  008938  0060  F79F  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 32039                           
 32040                           ; BSR set to: 57
 32041                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 32042  00893E  ECC5  F044         	call	_TMR0_CallBack	;wreg free
 32043  008942  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 32044  008948  0011               	retfie		f
 32045  00894A                     __end_of_TMR0_ISR:
 32046                           	opt callstack 0
 32047                           
 32048 ;; *************** function _TMR0_CallBack *****************
 32049 ;; Defined at:
 32050 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 32051 ;; Parameters:    Size  Location     Type
 32052 ;;		None
 32053 ;; Auto vars:     Size  Location     Type
 32054 ;;		None
 32055 ;; Return value:  Size  Location     Type
 32056 ;;                  1    wreg      void 
 32057 ;; Registers used:
 32058 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32059 ;; Tracked objects:
 32060 ;;		On entry : 3F/39
 32061 ;;		On exit  : 0/0
 32062 ;;		Unchanged: 0/0
 32063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32068 ;;Total ram usage:        0 bytes
 32069 ;; Hardware stack levels used:    1
 32070 ;; Hardware stack levels required when called:    5
 32071 ;; This function calls:
 32072 ;;		Absolute function
 32073 ;;		_TMR0_DefaultInterruptHandler
 32074 ;;		_Timer0Handler
 32075 ;; This function is called by:
 32076 ;;		_TMR0_ISR
 32077 ;; This function uses a non-reentrant model
 32078 ;;
 32079                           
 32080                           	psect	text221
 32081  00898A                     __ptext221:
 32082                           	opt callstack 0
 32083  00898A                     _TMR0_CallBack:
 32084                           	opt callstack 9
 32085                           
 32086                           ; BSR set to: 57
 32087                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 32088                           
 32089                           ;incstack = 0
 32090  00898A  0101               	movlb	1	; () banked
 32091  00898C  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32092  00898E  11E6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32093  008990  B4D8               	btfsc	status,2,c
 32094  008992  0012               	return	
 32095                           
 32096                           ; BSR set to: 1
 32097                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 32098  008994  D801               	call	i1u1264_28
 32099  008996  0012               	return	
 32100  008998                     i1u1264_28:
 32101  008998  0005               	push	
 32102  00899A  6EFA               	movwf	pclath,c
 32103  00899C  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32104  00899E  6EFD               	movwf	tosl,c
 32105  0089A0  51E6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32106  0089A2  6EFE               	movwf	tosh,c
 32107  0089A4  6AFF               	clrf	tosu,c
 32108  0089A6  50FA               	movf	pclath,w,c
 32109  0089A8  0012               	return		;indir
 32110  0089AA                     __end_of_TMR0_CallBack:
 32111                           	opt callstack 0
 32112                           
 32113 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 32114 ;; Defined at:
 32115 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 32116 ;; Parameters:    Size  Location     Type
 32117 ;;		None
 32118 ;; Auto vars:     Size  Location     Type
 32119 ;;		None
 32120 ;; Return value:  Size  Location     Type
 32121 ;;                  1    wreg      void 
 32122 ;; Registers used:
 32123 ;;		None
 32124 ;; Tracked objects:
 32125 ;;		On entry : 3F/1
 32126 ;;		On exit  : 3F/1
 32127 ;;		Unchanged: 3F/0
 32128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32133 ;;Total ram usage:        0 bytes
 32134 ;; Hardware stack levels used:    1
 32135 ;; Hardware stack levels required when called:    4
 32136 ;; This function calls:
 32137 ;;		Nothing
 32138 ;; This function is called by:
 32139 ;;		_TMR0_Initialize
 32140 ;;		_TMR0_CallBack
 32141 ;; This function uses a non-reentrant model
 32142 ;;
 32143                           
 32144                           	psect	text222
 32145  008D7C                     __ptext222:
 32146                           	opt callstack 0
 32147  008D7C                     _TMR0_DefaultInterruptHandler:
 32148                           	opt callstack 9
 32149                           
 32150                           ; BSR set to: 1
 32151                           
 32152                           ;incstack = 0
 32153  008D7C  0012               	return		;funcret
 32154  008D7E                     __end_of_TMR0_DefaultInterruptHandler:
 32155                           	opt callstack 0
 32156                           
 32157 ;; *************** function _Timer0Handler *****************
 32158 ;; Defined at:
 32159 ;;		line 7 in file "../hal/hal_src/Timers.c"
 32160 ;; Parameters:    Size  Location     Type
 32161 ;;		None
 32162 ;; Auto vars:     Size  Location     Type
 32163 ;;		None
 32164 ;; Return value:  Size  Location     Type
 32165 ;;                  1    wreg      void 
 32166 ;; Registers used:
 32167 ;;		wreg, status,2, status,0
 32168 ;; Tracked objects:
 32169 ;;		On entry : 3F/1
 32170 ;;		On exit  : 3F/0
 32171 ;;		Unchanged: 0/0
 32172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32177 ;;Total ram usage:        0 bytes
 32178 ;; Hardware stack levels used:    1
 32179 ;; Hardware stack levels required when called:    4
 32180 ;; This function calls:
 32181 ;;		Nothing
 32182 ;; This function is called by:
 32183 ;;		_main
 32184 ;;		_TMR0_CallBack
 32185 ;; This function uses a non-reentrant model
 32186 ;;
 32187                           
 32188                           	psect	text223
 32189  007C2A                     __ptext223:
 32190                           	opt callstack 0
 32191  007C2A                     _Timer0Handler:
 32192                           	opt callstack 9
 32193                           
 32194                           ; BSR set to: 1
 32195                           ;../hal/hal_src/Timers.c: 9:     if(txTimeOut){
 32196                           
 32197                           ; BSR set to: 1
 32198                           ;incstack = 0
 32199  007C2A  0100               	movlb	0	; () banked
 32200  007C2C  51F3               	movf	_txTimeOut& (0+255),w,b	;volatile
 32201  007C2E  11F4               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 32202  007C30  B4D8               	btfsc	status,2,c
 32203  007C32  D003               	goto	i1l12995
 32204                           
 32205                           ; BSR set to: 0
 32206                           ;../hal/hal_src/Timers.c: 10:         txTimeOut--;
 32207  007C34  07F3               	decf	_txTimeOut& (0+255),f,b	;volatile
 32208  007C36  A0D8               	btfss	status,0,c
 32209  007C38  07F4               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 32210  007C3A                     i1l12995:
 32211                           
 32212                           ; BSR set to: 0
 32213                           ;../hal/hal_src/Timers.c: 12:     if(ATTimeoutTimer){
 32214  007C3A  51FD               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 32215  007C3C  11FE               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 32216  007C3E  B4D8               	btfsc	status,2,c
 32217  007C40  D003               	goto	i1l12999
 32218                           
 32219                           ; BSR set to: 0
 32220                           ;../hal/hal_src/Timers.c: 13:         ATTimeoutTimer--;
 32221  007C42  07FD               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 32222  007C44  A0D8               	btfss	status,0,c
 32223  007C46  07FE               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 32224  007C48                     i1l12999:
 32225                           
 32226                           ; BSR set to: 0
 32227                           ;../hal/hal_src/Timers.c: 15:     if(cadTimeOut){
 32228  007C48  51F5               	movf	_cadTimeOut& (0+255),w,b	;volatile
 32229  007C4A  11F6               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 32230  007C4C  B4D8               	btfsc	status,2,c
 32231  007C4E  D003               	goto	i1l13003
 32232                           
 32233                           ; BSR set to: 0
 32234                           ;../hal/hal_src/Timers.c: 16:         cadTimeOut--;
 32235  007C50  07F5               	decf	_cadTimeOut& (0+255),f,b	;volatile
 32236  007C52  A0D8               	btfss	status,0,c
 32237  007C54  07F6               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 32238  007C56                     i1l13003:
 32239                           
 32240                           ; BSR set to: 0
 32241                           ;../hal/hal_src/Timers.c: 18:     if(_cadBackoffTimer){
 32242  007C56  51F7               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 32243  007C58  11F8               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 32244  007C5A  B4D8               	btfsc	status,2,c
 32245  007C5C  D003               	goto	i1l13007
 32246                           
 32247                           ; BSR set to: 0
 32248                           ;../hal/hal_src/Timers.c: 19:         _cadBackoffTimer--;
 32249  007C5E  07F7               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 32250  007C60  A0D8               	btfss	status,0,c
 32251  007C62  07F8               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 32252  007C64                     i1l13007:
 32253                           
 32254                           ; BSR set to: 0
 32255                           ;../hal/hal_src/Timers.c: 21:     if(ledtimer){
 32256  007C64  0101               	movlb	1	; () banked
 32257  007C66  51DD               	movf	_ledtimer& (0+255),w,b	;volatile
 32258  007C68  11DE               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 32259  007C6A  B4D8               	btfsc	status,2,c
 32260  007C6C  D003               	goto	i1l996
 32261                           
 32262                           ; BSR set to: 1
 32263                           ;../hal/hal_src/Timers.c: 22:         ledtimer--;
 32264  007C6E  07DD               	decf	_ledtimer& (0+255),f,b	;volatile
 32265  007C70  A0D8               	btfss	status,0,c
 32266  007C72  07DE               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 32267  007C74                     i1l996:
 32268                           
 32269                           ; BSR set to: 1
 32270                           ;../hal/hal_src/Timers.c: 24:     halTimerIrqCount++;
 32271  007C74  0100               	movlb	0	; () banked
 32272  007C76  4BE4               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 32273  007C78  2BE5               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 32274                           
 32275                           ; BSR set to: 0
 32276  007C7A  0012               	return		;funcret
 32277  007C7C                     __end_of_Timer0Handler:
 32278                           	opt callstack 0
 32279                           
 32280 ;; *************** function _Default_ISR *****************
 32281 ;; Defined at:
 32282 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 32283 ;; Parameters:    Size  Location     Type
 32284 ;;		None
 32285 ;; Auto vars:     Size  Location     Type
 32286 ;;		None
 32287 ;; Return value:  Size  Location     Type
 32288 ;;                  1    wreg      void 
 32289 ;; Registers used:
 32290 ;;		None
 32291 ;; Tracked objects:
 32292 ;;		On entry : 0/0
 32293 ;;		On exit  : 0/0
 32294 ;;		Unchanged: 0/0
 32295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32300 ;;Total ram usage:        0 bytes
 32301 ;; Hardware stack levels used:    1
 32302 ;; This function calls:
 32303 ;;		Nothing
 32304 ;; This function is called by:
 32305 ;;		Interrupt level 2
 32306 ;; This function uses a non-reentrant model
 32307 ;;
 32308                           
 32309                           	psect	text224
 32310  008D80                     __ptext224:
 32311                           	opt callstack 0
 32312  008D80                     _Default_ISR:
 32313                           	opt callstack 12
 32314                           
 32315                           ; BSR set to: 0
 32316                           ;incstack = 0
 32317  008D80  0011               	retfie		f
 32318  008D82                     __end_of_Default_ISR:
 32319                           	opt callstack 0
 32320                           
 32321 ;; *************** function _UART1_tx_vect_isr *****************
 32322 ;; Defined at:
 32323 ;;		line 247 in file "mcc_generated_files/uart1.c"
 32324 ;; Parameters:    Size  Location     Type
 32325 ;;		None
 32326 ;; Auto vars:     Size  Location     Type
 32327 ;;		None
 32328 ;; Return value:  Size  Location     Type
 32329 ;;                  1    wreg      void 
 32330 ;; Registers used:
 32331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32332 ;; Tracked objects:
 32333 ;;		On entry : 0/0
 32334 ;;		On exit  : 0/0
 32335 ;;		Unchanged: 0/0
 32336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32341 ;;Total ram usage:        0 bytes
 32342 ;; Hardware stack levels used:    1
 32343 ;; Hardware stack levels required when called:    1
 32344 ;; This function calls:
 32345 ;;		Absolute function
 32346 ;;		_UART1_Transmit_ISR
 32347 ;; This function is called by:
 32348 ;;		Interrupt level 2
 32349 ;; This function uses a non-reentrant model
 32350 ;;
 32351                           
 32352                           	psect	text225
 32353  0089AC                     __ptext225:
 32354                           	opt callstack 0
 32355  0089AC                     _UART1_tx_vect_isr:
 32356                           	opt callstack 11
 32357                           
 32358                           ;mcc_generated_files/uart1.c: 249:     if(UART1_TxInterruptHandler)
 32359                           
 32360                           ;incstack = 0
 32361  0089AC  0101               	movlb	1	; () banked
 32362  0089AE  51E9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32363  0089B0  11EA               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32364  0089B2  B4D8               	btfsc	status,2,c
 32365  0089B4  0011               	retfie		f
 32366                           
 32367                           ; BSR set to: 1
 32368                           ;mcc_generated_files/uart1.c: 250:     {;mcc_generated_files/uart1.c: 251:         UART1
      +                          _TxInterruptHandler();
 32369  0089B6  D801               	call	i2u1274_48
 32370  0089B8  0011               	retfie		f
 32371  0089BA                     i2u1274_48:
 32372  0089BA  0005               	push	
 32373  0089BC  6EFA               	movwf	pclath,c
 32374  0089BE  51E9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32375  0089C0  6EFD               	movwf	tosl,c
 32376  0089C2  51EA               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32377  0089C4  6EFE               	movwf	tosh,c
 32378  0089C6  6AFF               	clrf	tosu,c
 32379  0089C8  50FA               	movf	pclath,w,c
 32380  0089CA  0012               	return		;indir
 32381  0089CC                     __end_of_UART1_tx_vect_isr:
 32382                           	opt callstack 0
 32383                           
 32384 ;; *************** function _UART1_Transmit_ISR *****************
 32385 ;; Defined at:
 32386 ;;		line 265 in file "mcc_generated_files/uart1.c"
 32387 ;; Parameters:    Size  Location     Type
 32388 ;;		None
 32389 ;; Auto vars:     Size  Location     Type
 32390 ;;		None
 32391 ;; Return value:  Size  Location     Type
 32392 ;;                  1    wreg      void 
 32393 ;; Registers used:
 32394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32395 ;; Tracked objects:
 32396 ;;		On entry : 3F/1
 32397 ;;		On exit  : 7/1
 32398 ;;		Unchanged: 0/0
 32399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32404 ;;Total ram usage:        0 bytes
 32405 ;; Hardware stack levels used:    1
 32406 ;; This function calls:
 32407 ;;		Nothing
 32408 ;; This function is called by:
 32409 ;;		_UART1_Initialize
 32410 ;;		_UART1_tx_vect_isr
 32411 ;; This function uses a non-reentrant model
 32412 ;;
 32413                           
 32414                           	psect	text226
 32415  0083BC                     __ptext226:
 32416                           	opt callstack 0
 32417  0083BC                     _UART1_Transmit_ISR:
 32418                           	opt callstack 11
 32419                           
 32420                           ; BSR set to: 1
 32421                           ;mcc_generated_files/uart1.c: 268:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 32422                           
 32423                           ;incstack = 0
 32424  0083BC  0E40               	movlw	64
 32425  0083BE  61ED               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 32426  0083C0  D014               	goto	i2l13403
 32427                           
 32428                           ; BSR set to: 1
 32429                           ;mcc_generated_files/uart1.c: 269:     {;mcc_generated_files/uart1.c: 273:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 32430  0083C2  0E00               	movlw	low _uart1TxBuffer
 32431  0083C4  0100               	movlb	0	; () banked
 32432  0083C6  25E8               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 32433  0083C8  6ED9               	movwf	fsr2l,c
 32434  0083CA  6ADA               	clrf	fsr2h,c
 32435  0083CC  0E03               	movlw	high _uart1TxBuffer
 32436  0083CE  22DA               	addwfc	fsr2h,f,c
 32437  0083D0  50DF               	movf	indf2,w,c
 32438  0083D2  013D               	movlb	61	; () banked
 32439  0083D4  6FEA               	movwf	234,b	;volatile
 32440                           
 32441                           ; BSR set to: 61
 32442  0083D6  0100               	movlb	0	; () banked
 32443  0083D8  2BE8               	incf	_uart1TxTail& (0+255),f,b	;volatile
 32444                           
 32445                           ; BSR set to: 0
 32446                           ;mcc_generated_files/uart1.c: 274:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 32447  0083DA  0E3F               	movlw	63
 32448  0083DC  65E8               	cpfsgt	_uart1TxTail& (0+255),b
 32449  0083DE  D002               	goto	i2l13401
 32450                           
 32451                           ; BSR set to: 0
 32452                           ;mcc_generated_files/uart1.c: 275:         {;mcc_generated_files/uart1.c: 276:          
      +                             uart1TxTail = 0;
 32453  0083E0  0E00               	movlw	0
 32454  0083E2  6FE8               	movwf	_uart1TxTail& (0+255),b	;volatile
 32455  0083E4                     i2l13401:
 32456                           
 32457                           ; BSR set to: 0
 32458                           ;mcc_generated_files/uart1.c: 278:         uart1TxBufferRemaining++;
 32459  0083E4  0101               	movlb	1	; () banked
 32460  0083E6  2BED               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 32461                           
 32462                           ;mcc_generated_files/uart1.c: 279:     }
 32463  0083E8  0012               	return	
 32464  0083EA                     i2l13403:
 32465                           
 32466                           ; BSR set to: 1
 32467                           ;mcc_generated_files/uart1.c: 281:     {;mcc_generated_files/uart1.c: 284:         tx_do
      +                          ne = 1;
 32468  0083EA  0E01               	movlw	1
 32469  0083EC  0100               	movlb	0	; () banked
 32470  0083EE  6FF1               	movwf	_tx_done& (0+255),b	;volatile
 32471                           
 32472                           ; BSR set to: 0
 32473                           ;mcc_generated_files/uart1.c: 286:         PIE3bits.U1TXIE = 0;
 32474  0083F0  0139               	movlb	57	; () banked
 32475  0083F2  9993               	bcf	147,4,b	;volatile
 32476  0083F4  0012               	return		;funcret
 32477  0083F6                     __end_of_UART1_Transmit_ISR:
 32478                           	opt callstack 0
 32479                           
 32480 ;; *************** function _UART1_rx_vect_isr *****************
 32481 ;; Defined at:
 32482 ;;		line 255 in file "mcc_generated_files/uart1.c"
 32483 ;; Parameters:    Size  Location     Type
 32484 ;;		None
 32485 ;; Auto vars:     Size  Location     Type
 32486 ;;		None
 32487 ;; Return value:  Size  Location     Type
 32488 ;;                  1    wreg      void 
 32489 ;; Registers used:
 32490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32491 ;; Tracked objects:
 32492 ;;		On entry : 0/0
 32493 ;;		On exit  : 0/0
 32494 ;;		Unchanged: 0/0
 32495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32500 ;;Total ram usage:        0 bytes
 32501 ;; Hardware stack levels used:    1
 32502 ;; Hardware stack levels required when called:    3
 32503 ;; This function calls:
 32504 ;;		Absolute function
 32505 ;;		_UART1_Receive_ISR
 32506 ;; This function is called by:
 32507 ;;		Interrupt level 2
 32508 ;; This function uses a non-reentrant model
 32509 ;;
 32510                           
 32511                           	psect	text227
 32512  0089CC                     __ptext227:
 32513                           	opt callstack 0
 32514  0089CC                     _UART1_rx_vect_isr:
 32515                           	opt callstack 9
 32516                           
 32517                           ;mcc_generated_files/uart1.c: 257:     if(UART1_RxInterruptHandler)
 32518                           
 32519                           ;incstack = 0
 32520  0089CC  0101               	movlb	1	; () banked
 32521  0089CE  51EB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32522  0089D0  11EC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32523  0089D2  B4D8               	btfsc	status,2,c
 32524  0089D4  0011               	retfie		f
 32525                           
 32526                           ; BSR set to: 1
 32527                           ;mcc_generated_files/uart1.c: 258:     {;mcc_generated_files/uart1.c: 259:         UART1
      +                          _RxInterruptHandler();
 32528  0089D6  D801               	call	i2u1276_48
 32529  0089D8  0011               	retfie		f
 32530  0089DA                     i2u1276_48:
 32531  0089DA  0005               	push	
 32532  0089DC  6EFA               	movwf	pclath,c
 32533  0089DE  51EB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 32534  0089E0  6EFD               	movwf	tosl,c
 32535  0089E2  51EC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 32536  0089E4  6EFE               	movwf	tosh,c
 32537  0089E6  6AFF               	clrf	tosu,c
 32538  0089E8  50FA               	movf	pclath,w,c
 32539  0089EA  0012               	return		;indir
 32540  0089EC                     __end_of_UART1_rx_vect_isr:
 32541                           	opt callstack 0
 32542                           
 32543 ;; *************** function _UART1_Receive_ISR *****************
 32544 ;; Defined at:
 32545 ;;		line 292 in file "mcc_generated_files/uart1.c"
 32546 ;; Parameters:    Size  Location     Type
 32547 ;;		None
 32548 ;; Auto vars:     Size  Location     Type
 32549 ;;		None
 32550 ;; Return value:  Size  Location     Type
 32551 ;;                  1    wreg      void 
 32552 ;; Registers used:
 32553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32554 ;; Tracked objects:
 32555 ;;		On entry : 3F/1
 32556 ;;		On exit  : 0/0
 32557 ;;		Unchanged: 0/0
 32558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32563 ;;Total ram usage:        0 bytes
 32564 ;; Hardware stack levels used:    1
 32565 ;; Hardware stack levels required when called:    2
 32566 ;; This function calls:
 32567 ;;		Absolute function
 32568 ;;		_UART1_DefaultErrorHandler
 32569 ;;		_UART1_DefaultFramingErrorHandler
 32570 ;;		_UART1_DefaultOverrunErrorHandler
 32571 ;;		_UART1_RxDataHandler
 32572 ;; This function is called by:
 32573 ;;		_UART1_Initialize
 32574 ;;		_UART1_rx_vect_isr
 32575 ;; This function uses a non-reentrant model
 32576 ;;
 32577                           
 32578                           	psect	text228
 32579  006BCA                     __ptext228:
 32580                           	opt callstack 0
 32581  006BCA                     _UART1_Receive_ISR:
 32582                           	opt callstack 9
 32583                           
 32584                           ; BSR set to: 1
 32585                           ;mcc_generated_files/uart1.c: 295:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 32586                           
 32587                           ;incstack = 0
 32588  006BCA  0E28               	movlw	low _uart1RxStatusBuffer
 32589  006BCC  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32590  006BCE  6ED9               	movwf	fsr2l,c
 32591  006BD0  6ADA               	clrf	fsr2h,c
 32592  006BD2  0E01               	movlw	high _uart1RxStatusBuffer
 32593  006BD4  22DA               	addwfc	fsr2h,f,c
 32594  006BD6  0E00               	movlw	0
 32595  006BD8  6EDF               	movwf	indf2,c
 32596                           
 32597                           ; BSR set to: 1
 32598                           ;mcc_generated_files/uart1.c: 297:     if(U1ERRIRbits.FERIF){
 32599  006BDA  013D               	movlb	61	; () banked
 32600  006BDC  A7F9               	btfss	249,3,b	;volatile
 32601  006BDE  D013               	goto	i2u1268_49
 32602                           
 32603                           ; BSR set to: 61
 32604                           ;mcc_generated_files/uart1.c: 298:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 32605  006BE0  0E28               	movlw	low _uart1RxStatusBuffer
 32606  006BE2  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32607  006BE4  6ED9               	movwf	fsr2l,c
 32608  006BE6  6ADA               	clrf	fsr2h,c
 32609  006BE8  0E01               	movlw	high _uart1RxStatusBuffer
 32610  006BEA  22DA               	addwfc	fsr2h,f,c
 32611  006BEC  0101               	movlb	1	; () banked
 32612  006BEE  82DF               	bsf	indf2,1,c
 32613                           
 32614                           ; BSR set to: 1
 32615                           ;mcc_generated_files/uart1.c: 299:         UART1_FramingErrorHandler();
 32616  006BF0  D801               	call	i2u1268_48
 32617  006BF2  D009               	goto	i2u1268_49
 32618  006BF4                     i2u1268_48:
 32619  006BF4  0005               	push	
 32620  006BF6  6EFA               	movwf	pclath,c
 32621  006BF8  51E3               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 32622  006BFA  6EFD               	movwf	tosl,c
 32623  006BFC  51E4               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 32624  006BFE  6EFE               	movwf	tosh,c
 32625  006C00  6AFF               	clrf	tosu,c
 32626  006C02  50FA               	movf	pclath,w,c
 32627  006C04  0012               	return		;indir
 32628  006C06                     i2u1268_49:
 32629                           
 32630                           ;mcc_generated_files/uart1.c: 302:     if(U1ERRIRbits.RXFOIF){
 32631  006C06  013D               	movlb	61	; () banked
 32632  006C08  A3F9               	btfss	249,1,b	;volatile
 32633  006C0A  D013               	goto	i2u1270_49
 32634                           
 32635                           ; BSR set to: 61
 32636                           ;mcc_generated_files/uart1.c: 303:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 32637  006C0C  0E28               	movlw	low _uart1RxStatusBuffer
 32638  006C0E  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32639  006C10  6ED9               	movwf	fsr2l,c
 32640  006C12  6ADA               	clrf	fsr2h,c
 32641  006C14  0E01               	movlw	high _uart1RxStatusBuffer
 32642  006C16  22DA               	addwfc	fsr2h,f,c
 32643  006C18  0101               	movlb	1	; () banked
 32644  006C1A  84DF               	bsf	indf2,2,c
 32645                           
 32646                           ; BSR set to: 1
 32647                           ;mcc_generated_files/uart1.c: 304:         UART1_OverrunErrorHandler();
 32648  006C1C  D801               	call	i2u1270_48
 32649  006C1E  D009               	goto	i2u1270_49
 32650  006C20                     i2u1270_48:
 32651  006C20  0005               	push	
 32652  006C22  6EFA               	movwf	pclath,c
 32653  006C24  51E1               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 32654  006C26  6EFD               	movwf	tosl,c
 32655  006C28  51E2               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 32656  006C2A  6EFE               	movwf	tosh,c
 32657  006C2C  6AFF               	clrf	tosu,c
 32658  006C2E  50FA               	movf	pclath,w,c
 32659  006C30  0012               	return		;indir
 32660  006C32                     i2u1270_49:
 32661                           
 32662                           ;mcc_generated_files/uart1.c: 307:     if(uart1RxStatusBuffer[uart1RxHead].status){
 32663  006C32  0E28               	movlw	low _uart1RxStatusBuffer
 32664  006C34  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32665  006C36  6ED9               	movwf	fsr2l,c
 32666  006C38  6ADA               	clrf	fsr2h,c
 32667  006C3A  0E01               	movlw	high _uart1RxStatusBuffer
 32668  006C3C  22DA               	addwfc	fsr2h,f,c
 32669  006C3E  50DF               	movf	indf2,w,c
 32670  006C40  B4D8               	btfsc	status,2,c
 32671  006C42  D00C               	goto	i2l13425
 32672                           
 32673                           ;mcc_generated_files/uart1.c: 308:         UART1_ErrorHandler();
 32674  006C44  D801               	call	i2u1272_48
 32675  006C46  0012               	return	
 32676  006C48                     i2u1272_48:
 32677  006C48  0005               	push	
 32678  006C4A  6EFA               	movwf	pclath,c
 32679  006C4C  0101               	movlb	1	; () banked
 32680  006C4E  51DF               	movf	_UART1_ErrorHandler& (0+255),w,b
 32681  006C50  6EFD               	movwf	tosl,c
 32682  006C52  51E0               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 32683  006C54  6EFE               	movwf	tosh,c
 32684  006C56  6AFF               	clrf	tosu,c
 32685  006C58  50FA               	movf	pclath,w,c
 32686  006C5A  0012               	return		;indir
 32687  006C5C                     i2l13425:
 32688                           
 32689                           ;mcc_generated_files/uart1.c: 310:         UART1_RxDataHandler();
 32690  006C5C  EC1B  F044         	call	_UART1_RxDataHandler	;wreg free
 32691  006C60  0012               	return		;funcret
 32692  006C62                     __end_of_UART1_Receive_ISR:
 32693                           	opt callstack 0
 32694                           
 32695 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 32696 ;; Defined at:
 32697 ;;		line 328 in file "mcc_generated_files/uart1.c"
 32698 ;; Parameters:    Size  Location     Type
 32699 ;;		None
 32700 ;; Auto vars:     Size  Location     Type
 32701 ;;		None
 32702 ;; Return value:  Size  Location     Type
 32703 ;;                  1    wreg      void 
 32704 ;; Registers used:
 32705 ;;		None
 32706 ;; Tracked objects:
 32707 ;;		On entry : 3F/1
 32708 ;;		On exit  : 3F/1
 32709 ;;		Unchanged: 3F/0
 32710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32715 ;;Total ram usage:        0 bytes
 32716 ;; Hardware stack levels used:    1
 32717 ;; This function calls:
 32718 ;;		Nothing
 32719 ;; This function is called by:
 32720 ;;		_UART1_Initialize
 32721 ;;		_UART1_Receive_ISR
 32722 ;; This function uses a non-reentrant model
 32723 ;;
 32724                           
 32725                           	psect	text229
 32726  008D82                     __ptext229:
 32727                           	opt callstack 0
 32728  008D82                     _UART1_DefaultOverrunErrorHandler:
 32729                           	opt callstack 10
 32730                           
 32731                           ; BSR set to: 1
 32732                           
 32733                           ;incstack = 0
 32734  008D82  0012               	return		;funcret
 32735  008D84                     __end_of_UART1_DefaultOverrunErrorHandler:
 32736                           	opt callstack 0
 32737                           
 32738 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 32739 ;; Defined at:
 32740 ;;		line 326 in file "mcc_generated_files/uart1.c"
 32741 ;; Parameters:    Size  Location     Type
 32742 ;;		None
 32743 ;; Auto vars:     Size  Location     Type
 32744 ;;		None
 32745 ;; Return value:  Size  Location     Type
 32746 ;;                  1    wreg      void 
 32747 ;; Registers used:
 32748 ;;		None
 32749 ;; Tracked objects:
 32750 ;;		On entry : 3F/1
 32751 ;;		On exit  : 3F/1
 32752 ;;		Unchanged: 3F/0
 32753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32758 ;;Total ram usage:        0 bytes
 32759 ;; Hardware stack levels used:    1
 32760 ;; This function calls:
 32761 ;;		Nothing
 32762 ;; This function is called by:
 32763 ;;		_UART1_Initialize
 32764 ;;		_UART1_Receive_ISR
 32765 ;; This function uses a non-reentrant model
 32766 ;;
 32767                           
 32768                           	psect	text230
 32769  008D84                     __ptext230:
 32770                           	opt callstack 0
 32771  008D84                     _UART1_DefaultFramingErrorHandler:
 32772                           	opt callstack 10
 32773                           
 32774                           ; BSR set to: 1
 32775                           
 32776                           ; BSR set to: 1
 32777                           ;incstack = 0
 32778  008D84  0012               	return		;funcret
 32779  008D86                     __end_of_UART1_DefaultFramingErrorHandler:
 32780                           	opt callstack 0
 32781                           
 32782 ;; *************** function _UART1_DefaultErrorHandler *****************
 32783 ;; Defined at:
 32784 ;;		line 330 in file "mcc_generated_files/uart1.c"
 32785 ;; Parameters:    Size  Location     Type
 32786 ;;		None
 32787 ;; Auto vars:     Size  Location     Type
 32788 ;;		None
 32789 ;; Return value:  Size  Location     Type
 32790 ;;                  1    wreg      void 
 32791 ;; Registers used:
 32792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32793 ;; Tracked objects:
 32794 ;;		On entry : 3F/1
 32795 ;;		On exit  : 3F/0
 32796 ;;		Unchanged: 0/0
 32797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32802 ;;Total ram usage:        0 bytes
 32803 ;; Hardware stack levels used:    1
 32804 ;; Hardware stack levels required when called:    1
 32805 ;; This function calls:
 32806 ;;		_UART1_RxDataHandler
 32807 ;; This function is called by:
 32808 ;;		_UART1_Initialize
 32809 ;;		_UART1_Receive_ISR
 32810 ;; This function uses a non-reentrant model
 32811 ;;
 32812                           
 32813                           	psect	text231
 32814  008D64                     __ptext231:
 32815                           	opt callstack 0
 32816  008D64                     _UART1_DefaultErrorHandler:
 32817                           	opt callstack 9
 32818                           
 32819                           ; BSR set to: 1
 32820                           ;mcc_generated_files/uart1.c: 331:     UART1_RxDataHandler();
 32821                           
 32822                           ; BSR set to: 1
 32823                           ;incstack = 0
 32824  008D64  EC1B  F044         	call	_UART1_RxDataHandler	;wreg free
 32825                           
 32826                           ; BSR set to: 0
 32827  008D68  0012               	return		;funcret
 32828  008D6A                     __end_of_UART1_DefaultErrorHandler:
 32829                           	opt callstack 0
 32830                           
 32831 ;; *************** function _UART1_RxDataHandler *****************
 32832 ;; Defined at:
 32833 ;;		line 316 in file "mcc_generated_files/uart1.c"
 32834 ;; Parameters:    Size  Location     Type
 32835 ;;		None
 32836 ;; Auto vars:     Size  Location     Type
 32837 ;;		None
 32838 ;; Return value:  Size  Location     Type
 32839 ;;                  1    wreg      void 
 32840 ;; Registers used:
 32841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32842 ;; Tracked objects:
 32843 ;;		On entry : 0/3D
 32844 ;;		On exit  : 3F/0
 32845 ;;		Unchanged: 0/0
 32846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32851 ;;Total ram usage:        0 bytes
 32852 ;; Hardware stack levels used:    1
 32853 ;; This function calls:
 32854 ;;		Nothing
 32855 ;; This function is called by:
 32856 ;;		_UART1_Receive_ISR
 32857 ;;		_UART1_DefaultErrorHandler
 32858 ;; This function uses a non-reentrant model
 32859 ;;
 32860                           
 32861                           	psect	text232
 32862  008836                     __ptext232:
 32863                           	opt callstack 0
 32864  008836                     _UART1_RxDataHandler:
 32865                           	opt callstack 10
 32866                           
 32867                           ;mcc_generated_files/uart1.c: 318:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 32868                           
 32869                           ; BSR set to: 0
 32870                           ;incstack = 0
 32871  008836  0E38               	movlw	low _uart1RxBuffer
 32872  008838  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 32873  00883A  6ED9               	movwf	fsr2l,c
 32874  00883C  6ADA               	clrf	fsr2h,c
 32875  00883E  0E01               	movlw	high _uart1RxBuffer
 32876  008840  22DA               	addwfc	fsr2h,f,c
 32877  008842  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 32878  008848  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 32879                           
 32880                           ;mcc_generated_files/uart1.c: 319:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 32881  00884A  0E0F               	movlw	15
 32882  00884C  645E               	cpfsgt	_uart1RxHead^0,c
 32883  00884E  D002               	goto	i2l12335
 32884                           
 32885                           ;mcc_generated_files/uart1.c: 320:     {;mcc_generated_files/uart1.c: 321:         uart1
      +                          RxHead = 0;
 32886  008850  0E00               	movlw	0
 32887  008852  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 32888  008854                     i2l12335:
 32889                           
 32890                           ;mcc_generated_files/uart1.c: 323:     uart1RxCount++;
 32891  008854  0100               	movlb	0	; () banked
 32892  008856  2BE6               	incf	_uart1RxCount& (0+255),f,b	;volatile
 32893                           
 32894                           ; BSR set to: 0
 32895  008858  0012               	return		;funcret
 32896  00885A                     __end_of_UART1_RxDataHandler:
 32897                           	opt callstack 0
 32898                           
 32899                           ;
 32900                           ; Interrupt Vector Table @ 0x8
 32901                           ;
 32902                           
 32903                           	psect	ivt0x8
 32904  000008                     __pivt0x8:
 32905                           	opt callstack 0
 32906  000008                     ivt0x8_base:
 32907                           	opt callstack 0
 32908                           
 32909                           ; Vector 0 : SWINT
 32910  000008  2360               	dw	_Default_ISR shr (0+2)
 32911                           
 32912                           ; Vector 1 : HLVD
 32913  00000A  2360               	dw	_Default_ISR shr (0+2)
 32914                           
 32915                           ; Vector 2 : OSF
 32916  00000C  2360               	dw	_Default_ISR shr (0+2)
 32917                           
 32918                           ; Vector 3 : CSW
 32919  00000E  2360               	dw	_Default_ISR shr (0+2)
 32920                           
 32921                           ; Vector 4 : NVM
 32922  000010  2360               	dw	_Default_ISR shr (0+2)
 32923                           
 32924                           ; Vector 5 : SCAN
 32925  000012  2360               	dw	_Default_ISR shr (0+2)
 32926                           
 32927                           ; Vector 6 : CRC
 32928  000014  2360               	dw	_Default_ISR shr (0+2)
 32929                           
 32930                           ; Vector 7 : IOC
 32931  000016  2360               	dw	_Default_ISR shr (0+2)
 32932                           
 32933                           ; Vector 8 : INT0
 32934  000018  2360               	dw	_Default_ISR shr (0+2)
 32935                           
 32936                           ; Vector 9 : ZCD
 32937  00001A  2360               	dw	_Default_ISR shr (0+2)
 32938                           
 32939                           ; Vector 10 : AD
 32940  00001C  2360               	dw	_Default_ISR shr (0+2)
 32941                           
 32942                           ; Vector 11 : ADT
 32943  00001E  2360               	dw	_Default_ISR shr (0+2)
 32944                           
 32945                           ; Vector 12 : CMP1
 32946  000020  2360               	dw	_Default_ISR shr (0+2)
 32947                           
 32948                           ; Vector 13 : SMT1
 32949  000022  2360               	dw	_Default_ISR shr (0+2)
 32950                           
 32951                           ; Vector 14 : SMT1PRA
 32952  000024  2360               	dw	_Default_ISR shr (0+2)
 32953                           
 32954                           ; Vector 15 : SMT1PRW
 32955  000026  2360               	dw	_Default_ISR shr (0+2)
 32956                           
 32957                           ; Vector 16 : DMA1SCNT
 32958  000028  2360               	dw	_Default_ISR shr (0+2)
 32959                           
 32960                           ; Vector 17 : DMA1DCNT
 32961  00002A  2360               	dw	_Default_ISR shr (0+2)
 32962                           
 32963                           ; Vector 18 : DMA1OR
 32964  00002C  2360               	dw	_Default_ISR shr (0+2)
 32965                           
 32966                           ; Vector 19 : DMA1A
 32967  00002E  2360               	dw	_Default_ISR shr (0+2)
 32968                           
 32969                           ; Vector 20 : SPI1RX
 32970  000030  2360               	dw	_Default_ISR shr (0+2)
 32971                           
 32972                           ; Vector 21 : SPI1TX
 32973  000032  2360               	dw	_Default_ISR shr (0+2)
 32974                           
 32975                           ; Vector 22 : SPI1
 32976  000034  2360               	dw	_Default_ISR shr (0+2)
 32977                           
 32978                           ; Vector 23 : I2C1RX
 32979  000036  2360               	dw	_Default_ISR shr (0+2)
 32980                           
 32981                           ; Vector 24 : I2C1TX
 32982  000038  2360               	dw	_Default_ISR shr (0+2)
 32983                           
 32984                           ; Vector 25 : I2C1
 32985  00003A  2360               	dw	_Default_ISR shr (0+2)
 32986                           
 32987                           ; Vector 26 : I2C1E
 32988  00003C  2360               	dw	_Default_ISR shr (0+2)
 32989                           
 32990                           ; Vector 27 : U1RX
 32991  00003E  2273               	dw	_UART1_rx_vect_isr shr (0+2)
 32992                           
 32993                           ; Vector 28 : U1TX
 32994  000040  226B               	dw	_UART1_tx_vect_isr shr (0+2)
 32995                           
 32996                           ; Vector 29 : U1E
 32997  000042  2360               	dw	_Default_ISR shr (0+2)
 32998                           
 32999                           ; Vector 30 : U1
 33000  000044  2360               	dw	_Default_ISR shr (0+2)
 33001                           
 33002                           ; Vector 31 : TMR0
 33003  000046  224A               	dw	_TMR0_ISR shr (0+2)
 33004                           
 33005                           ; Vector 32 : TMR1
 33006  000048  2360               	dw	_Default_ISR shr (0+2)
 33007                           
 33008                           ; Vector 33 : TMR1G
 33009  00004A  2360               	dw	_Default_ISR shr (0+2)
 33010                           
 33011                           ; Vector 34 : TMR2
 33012  00004C  2360               	dw	_Default_ISR shr (0+2)
 33013                           
 33014                           ; Vector 35 : CCP1
 33015  00004E  2360               	dw	_Default_ISR shr (0+2)
 33016                           
 33017                           ; Vector 36 : Undefined
 33018  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33019                           
 33020                           ; Vector 37 : NCO1
 33021  000052  2360               	dw	_Default_ISR shr (0+2)
 33022                           
 33023                           ; Vector 38 : CWG1
 33024  000054  2360               	dw	_Default_ISR shr (0+2)
 33025                           
 33026                           ; Vector 39 : CLC1
 33027  000056  2360               	dw	_Default_ISR shr (0+2)
 33028                           
 33029                           ; Vector 40 : INT1
 33030  000058  2360               	dw	_Default_ISR shr (0+2)
 33031                           
 33032                           ; Vector 41 : CMP2
 33033  00005A  2360               	dw	_Default_ISR shr (0+2)
 33034                           
 33035                           ; Vector 42 : DMA2SCNT
 33036  00005C  2360               	dw	_Default_ISR shr (0+2)
 33037                           
 33038                           ; Vector 43 : DMA2DCNT
 33039  00005E  2360               	dw	_Default_ISR shr (0+2)
 33040                           
 33041                           ; Vector 44 : DMA2OR
 33042  000060  2360               	dw	_Default_ISR shr (0+2)
 33043                           
 33044                           ; Vector 45 : DMA2A
 33045  000062  2360               	dw	_Default_ISR shr (0+2)
 33046                           
 33047                           ; Vector 46 : I2C2RX
 33048  000064  2360               	dw	_Default_ISR shr (0+2)
 33049                           
 33050                           ; Vector 47 : I2C2TX
 33051  000066  2360               	dw	_Default_ISR shr (0+2)
 33052                           
 33053                           ; Vector 48 : I2C2
 33054  000068  2360               	dw	_Default_ISR shr (0+2)
 33055                           
 33056                           ; Vector 49 : I2C2E
 33057  00006A  2360               	dw	_Default_ISR shr (0+2)
 33058                           
 33059                           ; Vector 50 : U2RX
 33060  00006C  2360               	dw	_Default_ISR shr (0+2)
 33061                           
 33062                           ; Vector 51 : U2TX
 33063  00006E  2360               	dw	_Default_ISR shr (0+2)
 33064                           
 33065                           ; Vector 52 : U2E
 33066  000070  2360               	dw	_Default_ISR shr (0+2)
 33067                           
 33068                           ; Vector 53 : U2
 33069  000072  2360               	dw	_Default_ISR shr (0+2)
 33070                           
 33071                           ; Vector 54 : TMR3
 33072  000074  2360               	dw	_Default_ISR shr (0+2)
 33073                           
 33074                           ; Vector 55 : TMR3G
 33075  000076  2360               	dw	_Default_ISR shr (0+2)
 33076                           
 33077                           ; Vector 56 : TMR4
 33078  000078  2360               	dw	_Default_ISR shr (0+2)
 33079                           
 33080                           ; Vector 57 : CCP2
 33081  00007A  2360               	dw	_Default_ISR shr (0+2)
 33082                           
 33083                           ; Vector 58 : Undefined
 33084  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 33085                           
 33086                           ; Vector 59 : CWG2
 33087  00007E  2360               	dw	_Default_ISR shr (0+2)
 33088                           
 33089                           ; Vector 60 : CLC2
 33090  000080  2360               	dw	_Default_ISR shr (0+2)
 33091                           
 33092                           ; Vector 61 : INT2
 33093  000082  2360               	dw	_Default_ISR shr (0+2)
 33094                           
 33095                           ; Vector 62 : Undefined
 33096  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 33097                           
 33098                           ; Vector 63 : Undefined
 33099  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 33100                           
 33101                           ; Vector 64 : Undefined
 33102  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 33103                           
 33104                           ; Vector 65 : Undefined
 33105  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 33106                           
 33107                           ; Vector 66 : Undefined
 33108  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 33109                           
 33110                           ; Vector 67 : Undefined
 33111  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 33112                           
 33113                           ; Vector 68 : Undefined
 33114  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 33115                           
 33116                           ; Vector 69 : Undefined
 33117  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 33118                           
 33119                           ; Vector 70 : TMR5
 33120  000094  2360               	dw	_Default_ISR shr (0+2)
 33121                           
 33122                           ; Vector 71 : TMR5G
 33123  000096  2360               	dw	_Default_ISR shr (0+2)
 33124                           
 33125                           ; Vector 72 : TMR6
 33126  000098  2360               	dw	_Default_ISR shr (0+2)
 33127                           
 33128                           ; Vector 73 : CCP3
 33129  00009A  2360               	dw	_Default_ISR shr (0+2)
 33130                           
 33131                           ; Vector 74 : CWG3
 33132  00009C  2360               	dw	_Default_ISR shr (0+2)
 33133                           
 33134                           ; Vector 75 : CLC3
 33135  00009E  2360               	dw	_Default_ISR shr (0+2)
 33136                           
 33137                           ; Vector 76 : Undefined
 33138  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 33139                           
 33140                           ; Vector 77 : Undefined
 33141  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 33142                           
 33143                           ; Vector 78 : Undefined
 33144  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 33145                           
 33146                           ; Vector 79 : Undefined
 33147  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 33148                           
 33149                           ; Vector 80 : CCP4
 33150  0000A8  2360               	dw	_Default_ISR shr (0+2)
 33151                           
 33152                           ; Vector 81 : CLC4
 33153  0000AA  2360               	dw	_Default_ISR shr (0+2)
 33154  0000AC                     ivt0x8_undefint:
 33155                           	opt callstack 0
 33156  0000AC  00FF               	reset	
 33157                           
 33158                           	psect	text233
 33159  000000                     __ptext233:
 33160                           	opt callstack 0
 33161                           
 33162                           	psect	rparam
 33163  0000                     tosu	equ	0x3FFF
 33164                           tosh	equ	0x3FFE
 33165                           tosl	equ	0x3FFD
 33166                           stkptr	equ	0x3FFC
 33167                           pclatu	equ	0x3FFB
 33168                           pclath	equ	0x3FFA
 33169                           pcl	equ	0x3FF9
 33170                           tblptru	equ	0x3FF8
 33171                           tblptrh	equ	0x3FF7
 33172                           tblptrl	equ	0x3FF6
 33173                           tablat	equ	0x3FF5
 33174                           prodh	equ	0x3FF4
 33175                           prodl	equ	0x3FF3
 33176                           indf0	equ	0x3FEF
 33177                           postinc0	equ	0x3FEE
 33178                           postdec0	equ	0x3FED
 33179                           preinc0	equ	0x3FEC
 33180                           plusw0	equ	0x3FEB
 33181                           fsr0h	equ	0x3FEA
 33182                           fsr0l	equ	0x3FE9
 33183                           wreg	equ	0x3FE8
 33184                           indf1	equ	0x3FE7
 33185                           postinc1	equ	0x3FE6
 33186                           postdec1	equ	0x3FE5
 33187                           preinc1	equ	0x3FE4
 33188                           plusw1	equ	0x3FE3
 33189                           fsr1h	equ	0x3FE2
 33190                           fsr1l	equ	0x3FE1
 33191                           bsr	equ	0x3FE0
 33192                           indf2	equ	0x3FDF
 33193                           postinc2	equ	0x3FDE
 33194                           postdec2	equ	0x3FDD
 33195                           preinc2	equ	0x3FDC
 33196                           plusw2	equ	0x3FDB
 33197                           fsr2h	equ	0x3FDA
 33198                           fsr2l	equ	0x3FD9
 33199                           status	equ	0x3FD8


Data Sizes:
    Strings     552
    Constant    270
    Data        30
    BSS         2193
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    122     159
    BANK1           256      4     256
    BANK2           256      0     212
    BANK3           256      0     242
    BANK4           256      0      96
    BANK5           256      0     189
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    handler$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    S4569$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    S84$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S2743$4$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    cmdSetTX@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdGetRxCnt@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetRFCH@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetNaddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    set_hop_table_ttl@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetTTL@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAES@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    print_hop_table@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSendSink@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), 
		 -> cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), cmdSend@p2(BANK0[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtoul@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), 
		 -> cmdSend@p2(BANK0[2]), 

    strtoul@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_129(CODE[10]), STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), 
		 -> STR_121(CODE[7]), STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), 
		 -> STR_113(CODE[6]), STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), 
		 -> STR_105(CODE[7]), STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), 
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), 
		 -> STR_89(CODE[15]), STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), 
		 -> STR_81(CODE[7]), STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), 
		 -> STR_73(CODE[11]), STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), 
		 -> STR_65(CODE[9]), STR_63(CODE[7]), STR_57(CODE[2]), STR_51(CODE[6]), 
		 -> STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), STR_38(CODE[2]), 
		 -> STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), STR_16(CODE[2]), 
		 -> STR_12(CODE[2]), STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_129(CODE[10]), 
		 -> STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), STR_121(CODE[7]), 
		 -> STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), STR_113(CODE[6]), 
		 -> STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), STR_105(CODE[7]), 
		 -> STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), STR_89(CODE[15]), 
		 -> STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), STR_81(CODE[7]), 
		 -> STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), STR_73(CODE[11]), 
		 -> STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), STR_65(CODE[9]), 
		 -> STR_63(CODE[7]), STR_57(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_51(CODE[6]), STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), 
		 -> STR_38(CODE[2]), STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), 
		 -> STR_16(CODE[2]), STR_12(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_129(CODE[10]), 
		 -> STR_127(CODE[10]), STR_125(CODE[6]), STR_123(CODE[6]), STR_121(CODE[7]), 
		 -> STR_119(CODE[5]), STR_117(CODE[7]), STR_115(CODE[7]), STR_113(CODE[6]), 
		 -> STR_111(CODE[9]), STR_109(CODE[8]), STR_107(CODE[8]), STR_105(CODE[7]), 
		 -> STR_103(CODE[6]), STR_101(CODE[3]), STR_99(CODE[9]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[10]), STR_91(CODE[10]), STR_89(CODE[15]), 
		 -> STR_87(CODE[13]), STR_85(CODE[9]), STR_83(CODE[7]), STR_81(CODE[7]), 
		 -> STR_79(CODE[10]), STR_77(CODE[7]), STR_75(CODE[8]), STR_73(CODE[11]), 
		 -> STR_71(CODE[5]), STR_69(CODE[5]), STR_67(CODE[7]), STR_65(CODE[9]), 
		 -> STR_63(CODE[7]), STR_57(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_51(CODE[6]), STR_49(CODE[6]), STR_47(CODE[5]), STR_43(CODE[2]), 
		 -> STR_38(CODE[2]), STR_34(CODE[2]), STR_25(CODE[2]), STR_22(CODE[2]), 
		 -> STR_16(CODE[2]), STR_12(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 
		 -> STR_7(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), appDataInd@data(BANK0[65]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S7756_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetAES@AESstr(BANK0[32]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_135(CODE[5]), STR_134(CODE[8]), STR_133(CODE[28]), STR_132(CODE[26]), 
		 -> STR_131(CODE[12]), STR_130(CODE[12]), STR_61(CODE[5]), STR_60(CODE[12]), 
		 -> STR_59(CODE[5]), STR_58(CODE[12]), STR_56(CODE[8]), STR_53(CODE[5]), 
		 -> STR_52(CODE[12]), STR_45(CODE[5]), STR_44(CODE[12]), STR_42(CODE[13]), 
		 -> STR_41(CODE[5]), STR_40(CODE[12]), STR_39(CODE[12]), STR_37(CODE[14]), 
		 -> STR_36(CODE[5]), STR_35(CODE[12]), STR_33(CODE[13]), STR_32(CODE[18]), 
		 -> STR_31(CODE[18]), STR_30(CODE[5]), STR_29(CODE[21]), STR_28(CODE[5]), 
		 -> STR_27(CODE[12]), STR_26(CODE[12]), STR_24(CODE[12]), STR_23(CODE[12]), 
		 -> STR_21(CODE[5]), STR_20(CODE[3]), STR_19(CODE[5]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_15(CODE[13]), STR_14(CODE[12]), STR_13(CODE[5]), 
		 -> STR_11(CODE[16]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), appDataInd@data(BANK0[65]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), appDataInd@data(BANK0[65]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), appDataInd@data(BANK0[65]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    nwkFrame@nwkFramePayloadSize@frame_7056...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_7056.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6632...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6632.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5548...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5548.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5326...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5326.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S4601PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(1) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S4569SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S4569SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4705	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4470...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4470.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3915...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3915.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3491...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3491.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkFrame@nwkFramePayloadSize@frame_3045...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3045.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appDataInd(), 

    S2743NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkFrame@nwkFramePayloadSize@frame_2841...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2841.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK1[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    get_timer0base@timer	PTR unsigned short  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK1[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    nwkFrame@nwkFramePayloadSize@frame_1621...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_1621.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    nwkFrame@nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    crc16_app@dptr	PTR void  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@val	PTR void  size(1) Largest target is 3
		 -> queueLedEvent@temp(COMRAM[3]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    S891$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), 

    executeATCommand@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetSF@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetBaud@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetBaud@ptr	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetParity@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetCADRSSI@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetTX@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetTX@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetRFCH@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetRFCH@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAES@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetAES@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetNaddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdBcast@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdBcast@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_55(CODE[2]), STR_54(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 
		 -> tx_buffer(BIGRAM[524]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSend@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_55(CODE[2]), STR_54(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    free_tx_buffer@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer.payload(BIGRAM[109]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    get_free_tx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> cmdBcast@buf_id(BANK0[1]), cmdSend@buf_id(BANK0[1]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@data(BANK0[65]), 

    S173NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK0[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S115NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    S115NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    S84$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S83NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _queue_serial_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _CircularBufferPushBack->_memcpy
    _executeATCommand->_printf
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _setSyncWord->_SX1276Write
    _cmdSetCADRSSI->_printf
    _strtol->___strtoxl
    _cmdSetBaud->_strtoul
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _strtoul->___strtoxl
    ___strtoxl->_toupper
    _cmdRstCAD->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _strstr->_strncmp
    _cmdAddr->_printf
    _bootLoadApplication->_PHY_SetChannel
    _loadMACAddr->_DIA_ReadByte
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_DIO0_Receive_ISR
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_get_lqi
    _get_lqi->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _PHY_DataInd->_memcpy
    _PHY_DataInd->_nwkFrameAlloc
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxSendAck->_nwkTxFrame
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appDataInd->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _memcpy->___wmul
    _nwkDataReqConfirm->_appDataConf
    _appDataConf->_free_tx_buffer
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _processATCommand->_executeATCommand
    _executeATCommand->_cmdSetAES
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxIndicateFrame->_appDataInd
    _vfprintf->_vfpfcnvrt

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _NWK_TaskHandler->_nwkRxTaskHandler

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 2272252
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                _bootLoadApplication
                   _processATCommand
 ---------------------------------------------------------------------------------
 (1) _processATCommand                                     4     4      0 1846899
                                             73 BANK0      4     4      0
                         _UART1_Read
                  _UART1_is_rx_ready
                   _executeATCommand
                     _get_timer0base
                             _memset
             _queue_serial_led_event
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _queue_serial_led_event                               1     1      0    9491
                                             33 COMRAM     1     1      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        6     4      2    9423
                                             27 COMRAM     6     4      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     363
                                              9 COMRAM     4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     197
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                               9     6      3    6724
                                             18 COMRAM     9     6      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _executeATCommand                                     5     3      2 1832353
                                             68 BANK0      5     3      2
                            _cmdAddr
                           _cmdBcast
                        _cmdBootLoad
                          _cmdGetCAD
                      _cmdGetCADRSSI
                         _cmdGetMode
                         _cmdGetRFCH
                        _cmdGetRxCnt
                           _cmdGetSF
                          _cmdGetTTL
                           _cmdGetTX
                               _cmdI
                             _cmdMac
                           _cmdNaddr
                            _cmdRecv
                           _cmdReset
                          _cmdRstCAD
                            _cmdSend
                        _cmdSendSink
                          _cmdSetAES
                         _cmdSetAddr
                         _cmdSetBaud
                      _cmdSetCADRSSI
                        _cmdSetNaddr
                       _cmdSetParity
                         _cmdSetRFCH
                           _cmdSetSF
                         _cmdSetSink
                          _cmdSetTTL
                           _cmdSetTX
                    _print_hop_table
                             _printf
                  _set_hop_table_ttl
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _set_hop_table_ttl                                    2     0      2   42647
                                             22 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _print_hop_table                                      2     0      2   42647
                                             22 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetTX                                            10     8      2  161116
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _memset
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetTTL                                            2     0      2     208
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetSink                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetSF                                            10     8      2  156613
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _cmdSetRFCH                                          10     8      2  158080
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetParity                                         2     0      2   55496
                                             22 BANK0      2     0      2
                             _printf
                         _set_parity
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _cmdSetNaddr                                          7     5      2  158032
                                             22 BANK0      7     5      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _printf
                        _setSyncWord
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _setSyncWord                                          1     1      0    4921
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _cmdSetCADRSSI                                       10     8      2  156582
                                             22 BANK0     10     8      2
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               4     0      4    5600
                                             51 COMRAM     4     0      4
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) _cmdSetBaud                                           5     3      2    9654
                                             57 COMRAM     5     3      2
                             _strtok
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2316
                                             14 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4     891
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4     891
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _cmdSetAddr                                           8     6      2   62670
                                             22 BANK0      8     6      2
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetAES                                           46    44      2   75313
                                             22 BANK0     46    44      2
          _DATAEE_WriteByte_Platform
                             _memcpy
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSendSink                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSend                                             16    14      2   72956
                                             22 BANK0     16    14      2
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtoul                                              6     0      6    7160
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    4883
                                             15 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     422
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _cmdRstCAD                                            0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdReset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdRecv                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdNaddr                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdMac                                               2     2      0   42642
                                             22 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdI                                                 0     0      0   42543
                           _sendInfo
 ---------------------------------------------------------------------------------
 (4) _sendInfo                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTX                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTTL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdGetSF                                             0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRxCnt                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdGetRFCH                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetMode                                           0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCADRSSI                                        0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCAD                                            0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBootLoad                                          2     2      0   48505
                                             22 BANK0      2     2      0
          _DATAEE_WriteByte_Platform
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBcast                                            10     8      2   65562
                                             22 BANK0      7     5      2
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4   12668
                                             12 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     492
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     622
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _get_free_tx_buffer                                   2     1      1     288
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _NWK_DataReq                                          2     0      2     332
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdAddr                                              0     0      0   42543
                             _printf
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                  6     6      0   36485
                                             47 COMRAM     6     6      0
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                     _PHY_SetChannel
                     _PHY_SetRxState
                          _crc16_app
                        _loadMACAddr
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_parity                                           3     3      0      88
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                          1     1      0     247
                                              5 COMRAM     1     1      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     157
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6     836
                                             18 COMRAM    12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     387
                                              8 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     183
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   17013
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    7368
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte_Platform                            3     0      3    5962
                                              5 COMRAM     3     0      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             5     3      2    3556
                                              5 COMRAM     5     3      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1514
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     312
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  302563
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    8904
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2787
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2954
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    2026
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  161789
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  161789
                                             74 COMRAM     2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   18062
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0    9798
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (2) _set_timer0base                                       4     0      4    1270
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _get_timer0base                                       4     2      2     773
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   38925
                                             67 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _get_lqi
                           _get_rssi
                            _receive
 ---------------------------------------------------------------------------------
 (5) _get_rssi                                             3     3      0      68
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _get_lqi                                              1     1      0    5837
                                             66 COMRAM     1     1      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     318
                                             56 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1797
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2466
                                             40 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          6     5      1    8524
                                             18 COMRAM     6     5      1
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0  131870
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   23080
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    2031
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     840
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   16593
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    4899
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   94577
                                              0 BANK1      4     4      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   18523
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2    9171
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    5012
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1828
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     908
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     234
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    2513
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     424
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2   59575
                                            117 BANK0      5     3      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    8122
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2   51055
                                             91 BANK0     26    24      2
                         _appDataInd *
                _nwkRxServiceDataInd *
        nwkFrame@nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (6) nwkFrame@nwkFramePayloadSize                          4     2      2     197
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  5     4      1    3575
                                             22 BANK0      5     4      1
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     7     6      1    1076
                                              7 COMRAM     7     6      1
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     684
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                4     3      1    2298
                                             12 COMRAM     4     3      1
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    2067
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                          69    68      1   45789
                                             22 BANK0     69    68      1
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                               9     3      6   42543
                                             84 COMRAM     9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5   37446
                                             77 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           42    38      4   36841
                                             69 COMRAM     8     4      4
                                              0 BANK0     22    22      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    9037
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     672
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     323
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    8141
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     440
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     449
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _stoa                                                20    17      3    3900
                                             12 COMRAM    20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    9009
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    6645
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2    1254
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    2329
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1773
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      93
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (12) _UART1_Write                                         1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     197
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     641
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     653
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2727
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     391
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     427
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1332
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   15156
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    8361
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     301
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     447
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   14213
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2   13498
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    4165
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     512
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     512
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2614
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1766
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1223
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     338
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    3143
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2889
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    4840
                                              7 COMRAM    11     5      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     554
                                              8 COMRAM     6     4      2
                        _appDataConf *
 ---------------------------------------------------------------------------------
 (5) _appDataConf                                          2     0      2     287
                                              6 COMRAM     2     0      2
                     _free_tx_buffer
 ---------------------------------------------------------------------------------
 (6) _free_tx_buffer                                       5     3      2     179
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0   85243
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0   84575
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0   84575
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     111
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    4990
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0   10033
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   13374
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4    1127
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4    1161
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1212
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1784
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5033
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setFrequency                                        12     8      4    7346
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    6159
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0   17013
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (6) _implicitHeaderMode                                   0     0      0    6026
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _explicitHeaderMode                                   0     0      0    6026
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    6026
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    4899
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    4     2      2     864
                                              8 COMRAM     3     1      2
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     446
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SX1276Read                                           2     2      0    1127
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (8) _SX1276ReadBuffer                                     5     2      3    1028
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (9) _SPI1_ReadBlock                                       6     2      4     329
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2398
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     515
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1586
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     668
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     321
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     862
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      92
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (17) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (18) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (20) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (21) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
           _appDataConf *
             _free_tx_buffer
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
               _memset
               _printf
                 _vfprintf
                   _vfpfcnvrt
                     _atoi
                       ___wmul
                       _isdigit
                       _isspace
                     _dtoa
                       ___aodiv
                       ___aomod
                       _abs
                         ___aomod (ARG)
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _fputc
                       _putch
                         _UART1_Write
                     _isdigit
                     _stoa
                       _fputc
                         _putch
                           _UART1_Write
                       _strlen
                     _utoa
                       ___lodiv
                       ___lomod
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                     _xtoa
                       _isalpha
                       _isupper
                       _pad
                         _fputc
                           _putch
                             _UART1_Write
                         _fputs
                           _fputc
                             _putch
                               _UART1_Write
                         _strlen
                       _toupper
                         _islower
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
             nwkFrame@nwkFramePayloadSize *
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_lqi
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
           _get_rssi
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _bootLoadApplication
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _loadMACAddr
       _DIA_ReadByte
     _set_parity
     _set_uart_baud
   _processATCommand
     _UART1_Read
     _UART1_is_rx_ready
     _executeATCommand
       _cmdAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdBcast
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdBootLoad
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCADRSSI
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetMode
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRFCH
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRxCnt
       _cmdGetSF
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetTTL
       _cmdGetTX
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdI
         _sendInfo
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _stoa
                   _fputc
                     _putch
                       _UART1_Write
                   _strlen
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
       _cmdMac
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdNaddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdRecv
       _cmdReset
       _cmdRstCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSend
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSendSink
       _cmdSetAES
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetBaud
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetCADRSSI
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetNaddr
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _setSyncWord
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetParity
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _set_parity
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdSetRFCH
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSF
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSink
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSetTTL
       _cmdSetTX
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _print_hop_table
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _UART1_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
       _set_hop_table_ttl
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _UART1_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _strstr
         _strchr
         _strlen
         _strncmp
     _get_timer0base
     _memset
     _queue_serial_led_event
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _set_timer0base

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     4B9      37       29.5%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      BD      15       73.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      60      13       37.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F2      11       94.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4E0      32        0.0%
DATA                 0      0     999       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 09 20:27:00 2020

                         cmdSetNaddr@tempaddr 007C                nwkRouteFrameReceived@discovery 0011  
                           _SPI1_ExchangeByte 8AE8                                    _RSSITarget 00F9  
                              _setCodingRate4 850A                            _commandByteCounter 00F0  
                                 __CFG_CP$OFF 000000                            ?_SPI1_ExchangeByte 0001  
                     bootLoadApplication@temp 0033                           ___wmul@multiplicand 0004  
                            ??_PHY_SetRxState 0012                             ??_PHY_TaskHandler 004D  
              __end_of_nwkRouteNormalizeRanks 83BC                                _SYS_TimerStart 8778  
                     ??_nwkDataReqTaskHandler 0031                      __size_of_start_radio_cad 0010  
                                 __CFG_LVP$ON 000000                       ?_nwkTxDelayTimerHandler 0012  
                  __size_of_set_hop_table_ttl 000E                                           l206 771E  
                                         l329 6A68                                           l338 58D8  
                                         l355 8D6C                                           l348 6876  
                                         l606 7178                                           l379 67C8  
                                         _GIE 01FE97                      __end_of_DIO0_Receive_ISR 6CF8  
                                         _SNR 0167                            _CircularBufferSize 78B0  
                        __end_of_cmdSetParity 6F30                                           _cad 62EC  
                                         _abs 81A2                                           _pad 652A  
                                ?_loadMACAddr 0001                             _NWK_GroupIsMember 8646  
                          nwkRouteFrame@frame 0033                               nwkRxSendAck@ack 002E  
                     __size_of_PMD_Initialize 0022                           ??_SPI1_ExchangeByte 0002  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                                   get_lqi@rssi 0043  
                    nwkDataReqSendFrame@frame 002F                                  ___flmul@aexp 001D  
                                ___flmul@bexp 0022                          _FirmwareVersionMajor FDD4  
                    _DATAEE_ReadByte_Platform 555C                            _UART1_Transmit_ISR 83BC  
                        _FirmwareVersionMinor FDD3                                  ___flmul@sign 001C  
                                ___flmul@temp 0027                                  ___flmul@prod 0023  
                               __CFG_BBEN$OFF 000000                            ?_NWK_GroupIsMember 0002  
                              ?_queueLedEvent 001C                              _SX1276ReadBuffer 87A0  
                       __end_of_SYS_TimerInit 8D24                         queueLedEvent@LEDState 001E  
                                 ?_SX1276Read 0001                               PHY_DataReq@data 0011  
                                __CFG_ZCD$OFF 000000                        NWK_GroupIsMember@group 0002  
                         ?_CircularBufferSize 0002                               ?_get_timer0base 0002  
                                ___fltol@exp1 0042                                          ?_cad 0001  
                                        l1040 8AF6                                          ?_abs 0014  
                             nwkTxFrame@frame 0024                                          l1180 8056  
                                        l2126 1A14                                          l3112 2CF0  
                                        l1600 5E54                                          l2313 6DDE  
                                        l3114 2CFC                                          l3053 6566  
                                        l3223 702A                                          l3127 235C  
                                        l3064 2112                                          l4032 7C1C  
                                        l2184 6064                                          l3129 2368  
                                        l4017 5B8E                                          l3066 211E  
                                        l1395 7F76                                          l2293 3C5A  
                                        l3093 4624                                          l2615 86F8  
                                        l1591 7AC4                                          l1592 7AAC  
                                        l1913 7E44                                          l2641 4BF6  
                                        l2571 81FE                                          l4084 0D62  
                                        l3461 5F84                                          l1933 37AA  
                                        l4077 0D2C                                          l4078 0D5A  
                                        l1775 1F74                                          l3616 749A  
                                        l3634 5A8E                                          l3810 13A4  
                             PHY_DataReq@size 0013                                          l3644 64F8  
                                        l3820 15D0                                          l3741 1C4C  
                                        l3725 1B7A                                          l3902 403C  
                                        l3750 1CB4                                          l3726 1B58  
                                        ?_pad 0014                                          l3751 1CB0  
                                        l3851 4098                                          l3827 166A  
                                        l3819 15D4                                          l3871 81D2  
                                        l3858 411E                                          l9481 8564  
                        nwkDataReqConfirm@req 0009                                          l9477 854E  
                                        l9911 7D10                          _SYS_TimerTaskHandler 4F34  
                                        l9905 7CD2                                          l9913 7D12  
                                        STR_1 FE8D                                          STR_2 FF66  
                                        STR_3 FFDF                                          STR_4 FECC  
                                        STR_5 FECC                                          STR_6 FED0  
                                        STR_7 FFDF                                          STR_8 FECC  
                                        STR_9 FECC                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                  __end_of_explicitHeaderMode 8B4C                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u8300 1B2C  
                                        u8310 1B3C                                          u9030 70F6  
                                        u8320 1B3E                                          u9050 7140  
                                        u8500 1CAA                                          u9037 70E8  
                                        u8190 6FEC                                          u8350 1B82  
                                        u9057 7132                                          u5885 80DC  
                                        u5886 80DE                                          u8710 15CA  
                                        u9095 8064                                          u8560 1D16  
                                        u8480 1C94                                          u9096 8066  
                                        u8910 7468                                          u8750 1636  
                                        u8670 13B0                                          u8830 6166  
                                        u8760 1654                                          u8840 619E  
                                        u9720 4E7E                                          u9810 7842  
                                        u8845 6194                                          u9727 4E70  
                                        u8880 61F4                                          u9760 4EEA  
                                        u9770 4F14                                          u9765 4EE4  
                                        u8990 415A                                          u9790 77E2  
                                        u9767 4ED6                                          u9777 4F06  
                           ?_PHY_SetShortAddr 0002                                          _RSSI 0169  
                  _nwkRouteFrameReceived$4119 0012                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUE 003A81                           _CircularBufferSpace 849E  
                            PHY_DataInd@frame 0017                                 __CFG_FCMEN$ON 000000  
                         ?_UART1_Transmit_ISR 0001              __end_of_nwkTxAckWaitTimerHandler 6E1A  
                                        abs@a 0014                                          _cmdI 8D52  
                         ??_NWK_GroupIsMember 0004                                          _dbuf 0175  
                                        _idle 8D0C                                          _atoi 3EDA  
                                        _main 8750                                          _dtoa 2090  
                         nwkRouteFrame@header 0035                              ?_NWK_TaskHandler 0001  
                                        _rand 504E                                          _seed 01D2  
                                        _prec 00DC                                          _nout 0159  
                                        pad@i 001B                                          pad@p 0018  
                                        fsr0h 003FEA                                          fsr1h 003FE2  
                                        indf0 003FEF                                          fsr2h 003FDA  
                                        fsr0l 003FE9                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 001D                                          fsr2l 003FD9  
                                        _stoa 45B8                            ??_PHY_SetShortAddr 0004  
                                        _utoa 2CD4                                          _xtoa 2340  
                     __size_of_SPI1_ReadBlock 0038                      nwkRxRejectDuplicate@diff 001A  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                                NWK_DataReq@req 0002  
                   __end_of_SPI1_ExchangeByte 8B02                 ??_UART1_SetTxInterruptHandler 0004  
  nwkRxDuplicateRejectionTimerHandler@restart 0014                        CircularBufferSpace@ctx 000A  
                      __end_of_setCodingRate4 8540                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 89CC                                  ___param_bank 000000  
                        __end_of_DIA_ReadByte 887C                    ??_nwkRxHandleReceivedFrame 002B  
                           nwkFrameFree@frame 0002                    __size_of_UART1_is_rx_ready 000E  
                        ??_CircularBufferSize 0004                                   ?_UART1_Read 0001  
                            _SYS_TimerStarted 7F1A                       ??_nwkRxHandleIndication 00D7  
                          ?_UART1_rx_vect_isr 0001                                         ??_cad 0011  
                                       ??_abs 0016                                         ??_pad 001A  
                   __size_of_DATAEE_WriteByte 0040                        __end_of_SYS_TimerStart 87A0  
                     __end_of_TMR0_Initialize 825C                __end_of_nwkTxDelayTimerHandler 6EA6  
              ??_TMR0_DefaultInterruptHandler 0001                          __size_of_cmdGetRxCnt 0002  
                        ?_CircularBufferSpace 000A                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0001                              nwkTxFrame@header 0028  
               __end_of_OSCILLATOR_Initialize 8B64                          __size_of_cmdBootLoad 003A  
                    ??_nwkRouteSendRouteError 002F                                         l10201 1A42  
                                       l11011 83FE                                         l10205 1A46  
                                       l10303 1BC0                                         l11015 8402  
                                       l11007 83FA                                  ?_SX1276Write 000F  
                                       l10305 1BC4                                         l10313 1BD6  
                                       l10225 1A8A                                         l11025 840A  
                                       l11201 4E54                                         l11035 8732  
                                       l10331 1C70                                         l10323 1C3C  
                                       l10403 1350                                         l11019 8406  
                                       l10163 7932                                         l10173 6FDC  
                                       l10341 1C86                                         l10237 1AAE  
                                       l10229 1A8E                                         l10421 1390  
                                       l10405 1354                                         l10175 6FE8  
                                       l11039 873C                                         l10503 1646  
                                       l10431 13C2                                         l10423 1394  
                                       l10407 1364                                         l10159 791E  
                                       l11223 77FA                                         l11215 779A  
                                       l10185 701C                                         l10281 1B6A  
                                       l11225 7802                                         l11217 77A2  
                                       l10347 1C90                                         l10267 1B08  
                                       l10515 168A                                         l11149 3A5A  
                                       l10533 5F6E                                         l10525 5F24  
                                       l10621 4106                                         l10381 1D3A  
                                       l10615 40CE                                         l10375 1D30  
                                       l10367 1D0A                                         l10295 1B9E  
                                       l10279 1B66                                         l11431 7330  
                                       l10529 5F58                                         l10617 40D4  
                                       l10609 40B0                                         l10473 157C  
                                       l11433 733E                                         l10539 5FBC  
                                       l10627 4144                                         l10619 40E0  
                                       l10379 1D38                                         l11363 7716  
                                       l11355 76D8                                         l11523 5B86  
                                       l11515 5B34                                         l11507 5AE6  
                                       l10645 4194                                         l10629 4150  
                                       l11613 57E0                                         l11605 5764  
                                       l14013 4944                                         l14005 4908  
                                       l14101 2288                                         l10565 61CA  
                                       l10549 6178                                         l11189 6AA2  
                                       l10591 7458                                         l11607 5772  
                                       l14023 5A08                                         l10479 159A  
                                       l10583 620A                                         l10575 61E2  
                                       l11551 7AB8                                         l11383 7874  
                                       l11391 788C                                         l10655 710A  
                                       l11199 4E46                                         l10593 7464  
                                       l11609 578A                                         l14009 491E  
                                       l14121 22F0                                         l14025 5A1C  
                                       l15001 3726                                         l10577 61EE  
                                       l10569 61DA                                         l11385 787C  
                                       l12371 88C4                                         l14035 5A78  
                                       l14051 64E2                                         l14043 6486  
                                       l10499 1628                                         l12283 5EDA  
                                       l12267 5E4C                                         l11387 7884  
                                       l14301 3FCE                                         l14125 230A  
                                       l14045 649A                                         l15005 373C  
                                       l10599 748C                                         l14063 7FDC  
                                       l14151 4660                                         l14231 23E2  
                                       l14223 23C0                                         l10759 8386  
                                       l12279 5EB8                                         l12385 7D1E  
                                       l14073 20F6                                         l14161 46A4  
                                       l14137 45DC                                         l14217 2380  
                                       l15033 3896                                         l15113 2AAE  
                                       l14323 848C                                         l14331 7668  
                                       l14091 214C                                         l14155 467E  
                                       l14147 4644                                         l14403 075A  
                                       l15027 383E                                         l12707 6124  
                                       l16003 7D7A                                         l12397 87CC  
                                       l15301 1002                                         l14165 46C0  
                                       l14245 2478                                         l14253 2510  
                                       l14405 077E                                         l15213 3124  
                                       l15133 2BA2                                         l15141 2BCC  
                                       l12709 6154                                         l14319 8474  
                                       l14087 213C                                         l14183 2D48  
                                       l14407 078A                                         l14503 6F84  
                                       l15135 2BC8                                         l12655 6096  
                                       l12639 7EC6                                         l15321 119C  
                                       l15313 10F8                                         l15305 1054  
                                       l14521 866C                                         l14169 46DC  
                                       l14193 2E74                                         l14425 089A  
                                       l15129 2B9E                                         l15153 2C36  
                                       l12913 7196                                         l12665 60B2  
                                       l16025 3324                                         l14515 864A  
                                       l14339 76BA                                         l14611 5194  
                                       l14291 3F54                                         l14275 3EEC  
                                       l14435 08FC                                         l14371 069C  
                                       l14363 0688                                         l15251 3244  
                                       l15243 3222                                         l15235 3206  
                                       l15227 31EA                                         l15067 49EE  
                                       l12675 60CE                                         l15411 0D08  
                                       l16051 33F0                                         l16027 3328  
                                       l16035 3340                                         l15341 8516  
                                       l15325 11EE                                         l15317 114A  
                                       l15309 10A6                                         l14621 5220  
                                       l14293 3F5C                                         l14285 3F42  
                                       l14277 3EF0                                         l13901 65C2  
                                       l14269 258A                                         l14445 09A8  
                                       l14365 068A                                         l15157 2C54  
                                       l16301 3520                                         l12685 60EA  
                                       l16045 33C4                                         l16029 332E  
                                       l16037 3388                                         l14615 51CA  
                                       l14295 3F62                                         l14383 06A8  
                                       l14375 06A0                                         l14367 0698  
                                       l16303 3530                                         l12695 6106  
                                       l16071 34A4                                         l15345 8520  
                                       l15329 1240                                         l14297 3F90  
                                       l13841 7F98                                         l14465 0AD6  
                                       l14553 7746                                         l14721 3A02  
                                       l14705 3938                                         l16313 357C  
                                       l16401 6D98                                         l12961 55F8  
                                       l12937 55A6                                         l15425 0D48  
                                       l15417 0D1C                                         l16137 5860  
                                       l15355 81FA                                         l15283 5280  
                                       l14563 6B60                                         l13843 7F9C  
                                       l13827 7F60                                         l14459 0A94  
                                       l14387 06B2                                         l14379 06A4  
                                       l14475 0AF6                                         l14555 776A  
                                       l15267 3298                                         l15259 3276  
                                       l14723 3A10                                         l15443 0E02  
                                       l15435 0DCA                                         l16075 34CC  
                                       l16059 3414                                         l14813 3C8C  
                                       l13853 75A4                                         l14469 0AE0  
                                       l14389 06F8                                         l14629 7A52  
                                       l14645 63E0                                         l14709 3978  
                                       l15613 6958                                         l15621 69D8  
                                       l16325 35EC                                         l16341 36AE  
                                       l12973 5620                                         l12949 55CE  
                                       l16501 00E2                                         l15279 5276  
                                       l14591 4592                                         l14583 4520  
                                       l14559 6B3C                                         l14815 3CB0  
                                       l14807 3C42                                         l13951 4360  
                                       l13863 7C8A                                         l14719 39EA  
                                       l15711 187E                                         l16335 3634  
                                       l16327 35EC                                         l15463 0EF6  
                                       l15391 0C6C                                         l15367 0BB0  
                                       l14921 4D4A                                         l14913 4D26  
                                       l14905 4D02                                         l15297 0FB0  
                                       l14577 44B4                                         l14825 3D36  
                                       l16353 7264                                         l13945 4338  
                                       l13873 816E                                         l13865 7C8E  
                                       l14497 6F64                                         l14657 6446  
                                       l15721 1912                                         l15713 18E8  
                                       l16273 66A0                                         l16329 35FE  
                                       l16433 4BCE                                         l16417 6E28  
                                       l16425 6E6A                                         l12889 8260  
                                       l15377 0C12                                         l16193 6F1E  
                                       l16185 6ECE                                         l16601 04AA  
                                       l16521 01A8                                         l16513 0150  
                                       l16505 0104                                         l16259 7DB8  
                                       l14755 73EE                                         l14763 7434  
                                       l14771 65E4                                         l16371 72CE  
                                       l13891 655E                                         l14739 720A  
                                       l14683 7F3A                                         l15731 1954  
                                       l16283 66E8                                         l16275 66B2  
                                       l15619 69C0                                         l15643 56F8  
                                       l16339 366E                                         l16451 4C04  
                                       l16443 4BE8                                         l15475 0F2C  
                                       l15459 0EC0                                         l15395 0C74  
                                       l14941 4DA4                                         l14933 4D80  
                                       l14925 4D5C                                         l14917 4D38  
                                       l14909 4D14                                         l14597 45AE  
                                       l14589 455C                                         l13957 4386  
                                       l13973 440C                                         l13877 818A  
                                       l13893 6570                                         l14853 629C  
                                       l14677 7F28                                         l14685 7F52  
                                       l15725 1928                                         l16277 66C4  
                                       l16285 671C                                         l15629 5664  
                                       l15805 632C                                         l16453 4C0C  
                                       l16701 4F62                                         l15493 5C00  
                                       l15477 0F44                                         l15389 0C3A  
                                       l15469 0F12                                         l16189 6EF6  
                                       l16613 051A                                         l16605 04CC  
                                       l16541 0270                                         l16533 0222  
                                       l16525 01D6                                         l16517 017C  
                                       l16509 012E                                         ?_cmdI 0001  
                                       l16367 7288                                         l16359 7276  
                                       l15655 5DC6                                         l13959 439A  
                                       l13887 654C                                         l14847 6268  
                                       l14839 6238                                         l15719 1902  
                                       l16279 66D6                                         l16295 34EE  
                                       l16439 4BDC                                         l16383 7B8C  
                                       l15487 5BC2                                         l15495 5C32  
                                       l14937 4D92                                         l14929 4D6E  
                                       l14785 6682                                         l15585 1D98  
                                       l16369 72B6                                         l13977 4432  
                                       l13969 43F6                                         l13993 4892  
                                       l13897 658C                                         l15745 19EA  
                                       l15673 16F4                                         l15833 637E  
                                       l16473 4C6E                                         l16465 4C4C  
                                       l16449 4C00                                         l16617 0544  
                                       l16609 04F8                                         l16561 032E  
                                       l16553 02E0                                         l16545 029C  
                                       l16537 0244                                         l16529 0200  
                                       l16633 05CA                                         l15569 54C6  
                                       l14947 4DB6                                         l14883 7534  
                                       l14699 38FA                                         l15739 19A6  
                                       l15683 174E                                         l16483 4CAC  
                                       l15923 2F44                                         l16651 7B42  
                                       l14949 4E02                                         l13997 48AC  
                                       l13989 486E                                         l15765 6036  
                                       l15757 5FEE                                         l15693 1790  
                                       l16469 4C54                                         l16389 7BB8  
                                       l16709 4FC4                                         l16629 059E  
                                       l16581 03EE                                         l16573 03A6  
                                       l16565 0350                                         l16557 0302  
                                       l16549 02BE                                         l16637 05E0  
                                       l16741 3DBE                                         l16733 3D9C  
                                       l16725 3D72                                         l13999 48C0  
                                       l14887 7540                                         l15775 607C  
                                       l15863 6CF0                                         l16487 4CB4  
                                       l16911 2800                                         l16815 260C  
                                       l16751 3DF6                                         l16743 3DD2  
                                       l16735 3DA4                                         l14897 754C  
                                       l15769 6052                                         l15689 1774  
                                       l16841 26A8                                         l15929 2F64  
                                       l15881 28FA                                         l16593 045E  
                                       l16585 0410                                         l16577 03CC  
                                       l16569 037A                                         l16497 00B4  
                                       l16667 7AF6                                         l16851 26DA  
                                       l16827 2636                                         l16771 3E44  
                                       l16763 3E28                       __end_of_SYS_TaskHandler 8C9C  
                                       l16861 270C                                         l15973 6D78  
                                       l16597 0488                                         l16589 0432  
                                       l16781 3E64                                         l16749 3DEE  
                                       l15799 630E                                         l16871 2746  
                                       l15887 291A                                         l16881 2774  
                                       l16891 27A2                                         l16787 3E76  
                                       l16795 3E9C                                         l16955 876E  
                                       l16897 27AC                                 ___fltol@sign1 0041  
                                       ?_idle 0001                               __end_of___aodiv 4464  
                                       ?_atoi 0009                               __end_of___fladd 1D5E  
                   __end_of_NWK_GroupIsMember 8678                                         ?_main 0001  
                                       ?_dtoa 001F                               __end_of___aomod 4976  
                                       ?_rand 001A                                         STR_10 FED0  
                                       STR_11 FE46                                         STR_20 FFD4  
                                       STR_12 FFDF                                         STR_21 FFD7  
                                       STR_13 FFD7                                         STR_30 FFD7  
                                       STR_14 FECC                                         STR_22 FF66  
                                       STR_23 FECC                                         STR_15 FE73  
                                       STR_31 FE34                                         STR_40 FECC  
                                       STR_24 FECC                                         STR_16 FFDF  
                                       STR_32 FE22                                         STR_41 FFD7  
                                       STR_17 FFD7                                         STR_25 FFDF  
                                       STR_33 FE9A                                 __CFG_WDTE$OFF 000000  
                                       STR_26 FECC                                         STR_34 FFDF  
                                       STR_18 FFDC                                         STR_50 FFC6  
                                       STR_42 FE80                                         STR_35 FECC  
                                       STR_27 FECC                                         STR_43 FFDF  
                                       STR_51 FFC6                                         STR_19 FFF5  
                                       STR_36 FFD7                                         STR_28 FFD7  
                                       STR_52 FECC                                         STR_44 FECC  
                                       STR_60 FEB4                                         STR_61 FFD7  
                                       STR_53 FFD7                                         STR_45 FFD7  
                                       STR_37 FE65                                         STR_29 FE0D  
                                       STR_54 FFDF                                         STR_38 FFDF  
                                       STR_46 FFEB                                         STR_70 FFE1  
                                       STR_62 FF61                                         STR_39 FECC  
                                       STR_63 FF61                                         STR_71 FFE1  
                                       STR_47 FFEB                                         STR_55 FFFD  
                                       STR_48 FFC0                                         STR_80 FF92  
                                       STR_56 FF39                                         STR_64 FF30  
                                       STR_72 FED8                                         STR_57 FFDF  
                                       STR_81 FF92                                         STR_73 FED8  
                                       STR_49 FFC0                                         STR_65 FF30  
                                       STR_58 FECC                                         STR_66 FFA7  
                                       STR_82 FF76                                         STR_74 FF51  
                                       STR_90 FEF7                                         STR_59 FFD7  
                                       STR_83 FF76                                         STR_75 FF51  
                                       STR_91 FEF7                                         STR_67 FFA7  
                                       STR_68 FFE6                                         STR_76 FF68  
                                       STR_84 FF15                                         STR_92 FEE3  
                                       STR_85 FF15                                         STR_77 FF68  
                                       STR_93 FEE3                                         STR_69 FFE6  
                                       STR_94 FF99                                         STR_78 FF0B  
                                       STR_86 FEA7                                         STR_87 FEA7  
                                       STR_95 FF99                                         STR_79 FF0B  
                                       STR_96 FF7D                                         STR_88 FE56  
                             __end_of___flmul 16A8                                         STR_97 FF7D  
                                       STR_89 FE56                                         STR_98 FF1E  
                                       STR_99 FF1E                            _implicitHeaderMode 8B1C  
                             __end_of___fltol 6224                                         ?_stoa 000D  
                       nwkDataReqConfirm@prev 000D                               __end_of___lldiv 7044  
                                       ?_utoa 001F                                         u12100 71A2  
                                       u10350 7A9E                                         u13010 863E  
                                       u12130 55A2                               __end_of___lodiv 5AC0  
                                       u10355 7A98                                         u13020 8640  
                                       u11324 5EA0                                         u11325 5E9A  
                                       ?_xtoa 001F                                         u10528 5810  
                             __end_of___llmod 74B4                                         u13130 48C4  
                                       u13210 649E                                         _U1P1H 003DED  
                                       u13051 4366                                         _U1P2H 003DEF  
                                       u14101 6B36                                         u13070 439E  
                                       u13310 2136                                         u11710 8C8A  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u13240 7FD8                                         u13320 2296  
                                       u14040 6FB0                                         _U1P2L 003DEE  
                                       u13401 45C2                                         u13161 59E8  
                                       u13250 20C8                                         _U1P3L 003DF0  
                                       u15020 128A                                         u13340 22B8  
                                       u13260 20CA                                         u13180 5A20  
                                       u13500 2CE6                                         u15100 0BDE  
                                       u13341 22B6                                         u13350 22C6  
                                       u14230 63DC                                         u13360 22CC  
                                       u13600 2414                                         u14320 3980  
                                       u15200 0CBE                                         u15120 0C0E  
                                       u15025 1280                                         u12810 759C  
                                       u13290 2108                                         u13450 4674  
                                       u13530 2E9E                                         u13610 2416  
                                       u13531 2E9C                                         u15107 0BD0  
                                       u13380 22DA                                         u13540 2EAC  
                                       u13700 2550                                         u14500 7530  
                                       u16020 630A                                         u15220 0CCE  
                                       u14350 7418                                         u14270 514A  
                                       u12830 75E4                                         u13550 2EB2  
                                       u13710 2556                                         u13630 244E  
                                       u15310 0DF0                                         u15230 0D04  
                                       u15150 0C68                                         u15070 0B7E  
                                       u12840 7CB8                                         u13480 46F0  
                                       u13640 2450                                         u14600 37FE  
                                       u14520 3724                                         u15320 0DF2  
                                       u16120 28E8                               __end_of___lomod 652A  
                                       u12930 81B0                                         u13570 2352  
                                       u14610 3804                                         u15090 0BAE  
                                       u16210 336A                                         u14275 5138  
                                       u13820 76A0                                         u13740 3F3E  
                                       u12940 85D6                                         u13660 24DC  
                                       u15180 0CAA                                         u14357 740A  
                                       u15237 0CF6                                         u15157 0C5A  
                                       u15077 0B70                                         u14390 3BFC  
                                       u15510 1DF4                                         u12950 85D8  
                                       u12870 85A2                                         u13670 2520  
                                       u13590 23DE                                         u13910 07C6  
                                       u14470 6290                                         u16070 6398  
                                       u16150 2F32                                         u16310 6864  
                                       u12847 7CAA                                         u14711 2AF4  
                                       u15520 1DF6                                         u13760 4004  
                                       u12960 860A                                         u12880 85A4  
                                       u13920 07C8                                         u14480 62AC  
                                       u15280 0DA8                                         u13665 24CA  
                                       u15097 0BA0                                         u16217 335C  
                                       u13826 76A2                                         u15530 1E0E  
                                       u13770 4006                                         u12970 860C  
                                       u13690 2542                                         u13930 07D6  
                                       u14570 37B4                                         u15610 69E0  
                                       u14650 49DC                                         u15290 0DAA  
                                       u17130 3D82                                         u13691 2540  
                                       u15187 0C9C                                         u12980 7C04  
                                       u14580 37B6                                         u17300 26F6  
                                       u15380 0E9A                                         u16180 6D5E  
                                       u15550 1E3C                                         u12990 7C06  
                                       u13950 0812                                         u14590 37DE  
                                       u14734 2B44                                         u15470 5C64  
                                       u15390 0EEE                                         u14735 2B40  
                                       u14920 52D2                                         u16600 4BE2  
                                       u17080 5028                                         u17320 2730  
                                       u15480 5C6A                                         u16360 67B6  
                                       u15570 1E6E                                         u15730 1726  
                                       u16290 58C2                                         u15548 1E10  
                                       u14860 3240                                         u14764 2BB4  
                                       u15900 1986                                         u15820 1836  
                                       u15740 173C                                         u17068 4FEC  
                                       u17340 2760                                         u14925 52C8  
                                       u14765 2BB0                                         u15741 173A  
                                       u17069 4FFE                                         u15477 5C56  
                                       u15397 0EE0                                         u13990 09E4  
                                       u14870 3272                                         u14774 2C1A  
                                       u15830 1838                                __CFG_DEBUG$OFF 000000  
                                       u17407 41BA                                         u14695 53D8  
                                       u14775 2C16                                         u15568 1E3E  
                                       u15680 5D90                                         u14880 3294  
                                       u14696 53DA                                         u15920 19C2  
                                       u15840 1898                                         u17280 26C4  
                                       u17417 41D8                                         u15930 19D8  
                                       u15850 189A                                         u17427 42CA  
                                       u15588 1E70                                         u16468 365C  
                                       u16660 4C8C                                         u16840 034A  
                                       u14898 32D6                                         u16850 036C  
                                       u17397 8336                                         _U1UIR 003DF8  
                                       _U1RXB 003DE8                                   computeFRF@i 002F  
                                       _U1TXB 003DEA                           ??_UART1_rx_vect_isr 0001  
                                       i1l996 7C74                             ?_NWK_OpenEndpoint 0002  
                                       _OSCEN 0039DD                               __end_of_cmdAddr 8A0A  
                                vfpfcnvrt@fmt 0048                                 strtoul@endptr 0036  
                                       _TMR0H 003FB7                                  vfpfcnvrt@llu 006E  
                                       _TMR0L 003FB6                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                 _Default_ISR 8D80                               __end_of_cmdRecv 8D74  
                             __end_of_cmdSend 2AA2                     ??_CRC_CalculatedResultGet 000B  
           __size_of_TMR0_SetInterruptHandler 000E                           ___lmul@multiplicand 0006  
                   ?_TMR0_SetInterruptHandler 0002                            ??_NWK_OpenEndpoint 0004  
                            __end_of_TMR0_ISR 894A                             _UART1_tx_vect_isr 89AC  
                             __end_of_get_lqi 6B30                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                    __end_of_NWK_RouteNextHop 7E4A                        cmdSetCADRSSI@atCommand 0076  
                             _DATAEE_ReadByte 8A46                           ?_implicitHeaderMode 0001  
                        __size_of_cmdSetNaddr 007C                              __end_of_PHY_Init 8D64  
               nwkRouteSendRouteError@command 002F                         __end_of_Timer0Handler 7C7C  
                                       _flags 00DE                          __size_of_cmdSendSink 0002  
                   __size_of_CRC_ReverseValue 0058                                         _errno 0155  
                                       _fputc 758C                               __end_of_isalpha 8612  
                                       _fputs 8164                               __end_of_isdigit 8646  
                       ?_SYS_TimerTaskHandler 0001                                         _nwkIb 0100  
                            __end_of_NWK_Init 7B30                            __CFG_MCLRE$EXTMCLR 000000  
                          ?_UART1_tx_vect_isr 0001                               __end_of_receive 821E  
                                       _srand 842E                                         atoi@n 0016  
                                       pad@fp 0014                                         atoi@s 0009  
                                       _width 00DA                                         _putch 8D3A  
                                       dtoa@d 0021                                         dtoa@i 0041  
                                       dtoa@n 0039                                         dtoa@p 0033  
                                       dtoa@s 0037                                         dtoa@w 0035  
                             __end_of_islower 85AA                               __end_of_isspace 7FE6  
                        __size_of_appDataConf 0022                               __end_of_isupper 85DE  
                                       pclath 003FFA                                         tablat 003FF5  
                            _nwkTxTaskHandler 34E4                             nwkRxSendAck@frame 002A  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 0018                                         stoa@l 001F  
                                       stoa@p 001D                                         stoa@s 000F  
                                       stoa@w 001A                           nwkDataReqTxConf@req 0008  
                                       utoa@d 0021                                         utoa@i 003D  
                                       utoa@n 0035                                         utoa@p 0031  
                                       utoa@w 0033                   nwkTxConvertPhyStatus@status 0004  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 8CD4  
                 _UART1_SetRxInterruptHandler 8CC6                  __size_of_nwkRxServiceDataInd 006C  
                                       xtoa@c 0044                                         xtoa@d 0021  
                                       xtoa@i 0042                                         xtoa@n 003A  
                                       xtoa@p 0036                                         xtoa@w 0038  
                                       xtoa@x 0029               nwkTxAckWaitTimerHandler@restart 0016  
                             __end_of_strcspn 7850                               __end_of_strncmp 4F34  
                             __end_of_toupper 7C2A                              ___lodiv@dividend 0002  
    __end_of_UART1_DefaultFramingErrorHandler 8D86     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 8D84                               __end_of_strtoul 7E90  
                     SX1276WriteBuffer@buffer 0009                           ??_UART1_tx_vect_isr 0001  
                            __end_of_SYS_Init 8CB8                     __end_of_UART1_rx_vect_isr 89EC  
                    __size_of_SPI1_Initialize 001A                    __size_of_setPreambleLength 001A  
                              nwkFrameAlloc@i 0012                                  _toupper$7868 000E  
                           nwkTxConfirm@frame 0002                               ?_setCodingRate4 0001  
                             __initialization 5C74                    __end_of_NWK_RouteFindEntry 76CC  
                        ??_implicitHeaderMode 0011                                  __end_of_cmdI 8D58  
                                __end_of_idle 8D18                                  __end_of_atoi 404A  
                                __end_of_main 8778                                  __end_of_dtoa 2340  
                                __end_of_rand 515C                             nwkFrameNext@frame 0002  
                 SYS_TimerTaskHandler@elapsed 001E                                  __end_of_stoa 46FE  
                                __end_of_utoa 2EE8                                  __end_of_xtoa 25C0  
                              __CFG_SAFEN$OFF 000000                   ??_UART1_DefaultErrorHandler 0001  
                             ?_SYS_TimerStart 0010                           __size_of_SX1276Read 0016  
                       ??_CircularBufferSpace 000C                               cmdSend@destaddr 007A  
                  __end_of_NWK_RouteFreeEntry 850A                              _need_radio_reset 016A  
                            ??_CRC_Initialize 0002                                  ?_UART1_Write 0001  
                              _free_tx_buffer 7CCC                                        ??_cmdI 005E  
                           cmdSetSF@atCommand 0076                                        ??_idle 0011  
                                      ??_atoi 000B                                        ??_main 005E  
                                      ??_dtoa 0029                                        ??_rand 001C  
                              __CFG_PR1WAY$ON 000000                                        ??_stoa 0010  
                                      ??_utoa 0029                                        ??_xtoa 002A  
                               __activetblptr 000003                   __size_of_getSignalBandwidth 0122  
                 __size_of_setSignalBandwidth 03C6          __size_of_UART1_SetTxInterruptHandler 000E  
                         executeATCommand@cmd 00A4                     __end_of_UART1_tx_vect_isr 89CC  
                              __CFG_MVECEN$ON 000000                    __end_of_nwkRxIndicateFrame 32E8  
                             ??_queueLedEvent 001E                           computeFRF@frequency 0023  
                            ___lodiv@quotient 0012                      __end_of_executeATCommand 0640  
                         CRC_ReverseValue@crc 0002                              _UART1_Initialize 68A0  
                    ??_CircularBufferPushBack 0016                                _nwkDataReqInit 8D24  
                       queueLedEvent@duration 001C                  DIO0_Receive_ISR@packetLength 0044  
                         NWK_RouteNextHop@dst 0008                             ??_start_radio_cad 0011  
                         _bootLoadApplication 25C0                  __end_of_nwkRxRejectDuplicate 2CD4  
                __size_of_nwkDataReqSendFrame 0332                                        ?_fputc 0004  
                            ___llmod@dividend 0002                                        STR_100 FFFA  
                                      STR_101 FFFA                                        STR_102 FFB4  
                                      STR_110 FF27                                        ?_fputs 000D  
                                      STR_111 FF27                                        STR_103 FFB4  
                                      STR_112 FFCC                                        STR_120 FFA0  
                                      STR_104 FF84                                        STR_105 FF84  
                                      STR_121 FFA0                                        STR_113 FFCC  
                                      STR_130 FECC                                        STR_122 FFBA  
                                      STR_114 FF8B                                        STR_106 FF59  
                                      STR_115 FF8B                                        STR_123 FFBA  
                                      STR_107 FF59                                        STR_131 FEC0  
                                      STR_124 FFAE                                        STR_116 FF6F  
                                      STR_108 FF49                                        STR_132 FDF3  
                                      STR_117 FF6F                                        STR_125 FFAE  
                                      STR_109 FF49                                        STR_133 FDD7  
                                      STR_118 FFF0                                        STR_134 FF41  
                                      STR_126 FF01                                        STR_127 FF01  
                                      STR_119 FFF0                                        STR_135 FFD2  
                                      STR_128 FEED                                        STR_129 FEED  
                             cmdSend@tempaddr 007F                                        ?_srand 0002  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _T0CON0 003FB8                                        _T0CON1 003FB9  
                       __end_of_nwkFrameAlloc 6694                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                              _processATCommand 3D60  
                                      _U1CON0 003DF2                      nwkRxHandleIndication@ack 00D9  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RC4I2C 003A6B  
                         __size_of_UART1_Read 0046                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                                      _RB0PPS 003A08                            __CFG_PWRTS$PWRT_64 000000  
                                      _RC0PPS 003A10                                        _RC1PPS 003A11  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC7PPS 003A17  
                              __CFG_WDTCCS$SC 000000                                  loadMACAddr@i 0006  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLE 003A84  
                                      _TABLAT 003FF5                             ?_nwkDataReqTxConf 0004  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 006A  
                            __end_of_cmdBcast 30E8                                        _NVMDAT 0039E3  
                            __end_of_cmdGetSF 8BA6                              __end_of_cmdGetTX 8B90  
                       _UART1_SetErrorHandler 8CF0                              __end_of_cmdNaddr 8B7A  
                              placeTimer@prev 000C                                  ?_setSyncWord 0001  
                            __end_of___xxtofl 41AE                              __end_of_cmdSetSF 67F2  
                            __end_of_cmdSetTX 5902                            ??_nwkDataReqTxConf 0006  
                            __end_of_cmdReset 8D6E                            PHY_DataConf@status 0005  
                            set_parity@parity 0004                    __size_of_SPI1_ExchangeByte 001A  
                              __CFG_XINST$OFF 000000                                  ___strtoxl@cp 0031  
                                vfprintf@cfmt 0053                                 ?_radio_engine 0001  
                                ?_PHY_DataInd 0013                                  ?_PHY_DataReq 0011  
                        ?_bootLoadApplication 0001                                        ___flge 5EF0  
                            __end_of_get_rssi 86FC                              __end_of_fhssList FDC5  
                                      ___lmul 790E                                        ___omul 6B30  
                                   ??___aodiv 0012                                     ??___fladd 0031  
                                   ??___aomod 0012                                        ___wmul 8678  
                                      _cmdMac 7D68                                __CFG_STVREN$ON 000000  
                                   ??___flmul 0018                                     ??___fltol 003D  
                                      _crcObj 01DA                                     ??___lldiv 001E  
                                   ??___lodiv 0012                                     ??___llmod 000A  
                      __end_of_free_tx_buffer 7D1A                                     ??___lomod 0012  
                       __size_of_cmdSetParity 008A                                     ??_cmdAddr 005E  
                                      _memcpy 73D4                              ?_TMR0_Initialize 0001  
                    __end_of_nwkRxTaskHandler 6744                                        _memset 4464  
                                   ??_cmdRecv 0002                                     ??_cmdSend 0078  
                            ___strtoxl@endptr 0012                                        clear_0 5CE2  
                                      clear_1 5CF4                                        clear_2 5D00  
                                      clear_3 5D0C                                        clear_4 5D18  
                                      clear_5 5D24                                        clear_6 5D30  
                            setCodingRate4@cr 0012                     CircularBufferPushBack@ctx 0013  
                   CircularBufferPushBack@val 0015                 DATAEE_ReadByte_Platform@copy1 000A  
               DATAEE_ReadByte_Platform@copy2 0009                 DATAEE_ReadByte_Platform@copy3 0008  
                                      _timers 00E0                                        _printf 887C  
                                      pad@buf 0016             __size_of_nwkTxAckWaitTimerHandler 0090  
                  __size_of_NWK_GroupIsMember 0032               __size_of_nwkRouteSendRouteError 00E0  
                            ?_SYS_TaskHandler 0001                                        dtoa@fp 001F  
                                      _strchr 70CC                     ?_nwkTxAckWaitTimerHandler 0012  
                     __end_of_DATAEE_ReadByte 8A64                                     ??_get_lqi 0043  
                            ___strtoxl@prev_a 001B                              __end_of_sendInfo 79CA  
                                      _strlen 7C7C                                        _strtok 5AC0  
                                      _strspn 7790                                        _strtol 80E8  
                                      _strstr 5B9C                                 cmdSetAES@byte 00A0  
              __size_of_nwkTxConvertPhyStatus 0038                                 cmdSetAES@temp 009C  
               __end_of_nwkTxConvertPhyStatus 842E                                        fputc@c 0004  
                              _PMD_Initialize 8904                                        fputs@c 0011  
                                      fputs@i 0012                                  __packetIndex 016B  
                                      fputs@s 000D                                     ??_isalpha 0004  
                                   ??_isdigit 0004                        __end_of_nwkDataReqInit 8D30  
              __size_of_nwkRouteFrameReceived 01E2                                     ??_receive 0011  
                     _setSpreadingFactor$8634 0027                 __end_of_nwkRouteFrameReceived 38B6  
                                   ??_islower 0004                                  __mediumconst FCC8  
                                   ??_isspace 0004                                        tblptrh 003FF7  
                                   ??_isupper 0004                                        tblptrl 003FF6  
                                      tblptru 003FF8                   __end_ofNWK_LinearizeLqi@val FDCE  
                                      srand@s 0002                        ??_SYS_TimerTaskHandler 0019  
                                ?_NWK_DataReq 0002                                        stoa@cp 001C  
                                      stoa@fp 000D                          __size_of_loadMACAddr 003C  
                       __end_of_TMR0_CallBack 89AA                              __end_of_vfprintf 7790  
                                      utoa@fp 001F                          processATCommand@data 00AC  
 UART1_SetTxInterruptHandler@InterruptHandler 0002   UART1_SetRxInterruptHandler@InterruptHandler 0002  
    TMR0_SetInterruptHandler@InterruptHandler 0002          __end_of_UART1_SetOverrunErrorHandler 8CE2  
       __size_of_UART1_SetOverrunErrorHandler 000E                  _UART1_SetOverrunErrorHandler 8CD4  
                               _curent_parity 0171                     _UART1_DefaultErrorHandler 8D64  
                                      xtoa@fp 001F                                     ??_strcspn 000C  
                                   ??_strncmp 0008                                     ??_toupper 000A  
                                   ??_strtoul 003A                 __size_of_INTERRUPT_Initialize 0040  
                __size_of_UART1_RxDataHandler 0024                                    ___flge@ff1 0010  
                                  ___flge@ff2 0014                                 cmdSetRFCH@cmd 0076  
                     ??_nwkRouteErrorReceived 000E                                  ___xxtofl@arg 000C  
                                ___xxtofl@exp 000B                             _SYSTEM_Initialize 88E2  
                                ___xxtofl@val 0002                                 cmdSetSF@CHstr 007A  
                            PHY_SetRxState@rx 0001                                    __accesstop 0060  
                        cmdGetRxCnt@atCommand 0002                       __end_of__initialization 5D44  
                                ?_NWK_SetAddr 0004                               SX1276Write@addr 0010  
                    __size_of_SPI1_WriteBlock 0036                          bootLoadApplication@i 0035  
                             SX1276Write@data 000F                                _SPI1_ReadBlock 8466  
                          __size_of_crc16_app 0084                         __size_of_DIA_ReadByte 0022  
                          ?_SYSTEM_Initialize 0001                            _get_free_tx_buffer 76CC  
                          _getSpreadingFactor 8AB4                                    _cadCounter 00ED  
                           ?_nwkTxAckReceived 0008                            _setSpreadingFactor 526A  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0020  
                                  ___fltol@f1 0039                               _PHY_TaskHandler 8D58  
                                _cmdSetParity 6EA6                      ??_queue_serial_led_event 0022  
                     SYS_TimerTaskHandler@cnt 001D                                ??_radio_engine 004B  
                          ??_nwkTxAckReceived 0009              __end_of_nwkRxHandleReceivedFrame 1A16  
                       ??_bootLoadApplication 0030                            __size_of_cmdGetCAD 0016  
                                  _cadTimeOut 00F5                                __pcstackCOMRAM 0001  
                          CRC_Initialize@seed 0005                            __size_of_cmdGetTTL 0002  
                          __size_of___strtoxl 042E                            CRC_Initialize@poly 0003  
                    __end_of_SX1276ReadBuffer 87C8                                 cmdSetTX@CHstr 007D  
                __size_of_nwkFrameCommandInit 0040                        __size_of_cmdGetCADRSSI 001A  
                               cmdSetAddr@cmd 0076                                  __pidataBANK0 8D4C  
                                __pidataBANK1 8C3A                                  __pidataBANK2 8D30  
                          nwkTxConfirm@status 0004                           ??_SYSTEM_Initialize 0007  
                         ?_get_free_tx_buffer 0002                           ?_getSpreadingFactor 000F  
                                 placeTimer@t 000E                                     ?_TMR0_ISR 0001  
                          __size_of_cmdSetAES 01FC                           ?_setSpreadingFactor 0001  
              nwkRxHandleReceivedFrame@header 0031                            __size_of_cmdSetTTL 0002  
                            _DATAEE_WriteByte 8028                                ivt0x8_undefint 00AC  
                             ?_free_tx_buffer 0002                             PHY_SetPanId@panId 0002  
                          __size_of_cmdRstCAD 0014                                     ?_PHY_Init 0001  
                               __end_of_fputc 75F8                                 cmdSetBaud@ptr 003D  
                               __end_of_fputs 81A2                             ??_SPI1_Initialize 0002  
                    nwkRxIndicateFrame@header 00C7                nwkRxHandleReceivedFrame@member 002E  
                               __end_of_srand 8466                                 __end_of_putch 8D44  
                       SX1276WriteBuffer@addr 000B                    ??_DATAEE_ReadByte_Platform 0008  
                                   ?_NWK_Init 0001                                   receive@size 0011  
        __size_ofnwkFrame@nwkFramePayloadSize 002A                         SX1276WriteBuffer@size 000A  
                      __end_of_PMD_Initialize 8926                         SPI1_ExchangeByte@data 0002  
                               cmdSend@buf_id 0085                      nwkDataReqTaskHandler@req 0033  
                          _spi1_configuration FDCE                            __size_of_enableCrc 0012  
              __size_of_nwkDataReqTaskHandler 0082                    __size_of_UART1_tx_vect_isr 0020  
                           ?_DIO0_Receive_ISR 0001                 __end_of_nwkDataReqTaskHandler 72D8  
                            ??_get_timer0base 0004                          __size_of_SX1276Write 0012  
                             ?_nwkDataReqInit 0001                                 cmdSetNaddr@p1 007A  
                               cmdSetNaddr@p2 0078                                  crc16_app@len 0015  
                                crc16_app@ptr 001B                                     ?_SYS_Init 0001  
                              _nwkFrameFrames 05BD                     _UART1_FramingErrorHandler 01E3  
                                  _cmdGetRFCH 8A64                            ??_DIO0_Receive_ISR 0044  
             __size_of_CircularBufferPushBack 00F4                         __end_of_set_uart_baud 615A  
                                  _cmdGetMode 8C72                                  _DIA_ReadByte 885A  
                        ??_get_free_tx_buffer 0003                          ??_getSpreadingFactor 0013  
                            _CRC_ReverseValue 7A82                                  ??_SX1276Read 000D  
                        ??_setSpreadingFactor 0023                                       ??_fputc 0008  
                   __end_of_SYSTEM_Initialize 8904                                       ??_fputs 0011  
                    __end_of_SYS_TimerStarted 7F5E                               __CFG_IVT1WAY$ON 000000  
                                     ??_srand 0004                                       ??_putch 0003  
                                  _cmdSetRFCH 69F2                                 ?_setFrequency 0023  
                      __end_of_SPI1_ReadBlock 849E                                    __pbssBANK0 00DA  
                                  __pbssBANK1 0100                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                                    __pbssBANK4 0400  
                                  __pbssBANK5 0500                                    _cmdSetAddr 6CF8  
                                  _cmdSetBaud 74B4                 ?_UART1_SetOverrunErrorHandler 0002  
                      ?_UART1_SetErrorHandler 0002                                    _cmdSetSink 8C64  
                       __end_of_nwkRouteFrame 5E20                        _nwkRouteSendRouteError 5902  
                                  _appDataInd 71D4                            __size_of_initRadio 015E  
                                  crc16_app@i 001D                  __size_of_nwkTxBroadcastFrame 0144  
                                  _atStateVar 00EF                   nwkTxBroadcastFrame@newFrame 0027  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                          CRC_ReverseValue@mask 0007  
                             setTxPower@power 0011                       setPreambleLength@length 0011  
                                     ?___flge 0010              __end_of_TMR0_SetInterruptHandler 8D0C  
                                     ?___lmul 0002                            _explicitHeaderMode 8B34  
                                     ?___omul 0002                                  ??_UART1_Read 0002  
                    __size_of_print_hop_table 000E                                       ?___wmul 0002  
                             _nwkDataReqQueue 00E2                                       ?_cmdMac 0001  
                                  ??_TMR0_ISR 0001                               __CFG_PPS1WAY$ON 000000  
                          NWK_OpenEndpoint@id 0004                          _nwkRxRejectDuplicate 2AA2  
                           _nwkDataReqConfirm 573A                       __size_of_set_timer0base 0020  
                                  ??_PHY_Init 003A                     __size_of_PHY_SetShortAddr 0002  
                         nwkTxAckReceived@ind 0008                                       ?_memcpy 0008  
                                     ?_memset 0002                __size_of_nwkRxHandleIndication 00CE  
                         ___omul@multiplicand 000A                                ___lmul@product 000A  
                                  ??_NWK_Init 0006                            __end_of_SX1276Read 8BD2  
                           _SX1276WriteBuffer 8812                 __end_of_nwkRxHandleIndication 608E  
                    __end_of_nwkTxTaskHandler 36D4                            ?_nwkDataReqConfirm 0009  
                                     _CRCACCH 003963                                       _CRCACCL 003962  
                                     ?_printf 0055                               ?_PMD_Initialize 0001  
                                     _CRCDATH 003961                                       _CRCDATL 003960  
                           _UART1_Receive_ISR 6BCA                                       _CRCCON0 003968  
                                     _CRCCON1 003969                            __size_of_nwkRxInit 004C  
                         _nwkRxServiceDataInd 7520                            __size_of_nwkTxInit 0042  
                                     ?_strchr 0002                           ?_explicitHeaderMode 0001  
                                     ?_strlen 0002                                       ?_strtok 000F  
                                     ?_strtol 0034                                       ?_strspn 0008  
                                     ?_strstr 000D                                       _CRCXORH 003967  
                                     _CRCXORL 003966                              ?_DATAEE_ReadByte 0002  
                           __end_of_crc16_app 71D4                                 ?_nwkFrameFree 0002  
                          ?_SX1276WriteBuffer 0009                                 ?_nwkFrameInit 0001  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                               ?_nwkFrameNext 0002                                     ?_cmdBcast 0076  
                                     i1l13003 7C56                                       i1l13007 7C64  
                                   ?_cmdGetSF 0001                                     ?_cmdGetTX 0001  
                           _CRC_8BitDataWrite 8C1A                                       i1l12995 7C3A  
                                     i1l12999 7C48                                       i2l12335 8854  
                                     i2l13401 83E4                                       i2l13403 83EA  
                                     i2l13425 6C5C                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 0044                                     ?_cmdNaddr 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0002                                     ?_cmdSetSF 0076  
                                   ?_cmdSetTX 0076                                 computeFRF@num 002B  
                                   ?_cmdReset 0001                                 appDataInd@ind 0076  
                                  ??_SYS_Init 003A                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                       nwkRouteNormalizeRanks@i 0003  
                         ??_nwkDataReqConfirm 000B                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 04F0                                       _TBLPTRH 003FF7  
                                     _TBLPTRL 003FF6                            ?_CRC_8BitDataWrite 0001  
                                     _SPI1CLK 003D1C                                       _TBLPTRU 003FF8  
                    print_hop_table@atCommand 0076                                       _SPI1RXB 003D10  
                                     _NVMADRH 0039E1                                       _NVMADRL 0039E0  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _NVMCON2 0039E6                             __end_of_cmdGetCAD 8BBC  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                 _cmdGetCADRSSI 8A80  
                           __end_of_cmdGetTTL 8D76                             __end_of___strtoxl 0F5E  
          __size_of_DATAEE_WriteByte_Platform 0044                             ?_NWK_RouteNextHop 0008  
                         ??_SX1276WriteBuffer 000B                        __size_of_cmdSetCADRSSI 00AE  
                                  cmdBcast@p1 007A                                ??_setFrequency 0027  
                  ?_DATAEE_WriteByte_Platform 0006                             __end_of_cmdSetAES 34E4  
                         ??_UART1_Receive_ISR 0001                                     ?_get_rssi 0001  
                             placeTimer@timer 0002                       __end_of_PHY_TaskHandler 8D5E  
                            ___lomod@dividend 0002                             __end_of_cmdSetTTL 8D70  
                       nwkTxAckReceived@frame 000D                             __end_of_cmdRstCAD 8BE6  
                             ?_SPI1_ReadBlock 0003                               crc16_app@result 0019  
                          ??_NWK_RouteNextHop 000B                                    _computeFRF 3A56  
                          __end_of_UART1_Read 7ED6                                     NWK_Init@i 0006  
                               ?_nwkGroupInit 0001                           ??_CRC_8BitDataWrite 0002  
                     __size_of_nwkRouteRemove 003C                          DATAEE_WriteByte@bAdd 0002  
                            ??_setCodingRate4 0011                          ?_nwkRxServiceDataInd 0076  
                        ??_explicitHeaderMode 0011                                       _TXPower 00EA  
                   __size_of_NWK_OpenEndpoint 0020                     INTERRUPT_Initialize@state 0002  
                           __end_of_enableCrc 8BF8                                    _dwellTimer 0165  
                                   ?_sendInfo 0001                                    _packetRSSI 0168  
                                     __Hparam 0000                              ??_SYS_TimerStart 0012  
             __size_of_queue_serial_led_event 0054                          __size_of_setSyncWord 0010  
                                     __Lparam 0000                      __end_of_UART1_Initialize 694A  
                      _CircularBufferPushBack 5468                     __end_of_nwkDataReqConfirm 5822  
                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                             ??_SPI1_WriteBlock 0007  
                               ??_cmdGetRxCnt 0004                                    cmdSetAES@i 00A3  
                               ?_PHY_DataConf 0001                                 ?_nwkRxSendAck 002A  
                               ?_nwkTxConfirm 0002                                       cad@RSSI 0012  
                         _nwkDataReqSendFrame 1D5E                                 ??_cmdBootLoad 0076  
                             __size_of___flge 00D0                         ?_nwkRxRejectDuplicate 0012  
                                     ___aodiv 430C                                       ___fladd 1A16  
                                     ___aomod 4842                           nwkRouteRemove@entry 000B  
                    __size_of_NWK_TaskHandler 000E                                       _cadDone 00EE  
                   __end_of_SX1276WriteBuffer 8836                                    cmdSetSF@p1 0078  
                             __size_of___lmul 005E                                    cmdSetSF@p2 007D  
                             __size_of___omul 009A                                       ___flmul 1324  
                                     ___fltol 615A                   __size_of_CircularBufferSize 005E  
                                     ___lldiv 6FBA                               __size_of___wmul 002E  
                                     ___lodiv 59E2                                       ___llmod 7446  
                             __size_of_cmdMac 004C                        __size_of_SYS_TimerInit 000C  
                                     ___lomod 646C                                    cmdSetTX@p1 007A  
                                  cmdSetTX@p2 0078                         nwkRxIndicateFrame@ind 00C9  
                   __end_of_UART1_Receive_ISR 6C62                                     ?_vfprintf 004E  
                                  cmdSend@cmd 0076                                       cad@temp 0014  
                        __size_of_PHY_DataInd 012C                      __end_of_processATCommand 3EDA  
                        __size_of_PHY_DataReq 005C                                       _cmdAddr 89EC  
                           cmdSetCADRSSI@temp 007F                                       _aes_key 0224  
                                     _cmdRecv 8D72                                    _current_sf 00EC  
                             _start_radio_cad 8C2A                                       _cmdSend 2838  
                                     _channel 00EB                                       __pcinit 5C74  
                             __size_of_memcpy 0072                               __size_of_memset 0154  
                                     __ramtop 1000                     __end_of_CRC_8BitDataWrite 8C2A  
                 __size_of_UART1_Transmit_ISR 003A                       __size_of_PHY_SetChannel 003E  
                              ??_nwkFrameFree 0004                                       __ptext0 8750  
                                     __ptext1 3D60                                       __ptext2 7B30  
                                     __ptext3 82D4                                       __ptext4 849E  
                                     __ptext5 78B0                                       __ptext6 5468  
                                     __ptext7 00B2                                       __ptext8 8C48  
                                     __ptext9 8C56                                ??_nwkFrameInit 0002  
                              ??_nwkFrameNext 0004                               __size_of_printf 0022  
                                     _get_lqi 6A92                      SPI1_WriteBlock@blockSize 0005  
                                     _fhssReg 0500                             __end_of_initRadio 430C  
                                     cmdMac@i 0077                               __CFG_WRTAPP$OFF 000000  
                             __size_of_strchr 0084                               __size_of_strlen 0050  
                                  ??_cmdBcast 0078                               __size_of_strtok 00DC  
                             __size_of_strspn 0060                               __size_of_strtol 003E  
                             __size_of_strstr 00D8                                    ??_cmdGetSF 005E  
                                  ??_cmdGetTX 005E                         _OSCILLATOR_Initialize 8B4C  
                               ?_nwkRouteInit 0001                                 ??_cmdSetNaddr 005E  
                                __size_of_cad 00C0                                  __size_of_abs 003E  
                                  ??_cmdNaddr 005E                                    _placeTimer 38B6  
                                __size_of_pad 00B6                                       _isalpha 85DE  
                                     _isdigit 8612                                 ??_cmdSendSink 0004  
                                  ??_cmdSetSF 005E                                    ??___xxtofl 0006  
                          _NWK_RouteFindEntry 7664                                       _net_key 0214  
                                  ??_cmdSetTX 005E                                       _receive 81E0  
                                  ??_cmdReset 0002                      nwkFrameCommandInit@frame 0002  
        ??strspn@nwkFrame@nwkFramePayloadSize 0004           ?strspn@nwkFrame@nwkFramePayloadSize 0002  
                             _radio_state_var 0164                                       _islower 8576  
                    ??_PIN_MANAGER_Initialize 0002                                       _isspace 7FA2  
                             __CFG_WRTSAF$OFF 000000                                   ?_cmdGetRFCH 0001  
                                     _isupper 85AA                                ?_cmdGetCADRSSI 0001  
                           ?_executeATCommand 00A4                                 ??_appDataConf 0009  
           __size_of_nwkRxHandleReceivedFrame 036E                          __end_of_radio_engine 4CF2  
                                 ?_cmdGetMode 0001                     ?_nwkRxHandleReceivedFrame 0029  
                                     _uartmsg 0148                                       atoi@neg 000F  
                        ?_nwkDataReqSendFrame 002A                                 ?_PHY_SetPanId 0002  
                          _NWK_RouteFreeEntry 84D4                       __size_of_PHY_SetRxState 0008  
                                     _tx_done 00F1                    __size_of_SYSTEM_Initialize 0022  
                          ??_executeATCommand 00A6                                       _strcspn 77F0  
                                     _strncmp 4E14                                       _toupper 7BD8  
                                  ??_get_rssi 0002                           SYS_TimerStart@timer 0010  
                        end_of_initialization 5D44                           ?_NWK_RouteFindEntry 0002  
                                     _strtoul 7E4A                                   ?_cmdSetRFCH 0076  
                                   _SCANHADRH 00397A                                     _SCANHADRL 003979  
                                   _SCANHADRU 00397B                           __implicitHeaderMode 016C  
                              ??_nwkGroupInit 0002                          __size_of_NWK_DataReq 0080  
           __end_of_DATAEE_WriteByte_Platform 7F1A                                   ?_cmdSetAddr 0076  
                                   _SCANLADRH 003977                                     _SCANLADRL 003976  
                                 ?_cmdSetBaud 003A                                     _SCANLADRU 003978  
        nwkRxDuplicateRejectionTimerHandler@i 0015                                   ?_cmdSetSink 0001  
                           queueLedEvent@temp 001F                                ___omul@product 0012  
                       ??_nwkRxServiceDataInd 0077                                       memcpy@d 000F  
                                     memcpy@n 000C                                       memcpy@s 0011  
                                     fputc@fp 0006                                   ?_appDataInd 0076  
                                     memset@c 0004                                       memset@k 000A  
                                     memset@n 0006                                       memset@s 000C  
         __end_of_UART1_SetTxInterruptHandler 8CC6                   _UART1_SetTxInterruptHandler 8CB8  
                                     fputs@fp 000F                                     i1u1264_28 8998  
                 CRC_CalculatedResultGet@mask 000E                           ?_NWK_RouteFreeEntry 0002  
                           __end_of_nwkRxInit 7E00                            _nwkRxIndicateFrame 30E8  
                 nwkTxDelayTimerHandler@frame 0017                             __end_of_nwkTxInit 8028  
                                  _setTxPower 8726                                     i2u1270_48 6C20  
                                   i2u1270_49 6C32                                     i2u1272_48 6C48  
                                   i2u1274_48 89BA                         NWK_RouteNewEntry@iter 0007  
                         nwkRxSendAck@command 002C                                     i2u1268_48 6BF4  
                                   i2u1276_48 89DA                   nwkTxDelayTimerHandler@timer 0012  
                                   i2u1268_49 6C06                                    ??_sendInfo 005E  
                        __size_of_NWK_SetAddr 001E                ??_UART1_SetOverrunErrorHandler 0004  
                             ___lldiv@divisor 001A                               ___lldiv@counter 0022  
                 __end_of_CircularBufferSpace 84D4                                ??_PHY_DataConf 0005  
                              ??_nwkRxSendAck 002C                                ??_nwkTxConfirm 0005  
                    ??_nwkRouteNormalizeRanks 0002                             __end_of_vfpfcnvrt 0B30  
                                  _nwkTxFrame 3BE0                                    _set_parity 7850  
                                   _SPI1TCNTL 003D12                           ?_nwkRxIndicateFrame 00BB  
                 __size_of_implicitHeaderMode 0018                                       postdec1 003FE5  
                                     postdec2 003FDD                                     _SPI1SSPPS 003AE0  
                               _cmdSetCADRSSI 67F2                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                       nwkDataReqTxConf@frame 0004                          ??_NWK_RouteFindEntry 0005  
                      __size_of_Timer0Handler 0052                                    ??_vfprintf 0053  
                   __size_of_nwkDataReqTxConf 00A8                                       strchr@c 0004  
                           UART1_Write@txData 0002                           _UART1_RxDataHandler 8836  
                                     strchr@s 0002                         __CFG_WDTCPS$WDTCPS_31 000000  
                  __end_of_getSignalBandwidth 4E14                                       strlen@a 0004  
                           initRadio@wideRSSI 0038                    __end_of_setSignalBandwidth 1324  
                                     strlen@s 0002                         nwkTxTaskHandler@frame 0016  
                    ?_CRC_CalculatedResultGet 0009                             ?_nwkRxTaskHandler 0001  
                  nwkRxHandleIndication@frame 00D5                                       strspn@c 000A  
                                     strspn@i 000D                                       strtok@p 0157  
                                     strtok@s 000F                                       strtol@s 0034  
                                     strspn@s 0008                                       strstr@h 000D  
                    _TMR0_SetInterruptHandler 8CFE                                       strstr@n 000F  
                                   _PORTBbits 003FCB                          ??_NWK_RouteFreeEntry 0004  
                         __end_of_cmdGetRxCnt 8D78                                ??_nwkRouteInit 0002  
                           ??_print_hop_table 005E                           __end_of_cmdBootLoad 8348  
                          ??_nwkRxTaskHandler 01FC                                    _test_timer 01FA  
                                 ___fladd@grs 0038                        _queue_serial_led_event 7B30  
                              cmdSetRFCH@temp 007F                         setFrequency@frequency 0023  
                               ___xxtofl@sign 000A                           SPI1_ReadBlock@block 0003  
                                   _TRISBbits 003FC3                                ??_PHY_SetPanId 0004  
                       ??_nwkDataReqSendFrame 002C                                  strtol@endptr 0035  
                       __end_of_queueLedEvent 830E                          ??_nwkRxIndicateFrame 00BD  
                         _nwkFrameCommandInit 8068                                 ?_NWK_SetPanId 0004  
                           placeTimer@timeout 0008                         nwkRxRejectDuplicate@i 0019  
                     nwkTxAckReceived@command 000B                                 _SYS_TimerInit 8D18  
                            __CFG_FEXTOSC$OFF 000000                      __end_of_DATAEE_WriteByte 8068  
                         __end_of_cmdSetNaddr 73D4                          ?_UART1_RxDataHandler 0001  
                            ?_PHY_TaskHandler 0001                           __end_of_cmdSendSink 8D72  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                                   ___flmul@grs 001E  
                     _nwkRxIndicateFrame$5152 00C1                       _nwkRxIndicateFrame$5153 00C2  
                     _nwkRxIndicateFrame$5154 00C3                       _nwkRxIndicateFrame$5155 00C4  
                     _nwkRxIndicateFrame$5156 00C5                       _nwkRxIndicateFrame$5157 00C6  
                         __end_of_appDataConf 88C0                __size_of_nwkRouteErrorReceived 005C  
                       setSignalBandwidth@sbw 0023                               _SPI1_Initialize 8B02  
               __end_of_nwkRouteErrorReceived 7A82                              ??_free_tx_buffer 0004  
                           _nwkTxAckWaitTimer 01A2                             get_rssi@temp_rssi 0003  
                    ??_nwkTxDelayTimerHandler 0014                       __end_of_start_radio_cad 8C3A  
                      ??_nwkRxRejectDuplicate 0014                    __size_of_nwkDataReqConfirm 00E8  
                        _timer0ReloadVal16bit 01E7                                ?_cmdSetCADRSSI 0076  
                         __size_of_cmdGetRFCH 001C                         CircularBufferSize@ctx 0002  
                        ?_nwkFrameCommandInit 0002                      __end_of_CRC_ReverseValue 7ADA  
                         __size_of_cmdGetMode 000E                    __size_of_SX1276WriteBuffer 0024  
                           ?_SX1276ReadBuffer 0009                                _set_timer0base 894A  
                __end_of_INTERRUPT_Initialize 80E8                       queue_serial_led_event@i 0022  
                     nwkRouteRemove@multicast 000A                              _PHY_SetShortAddr 8D7A  
                              __end_of___flge 5FC0                    __size_of_UART1_Receive_ISR 0098  
                        __end_of_setFrequency 4BCC                                __end_of___lmul 796C  
                              __end_of___omul 6BCA                                   vfpfcnvrt@ap 0049  
                                 vfpfcnvrt@cp 0069                                   vfpfcnvrt@fp 0046  
                                 vfpfcnvrt@ll 0060                                __end_of___wmul 86A6  
                            ??_nwkDataReqInit 0002                                __end_of_cmdMac 7DB4  
                          ??_SX1276ReadBuffer 000C                        __size_of_nwkFrameAlloc 00B4  
                         __size_of_cmdSetRFCH 00A0               CircularBufferPushBack@write_pos 001A  
                           __size_of_TMR0_ISR 0022                    __size_of_CRC_8BitDataWrite 0010  
                         __size_of_cmdSetAddr 0092                           __size_of_cmdSetBaud 006C  
                           __size_of_PHY_Init 0006                                __end_of_memcpy 7446  
                      ?_OSCILLATOR_Initialize 0001                           __size_of_cmdSetSink 000E  
                              __end_of_memset 45B8                     __size_of_nwkTxAckReceived 00C0  
                              SX1276Read@addr 000D                               setFrequency@num 002B  
                              SX1276Read@data 000E                           __size_of_appDataInd 0082  
                          NWK_RouteNewEntry@i 0006                             __size_of_NWK_Init 0056  
                           ??_NWK_TaskHandler 005E                                __end_of_printf 889E  
                         _nwkTxBroadcastFrame 46FE                                 ??_loadMACAddr 0006  
                             ??_cmdGetCADRSSI 005E                                   ?_placeTimer 0002  
                              __end_of_strchr 7150                                __end_of_strlen 7CCC  
                              __end_of_strtok 5B9C                                __end_of_strspn 77F0  
                              __end_of_strtol 8126                                __end_of_strstr 5C74  
                         start_initialization 5C74                               ___lodiv@divisor 000A  
                             ___lodiv@counter 001A                      __size_of_TMR0_Initialize 003E  
                       _nwkTxConvertPhyStatus 83F6               __size_of_PIN_MANAGER_Initialize 0088  
                           cmdSetAES@key_type 009F                                ??_NWK_SetPanId 0006  
                                 __end_of_cad 63AC                                   __end_of_abs 81E0  
                               nwkFrameInit@i 0002                                   __end_of_pad 65E0  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0004  
                              ?_SYS_TimerInit 0001                         _nwkRouteFrameReceived 36D4  
                     __size_of_CRC_Initialize 006C                       ?_nwkRouteSendRouteError 002A  
                    __size_of_SYS_TaskHandler 000E                             __size_of_SYS_Init 000E  
                       ??_UART1_RxDataHandler 0001                                 _Timer0Handler 7C2A  
                                 putch@txData 0003                                    ivt0x8_base 0008  
               __size_of_SYS_TimerTaskHandler 011A                       NWK_RouteFreeEntry@entry 0002  
                           ?_SYS_TimerStarted 0002                                _nwkRouteRemove 8298  
                               _uart1RxBuffer 0138                                  _msgIDCounter 00F2  
                 __end_of_bootLoadApplication 2838                            ??_SYS_TimerStarted 0004  
                           ___omul@multiplier 0002                                 _uart1TxBuffer 0300  
                            _NWK_OpenEndpoint 896A                               ___llmod@divisor 0006  
                        __end_of_nwkFrameFree 8AB4                          __end_of_nwkFrameInit 88E2  
                   __size_of_DIO0_Receive_ISR 0096                                   ?_setTxPower 0001  
                        __end_of_nwkFrameNext 6FBA                          ?_nwkTxBroadcastFrame 0024  
                             ___llmod@counter 000A                           DATAEE_ReadByte@bAdd 0002  
                              cmdSetNaddr@cmd 0076                        nwkRouteFrameSent@frame 0008  
                               crc16_app@dptr 0013                        nwkRouteFrameSent@entry 000C  
                               crc16_app@seed 0017                              __CFG_LPBOREN$OFF 000000  
                           _nwkRouteFrameSent 564E                        __end_of_set_timer0base 896A  
                                 ___strtoxl@a 002D                                   ___strtoxl@c 0033  
                                 ___strtoxl@s 0010                         ??_nwkFrameCommandInit 0004  
                             NWK_SetAddr@addr 0004                                   vfprintf@fmt 0050  
                                 ?_nwkTxFrame 0024                             nwkRouteRemove@dst 0008  
                                 ?_set_parity 0001               __end_of_CRC_CalculatedResultGet 5EF0  
                                    ??___flge 0018                 nwkTxDelayTimerHandler@restart 0016  
                            ??_PMD_Initialize 0002               __size_of_nwkRouteNormalizeRanks 003A  
                                    ??___lmul 000A                                      ??___omul 0012  
                                 _cmdGetRxCnt 8D76                                      ??___wmul 0006  
             CRC_CalculatedResultGet@xorValue 0009                                      ??_cmdMac 0076  
                          ?_nwkRouteFrameSent 0008                                   _cmdBootLoad 830E  
                    _nwkTxAckWaitTimerHandler 6D8A                               ___strtoxl@limit 0027  
                      __size_of_TMR0_CallBack 0020                             NWK_SetPanId@panId 0004  
                                cmdSetAES@cmd 0076                                   __pdataBANK0 00F9  
                                 __pdataBANK1 01EE                                   __pdataBANK2 02CA  
                       CRC_8BitDataWrite@data 0002                                      ??_memcpy 000E  
                           SYS_TimerStarted@t 0004                                      ??_memset 0008  
                              cmdSendSink@cmd 0002                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 8126                          __end_of_nwkGroupInit 87EE  
                                  memset@dest 0002                                      ??_printf 005B  
                         __size_of_computeFRF 018A                             ?_nwkTxTaskHandler 0001  
                              _uart_baud_rate 0173                                      ??_strchr 0006  
                       __size_of_radio_engine 0126                                      ??_strlen 0004  
                                    ??_strtok 0013                                      ??_strtol 0038  
                                    ??_strspn 000C                                      ??_strstr 0011  
                         ??_nwkRouteFrameSent 000A                                     ___fladd@a 002D  
                                   ___fladd@b 0029                                  cmdSetRFCH@p1 0078  
                                cmdSetRFCH@p2 007D                         PHY_SetChannel@channel 002F  
                              _symbolDuration 014E                                   __pbssBIGRAM 05BD  
                          ??_nwkTxTaskHandler 0014                                   _cmdSetNaddr 7358  
                                   ___flmul@a 0014                                     ___flmul@b 0010  
                                 __pbssCOMRAM 005E                                set_uart_baud@i 0004  
                                 _cmdSendSink 8D70                              ??_SPI1_ReadBlock 0007  
                          _UART1_ErrorHandler 01DF                                 __pcstackBANK0 0060  
                               __pcstackBANK1 01FC                                  cmdSetSF@temp 007F  
              __end_of_nwkRouteSendRouteError 59E2                       nwkRoutePrepareTx@header 0011  
                        setSpreadingFactor@sf 002B                              ___aodiv@dividend 0002  
                           __size_of_cmdBcast 0200                             __size_of_cmdGetSF 0016  
                                 _CRCCON0bits 003968                                   _CRCCON1bits 003969  
                           __size_of_cmdGetTX 0016                     bootLoadApplication@buf_id 0032  
                                cmdSetAddr@p1 007A                                  cmdSetAddr@p2 0078  
                       _nwkDataReqTaskHandler 7256                           cmdSetBaud@atCommand 003A  
                                   _crc16_app 7150                             __size_of_cmdNaddr 0016  
                        __end_of_PHY_DataConf 8382                                _PHY_SetRxState 8D44  
                        __end_of_nwkRxSendAck 5468                                   _appDataConf 889E  
                        __end_of_nwkTxConfirm 8812                                  cmdSetTTL@cmd 0002  
                           __size_of___xxtofl 0164                             __size_of_cmdSetSF 00AE  
                           __size_of_cmdSetTX 00E0                                ?_Timer0Handler 0001  
                     __end_of_SPI1_Initialize 8B1C                      _UART1_RxInterruptHandler 01EB  
                           __size_of_cmdReset 0004                        __end_of_nwkRouteRemove 82D4  
               nwkRxHandleReceivedFrame@frame 0029                   __size_of_get_free_tx_buffer 0062  
                     nwkRxIndicateFrame@frame 00BB                   __size_of_getSpreadingFactor 001A  
                   SYS_TimerTaskHandler@timer 0022                   __size_of_setSpreadingFactor 0102  
                                cmdSetTX@temp 007C                   ??_DATAEE_WriteByte_Platform 0009  
                         __end_of_loadMACAddr 8298             __size_of_DATAEE_ReadByte_Platform 00F2  
                     CRC_ReverseValue@reverse 0005                               _SPI1_WriteBlock 8540  
                                   _atCommand 0234                     ?_DATAEE_ReadByte_Platform 0006  
                                _currentAddr0 00FC                                  _currentAddr1 00FB  
                               _nwkFrameAlloc 65E0                                     _cmdGetCAD 8BA6  
                               setSyncWord@sw 0011                             _nwkRoutePrepareTx 515C  
                         _nwkTxPhyActiveFrame 015B                                  _currentNetID 00FA  
                                   _cmdGetTTL 8D74                                     ___strtoxl 0B30  
                                _currentMsgID 0170                             __size_of_get_rssi 002A  
                       ??_nwkTxBroadcastFrame 0026                       ?_CircularBufferPushBack 0013  
                                   _cmdSetAES 32E8                  ?_UART1_SetRxInterruptHandler 0002  
             nwkRouteSendRouteError@multicast 002E                                     _cmdSetTTL 8D6E  
                       _TMR0_InterruptHandler 01E5                            ?_nwkRoutePrepareTx 000D  
                   __end_of_nwkRouteFrameSent 573A                                     _atoi$7702 0011  
                                   _atoi$7703 0015                                     _atoi$7704 0013  
                                   _cmdRstCAD 8BD2                                     __pnvBANK1 01DF  
                        __end_of_nwkRouteInit 7D68                               ??_cmdSetCADRSSI 005E  
                              _ATTimeoutTimer 00FD                           __size_of_placeTimer 01A0  
                      _PIN_MANAGER_Initialize 7044                                     _dtoa$7199 0031  
                            ?_start_radio_cad 0001                               ?_set_timer0base 0002  
             __size_of_nwkTxDelayTimerHandler 008C                             ?_UART1_Initialize 0001  
                   __size_of_NWK_RouteNextHop 004A          __end_of_UART1_SetFramingErrorHandler 8CF0  
       __size_of_UART1_SetFramingErrorHandler 000E                  _UART1_SetFramingErrorHandler 8CE2  
                           __size_of_sendInfo 005E                                  _radio_engine 4BCC  
                        __end_of_PHY_SetPanId 8D7A                                 __pmediumconst FCC8  
                                   _enableCrc 8BE6                                      ?___aodiv 0002  
                                    ?___fladd 0029                                      ?___aomod 0002  
                         UART1_Read@readValue 0002                           ??_nwkRoutePrepareTx 000F  
                                   __ptext100 694A                                     __ptext101 79CA  
                               nwkGroupInit@i 0002                                     __ptext110 36D4  
                                   __ptext102 8D0C                              ___aodiv@quotient 0014  
                                   __ptext111 6224                                     __ptext103 6694  
                                   __ptext200 896A                                     __ptext120 7A26  
                                   __ptext112 5FC0                                     __ptext104 16A8  
                                   __ptext201 7D1A                                     __ptext121 8298  
                                   __ptext113 536C                                     __ptext105 46FE  
                                   __ptext210 8CE2                                     __ptext202 87C8  
                                   __ptext130 85DE                                     __ptext122 84D4  
                                   __ptext114 30E8                                     __ptext106 2AA2  
                                   __ptext211 8CF0                                     __ptext203 88C0  
                                   __ptext131 2CD4                                     __ptext123 887C  
                                   __ptext115 86FC                                     __ptext107 8778  
                                   __ptext220 8928                                     __ptext212 821E  
                                   __ptext204 8D24                                     __ptext140 8D3A  
                                   __ptext132 646C                                     __ptext124 772E  
                                   __ptext116 71D4                                     __ptext108 38B6  
                                   __ptext221 898A                                     __ptext213 8CFE  
                                   __ptext205 88E2                                     __ptext141 7F5E  
                                   __ptext133 59E2                                     __ptext125 0640  
                                   __ptext117 7520                                     __ptext109 7F1A  
                                   __ptext230 8D84                                     __ptext222 8D7C  
                                   __ptext214 8B02                                     __ptext206 68A0  
                                   __ptext150 5902                                     __ptext142 81A2  
                                   __ptext134 45B8                                     __ptext126 2340  
                                   __ptext118 63AC                                     __ptext231 8D64  
                                   __ptext223 7C2A                                     __ptext215 8904  
                                   __ptext207 8CB8                                     __ptext151 8068  
                                   __ptext143 4842                                     __ptext135 2090  
                                   __ptext127 7BD8                                     __ptext119 6F30  
                                   __ptext232 8836                                     __ptext224 8D80  
                                   __ptext216 7044                                     __ptext208 8CC6  
                                   __ptext160 7664                                     __ptext152 8A9A  
                                   __ptext144 430C                                     __ptext136 652A  
                                   __ptext128 8576                                     __ptext233 0000  
                                   __ptext225 89AC                                     __ptext217 8B4C  
                                   __ptext209 8CD4                                     __ptext161 8646  
                                   __ptext153 7256                                     __ptext145 3EDA  
                                   __ptext137 7C7C                                     __ptext129 85AA  
                                   __ptext226 83BC                                     __ptext218 80A8  
                                   __ptext170 8D5E                                     __ptext162 65E0  
                                   __ptext154 1D5E                                     __ptext146 7FA2  
                                   __ptext138 8164                                     __ptext227 89CC  
                                   __ptext219 75F8                                     __ptext171 41AE  
                                   __ptext163 4464                                     __ptext155 3BE0  
                                   __ptext147 8612                                     __ptext139 758C  
                                   __ptext228 6BCA                                     __ptext180 8ACE  
                                   __ptext172 842E                                     __ptext164 73D4  
                                   __ptext156 504E                                     __ptext148 8678  
                                   __ptext229 8D82                                     __ptext181 4AA2  
                                   __ptext173 8726                                     __ptext165 573A  
                                   __ptext157 6B30                                     __ptext149 5D4A  
                                   __ptext190 8BBC                                     __ptext182 850A  
                                   __ptext174 526A                                     __ptext166 889E  
                                   __ptext158 515C                                     __ptext191 87A0  
                                   __ptext183 81E0                                     __ptext175 0F5E  
                                   __ptext167 7CCC                                     __ptext159 7E00  
                                   __ptext192 8466                                     __ptext184 8B1C  
                                   __ptext176 8AB4                                     __ptext168 8CAA  
                                   __ptext193 8AE8                                     __ptext185 8B34  
                                   __ptext177 4CF2                                     __ptext169 8D18  
                                   __ptext194 3A56                                     __ptext186 8BE6  
                                   __ptext178 404A                                     __ptext195 7446  
                                   __ptext187 8BF8                                     __ptext179 5EF0  
                                   __ptext196 6FBA                                     __ptext188 8812  
                                   __ptext197 7ADA                                     __ptext189 8540  
                      __end_of_PHY_SetChannel 8164                                     __ptext198 7FE6  
                      __size_of_set_uart_baud 00CC                                     __ptext199 7DB4  
                                    ?___flmul 0010                                      ?___fltol 0039  
                                    ?___lldiv 0016                                      ?___lodiv 0002  
                                    ?___llmod 0002                                      ?___lomod 0002  
                          ??_UART1_Initialize 0004                              _nwkDataReqTxConf 694A  
                                    ?_cmdAddr 0001                         NWK_RouteNextHop@entry 000B  
                                    ?_cmdRecv 0001                                      ?_cmdSend 0076  
                            _uart1RxLastError 0162                             ?_processATCommand 0001  
                               ??_UART1_Write 0002                             __size_of_vfprintf 0062  
                                    ?_get_lqi 0001                        __size_of_nwkRouteFrame 00D6  
                          ??_processATCommand 00A9                               ___lomod@divisor 000A  
                      __CFG_BBSIZE$BBSIZE_512 000000                         _nwkRxHandleIndication 5FC0  
                                   _fhssdebug 0166                               ___lomod@counter 0012  
    __end_of_UART1_DefaultOverrunErrorHandler 8D84     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 8D82                                      ?_isalpha 0002  
                                    ?_isdigit 0002                           __size_of_setTxPower 002A  
                      ?_nwkTxConvertPhyStatus 0001                        __end_of_PHY_SetRxState 8D4C  
                                    ?_receive 0001                               ??_SYS_TimerInit 0002  
                                ??_cmdGetRFCH 005E                                      ?_islower 0002  
                                    ?_isspace 0002                                      ?_isupper 0002  
                      ?_nwkRouteFrameReceived 000B                           __end_of_SX1276Write 8C0A  
                                ??_cmdGetMode 005E                        _nwkRouteNormalizeRanks 8382  
                                   _initRadio 41AE                                    ?_crc16_app 0013  
                       DIA_ReadByte@flashAddr 0002                                     cmdSend@p1 0083  
                                   cmdSend@p2 0081                           __size_of_nwkTxFrame 0180  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                         __size_of_set_parity 0060                                 _TMR0_CallBack 898A  
                   __end_of_nwkRoutePrepareTx 526A                                __size_of_fputc 006C  
                              __size_of_fputs 003E                     nwkRxRejectDuplicate@shift 0018  
                                    ?_strcspn 0008                      __size_of_DATAEE_ReadByte 001E  
                                    ?_strncmp 0002                                      ?_toupper 0008  
                                 _U1ERRIRbits 003DF9                                  ??_cmdSetRFCH 005E  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                                    ?_strtoul 0034                                __size_of_putch 000A  
                                ??_cmdSetAddr 005E                                  ??_cmdSetBaud 003C  
                        _INTERRUPT_Initialize 80A8                                      _U1CTSPPS 003AE6  
                            __cadBackoffTimer 00F7                __end_of_CircularBufferPushBack 555C  
                                ??_cmdSetSink 005E                                    ?_cmdGetCAD 0001  
                        SX1276ReadBuffer@addr 000C                           ___strtoxl@conv_done 0026  
                                  ?_cmdGetTTL 0001                                    ?___strtoxl 0010  
                                ??_appDataInd 005E                                    nwkRxInit@i 0005  
                           ??_TMR0_Initialize 0004                       __size_of_get_timer0base 002C  
                        SX1276ReadBuffer@size 000B                                 ??_setSyncWord 0011  
                           free_tx_buffer@req 0002                                ___wmul@product 0006  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0002  
                                    _LATCbits 003FBC      nwkRxDuplicateRejectionTimerHandler@timer 0012  
                 __size_of_explicitHeaderMode 0018                                    ?_cmdSetAES 0076  
                                    _SCANCON0 00397C                                      _EUIDbyte 01BC  
                                  ?_cmdSetTTL 0002                                   _ledTimerVar 015D  
                           ??_SYS_TaskHandler 005E                                    ?_cmdRstCAD 0001  
                                    _IPR3bits 003983                                      _SCANTRIG 00397D  
                                    _PIE3bits 003993                                appDataConf@req 0007  
                              appDataInd@data 0077                            cmdSetAddr@tempaddr 007C  
                         __CFG_BORV$VBOR_2P45 000000                                   _ledStateVar 0163  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                             _NWK_RouteNewEntry 6224  
                                   _sinkAddr0 016F                                     _sinkAddr1 016E  
               ??_UART1_SetRxInterruptHandler 0004                         __size_of_setFrequency 012A  
                   __size_of_executeATCommand 058E                    ??_TMR0_SetInterruptHandler 0004  
                                    _PIR0bits 0039A0                                     _nwkGroups 0200  
                  __end_of_CircularBufferSize 790E                   nwkRouteFrameReceived@header 0015  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                               ??_PHY_DataInd 0014                                     _nwkRxInit 7DB4  
                               ??_PHY_DataReq 0014                               _print_hop_table 8C56  
                                   _nwkTxInit 7FE6                           ___strtoxl@is_signed 0016  
                          ?_NWK_RouteNewEntry 0002                       _eeprom_write_flags_enum 0174  
                              _ATVersionMajor FDD6                          __end_of_NWK_SetPanId 8A28  
                                  ?_enableCrc 0001                                _ATVersionMinor FDD5  
                     _setSignalBandwidth$8635 002B                            __end_of_cmdGetRFCH 8A80  
                                    _TMR0_ISR 8928                     _DATAEE_WriteByte_Platform 7ED6  
                             ?_PHY_SetChannel 0001                    __end_of_UART1_Transmit_ISR 83F6  
                          __end_of_cmdGetMode 8C80                                      _PHY_Init 8D5E  
               ?_UART1_SetFramingErrorHandler 0002                              initRadio@version 0037  
                                   _vfpfcnvrt 0640                                      _NWK_Init 7ADA  
                                 cmdBcast@cmd 0076                                     _txTimeOut 00F3  
                          SPI1_ReadBlock@data 0007                       ?_queue_serial_led_event 0001  
                                   _xtoa$7227 0032                                     _xtoa$7228 0034  
                          NWK_GroupIsMember@i 0006                            __end_of_cmdSetRFCH 6A92  
                        free_tx_buffer@buf_id 0006                           ??_NWK_RouteNewEntry 0004  
                           ___wmul@multiplier 0002                              _nwkTxAckReceived 63AC  
                          __end_of_cmdSetAddr 6D8A                          getSignalBandwidth@bw 0015  
                          __end_of_cmdSetBaud 7520             nwkRxHandleReceivedFrame@broadcast 002D  
                          __end_of_cmdSetSink 8C72                        nwkDataReqSendFrame@req 002A  
                                   _tx_buffer 086A                            __end_of_appDataInd 7256  
                        setSignalBandwidth@bw 002F                                   _loadMACAddr 825C  
                             ?_PHY_SetRxState 0001                        ?_nwkDataReqTaskHandler 0001  
                     __end_of_SPI1_WriteBlock 8576                               ??_Timer0Handler 0001  
                      _nwkTxDelayTimerHandler 6E1A                                      _SYS_Init 8CAA  
                         __end_of_UART1_Write 7FA2                         DATAEE_WriteByte@bData 0004  
                               ??_NWK_DataReq 0004                   __end_of_nwkRxServiceDataInd 758C  
                                  ?_initRadio 0001                                  _isspace$7729 0008  
                              _CRC_Initialize 75F8                                ?_TMR0_CallBack 0001  
                                 strtoul@base 0038                                 _set_uart_baud 608E  
                                  vfpfcnvrt@c 0068                              ?_SPI1_Initialize 0001  
                          _getSignalBandwidth 4CF2                            _setSignalBandwidth 0F5E  
                                 _INTCON0bits 003FD2                             ___lmul@multiplier 0002  
                       __size_of_nwkFrameFree 001A                                     copy_data0 5C88  
                                   copy_data1 5CAA                                     copy_data2 5CCC  
                       __size_of_nwkFrameInit 0022                         ?_INTERRUPT_Initialize 0001  
                            get_rssi@rssi_reg 0002                         __size_of_nwkFrameNext 008A  
                 nwkDataReqSendFrame@mcHeader 002D              __size_of_CRC_CalculatedResultGet 00D0  
                    __end_of_PHY_SetShortAddr 8D7C                                  ??_computeFRF 0023  
               nwkRxRejectDuplicate@freeEntry 001B                             ?_DATAEE_WriteByte 0002  
                                _setFrequency 4AA2                     __size_of_nwkRxTaskHandler 00B0  
                               ??_NWK_SetAddr 0006                        _uart1TxBufferRemaining 01ED  
                              ___strtoxl$7890 001F                                ___strtoxl$7891 0025  
                              ___strtoxl$7892 0021                                ___strtoxl$7893 0023  
                _nwkRxDuplicateRejectionTable 03C0                  _nwkRxDuplicateRejectionTimer 01AF  
                   __end_of_NWK_RouteNewEntry 62EC                                 _nwkRouteFrame 5D4A  
                          ??_DATAEE_WriteByte 0005                                   _ledtasksbuf 01C8  
                            _DIO0_Receive_ISR 6C62                                 _nwkRouteTable 0284  
                         ?_getSignalBandwidth 000F                           ?_setSignalBandwidth 0023  
                  __size_of_nwkRouteFrameSent 00EC                                 ?_cmdSetParity 0076  
                                _uart1RxCount 00E6                    __end_of_implicitHeaderMode 8B34  
                                    __Hrparam 0000                        __end_of_ATVersionMajor FDD7  
                      __end_of_ATVersionMinor FDD6                             computeFRF@num_mod 0027  
                                   memcpy@tmp 000E                                    ?_nwkRxInit 0001  
                                  vfprintf@ap 0052                                      __Lrparam 0000  
                                  vfprintf@fp 004E                                    ?_nwkTxInit 0001  
                             _NWK_TaskHandler 8C9C                         __size_of_nwkGroupInit 0026  
                          __CFG_BOREN$SBORDIS 000000                                ___strtoxl@base 0014  
                             _nwkRxAckControl 0161                                   cmdSetAES@p1 00A1  
                                 cmdSetAES@p2 009A                           __end_of_setSyncWord 8C1A  
                              ___strtoxl@sign 002B                                ___strtoxl@skip 002C  
                          cmdSetCADRSSI@CHstr 007A                       ??_OSCILLATOR_Initialize 0002  
                           ?_CRC_ReverseValue 0002                       __size_of_setCodingRate4 0036  
                           appDataInd@dataptr 00B8                __end_of_queue_serial_led_event 7B84  
                            __size_of___aodiv 0158                              __size_of___fladd 0348  
                nwkRouteErrorReceived@command 000F                              __size_of___aomod 0134  
                 __size_of_NWK_RouteFindEntry 0068                              __size_of___flmul 0384  
                            __size_of___fltol 00CA                  DATAEE_ReadByte_Platform@addr 0006  
                            __size_of___lldiv 008A                              __size_of___lodiv 00DE  
                            __size_of___llmod 006E                      processATCommand@data_828 00AB  
                            __size_of___lomod 00BE                                    ?_vfpfcnvrt 0046  
                       SYS_TimerStarted@timer 0002                         nwkRxTaskHandler@frame 01FE  
                __size_of_CircularBufferSpace 0036                              __size_of_cmdAddr 001E  
                          ??_CRC_ReverseValue 0004   __end_of_nwkRxDuplicateRejectionTimerHandler 7BD8  
__size_of_nwkRxDuplicateRejectionTimerHandler 0054         ??_nwkRxDuplicateRejectionTimerHandler 0014  
        ?_nwkRxDuplicateRejectionTimerHandler 0012           _nwkRxDuplicateRejectionTimerHandler 7B84  
                      nwkRoutePrepareTx@frame 000D                               ___aodiv@divisor 000A  
                                 _SX1276Write 8BF8                           __end_of_PHY_DataInd 4AA2  
                      ?_nwkRxHandleIndication 00D5                           __end_of_PHY_DataReq 7A26  
                            __size_of_cmdRecv 0002                              __size_of_cmdSend 026A  
                 __end_of_nwkDataReqSendFrame 2090                           NWK_LinearizeLqi@val FDC5  
                             ___aodiv@counter 0012                                   cmdSetTX@cmd 0076  
                     __size_of_SYS_TimerStart 0028                          ??_getSignalBandwidth 0013  
                 __size_of_NWK_RouteFreeEntry 0036                      __end_of_NWK_OpenEndpoint 898A  
                        ??_setSignalBandwidth 0027                            __end_of_computeFRF 3BE0  
                       __size_of_PHY_DataConf 003A                         __size_of_nwkRxSendAck 00FC  
                       __size_of_nwkTxConfirm 0024                      _nwkRxHandleReceivedFrame 16A8  
                                    _cmdBcast 2EE8                                  _nwkFrameFree 8A9A  
        __size_of_UART1_SetRxInterruptHandler 000E                                  _nwkFrameInit 88C0  
                                    _cmdGetSF 8B90                                  ??_placeTimer 0004  
                                    _cmdGetTX 8B7A                                  _nwkFrameNext 6F30  
                            __size_of_get_lqi 009E                                   _currentMode 016D  
                                    _cmdNaddr 8B64                                      ___xxtofl 404A  
                                    _cmdSetSF 6744                        __end_of_CRC_Initialize 7664  
                                    _cmdSetTX 5822                                      _cmdReset 8D6A  
                           _set_hop_table_ttl 8C48                              __size_of_isalpha 0034  
                            __size_of_isdigit 0034                                      __pivt0x8 0008  
                            __size_of_receive 003E                   nwkRouteSendRouteError@frame 0031  
                                 ??_crc16_app 0019                              __size_of_islower 0034  
                              ?_set_uart_baud 0001                              __size_of_isspace 0044  
                               ?_DIA_ReadByte 0002                               ??_nwkFrameAlloc 0010  
                   __size_of_SX1276ReadBuffer 0028                                      __ptext10 5822  
                                    __ptext11 8D6E                                      __ptext20 74B4  
                                    __ptext12 8C64                                      __ptext21 5AC0  
                                    __ptext13 6744                                      __ptext30 790E  
                                    __ptext22 7790                                      __ptext14 69F2  
                                    __ptext31 8BD2                                      __ptext23 77F0  
                                    __ptext15 6EA6                                      __ptext40 8B90  
                                    __ptext32 8D6A                                      __ptext24 6CF8  
                                    __ptext16 7358                                      __ptext41 8D76  
                                    __ptext33 8D72                                      __ptext25 32E8  
                                    __ptext17 8C0A                                      __ptext50 70CC  
                                    __ptext42 8A64                                      __ptext34 8B64  
                                    __ptext26 8D70                                      __ptext18 67F2  
                                    __ptext51 76CC                                      __ptext43 8C72  
                                    __ptext35 7D68                                      __ptext27 2838  
                                    __ptext19 80E8                                      __ptext60 885A  
                                    __ptext52 72D8                                      __ptext44 8A80  
                                    __ptext36 8D52                                      __ptext28 7E4A  
                                    __ptext61 7150                                      __ptext53 89EC  
                                    __ptext45 8BA6                                      __ptext37 796C  
                                    __ptext29 0B30                                      __ptext70 8D7A  
                                    __ptext62 5E20                                      __ptext54 8C80  
                                    __ptext46 830E                                      __ptext38 8B7A  
                                    __ptext71 7ED6                                      __ptext63 7A82  
                                    __ptext55 7E90                                      __ptext47 2EE8  
                                    __ptext39 8D74                                      __ptext80 87EE  
                                    __ptext72 555C                                      __ptext64 8C1A  
                                    __ptext56 25C0                                      __ptext48 5B9C  
                                    __ptext81 8D58                                      __ptext73 8028  
                                    __ptext65 8D44                                      __ptext57 608E  
                                    __ptext49 4E14                                      __ptext90 86D2  
                                    __ptext82 4BCC                                      __ptext74 8A46  
                                    __ptext66 8126                                      __ptext58 7850  
                                    __ptext91 6A92                                      __ptext83 62EC  
                                    __ptext75 8C8E                                      __ptext67 8A0A  
                                    __ptext59 825C                                      __ptext92 615A  
                                    __ptext84 8C2A                                      __ptext76 4F34  
                                    __ptext68 8D78                                      __ptext93 1324  
                                    __ptext85 894A                                      __ptext77 6D8A  
                                    __ptext69 8A28                                      __ptext94 1A16  
                                    __ptext86 86A6                                      __ptext78 7B84  
                                    __ptext95 4976                                      __ptext87 8348  
                                    __ptext79 6E1A                                      __ptext96 8C9C  
                                    __ptext88 83F6                                      __ptext97 34E4  
                                    __ptext89 6C62                                      __ptext98 564E  
                                    __ptext99 8382                              __size_of_isupper 0034  
                          ?_set_hop_table_ttl 0076                   __size_of_nwkRxIndicateFrame 0200  
                                 appDataInd@i 00BA                    __size_of_nwkRoutePrepareTx 010E  
                        set_hop_table_ttl@cmd 0076                __size_of_UART1_SetErrorHandler 000E  
                                    _get_rssi 86D2                                      _fhssList FCC9  
               __end_of_UART1_SetErrorHandler 8CFE                         __size_of_nwkRouteInit 004E  
                 DATAEE_WriteByte@GIEBitValue 0005                                 nwkRouteInit@i 0002  
                            __size_of_strcspn 0060                              __size_of_strncmp 0120  
                            __size_of_toupper 0052                      nwkTxBroadcastFrame@frame 0024  
                                 ??_cmdGetCAD 005E                              __size_of_strtoul 0046  
                                    _ledtimer 01DD                                      _ledqueue 0400  
                                 ??_cmdGetTTL 0002                                   ??___strtoxl 0017  
                              ?_nwkRouteFrame 0033                       __end_of_print_hop_table 8C64  
                                _nwkGroupInit 87C8                               cmdSetCADRSSI@p1 0078  
                             cmdSetCADRSSI@p2 007D                                 __size_of_cmdI 0006  
                         __end_of_NWK_DataReq 7358                                 __size_of_idle 000C  
                               __size_of_atoi 0170                                 __size_of_main 0028  
                               __size_of_dtoa 02B0                           ??_set_hop_table_ttl 005E  
                               __size_of_rand 010E                                   ??_cmdSetAES 0078  
                  ??_nwkTxAckWaitTimerHandler 0014                                ??_cmdSetParity 005E  
                               __size_of_stoa 0146                                 __size_of_utoa 0214  
                                ??_setTxPower 0011                                   ??_cmdSetTTL 0004  
                               __size_of_xtoa 0280                         __size_of_PHY_SetPanId 0002  
                                 ??_cmdRstCAD 005E                               cmdSetAES@AESstr 007A  
        __end_of_TMR0_DefaultInterruptHandler 8D7E         __size_of_TMR0_DefaultInterruptHandler 0002  
                _TMR0_DefaultInterruptHandler 8D7C                             ??_DATAEE_ReadByte 0004  
                        __CFG_WDTCWS$WDTCWS_7 000000                           get_timer0base@timer 0002  
                                    _sendInfo 796C                 DATAEE_WriteByte_Platform@addr 0006  
                __end_of_FirmwareVersionMajor FDD5                 DATAEE_WriteByte_Platform@data 0008  
                                 _IVTLOCKbits 003FD4                            cmdSetBaud@tempbaud 003C  
                __end_of_FirmwareVersionMinor FDD4                           set_timer0base@timer 0002  
                       _nwkRouteErrorReceived 7A26                        SX1276ReadBuffer@buffer 0009  
                    __size_of_PHY_TaskHandler 0006              nwkRxHandleReceivedFrame@mcHeader 002F  
                                ??_nwkTxFrame 0026                    nwkRouteFrameReceived@frame 000B  
                         sendOKMessage@F16637 01F5                     _UART1_OverrunErrorHandler 01E1  
                         __end_of_NWK_SetAddr 8A46                            __end_of_placeTimer 3A56  
                                ??_set_parity 0002                              _NWK_RouteNextHop 7E00  
                                   stoa@F1139 01EE  UART1_SetOverrunErrorHandler@interruptHandler 0002  
                  nwkRouteFrameReceived@entry 0013            __size_of_UART1_DefaultErrorHandler 0006  
                                ?_cmdGetRxCnt 0002                                   ??_enableCrc 0011  
                                _PHY_DataConf 8348                                  _nwkRxSendAck 536C  
                                _nwkTxConfirm 87EE                  __end_of_SYS_TimerTaskHandler 504E  
                   __size_of_SYS_TimerStarted 0044                                  ?_cmdBootLoad 0001  
                  ?_UART1_DefaultErrorHandler 0001                        __size_of_queueLedEvent 003A  
                                  strtol@base 0036                 __size_of_nwkRxRejectDuplicate 0232  
                                    _vfprintf 772E                                     printf@fmt 0055  
               nwkTxAckWaitTimerHandler@frame 0017                             _UART1_is_rx_ready 8C80  
                       cmdSetParity@atCommand 0076                                      _syncList 02CA  
               nwkTxAckWaitTimerHandler@timer 0012                           setFrequency@num_mod 0027  
                                 _UART1_Write 7F5E              __end_of_DATAEE_ReadByte_Platform 564E  
                            ___aomod@dividend 0002                     __end_of_set_hop_table_ttl 8C56  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0004                   __end_of_UART1_RxDataHandler 885A  
                              _vfpfcnvrt$7242 006C                                  _nwkRouteInit 7D1A  
                                ?_cmdSetNaddr 0076                                   _uart1RxHead 005E  
                                ?_cmdSendSink 0002                     setCodingRate4@denominator 0013  
                             ?_CRC_Initialize 0001                                   _uart1TxHead 00E9  
                             ??_TMR0_CallBack 0001                                   _uart1RxTail 00E7  
                                 _NVMCON1bits 0039E5                                   _phyRxBuffer 0340  
                            ?_SPI1_WriteBlock 0003                                   _uart1TxTail 00E8  
                                    memcpy@d1 0008                            __end_of_setTxPower 8750  
                                    memcpy@s1 000A                                ??_DIA_ReadByte 0006  
                       __end_of_cmdGetCADRSSI 8A9A                                   ??_initRadio 0033  
                        SPI1_WriteBlock@block 0003                                  ?_appDataConf 0007  
                                    isalpha@c 0002                                      isdigit@c 0002  
                      ??_INTERRUPT_Initialize 0002                           DIO0_Receive_ISR@ind 0046  
                         ??_UART1_is_rx_ready 0002                                  _PHY_SetPanId 8D78  
                                  _SX1276Read 8BBC                            __end_of_nwkTxFrame 3D60  
                          __end_of_set_parity 78B0                      __end_of_nwkDataReqTxConf 69F2  
                                    intlevel1 0000                                      intlevel2 0000  
                   nwkRouteSendRouteError@dst 002C                     nwkRouteSendRouteError@src 002A  
                              _get_timer0base 86A6                     __size_of_nwkTxTaskHandler 01F0  
                      NWK_RouteNewEntry@entry 0009                       __end_of_NWK_TaskHandler 8CAA  
                                    islower@c 0002                              ??_set_timer0base 0006  
                                    isspace@c 0002                   __end_of_nwkFrameCommandInit 80A8  
                            ___lldiv@dividend 0016                       ?_PIN_MANAGER_Initialize 0001  
                  __size_of_NWK_RouteNewEntry 00C8                                   _setSyncWord 8C0A  
                           __CFG_CLKOUTEN$OFF 000000                         __size_of_NWK_SetPanId 001E  
                                    isupper@c 0002                                     strncmp@_l 0002  
                                   strncmp@_r 0004                              _executeATCommand 00B2  
                          get_timer0base@tval 0004                   NWK_RouteFindEntry@multicast 0004  
                      nwkRxServiceDataInd@ind 0076                            set_timer0base@tval 0004  
                     NWK_OpenEndpoint@handler 0002                           _uart1RxStatusBuffer 0128  
               ?_TMR0_DefaultInterruptHandler 0001                                   ??_nwkRxInit 0005  
                                 ??_nwkTxInit 0002                               _nwkTxDelayTimer 0195  
                           _setPreambleLength 8ACE                                   _PHY_DataInd 4976  
                                 _PHY_DataReq 79CA                          PHY_SetShortAddr@addr 0002  
                __size_of_bootLoadApplication 0278                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                                     strtok@sep 0011  
                                    printf@ap 005D                     __end_of_UART1_is_rx_ready 8C8E  
                                  _UART1_Read 7E90  UART1_SetFramingErrorHandler@interruptHandler 0002  
                          ?_setPreambleLength 0011             __end_of_UART1_DefaultErrorHandler 8D6A  
                             ___aomod@divisor 000A                      nwkRouteErrorReceived@ind 000D  
                                 ??_vfpfcnvrt 004A                                      stoa@nuls 0011  
                             ___aomod@counter 0012                           SPI1_WriteBlock@data 0007  
                     ??_nwkTxConvertPhyStatus 0002                       __size_of_free_tx_buffer 004E  
                     ??_nwkRouteFrameReceived 000D                       ?_nwkRouteNormalizeRanks 0001  
      nwkFrame@nwkFramePayloadSize@frame_4705 0002                              ??_nwkRouteRemove 000B  
                            _halTimerIrqCount 00E4                           ??_setPreambleLength 0013  
                            ___lldiv@quotient 001E                                   _uart_parity 0172  
                             _TMR0_Initialize 821E                               ??_set_uart_baud 0002  
                                    strcspn@c 000A                                      strcspn@i 000D  
                                    strcspn@s 0008                             _current_baud_rate 0152  
                  __end_of_get_free_tx_buffer 772E                                      strncmp@l 0009  
                                    strncmp@n 0006                    __end_of_getSpreadingFactor 8ACE  
                                    strncmp@r 000B                                      toupper@c 0008  
                  __end_of_setSpreadingFactor 536C                     __size_of_UART1_Initialize 00AA  
                    DIO0_Receive_ISR@irqFlags 0045                               _SYS_TaskHandler 8C8E  
                                 _NWK_DataReq 72D8                                      strstr@nl 0011  
                     __size_of_nwkDataReqInit 000C                                      strtoul@s 0034  
                     _CRC_CalculatedResultGet 5E20                      _UART1_TxInterruptHandler 01E9  
                 __end_of_nwkTxBroadcastFrame 4842                                 _queueLedEvent 82D4  
                                _NWK_SetPanId 8A0A                        __end_of_get_timer0base 86D2  
                               ___fladd@signs 0035                           __end_of_Default_ISR 8D82  
                             ??_nwkRouteFrame 0035                               cmdSetRFCH@CHstr 007A  
                   __size_of_processATCommand 017A                                  ___aodiv@sign 0013  
                            _nwkRxTaskHandler 6694                __end_of_PIN_MANAGER_Initialize 70CC  
                     SPI1_ReadBlock@blockSize 0005                         NWK_RouteFindEntry@dst 0002  
                                ___fladd@aexp 0036                                  ___fladd@bexp 0037  
                                 _NWK_SetAddr 8A28                                cmdBcast@buf_id 007C  
                            ?_print_hop_table 0076           __end_ofnwkFrame@nwkFramePayloadSize 8726  
                 nwkFrame@nwkFramePayloadSize 86FC                      __end_of_nwkTxAckReceived 646C  
                ?_UART1_SetTxInterruptHandler 0002                        ?_nwkRouteErrorReceived 000D  
                          _eeprom_write_flags 015F                              ??_PHY_SetChannel 002F  
                   __end_of_setPreambleLength 8AE8                                  ___aomod@sign 0013  
                         NWK_RouteFindEntry@i 0007                      get_free_tx_buffer@buf_id 0002  
                  __end_of_spi1_configuration FDD3                    nwkRxRejectDuplicate@header 0012  
              CRC_CalculatedResultGet@reverse 0010                 CRC_CalculatedResultGet@result 0011  
                       __end_of_cmdSetCADRSSI 68A0  
